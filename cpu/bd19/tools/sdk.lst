
sdk.elf:	file format ELF32-q32s

Disassembly of section .text:
text_begin:
 1e00120:    ee ff 50 18 00 00 	sp = 6224			  ## startup.S:25:0
 1e00126:    ed ff 50 18 00 00 	ssp = 6224			  ## startup.S:26:0
 1e0012c:    80 f3 f5 7e       	call 65002 <boot_info_init : 1e0ff1a >			  ## startup.S:28:0
 1e00130:    00 70             	r0 = 0			  ## startup.S:30:0
 1e00132:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## startup.S:31:0
 1e00138:    c2 ff 14 1a 00 00 	r2 = 6676 <report_bss_size : 1a14 >			  ## startup.S:32:0
 1e0013e:    92 d0             	r2 = r2 >> 2			  ## startup.S:33:0
 1e00140:    02 18             	goto 4 <text_begin+0x26 : 1e00146 >			  ## startup.S:35:0
 1e00142:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:37:0
 1e00146:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:39:0
 1e0014a:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x22 : 1e00142 >			  ## startup.S:40:0
 1e0014e:    00 70             	r0 = 0			  ## startup.S:42:0
 1e00150:    c1 ff 80 48 00 00 	r1 = 18560 <tws_sync_channel_end : 4880 >			  ## startup.S:43:0
 1e00156:    c2 ff 80 72 00 00 	r2 = 29312 <nvbss_size : 7280 >			  ## startup.S:44:0
 1e0015c:    92 d0             	r2 = r2 >> 2			  ## startup.S:45:0
 1e0015e:    02 18             	goto 4 <text_begin+0x44 : 1e00164 >			  ## startup.S:47:0
 1e00160:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:49:0
 1e00164:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:51:0
 1e00168:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x40 : 1e00160 >			  ## startup.S:52:0
 1e0016c:    c0 ff 40 08 00 00 	r0 = 2112 <set_charge_mA.charge_mA_old : 840 >			  ## startup.S:54:0
 1e00172:    c1 ff 14 ce e1 01 	r1 = 31575572 <text_end : 1e1ce14 >			  ## startup.S:55:0
 1e00178:    c2 ff 00 08 00 00 	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## startup.S:56:0
 1e0017e:    92 d0             	r2 = r2 >> 2			  ## startup.S:57:0
 1e00180:    04 18             	goto 8 <text_begin+0x6A : 1e0018a >			  ## startup.S:59:0
 1e00182:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:61:0
 1e00186:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:62:0
 1e0018a:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:64:0
 1e0018e:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x62 : 1e00182 >			  ## startup.S:65:0
 1e00192:    c0 ff 80 32 00 00 	r0 = 12928 <report_data_code_begin : 3280 >			  ## startup.S:67:0
 1e00198:    c1 ff 14 d6 e1 01 	r1 = 31577620 <data_code_begin : 1e1d614 >			  ## startup.S:68:0
 1e0019e:    c2 ff 00 16 00 00 	r2 = 5632 <report_data_code_size : 1600 >			  ## startup.S:69:0
 1e001a4:    92 d0             	r2 = r2 >> 2			  ## startup.S:70:0
 1e001a6:    04 18             	goto 8 <text_begin+0x90 : 1e001b0 >			  ## startup.S:72:0
 1e001a8:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:74:0
 1e001ac:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:75:0
 1e001b0:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:77:0
 1e001b4:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x88 : 1e001a8 >			  ## startup.S:78:0
 1e001b8:    28 fb 00 2b       	r2 = icfg			  ## startup.S:79:0
 1e001bc:    32 fd 03 2a       	r2 = r2 & 4294966527			  ## startup.S:80:0
 1e001c0:    29 fb 00 2b       	icfg = r2			  ## startup.S:81:0
 1e001c4:    80 f3 3d 6c       	call 55418 <maskrom_init : 1e0da42 >			  ## startup.S:87:0
 1e001c8:    c0 f3 bc 7e       	goto 64888 <main : 1e0ff44 >			  ## startup.S:90:0


__BT_UPDATA_JUMP:
 1e001cc:    00 70             	r0 = 0			  ## startup.S:94:0
 1e001ce:    01 fb 20 08       	r1 = 2080 <report_irq_stack_size : 820 >			  ## startup.S:95:0
 1e001d2:    02 fb 00 08       	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## startup.S:96:0
 1e001d6:    92 d0             	r2 = r2 >> 2			  ## startup.S:97:0
 1e001d8:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x12 : 1e001de >			  ## startup.S:99:0
 1e001da:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:101:0
 1e001de:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:103:0
 1e001e2:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0xE : 1e001da >			  ## startup.S:104:0
 1e001e6:    00 70             	r0 = 0			  ## startup.S:106:0
 1e001e8:    01 fb c0 13       	r1 = 5056 <UPDATE_CODE_TOTAL_SIZE+0x12C : 13c0 >			  ## startup.S:107:0
 1e001ec:    02 fb 08 01       	r2 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## startup.S:108:0
 1e001f0:    92 d0             	r2 = r2 >> 2			  ## startup.S:109:0
 1e001f2:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x2C : 1e001f8 >			  ## startup.S:110:0
 1e001f4:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:112:0
 1e001f8:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:114:0
 1e001fc:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0x28 : 1e001f4 >			  ## startup.S:115:0
 1e00200:    c1 ff 00 36 6e 01 	r1 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## startup.S:118:0
 1e00206:    c0 ff 04 fc 00 00 	r0 = 64516 <boot_arg_list+0x4 : fc04 >			  ## startup.S:119:0
 1e0020c:    09 40             	[r0 + 0] = r1			  ## startup.S:120:0
 1e0020e:    ed ff 20 0c 00 00 	ssp = 3104			  ## startup.S:122:0
 1e00214:    3d 00             	sp = ssp			  ## startup.S:123:0
 1e00216:    ec ff 20 10 00 00 	usp = 4128			  ## startup.S:124:0
 1e0021c:    00 70             	r0 = 0			  ## startup.S:125:0
 1e0021e:    01 70             	r1 = 0			  ## startup.S:126:0
 1e00220:    02 70             	r2 = 0			  ## startup.S:127:0
 1e00222:    03 70             	r3 = 0			  ## startup.S:128:0
 1e00224:    04 70             	r4 = 0			  ## startup.S:129:0
 1e00226:    05 70             	r5 = 0			  ## startup.S:130:0
 1e00228:    06 70             	r6 = 0			  ## startup.S:131:0
 1e0022a:    07 70             	r7 = 0			  ## startup.S:132:0
 1e0022c:    08 70             	r8 = 0			  ## startup.S:133:0
 1e0022e:    09 70             	r9 = 0			  ## startup.S:134:0
 1e00230:    0a 70             	r10 = 0			  ## startup.S:135:0
 1e00232:    0b 70             	r11 = 0			  ## startup.S:136:0
 1e00234:    0c 70             	r12 = 0			  ## startup.S:137:0
 1e00236:    0d 70             	r13 = 0			  ## startup.S:138:0
 1e00238:    0e 70             	r14 = 0			  ## startup.S:139:0
 1e0023a:    0f 70             	r15 = 0			  ## startup.S:140:0
 1e0023c:    29 fb 00 05       	psr = r0			  ## startup.S:141:0
 1e00240:    29 fb 00 01       	rete = r0			  ## startup.S:142:0
 1e00244:    29 fb 00 02       	retx = r0			  ## startup.S:143:0
 1e00248:    29 fb 00 03       	rets = r0			  ## startup.S:144:0
 1e0024c:    29 fb 00 00       	reti = r0			  ## startup.S:145:0
 1e00250:    e0 ff 60 60 10 00 	reti = 1073248			  ## startup.S:146:0
 1e00256:    22 00             	rti			  ## startup.S:147:0


adc_value_push:
 1e00258:    02 50             	r2 = h[r0 + 0] (u)			  ## adc_api.c:111:0
 1e0025a:    51 f8 00 02       	h[r0+r2<<1] = r1			  ## adc_api.c:113:16
 1e0025e:    12 80             	r2 += 1			  ## adc_api.c:114:8
 1e00260:    01 70             	r1 = 0			  ## adc_api.c:118:16
 1e00262:    92 e0 01 00       	if (r2 == 9) goto 2 <adc_value_push+0x10 : 1e00268 >
 1e00266:    21 08             	r1 = r2			  ## adc_api.c:118:16
 1e00268:    09 50             	h[r0 + 0] = r1			  ## adc_api.c:118:14
 1e0026a:    20 00             	rts			  ## adc_api.c:119:1


adc_pmu_ch_select:
 1e0026c:    c1 ff 94 18 1a 00 	r1 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:101:0
 1e00272:    02 62             	r2 = b[r1 + 0] (u)			  ## p33.c:101:0
 1e00274:    32 fd 1e 29       	r2 = r2 & 4294967265			  ## p33.c:101:0
 1e00278:    06 20             	if (r0 == 0) goto 12 <adc_pmu_ch_select+0x1A : 1e00286 >			  ## p33.c:101:0
 1e0027a:    40 c0             	r0 = r0 << 1			  ## p33.c:108:9
 1e0027c:    03 fb 1e e0       	r3 = -8162 <bank_code_load_addr+0x1DF40A : 1ffe01e >			  ## p33.c:108:9
 1e00280:    50 b7             	r0 &= r3			  ## p33.c:108:9
 1e00282:    50 b4             	r0 |= r2			  ## p33.c:108:9
 1e00284:    0a 18             	goto 20 <adc_pmu_ch_select+0x2E : 1e0029a >			  ## p33.c:108:9
 1e00286:    0a 62             	b[r1 + 0] = r2			  ## p33.c:103:9
 1e00288:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:104:9
 1e0028a:    90 b2             	r0 |= 32			  ## p33.c:104:9
 1e0028c:    08 62             	b[r1 + 0] = r0			  ## p33.c:104:9
 1e0028e:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:105:9
 1e00290:    10 b3             	r0 |= 64			  ## p33.c:105:9
 1e00292:    08 62             	b[r1 + 0] = r0			  ## p33.c:105:9
 1e00294:    90 62             	r0 = b[r1 + 9] (u)			  ## p33.c:106:9
 1e00296:    91 80             	r1 += 9			  ## p33.c:106:9
 1e00298:    90 b2             	r0 |= 32			  ## p33.c:106:9
 1e0029a:    08 62             	b[r1 + 0] = r0
 1e0029c:    20 00             	rts			  ## p33.c:110:1


adc_sample:
 1e0029e:    74 01             	[--sp] = {rets, r4}			  ## adc_api.c:263:0
 1e002a0:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## adc_api.c:264:29
 1e002a6:    42 53             	r2 = h[r1 + 40] (u)			  ## adc_api.c:264:29
 1e002a8:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## adc_api.c:264:29
 1e002ae:    4a 53             	h[r1 + 40] = r2			  ## adc_api.c:265:14
 1e002b0:    01 c2             	r1 = r0 << 8			  ## adc_api.c:275:5
 1e002b2:    21 fd 0f 1a       	r1 = r1 & 3840			  ## adc_api.c:275:5
 1e002b6:    22 fc 6f f0       	r2 = r2 + -3985			  ## adc_api.c:275:5
 1e002ba:    23 04             	r3 = r0.l (u)			  ## adc_api.c:277:13
 1e002bc:    e0 fd 20 41       	r4 = r1 | r2			  ## adc_api.c:275:5
 1e002c0:    d3 e0 02 10       	if (r3 != 13) goto 4 <adc_sample+0x2A : 1e002c8 >
 1e002c4:    00 d4             	r0 = r0 >> 16			  ## adc_api.c:278:30
 1e002c6:    d2 17             	call -92 <adc_pmu_ch_select : 1e0026c >			  ## adc_api.c:278:9
 1e002c8:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >
 1e002ce:    0c 40             	[r0 + 0] = r4			  ## adc_api.c:281:17
 1e002d0:    00 f4 10 09       	[r0 + 0] |= 16			  ## adc_api.c:282:17
 1e002d4:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:283:17
 1e002d8:    54 01             	{pc, r4} = [sp++]			  ## adc_api.c:283:17


adc_scan:
 1e002da:    77 01             	[--sp] = {rets, r7-r4}			  ## adc_api.c:294:0
 1e002dc:    c3 ff 70 27 00 00 	r3 = 10096 <pmu_voltage : 2770 >			  ## adc_api.c:294:0
 1e002e2:    00 f6 c4 31       	r0 = [r3 + 452]			  ## adc_api.c:297:31
 1e002e6:    f0 ef 55 10       	if (r0 != -1) goto 170 <adc_scan+0xBA : 1e00394 >
 1e002ea:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:301:17
 1e002f0:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:301:17
 1e002f2:    24 f3 4f 00       	if ((r0 & 16) != 0) goto 158 <adc_scan+0xBA : 1e00394 >			  ## adc_api.c:301:17
 1e002f6:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e002fc:    00 f9 4c 40       	r0 = b[r4 + 76] (u)
 1e00300:    13 20             	if (r0 == 0) goto 38 <adc_scan+0x4E : 1e00328 >
 1e00302:    40 59             	r0 = h[r4 + 40] (u)			  ## adc_api.c:306:35
 1e00304:    05 68             	r5 = b[r4 + 0] (u)			  ## adc_api.c:306:19
 1e00306:    29 c1             	r1 = r5 << 4			  ## adc_api.c:306:27
 1e00308:    31 09             	r1 += r3			  ## adc_api.c:306:27
 1e0030a:    10 f7 28 11       	h[r1 + 296] = r0			  ## adc_api.c:306:33
 1e0030e:    00 f6 24 11       	r0 = [r1 + 292]			  ## adc_api.c:307:31
 1e00312:    d0 e0 0b 00       	if (r0 == 13) goto 22 <adc_scan+0x52 : 1e0032c >			  ## adc_api.c:307:13
 1e00316:    c1 ff 0d 00 05 00 	r1 = 327693 <text_size+0x33319 : 5000d >
 1e0031c:    10 f2 0a 10       	if (r0 != r1) goto 20 <adc_scan+0x5A : 1e00334 >
 1e00320:    41 59             	r1 = h[r4 + 40] (u)			  ## adc_api.c:308:13
 1e00322:    40 fc a4 01       	r0 = r4 + 420			  ## adc_api.c:308:13
 1e00326:    05 18             	goto 10 <adc_scan+0x58 : 1e00332 >			  ## adc_api.c:308:13
 1e00328:    05 68             	r5 = b[r4 + 0] (u)
 1e0032a:    07 18             	goto 14 <adc_scan+0x60 : 1e0033a >
 1e0032c:    41 59             	r1 = h[r4 + 40] (u)			  ## adc_api.c:311:13
 1e0032e:    40 fc b8 01       	r0 = r4 + 440			  ## adc_api.c:311:13
 1e00332:    92 17             	call -220 <adc_value_push : 1e00258 >
 1e00334:    00 70             	r0 = 0
 1e00336:    10 f9 4c 40       	b[r4 + 76] = r0
 1e0033a:    28 c1             	r0 = r5 << 4			  ## adc_api.c:95:10
 1e0033c:    30 09             	r0 += r3			  ## adc_api.c:95:10
 1e0033e:    00 fc 34 01       	r0 = r0 + 308			  ## adc_api.c:95:10
 1e00342:    15 80             	r5 += 1
 1e00344:    95 e0 05 c0       	ifs (r5 > 9) goto 10 <adc_scan+0x78 : 1e00352 >
 1e00348:    41 f6 10 00       	r1 = [r0 ++= 16]			  ## adc_api.c:96:26
 1e0034c:    f1 ef f9 0f       	if (r1 == -1) goto -14 <adc_scan+0x68 : 1e00342 >			  ## adc_api.c:96:26
 1e00350:    01 18             	goto 2 <adc_scan+0x7A : 1e00354 >			  ## adc_api.c:96:26
 1e00352:    05 70             	r5 = 0
 1e00354:    40 05             	r0 = r5.b0 (u)			  ## adc_api.c:327:9
 1e00356:    00 c1             	r0 = r0 << 4			  ## adc_api.c:327:9
 1e00358:    30 09             	r0 += r3			  ## adc_api.c:327:9
 1e0035a:    06 fc 24 01       	r6 = r0 + 292			  ## adc_api.c:327:9
 1e0035e:    31 4c             	r1 = [r6 + 12]			  ## adc_api.c:327:28
 1e00360:    13 22             	if (r1 == 0) goto 38 <adc_scan+0xAE : 1e00388 >			  ## adc_api.c:327:9
 1e00362:    07 fc 2c 01       	r7 = r0 + 300
 1e00366:    00 4e             	r0 = [r7 + 0]			  ## adc_api.c:328:13
 1e00368:    c1 ff b0 08 00 00 	r1 = 2224 <jiffies : 8b0 >			  ## adc_api.c:328:13
 1e0036e:    01 42             	r1 = [r1 + 0]			  ## adc_api.c:328:13
 1e00370:    10 f2 0f a0       	ifs (r0 >= r1) goto 30 <adc_scan+0xB8 : 1e00392 >			  ## adc_api.c:328:13
 1e00374:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:329:43
 1e00376:    93 17             	call -218 <adc_sample : 1e0029e >			  ## adc_api.c:329:13
 1e00378:    30 4c             	r0 = [r6 + 12]			  ## adc_api.c:331:62
 1e0037a:    01 4e             	r1 = [r7 + 0]			  ## adc_api.c:331:40
 1e0037c:    12 70             	r2 = 1			  ## adc_api.c:331:40
 1e0037e:    12 f9 4c 40       	b[r4 + 76] = r2			  ## adc_api.c:331:40
 1e00382:    10 09             	r0 += r1			  ## adc_api.c:331:40
 1e00384:    08 4e             	[r7 + 0] = r0			  ## adc_api.c:331:40
 1e00386:    05 18             	goto 10 <adc_scan+0xB8 : 1e00392 >			  ## adc_api.c:331:40
 1e00388:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:334:39
 1e0038a:    89 17             	call -238 <adc_sample : 1e0029e >			  ## adc_api.c:334:9
 1e0038c:    10 70             	r0 = 1			  ## adc_api.c:334:9
 1e0038e:    10 f9 4c 40       	b[r4 + 76] = r0			  ## adc_api.c:334:9
 1e00392:    0d 68             	b[r4 + 0] = r5			  ## adc_api.c:338:12
 1e00394:    57 01             	{pc, r7-r4} = [sp++]			  ## adc_api.c:346:1


adc_isr:
 1e00396:    e9 01             	[--sp] = {psr, rets, reti}			  ## adc_api.c:253:0
 1e00398:    78 f3 1f 00       	[--sp] = {r4-r0}			  ## adc_api.c:253:0
 1e0039c:    c4 ff 00 31 1e 00 	r4 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:253:0
 1e003a2:    10 48             	r0 = [r4 + 4]			  ## adc_api.c:254:24
 1e003a4:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## adc_api.c:254:14
 1e003aa:    48 53             	h[r1 + 40] = r0			  ## adc_api.c:254:14
 1e003ac:    98 f3 f6 34       	call 3172844 <local_irq_disable : 106d9c >			  ## adc_api.c:257:5
 1e003b0:    c0 f4 40 49       	[r4 + 0] = 64			  ## adc_api.c:258:17
 1e003b4:    98 f3 f0 34       	call 3172832 <local_irq_enable : 106d98 >			  ## adc_api.c:259:5
 1e003b8:    70 f3 1f 00       	{r4-r0} = [sp++]			  ## adc_api.c:260:1
 1e003bc:    a9 01             	{psr, rets, reti} = [sp++]			  ## adc_api.c:260:1
 1e003be:    22 00             	rti			  ## adc_api.c:260:1


adc_value_avg:
 1e003c0:    20 80             	r0 += 2			  ## adc_api.c:122:0
 1e003c2:    01 70             	r1 = 0
 1e003c4:    02 70             	r2 = 0
 1e003c6:    04 18             	goto 8 <adc_value_avg+0x10 : 1e003d0 >
 1e003c8:    03 f8 00 01       	r3 = h[r0+r1] (u)			  ## adc_api.c:125:16
 1e003cc:    32 09             	r2 += r3			  ## adc_api.c:125:13
 1e003ce:    21 80             	r1 += 2			  ## adc_api.c:124:5
 1e003d0:    01 e1 fa 1f       	if (r1 != 16) goto -12 <adc_value_avg+0x8 : 1e003c8 >
 1e003d4:    90 fd 18 02       	r0 = uextra(r2, p:3, l:16)			  ## adc_api.c:127:5
 1e003d8:    20 00             	rts			  ## adc_api.c:127:5


adc_get_value:
 1e003da:    c1 ff 64 25 00 00 	r1 = 9572 <vbat_value_array : 2564 >			  ## adc_api.c:131:0
 1e003e0:    d0 e0 14 00       	if (r0 == 13) goto 40 <adc_get_value+0x32 : 1e0040c >			  ## adc_api.c:131:0
 1e003e4:    c2 ff 0d 00 05 00 	r2 = 327693 <text_size+0x33319 : 5000d >			  ## adc_api.c:131:0
 1e003ea:    20 f2 10 00       	if (r0 == r2) goto 32 <adc_get_value+0x34 : 1e0040e >			  ## adc_api.c:131:0
 1e003ee:    c1 ff 98 28 00 00 	r1 = 10392 <adc_queue+0x4 : 2898 >			  ## adc_api.c:131:0
 1e003f4:    02 70             	r2 = 0			  ## adc_api.c:131:0
 1e003f6:    06 18             	goto 12 <adc_get_value+0x2A : 1e00404 >			  ## adc_api.c:131:0
 1e003f8:    03 f6 fc 1f       	r3 = [r1 + -4]			  ## adc_api.c:139:26
 1e003fc:    03 f2 09 00       	if (r3 == r0) goto 18 <adc_get_value+0x38 : 1e00412 >			  ## adc_api.c:139:13
 1e00400:    01 81             	r1 += 16			  ## adc_api.c:138:5
 1e00402:    12 80             	r2 += 1			  ## adc_api.c:138:38
 1e00404:    92 e0 f8 df       	ifs (r2 <= 9) goto -16 <adc_get_value+0x1E : 1e003f8 >
 1e00408:    10 70             	r0 = 1
 1e0040a:    20 00             	rts
 1e0040c:    41 81             	r1 += 20
 1e0040e:    10 08             	r0 = r1			  ## adc_api.c:135:16
 1e00410:    d7 1f             	goto -82 <adc_value_avg : 1e003c0 >			  ## adc_api.c:135:16
 1e00412:    00 52             	r0 = h[r1 + 0] (u)			  ## adc_api.c:140:20
 1e00414:    20 00             	rts


adc_value_to_voltage:
 1e00416:    74 01             	[--sp] = {rets, r4}			  ## adc_api.c:148:0
 1e00418:    c2 ff 00 08 00 00 	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e0041e:    f2 54             	r2 = h[r2 + 30] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e00420:    14 d1             	r4 = r2 >> 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:34
 1e00422:    22 fd 0f 49       	r2 = r4 & 15			  ## adc_api.c:153:21
 1e00426:    03 fe 03 29       	r3 = r2 * 3
 1e0042a:    62 fb 00 39       	r2 = 0 - r3			  ## adc_api.c:154:11
 1e0042e:    24 f3 01 40       	if ((r4 & 16) != 0) goto 2 <adc_value_to_voltage+0x1E : 1e00434 >
 1e00432:    32 08             	r2 = r3			  ## adc_api.c:154:11
 1e00434:    22 fc 21 03       	r2 = r2 + 801			  ## adc_api.c:154:11
 1e00438:    51 0e             	r1 = r2 * r1			  ## adc_api.c:155:23
 1e0043a:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## adc_api.c:155:29
 1e0043e:    54 01             	{pc, r4} = [sp++]			  ## adc_api.c:157:5


adc_get_voltage:
 1e00440:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:161:0
 1e00442:    04 08             	r4 = r0			  ## adc_api.c:161:0
 1e00444:    d0 70             	r0 = 13			  ## adc_api.c:166:19
 1e00446:    c9 17             	call -110 <adc_get_value : 1e003da >			  ## adc_api.c:166:19
 1e00448:    05 08             	r5 = r0			  ## adc_api.c:166:19
 1e0044a:    40 08             	r0 = r4			  ## adc_api.c:167:19
 1e0044c:    c6 17             	call -116 <adc_get_value : 1e003da >			  ## adc_api.c:167:19
 1e0044e:    01 08             	r1 = r0			  ## adc_api.c:167:19
 1e00450:    50 08             	r0 = r5			  ## adc_api.c:168:12
 1e00452:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:168:12
 1e00454:    e0 1f             	goto -64 <adc_value_to_voltage : 1e00416 >			  ## adc_api.c:168:12


set_charge_mA:
 1e00456:    c1 ff 40 08 00 00 	r1 = 2112 <set_charge_mA.charge_mA_old : 840 >			  ## charge.c:329:0
 1e0045c:    02 62             	r2 = b[r1 + 0] (u)			  ## charge.c:331:9
 1e0045e:    02 f2 0a 00       	if (r2 == r0) goto 20 <set_charge_mA+0x20 : 1e00476 >			  ## charge.c:331:9
 1e00462:    08 62             	b[r1 + 0] = r0			  ## charge.c:332:23
 1e00464:    c1 ff 1b 18 1a 00 	r1 = 1710107 <uECC_vli_cmp_unsafe+0x9A81F : 1a181b >			  ## charge.c:332:23
 1e0046a:    02 62             	r2 = b[r1 + 0] (u)			  ## charge.c:333:9
 1e0046c:    22 fd 0f 29       	r2 = r2 & 15			  ## charge.c:333:9
 1e00470:    c8 fd 20 20       	r2 <= insert(r0, p:4, l:8)			  ## charge.c:333:9
 1e00474:    0a 62             	b[r1 + 0] = r2			  ## charge.c:333:9
 1e00476:    20 00             	rts			  ## charge.c:335:1


charge_cc_check:
 1e00478:    74 01             	[--sp] = {rets, r4}			  ## charge.c:155:0
 1e0047a:    c0 ff 0d 00 05 00 	r0 = 327693 <text_size+0x33319 : 5000d >			  ## charge.c:156:10
 1e00480:    df 17             	call -66 <adc_get_voltage : 1e00440 >			  ## charge.c:156:10
 1e00482:    80 c0             	r0 = r0 << 2			  ## charge.c:156:38
 1e00484:    40 d0             	r0 = r0 >> 1			  ## charge.c:156:9
 1e00486:    03 ff e1 05 0c 00 	if (r0 < 1505) goto 24 <charge_cc_check+0x2C : 1e004a4 >			  ## charge.c:156:9
 1e0048c:    c4 ff 8c 25 00 00 	r4 = 9612 <charge_var : 258c >			  ## charge.c:158:31
 1e00492:    00 48             	r0 = [r4 + 0]			  ## charge.c:157:31
 1e00494:    40 60             	r0 = b[r0 + 4] (u)			  ## charge.c:157:9
 1e00496:    df 17             	call -66 <set_charge_mA : 1e00456 >			  ## charge.c:157:9
 1e00498:    40 48             	r0 = [r4 + 16]			  ## charge.c:158:31
 1e0049a:    20 04             	r0 = r0.l (u)			  ## charge.c:158:9
 1e0049c:    80 f3 f1 5d       	call 48098 <sys_timer_del : 1e0c082 >			  ## charge.c:158:9
 1e004a0:    c4 f4 00 49       	[r4 + 16] = 0			  ## charge.c:159:26
 1e004a4:    54 01             	{pc, r4} = [sp++]			  ## charge.c:161:1


power_set_charge_mode:
 1e004a6:    c1 ff f4 20 00 00 	r1 = 8436 <charge_mode : 20f4 >			  ## power_hw.c:1402:0
 1e004ac:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:1403:17
 1e004ae:    20 00             	rts			  ## power_hw.c:1404:1


dcdc13_on_common:
 1e004b0:    c0 ff 97 18 1a 00 	r0 = 1710231 <uECC_vli_cmp_unsafe+0x9A89B : 1a1897 >			  ## pmu_analog.c:28:0
 1e004b6:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:29:5
 1e004b8:    21 fd f3 19       	r1 = r1 & 243			  ## pmu_analog.c:29:5
 1e004bc:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:29:5
 1e004be:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:30:5
 1e004c0:    21 fd f3 19       	r1 = r1 & 243			  ## pmu_analog.c:30:5
 1e004c4:    11 b1             	r1 |= 4			  ## pmu_analog.c:30:5
 1e004c6:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:30:5
 1e004c8:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:31:5
 1e004ca:    71 b2             	r1 &= 4294967279			  ## pmu_analog.c:31:5
 1e004cc:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:31:5
 1e004ce:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:32:5
 1e004d0:    21 fd cf 19       	r1 = r1 & 207			  ## pmu_analog.c:32:5
 1e004d4:    91 b2             	r1 |= 32			  ## pmu_analog.c:32:5
 1e004d6:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:32:5
 1e004d8:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:33:5
 1e004da:    21 fd fc 19       	r1 = r1 & 252			  ## pmu_analog.c:33:5
 1e004de:    91 b0             	r1 |= 2			  ## pmu_analog.c:33:5
 1e004e0:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:33:5
 1e004e2:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:34:5
 1e004e4:    21 fd 3f 19       	r1 = r1 & 63			  ## pmu_analog.c:34:5
 1e004e8:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:34:5
 1e004ea:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:35:5
 1e004ec:    21 fd 1f 19       	r1 = r1 & 31			  ## pmu_analog.c:35:5
 1e004f0:    11 b3             	r1 |= 64			  ## pmu_analog.c:35:5
 1e004f2:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:35:5
 1e004f4:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:36:5
 1e004f6:    21 fd e7 19       	r1 = r1 & 231			  ## pmu_analog.c:36:5
 1e004fa:    11 b2             	r1 |= 16			  ## pmu_analog.c:36:5
 1e004fc:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:36:5
 1e004fe:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:37:5
 1e00500:    11 b0             	r1 |= 1			  ## pmu_analog.c:37:5
 1e00502:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:37:5
 1e00504:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:38:5
 1e00506:    f1 b0             	r1 &= 4294967293			  ## pmu_analog.c:38:5
 1e00508:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:38:5
 1e0050a:    21 60             	r1 = b[r0 + 2] (u)			  ## pmu_analog.c:39:5
 1e0050c:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:39:5
 1e00510:    01 fd 07 19       	r1 = r1 | 7			  ## pmu_analog.c:39:5
 1e00514:    29 60             	b[r0 + 2] = r1			  ## pmu_analog.c:39:5
 1e00516:    21 60             	r1 = b[r0 + 2] (u)			  ## pmu_analog.c:40:5
 1e00518:    21 fd 0f 19       	r1 = r1 & 15			  ## pmu_analog.c:40:5
 1e0051c:    01 fd 70 19       	r1 = r1 | 112			  ## pmu_analog.c:40:5
 1e00520:    29 60             	b[r0 + 2] = r1			  ## pmu_analog.c:40:5
 1e00522:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:41:5
 1e00524:    71 b1             	r1 &= 4294967291			  ## pmu_analog.c:41:5
 1e00526:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:41:5
 1e00528:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:42:5
 1e0052a:    11 b0             	r1 |= 1			  ## pmu_analog.c:42:5
 1e0052c:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:42:5
 1e0052e:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:43:5
 1e00530:    f1 b0             	r1 &= 4294967293			  ## pmu_analog.c:43:5
 1e00532:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:43:5
 1e00534:    20 00             	rts			  ## pmu_analog.c:44:1


power_set_mode:
 1e00536:    34 00             	[--sp] = rets			  ## power_hw.c:1373:0
 1e00538:    c1 ff 80 48 00 00 	r1 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:1373:0
 1e0053e:    82 63             	r2 = b[r1 + 24] (u)			  ## power_hw.c:1375:17
 1e00540:    02 f2 39 00       	if (r2 == r0) goto 114 <power_set_mode+0x80 : 1e005b6 >			  ## power_hw.c:1375:17
 1e00544:    40 e0 05 00       	if (r0 == 4) goto 10 <power_set_mode+0x1C : 1e00552 >
 1e00548:    c2 ff f4 20 00 00 	r2 = 8436 <charge_mode : 20f4 >			  ## power_hw.c:1380:9
 1e0054e:    02 64             	r2 = b[r2 + 0] (u)			  ## power_hw.c:1380:9
 1e00550:    32 34             	if (r2 != 0) goto 100 <power_set_mode+0x80 : 1e005b6 >			  ## power_hw.c:1380:9
 1e00552:    88 63             	b[r1 + 24] = r0			  ## power_hw.c:1386:18
 1e00554:    c2 ff 90 18 1a 00 	r2 = 1710224 <uECC_vli_cmp_unsafe+0x9A894 : 1a1890 >			  ## power_hw.c:1386:18
 1e0055a:    20 e0 13 00       	if (r0 == 2) goto 38 <power_set_mode+0x4E : 1e00584 >			  ## power_hw.c:1388:9
 1e0055e:    40 e0 1c 00       	if (r0 == 4) goto 56 <power_set_mode+0x64 : 1e0059a >
 1e00562:    30 e0 28 10       	if (r0 != 3) goto 80 <power_set_mode+0x80 : 1e005b6 >
 1e00566:    a4 17             	call -184 <dcdc13_on_common : 1e004b0 >			  ## pmu_analog.c:48:5
 1e00568:    60 64             	r0 = b[r2 + 6] (u)			  ## pmu_analog.c:51:5
 1e0056a:    10 b3             	r0 |= 64			  ## pmu_analog.c:51:5
 1e0056c:    68 64             	b[r2 + 6] = r0			  ## pmu_analog.c:51:5
 1e0056e:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:54:5
 1e00570:    90 b1             	r0 |= 8			  ## pmu_analog.c:54:5
 1e00572:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:54:5
 1e00574:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## pmu_analog.c:56:5
 1e00578:    90 f3 82 17       	call 2109188 <delay_nus : 3480 >			  ## pmu_analog.c:56:5
 1e0057c:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:57:5
 1e0057e:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:57:5
 1e00580:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:57:5
 1e00582:    30 00             	pc = [sp++]			  ## power_hw.c:1399:1
 1e00584:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:81:5
 1e00586:    10 b1             	r0 |= 4			  ## pmu_analog.c:81:5
 1e00588:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:81:5
 1e0058a:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:82:5
 1e0058c:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:82:5
 1e0058e:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:82:5
 1e00590:    60 64             	r0 = b[r2 + 6] (u)			  ## pmu_analog.c:84:5
 1e00592:    70 b3             	r0 &= 4294967231			  ## pmu_analog.c:84:5
 1e00594:    68 64             	b[r2 + 6] = r0			  ## pmu_analog.c:84:5
 1e00596:    10 70             	r0 = 1			  ## pmu_analog.c:86:5
 1e00598:    0c 18             	goto 24 <power_set_mode+0x7C : 1e005b2 >			  ## pmu_analog.c:86:5
 1e0059a:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:64:5
 1e0059c:    10 b1             	r0 |= 4			  ## pmu_analog.c:64:5
 1e0059e:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:64:5
 1e005a0:    87 17             	call -242 <dcdc13_on_common : 1e004b0 >			  ## pmu_analog.c:66:5
 1e005a2:    60 64             	r0 = b[r2 + 6] (u)			  ## pmu_analog.c:69:5
 1e005a4:    10 b3             	r0 |= 64			  ## pmu_analog.c:69:5
 1e005a6:    68 64             	b[r2 + 6] = r0			  ## pmu_analog.c:69:5
 1e005a8:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:72:5
 1e005aa:    90 b1             	r0 |= 8			  ## pmu_analog.c:72:5
 1e005ac:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:72:5
 1e005ae:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## pmu_analog.c:74:5
 1e005b2:    90 f3 65 17       	call 2109130 <delay_nus : 3480 >
 1e005b6:    30 00             	pc = [sp++]			  ## power_hw.c:1399:1


power_enter_charge_mode:
 1e005b8:    34 00             	[--sp] = rets			  ## charge.c:139:0
 1e005ba:    10 70             	r0 = 1			  ## charge.c:141:9
 1e005bc:    74 17             	call -280 <power_set_charge_mode : 1e004a6 >			  ## charge.c:141:9
 1e005be:    40 70             	r0 = 4			  ## charge.c:142:9
 1e005c0:    88 01             	{rets} = [sp++]			  ## charge.c:142:9
 1e005c2:    b9 1f             	goto -142 <power_set_mode : 1e00536 >			  ## charge.c:142:9


charge_event_to_user:
 1e005c4:    34 00             	[--sp] = rets			  ## charge.c:129:0
 1e005c6:    f4 0b             	sp += -24			  ## charge.c:129:0
 1e005c8:    41 70             	r1 = 4			  ## charge.c:129:0
 1e005ca:    91 f5 00 00       	h[sp] = r1			  ## charge.c:131:12
 1e005ce:    c1 ff 00 47 48 43 	r1 = 1128810240 <uECC_vli_cmp_unsafe+0x137D704 : 1484700 >			  ## charge.c:132:12
 1e005d4:    19 02             	[sp+4] = r1			  ## charge.c:132:12
 1e005d6:    d0 f5 08 00       	b[sp+8] = r0			  ## charge.c:133:19
 1e005da:    00 70             	r0 = 0			  ## charge.c:133:19
 1e005dc:    38 02             	[sp+12] = r0			  ## charge.c:134:19
 1e005de:    00 a0             	r0 = sp + 0			  ## charge.c:134:19
 1e005e0:    80 f3 e7 70       	call 57806 <sys_event_notify : 1e0e7b2 >			  ## charge.c:135:5
 1e005e4:    0c 0a             	sp += 24
 1e005e6:    30 00             	pc = [sp++]			  ## charge.c:136:1


power_exit_charge_mode:
 1e005e8:    34 00             	[--sp] = rets			  ## charge.c:147:0
 1e005ea:    00 70             	r0 = 0			  ## charge.c:149:9
 1e005ec:    5c 17             	call -328 <power_set_charge_mode : 1e004a6 >			  ## charge.c:149:9
 1e005ee:    30 70             	r0 = 3			  ## charge.c:150:9
 1e005f0:    88 01             	{rets} = [sp++]			  ## charge.c:150:9
 1e005f2:    a1 1f             	goto -190 <power_set_mode : 1e00536 >			  ## charge.c:150:9


ldo5v_detect:
 1e005f4:    77 01             	[--sp] = {rets, r7-r4}			  ## charge.c:234:0
 1e005f6:    c0 ff 19 18 1a 00 	r0 = 1710105 <uECC_vli_cmp_unsafe+0x9A81D : 1a1819 >			  ## charge.c:234:0
 1e005fc:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:241:9
 1e005fe:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## charge.c:241:9
 1e00604:    22 f3 0d 10       	if ((r1 & 4) != 0) goto 26 <ldo5v_detect+0x2E : 1e00622 >			  ## charge.c:241:9
 1e00608:    00 60             	r0 = b[r0 + 0] (u)			  ## charge.c:259:16
 1e0060a:    23 f3 13 00       	if ((r0 & 8) != 0) goto 38 <ldo5v_detect+0x40 : 1e00634 >			  ## charge.c:259:16
 1e0060e:    00 f6 cc 41       	r0 = [r4 + 460]			  ## charge.c:261:38
 1e00612:    41 50             	r1 = h[r0 + 8] (u)			  ## charge.c:261:30
 1e00614:    60 59             	r0 = h[r4 + 44] (u)			  ## charge.c:261:13
 1e00616:    a1 80             	r1 += 10			  ## charge.c:261:61
 1e00618:    10 f2 29 20       	if (r0 >= r1) goto 82 <ldo5v_detect+0x7A : 1e0066e >			  ## charge.c:261:13
 1e0061c:    10 80             	r0 += 1			  ## charge.c:262:26
 1e0061e:    68 59             	h[r4 + 44] = r0			  ## charge.c:262:26
 1e00620:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1
 1e00622:    01 f6 cc 41       	r1 = [r4 + 460]			  ## charge.c:243:36
 1e00626:    50 59             	r0 = h[r4 + 42] (u)			  ## charge.c:243:13
 1e00628:    51 52             	r1 = h[r1 + 10] (u)			  ## charge.c:243:42
 1e0062a:    10 f2 0c 20       	if (r0 >= r1) goto 24 <ldo5v_detect+0x52 : 1e00646 >			  ## charge.c:243:13
 1e0062e:    10 80             	r0 += 1			  ## charge.c:244:25
 1e00630:    58 59             	h[r4 + 42] = r0			  ## charge.c:244:25
 1e00632:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1
 1e00634:    01 f6 cc 41       	r1 = [r4 + 460]			  ## charge.c:279:38
 1e00638:    70 59             	r0 = h[r4 + 46] (u)			  ## charge.c:279:13
 1e0063a:    61 52             	r1 = h[r1 + 12] (u)			  ## charge.c:279:44
 1e0063c:    10 f2 2b 20       	if (r0 >= r1) goto 86 <ldo5v_detect+0xA2 : 1e00696 >			  ## charge.c:279:13
 1e00640:    10 80             	r0 += 1			  ## charge.c:280:27
 1e00642:    78 59             	h[r4 + 46] = r0			  ## charge.c:280:27
 1e00644:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1
 1e00646:    15 70             	r5 = 1
 1e00648:    46 fc d0 01       	r6 = r4 + 464
 1e0064c:    0d 6c             	b[r6 + 0] = r5			  ## charge.c:91:32
 1e0064e:    07 70             	r7 = 0			  ## charge.c:91:32
 1e00650:    6f 59             	h[r4 + 44] = r7			  ## charge.c:248:27
 1e00652:    5f 59             	h[r4 + 42] = r7			  ## charge.c:249:26
 1e00654:    7f 59             	h[r4 + 46] = r7			  ## charge.c:250:28
 1e00656:    10 4c             	r0 = [r6 + 4]			  ## charge.c:251:35
 1e00658:    20 04             	r0 = r0.l (u)			  ## charge.c:251:13
 1e0065a:    80 f3 13 5d       	call 47654 <usr_timer_del : 1e0c084 >			  ## charge.c:251:13
 1e0065e:    1f 4c             	[r6 + 4] = r7			  ## charge.c:252:33
 1e00660:    ab 17             	call -170 <power_enter_charge_mode : 1e005b8 >			  ## charge.c:253:13
 1e00662:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:254:18
 1e00664:    20 f3 30 00       	if ((r0 & 1) != 0) goto 96 <ldo5v_detect+0xD4 : 1e006c8 >			  ## charge.c:254:18
 1e00668:    1d 68             	b[r4 + 1] = r5			  ## charge.c:255:29
 1e0066a:    40 70             	r0 = 4			  ## charge.c:256:17
 1e0066c:    2c 18             	goto 88 <ldo5v_detect+0xD2 : 1e006c6 >			  ## charge.c:256:17
 1e0066e:    05 70             	r5 = 0
 1e00670:    46 fc d0 01       	r6 = r4 + 464
 1e00674:    0d 6c             	b[r6 + 0] = r5			  ## charge.c:91:32
 1e00676:    6d 59             	h[r4 + 44] = r5			  ## charge.c:266:27
 1e00678:    5d 59             	h[r4 + 42] = r5			  ## charge.c:267:26
 1e0067a:    7d 59             	h[r4 + 46] = r5			  ## charge.c:268:28
 1e0067c:    10 4c             	r0 = [r6 + 4]			  ## charge.c:269:35
 1e0067e:    20 04             	r0 = r0.l (u)			  ## charge.c:269:13
 1e00680:    80 f3 00 5d       	call 47616 <usr_timer_del : 1e0c084 >			  ## charge.c:269:13
 1e00684:    1d 4c             	[r6 + 4] = r5			  ## charge.c:270:33
 1e00686:    b0 17             	call -160 <power_exit_charge_mode : 1e005e8 >			  ## charge.c:271:13
 1e00688:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:272:18
 1e0068a:    21 f3 1d 00       	if ((r0 & 2) != 0) goto 58 <ldo5v_detect+0xD4 : 1e006c8 >			  ## charge.c:272:18
 1e0068e:    20 70             	r0 = 2			  ## charge.c:273:29
 1e00690:    18 68             	b[r4 + 1] = r0			  ## charge.c:273:29
 1e00692:    50 70             	r0 = 5			  ## charge.c:274:17
 1e00694:    18 18             	goto 48 <ldo5v_detect+0xD2 : 1e006c6 >			  ## charge.c:274:17
 1e00696:    10 70             	r0 = 1
 1e00698:    45 fc d0 01       	r5 = r4 + 464
 1e0069c:    08 6a             	b[r5 + 0] = r0			  ## charge.c:91:32
 1e0069e:    06 70             	r6 = 0			  ## charge.c:91:32
 1e006a0:    6e 59             	h[r4 + 44] = r6			  ## charge.c:284:27
 1e006a2:    5e 59             	h[r4 + 42] = r6			  ## charge.c:285:26
 1e006a4:    7e 59             	h[r4 + 46] = r6			  ## charge.c:286:28
 1e006a6:    10 4a             	r0 = [r5 + 4]			  ## charge.c:287:35
 1e006a8:    20 04             	r0 = r0.l (u)			  ## charge.c:287:13
 1e006aa:    80 f3 eb 5c       	call 47574 <usr_timer_del : 1e0c084 >			  ## charge.c:287:13
 1e006ae:    9c 17             	call -200 <power_exit_charge_mode : 1e005e8 >			  ## charge.c:288:13
 1e006b0:    1e 4a             	[r5 + 4] = r6			  ## charge.c:289:33
 1e006b2:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:290:18
 1e006b4:    22 f3 08 00       	if ((r0 & 4) != 0) goto 16 <ldo5v_detect+0xD4 : 1e006c8 >			  ## charge.c:290:18
 1e006b8:    40 70             	r0 = 4			  ## charge.c:291:29
 1e006ba:    18 68             	b[r4 + 1] = r0			  ## charge.c:291:29
 1e006bc:    00 f6 cc 41       	r0 = [r4 + 460]			  ## charge.c:292:29
 1e006c0:    40 50             	r0 = h[r0 + 8] (u)			  ## charge.c:292:35
 1e006c2:    02 20             	if (r0 == 0) goto 4 <ldo5v_detect+0xD4 : 1e006c8 >			  ## charge.c:292:35
 1e006c4:    30 70             	r0 = 3			  ## charge.c:293:21
 1e006c6:    7e 17             	call -260 <charge_event_to_user : 1e005c4 >
 1e006c8:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1


power_wakeup_enable_with_port:
 1e006ca:    7a 01             	[--sp] = {rets, r10-r4}			  ## power_wakeup.c:896:0
 1e006cc:    04 70             	r4 = 0			  ## power_wakeup.c:896:0
 1e006ce:    c9 ff c0 23 00 00 	r9 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:896:0
 1e006d4:    18 70             	r8 = 1			  ## power_wakeup.c:896:0
 1e006d6:    ca ff 50 18 1a 00 	r10 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >			  ## power_wakeup.c:896:0
 1e006dc:    06 70             	r6 = 0			  ## power_wakeup.c:896:0
 1e006de:    00 f6 c8 90       	r0 = [r9 + 200]			  ## power_wakeup.c:899:16
 1e006e2:    80 f6 00 04       	r0 = [r0+r4]			  ## power_wakeup.c:899:16
 1e006e6:    40 60             	r0 = b[r0 + 4] (u)			  ## power_wakeup.c:900:19
 1e006e8:    50 e3 16 10       	if (r0 != 53) goto 44 <power_wakeup_enable_with_port+0x4E : 1e00718 >
 1e006ec:    f8 fd 60 58       	r5 = r8 << r6			  ## power_wakeup.c:863:23
 1e006f0:    2f d2             	r7 = r5 >> 8			  ## power_wakeup.c:99:1
 1e006f2:    98 f3 53 33       	call 3172006 <local_irq_disable : 106d9c >			  ## power_wakeup.c:862:5
 1e006f6:    08 00             	csync			  ## power_wakeup.c:862:5
 1e006f8:    17 f9 09 a0       	b[r10 + 9] = r7			  ## power_wakeup.c:101:1
 1e006fc:    15 f9 08 a0       	b[r10 + 8] = r5			  ## power_wakeup.c:101:1
 1e00700:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## power_wakeup.c:99:1
 1e00704:    50 be             	r0 |= r7			  ## power_wakeup.c:99:1
 1e00706:    10 f9 01 a0       	b[r10 + 1] = r0			  ## power_wakeup.c:99:1
 1e0070a:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## power_wakeup.c:99:1
 1e0070e:    50 ba             	r0 |= r5			  ## power_wakeup.c:99:1
 1e00710:    10 f9 00 a0       	b[r10 + 0] = r0			  ## power_wakeup.c:99:1
 1e00714:    98 f3 40 33       	call 3171968 <local_irq_enable : 106d98 >			  ## power_wakeup.c:865:5
 1e00718:    16 80             	r6 += 1			  ## power_wakeup.c:898:42
 1e0071a:    44 80             	r4 += 4			  ## power_wakeup.c:898:22
 1e0071c:    c6 e0 df 1f       	if (r6 != 12) goto -66 <power_wakeup_enable_with_port+0x14 : 1e006de >			  ## power_wakeup.c:898:22
 1e00720:    5a 01             	{pc, r10-r4} = [sp++]			  ## power_wakeup.c:904:1


charge_full_detect:
 1e00722:    75 01             	[--sp] = {rets, r5, r4}			  ## charge.c:211:0
 1e00724:    c0 ff 19 18 1a 00 	r0 = 1710105 <uECC_vli_cmp_unsafe+0x9A81D : 1a1819 >			  ## charge.c:211:0
 1e0072a:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:214:9
 1e0072c:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## charge.c:214:9
 1e00732:    00 f3 03 10       	if ((r1 & 1) == 0) goto 6 <charge_full_detect+0x1A : 1e0073c >			  ## charge.c:214:9
 1e00736:    00 60             	r0 = b[r0 + 0] (u)			  ## charge.c:214:35
 1e00738:    22 f3 0b 00       	if ((r0 & 4) != 0) goto 22 <charge_full_detect+0x30 : 1e00752 >			  ## charge.c:214:35
 1e0073c:    05 70             	r5 = 0
 1e0073e:    8d 59             	h[r4 + 48] = r5			  ## charge.c:226:25
 1e00740:    00 f6 d8 41       	r0 = [r4 + 472]			  ## charge.c:227:31
 1e00744:    20 04             	r0 = r0.l (u)			  ## charge.c:227:9
 1e00746:    80 f3 9d 5c       	call 47418 <usr_timer_del : 1e0c084 >			  ## charge.c:227:9
 1e0074a:    15 f6 d8 41       	[r4 + 472] = r5			  ## charge.c:228:30
 1e0074e:    15 01             	{rets, r5, r4} = [sp++]			  ## charge.c:229:9
 1e00750:    bc 1f             	goto -136 <power_wakeup_enable_with_port : 1e006ca >			  ## charge.c:229:9
 1e00752:    80 59             	r0 = h[r4 + 48] (u)			  ## charge.c:216:13
 1e00754:    40 e0 03 80       	if (r0 > 4) goto 6 <charge_full_detect+0x3C : 1e0075e >			  ## charge.c:216:13
 1e00758:    10 80             	r0 += 1			  ## charge.c:217:28
 1e0075a:    88 59             	h[r4 + 48] = r0			  ## charge.c:217:28
 1e0075c:    55 01             	{pc, r5, r4} = [sp++]			  ## charge.c:231:1
 1e0075e:    05 70             	r5 = 0
 1e00760:    8d 59             	h[r4 + 48] = r5			  ## charge.c:219:29
 1e00762:    00 f6 d8 41       	r0 = [r4 + 472]			  ## charge.c:220:35
 1e00766:    20 04             	r0 = r0.l (u)			  ## charge.c:220:13
 1e00768:    80 f3 8c 5c       	call 47384 <usr_timer_del : 1e0c084 >			  ## charge.c:220:13
 1e0076c:    15 f6 d8 41       	[r4 + 472] = r5			  ## charge.c:221:34
 1e00770:    20 70             	r0 = 2			  ## charge.c:222:13
 1e00772:    15 01             	{rets, r5, r4} = [sp++]			  ## charge.c:222:13
 1e00774:    27 1f             	goto -434 <charge_event_to_user : 1e005c4 >			  ## charge.c:222:13


cpu_reset:
 1e00776:    d0 f3 8e 16       	goto 2108700 <p33_soft_reset : 3496 >			  ## cpu.h:146:0


power_wakeup_disable_with_port:
 1e0077a:    7a 01             	[--sp] = {rets, r10-r4}			  ## power_wakeup.c:918:0
 1e0077c:    04 70             	r4 = 0			  ## power_wakeup.c:918:0
 1e0077e:    c9 ff c0 23 00 00 	r9 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:918:0
 1e00784:    18 70             	r8 = 1			  ## power_wakeup.c:918:0
 1e00786:    ca ff 50 18 1a 00 	r10 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >			  ## power_wakeup.c:918:0
 1e0078c:    06 70             	r6 = 0			  ## power_wakeup.c:918:0
 1e0078e:    00 f6 c8 90       	r0 = [r9 + 200]			  ## power_wakeup.c:921:16
 1e00792:    80 f6 00 04       	r0 = [r0+r4]			  ## power_wakeup.c:921:16
 1e00796:    40 60             	r0 = b[r0 + 4] (u)			  ## power_wakeup.c:922:19
 1e00798:    50 e3 18 10       	if (r0 != 53) goto 48 <power_wakeup_disable_with_port+0x52 : 1e007cc >
 1e0079c:    f8 fd 60 58       	r5 = r8 << r6			  ## power_wakeup.c:881:23
 1e007a0:    2f d2             	r7 = r5 >> 8			  ## power_wakeup.c:99:1
 1e007a2:    98 f3 fb 32       	call 3171830 <local_irq_disable : 106d9c >			  ## power_wakeup.c:880:5
 1e007a6:    08 00             	csync			  ## power_wakeup.c:880:5
 1e007a8:    17 f9 09 a0       	b[r10 + 9] = r7			  ## power_wakeup.c:101:1
 1e007ac:    15 f9 08 a0       	b[r10 + 8] = r5			  ## power_wakeup.c:101:1
 1e007b0:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## power_wakeup.c:99:1
 1e007b4:    e3 fd 70 00       	r0 = r0 & ~r7			  ## power_wakeup.c:99:1
 1e007b8:    10 f9 01 a0       	b[r10 + 1] = r0			  ## power_wakeup.c:99:1
 1e007bc:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## power_wakeup.c:99:1
 1e007c0:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:99:1
 1e007c4:    10 f9 00 a0       	b[r10 + 0] = r0			  ## power_wakeup.c:99:1
 1e007c8:    98 f3 e6 32       	call 3171788 <local_irq_enable : 106d98 >			  ## power_wakeup.c:883:5
 1e007cc:    16 80             	r6 += 1			  ## power_wakeup.c:920:42
 1e007ce:    44 80             	r4 += 4			  ## power_wakeup.c:920:22
 1e007d0:    c6 e0 dd 1f       	if (r6 != 12) goto -70 <power_wakeup_disable_with_port+0x14 : 1e0078e >			  ## power_wakeup.c:920:22
 1e007d4:    5a 01             	{pc, r10-r4} = [sp++]			  ## power_wakeup.c:926:1


timer1_resume:
 1e007d6:    76 01             	[--sp] = {rets, r6-r4}			  ## timer.c:142:0
 1e007d8:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:142:0
 1e007de:    01 f9 ac 00       	r1 = b[r0 + 172] (u)			  ## timer.c:142:0
 1e007e2:    22 22             	if (r1 == 0) goto 68 <timer1_resume+0x52 : 1e00828 >			  ## timer.c:142:0
 1e007e4:    01 f6 a0 00       	r1 = [r0 + 160]			  ## timer.c:142:0
 1e007e8:    02 fb e0 2e       	r2 = 12000 <pEvent_buf_static+0xD0 : 2ee0 >			  ## timer.c:142:0
 1e007ec:    8a 0e             	r2 = r1 * r2			  ## timer.c:142:0
 1e007ee:    01 70             	r1 = 0			  ## timer.c:142:0
 1e007f0:    c3 ff 14 2c e1 01 	r3 = 31534100 <timer_div : 1e12c14 >			  ## timer.c:142:0
 1e007f6:    04 fb fd 7e       	r4 = 32509 <nvbss_size+0xC7D : 7efd >			  ## timer.c:142:0
 1e007fa:    45 f6 04 30       	r5 = [r3 ++= 4]			  ## timer.c:151:64
 1e007fe:    c0 fe 50 52       	r5 = r2 / r5 (u)			  ## timer.c:151:62
 1e00802:    56 fc ff fe       	r6 = r5 + -257			  ## timer.c:152:36
 1e00806:    46 f2 03 90       	if (r6 <= r4) goto 6 <timer1_resume+0x3A : 1e00810 >			  ## timer.c:152:36
 1e0080a:    11 80             	r1 += 1			  ## timer.c:150:78
 1e0080c:    f1 e0 f5 9f       	if (r1 <= 15) goto -22 <timer1_resume+0x24 : 1e007fa >			  ## timer.c:150:78
 1e00810:    00 f6 b0 00       	r0 = [r0 + 176]			  ## timer.c:159:30
 1e00814:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:159:30
 1e0081a:    18 44             	[r2 + 4] = r0			  ## timer.c:159:20
 1e0081c:    2d 44             	[r2 + 8] = r5			  ## timer.c:161:20
 1e0081e:    08 c1             	r0 = r1 << 4			  ## timer.c:165:41
 1e00820:    01 fb 01 14       	r1 = 5121 <UPDATE_CODE_TOTAL_SIZE+0x16D : 1401 >			  ## timer.c:165:47
 1e00824:    50 b2             	r0 |= r1			  ## timer.c:165:47
 1e00826:    08 44             	[r2 + 0] = r0			  ## timer.c:165:20
 1e00828:    56 01             	{pc, r6-r4} = [sp++]			  ## timer.c:169:1


timer1_run:
 1e0082a:    34 00             	[--sp] = rets			  ## timer.c:221:0
 1e0082c:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## timer.c:221:0
 1e00832:    02 f6 a0 10       	r2 = [r1 + 160]			  ## timer.c:222:17
 1e00836:    02 f2 0d 00       	if (r2 == r0) goto 26 <timer1_run+0x2A : 1e00854 >			  ## timer.c:222:17
 1e0083a:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:228:20
 1e00840:    c0 f4 40 2a       	[r2 + 0] = 16384			  ## timer.c:228:20
 1e00844:    11 fc a0 00       	r1 = r1 + 160			  ## timer.c:228:20
 1e00848:    08 42             	[r1 + 0] = r0			  ## timer.c:230:25
 1e0084a:    10 70             	r0 = 1			  ## timer.c:230:25
 1e0084c:    c8 62             	b[r1 + 12] = r0
 1e0084e:    c4 f4 00 19       	[r1 + 16] = 0			  ## timer.c:234:25
 1e00852:    c1 17             	call -126 <timer1_resume : 1e007d6 >			  ## timer.c:236:5
 1e00854:    30 00             	pc = [sp++]			  ## timer.c:237:1


charge_init:
 1e00856:    78 01             	[--sp] = {rets, r8-r4}			  ## charge.c:387:0
 1e00858:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## charge.c:387:0
 1e0085e:    11 f6 cc 81       	[r8 + 460] = r1			  ## charge.c:390:18
 1e00862:    01 32             	if (r1 != 0) goto 2 <charge_init+0x10 : 1e00866 >			  ## charge.c:390:18
 1e00864:    88 17             	call -240 <cpu_reset : 1e00776 >			  ## charge.c:392:5
 1e00866:    00 70             	r0 = 0
 1e00868:    85 fc cc 01       	r5 = r8 + 460
 1e0086c:    58 6a             	b[r5 + 5] = r0			  ## charge.c:394:21
 1e0086e:    48 6a             	b[r5 + 4] = r0			  ## charge.c:395:32
 1e00870:    84 17             	call -248 <power_wakeup_disable_with_port : 1e0077a >			  ## charge.c:398:5
 1e00872:    c0 ff 19 18 1a 00 	r0 = 1710105 <uECC_vli_cmp_unsafe+0x9A81D : 1a1819 >			  ## charge.c:398:5
 1e00878:    11 60             	r1 = b[r0 + 1] (u)			  ## charge.c:399:5
 1e0087a:    71 b0             	r1 &= 4294967294			  ## charge.c:399:5
 1e0087c:    19 60             	b[r0 + 1] = r1			  ## charge.c:399:5
 1e0087e:    01 fc 88 00       	r1 = r0 + 136			  ## charge.c:399:5
 1e00882:    12 62             	r2 = b[r1 + 1] (u)			  ## charge.c:402:5
 1e00884:    03 4a             	r3 = [r5 + 0]			  ## charge.c:402:5
 1e00886:    63 66             	r3 = b[r3 + 6] (u)			  ## charge.c:402:5
 1e00888:    22 fd fc 29       	r2 = r2 & 252			  ## charge.c:402:5
 1e0088c:    23 fd 03 39       	r3 = r3 & 3			  ## charge.c:402:5
 1e00890:    52 b6             	r2 |= r3			  ## charge.c:402:5
 1e00892:    1a 62             	b[r1 + 1] = r2			  ## charge.c:402:5
 1e00894:    02 62             	r2 = b[r1 + 0] (u)			  ## charge.c:403:5
 1e00896:    03 4a             	r3 = [r5 + 0]			  ## charge.c:403:5
 1e00898:    53 66             	r3 = b[r3 + 5] (u)			  ## charge.c:403:5
 1e0089a:    72 b0             	r2 &= 4294967294			  ## charge.c:403:5
 1e0089c:    23 fd 01 39       	r3 = r3 & 1			  ## charge.c:403:5
 1e008a0:    52 b6             	r2 |= r3			  ## charge.c:403:5
 1e008a2:    0a 62             	b[r1 + 0] = r2			  ## charge.c:403:5
 1e008a4:    c1 ff 00 08 00 00 	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:22
 1e008aa:    f1 52             	r1 = h[r1 + 30] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:22
 1e008ac:    22 fd 0f 19       	r2 = r1 & 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:33
 1e008b0:    61 70             	r1 = 6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:33
 1e008b2:    f2 e0 01 00       	if (r2 == 15) goto 2 <charge_init+0x62 : 1e008b8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:33
 1e008b6:    21 08             	r1 = r2			  ## charge.c:354:9
 1e008b8:    02 4a             	r2 = [r5 + 0]			  ## charge.c:362:17
 1e008ba:    22 64             	r2 = b[r2 + 2] (u)			  ## charge.c:362:23
 1e008bc:    62 e0 0a 30       	if (r2 < 6) goto 20 <charge_init+0x7E : 1e008d4 >			  ## charge.c:362:9
 1e008c0:    a2 8f             	r2 += -6			  ## charge.c:363:46
 1e008c2:    82 04             	r2 = r2.b0 (u)			  ## charge.c:364:52
 1e008c4:    21 09             	r1 += r2			  ## charge.c:364:50
 1e008c6:    23 fd f0 19       	r3 = r1 & 240			  ## charge.c:365:13
 1e008ca:    f2 70             	r2 = 15			  ## charge.c:365:13
 1e008cc:    f3 e0 09 80       	if (r3 > 15) goto 18 <charge_init+0x8C : 1e008e2 >			  ## charge.c:365:13
 1e008d0:    12 08             	r2 = r1			  ## charge.c:365:13
 1e008d2:    07 18             	goto 14 <charge_init+0x8C : 1e008e2 >			  ## charge.c:365:13
 1e008d4:    62 fb 06 29       	r2 = 6 - r2			  ## charge.c:369:37
 1e008d8:    83 04             	r3 = r2.b0 (u)			  ## charge.c:370:37
 1e008da:    02 70             	r2 = 0			  ## charge.c:370:37
 1e008dc:    31 f2 01 30       	if (r1 < r3) goto 2 <charge_init+0x8C : 1e008e2 >			  ## charge.c:370:37
 1e008e0:    e2 b2             	r2 = r1 - r3			  ## charge.c:371:54
 1e008e2:    21 60             	r1 = b[r0 + 2] (u)			  ## charge.c:379:5
 1e008e4:    22 fd 0f 29       	r2 = r2 & 15			  ## charge.c:379:5
 1e008e8:    21 fd f0 19       	r1 = r1 & 240			  ## charge.c:379:5
 1e008ec:    51 b4             	r1 |= r2			  ## charge.c:379:5
 1e008ee:    29 60             	b[r0 + 2] = r1			  ## charge.c:379:5
 1e008f0:    31 60             	r1 = b[r0 + 3] (u)			  ## charge.c:380:5
 1e008f2:    02 f6 cc 81       	r2 = [r8 + 460]			  ## charge.c:380:5
 1e008f6:    32 64             	r2 = b[r2 + 3] (u)			  ## charge.c:380:5
 1e008f8:    21 fd 8f 19       	r1 = r1 & 143			  ## charge.c:380:5
 1e008fc:    12 c1             	r2 = r2 << 4			  ## charge.c:380:5
 1e008fe:    22 fd 70 29       	r2 = r2 & 112			  ## charge.c:380:5
 1e00902:    51 b4             	r1 |= r2			  ## charge.c:380:5
 1e00904:    39 60             	b[r0 + 3] = r1			  ## charge.c:380:5
 1e00906:    21 60             	r1 = b[r0 + 2] (u)			  ## charge.c:382:5
 1e00908:    21 fd 0f 19       	r1 = r1 & 15			  ## charge.c:382:5
 1e0090c:    29 60             	b[r0 + 2] = r1			  ## charge.c:382:5
 1e0090e:    01 70             	r1 = 0			  ## charge.c:382:5
 1e00910:    11 f9 d0 81       	b[r8 + 464] = r1			  ## charge.c:73:32
 1e00914:    02 fb 00 40       	r2 = 16384 <low_power_system_down+0x108 : 4000 >			  ## charge.c:73:32
 1e00918:    c3 ff 00 04 1e 00 	r3 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## charge.c:73:32
 1e0091e:    06 fb e0 2e       	r6 = 12000 <pEvent_buf_static+0xD0 : 2ee0 >			  ## charge.c:73:32
 1e00922:    05 70             	r5 = 0			  ## charge.c:73:32
 1e00924:    07 70             	r7 = 0			  ## charge.c:73:32
 1e00926:    12 18             	goto 36 <charge_init+0xF6 : 1e0094c >			  ## charge.c:73:32
 1e00928:    04 60             	r4 = b[r0 + 0] (u)			  ## charge.c:76:13
 1e0092a:    22 f3 03 40       	if ((r4 & 4) != 0) goto 6 <charge_init+0xDE : 1e00934 >			  ## charge.c:76:13
 1e0092e:    04 60             	r4 = b[r0 + 0] (u)			  ## charge.c:76:32
 1e00930:    03 f3 01 40       	if ((r4 & 8) == 0) goto 2 <charge_init+0xE0 : 1e00936 >			  ## charge.c:76:32
 1e00934:    15 80             	r5 += 1			  ## charge.c:77:23
 1e00936:    0a 46             	[r3 + 0] = r2			  ## charge.c:60:20
 1e00938:    19 46             	[r3 + 4] = r1			  ## charge.c:61:20
 1e0093a:    2e 46             	[r3 + 8] = r6			  ## charge.c:62:20
 1e0093c:    c0 f4 45 39       	[r3 + 0] = 69			  ## charge.c:63:20
 1e00940:    04 46             	r4 = [r3 + 0]			  ## charge.c:64:24
 1e00942:    34 05             	r4 = r4.l (s)			  ## charge.c:64:39
 1e00944:    f4 ef fc cf       	ifs (r4 > -1) goto -8 <charge_init+0xEA : 1e00940 >			  ## charge.c:64:5
 1e00948:    0a 46             	[r3 + 0] = r2			  ## charge.c:65:20
 1e0094a:    17 80             	r7 += 1			  ## charge.c:75:26
 1e0094c:    c4 05             	r4 = r7.b0 (u)			  ## charge.c:75:19
 1e0094e:    44 e1 eb 1f       	if (r4 != 20) goto -42 <charge_init+0xD2 : 1e00928 >			  ## charge.c:75:19
 1e00952:    40 05             	r0 = r5.b0 (u)			  ## charge.c:82:20
 1e00954:    60 e0 03 30       	if (r0 < 6) goto 6 <charge_init+0x108 : 1e0095e >			  ## charge.c:82:20
 1e00958:    10 70             	r0 = 1			  ## charge.c:83:36
 1e0095a:    10 f9 d0 81       	b[r8 + 464] = r0			  ## charge.c:83:36
 1e0095e:    00 f9 d0 81       	r0 = b[r8 + 464] (u)			  ## charge.c:86:20
 1e00962:    0e 20             	if (r0 == 0) goto 28 <charge_init+0x12A : 1e00980 >			  ## charge.c:407:9
 1e00964:    00 f6 d4 81       	r0 = [r8 + 468]			  ## charge.c:408:21
 1e00968:    0e 30             	if (r0 != 0) goto 28 <charge_init+0x130 : 1e00986 >			  ## charge.c:408:21
 1e0096a:    c1 ff f4 05 e0 01 	r1 = 31458804 <ldo5v_detect : 1e005f4 >			  ## charge.c:409:35
 1e00970:    00 70             	r0 = 0			  ## charge.c:409:35
 1e00972:    22 70             	r2 = 2			  ## charge.c:409:35
 1e00974:    13 70             	r3 = 1			  ## charge.c:409:35
 1e00976:    80 f3 66 5c       	call 47308 <usr_timer_add : 1e0c246 >			  ## charge.c:409:35
 1e0097a:    10 f6 d4 81       	[r8 + 468] = r0			  ## charge.c:409:33
 1e0097e:    03 18             	goto 6 <charge_init+0x130 : 1e00986 >			  ## charge.c:409:33
 1e00980:    20 70             	r0 = 2			  ## charge.c:412:21
 1e00982:    10 f9 01 80       	b[r8 + 1] = r0			  ## charge.c:412:21
 1e00986:    11 70             	r1 = 1			  ## charge.c:415:21
 1e00988:    00 70             	r0 = 0			  ## charge.c:417:5
 1e0098a:    11 f9 d1 81       	b[r8 + 465] = r1			  ## charge.c:415:21
 1e0098e:    58 01             	{pc, r8-r4} = [sp++]			  ## charge.c:417:5


ad_get_key_value:
 1e00990:    74 01             	[--sp] = {rets, r4}			  ## adkey.c:25:0
 1e00992:    b0 70             	r0 = 11			  ## adkey.c:34:15
 1e00994:    b4 70             	r4 = 11			  ## adkey.c:34:15
 1e00996:    21 15             	call -1470 <adc_get_value : 1e003da >			  ## adkey.c:34:15
 1e00998:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## adkey.c:34:15
 1e0099e:    41 43             	r1 = [r1 + 80]			  ## adkey.c:34:15
 1e009a0:    20 04             	r0 = r0.l (u)
 1e009a2:    82 70             	r2 = 8
 1e009a4:    43 fc f5 ff       	r3 = r4 + -11			  ## adkey.c:36:19
 1e009a8:    13 e0 0c 80       	if (r3 > 1) goto 24 <ad_get_key_value+0x34 : 1e009c4 >			  ## adkey.c:36:19
 1e009ac:    03 f8 00 12       	r3 = h[r1+r2] (u)			  ## adkey.c:37:25
 1e009b0:    22 80             	r2 += 2			  ## adkey.c:37:46
 1e009b2:    14 80             	r4 += 1			  ## adkey.c:37:46
 1e009b4:    08 ff fe 33 f5 ff 	if (r3 > 1022) goto -22 <ad_get_key_value+0x14 : 1e009a4 >			  ## adkey.c:37:46
 1e009ba:    30 f2 f3 8f       	if (r0 > r3) goto -26 <ad_get_key_value+0x14 : 1e009a4 >
 1e009be:    00 fa 00 14       	r0 = b[r1+r4] (u)			  ## adkey.c:39:20
 1e009c2:    54 01             	{pc, r4} = [sp++]			  ## adkey.c:43:1
 1e009c4:    f0 7f             	r0 = 255
 1e009c6:    54 01             	{pc, r4} = [sp++]			  ## adkey.c:43:1


key_idle_query:
 1e009c8:    c0 ff 40 1d 00 00 	r0 = 7488 <is_key_active : 1d40 >			  ## key_driver.c:321:0
 1e009ce:    01 60             	r1 = b[r0 + 0] (u)			  ## key_driver.c:322:13
 1e009d0:    10 70             	r0 = 1			  ## key_driver.c:322:12
 1e009d2:    01 22             	if (r1 == 0) goto 2 <key_idle_query+0xE : 1e009d6 >			  ## key_driver.c:322:12
 1e009d4:    00 70             	r0 = 0			  ## key_driver.c:322:12
 1e009d6:    20 00             	rts			  ## key_driver.c:322:5


timer_get_ms:
 1e009d8:    c0 ff b0 08 00 00 	r0 = 2224 <jiffies : 8b0 >			  ## timer.c:86:0
 1e009de:    00 40             	r0 = [r0 + 0]			  ## timer.c:87:12
 1e009e0:    00 fe 0a 09       	r0 = r0 * 10			  ## timer.c:87:12
 1e009e4:    20 00             	rts			  ## timer.c:87:5


key_driver_scan:
 1e009e6:    75 01             	[--sp] = {rets, r5, r4}			  ## key_driver.c:61:0
 1e009e8:    f4 0b             	sp += -24			  ## key_driver.c:61:0
 1e009ea:    04 08             	r4 = r0			  ## key_driver.c:61:0
 1e009ec:    40 48             	r0 = [r4 + 16]			  ## key_driver.c:76:32
 1e009ee:    80 00             	call r0			  ## key_driver.c:76:21
 1e009f0:    05 08             	r5 = r0			  ## key_driver.c:76:21
 1e009f2:    31 72             	r1 = 35			  ## key_driver.c:76:21
 1e009f4:    c0 ff 40 1d 00 00 	r0 = 7488 <is_key_active : 1d40 >			  ## key_driver.c:76:21
 1e009fa:    01 ff ff 50 04 00 	if (r5 != 255) goto 8 <key_driver_scan+0x22 : 1e00a08 >			  ## key_driver.c:76:21
 1e00a00:    01 60             	r1 = b[r0 + 0] (u)			  ## key_driver.c:83:16
 1e00a02:    03 22             	if (r1 == 0) goto 6 <key_driver_scan+0x24 : 1e00a0a >			  ## key_driver.c:83:16
 1e00a04:    01 60             	r1 = b[r0 + 0] (u)			  ## key_driver.c:84:23
 1e00a06:    f1 8f             	r1 += -1			  ## key_driver.c:84:23
 1e00a08:    09 60             	b[r0 + 0] = r1
 1e00a0a:    51 68             	r1 = b[r4 + 5] (u)			  ## key_driver.c:87:37
 1e00a0c:    70 68             	r0 = b[r4 + 7] (u)			  ## key_driver.c:87:37
 1e00a0e:    15 f2 06 00       	if (r5 == r1) goto 12 <key_driver_scan+0x38 : 1e00a1e >			  ## key_driver.c:87:37
 1e00a12:    04 20             	if (r0 == 0) goto 8 <key_driver_scan+0x36 : 1e00a1c >
 1e00a14:    00 70             	r0 = 0			  ## key_driver.c:88:31
 1e00a16:    68 68             	b[r4 + 6] = r0			  ## key_driver.c:88:31
 1e00a18:    5d 68             	b[r4 + 5] = r5			  ## key_driver.c:89:33
 1e00a1a:    69 18             	goto 210 <key_driver_scan+0x108 : 1e00aee >			  ## key_driver.c:89:33
 1e00a1c:    00 70             	r0 = 0
 1e00a1e:    61 68             	r1 = b[r4 + 6] (u)			  ## key_driver.c:92:20
 1e00a20:    01 f2 03 20       	if (r1 >= r0) goto 6 <key_driver_scan+0x44 : 1e00a2a >			  ## key_driver.c:92:9
 1e00a24:    10 92             	r0 = r1 + 1			  ## key_driver.c:93:30
 1e00a26:    68 68             	b[r4 + 6] = r0			  ## key_driver.c:93:30
 1e00a28:    62 18             	goto 196 <key_driver_scan+0x108 : 1e00aee >			  ## key_driver.c:93:30
 1e00a2a:    40 68             	r0 = b[r4 + 4] (u)			  ## key_driver.c:101:37
 1e00a2c:    05 f2 13 10       	if (r5 != r0) goto 38 <key_driver_scan+0x70 : 1e00a56 >			  ## key_driver.c:101:37
 1e00a30:    00 ff ff 50 1c 00 	if (r5 == 255) goto 56 <key_driver_scan+0x88 : 1e00a6e >
 1e00a36:    a0 68             	r0 = b[r4 + 10] (u)			  ## key_driver.c:170:33
 1e00a38:    10 80             	r0 += 1			  ## key_driver.c:170:33
 1e00a3a:    a8 68             	b[r4 + 10] = r0			  ## key_driver.c:170:33
 1e00a3c:    82 68             	r2 = b[r4 + 8] (u)			  ## key_driver.c:171:52
 1e00a3e:    03 04             	r3 = r0.b0 (u)			  ## key_driver.c:170:33
 1e00a40:    11 70             	r1 = 1			  ## key_driver.c:170:33
 1e00a42:    50 08             	r0 = r5			  ## key_driver.c:170:33
 1e00a44:    23 f2 38 00       	if (r3 == r2) goto 112 <key_driver_scan+0xD2 : 1e00ab8 >			  ## key_driver.c:170:33
 1e00a48:    90 68             	r0 = b[r4 + 9] (u)			  ## key_driver.c:173:59
 1e00a4a:    03 f2 4f 10       	if (r3 != r0) goto 158 <key_driver_scan+0x106 : 1e00aec >			  ## key_driver.c:173:59
 1e00a4e:    aa 68             	b[r4 + 10] = r2			  ## key_driver.c:175:38
 1e00a50:    21 70             	r1 = 2			  ## key_driver.c:175:38
 1e00a52:    50 08             	r0 = r5			  ## key_driver.c:175:38
 1e00a54:    31 18             	goto 98 <key_driver_scan+0xD2 : 1e00ab8 >			  ## key_driver.c:175:38
 1e00a56:    00 ff ff 50 22 00 	if (r5 == 255) goto 68 <key_driver_scan+0xBA : 1e00aa0 >
 1e00a5c:    10 70             	r0 = 1
 1e00a5e:    a8 68             	b[r4 + 10] = r0			  ## key_driver.c:120:34
 1e00a60:    e1 68             	r1 = b[r4 + 14] (u)			  ## key_driver.c:121:45
 1e00a62:    15 f2 25 10       	if (r5 != r1) goto 74 <key_driver_scan+0xCA : 1e00ab0 >			  ## key_driver.c:121:45
 1e00a66:    b0 68             	r0 = b[r4 + 11] (u)			  ## key_driver.c:125:37
 1e00a68:    10 80             	r0 += 1			  ## key_driver.c:125:37
 1e00a6a:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:125:37
 1e00a6c:    3f 18             	goto 126 <key_driver_scan+0x106 : 1e00aec >			  ## key_driver.c:125:37
 1e00a6e:    b2 68             	r2 = b[r4 + 11] (u)			  ## key_driver.c:131:28
 1e00a70:    3d 24             	if (r2 == 0) goto 122 <key_driver_scan+0x106 : 1e00aec >			  ## key_driver.c:131:28
 1e00a72:    20 f9 0e 40       	r0 = b[r4 + 14] (s)			  ## key_driver.c:141:32
 1e00a76:    00 e0 1e b0       	ifs (r0 < 0) goto 60 <key_driver_scan+0xD0 : 1e00ab6 >			  ## key_driver.c:141:32
 1e00a7a:    c1 68             	r1 = b[r4 + 12] (u)			  ## key_driver.c:147:32
 1e00a7c:    d3 68             	r3 = b[r4 + 13] (u)			  ## key_driver.c:147:61
 1e00a7e:    31 f2 38 90       	if (r1 <= r3) goto 112 <key_driver_scan+0x10C : 1e00af2 >			  ## key_driver.c:147:21
 1e00a82:    71 70             	r1 = 7
 1e00a84:    42 e0 18 80       	if (r2 > 4) goto 48 <key_driver_scan+0xD2 : 1e00ab8 >
 1e00a88:    61 70             	r1 = 6
 1e00a8a:    42 e0 15 00       	if (r2 == 4) goto 42 <key_driver_scan+0xD2 : 1e00ab8 >
 1e00a8e:    51 70             	r1 = 5
 1e00a90:    22 e0 12 80       	if (r2 > 2) goto 36 <key_driver_scan+0xD2 : 1e00ab8 >
 1e00a94:    11 70             	r1 = 1			  ## key_driver.c:155:53
 1e00a96:    22 e0 01 00       	if (r2 == 2) goto 2 <key_driver_scan+0xB6 : 1e00a9c >			  ## key_driver.c:155:53
 1e00a9a:    01 70             	r1 = 0			  ## key_driver.c:155:53
 1e00a9c:    89 c0             	r1 = r1 << 2			  ## key_driver.c:157:21
 1e00a9e:    0c 18             	goto 24 <key_driver_scan+0xD2 : 1e00ab8 >			  ## key_driver.c:157:21
 1e00aa0:    82 68             	r2 = b[r4 + 8] (u)			  ## key_driver.c:111:52
 1e00aa2:    a3 68             	r3 = b[r4 + 10] (u)			  ## key_driver.c:111:28
 1e00aa4:    31 70             	r1 = 3			  ## key_driver.c:111:28
 1e00aa6:    23 f2 07 20       	if (r3 >= r2) goto 14 <key_driver_scan+0xD2 : 1e00ab8 >			  ## key_driver.c:111:28
 1e00aaa:    10 70             	r0 = 1			  ## key_driver.c:118:40
 1e00aac:    c8 68             	b[r4 + 12] = r0			  ## key_driver.c:118:40
 1e00aae:    1e 18             	goto 60 <key_driver_scan+0x106 : 1e00aec >			  ## key_driver.c:118:40
 1e00ab0:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:122:38
 1e00ab2:    ed 68             	b[r4 + 14] = r5			  ## key_driver.c:123:41
 1e00ab4:    1b 18             	goto 54 <key_driver_scan+0x106 : 1e00aec >			  ## key_driver.c:123:41
 1e00ab6:    01 70             	r1 = 0
 1e00ab8:    12 70             	r2 = 1
 1e00aba:    92 f5 00 00       	h[sp] = r2			  ## key_driver.c:192:12
 1e00abe:    d2 f5 08 00       	b[sp+8] = r2			  ## key_driver.c:193:18
 1e00ac2:    f2 68             	r2 = b[r4 + 15] (u)			  ## key_driver.c:194:31
 1e00ac4:    d2 f5 09 00       	b[sp+9] = r2			  ## key_driver.c:194:18
 1e00ac8:    91 f5 0a 00       	h[sp+10] = r1			  ## key_driver.c:195:19
 1e00acc:    20 fd 7f 09       	r0 = r0 & 127			  ## key_driver.c:196:21
 1e00ad0:    38 02             	[sp+12] = r0			  ## key_driver.c:196:19
 1e00ad2:    82 17             	call -252 <timer_get_ms : 1e009d8 >			  ## key_driver.c:197:19
 1e00ad4:    48 02             	[sp+16] = r0			  ## key_driver.c:197:17
 1e00ad6:    00 70             	r0 = 0			  ## key_driver.c:200:26
 1e00ad8:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:200:26
 1e00ada:    f0 7f             	r0 = 255			  ## key_driver.c:201:29
 1e00adc:    e8 68             	b[r4 + 14] = r0			  ## key_driver.c:201:29
 1e00ade:    c0 ff 00 59 45 4b 	r0 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## key_driver.c:203:12
 1e00ae4:    18 02             	[sp+4] = r0			  ## key_driver.c:203:12
 1e00ae6:    00 a0             	r0 = sp + 0			  ## key_driver.c:203:12
 1e00ae8:    80 f3 63 6e       	call 56518 <sys_event_notify : 1e0e7b2 >			  ## key_driver.c:206:9
 1e00aec:    4d 68             	b[r4 + 4] = r5			  ## key_driver.c:212:25
 1e00aee:    0c 0a             	sp += 24
 1e00af0:    55 01             	{pc, r5, r4} = [sp++]			  ## key_driver.c:214:1
 1e00af2:    10 92             	r0 = r1 + 1			  ## key_driver.c:163:47
 1e00af4:    c8 68             	b[r4 + 12] = r0			  ## key_driver.c:163:47
 1e00af6:    fa 1f             	goto -12 <key_driver_scan+0x106 : 1e00aec >			  ## key_driver.c:163:47


att_read_callback:
 1e00af8:    34 00             	[--sp] = rets			  ## le_trans_data.c:634:0
 1e00afa:    c0 ff e9 08 e1 01 	r0 = 31525097 <update_target_end+0x6B9 : 1e108e9 >			  ## le_trans_data.c:639:5
 1e00b00:    32 08             	r2 = r3			  ## le_trans_data.c:639:5
 1e00b02:    80 f3 50 61       	call 49824 <printf : 1e0cda6 >			  ## le_trans_data.c:639:5
 1e00b06:    c0 ff 20 09 e1 01 	r0 = 31525152 <update_target_end+0x6F0 : 1e10920 >			  ## le_trans_data.c:684:5
 1e00b0c:    01 70             	r1 = 0			  ## le_trans_data.c:684:5
 1e00b0e:    80 f3 4a 61       	call 49812 <printf : 1e0cda6 >			  ## le_trans_data.c:684:5
 1e00b12:    00 70             	r0 = 0			  ## le_trans_data.c:685:5
 1e00b14:    30 00             	pc = [sp++]			  ## le_trans_data.c:685:5


set_ble_work_state:
 1e00b16:    75 01             	[--sp] = {rets, r5, r4}			  ## le_trans_data.c:300:0
 1e00b18:    c5 ff 41 1d 00 00 	r5 = 7489 <ble_work_state : 1d41 >			  ## le_trans_data.c:300:0
 1e00b1e:    01 6a             	r1 = b[r5 + 0] (u)			  ## le_trans_data.c:301:18
 1e00b20:    04 08             	r4 = r0			  ## le_trans_data.c:301:18
 1e00b22:    41 f2 07 00       	if (r1 == r4) goto 14 <set_ble_work_state+0x1E : 1e00b34 >
 1e00b26:    c0 ff b0 07 e1 01 	r0 = 31524784 <update_target_end+0x580 : 1e107b0 >			  ## le_trans_data.c:302:9
 1e00b2c:    42 08             	r2 = r4			  ## le_trans_data.c:302:9
 1e00b2e:    80 f3 3a 61       	call 49780 <printf : 1e0cda6 >			  ## le_trans_data.c:302:9
 1e00b32:    0c 6a             	b[r5 + 0] = r4			  ## le_trans_data.c:303:24
 1e00b34:    55 01             	{pc, r5, r4} = [sp++]			  ## le_trans_data.c:308:1


check_connetion_updata_deal:
 1e00b36:    76 01             	[--sp] = {rets, r6-r4}			  ## le_trans_data.c:276:0
 1e00b38:    fe 0b             	sp += -4			  ## le_trans_data.c:276:0
 1e00b3a:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:276:0
 1e00b40:    20 6a             	r0 = b[r5 + 2] (u)			  ## le_trans_data.c:278:13
 1e00b42:    20 e0 17 80       	if (r0 > 2) goto 46 <check_connetion_updata_deal+0x3E : 1e00b74 >			  ## le_trans_data.c:278:13
 1e00b46:    c0 c0             	r0 = r0 << 3			  ## le_trans_data.c:267:50
 1e00b48:    c1 ff c0 2a e1 01 	r1 = 31533760 <connection_param_table : 1e12ac0 >			  ## le_trans_data.c:269:5
 1e00b4e:    44 b0             	r4 = r0 + r1			  ## le_trans_data.c:267:50
 1e00b50:    36 58             	r6 = h[r4 + 6] (u)			  ## le_trans_data.c:269:5
 1e00b52:    01 58             	r1 = h[r4 + 0] (u)			  ## le_trans_data.c:269:5
 1e00b54:    12 58             	r2 = h[r4 + 2] (u)			  ## le_trans_data.c:269:5
 1e00b56:    23 58             	r3 = h[r4 + 4] (u)			  ## le_trans_data.c:269:5
 1e00b58:    c0 ff cf 06 e1 01 	r0 = 31524559 <update_target_end+0x49F : 1e106cf >			  ## le_trans_data.c:269:5
 1e00b5e:    0e 02             	[sp] = r6			  ## le_trans_data.c:269:5
 1e00b60:    80 f3 21 61       	call 49730 <printf : 1e0cda6 >			  ## le_trans_data.c:269:5
 1e00b64:    90 5b             	r0 = h[r5 + 50] (u)			  ## le_trans_data.c:270:9
 1e00b66:    06 20             	if (r0 == 0) goto 12 <check_connetion_updata_deal+0x3E : 1e00b74 >			  ## le_trans_data.c:270:9
 1e00b68:    92 5b             	r2 = h[r5 + 50] (u)			  ## le_trans_data.c:271:9
 1e00b6a:    b0 70             	r0 = 11			  ## le_trans_data.c:271:9
 1e00b6c:    21 70             	r1 = 2			  ## le_trans_data.c:271:9
 1e00b6e:    43 08             	r3 = r4			  ## le_trans_data.c:271:9
 1e00b70:    80 f3 87 39       	call 29454 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:271:9
 1e00b74:    02 0a             	sp += 4
 1e00b76:    56 01             	{pc, r6-r4} = [sp++]			  ## le_trans_data.c:282:1


get_vbat_level:
 1e00b78:    34 00             	[--sp] = rets			  ## app_power_manage.c:97:0
 1e00b7a:    c0 ff 0d 00 05 00 	r0 = 327693 <text_size+0x33319 : 5000d >			  ## app_power_manage.c:99:13
 1e00b80:    5f 14             	call -1858 <adc_get_voltage : 1e00440 >			  ## app_power_manage.c:99:13
 1e00b82:    80 c0             	r0 = r0 << 2			  ## app_power_manage.c:99:41
 1e00b84:    a1 70             	r1 = 10			  ## app_power_manage.c:99:45
 1e00b86:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## app_power_manage.c:99:45
 1e00b8a:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:99:5
 1e00b8c:    30 00             	pc = [sp++]			  ## app_power_manage.c:99:5


app_send_user_data_check:
 1e00b8e:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:1210:0
 1e00b90:    fe 0b             	sp += -4			  ## le_trans_data.c:1210:0
 1e00b92:    00 70             	r0 = 0			  ## le_trans_data.c:1210:0
 1e00b94:    08 02             	[sp] = r0			  ## le_trans_data.c:1191:9
 1e00b96:    02 a0             	r2 = sp + 0			  ## le_trans_data.c:1191:9
 1e00b98:    90 70             	r0 = 9			  ## le_trans_data.c:1192:5
 1e00b9a:    11 70             	r1 = 1			  ## le_trans_data.c:1192:5
 1e00b9c:    14 70             	r4 = 1			  ## le_trans_data.c:1192:5
 1e00b9e:    80 f3 70 39       	call 29408 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:1192:5
 1e00ba2:    00 02             	r0 = [sp]			  ## le_trans_data.c:1193:12
 1e00ba4:    50 e0 01 80       	if (r0 > 5) goto 2 <app_send_user_data_check+0x1C : 1e00baa >
 1e00ba8:    04 70             	r4 = 0			  ## le_trans_data.c:1215:5
 1e00baa:    40 08             	r0 = r4			  ## le_trans_data.c:1216:1
 1e00bac:    02 0a             	sp += 4
 1e00bae:    54 01             	{pc, r4} = [sp++]			  ## le_trans_data.c:1216:1


app_send_user_data:
 1e00bb0:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:850:0
 1e00bb2:    fc 0b             	sp += -8			  ## le_trans_data.c:850:0
 1e00bb4:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:853:10
 1e00bba:    91 53             	r1 = h[r1 + 50] (u)			  ## le_trans_data.c:853:10
 1e00bbc:    03 08             	r3 = r0			  ## le_trans_data.c:853:10
 1e00bbe:    1b 22             	if (r1 == 0) goto 54 <app_send_user_data+0x46 : 1e00bf6 >
 1e00bc0:    80 f3 53 3a       	call 29862 <att_get_ccc_config : 1e0806a >			  ## le_trans_data.c:857:10
 1e00bc4:    12 20             	if (r0 == 0) goto 36 <app_send_user_data+0x3A : 1e00bea >			  ## le_trans_data.c:857:10
 1e00bc6:    00 70             	r0 = 0			  ## le_trans_data.c:862:11
 1e00bc8:    18 02             	[sp+4] = r0			  ## le_trans_data.c:862:11
 1e00bca:    64 70             	r4 = 6			  ## le_trans_data.c:862:11
 1e00bcc:    a0 70             	r0 = 10			  ## le_trans_data.c:862:11
 1e00bce:    41 70             	r1 = 4			  ## le_trans_data.c:862:11
 1e00bd0:    92 70             	r2 = 9			  ## le_trans_data.c:862:11
 1e00bd2:    0c 02             	[sp] = r4			  ## le_trans_data.c:862:11
 1e00bd4:    80 f3 55 39       	call 29354 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:862:11
 1e00bd8:    11 70             	r1 = 1			  ## le_trans_data.c:863:9
 1e00bda:    f0 e9 01 00       	if (r0 == -97) goto 2 <app_send_user_data+0x30 : 1e00be0 >			  ## le_trans_data.c:863:9
 1e00bde:    01 08             	r1 = r0			  ## le_trans_data.c:863:9
 1e00be0:    0a 22             	if (r1 == 0) goto 20 <app_send_user_data+0x46 : 1e00bf6 >
 1e00be2:    c0 ff ce 03 e1 01 	r0 = 31523790 <update_target_end+0x19E : 1e103ce >			  ## le_trans_data.c:868:9
 1e00be8:    04 18             	goto 8 <app_send_user_data+0x42 : 1e00bf2 >			  ## le_trans_data.c:868:9
 1e00bea:    c0 ff a8 03 e1 01 	r0 = 31523752 <update_target_end+0x178 : 1e103a8 >			  ## le_trans_data.c:858:9
 1e00bf0:    a1 70             	r1 = 10			  ## le_trans_data.c:858:9
 1e00bf2:    80 f3 d8 60       	call 49584 <printf : 1e0cda6 >
 1e00bf6:    04 0a             	sp += 8
 1e00bf8:    54 01             	{pc, r4} = [sp++]


Send_SKIP_ROPE_NUM_BLE:
 1e00bfa:    34 00             	[--sp] = rets			  ## le_trans_data.c:717:0
 1e00bfc:    fa 0b             	sp += -12			  ## le_trans_data.c:717:0
 1e00bfe:    d1 f5 00 00       	b[sp] = r1			  ## le_trans_data.c:721:13
 1e00c02:    61 70             	r1 = 6			  ## le_trans_data.c:722:13
 1e00c04:    d1 f5 01 00       	b[sp+1] = r1			  ## le_trans_data.c:722:13
 1e00c08:    01 d4             	r1 = r0 >> 16			  ## le_trans_data.c:723:22
 1e00c0a:    d1 f5 02 00       	b[sp+2] = r1			  ## le_trans_data.c:723:13
 1e00c0e:    01 d2             	r1 = r0 >> 8			  ## le_trans_data.c:724:25
 1e00c10:    d1 f5 03 00       	b[sp+3] = r1			  ## le_trans_data.c:724:16
 1e00c14:    d0 f5 04 00       	b[sp+4] = r0			  ## le_trans_data.c:725:13
 1e00c18:    af 17             	call -162 <get_vbat_level : 1e00b78 >			  ## le_trans_data.c:726:15
 1e00c1a:    11 70             	r1 = 1
 1e00c1c:    03 ff 36 01 01 00 	if (r0 < 310) goto 2 <Send_SKIP_ROPE_NUM_BLE+0x2A : 1e00c24 >
 1e00c22:    51 70             	r1 = 5
 1e00c24:    d1 f5 05 00       	b[sp+5] = r1			  ## le_trans_data.c:726:13
 1e00c28:    b2 17             	call -156 <app_send_user_data_check : 1e00b8e >			  ## le_trans_data.c:728:7
 1e00c2a:    02 20             	if (r0 == 0) goto 4 <Send_SKIP_ROPE_NUM_BLE+0x36 : 1e00c30 >			  ## le_trans_data.c:728:7
 1e00c2c:    00 a0             	r0 = sp + 0
 1e00c2e:    c0 17             	call -128 <app_send_user_data : 1e00bb0 >			  ## le_trans_data.c:730:3
 1e00c30:    06 0a             	sp += 12
 1e00c32:    30 00             	pc = [sp++]			  ## le_trans_data.c:733:1


SET_COUNTDOWN_MODE:
 1e00c34:    34 00             	[--sp] = rets			  ## le_trans_data.c:696:0
 1e00c36:    f4 0b             	sp += -24			  ## le_trans_data.c:696:0
 1e00c38:    13 70             	r3 = 1			  ## le_trans_data.c:696:0
 1e00c3a:    93 f5 00 00       	h[sp] = r3			  ## le_trans_data.c:700:19
 1e00c3e:    d3 f5 08 00       	b[sp+8] = r3			  ## le_trans_data.c:701:20
 1e00c42:    b3 70             	r3 = 11			  ## le_trans_data.c:703:10
 1e00c44:    01 30             	if (r0 != 0) goto 2 <SET_COUNTDOWN_MODE+0x14 : 1e00c48 >			  ## le_trans_data.c:703:10
 1e00c46:    a3 70             	r3 = 10
 1e00c48:    93 f5 0a 00       	h[sp+10] = r3
 1e00c4c:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## le_trans_data.c:710:21
 1e00c50:    3a 02             	[sp+12] = r2			  ## le_trans_data.c:710:21
 1e00c52:    c0 ff 00 59 45 4b 	r0 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## le_trans_data.c:712:14
 1e00c58:    18 02             	[sp+4] = r0			  ## le_trans_data.c:712:14
 1e00c5a:    00 a0             	r0 = sp + 0			  ## le_trans_data.c:712:14
 1e00c5c:    80 f3 a9 6d       	call 56146 <sys_event_notify : 1e0e7b2 >			  ## le_trans_data.c:713:10
 1e00c60:    0c 0a             	sp += 24
 1e00c62:    30 00             	pc = [sp++]			  ## le_trans_data.c:715:1


att_write_callback:
 1e00c64:    76 01             	[--sp] = {rets, r6-r4}			  ## le_trans_data.c:768:0
 1e00c66:    15 08             	r5 = r1			  ## le_trans_data.c:768:0
 1e00c68:    56 02             	r6 = [sp+20]			  ## le_trans_data.c:768:0
 1e00c6a:    c0 ff cf 07 e1 01 	r0 = 31524815 <update_target_end+0x59F : 1e107cf >			  ## le_trans_data.c:775:5
 1e00c70:    62 08             	r2 = r6			  ## le_trans_data.c:775:5
 1e00c72:    80 f3 98 60       	call 49456 <printf : 1e0cda6 >			  ## le_trans_data.c:775:5
 1e00c76:    44 02             	r4 = [sp+16]
 1e00c78:    75 e0 11 00       	if (r5 == 7) goto 34 <att_write_callback+0x3A : 1e00c9e >			  ## le_trans_data.c:777:5
 1e00c7c:    a5 e0 0d 10       	if (r5 != 10) goto 26 <att_write_callback+0x36 : 1e00c9a >
 1e00c80:    10 72             	r0 = 33			  ## le_trans_data.c:781:9
 1e00c82:    49 17             	call -366 <set_ble_work_state : 1e00b16 >			  ## le_trans_data.c:781:9
 1e00c84:    58 17             	call -336 <check_connetion_updata_deal : 1e00b36 >			  ## le_trans_data.c:782:9
 1e00c86:    02 68             	r2 = b[r4 + 0] (u)			  ## le_trans_data.c:783:9
 1e00c88:    c0 ff 04 08 e1 01 	r0 = 31524868 <update_target_end+0x5D4 : 1e10804 >			  ## le_trans_data.c:783:9
 1e00c8e:    51 08             	r1 = r5			  ## le_trans_data.c:783:9
 1e00c90:    80 f3 89 60       	call 49426 <printf : 1e0cda6 >			  ## le_trans_data.c:783:9
 1e00c94:    00 68             	r0 = b[r4 + 0] (u)			  ## le_trans_data.c:784:36
 1e00c96:    80 f3 c6 39       	call 29580 <att_set_ccc_config : 1e08026 >			  ## le_trans_data.c:784:9
 1e00c9a:    00 70             	r0 = 0			  ## le_trans_data.c:839:5
 1e00c9c:    56 01             	{pc, r6-r4} = [sp++]			  ## le_trans_data.c:839:5
 1e00c9e:    c0 ff 2b 08 e1 01 	r0 = 31524907 <update_target_end+0x5FB : 1e1082b >			  ## le_trans_data.c:794:9
 1e00ca4:    61 08             	r1 = r6			  ## le_trans_data.c:794:9
 1e00ca6:    80 f3 7e 60       	call 49404 <printf : 1e0cda6 >			  ## le_trans_data.c:794:9
 1e00caa:    40 08             	r0 = r4			  ## le_trans_data.c:795:9
 1e00cac:    61 08             	r1 = r6			  ## le_trans_data.c:795:9
 1e00cae:    80 f3 f7 61       	call 50158 <printf_buf : 1e0d0a0 >			  ## le_trans_data.c:795:9
 1e00cb2:    00 68             	r0 = b[r4 + 0] (u)			  ## le_trans_data.c:795:9
 1e00cb4:    c0 8a             	r0 += -84			  ## le_trans_data.c:796:3
 1e00cb6:    40 e0 f0 8f       	if (r0 > 4) goto -32 <att_write_callback+0x36 : 1e00c9a >			  ## le_trans_data.c:796:3
 1e00cba:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >
 1e00cc0:    a0 00             	tbb [r0]


.GJTIS94_0_0_:
 1e00cc2:    04     < 4 : 0x4 >
 1e00cc3:    0d     < 13 : 0xD >
 1e00cc4:    17     < 23 : 0x17 >
 1e00cc5:    03     < 3 : 0x3 >
 1e00cc6:    21     < 33 : 0x21 >
 1e00cc7:    00     < 0 : 0x0 >
 1e00cc8:    e8 1f             	goto -48 <att_write_callback+0x36 : 1e00c9a >
 1e00cca:    c0 ff 43 08 e1 01 	r0 = 31524931 <update_target_end+0x613 : 1e10843 >			  ## le_trans_data.c:800:7
 1e00cd0:    80 f3 69 60       	call 49362 <printf : 1e0cda6 >			  ## le_trans_data.c:800:7
 1e00cd4:    e0 4b             	r0 = [r5 + 120]			  ## le_trans_data.c:801:30
 1e00cd6:    41 75             	r1 = 84			  ## le_trans_data.c:801:7
 1e00cd8:    90 17             	call -224 <Send_SKIP_ROPE_NUM_BLE : 1e00bfa >			  ## le_trans_data.c:801:7
 1e00cda:    df 1f             	goto -66 <att_write_callback+0x36 : 1e00c9a >			  ## le_trans_data.c:801:7
 1e00cdc:    c0 ff 64 08 e1 01 	r0 = 31524964 <update_target_end+0x634 : 1e10864 >			  ## le_trans_data.c:804:7
 1e00ce2:    80 f3 60 60       	call 49344 <printf : 1e0cda6 >			  ## le_trans_data.c:804:7
 1e00ce6:    22 68             	r2 = b[r4 + 2] (u)			  ## le_trans_data.c:805:7
 1e00ce8:    11 68             	r1 = b[r4 + 1] (u)			  ## le_trans_data.c:805:7
 1e00cea:    10 70             	r0 = 1			  ## le_trans_data.c:805:7
 1e00cec:    a3 17             	call -186 <SET_COUNTDOWN_MODE : 1e00c34 >			  ## le_trans_data.c:805:7
 1e00cee:    d5 1f             	goto -86 <att_write_callback+0x36 : 1e00c9a >			  ## le_trans_data.c:805:7
 1e00cf0:    c0 ff 85 08 e1 01 	r0 = 31524997 <update_target_end+0x655 : 1e10885 >			  ## le_trans_data.c:808:7
 1e00cf6:    80 f3 56 60       	call 49324 <printf : 1e0cda6 >			  ## le_trans_data.c:808:7
 1e00cfa:    22 68             	r2 = b[r4 + 2] (u)			  ## le_trans_data.c:809:7
 1e00cfc:    11 68             	r1 = b[r4 + 1] (u)			  ## le_trans_data.c:809:7
 1e00cfe:    00 70             	r0 = 0			  ## le_trans_data.c:809:7
 1e00d00:    99 17             	call -206 <SET_COUNTDOWN_MODE : 1e00c34 >			  ## le_trans_data.c:809:7
 1e00d02:    cb 1f             	goto -106 <att_write_callback+0x36 : 1e00c9a >			  ## le_trans_data.c:809:7
 1e00d04:    c0 ff a6 08 e1 01 	r0 = 31525030 <update_target_end+0x676 : 1e108a6 >			  ## le_trans_data.c:815:8
 1e00d0a:    80 f3 4c 60       	call 49304 <printf : 1e0cda6 >			  ## le_trans_data.c:815:8
 1e00d0e:    10 68             	r0 = b[r4 + 1] (u)			  ## le_trans_data.c:818:32
 1e00d10:    21 68             	r1 = b[r4 + 2] (u)			  ## le_trans_data.c:818:46
 1e00d12:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## le_trans_data.c:818:45
 1e00d16:    69 4b             	[r5 + 88] = r1			  ## le_trans_data.c:818:25
 1e00d18:    50 68             	r0 = b[r4 + 5] (u)			  ## le_trans_data.c:822:30
 1e00d1a:    61 68             	r1 = b[r4 + 6] (u)			  ## le_trans_data.c:822:44
 1e00d1c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## le_trans_data.c:822:43
 1e00d20:    79 4b             	[r5 + 92] = r1			  ## le_trans_data.c:822:23
 1e00d22:    40 76             	r0 = 100			  ## le_trans_data.c:824:9
 1e00d24:    98 f3 48 30       	call 3170448 <os_time_dly : 106db8 >			  ## le_trans_data.c:824:9
 1e00d28:    72 4b             	r2 = [r5 + 92]			  ## le_trans_data.c:825:75
 1e00d2a:    61 4b             	r1 = [r5 + 88]			  ## le_trans_data.c:825:57
 1e00d2c:    c0 ff c4 08 e1 01 	r0 = 31525060 <update_target_end+0x694 : 1e108c4 >			  ## le_trans_data.c:825:9
 1e00d32:    80 f3 38 60       	call 49264 <printf : 1e0cda6 >			  ## le_trans_data.c:825:9
 1e00d36:    a0 70             	r0 = 10			  ## le_trans_data.c:826:9
 1e00d38:    98 f3 3e 30       	call 3170428 <os_time_dly : 106db8 >			  ## le_trans_data.c:826:9
 1e00d3c:    ae 1f             	goto -164 <att_write_callback+0x36 : 1e00c9a >			  ## le_trans_data.c:826:9


server_profile_start:
 1e00d3e:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:445:0
 1e00d40:    fc 0b             	sp += -8			  ## le_trans_data.c:445:0
 1e00d42:    02 08             	r2 = r0			  ## le_trans_data.c:445:0
 1e00d44:    80 7c             	r0 = 200			  ## le_trans_data.c:449:5
 1e00d46:    18 02             	[sp+4] = r0			  ## le_trans_data.c:449:5
 1e00d48:    04 fb 52 03       	r4 = 850 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x4A : 352 >			  ## le_trans_data.c:449:5
 1e00d4c:    c3 ff 44 1d 00 00 	r3 = 7492 <att_ram_buffer : 1d44 >			  ## le_trans_data.c:449:5
 1e00d52:    70 70             	r0 = 7			  ## le_trans_data.c:449:5
 1e00d54:    41 70             	r1 = 4			  ## le_trans_data.c:449:5
 1e00d56:    0c 02             	[sp] = r4			  ## le_trans_data.c:449:5
 1e00d58:    80 f3 93 38       	call 28966 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:449:5
 1e00d5c:    30 70             	r0 = 3			  ## le_trans_data.c:450:5
 1e00d5e:    db 16             	call -586 <set_ble_work_state : 1e00b16 >			  ## le_trans_data.c:450:5
 1e00d60:    04 0a             	sp += 8			  ## le_trans_data.c:450:5
 1e00d62:    54 01             	{pc, r4} = [sp++]			  ## le_trans_data.c:454:1


connection_update_complete_success:
 1e00d64:    75 01             	[--sp] = {rets, r5, r4}			  ## le_trans_data.c:285:0
 1e00d66:    02 08             	r2 = r0			  ## le_trans_data.c:285:0
 1e00d68:    61 70             	r1 = 6			  ## btstack_event.h:3452:16
 1e00d6a:    80 f3 91 39       	call 29474 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3452:16
 1e00d6e:    03 08             	r3 = r0			  ## btstack_event.h:3452:16
 1e00d70:    81 70             	r1 = 8			  ## btstack_event.h:3462:16
 1e00d72:    20 08             	r0 = r2			  ## btstack_event.h:3462:16
 1e00d74:    80 f3 8c 39       	call 29464 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3462:16
 1e00d78:    04 08             	r4 = r0			  ## btstack_event.h:3462:16
 1e00d7a:    a1 70             	r1 = 10			  ## btstack_event.h:3472:16
 1e00d7c:    20 08             	r0 = r2			  ## btstack_event.h:3472:16
 1e00d7e:    80 f3 87 39       	call 29454 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3472:16
 1e00d82:    05 08             	r5 = r0			  ## btstack_event.h:3472:16
 1e00d84:    c0 ff a6 04 e1 01 	r0 = 31524006 <update_target_end+0x276 : 1e104a6 >			  ## le_trans_data.c:293:5
 1e00d8a:    31 08             	r1 = r3			  ## le_trans_data.c:293:5
 1e00d8c:    80 f3 0b 60       	call 49174 <printf : 1e0cda6 >			  ## le_trans_data.c:293:5
 1e00d90:    c0 ff c5 04 e1 01 	r0 = 31524037 <update_target_end+0x295 : 1e104c5 >			  ## le_trans_data.c:294:5
 1e00d96:    41 08             	r1 = r4			  ## le_trans_data.c:294:5
 1e00d98:    80 f3 05 60       	call 49162 <printf : 1e0cda6 >			  ## le_trans_data.c:294:5
 1e00d9c:    c0 ff e3 04 e1 01 	r0 = 31524067 <update_target_end+0x2B3 : 1e104e3 >			  ## le_trans_data.c:295:5
 1e00da2:    51 08             	r1 = r5			  ## le_trans_data.c:295:5
 1e00da4:    15 01             	{rets, r5, r4} = [sp++]			  ## le_trans_data.c:295:5
 1e00da6:    c0 f3 fe 5f       	goto 49148 <printf : 1e0cda6 >			  ## le_trans_data.c:295:5


DISPLAY_STATE_DATA_UPDATE:
 1e00daa:    76 01             	[--sp] = {rets, r6-r4}			  ## 7PIN_led8888.c:754:0
 1e00dac:    fe 0b             	sp += -4			  ## 7PIN_led8888.c:754:0
 1e00dae:    14 08             	r4 = r1			  ## 7PIN_led8888.c:754:0
 1e00db0:    05 08             	r5 = r0			  ## 7PIN_led8888.c:754:0
 1e00db2:    c0 ff 98 0c e1 01 	r0 = 31526040 <update_target_end+0xA68 : 1e10c98 >			  ## 7PIN_led8888.c:756:3
 1e00db8:    80 f3 f5 5f       	call 49130 <printf : 1e0cda6 >			  ## 7PIN_led8888.c:756:3
 1e00dbc:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## 7PIN_led8888.c:756:3
 1e00dc2:    45 e0 39 80       	if (r5 > 4) goto 114 <.GJTIE98_0_0_+0x6A : 1e00e38 >			  ## 7PIN_led8888.c:756:3
 1e00dc6:    a5 00             	tbb [r5]


.GJTIS98_0_0_:
 1e00dc8:    03     < 3 : 0x3 >
 1e00dc9:    13     < 19 : 0x13 >
 1e00dca:    1e     < 30 : 0x1E >
 1e00dcb:    2b     < 43 : 0x2B >
 1e00dcc:    07     < 7 : 0x7 >
 1e00dcd:    00     < 0 : 0x0 >
 1e00dce:    70 6c             	r0 = b[r6 + 7] (u)			  ## 7PIN_led8888.c:780:32
 1e00dd0:    20 fd ec 09       	r0 = r0 & 236			  ## 7PIN_led8888.c:780:32
 1e00dd4:    30 18             	goto 96 <.GJTIE98_0_0_+0x68 : 1e00e36 >			  ## 7PIN_led8888.c:780:32
 1e00dd6:    71 6c             	r1 = b[r6 + 7] (u)			  ## 7PIN_led8888.c:759:32
 1e00dd8:    20 fd d3 19       	r0 = r1 & 211			  ## 7PIN_led8888.c:759:54
 1e00ddc:    78 6c             	b[r6 + 7] = r0			  ## 7PIN_led8888.c:759:28
 1e00dde:    34 e0 25 00       	if (r4 == 3) goto 74 <.GJTIE98_0_0_+0x5E : 1e00e2c >			  ## 7PIN_led8888.c:760:8
 1e00de2:    24 e0 26 00       	if (r4 == 2) goto 76 <.GJTIE98_0_0_+0x64 : 1e00e32 >
 1e00de6:    14 e0 27 10       	if (r4 != 1) goto 78 <.GJTIE98_0_0_+0x6A : 1e00e38 >
 1e00dea:    90 b1             	r0 |= 8			  ## 7PIN_led8888.c:761:26
 1e00dec:    24 18             	goto 72 <.GJTIE98_0_0_+0x68 : 1e00e36 >			  ## 7PIN_led8888.c:761:26
 1e00dee:    70 6c             	r0 = b[r6 + 7] (u)			  ## 7PIN_led8888.c:769:34
 1e00df0:    30 fd 13 09       	r0 = r0 & 4294967276			  ## 7PIN_led8888.c:769:56
 1e00df4:    00 fd 11 09       	r0 = r0 | 17			  ## 7PIN_led8888.c:769:69
 1e00df8:    78 6c             	b[r6 + 7] = r0			  ## 7PIN_led8888.c:769:30
 1e00dfa:    03 04             	r3 = r0.b0 (u)			  ## 7PIN_led8888.c:770:7
 1e00dfc:    c2 ff c7 0c e1 01 	r2 = 31526087 <update_target_end+0xA97 : 1e10cc7 >			  ## 7PIN_led8888.c:770:7
 1e00e02:    09 18             	goto 18 <.GJTIE98_0_0_+0x48 : 1e00e16 >			  ## 7PIN_led8888.c:770:7
 1e00e04:    70 6c             	r0 = b[r6 + 7] (u)			  ## 7PIN_led8888.c:774:38
 1e00e06:    30 fd 13 09       	r0 = r0 & 4294967276			  ## 7PIN_led8888.c:774:60
 1e00e0a:    90 b0             	r0 |= 2			  ## 7PIN_led8888.c:774:66
 1e00e0c:    78 6c             	b[r6 + 7] = r0			  ## 7PIN_led8888.c:774:34
 1e00e0e:    03 04             	r3 = r0.b0 (u)			  ## 7PIN_led8888.c:775:11
 1e00e10:    c2 ff 28 0d e1 01 	r2 = 31526184 <update_target_end+0xAF8 : 1e10d28 >			  ## 7PIN_led8888.c:775:11
 1e00e16:    20 70             	r0 = 2
 1e00e18:    80 f3 f2 5f       	call 49124 <log_print : 1e0ce00 >
 1e00e1c:    0d 18             	goto 26 <.GJTIE98_0_0_+0x6A : 1e00e38 >
 1e00e1e:    70 6c             	r0 = b[r6 + 7] (u)
 1e00e20:    31 fd 40 09       	r1 = r0 & 4294967231			  ## 7PIN_led8888.c:787:27
 1e00e24:    10 b3             	r0 |= 64			  ## 7PIN_led8888.c:785:32
 1e00e26:    07 38             	if (r4 != 0) goto 14 <.GJTIE98_0_0_+0x68 : 1e00e36 >			  ## 7PIN_led8888.c:785:32
 1e00e28:    10 08             	r0 = r1			  ## 7PIN_led8888.c:784:9
 1e00e2a:    05 18             	goto 10 <.GJTIE98_0_0_+0x68 : 1e00e36 >			  ## 7PIN_led8888.c:784:9
 1e00e2c:    00 fd 2c 19       	r0 = r1 | 44			  ## 7PIN_led8888.c:765:63
 1e00e30:    02 18             	goto 4 <.GJTIE98_0_0_+0x68 : 1e00e36 >			  ## 7PIN_led8888.c:765:63
 1e00e32:    00 fd 0c 09       	r0 = r0 | 12			  ## 7PIN_led8888.c:763:56
 1e00e36:    78 6c             	b[r6 + 7] = r0
 1e00e38:    a3 6c             	r3 = b[r6 + 10] (u)			  ## 7PIN_led8888.c:789:4
 1e00e3a:    71 6c             	r1 = b[r6 + 7] (u)			  ## 7PIN_led8888.c:789:4
 1e00e3c:    c2 ff 87 0d e1 01 	r2 = 31526279 <update_target_end+0xB57 : 1e10d87 >			  ## 7PIN_led8888.c:789:4
 1e00e42:    20 70             	r0 = 2			  ## 7PIN_led8888.c:789:4
 1e00e44:    09 02             	[sp] = r1			  ## 7PIN_led8888.c:789:4
 1e00e46:    80 f3 db 5f       	call 49078 <log_print : 1e0ce00 >			  ## 7PIN_led8888.c:789:4
 1e00e4a:    02 0a             	sp += 4			  ## 7PIN_led8888.c:789:4
 1e00e4c:    56 01             	{pc, r6-r4} = [sp++]			  ## 7PIN_led8888.c:790:1


ble_vendor_get_peer_rssi:
 1e00e4e:    74 01             	[--sp] = {rets, r4}			  ## ll_vendor.c:19:0
 1e00e50:    14 78             	r4 = 129			  ## ll_vendor.c:19:0
 1e00e52:    05 20             	if (r0 == 0) goto 10 <ble_vendor_get_peer_rssi+0x10 : 1e00e5e >			  ## ll_vendor.c:19:0
 1e00e54:    80 f3 68 bb       	call 95952 <ll_link_for_handle : 1e18528 >			  ## ll_vendor.c:26:12
 1e00e58:    02 20             	if (r0 == 0) goto 4 <ble_vendor_get_peer_rssi+0x10 : 1e00e5e >
 1e00e5a:    04 f9 88 01       	r4 = b[r0 + 392] (u)			  ## ll_vendor.c:30:18
 1e00e5e:    10 05             	r0 = r4.b0 (s)			  ## ll_vendor.c:31:1
 1e00e60:    54 01             	{pc, r4} = [sp++]			  ## ll_vendor.c:31:1


get_ble_work_state:
 1e00e62:    c0 ff 41 1d 00 00 	r0 = 7489 <ble_work_state : 1d41 >			  ## le_trans_data.c:311:0
 1e00e68:    00 60             	r0 = b[r0 + 0] (u)			  ## le_trans_data.c:312:12
 1e00e6a:    20 00             	rts			  ## le_trans_data.c:312:5


make_eir_packet_val:
 1e00e6c:    76 01             	[--sp] = {rets, r6-r4}			  ## le_common.h:126:0
 1e00e6e:    fe 0b             	sp += -4			  ## le_common.h:126:0
 1e00e70:    54 02             	r4 = [sp+20]			  ## le_common.h:126:0
 1e00e72:    25 98             	r5 = r4 + 2			  ## le_common.h:127:48
 1e00e74:    66 fb 1f 19       	r6 = 31 - r1			  ## le_common.h:127:28
 1e00e78:    0b 02             	[sp] = r3			  ## le_common.h:127:28
 1e00e7a:    56 f2 03 a0       	ifs (r6 >= r5) goto 6 <make_eir_packet_val+0x18 : 1e00e84 >			  ## le_common.h:127:9
 1e00e7e:    00 b3             	r0 = r1 + r4			  ## le_common.h:128:23
 1e00e80:    25 90             	r5 = r0 + 2			  ## le_common.h:128:34
 1e00e82:    08 18             	goto 16 <make_eir_packet_val+0x28 : 1e00e94 >			  ## le_common.h:128:34
 1e00e84:    11 98             	r1 = r4 + 1			  ## le_common.h:131:23
 1e00e86:    09 60             	b[r0 + 0] = r1			  ## le_common.h:131:12
 1e00e88:    1a 60             	b[r0 + 1] = r2			  ## le_common.h:132:12
 1e00e8a:    20 80             	r0 += 2			  ## le_common.h:133:16
 1e00e8c:    01 a0             	r1 = sp + 0
 1e00e8e:    42 08             	r2 = r4			  ## le_common.h:133:5
 1e00e90:    98 f3 28 30       	call 3170384 <memcpy : 106ee4 >			  ## le_common.h:133:5
 1e00e94:    40 05             	r0 = r5.b0 (u)			  ## le_common.h:135:1
 1e00e96:    02 0a             	sp += 4			  ## le_common.h:135:1
 1e00e98:    56 01             	{pc, r6-r4} = [sp++]			  ## le_common.h:135:1


bt_ble_adv_enable:
 1e00e9a:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_trans_data.c:1269:0
 1e00e9c:    fe 0b             	sp += -4			  ## le_trans_data.c:1269:0
 1e00e9e:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:1269:0
 1e00ea4:    01 f9 54 70       	r1 = b[r7 + 84] (u)			  ## le_trans_data.c:1269:0
 1e00ea8:    04 08             	r4 = r0			  ## le_trans_data.c:1269:0
 1e00eaa:    02 22             	if (r1 == 0) goto 4 <bt_ble_adv_enable+0x16 : 1e00eb0 >			  ## le_trans_data.c:1269:0
 1e00eac:    90 5f             	r0 = h[r7 + 50] (u)			  ## le_trans_data.c:1122:9
 1e00eae:    02 20             	if (r0 == 0) goto 4 <bt_ble_adv_enable+0x1A : 1e00eb4 >			  ## le_trans_data.c:1122:9
 1e00eb0:    02 0a             	sp += 4
 1e00eb2:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_trans_data.c:1271:1
 1e00eb4:    05 72             	r5 = 32			  ## le_trans_data.c:1128:5
 1e00eb6:    01 38             	if (r4 != 0) goto 2 <bt_ble_adv_enable+0x20 : 1e00eba >			  ## le_trans_data.c:1128:5
 1e00eb8:    25 70             	r5 = 2
 1e00eba:    d3 17             	call -90 <get_ble_work_state : 1e00e62 >			  ## le_trans_data.c:1132:18
 1e00ebc:    30 e0 04 30       	if (r0 < 3) goto 8 <bt_ble_adv_enable+0x2E : 1e00ec8 >
 1e00ec0:    00 e2 02 00       	if (r0 == 32) goto 4 <bt_ble_adv_enable+0x2E : 1e00ec8 >
 1e00ec4:    50 e0 f4 1f       	if (r0 != 5) goto -24 <bt_ble_adv_enable+0x16 : 1e00eb0 >
 1e00ec8:    50 f2 f2 0f       	if (r0 == r5) goto -28 <bt_ble_adv_enable+0x16 : 1e00eb0 >
 1e00ecc:    c0 ff f8 06 e1 01 	r0 = 31524600 <update_target_end+0x4C8 : 1e106f8 >			  ## le_trans_data.c:1148:5
 1e00ed2:    41 08             	r1 = r4			  ## le_trans_data.c:1148:5
 1e00ed4:    80 f3 67 5f       	call 48846 <printf : 1e0cda6 >			  ## le_trans_data.c:1148:5
 1e00ed8:    50 08             	r0 = r5			  ## le_trans_data.c:1149:5
 1e00eda:    1d 16             	call -966 <set_ble_work_state : 1e00b16 >			  ## le_trans_data.c:1149:5
 1e00edc:    75 28             	if (r4 == 0) goto 234 <bt_ble_adv_enable+0x12E : 1e00fc8 >			  ## le_trans_data.c:1149:5
 1e00ede:    70 70             	r0 = 7			  ## le_trans_data.c:951:5
 1e00ee0:    08 02             	[sp] = r0			  ## le_trans_data.c:951:5
 1e00ee2:    2a 70             	r10 = 2			  ## le_trans_data.c:951:5
 1e00ee4:    20 70             	r0 = 2			  ## le_trans_data.c:951:5
 1e00ee6:    31 70             	r1 = 3			  ## le_trans_data.c:951:5
 1e00ee8:    02 fb 20 03       	r2 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x18 : 320 >			  ## le_trans_data.c:951:5
 1e00eec:    03 70             	r3 = 0			  ## le_trans_data.c:951:5
 1e00eee:    08 70             	r8 = 0			  ## le_trans_data.c:951:5
 1e00ef0:    80 f3 c7 37       	call 28558 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:951:5
 1e00ef4:    10 70             	r0 = 1			  ## le_trans_data.c:951:5
 1e00ef6:    c9 ff c0 25 00 00 	r9 = 9664 <_sdfile_handl : 25c0 >			  ## le_trans_data.c:951:5
 1e00efc:    95 fc 18 00       	r5 = r9 + 24			  ## le_trans_data.c:887:15
 1e00f00:    01 70             	r1 = 0			  ## le_trans_data.c:887:15
 1e00f02:    12 70             	r2 = 1			  ## le_trans_data.c:887:15
 1e00f04:    63 70             	r3 = 6			  ## le_trans_data.c:887:15
 1e00f06:    08 02             	[sp] = r0			  ## le_trans_data.c:887:15
 1e00f08:    50 08             	r0 = r5			  ## le_trans_data.c:887:15
 1e00f0a:    b0 17             	call -160 <make_eir_packet_val : 1e00e6c >			  ## le_trans_data.c:887:15
 1e00f0c:    06 08             	r6 = r0			  ## le_trans_data.c:887:15
 1e00f0e:    40 bd             	r0 = r6 + r5			  ## le_trans_data.c:890:36
 1e00f10:    c3 ff 30 af 00 00 	r3 = 44848 <BTCTLER_CODE_TOTAL+0x2B98 : af30 >			  ## le_trans_data.c:890:15
 1e00f16:    32 70             	r2 = 3			  ## le_trans_data.c:890:15
 1e00f18:    1a f5 00 00       	[sp] = r10			  ## le_trans_data.c:890:15
 1e00f1c:    61 08             	r1 = r6			  ## le_trans_data.c:890:15
 1e00f1e:    a6 17             	call -180 <make_eir_packet_val : 1e00e6c >			  ## le_trans_data.c:890:15
 1e00f20:    60 09             	r0 += r6			  ## le_trans_data.c:890:12
 1e00f22:    06 04             	r6 = r0.b0 (u)			  ## le_trans_data.c:890:12
 1e00f24:    06 e2 07 30       	if (r6 < 32) goto 14 <bt_ble_adv_enable+0x9C : 1e00f36 >			  ## le_trans_data.c:902:9
 1e00f28:    c0 ff 0e 07 e1 01 	r0 = 31524622 <update_target_end+0x4DE : 1e1070e >			  ## le_trans_data.c:903:9
 1e00f2e:    80 f3 1b 60       	call 49206 <puts : 1e0cf68 >			  ## le_trans_data.c:903:9
 1e00f32:    f8 07             	r8 = -1			  ## le_trans_data.c:903:9
 1e00f34:    10 18             	goto 32 <bt_ble_adv_enable+0xBC : 1e00f56 >			  ## le_trans_data.c:903:9
 1e00f36:    c0 ff 2a 07 e1 01 	r0 = 31524650 <update_target_end+0x4FA : 1e1072a >			  ## le_trans_data.c:906:5
 1e00f3c:    61 08             	r1 = r6			  ## le_trans_data.c:906:5
 1e00f3e:    80 f3 32 5f       	call 48740 <printf : 1e0cda6 >			  ## le_trans_data.c:906:5
 1e00f42:    50 08             	r0 = r5			  ## le_trans_data.c:907:5
 1e00f44:    61 08             	r1 = r6			  ## le_trans_data.c:907:5
 1e00f46:    80 f3 ab 60       	call 49494 <printf_buf : 1e0d0a0 >			  ## le_trans_data.c:907:5
 1e00f4a:    30 70             	r0 = 3			  ## le_trans_data.c:909:5
 1e00f4c:    21 70             	r1 = 2			  ## le_trans_data.c:909:5
 1e00f4e:    62 08             	r2 = r6			  ## le_trans_data.c:909:5
 1e00f50:    53 08             	r3 = r5			  ## le_trans_data.c:909:5
 1e00f52:    80 f3 96 37       	call 28460 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:909:5
 1e00f56:    32 6e             	r2 = b[r7 + 3] (u)			  ## le_trans_data.c:925:19
 1e00f58:    d2 e1 01 30       	if (r2 < 29) goto 2 <bt_ble_adv_enable+0xC4 : 1e00f5e >
 1e00f5c:    d2 71             	r2 = 29			  ## le_trans_data.c:927:9
 1e00f5e:    25 94             	r5 = r2 + 2			  ## le_common.h:114:48
 1e00f60:    f5 e1 0d 80       	if (r5 > 31) goto 26 <bt_ble_adv_enable+0xE4 : 1e00f7e >
 1e00f64:    10 94             	r0 = r2 + 1			  ## le_common.h:118:23
 1e00f66:    10 f9 37 90       	b[r9 + 55] = r0			  ## le_common.h:118:12
 1e00f6a:    90 70             	r0 = 9			  ## le_common.h:119:12
 1e00f6c:    10 f9 38 90       	b[r9 + 56] = r0			  ## le_common.h:119:12
 1e00f70:    90 fc 39 00       	r0 = r9 + 57			  ## le_common.h:120:5
 1e00f74:    c1 ff f0 08 00 00 	r1 = 2288 <gap_device_name : 8f0 >			  ## le_common.h:120:5
 1e00f7a:    98 f3 b3 2f       	call 3170150 <memcpy : 106ee4 >			  ## le_common.h:120:5
 1e00f7e:    40 05             	r0 = r5.b0 (u)
 1e00f80:    00 e2 07 30       	if (r0 < 32) goto 14 <bt_ble_adv_enable+0xF8 : 1e00f92 >			  ## le_trans_data.c:932:9
 1e00f84:    c0 ff 43 07 e1 01 	r0 = 31524675 <update_target_end+0x513 : 1e10743 >			  ## le_trans_data.c:933:9
 1e00f8a:    80 f3 ed 5f       	call 49114 <puts : 1e0cf68 >			  ## le_trans_data.c:933:9
 1e00f8e:    f0 07             	r0 = -1			  ## le_trans_data.c:933:9
 1e00f90:    13 18             	goto 38 <bt_ble_adv_enable+0x11E : 1e00fb8 >			  ## le_trans_data.c:933:9
 1e00f92:    c0 ff 5f 07 e1 01 	r0 = 31524703 <update_target_end+0x52F : 1e1075f >			  ## le_trans_data.c:937:5
 1e00f98:    51 08             	r1 = r5			  ## le_trans_data.c:937:5
 1e00f9a:    80 f3 04 5f       	call 48648 <printf : 1e0cda6 >			  ## le_trans_data.c:937:5
 1e00f9e:    96 fc 37 00       	r6 = r9 + 55			  ## le_trans_data.c:938:5
 1e00fa2:    60 08             	r0 = r6			  ## le_trans_data.c:938:5
 1e00fa4:    51 08             	r1 = r5			  ## le_trans_data.c:938:5
 1e00fa6:    80 f3 7b 60       	call 49398 <printf_buf : 1e0d0a0 >			  ## le_trans_data.c:938:5
 1e00faa:    40 70             	r0 = 4			  ## le_trans_data.c:940:5
 1e00fac:    21 70             	r1 = 2			  ## le_trans_data.c:940:5
 1e00fae:    52 08             	r2 = r5			  ## le_trans_data.c:940:5
 1e00fb0:    63 08             	r3 = r6			  ## le_trans_data.c:940:5
 1e00fb2:    80 f3 66 37       	call 28364 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:940:5
 1e00fb6:    00 70             	r0 = 0			  ## le_trans_data.c:940:5
 1e00fb8:    e0 fd 80 00       	r0 = r0 | r8			  ## le_trans_data.c:954:9
 1e00fbc:    05 20             	if (r0 == 0) goto 10 <bt_ble_adv_enable+0x12E : 1e00fc8 >
 1e00fbe:    c0 ff 78 07 e1 01 	r0 = 31524728 <update_target_end+0x548 : 1e10778 >			  ## le_trans_data.c:957:9
 1e00fc4:    80 f3 d0 5f       	call 49056 <puts : 1e0cf68 >			  ## le_trans_data.c:957:9
 1e00fc8:    10 70             	r0 = 1			  ## le_trans_data.c:1166:5
 1e00fca:    11 70             	r1 = 1			  ## le_trans_data.c:1166:5
 1e00fcc:    42 08             	r2 = r4			  ## le_trans_data.c:1166:5
 1e00fce:    80 f3 58 37       	call 28336 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:1166:5
 1e00fd2:    6e 1f             	goto -292 <bt_ble_adv_enable+0x16 : 1e00eb0 >			  ## le_trans_data.c:1166:5


cbk_packet_handler:
 1e00fd4:    75 01             	[--sp] = {rets, r5, r4}			  ## le_trans_data.c:471:0
 1e00fd6:    fc 0b             	sp += -8			  ## le_trans_data.c:471:0
 1e00fd8:    24 08             	r4 = r2			  ## le_trans_data.c:471:0
 1e00fda:    40 e0 f8 10       	if (r0 != 4) goto 496 <.GJTIE104_0_0_+0x150 : 1e011ce >			  ## le_trans_data.c:471:0
 1e00fde:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_event.h:40:16
 1e00fe0:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >
 1e00fe6:    50 e0 15 00       	if (r0 == 5) goto 42 <cbk_packet_handler+0x40 : 1e01014 >			  ## le_trans_data.c:479:9
 1e00fea:    80 e0 2f 00       	if (r0 == 8) goto 94 <cbk_packet_handler+0x78 : 1e0104c >
 1e00fee:    e0 e3 34 00       	if (r0 == 62) goto 104 <cbk_packet_handler+0x86 : 1e0105a >
 1e00ff2:    70 e7 5d 00       	if (r0 == 119) goto 186 <.GJTIE104_0_0_+0x32 : 1e010b0 >
 1e00ff6:    00 ff b5 00 70 00 	if (r0 == 181) goto 224 <.GJTIE104_0_0_+0x5E : 1e010dc >
 1e00ffc:    00 ff fe 00 7f 00 	if (r0 == 254) goto 254 <.GJTIE104_0_0_+0x82 : 1e01100 >
 1e01002:    01 ff b6 00 e3 00 	if (r0 != 182) goto 454 <.GJTIE104_0_0_+0x150 : 1e011ce >
 1e01008:    c0 ff 04 04 e1 01 	r0 = 31523844 <update_target_end+0x1D4 : 1e10404 >			  ## le_trans_data.c:484:13
 1e0100e:    80 f3 ca 5e       	call 48532 <printf : 1e0cda6 >			  ## le_trans_data.c:484:13
 1e01012:    dd 18             	goto 442 <.GJTIE104_0_0_+0x150 : 1e011ce >
 1e01014:    51 68             	r1 = b[r4 + 5] (u)			  ## le_trans_data.c:542:13
 1e01016:    c0 ff ef 05 e1 01 	r0 = 31524335 <update_target_end+0x3BF : 1e105ef >			  ## le_trans_data.c:542:13
 1e0101c:    80 f3 c3 5e       	call 48518 <printf : 1e0cda6 >			  ## le_trans_data.c:542:13
 1e01020:    04 70             	r4 = 0
 1e01022:    9c 5b             	h[r5 + 50] = r4			  ## le_trans_data.c:546:24
 1e01024:    92 5b             	r2 = h[r5 + 50] (u)			  ## le_trans_data.c:547:13
 1e01026:    1c 02             	[sp+4] = r4			  ## le_trans_data.c:547:13
 1e01028:    70 70             	r0 = 7			  ## le_trans_data.c:547:13
 1e0102a:    41 70             	r1 = 4			  ## le_trans_data.c:547:13
 1e0102c:    03 70             	r3 = 0			  ## le_trans_data.c:547:13
 1e0102e:    0c 02             	[sp] = r4			  ## le_trans_data.c:547:13
 1e01030:    80 f3 27 37       	call 28238 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:547:13
 1e01034:    30 70             	r0 = 3			  ## le_trans_data.c:548:5
 1e01036:    01 70             	r1 = 0			  ## le_trans_data.c:548:5
 1e01038:    b8 16             	call -656 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## le_trans_data.c:548:5
 1e0103a:    50 70             	r0 = 5			  ## le_trans_data.c:549:13
 1e0103c:    6c 15             	call -1320 <set_ble_work_state : 1e00b16 >			  ## le_trans_data.c:549:13
 1e0103e:    00 f9 60 50       	r0 = b[r5 + 96] (u)			  ## le_trans_data.c:549:13
 1e01042:    02 30             	if (r0 != 0) goto 4 <cbk_packet_handler+0x74 : 1e01048 >			  ## le_trans_data.c:549:13
 1e01044:    10 70             	r0 = 1			  ## le_trans_data.c:552:17
 1e01046:    29 17             	call -430 <bt_ble_adv_enable : 1e00e9a >			  ## le_trans_data.c:552:17
 1e01048:    2c 6a             	b[r5 + 2] = r4			  ## le_trans_data.c:554:35
 1e0104a:    c1 18             	goto 386 <.GJTIE104_0_0_+0x150 : 1e011ce >			  ## le_trans_data.c:554:35
 1e0104c:    21 68             	r1 = b[r4 + 2] (u)			  ## le_trans_data.c:585:13
 1e0104e:    c0 ff a3 06 e1 01 	r0 = 31524515 <update_target_end+0x473 : 1e106a3 >			  ## le_trans_data.c:585:13
 1e01054:    80 f3 a7 5e       	call 48462 <printf : 1e0cda6 >
 1e01058:    ba 18             	goto 372 <.GJTIE104_0_0_+0x150 : 1e011ce >
 1e0105a:    20 68             	r0 = b[r4 + 2] (u)
 1e0105c:    f0 8f             	r0 += -1			  ## le_trans_data.c:490:13
 1e0105e:    b0 e0 b6 80       	if (r0 > 11) goto 364 <.GJTIE104_0_0_+0x150 : 1e011ce >			  ## le_trans_data.c:490:13
 1e01062:    41 c0             	r1 = r0 << 1
 1e01064:    b1 00             	tbh [r1]


.GJTIL104_0_0_:
 1e01066:    0c 00     < 12 : 0xC >
 1e01068:    b4 00     < 180 : 0xB4 >
 1e0106a:    56 00     < 86 : 0x56 >
 1e0106c:    b4 00     < 180 : 0xB4 >
 1e0106e:    b4 00     < 180 : 0xB4 >
 1e01070:    b4 00     < 180 : 0xB4 >
 1e01072:    59 00     < 89 : 0x59 >
 1e01074:    b4 00     < 180 : 0xB4 >
 1e01076:    b4 00     < 180 : 0xB4 >
 1e01078:    5f 00     < 95 : 0x5F >
 1e0107a:    b4 00     < 180 : 0xB4 >
 1e0107c:    69 00     < 105 : 0x69 >
 1e0107e:    41 70             	r1 = 4			  ## btstack_event.h:3351:16
 1e01080:    40 08             	r0 = r4			  ## btstack_event.h:3351:16
 1e01082:    80 f3 05 38       	call 28682 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3351:16
 1e01086:    98 5b             	h[r5 + 50] = r0			  ## le_trans_data.c:507:28
 1e01088:    91 5b             	r1 = h[r5 + 50] (u)			  ## le_trans_data.c:508:17
 1e0108a:    c0 ff 01 05 e1 01 	r0 = 31524097 <update_target_end+0x2D1 : 1e10501 >			  ## le_trans_data.c:508:17
 1e01090:    80 f3 89 5e       	call 48402 <printf : 1e0cda6 >			  ## le_trans_data.c:508:17
 1e01094:    80 98             	r0 = r4 + 8			  ## le_trans_data.c:509:59
 1e01096:    66 16             	call -820 <connection_update_complete_success : 1e00d64 >			  ## le_trans_data.c:509:17
 1e01098:    90 5b             	r0 = h[r5 + 50] (u)			  ## le_trans_data.c:510:17
 1e0109a:    51 16             	call -862 <server_profile_start : 1e00d3e >			  ## le_trans_data.c:510:17
 1e0109c:    30 70             	r0 = 3			  ## le_trans_data.c:512:8
 1e0109e:    11 70             	r1 = 1			  ## le_trans_data.c:512:8
 1e010a0:    84 16             	call -760 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## le_trans_data.c:512:8
 1e010a2:    90 5b             	r0 = h[r5 + 50] (u)			  ## le_trans_data.c:521:17
 1e010a4:    d4 16             	call -600 <ble_vendor_get_peer_rssi : 1e00e4e >			  ## le_trans_data.c:521:17
 1e010a6:    01 08             	r1 = r0			  ## le_trans_data.c:521:17
 1e010a8:    c0 ff 36 05 e1 01 	r0 = 31524150 <update_target_end+0x306 : 1e10536 >			  ## le_trans_data.c:521:17
 1e010ae:    d2 1f             	goto -92 <cbk_packet_handler+0x80 : 1e01054 >			  ## le_trans_data.c:521:17
 1e010b0:    41 70             	r1 = 4			  ## le_trans_data.c:573:19
 1e010b2:    40 08             	r0 = r4			  ## le_trans_data.c:573:19
 1e010b4:    80 f3 ec 37       	call 28632 <little_endian_read_16 : 1e08090 >			  ## le_trans_data.c:573:19
 1e010b8:    04 08             	r4 = r0			  ## le_trans_data.c:573:19
 1e010ba:    c0 ff 67 06 e1 01 	r0 = 31524455 <update_target_end+0x437 : 1e10667 >			  ## le_trans_data.c:574:13
 1e010c0:    41 08             	r1 = r4			  ## le_trans_data.c:574:13
 1e010c2:    80 f3 70 5e       	call 48352 <printf : 1e0cda6 >			  ## le_trans_data.c:574:13
 1e010c6:    22 28             	if (r4 == 0) goto 68 <.GJTIE104_0_0_+0x8E : 1e0110c >			  ## le_trans_data.c:575:17
 1e010c8:    20 6a             	r0 = b[r5 + 2] (u)			  ## le_trans_data.c:576:38
 1e010ca:    10 80             	r0 += 1			  ## le_trans_data.c:576:38
 1e010cc:    28 6a             	b[r5 + 2] = r0			  ## le_trans_data.c:576:38
 1e010ce:    c0 ff 85 06 e1 01 	r0 = 31524485 <update_target_end+0x455 : 1e10685 >			  ## le_trans_data.c:577:17
 1e010d4:    80 f3 67 5e       	call 48334 <printf : 1e0cda6 >			  ## le_trans_data.c:577:17
 1e010d8:    2e 15             	call -1444 <check_connetion_updata_deal : 1e00b36 >			  ## le_trans_data.c:578:17
 1e010da:    79 18             	goto 242 <.GJTIE104_0_0_+0x150 : 1e011ce >			  ## le_trans_data.c:578:17
 1e010dc:    41 70             	r1 = 4			  ## btstack_event.h:2313:16
 1e010de:    40 08             	r0 = r4			  ## btstack_event.h:2313:16
 1e010e0:    80 f3 d6 37       	call 28588 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:2313:16
 1e010e4:    04 fc fd ff       	r4 = r0 + -3			  ## le_trans_data.c:562:67
 1e010e8:    c0 ff 21 06 e1 01 	r0 = 31524385 <update_target_end+0x3F1 : 1e10621 >			  ## le_trans_data.c:563:13
 1e010ee:    41 08             	r1 = r4			  ## le_trans_data.c:563:13
 1e010f0:    80 f3 59 5e       	call 48306 <printf : 1e0cda6 >			  ## le_trans_data.c:563:13
 1e010f4:    80 70             	r0 = 8			  ## le_trans_data.c:564:13
 1e010f6:    11 70             	r1 = 1			  ## le_trans_data.c:564:13
 1e010f8:    42 08             	r2 = r4			  ## le_trans_data.c:564:13
 1e010fa:    80 f3 c2 36       	call 28036 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:564:13
 1e010fe:    67 18             	goto 206 <.GJTIE104_0_0_+0x150 : 1e011ce >			  ## le_trans_data.c:564:13
 1e01100:    c0 ff 3a 06 e1 01 	r0 = 31524410 <update_target_end+0x40A : 1e1063a >			  ## le_trans_data.c:569:13
 1e01106:    80 f3 4e 5e       	call 48284 <printf : 1e0cda6 >			  ## le_trans_data.c:569:13
 1e0110a:    61 18             	goto 194 <.GJTIE104_0_0_+0x150 : 1e011ce >
 1e0110c:    30 70             	r0 = 3			  ## le_trans_data.c:580:39
 1e0110e:    28 6a             	b[r5 + 2] = r0			  ## le_trans_data.c:580:39
 1e01110:    5e 18             	goto 188 <.GJTIE104_0_0_+0x150 : 1e011ce >			  ## le_trans_data.c:580:39
 1e01112:    40 08             	r0 = r4			  ## le_trans_data.c:525:17
 1e01114:    27 16             	call -946 <connection_update_complete_success : 1e00d64 >			  ## le_trans_data.c:525:17
 1e01116:    5b 18             	goto 182 <.GJTIE104_0_0_+0x150 : 1e011ce >
 1e01118:    c0 ff 56 05 e1 01 	r0 = 31524182 <update_target_end+0x326 : 1e10556 >			  ## le_trans_data.c:529:17
 1e0111e:    80 f3 42 5e       	call 48260 <printf : 1e0cda6 >			  ## le_trans_data.c:529:17
 1e01122:    55 18             	goto 170 <.GJTIE104_0_0_+0x150 : 1e011ce >
 1e01124:    31 68             	r1 = b[r4 + 3] (u)			  ## btstack_event.h:3699:16
 1e01126:    28 22             	if (r1 == 0) goto 80 <.GJTIE104_0_0_+0xFA : 1e01178 >			  ## le_trans_data.c:493:21
 1e01128:    c0 ff 3b 04 e1 01 	r0 = 31523899 <update_target_end+0x20B : 1e1043b >			  ## le_trans_data.c:494:21
 1e0112e:    80 f3 3a 5e       	call 48244 <printf : 1e0cda6 >			  ## le_trans_data.c:494:21
 1e01132:    50 70             	r0 = 5			  ## le_trans_data.c:495:21
 1e01134:    f0 14             	call -1568 <set_ble_work_state : 1e00b16 >			  ## le_trans_data.c:495:21
 1e01136:    4b 18             	goto 150 <.GJTIE104_0_0_+0x150 : 1e011ce >			  ## le_trans_data.c:495:21
 1e01138:    30 68             	r0 = b[r4 + 3] (u)			  ## btstack_event.h:6607:16
 1e0113a:    04 30             	if (r0 != 0) goto 8 <.GJTIE104_0_0_+0xC6 : 1e01144 >			  ## btstack_event.h:6607:16
 1e0113c:    c1 ff 8e 05 e1 01 	r1 = 31524238 <update_target_end+0x35E : 1e1058e >			  ## le_trans_data.c:534:17
 1e01142:    03 18             	goto 6 <.GJTIE104_0_0_+0xCC : 1e0114a >			  ## le_trans_data.c:534:17
 1e01144:    c1 ff 89 05 e1 01 	r1 = 31524233 <update_target_end+0x359 : 1e10589 >			  ## le_trans_data.c:534:17
 1e0114a:    c0 ff 93 05 e1 01 	r0 = 31524243 <update_target_end+0x363 : 1e10593 >			  ## le_trans_data.c:534:17
 1e01150:    80 f3 29 5e       	call 48210 <printf : 1e0cda6 >			  ## le_trans_data.c:534:17
 1e01154:    60 68             	r0 = b[r4 + 6] (u)			  ## le_trans_data.c:535:17
 1e01156:    c5 ff b0 2a e1 01 	r5 = 31533744 <phy_result : 1e12ab0 >			  ## le_trans_data.c:535:17
 1e0115c:    a1 f6 00 50       	r1 = [r5+r0<<2]			  ## le_trans_data.c:535:17
 1e01160:    c0 ff c1 05 e1 01 	r0 = 31524289 <update_target_end+0x391 : 1e105c1 >			  ## le_trans_data.c:535:17
 1e01166:    80 f3 1e 5e       	call 48188 <printf : 1e0cda6 >			  ## le_trans_data.c:535:17
 1e0116a:    70 68             	r0 = b[r4 + 7] (u)			  ## le_trans_data.c:536:17
 1e0116c:    a1 f6 00 50       	r1 = [r5+r0<<2]			  ## le_trans_data.c:536:17
 1e01170:    c0 ff d8 05 e1 01 	r0 = 31524312 <update_target_end+0x3A8 : 1e105d8 >			  ## le_trans_data.c:536:17
 1e01176:    6e 1f             	goto -292 <cbk_packet_handler+0x80 : 1e01054 >			  ## le_trans_data.c:536:17
 1e01178:    41 70             	r1 = 4			  ## btstack_event.h:3709:16
 1e0117a:    40 08             	r0 = r4			  ## btstack_event.h:3709:16
 1e0117c:    80 f3 88 37       	call 28432 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3709:16
 1e01180:    98 5b             	h[r5 + 50] = r0			  ## le_trans_data.c:498:28
 1e01182:    91 5b             	r1 = h[r5 + 50] (u)			  ## le_trans_data.c:499:17
 1e01184:    c0 ff 67 04 e1 01 	r0 = 31523943 <update_target_end+0x237 : 1e10467 >			  ## le_trans_data.c:499:17
 1e0118a:    80 f3 0c 5e       	call 48152 <printf : 1e0cda6 >			  ## le_trans_data.c:499:17
 1e0118e:    a1 71             	r1 = 26			  ## btstack_event.h:3773:16
 1e01190:    40 08             	r0 = r4			  ## btstack_event.h:3773:16
 1e01192:    80 f3 7d 37       	call 28410 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3773:16
 1e01196:    01 08             	r1 = r0			  ## btstack_event.h:3773:16
 1e01198:    c0 ff a6 04 e1 01 	r0 = 31524006 <update_target_end+0x276 : 1e104a6 >			  ## le_trans_data.c:500:17
 1e0119e:    80 f3 02 5e       	call 48132 <printf : 1e0cda6 >			  ## le_trans_data.c:500:17
 1e011a2:    c1 71             	r1 = 28			  ## btstack_event.h:3783:16
 1e011a4:    40 08             	r0 = r4			  ## btstack_event.h:3783:16
 1e011a6:    80 f3 73 37       	call 28390 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3783:16
 1e011aa:    01 08             	r1 = r0			  ## btstack_event.h:3783:16
 1e011ac:    c0 ff c5 04 e1 01 	r0 = 31524037 <update_target_end+0x295 : 1e104c5 >			  ## le_trans_data.c:501:17
 1e011b2:    80 f3 f8 5d       	call 48112 <printf : 1e0cda6 >			  ## le_trans_data.c:501:17
 1e011b6:    e1 71             	r1 = 30			  ## btstack_event.h:3793:16
 1e011b8:    40 08             	r0 = r4			  ## btstack_event.h:3793:16
 1e011ba:    80 f3 69 37       	call 28370 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3793:16
 1e011be:    01 08             	r1 = r0			  ## btstack_event.h:3793:16
 1e011c0:    c0 ff e3 04 e1 01 	r0 = 31524067 <update_target_end+0x2B3 : 1e104e3 >			  ## le_trans_data.c:502:17
 1e011c6:    80 f3 ee 5d       	call 48092 <printf : 1e0cda6 >			  ## le_trans_data.c:502:17
 1e011ca:    90 5b             	r0 = h[r5 + 50] (u)			  ## le_trans_data.c:503:17
 1e011cc:    b8 15             	call -1168 <server_profile_start : 1e00d3e >			  ## le_trans_data.c:503:17
 1e011ce:    04 0a             	sp += 8
 1e011d0:    55 01             	{pc, r5, r4} = [sp++]			  ## le_trans_data.c:613:1


norflash_origin_read:
 1e011d2:    d0 f3 43 13       	goto 2107014 <_norflash_read : 385c >			  ## vm_sfc.c:557:0


doe:
 1e011d6:    76 01             	[--sp] = {rets, r6-r4}			  ## encryption.c:68:0
 1e011d8:    03 62             	r3 = b[r1 + 0] (u)			  ## encryption.c:68:0
 1e011da:    d3 b0             	r3 ^= r0			  ## encryption.c:68:0
 1e011dc:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e011de:    93 f9 01 10       	b[r1 ++= 1] = r3			  ## encryption.c:75:12
 1e011e2:    1a 24             	if (r2 == 0) goto 52 <doe+0x42 : 1e01218 >			  ## encryption.c:75:12
 1e011e4:    03 fb de ef       	r3 = -4130 <bank_code_load_addr+0x1E03CA : 1ffefde >
 1e011e8:    44 c0             	r4 = r0 << 1			  ## encryption.c:57:24
 1e011ea:    54 b7             	r4 &= r3			  ## encryption.c:58:19
 1e011ec:    20 04             	r0 = r0.l (u)			  ## encryption.c:55:33
 1e011ee:    c5 d3             	r5 = r0 >> 15			  ## encryption.c:55:33
 1e011f0:    54 ba             	r4 |= r5			  ## encryption.c:58:19
 1e011f2:    c6 d2             	r6 = r0 >> 11			  ## encryption.c:58:31
 1e011f4:    d6 ba             	r6 ^= r5			  ## encryption.c:58:35
 1e011f6:    36 c3             	r6 = r6 << 12			  ## encryption.c:58:19
 1e011f8:    26 fd 10 6a       	r6 = r6 & 4096			  ## encryption.c:58:19
 1e011fc:    54 bc             	r4 |= r6			  ## encryption.c:59:18
 1e011fe:    00 d1             	r0 = r0 >> 4			  ## encryption.c:59:29
 1e01200:    d0 ba             	r0 ^= r5			  ## encryption.c:59:32
 1e01202:    05 62             	r5 = b[r1 + 0] (u)			  ## encryption.c:59:32
 1e01204:    40 c1             	r0 = r0 << 5			  ## encryption.c:59:18
 1e01206:    20 fd 20 09       	r0 = r0 & 32			  ## encryption.c:59:18
 1e0120a:    50 b8             	r0 |= r4			  ## encryption.c:60:18
 1e0120c:    e1 fd 00 45       	r4 = r5 ^ r0			  ## encryption.c:60:18
 1e01210:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e01212:    94 f9 01 10       	b[r1 ++= 1] = r4
 1e01216:    e8 35             	if (r2 != 0) goto -48 <doe+0x12 : 1e011e8 >
 1e01218:    56 01             	{pc, r6-r4} = [sp++]			  ## encryption.c:78:1


CRC16:
 1e0121a:    77 01             	[--sp] = {rets, r7-r4}			  ## crc16.c:21:0
 1e0121c:    15 08             	r5 = r1			  ## crc16.c:21:0
 1e0121e:    06 08             	r6 = r0			  ## crc16.c:21:0
 1e01220:    c4 ff a4 20 00 00 	r4 = 8356 <mutex : 20a4 >			  ## crc16.c:21:0
 1e01226:    01 70             	r1 = 0			  ## crc16.c:25:5
 1e01228:    07 70             	r7 = 0			  ## crc16.c:25:5
 1e0122a:    40 08             	r0 = r4			  ## crc16.c:25:5
 1e0122c:    98 f3 fa 2d       	call 3169268 <os_mutex_pend : 106e24 >			  ## crc16.c:25:5
 1e01230:    c0 ff 00 35 1e 00 	r0 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## crc16.c:25:5
 1e01236:    1f 40             	[r0 + 4] = r7			  ## crc16.c:27:17
 1e01238:    05 2a             	if (r5 == 0) goto 10 <CRC16+0x2A : 1e01244 >			  ## crc16.c:27:17
 1e0123a:    81 f9 01 60       	r1 = b[r6 ++= 1] (u)			  ## crc16.c:29:24
 1e0123e:    f5 8f             	r5 += -1			  ## crc16.c:28:15
 1e01240:    09 40             	[r0 + 0] = r1			  ## crc16.c:29:22
 1e01242:    fb 3b             	if (r5 != 0) goto -10 <CRC16+0x20 : 1e0123a >
 1e01244:    08 00             	csync			  ## crc16.c:31:5
 1e01246:    15 40             	r5 = [r0 + 4]			  ## crc16.c:32:19
 1e01248:    40 08             	r0 = r4			  ## crc16.c:35:5
 1e0124a:    98 f3 ed 2d       	call 3169242 <os_mutex_post : 106e28 >			  ## crc16.c:35:5
 1e0124e:    60 05             	r0 = r5.l (u)			  ## crc16.c:37:5
 1e01250:    57 01             	{pc, r7-r4} = [sp++]			  ## crc16.c:37:5


norflash_read:
 1e01252:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:620:0
 1e01254:    c3 ff c0 25 00 00 	r3 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:620:0
 1e0125a:    07 f6 b0 30       	r7 = [r3 + 176]			  ## vm_sfc.c:623:33
 1e0125e:    26 08             	r6 = r2			  ## vm_sfc.c:623:33
 1e01260:    14 08             	r4 = r1			  ## vm_sfc.c:623:33
 1e01262:    05 08             	r5 = r0			  ## vm_sfc.c:623:33
 1e01264:    67 f2 15 90       	if (r7 <= r6) goto 42 <norflash_read+0x40 : 1e01292 >			  ## vm_sfc.c:623:9
 1e01268:    37 fc 58 01       	r7 = r3 + 344			  ## vm_sfc.c:624:9
 1e0126c:    f1 07             	r1 = -1			  ## vm_sfc.c:624:9
 1e0126e:    70 08             	r0 = r7			  ## vm_sfc.c:624:9
 1e01270:    98 f3 d8 2d       	call 3169200 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:624:9
 1e01274:    50 08             	r0 = r5			  ## vm_sfc.c:625:9
 1e01276:    61 08             	r1 = r6			  ## vm_sfc.c:625:9
 1e01278:    42 08             	r2 = r4			  ## vm_sfc.c:625:9
 1e0127a:    90 f3 ef 12       	call 2106846 <_norflash_read : 385c >			  ## vm_sfc.c:625:9
 1e0127e:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## vm_sfc.c:626:9
 1e01284:    51 08             	r1 = r5			  ## vm_sfc.c:626:9
 1e01286:    42 08             	r2 = r4			  ## vm_sfc.c:626:9
 1e01288:    a6 17             	call -180 <doe : 1e011d6 >			  ## vm_sfc.c:626:9
 1e0128a:    70 08             	r0 = r7			  ## vm_sfc.c:627:9
 1e0128c:    98 f3 cc 2d       	call 3169176 <os_mutex_post : 106e28 >			  ## vm_sfc.c:627:9
 1e01290:    08 18             	goto 16 <norflash_read+0x50 : 1e012a2 >			  ## vm_sfc.c:627:9
 1e01292:    60 08             	r0 = r6			  ## vm_sfc.c:629:35
 1e01294:    90 f3 07 13       	call 2106894 <flash_addr2cpu_addr : 38a6 >			  ## vm_sfc.c:629:35
 1e01298:    01 08             	r1 = r0			  ## vm_sfc.c:629:35
 1e0129a:    50 08             	r0 = r5			  ## vm_sfc.c:629:9
 1e0129c:    42 08             	r2 = r4			  ## vm_sfc.c:629:9
 1e0129e:    98 f3 21 2e       	call 3169346 <memcpy : 106ee4 >			  ## vm_sfc.c:629:9
 1e012a2:    40 08             	r0 = r4			  ## vm_sfc.c:632:5
 1e012a4:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:632:5


jl_file_head_valid_check:
 1e012a6:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:36:0
 1e012a8:    04 08             	r4 = r0			  ## flash_fs_api.c:36:0
 1e012aa:    0a 28             	if (r4 == 0) goto 20 <jl_file_head_valid_check+0x1A : 1e012c0 >			  ## flash_fs_api.c:39:9
 1e012ac:    20 98             	r0 = r4 + 2			  ## flash_fs_api.c:44:42
 1e012ae:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e012b0:    b4 17             	call -152 <CRC16 : 1e0121a >			  ## flash_fs_api.c:44:20
 1e012b2:    02 58             	r2 = h[r4 + 0] (u)			  ## flash_fs_api.c:45:15
 1e012b4:    01 08             	r1 = r0			  ## flash_fs_api.c:44:20
 1e012b6:    f0 07             	r0 = -1			  ## flash_fs_api.c:45:9
 1e012b8:    12 f2 01 10       	if (r2 != r1) goto 2 <jl_file_head_valid_check+0x18 : 1e012be >
 1e012bc:    00 70             	r0 = 0
 1e012be:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:45:9
 1e012c0:    e0 07             	r0 = -2			  ## flash_fs_api.c:51:5
 1e012c2:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:51:5


norflash_ioctl:
 1e012c4:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:888:0
 1e012c6:    16 08             	r6 = r1			  ## vm_sfc.c:888:0
 1e012c8:    07 08             	r7 = r0			  ## vm_sfc.c:888:0
 1e012ca:    c8 ff c0 25 00 00 	r8 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:888:0
 1e012d0:    84 fc 58 01       	r4 = r8 + 344			  ## vm_sfc.c:889:5
 1e012d4:    f1 07             	r1 = -1			  ## vm_sfc.c:889:5
 1e012d6:    40 08             	r0 = r4			  ## vm_sfc.c:889:5
 1e012d8:    98 f3 a4 2d       	call 3169096 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:889:5
 1e012dc:    05 70             	r5 = 0
 1e012de:    0c ff ca 70 19 00 	ifs (r7 > 202) goto 50 <.GJTIE130_0_0_+0x24 : 1e01316 >			  ## vm_sfc.c:892:5
 1e012e4:    70 fc 9c ff       	r0 = r7 + -100
 1e012e8:    30 e0 21 80       	if (r0 > 3) goto 66 <.GJTIE130_0_0_+0x3C : 1e0132e >
 1e012ec:    a0 00             	tbb [r0]


.GJTIS130_0_0_:
 1e012ee:    02     < 2 : 0x2 >
 1e012ef:    37     < 55 : 0x37 >
 1e012f0:    3a     < 58 : 0x3A >
 1e012f1:    3d     < 61 : 0x3D >
 1e012f2:    00 f6 9c 80       	r0 = [r8 + 156]			  ## vm_sfc.c:909:24
 1e012f6:    77 30             	if (r0 != 0) goto 238 <.GJTIE130_0_0_+0xF4 : 1e013e6 >			  ## vm_sfc.c:909:24
 1e012f8:    90 f3 15 13       	call 2106922 <read_flash_id : 3926 >			  ## vm_sfc.c:910:13
 1e012fc:    00 f6 9c 80       	r0 = [r8 + 156]			  ## vm_sfc.c:911:66
 1e01300:    01 04             	r1 = r0.b0 (u)			  ## vm_sfc.c:911:75
 1e01302:    01 8f             	r1 += -16			  ## vm_sfc.c:911:83
 1e01304:    11 e0 66 b0       	ifs (r1 < 1) goto 204 <.GJTIE130_0_0_+0xE2 : 1e013d4 >
 1e01308:    13 70             	r3 = 1
 1e0130a:    32 08             	r2 = r3
 1e0130c:    53 c0             	r3 = r2 << 1			  ## vm_sfc.c:859:16
 1e0130e:    51 f3 fc ff       	if (--r1 != 0) goto -8 <.GJTIE130_0_0_+0x18 : 1e0130a >			  ## vm_sfc.c:858:5
 1e01312:    51 c4             	r1 = r2 << 17			  ## vm_sfc.c:911:91
 1e01314:    61 18             	goto 194 <.GJTIE130_0_0_+0xE6 : 1e013d8 >			  ## vm_sfc.c:911:91
 1e01316:    c0 ff 00 56 04 40 	r0 = 1074025984 <text_size+0x2890C : 45600 >
 1e0131c:    07 f2 11 c0       	ifs (r7 > r0) goto 34 <.GJTIE130_0_0_+0x50 : 1e01342 >
 1e01320:    00 ff cb 70 61 00 	if (r7 == 203) goto 194 <.GJTIE130_0_0_+0xF6 : 1e013e8 >
 1e01326:    00 ff cc 70 05 00 	if (r7 == 204) goto 10 <.GJTIE130_0_0_+0x44 : 1e01336 >
 1e0132c:    51 18             	goto 162 <.GJTIE130_0_0_+0xDE : 1e013d0 >
 1e0132e:    70 fc 38 ff       	r0 = r7 + -200
 1e01332:    20 e0 4d 20       	if (r0 >= 2) goto 154 <.GJTIE130_0_0_+0xDE : 1e013d0 >
 1e01336:    70 08             	r0 = r7			  ## vm_sfc.c:919:15
 1e01338:    61 08             	r1 = r6			  ## vm_sfc.c:919:15
 1e0133a:    90 f3 9c 13       	call 2107192 <norflash_erase : 3a76 >			  ## vm_sfc.c:919:15
 1e0133e:    05 08             	r5 = r0			  ## vm_sfc.c:919:15
 1e01340:    53 18             	goto 166 <.GJTIE130_0_0_+0xF6 : 1e013e8 >
 1e01342:    10 80             	r0 += 1
 1e01344:    07 f2 21 00       	if (r7 == r0) goto 66 <.GJTIE130_0_0_+0x98 : 1e0138a >
 1e01348:    10 80             	r0 += 1
 1e0134a:    07 f2 41 10       	if (r7 != r0) goto 130 <.GJTIE130_0_0_+0xDE : 1e013d0 >
 1e0134e:    81 fc a0 00       	r1 = r8 + 160			  ## vm_sfc.c:936:9
 1e01352:    02 71             	r2 = 16			  ## vm_sfc.c:936:9
 1e01354:    60 08             	r0 = r6			  ## vm_sfc.c:936:9
 1e01356:    98 f3 c5 2d       	call 3169162 <memcpy : 106ee4 >			  ## vm_sfc.c:936:9
 1e0135a:    46 18             	goto 140 <.GJTIE130_0_0_+0xF6 : 1e013e8 >			  ## vm_sfc.c:936:9
 1e0135c:    c0 f4 01 6a       	[r6 + 0] = 256			  ## vm_sfc.c:894:23
 1e01360:    43 18             	goto 134 <.GJTIE130_0_0_+0xF6 : 1e013e8 >			  ## vm_sfc.c:894:23
 1e01362:    c0 f4 01 6b       	[r6 + 0] = 65536			  ## vm_sfc.c:897:23
 1e01366:    40 18             	goto 128 <.GJTIE130_0_0_+0xF6 : 1e013e8 >			  ## vm_sfc.c:897:23
 1e01368:    00 f6 98 80       	r0 = [r8 + 152]			  ## vm_sfc.c:901:24
 1e0136c:    3c 30             	if (r0 != 0) goto 120 <.GJTIE130_0_0_+0xF4 : 1e013e6 >			  ## vm_sfc.c:901:24
 1e0136e:    90 f3 da 12       	call 2106804 <read_flash_id : 3926 >			  ## vm_sfc.c:902:13
 1e01372:    00 f9 9c 80       	r0 = b[r8 + 156] (u)			  ## vm_sfc.c:903:66
 1e01376:    00 8f             	r0 += -16			  ## vm_sfc.c:903:83
 1e01378:    10 e0 31 b0       	ifs (r0 < 1) goto 98 <.GJTIE130_0_0_+0xEC : 1e013de >
 1e0137c:    12 70             	r2 = 1
 1e0137e:    21 08             	r1 = r2
 1e01380:    4a c0             	r2 = r1 << 1			  ## vm_sfc.c:859:16
 1e01382:    50 f3 fc ff       	if (--r0 != 0) goto -8 <.GJTIE130_0_0_+0x8C : 1e0137e >			  ## vm_sfc.c:858:5
 1e01386:    48 c4             	r0 = r1 << 17			  ## vm_sfc.c:903:91
 1e01388:    2c 18             	goto 88 <.GJTIE130_0_0_+0xF0 : 1e013e2 >			  ## vm_sfc.c:903:91
 1e0138a:    02 3c             	if (r6 != 0) goto 4 <.GJTIE130_0_0_+0x9E : 1e01390 >
 1e0138c:    90 f3 83 10       	call 2105606 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e01390:    87 fc 94 00       	r7 = r8 + 148
 1e01394:    c0 9e             	r0 = r7 + 12			  ## vm_sfc.c:870:5
 1e01396:    02 71             	r2 = 16			  ## vm_sfc.c:870:5
 1e01398:    61 08             	r1 = r6			  ## vm_sfc.c:870:5
 1e0139a:    98 f3 a3 2d       	call 3169094 <memcpy : 106ee4 >			  ## vm_sfc.c:870:5
 1e0139e:    50 4c             	r0 = [r6 + 20]			  ## vm_sfc.c:871:5
 1e013a0:    41 4c             	r1 = [r6 + 16]			  ## vm_sfc.c:871:5
 1e013a2:    88 4e             	[r7 + 32] = r0			  ## vm_sfc.c:871:5
 1e013a4:    79 4e             	[r7 + 28] = r1			  ## vm_sfc.c:871:5
 1e013a6:    60 4c             	r0 = [r6 + 24]			  ## vm_sfc.c:873:35
 1e013a8:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:873:27
 1e013aa:    43 4e             	r3 = [r7 + 16]			  ## vm_sfc.c:875:60
 1e013ac:    30 08             	r0 = r3			  ## vm_sfc.c:875:26
 1e013ae:    90 f3 7a 12       	call 2106612 <flash_addr2cpu_addr : 38a6 >			  ## vm_sfc.c:875:26
 1e013b2:    c1 ff 14 02 1f 00 	r1 = 2032148 <uECC_vli_cmp_unsafe+0xE9218 : 1f0214 >			  ## vm_sfc.c:875:26
 1e013b8:    38 42             	[r1 + 12] = r0			  ## vm_sfc.c:875:24
 1e013ba:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1E13EB : 1ffffff >			  ## vm_sfc.c:876:24
 1e013c0:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:876:24
 1e013c2:    00 f4 02 19       	[r1 + 0] |= 2			  ## vm_sfc.c:881:21
 1e013c6:    01 72             	r1 = 32			  ## vm_sfc.c:883:5
 1e013c8:    30 08             	r0 = r3			  ## vm_sfc.c:883:5
 1e013ca:    90 f3 bf 13       	call 2107262 <flushinv_dcache_api : 3b4c >			  ## vm_sfc.c:883:5
 1e013ce:    0c 18             	goto 24 <.GJTIE130_0_0_+0xF6 : 1e013e8 >			  ## vm_sfc.c:883:5
 1e013d0:    75 06             	r5 = -25
 1e013d2:    0a 18             	goto 20 <.GJTIE130_0_0_+0xF6 : 1e013e8 >
 1e013d4:    20 fb 01 1b       	r1 = 65536
 1e013d8:    11 f6 98 80       	[r8 + 152] = r1			  ## vm_sfc.c:911:39
 1e013dc:    04 18             	goto 8 <.GJTIE130_0_0_+0xF4 : 1e013e6 >			  ## vm_sfc.c:911:39
 1e013de:    20 fb 01 0b       	r0 = 65536
 1e013e2:    10 f6 98 80       	[r8 + 152] = r0			  ## vm_sfc.c:903:39
 1e013e6:    08 4c             	[r6 + 0] = r0
 1e013e8:    40 08             	r0 = r4			  ## vm_sfc.c:944:5
 1e013ea:    98 f3 1d 2d       	call 3168826 <os_mutex_post : 106e28 >			  ## vm_sfc.c:944:5
 1e013ee:    50 08             	r0 = r5			  ## vm_sfc.c:945:5
 1e013f0:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:945:5


__jl_fs_sector_align:
 1e013f2:    34 00             	[--sp] = rets			  ## flash_fs_api.c:636:0
 1e013f4:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## flash_fs_api.c:636:0
 1e013fa:    03 f9 27 10       	r3 = b[r1 + 39] (u)			  ## flash_fs_api.c:636:0
 1e013fe:    02 08             	r2 = r0			  ## flash_fs_api.c:636:0
 1e01400:    02 36             	if (r3 != 0) goto 4 <__jl_fs_sector_align+0x14 : 1e01406 >			  ## flash_fs_api.c:636:0
 1e01402:    90 f3 48 10       	call 2105488 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e01406:    10 70             	r0 = 1			  ## flash_fs_api.c:641:9
 1e01408:    03 e1 01 00       	if (r3 == 16) goto 2 <__jl_fs_sector_align+0x1C : 1e0140e >			  ## flash_fs_api.c:641:9
 1e0140c:    00 70             	r0 = 0			  ## flash_fs_api.c:641:9
 1e0140e:    01 c3             	r1 = r0 << 12			  ## flash_fs_api.c:641:9
 1e01410:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:641:9
 1e01414:    13 e0 01 00       	if (r3 == 1) goto 2 <__jl_fs_sector_align+0x28 : 1e0141a >			  ## flash_fs_api.c:641:9
 1e01418:    10 08             	r0 = r1			  ## flash_fs_api.c:641:9
 1e0141a:    06 20             	if (r0 == 0) goto 12 <__jl_fs_sector_align+0x36 : 1e01428 >
 1e0141c:    01 b4             	r1 = r2 + r0			  ## flash_fs_api.c:650:27
 1e0141e:    f1 8f             	r1 += -1			  ## flash_fs_api.c:650:41
 1e01420:    60 fb 00 09       	r0 = 0 - r0			  ## flash_fs_api.c:650:61
 1e01424:    e2 fd 00 21       	r2 = r1 & r0			  ## flash_fs_api.c:650:61
 1e01428:    20 08             	r0 = r2			  ## flash_fs_api.c:655:5
 1e0142a:    30 00             	pc = [sp++]			  ## flash_fs_api.c:655:5


clr_wdt:
 1e0142c:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:34:0
 1e01432:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:30:18
 1e01434:    11 b3             	r1 |= 64			  ## wdt.c:30:18
 1e01436:    09 60             	b[r0 + 0] = r1			  ## wdt.c:30:18
 1e01438:    20 00             	rts			  ## wdt.c:36:1


sfc_erase:
 1e0143a:    34 00             	[--sp] = rets			  ## vm.c:1395:0
 1e0143c:    02 fc ff ff       	r2 = r0 + -1			  ## vm.c:1401:9
 1e01440:    00 70             	r0 = 0			  ## vm.c:1401:9
 1e01442:    22 e0 0d 80       	if (r2 > 2) goto 26 <sfc_erase+0x26 : 1e01460 >
 1e01446:    c0 ff 94 30 e1 01 	r0 = 31535252 <bluetooth_base_uuid+0x22 : 1e13094 >			  ## vm.c:1401:9
 1e0144c:    c3 ff 88 30 e1 01 	r3 = 31535240 <bluetooth_base_uuid+0x16 : 1e13088 >			  ## vm.c:1401:9
 1e01452:    a3 f6 00 32       	r3 = [r3+r2<<2]			  ## vm.c:1401:9
 1e01456:    a0 f6 00 02       	r0 = [r0+r2<<2]			  ## vm.c:1401:9
 1e0145a:    51 b7             	r1 &= r3
 1e0145c:    33 17             	call -410 <norflash_ioctl : 1e012c4 >			  ## vm.c:1423:5
 1e0145e:    10 70             	r0 = 1
 1e01460:    30 00             	pc = [sp++]			  ## vm.c:1426:1


flash_erase_by_blcok_n_sector:
 1e01462:    7a 01             	[--sp] = {rets, r10-r4}			  ## flash_fs_api.c:149:0
 1e01464:    15 08             	r5 = r1			  ## flash_fs_api.c:149:0
 1e01466:    04 08             	r4 = r0			  ## flash_fs_api.c:149:0
 1e01468:    84 fd 60 84       	r8 = uextra(r4, p:12, l:4)			  ## flash_fs_api.c:156:41
 1e0146c:    03 ff 00 51 20 00 	if (r5 < 256) goto 64 <flash_erase_by_blcok_n_sector+0x50 : 1e014b2 >
 1e01472:    84 fd 40 04       	r0 = uextra(r4, p:8, l:4)			  ## flash_fs_api.c:162:39
 1e01476:    1d 20             	if (r0 == 0) goto 58 <flash_erase_by_blcok_n_sector+0x50 : 1e014b2 >
 1e01478:    69 fb 10 09       	r9 = 16 - r0			  ## flash_fs_api.c:165:44
 1e0147c:    09 e0 18 00       	if (r9 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x4E : 1e014b0 >
 1e01480:    07 70             	r7 = 0
 1e01482:    46 08             	r6 = r4
 1e01484:    54 08             	r4 = r5
 1e01486:    d2 17             	call -92 <clr_wdt : 1e0142c >			  ## flash_fs_api.c:171:13
 1e01488:    30 70             	r0 = 3			  ## flash_fs_api.c:173:17
 1e0148a:    61 08             	r1 = r6			  ## flash_fs_api.c:173:17
 1e0148c:    d6 17             	call -84 <sfc_erase : 1e0143a >			  ## flash_fs_api.c:173:17
 1e0148e:    45 fc 00 ff       	r5 = r4 + -256			  ## flash_fs_api.c:176:50
 1e01492:    50 08             	r0 = r5			  ## flash_fs_api.c:176:19
 1e01494:    f4 ef 01 80       	if (r4 > 255) goto 2 <flash_erase_by_blcok_n_sector+0x38 : 1e0149a >			  ## flash_fs_api.c:176:19
 1e01498:    00 70             	r0 = 0			  ## flash_fs_api.c:176:19
 1e0149a:    f0 ef 06 90       	if (r0 <= 255) goto 12 <flash_erase_by_blcok_n_sector+0x48 : 1e014aa >
 1e0149e:    17 80             	r7 += 1			  ## flash_fs_api.c:170:42
 1e014a0:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:175:24
 1e014a4:    50 08             	r0 = r5
 1e014a6:    97 f2 ec 3f       	if (r7 < r9) goto -40 <flash_erase_by_blcok_n_sector+0x20 : 1e01482 >
 1e014aa:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:148:56
 1e014ae:    05 08             	r5 = r0			  ## flash_fs_api.c:148:56
 1e014b0:    18 80             	r8 += 1			  ## flash_fs_api.c:182:25
 1e014b2:    08 e0 1f 00       	if (r8 == 0) goto 62 <flash_erase_by_blcok_n_sector+0x92 : 1e014f4 >
 1e014b6:    23 ff 10 5a 1c 00 	if (r5 < 4096) goto 56 <flash_erase_by_blcok_n_sector+0x92 : 1e014f4 >
 1e014bc:    68 fb 10 89       	r8 = 16 - r8			  ## flash_fs_api.c:188:48
 1e014c0:    08 e0 18 00       	if (r8 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x92 : 1e014f4 >
 1e014c4:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:195:13
 1e014c8:    07 70             	r7 = 0			  ## flash_fs_api.c:195:13
 1e014ca:    46 08             	r6 = r4
 1e014cc:    05 08             	r5 = r0
 1e014ce:    ae 17             	call -164 <clr_wdt : 1e0142c >			  ## flash_fs_api.c:195:13
 1e014d0:    20 70             	r0 = 2			  ## flash_fs_api.c:197:17
 1e014d2:    61 08             	r1 = r6			  ## flash_fs_api.c:197:17
 1e014d4:    b2 17             	call -156 <sfc_erase : 1e0143a >			  ## flash_fs_api.c:197:17
 1e014d6:    23 ff 10 5a 0a 00 	if (r5 < 4096) goto 20 <flash_erase_by_blcok_n_sector+0x8E : 1e014f0 >			  ## flash_fs_api.c:197:17
 1e014dc:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:199:24
 1e014e0:    10 70             	r0 = 1			  ## flash_fs_api.c:204:13
 1e014e2:    98 f3 69 2c       	call 3168466 <os_time_dly : 106db8 >			  ## flash_fs_api.c:204:13
 1e014e6:    17 80             	r7 += 1			  ## flash_fs_api.c:194:44
 1e014e8:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:194:23
 1e014ec:    87 f2 ed 3f       	if (r7 < r8) goto -38 <flash_erase_by_blcok_n_sector+0x68 : 1e014ca >			  ## flash_fs_api.c:194:23
 1e014f0:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:148:56
 1e014f4:    19 70             	r9 = 1			  ## flash_fs_api.c:134:9
 1e014f6:    61 ff ff 59 01 00 	if ((r5 & 255) != 0) goto 2 <flash_erase_by_blcok_n_sector+0x9C : 1e014fe >			  ## flash_fs_api.c:134:9
 1e014fc:    09 70             	r9 = 0			  ## flash_fs_api.c:134:9
 1e014fe:    84 fd 40 85       	r8 = uextra(r5, p:8, l:4)			  ## flash_fs_api.c:133:30
 1e01502:    2f d4             	r7 = r5 >> 16			  ## flash_fs_api.c:123:22
 1e01504:    84 fd 60 a5       	r10 = uextra(r5, p:12, l:4)			  ## flash_fs_api.c:125:32
 1e01508:    12 2e             	if (r7 == 0) goto 36 <flash_erase_by_blcok_n_sector+0xCC : 1e0152e >
 1e0150a:    06 70             	r6 = 0
 1e0150c:    45 08             	r5 = r4
 1e0150e:    8e 17             	call -228 <clr_wdt : 1e0142c >			  ## flash_fs_api.c:220:9
 1e01510:    10 70             	r0 = 1			  ## flash_fs_api.c:222:13
 1e01512:    51 08             	r1 = r5			  ## flash_fs_api.c:222:13
 1e01514:    92 17             	call -220 <sfc_erase : 1e0143a >			  ## flash_fs_api.c:222:13
 1e01516:    16 80             	r6 += 1			  ## flash_fs_api.c:225:15
 1e01518:    76 f2 03 20       	if (r6 >= r7) goto 6 <flash_erase_by_blcok_n_sector+0xC0 : 1e01522 >
 1e0151c:    10 70             	r0 = 1			  ## flash_fs_api.c:226:13
 1e0151e:    98 f3 4b 2c       	call 3168406 <os_time_dly : 106db8 >			  ## flash_fs_api.c:226:13
 1e01522:    45 fb 01 5b       	r5 = r5 + 65536			  ## flash_fs_api.c:224:20
 1e01526:    67 f2 f2 1f       	if (r7 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xAC : 1e0150e >
 1e0152a:    38 c4             	r0 = r7 << 16			  ## flash_fs_api.c:219:5
 1e0152c:    04 09             	r4 += r0			  ## flash_fs_api.c:219:5
 1e0152e:    80 fb 80 79       	r7 = r9 + r8			  ## flash_fs_api.c:134:9
 1e01532:    0a e0 13 00       	if (r10 == 0) goto 38 <flash_erase_by_blcok_n_sector+0xFA : 1e0155c >
 1e01536:    06 70             	r6 = 0
 1e01538:    45 08             	r5 = r4
 1e0153a:    78 17             	call -272 <clr_wdt : 1e0142c >			  ## flash_fs_api.c:235:9
 1e0153c:    20 70             	r0 = 2			  ## flash_fs_api.c:237:13
 1e0153e:    51 08             	r1 = r5			  ## flash_fs_api.c:237:13
 1e01540:    7c 17             	call -264 <sfc_erase : 1e0143a >			  ## flash_fs_api.c:237:13
 1e01542:    16 80             	r6 += 1			  ## flash_fs_api.c:240:15
 1e01544:    a6 f2 03 20       	if (r6 >= r10) goto 6 <flash_erase_by_blcok_n_sector+0xEC : 1e0154e >
 1e01548:    10 70             	r0 = 1			  ## flash_fs_api.c:241:13
 1e0154a:    98 f3 35 2c       	call 3168362 <os_time_dly : 106db8 >			  ## flash_fs_api.c:241:13
 1e0154e:    55 fc 00 10       	r5 = r5 + 4096			  ## flash_fs_api.c:239:20
 1e01552:    6a f2 f2 1f       	if (r10 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xD8 : 1e0153a >
 1e01556:    f0 fd 60 0a       	r0 = r10 << 12			  ## flash_fs_api.c:234:5
 1e0155a:    04 09             	r4 += r0			  ## flash_fs_api.c:234:5
 1e0155c:    08 2e             	if (r7 == 0) goto 16 <flash_erase_by_blcok_n_sector+0x10C : 1e0156e >
 1e0155e:    66 17             	call -308 <clr_wdt : 1e0142c >			  ## flash_fs_api.c:250:9
 1e01560:    30 70             	r0 = 3			  ## flash_fs_api.c:252:13
 1e01562:    41 08             	r1 = r4			  ## flash_fs_api.c:252:13
 1e01564:    6a 17             	call -300 <sfc_erase : 1e0143a >			  ## flash_fs_api.c:252:13
 1e01566:    44 fc 00 01       	r4 = r4 + 256			  ## flash_fs_api.c:254:20
 1e0156a:    57 f3 f8 ff       	if (--r7 != 0) goto -16 <flash_erase_by_blcok_n_sector+0xFC : 1e0155e >
 1e0156e:    5a 01             	{pc, r10-r4} = [sp++]			  ## flash_fs_api.c:257:1


flash_erase_by_first_unit:
 1e01570:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:664:0
 1e01572:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## flash_fs_api.c:660:12
 1e01578:    01 f9 27 10       	r1 = b[r1 + 39] (u)			  ## flash_fs_api.c:660:12
 1e0157c:    12 70             	r2 = 1			  ## flash_fs_api.c:660:12
 1e0157e:    01 e1 01 00       	if (r1 == 16) goto 2 <flash_erase_by_first_unit+0x14 : 1e01584 >			  ## flash_fs_api.c:660:12
 1e01582:    02 70             	r2 = 0			  ## flash_fs_api.c:660:12
 1e01584:    12 c3             	r2 = r2 << 12			  ## flash_fs_api.c:669:16
 1e01586:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:667:9
 1e0158a:    11 e0 01 00       	if (r1 == 1) goto 2 <flash_erase_by_first_unit+0x20 : 1e01590 >			  ## flash_fs_api.c:667:9
 1e0158e:    24 08             	r4 = r2			  ## flash_fs_api.c:667:9
 1e01590:    41 08             	r1 = r4			  ## flash_fs_api.c:674:5
 1e01592:    67 17             	call -306 <flash_erase_by_blcok_n_sector : 1e01462 >			  ## flash_fs_api.c:674:5
 1e01594:    40 08             	r0 = r4			  ## flash_fs_api.c:676:5
 1e01596:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:676:5


norflash_write:
 1e01598:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:673:0
 1e0159a:    c3 ff c0 25 00 00 	r3 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:673:0
 1e015a0:    04 f6 98 30       	r4 = [r3 + 152]			  ## vm_sfc.c:676:37
 1e015a4:    26 08             	r6 = r2			  ## vm_sfc.c:676:37
 1e015a6:    19 08             	r9 = r1			  ## vm_sfc.c:676:37
 1e015a8:    07 08             	r7 = r0			  ## vm_sfc.c:676:37
 1e015aa:    61 09             	r1 += r6			  ## vm_sfc.c:676:17
 1e015ac:    00 70             	r0 = 0			  ## vm_sfc.c:676:17
 1e015ae:    41 f2 29 80       	if (r1 > r4) goto 82 <norflash_write+0x6C : 1e01604 >			  ## vm_sfc.c:676:17
 1e015b2:    38 fc 58 01       	r8 = r3 + 344			  ## vm_sfc.c:687:5
 1e015b6:    f1 07             	r1 = -1			  ## vm_sfc.c:687:5
 1e015b8:    80 08             	r0 = r8			  ## vm_sfc.c:687:5
 1e015ba:    98 f3 33 2c       	call 3168358 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:687:5
 1e015be:    80 05             	r0 = r6.b0 (u)			  ## vm_sfc.c:690:40
 1e015c0:    64 fb 01 0a       	r4 = 256 - r0			  ## vm_sfc.c:690:30
 1e015c4:    94 f2 01 30       	if (r4 < r9) goto 2 <norflash_write+0x32 : 1e015ca >
 1e015c8:    94 08             	r4 = r9			  ## vm_sfc.c:692:22
 1e015ca:    70 08             	r0 = r7			  ## vm_sfc.c:693:5
 1e015cc:    61 08             	r1 = r6			  ## vm_sfc.c:693:5
 1e015ce:    42 08             	r2 = r4			  ## vm_sfc.c:693:5
 1e015d0:    90 f3 e6 12       	call 2106828 <_norflash_write : 3ba0 >			  ## vm_sfc.c:693:5
 1e015d4:    90 fb 40 59       	r5 = r9 - r4			  ## vm_sfc.c:695:10
 1e015d8:    11 2a             	if (r5 == 0) goto 34 <norflash_write+0x64 : 1e015fc >
 1e015da:    47 09             	r7 += r4			  ## vm_sfc.c:696:10
 1e015dc:    46 09             	r6 += r4			  ## vm_sfc.c:697:12
 1e015de:    54 08             	r4 = r5			  ## vm_sfc.c:700:19
 1e015e0:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <norflash_write+0x52 : 1e015ea >
 1e015e6:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:700:19
 1e015ea:    70 08             	r0 = r7			  ## vm_sfc.c:701:9
 1e015ec:    61 08             	r1 = r6			  ## vm_sfc.c:701:9
 1e015ee:    42 08             	r2 = r4			  ## vm_sfc.c:701:9
 1e015f0:    90 f3 d6 12       	call 2106796 <_norflash_write : 3ba0 >			  ## vm_sfc.c:701:9
 1e015f4:    47 09             	r7 += r4			  ## vm_sfc.c:704:14
 1e015f6:    25 bb             	r5 = r5 - r4			  ## vm_sfc.c:702:14
 1e015f8:    46 09             	r6 += r4			  ## vm_sfc.c:703:16
 1e015fa:    f1 3b             	if (r5 != 0) goto -30 <norflash_write+0x46 : 1e015de >
 1e015fc:    80 08             	r0 = r8			  ## vm_sfc.c:706:5
 1e015fe:    98 f3 13 2c       	call 3168294 <os_mutex_post : 106e28 >			  ## vm_sfc.c:706:5
 1e01602:    90 08             	r0 = r9			  ## vm_sfc.c:706:5
 1e01604:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:708:1


sfc_write:
 1e01606:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1438:0
 1e01608:    24 08             	r4 = r2			  ## vm.c:1438:0
 1e0160a:    12 08             	r2 = r1			  ## vm.c:1438:0
 1e0160c:    41 08             	r1 = r4			  ## vm.c:1448:5
 1e0160e:    c4 17             	call -120 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e01610:    40 08             	r0 = r4			  ## vm.c:1451:1
 1e01612:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1451:1


sfc_read:
 1e01614:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1463:0
 1e01616:    24 08             	r4 = r2			  ## vm.c:1463:0
 1e01618:    12 08             	r2 = r1			  ## vm.c:1463:0
 1e0161a:    41 08             	r1 = r4			  ## vm.c:1466:5
 1e0161c:    1a 16             	call -972 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e0161e:    40 08             	r0 = r4			  ## vm.c:1467:5
 1e01620:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1467:5


testbox_update_msg_handle:
 1e01622:    74 01             	[--sp] = {rets, r4}			  ## testbox_update.c:153:0
 1e01624:    f0 0b             	sp += -32			  ## testbox_update.c:153:0
 1e01626:    04 08             	r4 = r0			  ## testbox_update.c:153:0
 1e01628:    c2 ff ec 09 e1 01 	r2 = 31525356 <update_target_end+0x7BC : 1e109ec >			  ## testbox_update.c:154:5
 1e0162e:    20 70             	r0 = 2			  ## testbox_update.c:154:5
 1e01630:    43 08             	r3 = r4			  ## testbox_update.c:154:5
 1e01632:    80 f3 e5 5b       	call 47050 <log_print : 1e0ce00 >			  ## testbox_update.c:154:5
 1e01636:    c0 ff 0b 00 40 00 	r0 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## testbox_update.c:156:5
 1e0163c:    04 f2 08 00       	if (r4 == r0) goto 16 <testbox_update_msg_handle+0x2E : 1e01650 >			  ## testbox_update.c:156:5
 1e01640:    e0 8f             	r0 += -2
 1e01642:    04 f2 10 10       	if (r4 != r0) goto 32 <testbox_update_msg_handle+0x44 : 1e01666 >
 1e01646:    04 a1             	r4 = sp + 16
 1e01648:    c1 ff d8 2a e1 01 	r1 = 31533784 <connection_param_table+0x18 : 1e12ad8 >			  ## testbox_update.c:162:32
 1e0164e:    04 18             	goto 8 <testbox_update_msg_handle+0x36 : 1e01658 >			  ## testbox_update.c:162:32
 1e01650:    04 a0             	r4 = sp + 0
 1e01652:    c1 ff e8 2a e1 01 	r1 = 31533800 <connection_param_table+0x28 : 1e12ae8 >			  ## testbox_update.c:174:32
 1e01658:    02 71             	r2 = 16
 1e0165a:    40 08             	r0 = r4
 1e0165c:    98 f3 42 2c       	call 3168388 <memcpy : 106ee4 >
 1e01660:    40 08             	r0 = r4
 1e01662:    80 f3 cc d5       	call 109464 <app_active_update_task_init : 1e1c1fe >
 1e01666:    10 0a             	sp += 32
 1e01668:    54 01             	{pc, r4} = [sp++]			  ## testbox_update.c:189:1


ble_disconnect:
 1e0166a:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:1173:0
 1e0166c:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:1173:0
 1e01672:    90 59             	r0 = h[r4 + 50] (u)			  ## le_trans_data.c:1174:9
 1e01674:    09 20             	if (r0 == 0) goto 18 <ble_disconnect+0x1E : 1e01688 >			  ## le_trans_data.c:1174:9
 1e01676:    bf f3 f4 fb       	call -2072 <get_ble_work_state : 1e00e62 >			  ## le_trans_data.c:1175:36
 1e0167a:    40 e0 06 10       	if (r0 != 4) goto 12 <ble_disconnect+0x20 : 1e0168a >			  ## le_trans_data.c:1175:36
 1e0167e:    c0 ff 78 09 e1 01 	r0 = 31525240 <update_target_end+0x748 : 1e10978 >			  ## le_trans_data.c:1180:13
 1e01684:    80 f3 8f 5b       	call 46878 <printf : 1e0cda6 >			  ## le_trans_data.c:1180:13
 1e01688:    54 01             	{pc, r4} = [sp++]
 1e0168a:    c0 ff 55 09 e1 01 	r0 = 31525205 <update_target_end+0x725 : 1e10955 >			  ## le_trans_data.c:1176:13
 1e01690:    80 f3 89 5b       	call 46866 <printf : 1e0cda6 >			  ## le_trans_data.c:1176:13
 1e01694:    40 70             	r0 = 4			  ## le_trans_data.c:1177:13
 1e01696:    bf f3 3e fa       	call -2948 <set_ble_work_state : 1e00b16 >			  ## le_trans_data.c:1177:13
 1e0169a:    92 59             	r2 = h[r4 + 50] (u)			  ## le_trans_data.c:1178:13
 1e0169c:    50 70             	r0 = 5			  ## le_trans_data.c:1178:13
 1e0169e:    11 70             	r1 = 1			  ## le_trans_data.c:1178:13
 1e016a0:    14 01             	{rets, r4} = [sp++]			  ## le_trans_data.c:1178:13
 1e016a2:    c0 f3 ee 33       	goto 26588 <ble_user_cmd_prepare : 1e07e82 >			  ## le_trans_data.c:1178:13


update_mode_api_v2:
 1e016a6:    79 01             	[--sp] = {rets, r9-r4}			  ## update.c:567:0
 1e016a8:    28 08             	r8 = r2			  ## update.c:567:0
 1e016aa:    17 08             	r7 = r1			  ## update.c:567:0
 1e016ac:    05 08             	r5 = r0			  ## update.c:567:0
 1e016ae:    00 77             	r0 = 112			  ## update.c:570:22
 1e016b0:    80 f3 af 60       	call 49502 <malloc : 1e0d812 >			  ## update.c:570:22
 1e016b4:    06 08             	r6 = r0			  ## update.c:570:22
 1e016b6:    1b 2c             	if (r6 == 0) goto 54 <update_mode_api_v2+0x48 : 1e016ee >			  ## update.c:572:9
 1e016b8:    01 70             	r1 = 0			  ## update.c:542:5
 1e016ba:    02 75             	r2 = 80			  ## update.c:542:5
 1e016bc:    98 f3 18 2c       	call 3168304 <memset : 106ef0 >			  ## update.c:542:5
 1e016c0:    1d 5c             	h[r6 + 2] = r5			  ## update.c:543:18
 1e016c2:    00 fb 01 5a       	r0 = 23041 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xE7D : 5a01 >			  ## update.c:544:20
 1e016c6:    28 5c             	h[r6 + 4] = r0			  ## update.c:544:20
 1e016c8:    00 fb 41 54       	r0 = 21569 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x8BD : 5441 >			  ## update.c:545:14
 1e016cc:    38 5c             	h[r6 + 6] = r0			  ## update.c:545:14
 1e016ce:    c9 ff c0 23 00 00 	r9 = 9152 <cur_ch : 23c0 >			  ## update.c:545:14
 1e016d4:    00 f6 6c 91       	r0 = [r9 + 364]			  ## update.c:546:31
 1e016d8:    28 4d             	[r6 + 72] = r0			  ## update.c:546:17
 1e016da:    0c 20             	if (r0 == 0) goto 24 <update_mode_api_v2+0x4E : 1e016f4 >			  ## update.c:546:17
 1e016dc:    24 9c             	r4 = r6 + 2			  ## update.c:543:8
 1e016de:    02 2e             	if (r7 == 0) goto 4 <update_mode_api_v2+0x3E : 1e016e4 >
 1e016e0:    60 08             	r0 = r6			  ## update.c:554:9
 1e016e2:    87 00             	call r7			  ## update.c:554:9
 1e016e4:    e1 74             	r1 = 78			  ## update.c:557:19
 1e016e6:    40 08             	r0 = r4			  ## update.c:557:19
 1e016e8:    98 15             	call -1232 <CRC16 : 1e0121a >			  ## update.c:557:19
 1e016ea:    08 5c             	h[r6 + 0] = r0			  ## update.c:557:17
 1e016ec:    09 18             	goto 18 <update_mode_api_v2+0x5A : 1e01700 >			  ## update.c:557:17
 1e016ee:    19 01             	{rets, r9-r4} = [sp++]			  ## cpu.h:148:5
 1e016f0:    d0 f3 d1 0e       	goto 2104738 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e016f4:    c2 ff 8d 0b e1 01 	r2 = 31525773 <update_target_end+0x95D : 1e10b8d >			  ## update.c:549:9
 1e016fa:    40 70             	r0 = 4			  ## update.c:549:9
 1e016fc:    80 f3 80 5b       	call 46848 <log_print : 1e0ce00 >			  ## update.c:549:9
 1e01700:    03 f6 74 91       	r3 = [r9 + 372]			  ## update.c:575:25
 1e01704:    05 26             	if (r3 == 0) goto 10 <update_mode_api_v2+0x6A : 1e01710 >			  ## update.c:575:25
 1e01706:    00 f6 70 91       	r0 = [r9 + 368]			  ## update.c:576:60
 1e0170a:    02 77             	r2 = 112			  ## update.c:576:13
 1e0170c:    61 08             	r1 = r6			  ## update.c:576:13
 1e0170e:    83 00             	call r3			  ## update.c:576:13
 1e01710:    98 f3 44 2b       	call 3167880 <local_irq_disable : 106d9c >			  ## update.c:359:5
 1e01714:    80 f3 10 61       	call 49696 <hwi_all_close : 1e0d938 >			  ## update.c:360:5
 1e01718:    c0 ff 68 fb 00 00 	r0 = 64360 <report_heap_end+0x8 : fb68 >			  ## update.c:563:5
 1e0171e:    02 77             	r2 = 112			  ## update.c:563:5
 1e01720:    61 08             	r1 = r6			  ## update.c:563:5
 1e01722:    98 f3 df 2b       	call 3168190 <memcpy : 106ee4 >			  ## update.c:563:5
 1e01726:    08 e0 02 00       	if (r8 == 0) goto 4 <update_mode_api_v2+0x88 : 1e0172e >
 1e0172a:    50 08             	r0 = r5			  ## update.c:587:13
 1e0172c:    88 00             	call r8			  ## update.c:587:13
 1e0172e:    60 08             	r0 = r6			  ## update.c:590:9
 1e01730:    19 01             	{rets, r9-r4} = [sp++]			  ## update.c:590:9
 1e01732:    c0 f3 73 60       	goto 49382 <free : 1e0d81c >			  ## update.c:590:9


testbox_ble_update_state_cbk:
 1e01736:    75 01             	[--sp] = {rets, r5, r4}			  ## testbox_update.c:111:0
 1e01738:    31 e0 26 10       	if (r1 != 3) goto 76 <testbox_ble_update_state_cbk+0x52 : 1e01788 >			  ## testbox_update.c:111:0
 1e0173c:    00 44             	r0 = [r2 + 0]			  ## testbox_update.c:111:0
 1e0173e:    24 30             	if (r0 != 0) goto 72 <testbox_ble_update_state_cbk+0x52 : 1e01788 >			  ## testbox_update.c:111:0
 1e01740:    40 64             	r0 = b[r2 + 4] (u)			  ## testbox_update.c:125:57
 1e01742:    22 30             	if (r0 != 0) goto 68 <testbox_ble_update_state_cbk+0x52 : 1e01788 >			  ## testbox_update.c:125:57
 1e01744:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >
 1e0174a:    11 70             	r1 = 1
 1e0174c:    11 f9 60 00       	b[r0 + 96] = r1
 1e01750:    8c 17             	call -232 <ble_disconnect : 1e0166a >			  ## le_trans_data.c:1403:5
 1e01752:    f5 7f             	r5 = 255
 1e01754:    c4 ff 0b 0a e1 01 	r4 = 31525387 <update_target_end+0x7DB : 1e10a0b >
 1e0175a:    80 f3 d5 34       	call 27050 <check_le_conn_disconnet_flag : 1e08108 >			  ## testbox_update.c:133:25
 1e0175e:    0b 30             	if (r0 != 0) goto 22 <testbox_ble_update_state_cbk+0x40 : 1e01776 >			  ## testbox_update.c:133:25
 1e01760:    20 70             	r0 = 2			  ## testbox_update.c:134:21
 1e01762:    42 08             	r2 = r4			  ## testbox_update.c:134:21
 1e01764:    80 f3 4c 5b       	call 46744 <log_print : 1e0ce00 >			  ## testbox_update.c:134:21
 1e01768:    20 70             	r0 = 2			  ## testbox_update.c:135:21
 1e0176a:    98 f3 25 2b       	call 3167818 <os_time_dly : 106db8 >			  ## testbox_update.c:135:21
 1e0176e:    15 80             	r5 += 1			  ## testbox_update.c:136:31
 1e01770:    40 05             	r0 = r5.b0 (u)			  ## testbox_update.c:136:31
 1e01772:    60 e0 f2 3f       	if (r0 < 6) goto -28 <testbox_ble_update_state_cbk+0x24 : 1e0175a >			  ## testbox_update.c:136:31
 1e01776:    c1 ff 8a 17 e0 01 	r1 = 31463306 <testbox_ble_update_private_param_fill : 1e0178a >			  ## testbox_update.c:142:17
 1e0177c:    c2 ff c4 18 e0 01 	r2 = 31463620 <testbox_ble_update_before_jump_handle : 1e018c4 >			  ## testbox_update.c:142:17
 1e01782:    00 fb 09 5a       	r0 = 23049 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xE85 : 5a09 >			  ## testbox_update.c:142:17
 1e01786:    8f 17             	call -226 <update_mode_api_v2 : 1e016a6 >			  ## testbox_update.c:142:17
 1e01788:    55 01             	{pc, r5, r4} = [sp++]			  ## testbox_update.c:150:1


testbox_ble_update_private_param_fill:
 1e0178a:    75 01             	[--sp] = {rets, r5, r4}			  ## testbox_update.c:88:0
 1e0178c:    fc 0b             	sp += -8			  ## testbox_update.c:88:0
 1e0178e:    04 08             	r4 = r0			  ## testbox_update.c:88:0
 1e01790:    25 a0             	r5 = sp + 2			  ## testbox_update.c:88:0
 1e01792:    50 08             	r0 = r5			  ## testbox_update.c:92:9
 1e01794:    80 f3 57 c5       	call 101038 <le_controller_get_mac : 1e1a246 >			  ## testbox_update.c:92:9
 1e01798:    84 82             	r4 += 40			  ## testbox_update.c:93:16
 1e0179a:    62 70             	r2 = 6			  ## testbox_update.c:93:9
 1e0179c:    40 08             	r0 = r4			  ## testbox_update.c:93:9
 1e0179e:    51 08             	r1 = r5			  ## testbox_update.c:93:9
 1e017a0:    98 f3 a0 2b       	call 3168064 <memcpy : 106ee4 >			  ## testbox_update.c:93:9
 1e017a4:    c0 ff 2f 0a e1 01 	r0 = 31525423 <update_target_end+0x7FF : 1e10a2f >			  ## testbox_update.c:94:9
 1e017aa:    80 f3 dd 5b       	call 47034 <puts : 1e0cf68 >			  ## testbox_update.c:94:9
 1e017ae:    61 70             	r1 = 6			  ## testbox_update.c:95:9
 1e017b0:    40 08             	r0 = r4			  ## testbox_update.c:95:9
 1e017b2:    80 f3 25 5c       	call 47178 <put_buf : 1e0d000 >			  ## testbox_update.c:95:9
 1e017b6:    04 0a             	sp += 8			  ## testbox_update.c:95:9
 1e017b8:    55 01             	{pc, r5, r4} = [sp++]			  ## testbox_update.c:97:1


lbuf_free_btctrler:
 1e017ba:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:273:0
 1e017bc:    04 08             	r4 = r0			  ## lbuf.c:273:0
 1e017be:    41 28             	if (r4 == 0) goto 130 <lbuf_free_btctrler+0x88 : 1e01842 >			  ## lbuf.c:273:0
 1e017c0:    98 f3 ec 2a       	call 3167704 <local_irq_disable : 106d9c >			  ## lbuf.c:287:5
 1e017c4:    41 fc f0 ff       	r1 = r4 + -16			  ## lbuf.c:287:5
 1e017c8:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e017ca:    12 42             	r2 = [r1 + 4]			  ## list.h:165:23
 1e017cc:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:299:19
 1e017ce:    1a 40             	[r0 + 4] = r2			  ## list.h:159:16
 1e017d0:    08 44             	[r2 + 0] = r0			  ## list.h:160:16
 1e017d2:    60 52             	r0 = h[r1 + 12] (u)			  ## lbuf.c:303:23
 1e017d4:    48 52             	h[r1 + 8] = r0			  ## lbuf.c:303:14
 1e017d6:    22 46             	r2 = [r3 + 8]			  ## lbuf.c:303:14
 1e017d8:    80 96             	r0 = r3 + 8			  ## lbuf.c:307:5
 1e017da:    02 f2 09 00       	if (r2 == r0) goto 18 <lbuf_free_btctrler+0x36 : 1e017f0 >
 1e017de:    12 f2 0a 80       	if (r2 > r1) goto 20 <lbuf_free_btctrler+0x3C : 1e017f6 >			  ## lbuf.c:308:24
 1e017e2:    45 54             	r5 = h[r2 + 8] (u)			  ## lbuf.c:308:38
 1e017e4:    25 09             	r5 += r2			  ## lbuf.c:308:36
 1e017e6:    15 f2 23 80       	if (r5 > r1) goto 70 <lbuf_free_btctrler+0x76 : 1e01830 >			  ## lbuf.c:308:36
 1e017ea:    02 44             	r2 = [r2 + 0]
 1e017ec:    02 f2 f7 1f       	if (r2 != r0) goto -18 <lbuf_free_btctrler+0x24 : 1e017de >
 1e017f0:    c3 80             	r3 += 12			  ## list.h:154:28
 1e017f2:    02 08             	r2 = r0
 1e017f4:    01 18             	goto 2 <lbuf_free_btctrler+0x3E : 1e017f8 >
 1e017f6:    43 94             	r3 = r2 + 4			  ## lbuf.c:313:46
 1e017f8:    04 46             	r4 = [r3 + 0]
 1e017fa:    09 46             	[r3 + 0] = r1			  ## list.h:137:16
 1e017fc:    0a 42             	[r1 + 0] = r2			  ## list.h:138:16
 1e017fe:    1c 42             	[r1 + 4] = r4			  ## list.h:139:16
 1e01800:    09 48             	[r4 + 0] = r1			  ## list.h:140:16
 1e01802:    01 40             	r1 = [r0 + 0]			  ## list.h:140:16
 1e01804:    01 f2 1b 00       	if (r1 == r0) goto 54 <lbuf_free_btctrler+0x84 : 1e0183e >
 1e01808:    02 70             	r2 = 0
 1e0180a:    13 08             	r3 = r1
 1e0180c:    0c 24             	if (r2 == 0) goto 24 <lbuf_free_btctrler+0x6C : 1e01826 >
 1e0180e:    44 54             	r4 = h[r2 + 8] (u)			  ## lbuf.c:328:31
 1e01810:    85 b8             	r5 = r4 + r2			  ## lbuf.c:328:23
 1e01812:    15 f2 08 10       	if (r5 != r1) goto 16 <lbuf_free_btctrler+0x6C : 1e01826 >			  ## lbuf.c:328:23
 1e01816:    43 52             	r3 = h[r1 + 8] (u)			  ## lbuf.c:330:29
 1e01818:    43 09             	r3 += r4			  ## lbuf.c:330:23
 1e0181a:    4b 54             	h[r2 + 8] = r3			  ## lbuf.c:330:23
 1e0181c:    03 42             	r3 = [r1 + 0]			  ## list.h:165:36
 1e0181e:    14 42             	r4 = [r1 + 4]			  ## list.h:165:23
 1e01820:    1c 46             	[r3 + 4] = r4			  ## list.h:159:16
 1e01822:    0b 48             	[r4 + 0] = r3			  ## list.h:160:16
 1e01824:    23 08             	r3 = r2			  ## list.h:160:16
 1e01826:    01 42             	r1 = [r1 + 0]
 1e01828:    32 08             	r2 = r3
 1e0182a:    01 f2 ee 1f       	if (r1 != r0) goto -36 <lbuf_free_btctrler+0x50 : 1e0180a >
 1e0182e:    07 18             	goto 14 <lbuf_free_btctrler+0x84 : 1e0183e >
 1e01830:    c2 ff 9e 28 e1 01 	r2 = 31533214 <update_target_end+0x266E : 1e1289e >			  ## lbuf.c:309:13
 1e01836:    40 70             	r0 = 4			  ## lbuf.c:309:13
 1e01838:    43 08             	r3 = r4			  ## lbuf.c:309:13
 1e0183a:    80 f3 e1 5a       	call 46530 <log_print : 1e0ce00 >			  ## lbuf.c:309:13
 1e0183e:    98 f3 ab 2a       	call 3167574 <local_irq_enable : 106d98 >			  ## lbuf.c:339:5
 1e01842:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:340:1


hw_dma_free:
 1e01844:    ba 1f             	goto -140 <lbuf_free_btctrler : 1e017ba >			  ## hw_dma.c:62:0


hw_dma_clear:
 1e01846:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:98:0
 1e01848:    04 08             	r4 = r0			  ## hw_dma.c:98:0
 1e0184a:    00 48             	r0 = [r4 + 0]			  ## hw_dma.c:101:5
 1e0184c:    40 f2 0a 00       	if (r0 == r4) goto 20 <hw_dma_clear+0x1E : 1e01864 >
 1e01850:    11 40             	r1 = [r0 + 4]			  ## list.h:171:23
 1e01852:    05 40             	r5 = [r0 + 0]
 1e01854:    19 4a             	[r5 + 4] = r1			  ## list.h:159:16
 1e01856:    0d 42             	[r1 + 0] = r5			  ## list.h:160:16
 1e01858:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e0185a:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e0185c:    ae 17             	call -164 <lbuf_free_btctrler : 1e017ba >			  ## hw_dma.c:103:9
 1e0185e:    50 08             	r0 = r5
 1e01860:    45 f2 f6 1f       	if (r5 != r4) goto -20 <hw_dma_clear+0xA : 1e01850 >
 1e01864:    55 01             	{pc, r5, r4} = [sp++]			  ## hw_dma.c:105:1


btctler_nv_memory_free:
 1e01866:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:244:0
 1e01868:    02 20             	if (r0 == 0) goto 4 <btctler_nv_memory_free+0x8 : 1e0186e >			  ## btcontroller_heap.c:244:0
 1e0186a:    80 f3 d7 5f       	call 49070 <free : 1e0d81c >			  ## btcontroller_heap.c:249:9
 1e0186e:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:251:1


sys_timer_remove:
 1e01870:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:40:0
 1e01872:    c0 f3 f3 54       	goto 43494 <sys_timeout_del : 1e0c25c >			  ## sys_timer.c:43:5


__bt_free:
 1e01876:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:269:0
 1e01878:    02 20             	if (r0 == 0) goto 4 <__bt_free+0x8 : 1e0187e >			  ## btcontroller_heap.c:269:0
 1e0187a:    80 f3 cf 5f       	call 49054 <free : 1e0d81c >			  ## btcontroller_heap.c:249:9
 1e0187e:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:271:1


thread_delete:
 1e01880:    34 00             	[--sp] = rets			  ## thread.c:161:0
 1e01882:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e01884:    13 40             	r3 = [r0 + 4]			  ## list.h:171:23
 1e01886:    22 40             	r2 = [r0 + 8]			  ## thread.c:163:35
 1e01888:    1b 42             	[r1 + 4] = r3			  ## list.h:159:16
 1e0188a:    09 46             	[r3 + 0] = r1			  ## list.h:160:16
 1e0188c:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e0188e:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e01890:    03 44             	r3 = [r2 + 0]			  ## list.h:124:18
 1e01892:    01 70             	r1 = 0
 1e01894:    23 f2 04 10       	if (r3 != r2) goto 8 <thread_delete+0x20 : 1e018a0 >
 1e01898:    40 61             	r0 = b[r0 + 20] (u)			  ## thread.c:168:15
 1e0189a:    31 44             	r1 = [r2 + 12]			  ## thread.c:168:26
 1e0189c:    81 00             	call r1			  ## thread.c:168:15
 1e0189e:    01 08             	r1 = r0			  ## thread.c:168:15
 1e018a0:    10 08             	r0 = r1			  ## thread.c:171:5
 1e018a2:    30 00             	pc = [sp++]			  ## thread.c:171:5


lbuf_clear_btctrler:
 1e018a4:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:182:0
 1e018a6:    04 08             	r4 = r0			  ## lbuf.c:182:0
 1e018a8:    98 f3 78 2a       	call 3167472 <local_irq_disable : 106d9c >			  ## lbuf.c:186:5
 1e018ac:    00 48             	r0 = [r4 + 0]			  ## lbuf.c:188:5
 1e018ae:    40 f2 06 00       	if (r0 == r4) goto 12 <lbuf_clear_btctrler+0x1A : 1e018be >
 1e018b2:    45 f6 10 00       	r5 = [r0 ++= 16]
 1e018b6:    81 17             	call -254 <lbuf_free_btctrler : 1e017ba >			  ## lbuf.c:189:9
 1e018b8:    50 08             	r0 = r5			  ## lbuf.c:189:9
 1e018ba:    45 f2 fa 1f       	if (r5 != r4) goto -12 <lbuf_clear_btctrler+0xE : 1e018b2 >
 1e018be:    15 01             	{rets, r5, r4} = [sp++]			  ## lbuf.c:192:5
 1e018c0:    d8 f3 6a 2a       	goto 3167444 <local_irq_enable : 106d98 >			  ## lbuf.c:192:5


testbox_ble_update_before_jump_handle:
 1e018c4:    34 00             	[--sp] = rets			  ## testbox_update.c:100:0
 1e018c6:    80 f3 c4 c4       	call 100744 <ll_hci_destory : 1e1a252 >			  ## testbox_update.c:102:9
 1e018ca:    88 01             	{rets} = [sp++]			  ## cpu.h:148:5
 1e018cc:    d0 f3 e3 0d       	goto 2104262 <p33_soft_reset : 3496 >			  ## cpu.h:148:5


testbox_bt_classic_update_state_cbk:
 1e018d0:    74 01             	[--sp] = {rets, r4}			  ## testbox_update.c:55:0
 1e018d2:    fe 0b             	sp += -4			  ## testbox_update.c:55:0
 1e018d4:    24 08             	r4 = r2			  ## testbox_update.c:55:0
 1e018d6:    31 e0 16 10       	if (r1 != 3) goto 44 <testbox_bt_classic_update_state_cbk+0x36 : 1e01906 >			  ## testbox_update.c:55:0
 1e018da:    03 48             	r3 = [r4 + 0]			  ## testbox_update.c:60:9
 1e018dc:    41 68             	r1 = b[r4 + 4] (u)			  ## testbox_update.c:60:9
 1e018de:    c2 ff 3a 0a e1 01 	r2 = 31525434 <update_target_end+0x80A : 1e10a3a >			  ## testbox_update.c:60:9
 1e018e4:    20 70             	r0 = 2			  ## testbox_update.c:60:9
 1e018e6:    09 02             	[sp] = r1			  ## testbox_update.c:60:9
 1e018e8:    80 f3 8a 5a       	call 46356 <log_print : 1e0ce00 >			  ## testbox_update.c:60:9
 1e018ec:    00 48             	r0 = [r4 + 0]			  ## testbox_update.c:60:9
 1e018ee:    0b 30             	if (r0 != 0) goto 22 <testbox_bt_classic_update_state_cbk+0x36 : 1e01906 >			  ## testbox_update.c:60:9
 1e018f0:    40 68             	r0 = b[r4 + 4] (u)			  ## testbox_update.c:70:57
 1e018f2:    09 30             	if (r0 != 0) goto 18 <testbox_bt_classic_update_state_cbk+0x36 : 1e01906 >			  ## testbox_update.c:70:57
 1e018f4:    c1 ff 0a 19 e0 01 	r1 = 31463690 <testbox_bt_classic_update_private_param_fill : 1e0190a >			  ## testbox_update.c:72:17
 1e018fa:    c2 ff 6c 19 e0 01 	r2 = 31463788 <testbox_bt_classic_update_before_jump_handle : 1e0196c >			  ## testbox_update.c:72:17
 1e01900:    00 fb 05 5a       	r0 = 23045 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xE81 : 5a05 >			  ## testbox_update.c:72:17
 1e01904:    d0 16             	call -608 <update_mode_api_v2 : 1e016a6 >			  ## testbox_update.c:72:17
 1e01906:    02 0a             	sp += 4
 1e01908:    54 01             	{pc, r4} = [sp++]			  ## testbox_update.c:79:1


testbox_bt_classic_update_private_param_fill:
 1e0190a:    20 00             	rts			  ## testbox_update.c:30:0


ram_protect_close:
 1e0190c:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1568:0
 1e0190e:    02 70             	r2 = 0			  ## debug.c:1568:0
 1e01910:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## debug.c:1568:0
 1e01916:    7a 40             	[r0 + 28] = r2			  ## debug.c:586:19
 1e01918:    c1 ff ff ff ff 01 	r1 = 33554431 <bank_code_load_addr+0x1E13EB : 1ffffff >			  ## debug.c:587:19
 1e0191e:    69 40             	[r0 + 24] = r1			  ## debug.c:587:19
 1e01920:    9a 40             	[r0 + 36] = r2			  ## debug.c:592:19
 1e01922:    89 40             	[r0 + 32] = r1			  ## debug.c:593:19
 1e01924:    c1 ff fc 03 1b 00 	r1 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:593:19
 1e0192a:    02 18             	goto 4 <ram_protect_close+0x24 : 1e01930 >			  ## debug.c:593:19
 1e0192c:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:573:9
 1e01930:    03 42             	r3 = [r1 + 0]
 1e01932:    00 f3 fb 3f       	if ((r3 & 1) == 0) goto -10 <ram_protect_close+0x20 : 1e0192c >
 1e01936:    c3 ff c0 c0 06 00 	r3 = 442560 <text_size+0x4F3CC : 6c0c0 >
 1e0193c:    04 97             	r4 = r3 + 16
 1e0193e:    05 99             	r5 = r4 + 16
 1e01940:    06 9b             	r6 = r5 + 16
 1e01942:    07 70             	r7 = 0
 1e01944:    b2 f6 00 73       	[r7+r3<<2] = r2			  ## debug.c:1551:26
 1e01948:    b2 f6 00 74       	[r7+r4<<2] = r2			  ## debug.c:1552:26
 1e0194c:    b2 f6 00 75       	[r7+r5<<2] = r2			  ## debug.c:1554:26
 1e01950:    b2 f6 00 76       	[r7+r6<<2] = r2			  ## debug.c:1555:26
 1e01954:    47 80             	r7 += 4			  ## debug.c:1550:23
 1e01956:    c7 e0 f5 1f       	if (r7 != 12) goto -22 <ram_protect_close+0x38 : 1e01944 >			  ## debug.c:1550:23
 1e0195a:    02 18             	goto 4 <ram_protect_close+0x54 : 1e01960 >			  ## debug.c:1550:23
 1e0195c:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:580:9
 1e01960:    02 42             	r2 = [r1 + 0]
 1e01962:    20 f3 fb 2f       	if ((r2 & 1) != 0) goto -10 <ram_protect_close+0x50 : 1e0195c >
 1e01966:    c0 f4 03 09       	[r0 + 0] = 3			  ## debug.c:1582:14
 1e0196a:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1584:1


testbox_bt_classic_update_before_jump_handle:
 1e0196c:    34 00             	[--sp] = rets			  ## testbox_update.c:37:0
 1e0196e:    c2 ff 62 0a e1 01 	r2 = 31525474 <update_target_end+0x832 : 1e10a62 >			  ## testbox_update.c:40:9
 1e01974:    20 70             	r0 = 2			  ## testbox_update.c:40:9
 1e01976:    80 f3 43 5a       	call 46214 <log_print : 1e0ce00 >			  ## testbox_update.c:40:9
 1e0197a:    80 f3 6a c4       	call 100564 <ll_hci_destory : 1e1a252 >			  ## testbox_update.c:41:9
 1e0197e:    80 f3 56 c7       	call 102060 <__bt_updata_save_connection_info : 1e1a82e >			  ## testbox_update.c:43:13
 1e01982:    07 20             	if (r0 == 0) goto 14 <testbox_bt_classic_update_before_jump_handle+0x26 : 1e01992 >			  ## testbox_update.c:43:13
 1e01984:    c2 ff 87 0a e1 01 	r2 = 31525511 <update_target_end+0x857 : 1e10a87 >			  ## testbox_update.c:44:13
 1e0198a:    40 70             	r0 = 4			  ## testbox_update.c:44:13
 1e0198c:    88 01             	{rets} = [sp++]			  ## testbox_update.c:44:13
 1e0198e:    c0 f3 37 5a       	goto 46190 <log_print : 1e0ce00 >			  ## testbox_update.c:44:13
 1e01992:    bc 17             	call -136 <ram_protect_close : 1e0190c >			  ## testbox_update.c:48:9
 1e01994:    88 01             	{rets} = [sp++]			  ## testbox_update.c:50:9
 1e01996:    c0 f3 29 cd       	goto 105042 <update_code_start : 1e1b3ec >			  ## testbox_update.c:50:9


ota_idle_query:
 1e0199a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update.c:623:0
 1e019a0:    41 60             	r1 = b[r0 + 4] (u)			  ## update.c:624:13
 1e019a2:    10 70             	r0 = 1			  ## update.c:624:12
 1e019a4:    01 22             	if (r1 == 0) goto 2 <ota_idle_query+0xE : 1e019a8 >			  ## update.c:624:12
 1e019a6:    00 70             	r0 = 0			  ## update.c:624:12
 1e019a8:    20 00             	rts			  ## update.c:624:5


app_update_init:
 1e019aa:    34 00             	[--sp] = rets			  ## update.c:707:0
 1e019ac:    80 f3 4c d4       	call 108696 <update_module_init : 1e1c248 >			  ## update.c:708:5
 1e019b0:    c2 ff b8 0a e1 01 	r2 = 31525560 <update_target_end+0x888 : 1e10ab8 >			  ## testbox_update.c:194:9
 1e019b6:    c3 ff 22 16 e0 01 	r3 = 31462946 <testbox_update_msg_handle : 1e01622 >			  ## testbox_update.c:194:9
 1e019bc:    20 70             	r0 = 2			  ## testbox_update.c:194:9
 1e019be:    80 f3 1f 5a       	call 46142 <log_print : 1e0ce00 >			  ## testbox_update.c:194:9
 1e019c2:    88 01             	{rets} = [sp++]			  ## testbox_update.c:195:9
 1e019c4:    c0 f3 ac 9f       	goto 81752 <btctrler_testbox_update_msg_handle_register : 1e15920 >			  ## testbox_update.c:195:9


update_common_state_cbk:
 1e019c8:    78 01             	[--sp] = {rets, r8-r4}			  ## update.c:676:0
 1e019ca:    fc 0b             	sp += -8			  ## update.c:676:0
 1e019cc:    07 08             	r7 = r0			  ## update.c:676:0
 1e019ce:    06 4e             	r6 = [r7 + 0]			  ## update.c:677:22
 1e019d0:    25 08             	r5 = r2
 1e019d2:    14 08             	r4 = r1
 1e019d4:    1d 02             	[sp+4] = r5			  ## update.c:679:5
 1e019d6:    c2 ff ee 0a e1 01 	r2 = 31525614 <update_target_end+0x8BE : 1e10aee >			  ## update.c:679:5
 1e019dc:    20 70             	r0 = 2			  ## update.c:679:5
 1e019de:    0c 02             	[sp] = r4			  ## update.c:679:5
 1e019e0:    63 08             	r3 = r6			  ## update.c:679:5
 1e019e2:    80 f3 0d 5a       	call 46106 <log_print : 1e0ce00 >			  ## update.c:679:5
 1e019e6:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## update.c:679:5
 1e019ec:    24 e0 0c 00       	if (r4 == 2) goto 24 <update_common_state_cbk+0x40 : 1e01a08 >			  ## update.c:681:5
 1e019f0:    14 e0 16 10       	if (r4 != 1) goto 44 <update_common_state_cbk+0x58 : 1e01a20 >
 1e019f4:    80 fc 6c 01       	r0 = r8 + 364			  ## update.c:683:9
 1e019f8:    01 70             	r1 = 0			  ## update.c:683:9
 1e019fa:    c2 70             	r2 = 12			  ## update.c:683:9
 1e019fc:    98 f3 78 2a       	call 3167472 <memset : 106ef0 >			  ## update.c:683:9
 1e01a00:    10 70             	r0 = 1			  ## update.c:644:16
 1e01a02:    10 f9 04 80       	b[r8 + 4] = r0			  ## update.c:644:16
 1e01a06:    0c 18             	goto 24 <update_common_state_cbk+0x58 : 1e01a20 >			  ## update.c:644:16
 1e01a08:    c2 ff 1e 0b e1 01 	r2 = 31525662 <update_target_end+0x8EE : 1e10b1e >			  ## update.c:688:9
 1e01a0e:    20 70             	r0 = 2			  ## update.c:688:9
 1e01a10:    80 f3 f6 59       	call 46060 <log_print : 1e0ce00 >			  ## update.c:688:9
 1e01a14:    80 fc 6c 01       	r0 = r8 + 364			  ## update.c:689:9
 1e01a18:    c2 70             	r2 = 12			  ## update.c:689:9
 1e01a1a:    51 08             	r1 = r5			  ## update.c:689:9
 1e01a1c:    98 f3 62 2a       	call 3167428 <memcpy : 106ee4 >			  ## update.c:689:9
 1e01a20:    13 4e             	r3 = [r7 + 4]			  ## update.c:693:15
 1e01a22:    04 26             	if (r3 == 0) goto 8 <update_common_state_cbk+0x64 : 1e01a2c >			  ## update.c:693:15
 1e01a24:    60 08             	r0 = r6			  ## update.c:694:9
 1e01a26:    41 08             	r1 = r4			  ## update.c:694:9
 1e01a28:    52 08             	r2 = r5			  ## update.c:694:9
 1e01a2a:    83 00             	call r3			  ## update.c:694:9
 1e01a2c:    34 e0 03 10       	if (r4 != 3) goto 6 <update_common_state_cbk+0x6E : 1e01a36 >
 1e01a30:    00 70             	r0 = 0			  ## update.c:672:16
 1e01a32:    10 f9 04 80       	b[r8 + 4] = r0			  ## update.c:672:16
 1e01a36:    04 0a             	sp += 8
 1e01a38:    58 01             	{pc, r8-r4} = [sp++]			  ## update.c:702:1


usb_set_pull_down:
 1e01a3a:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:160:0
 1e01a40:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_pull_down+0x1A : 1e01a54 >			  ## gpio.c:161:9
 1e01a44:    40 80             	r0 += 4
 1e01a46:    13 70             	r3 = 1
 1e01a48:    f8 fd 00 03       	r0 = r3 << r0
 1e01a4c:    0b 22             	if (r1 == 0) goto 22 <usb_set_pull_down+0x2A : 1e01a64 >			  ## gpio.c:163:13
 1e01a4e:    91 44             	r1 = [r2 + 36]			  ## gpio.c:164:30
 1e01a50:    50 b2             	r0 |= r1			  ## gpio.c:164:30
 1e01a52:    0b 18             	goto 22 <usb_set_pull_down+0x30 : 1e01a6a >			  ## gpio.c:164:30
 1e01a54:    60 80             	r0 += 6
 1e01a56:    13 70             	r3 = 1
 1e01a58:    f8 fd 00 03       	r0 = r3 << r0
 1e01a5c:    08 22             	if (r1 == 0) goto 16 <usb_set_pull_down+0x34 : 1e01a6e >			  ## gpio.c:170:13
 1e01a5e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:171:29
 1e01a60:    50 b2             	r0 |= r1			  ## gpio.c:171:29
 1e01a62:    08 18             	goto 16 <usb_set_pull_down+0x3A : 1e01a74 >			  ## gpio.c:171:29
 1e01a64:    91 44             	r1 = [r2 + 36]			  ## gpio.c:166:30
 1e01a66:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:166:30
 1e01a6a:    98 44             	[r2 + 36] = r0
 1e01a6c:    20 00             	rts
 1e01a6e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:173:29
 1e01a70:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:173:29
 1e01a74:    08 44             	[r2 + 0] = r0
 1e01a76:    20 00             	rts


gpio_set_pull_down:
 1e01a78:    10 e3 03 30       	if (r0 < 49) goto 6 <gpio_set_pull_down+0xA : 1e01a82 >			  ## gpio.c:653:0
 1e01a7c:    f0 8c             	r0 += -49			  ## gpio.c:659:36
 1e01a7e:    01 70             	r1 = 0			  ## gpio.c:659:13
 1e01a80:    dc 1f             	goto -72 <usb_set_pull_down : 1e01a3a >			  ## gpio.c:659:13
 1e01a82:    81 d0             	r1 = r0 >> 2			  ## gpio.c:49:31
 1e01a84:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e01a8a:    51 b5             	r1 &= r2			  ## gpio.c:49:46
 1e01a8c:    c2 ff a8 30 e1 01 	r2 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e01a92:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:49:31
 1e01a96:    09 22             	if (r1 == 0) goto 18 <gpio_set_pull_down+0x32 : 1e01aaa >
 1e01a98:    52 42             	r2 = [r1 + 20]			  ## gpio.c:676:15
 1e01a9a:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:671:12
 1e01a9e:    13 70             	r3 = 1			  ## gpio.c:671:12
 1e01aa0:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:671:12
 1e01aa4:    e3 fd 00 02       	r0 = r2 & ~r0			  ## gpio.c:676:15
 1e01aa8:    58 42             	[r1 + 20] = r0			  ## gpio.c:676:15
 1e01aaa:    20 00             	rts


gpio_set_pull_up:
 1e01aac:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE200_0_0_+0xA : 1e01ace >			  ## gpio.c:567:0
 1e01ab0:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:573:13
 1e01ab4:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE200_0_0_+0x3A : 1e01afe >			  ## gpio.c:573:13
 1e01ab8:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e01abe:    a2 00             	tbb [r2]


.GJTIS200_0_0_:
 1e01ac0:    02     < 2 : 0x2 >
 1e01ac1:    20     < 32 : 0x20 >
 1e01ac2:    25     < 37 : 0x25 >
 1e01ac3:    2a     < 42 : 0x2A >
 1e01ac4:    02 40             	r2 = [r0 + 0]			  ## gpio.c:573:13
 1e01ac6:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:573:13
 1e01aca:    0a 40             	[r0 + 0] = r2			  ## gpio.c:573:13
 1e01acc:    20 00             	rts			  ## gpio.c:573:13
 1e01ace:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e01ad0:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e01ad6:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e01ad8:    c3 ff a8 30 e1 01 	r3 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e01ade:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e01ae2:    0d 24             	if (r2 == 0) goto 26 <.GJTIE200_0_0_+0x3A : 1e01afe >
 1e01ae4:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:585:12
 1e01ae8:    13 70             	r3 = 1			  ## gpio.c:585:12
 1e01aea:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:585:12
 1e01aee:    03 22             	if (r1 == 0) goto 6 <.GJTIE200_0_0_+0x32 : 1e01af6 >			  ## gpio.c:587:9
 1e01af0:    41 44             	r1 = [r2 + 16]			  ## gpio.c:588:15
 1e01af2:    50 b2             	r0 |= r1			  ## gpio.c:588:15
 1e01af4:    03 18             	goto 6 <.GJTIE200_0_0_+0x38 : 1e01afc >
 1e01af6:    41 44             	r1 = [r2 + 16]			  ## gpio.c:590:15
 1e01af8:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:590:15
 1e01afc:    48 44             	[r2 + 16] = r0
 1e01afe:    20 00             	rts
 1e01b00:    02 40             	r2 = [r0 + 0]			  ## gpio.c:573:13
 1e01b02:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:573:13
 1e01b06:    0a 40             	[r0 + 0] = r2			  ## gpio.c:573:13
 1e01b08:    20 00             	rts			  ## gpio.c:573:13
 1e01b0a:    92 40             	r2 = [r0 + 36]			  ## gpio.c:573:13
 1e01b0c:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:573:13
 1e01b10:    9a 40             	[r0 + 36] = r2			  ## gpio.c:573:13
 1e01b12:    20 00             	rts			  ## gpio.c:573:13
 1e01b14:    92 40             	r2 = [r0 + 36]			  ## gpio.c:573:13
 1e01b16:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:573:13
 1e01b1a:    9a 40             	[r0 + 36] = r2			  ## gpio.c:573:13
 1e01b1c:    20 00             	rts			  ## gpio.c:573:13


usb_set_direction:
 1e01b1e:    74 01             	[--sp] = {rets, r4}			  ## gpio.c:98:0
 1e01b20:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:98:0
 1e01b26:    20 e0 0e 30       	if (r0 < 2) goto 28 <usb_set_direction+0x28 : 1e01b46 >			  ## gpio.c:99:9
 1e01b2a:    03 f6 00 26       	r3 = [r2 + 1536]			  ## gpio.c:245:23
 1e01b2e:    73 b0             	r3 &= 4294967294			  ## gpio.c:245:23
 1e01b30:    13 f6 00 26       	[r2 + 1536] = r3			  ## gpio.c:245:23
 1e01b34:    09 f4 50 2a       	[r2 + 36] |= 20480			  ## gpio.c:245:23
 1e01b38:    13 70             	r3 = 1			  ## gpio.c:245:23
 1e01b3a:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:245:23
 1e01b3e:    12 22             	if (r1 == 0) goto 36 <usb_set_direction+0x46 : 1e01b64 >			  ## gpio.c:102:13
 1e01b40:    91 44             	r1 = [r2 + 36]			  ## gpio.c:103:30
 1e01b42:    50 b2             	r0 |= r1			  ## gpio.c:103:30
 1e01b44:    12 18             	goto 36 <usb_set_direction+0x4C : 1e01b6a >			  ## gpio.c:103:30
 1e01b46:    23 fc 00 c4       	r3 = r2 + -15360
 1e01b4a:    04 46             	r4 = [r3 + 0]			  ## gpio.c:235:22
 1e01b4c:    74 b0             	r4 &= 4294967294			  ## gpio.c:235:22
 1e01b4e:    0c 46             	[r3 + 0] = r4			  ## gpio.c:235:22
 1e01b50:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## gpio.c:235:22
 1e01b54:    20 80             	r0 += 2			  ## gpio.c:235:22
 1e01b56:    13 70             	r3 = 1			  ## gpio.c:235:22
 1e01b58:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:235:22
 1e01b5c:    08 22             	if (r1 == 0) goto 16 <usb_set_direction+0x50 : 1e01b6e >			  ## gpio.c:110:13
 1e01b5e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:111:29
 1e01b60:    50 b2             	r0 |= r1			  ## gpio.c:111:29
 1e01b62:    08 18             	goto 16 <usb_set_direction+0x56 : 1e01b74 >			  ## gpio.c:111:29
 1e01b64:    91 44             	r1 = [r2 + 36]			  ## gpio.c:105:30
 1e01b66:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:105:30
 1e01b6a:    98 44             	[r2 + 36] = r0
 1e01b6c:    54 01             	{pc, r4} = [sp++]
 1e01b6e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:113:29
 1e01b70:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:113:29
 1e01b74:    08 44             	[r2 + 0] = r0
 1e01b76:    54 01             	{pc, r4} = [sp++]


gpio_set_direction:
 1e01b78:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_direction+0x8 : 1e01b80 >			  ## gpio.c:255:0
 1e01b7c:    f0 8c             	r0 += -49			  ## gpio.c:261:36
 1e01b7e:    cf 1f             	goto -98 <usb_set_direction : 1e01b1e >			  ## gpio.c:261:13
 1e01b80:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e01b82:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e01b88:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e01b8a:    c3 ff a8 30 e1 01 	r3 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e01b90:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e01b94:    0d 24             	if (r2 == 0) goto 26 <gpio_set_direction+0x38 : 1e01bb0 >
 1e01b96:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:273:12
 1e01b9a:    13 70             	r3 = 1			  ## gpio.c:273:12
 1e01b9c:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:273:12
 1e01ba0:    03 22             	if (r1 == 0) goto 6 <gpio_set_direction+0x30 : 1e01ba8 >			  ## gpio.c:276:9
 1e01ba2:    21 44             	r1 = [r2 + 8]			  ## gpio.c:277:16
 1e01ba4:    50 b2             	r0 |= r1			  ## gpio.c:277:16
 1e01ba6:    03 18             	goto 6 <gpio_set_direction+0x36 : 1e01bae >
 1e01ba8:    21 44             	r1 = [r2 + 8]			  ## gpio.c:279:16
 1e01baa:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:279:16
 1e01bae:    28 44             	[r2 + 8] = r0
 1e01bb0:    20 00             	rts


gpio_set_hd:
 1e01bb2:    00 e3 18 80       	if (r0 > 48) goto 48 <gpio_set_hd+0x34 : 1e01be6 >			  ## gpio.c:769:0
 1e01bb6:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e01bb8:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e01bbe:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e01bc0:    c3 ff a8 30 e1 01 	r3 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e01bc6:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e01bca:    0d 24             	if (r2 == 0) goto 26 <gpio_set_hd+0x34 : 1e01be6 >
 1e01bcc:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:787:12
 1e01bd0:    13 70             	r3 = 1			  ## gpio.c:787:12
 1e01bd2:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:787:12
 1e01bd6:    03 22             	if (r1 == 0) goto 6 <gpio_set_hd+0x2C : 1e01bde >			  ## gpio.c:789:9
 1e01bd8:    71 44             	r1 = [r2 + 28]			  ## gpio.c:790:15
 1e01bda:    50 b2             	r0 |= r1			  ## gpio.c:790:15
 1e01bdc:    03 18             	goto 6 <gpio_set_hd+0x32 : 1e01be4 >
 1e01bde:    71 44             	r1 = [r2 + 28]			  ## gpio.c:792:15
 1e01be0:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:792:15
 1e01be4:    78 44             	[r2 + 28] = r0
 1e01be6:    20 00             	rts


LED8888_close_init:
 1e01be8:    76 01             	[--sp] = {rets, r6-r4}			  ## 7PIN_led8888.c:37:0
 1e01bea:    05 70             	r5 = 0			  ## 7PIN_led8888.c:37:0
 1e01bec:    c6 ff f8 2a e1 01 	r6 = 31533816 <led_port : 1e12af8 >			  ## 7PIN_led8888.c:37:0
 1e01bf2:    0e 18             	goto 28 <LED8888_close_init+0x28 : 1e01c10 >			  ## 7PIN_led8888.c:37:0
 1e01bf4:    04 fa 00 56       	r4 = b[r5+r6] (u)			  ## 7PIN_led8888.c:41:28
 1e01bf8:    40 08             	r0 = r4			  ## 7PIN_led8888.c:41:9
 1e01bfa:    3e 17             	call -388 <gpio_set_pull_down : 1e01a78 >			  ## 7PIN_led8888.c:41:9
 1e01bfc:    01 70             	r1 = 0			  ## 7PIN_led8888.c:42:9
 1e01bfe:    40 08             	r0 = r4			  ## 7PIN_led8888.c:42:9
 1e01c00:    55 17             	call -342 <gpio_set_pull_up : 1e01aac >			  ## 7PIN_led8888.c:42:9
 1e01c02:    11 70             	r1 = 1			  ## 7PIN_led8888.c:43:9
 1e01c04:    40 08             	r0 = r4			  ## 7PIN_led8888.c:43:9
 1e01c06:    b8 17             	call -144 <gpio_set_direction : 1e01b78 >			  ## 7PIN_led8888.c:43:9
 1e01c08:    01 70             	r1 = 0			  ## 7PIN_led8888.c:44:3
 1e01c0a:    40 08             	r0 = r4			  ## 7PIN_led8888.c:44:3
 1e01c0c:    d2 17             	call -92 <gpio_set_hd : 1e01bb2 >			  ## 7PIN_led8888.c:44:3
 1e01c0e:    15 80             	r5 += 1			  ## 7PIN_led8888.c:38:21
 1e01c10:    75 e0 f0 1f       	if (r5 != 7) goto -32 <LED8888_close_init+0xC : 1e01bf4 >			  ## 7PIN_led8888.c:38:5
 1e01c14:    56 01             	{pc, r6-r4} = [sp++]			  ## 7PIN_led8888.c:47:1


led8888_scan:
 1e01c16:    75 01             	[--sp] = {rets, r5, r4}			  ## 7PIN_led8888.c:401:0
 1e01c18:    e7 17             	call -50 <LED8888_close_init : 1e01be8 >			  ## 7PIN_led8888.c:422:2
 1e01c1a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## 7PIN_led8888.c:422:2
 1e01c20:    61 60             	r1 = b[r0 + 6] (u)			  ## 7PIN_led8888.c:423:9
 1e01c22:    61 e0 6b 81       	if (r1 > 6) goto 726 <.GJTIE205_0_0_+0x2BA : 1e01efc >			  ## 7PIN_led8888.c:423:9
 1e01c26:    4c c0             	r4 = r1 << 1
 1e01c28:    c2 ff 00 50 1e 00 	r2 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >
 1e01c2e:    23 fc 00 01       	r3 = r2 + 256
 1e01c32:    b4 00             	tbh [r4]


.GJTIL205_0_0_:
 1e01c34:    07 00     < 7 : 0x7 >
 1e01c36:    33 00     < 51 : 0x33 >
 1e01c38:    64 00     < 100 : 0x64 >
 1e01c3a:    9f 00     < 159 : 0x9F >
 1e01c3c:    d2 00     < 210 : 0xD2 >
 1e01c3e:    0d 01     < 269 : 0x10D >
 1e01c40:    42 01     < 322 : 0x142 >
 1e01c42:    00 f4 10 39       	[r3 + 0] |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01c46:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c48:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c4a:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c4c:    07 f4 10 39       	[r3 + 28] |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01c50:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:428:6
 1e01c52:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE205_0_0_+0x20 : 1e01c62 >			  ## 7PIN_led8888.c:428:6
 1e01c56:    05 44             	r5 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c58:    f5 b3             	r5 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c5a:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c5c:    25 44             	r5 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c5e:    f5 b3             	r5 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c60:    2d 44             	[r2 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c62:    01 f3 06 40       	if ((r4 & 2) == 0) goto 12 <.GJTIE205_0_0_+0x30 : 1e01c72 >
 1e01c66:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c68:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c6a:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c6c:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c6e:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c70:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c72:    04 f3 06 40       	if ((r4 & 16) == 0) goto 12 <.GJTIE205_0_0_+0x40 : 1e01c82 >
 1e01c76:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c78:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c7a:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c7c:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c7e:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c80:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c82:    73 60             	r3 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:439:6
 1e01c84:    03 f3 06 30       	if ((r3 & 8) == 0) goto 12 <.GJTIE205_0_0_+0x52 : 1e01c94 >			  ## 7PIN_led8888.c:439:6
 1e01c88:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c8a:    f4 b4             	r4 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c8c:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01c8e:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c90:    f4 b4             	r4 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c92:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01c94:    25 f3 9a 30       	if ((r3 & 32) != 0) goto 308 <.GJTIE205_0_0_+0x18A : 1e01dcc >
 1e01c98:    31 19             	goto 610 <.GJTIE205_0_0_+0x2BA : 1e01efc >
 1e01c9a:    00 f4 80 29       	[r2 + 0] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01c9e:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ca0:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ca2:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ca4:    07 f4 80 29       	[r2 + 28] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01ca8:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:461:6
 1e01caa:    05 f3 06 40       	if ((r4 & 32) == 0) goto 12 <.GJTIE205_0_0_+0x78 : 1e01cba >			  ## 7PIN_led8888.c:461:6
 1e01cae:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cb0:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cb2:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cb4:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cb6:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cb8:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cba:    84 60             	r4 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:464:6
 1e01cbc:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE205_0_0_+0x8A : 1e01ccc >			  ## 7PIN_led8888.c:464:6
 1e01cc0:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cc2:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cc4:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cc6:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cc8:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cca:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ccc:    01 f3 06 40       	if ((r4 & 2) == 0) goto 12 <.GJTIE205_0_0_+0x9A : 1e01cdc >
 1e01cd0:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cd2:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cd4:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cd6:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cd8:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cda:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cdc:    03 f3 06 40       	if ((r4 & 8) == 0) goto 12 <.GJTIE205_0_0_+0xAA : 1e01cec >
 1e01ce0:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ce2:    f3 b0             	r3 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ce4:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ce6:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ce8:    f3 b0             	r3 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cea:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cec:    04 f3 06 41       	if ((r4 & 16) == 0) goto 524 <.GJTIE205_0_0_+0x2BA : 1e01efc >
 1e01cf0:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cf2:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cf4:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01cf6:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cf8:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cfa:    ff 18             	goto 510 <.GJTIE205_0_0_+0x2B8 : 1e01efa >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01cfc:    00 f4 40 39       	[r3 + 0] |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01d00:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d02:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d04:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d06:    07 f4 40 39       	[r3 + 28] |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01d0a:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:498:6
 1e01d0c:    06 f3 06 40       	if ((r4 & 64) == 0) goto 12 <.GJTIE205_0_0_+0xDA : 1e01d1c >			  ## 7PIN_led8888.c:498:6
 1e01d10:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d12:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d14:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d16:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d18:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d1a:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d1c:    83 60             	r3 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:501:6
 1e01d1e:    05 f3 06 30       	if ((r3 & 32) == 0) goto 12 <.GJTIE205_0_0_+0xEC : 1e01d2e >			  ## 7PIN_led8888.c:501:6
 1e01d22:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d24:    f3 b3             	r3 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d26:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d28:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d2a:    f3 b3             	r3 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d2c:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d2e:    93 60             	r3 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:504:6
 1e01d30:    01 f3 06 30       	if ((r3 & 2) == 0) goto 12 <.GJTIE205_0_0_+0xFE : 1e01d40 >			  ## 7PIN_led8888.c:504:6
 1e01d34:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d36:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d38:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d3a:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d3c:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d3e:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d40:    73 60             	r3 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:509:6
 1e01d42:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <.GJTIE205_0_0_+0x110 : 1e01d52 >			  ## 7PIN_led8888.c:509:6
 1e01d46:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d48:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d4a:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d4c:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d4e:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d50:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d52:    06 f3 06 30       	if ((r3 & 64) == 0) goto 12 <.GJTIE205_0_0_+0x120 : 1e01d62 >
 1e01d56:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d58:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d5a:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d5c:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d5e:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d60:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d62:    04 f3 cb 30       	if ((r3 & 16) == 0) goto 406 <.GJTIE205_0_0_+0x2BA : 1e01efc >
 1e01d66:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d68:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d6a:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d6c:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d6e:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d70:    c4 18             	goto 392 <.GJTIE205_0_0_+0x2B8 : 1e01efa >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d72:    00 f4 01 2a       	[r2 + 0] |= 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01d76:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d78:    74 b4             	r4 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d7a:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d7c:    07 f4 01 2a       	[r2 + 28] |= 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01d80:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:539:6
 1e01d82:    02 f3 06 40       	if ((r4 & 4) == 0) goto 12 <.GJTIE205_0_0_+0x150 : 1e01d92 >			  ## 7PIN_led8888.c:539:6
 1e01d86:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d88:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d8a:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d8c:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d8e:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d90:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01d92:    84 60             	r4 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:542:6
 1e01d94:    06 f3 06 40       	if ((r4 & 64) == 0) goto 12 <.GJTIE205_0_0_+0x162 : 1e01da4 >			  ## 7PIN_led8888.c:542:6
 1e01d98:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d9a:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d9c:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01d9e:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01da0:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01da2:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01da4:    94 60             	r4 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:545:6
 1e01da6:    02 f3 06 40       	if ((r4 & 4) == 0) goto 12 <.GJTIE205_0_0_+0x174 : 1e01db6 >			  ## 7PIN_led8888.c:545:6
 1e01daa:    05 44             	r5 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01dac:    f5 b4             	r5 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01dae:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01db0:    25 44             	r5 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01db2:    f5 b4             	r5 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01db4:    2d 44             	[r2 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01db6:    05 f3 06 40       	if ((r4 & 32) == 0) goto 12 <.GJTIE205_0_0_+0x184 : 1e01dc6 >
 1e01dba:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01dbc:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01dbe:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01dc0:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01dc2:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01dc4:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01dc6:    a3 60             	r3 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:551:6
 1e01dc8:    04 f3 98 30       	if ((r3 & 16) == 0) goto 304 <.GJTIE205_0_0_+0x2BA : 1e01efc >			  ## 7PIN_led8888.c:551:6
 1e01dcc:    03 44             	r3 = [r2 + 0]
 1e01dce:    f3 b0             	r3 &= 4294967293
 1e01dd0:    0b 44             	[r2 + 0] = r3
 1e01dd2:    23 44             	r3 = [r2 + 8]
 1e01dd4:    f3 b0             	r3 &= 4294967293
 1e01dd6:    91 18             	goto 290 <.GJTIE205_0_0_+0x2B8 : 1e01efa >
 1e01dd8:    00 f4 02 2a       	[r2 + 0] |= 512			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01ddc:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01dde:    f4 b4             	r4 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01de0:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01de2:    07 f4 02 2a       	[r2 + 28] |= 512			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01de6:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:558:6
 1e01de8:    03 f3 06 40       	if ((r4 & 8) == 0) goto 12 <.GJTIE205_0_0_+0x1B6 : 1e01df8 >			  ## 7PIN_led8888.c:558:6
 1e01dec:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01dee:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01df0:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01df2:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01df4:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01df6:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01df8:    84 60             	r4 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:561:6
 1e01dfa:    02 f3 06 40       	if ((r4 & 4) == 0) goto 12 <.GJTIE205_0_0_+0x1C8 : 1e01e0a >			  ## 7PIN_led8888.c:561:6
 1e01dfe:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e00:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e02:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e04:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e06:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e08:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e0a:    94 60             	r4 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:564:6
 1e01e0c:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE205_0_0_+0x1DA : 1e01e1c >			  ## 7PIN_led8888.c:564:6
 1e01e10:    05 44             	r5 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e12:    75 b4             	r5 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e14:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e16:    25 44             	r5 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e18:    75 b4             	r5 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e1a:    2d 44             	[r2 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e1c:    06 f3 06 40       	if ((r4 & 64) == 0) goto 12 <.GJTIE205_0_0_+0x1EA : 1e01e2c >
 1e01e20:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e22:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e24:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e26:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e28:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e2a:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e2c:    a3 60             	r3 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:570:8
 1e01e2e:    02 f3 06 30       	if ((r3 & 4) == 0) goto 12 <.GJTIE205_0_0_+0x1FC : 1e01e3e >			  ## 7PIN_led8888.c:570:8
 1e01e32:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e34:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e36:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e38:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e3a:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e3c:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e3e:    06 f3 5d 30       	if ((r3 & 64) == 0) goto 186 <.GJTIE205_0_0_+0x2BA : 1e01efc >
 1e01e42:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e44:    73 b1             	r3 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e46:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e48:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e4a:    73 b1             	r3 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e4c:    56 18             	goto 172 <.GJTIE205_0_0_+0x2B8 : 1e01efa >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e4e:    00 f4 02 29       	[r2 + 0] |= 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01e52:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e54:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e56:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e58:    07 f4 02 29       	[r2 + 28] |= 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01e5c:    94 60             	r4 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:595:6
 1e01e5e:    03 f3 06 40       	if ((r4 & 8) == 0) goto 12 <.GJTIE205_0_0_+0x22C : 1e01e6e >			  ## 7PIN_led8888.c:595:6
 1e01e62:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e64:    75 b2             	r5 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e66:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e68:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e6a:    75 b2             	r5 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e6c:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e6e:    04 f3 06 40       	if ((r4 & 16) == 0) goto 12 <.GJTIE205_0_0_+0x23C : 1e01e7e >
 1e01e72:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e74:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e76:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e78:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e7a:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e7c:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e7e:    a3 60             	r3 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:601:6
 1e01e80:    01 f3 06 30       	if ((r3 & 2) == 0) goto 12 <.GJTIE205_0_0_+0x24E : 1e01e90 >			  ## 7PIN_led8888.c:601:6
 1e01e84:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e86:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e88:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e8a:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e8c:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e8e:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e90:    03 f3 06 30       	if ((r3 & 8) == 0) goto 12 <.GJTIE205_0_0_+0x25E : 1e01ea0 >
 1e01e94:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e96:    74 b4             	r4 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e98:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01e9a:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e9c:    74 b4             	r4 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01e9e:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ea0:    05 f3 06 30       	if ((r3 & 32) == 0) goto 12 <.GJTIE205_0_0_+0x26E : 1e01eb0 >
 1e01ea4:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ea6:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ea8:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01eaa:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01eac:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01eae:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01eb0:    73 60             	r3 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:611:6
 1e01eb2:    22 f3 1d 30       	if ((r3 & 4) != 0) goto 58 <.GJTIE205_0_0_+0x2AE : 1e01ef0 >			  ## 7PIN_led8888.c:611:6
 1e01eb6:    22 18             	goto 68 <.GJTIE205_0_0_+0x2BA : 1e01efc >			  ## 7PIN_led8888.c:611:6
 1e01eb8:    00 f4 04 29       	[r2 + 0] |= 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01ebc:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ebe:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ec0:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ec2:    07 f4 04 29       	[r2 + 28] |= 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01ec6:    a4 60             	r4 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:621:6
 1e01ec8:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE205_0_0_+0x296 : 1e01ed8 >			  ## 7PIN_led8888.c:621:6
 1e01ecc:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ece:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ed0:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ed2:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ed4:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ed6:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ed8:    75 60             	r5 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:639:6
 1e01eda:    54 05             	r4 = r5.b0 (s)			  ## 7PIN_led8888.c:639:6
 1e01edc:    01 f3 06 50       	if ((r5 & 2) == 0) goto 12 <.GJTIE205_0_0_+0x2AA : 1e01eec >			  ## 7PIN_led8888.c:639:6
 1e01ee0:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ee2:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ee4:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ee6:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ee8:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01eea:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01eec:    f4 ef 06 c0       	ifs (r4 > -1) goto 12 <.GJTIE205_0_0_+0x2BA : 1e01efc >
 1e01ef0:    03 44             	r3 = [r2 + 0]
 1e01ef2:    f3 b3             	r3 &= 4294967167
 1e01ef4:    0b 44             	[r2 + 0] = r3
 1e01ef6:    23 44             	r3 = [r2 + 8]
 1e01ef8:    f3 b3             	r3 &= 4294967167
 1e01efa:    2b 44             	[r2 + 8] = r3
 1e01efc:    12 92             	r2 = r1 + 1			  ## 7PIN_led8888.c:654:6
 1e01efe:    83 04             	r3 = r2.b0 (u)			  ## 7PIN_led8888.c:654:6
 1e01f00:    01 70             	r1 = 0			  ## 7PIN_led8888.c:655:5
 1e01f02:    83 e0 01 00       	if (r3 == 8) goto 2 <.GJTIE205_0_0_+0x2C6 : 1e01f08 >			  ## 7PIN_led8888.c:655:5
 1e01f06:    21 08             	r1 = r2			  ## 7PIN_led8888.c:655:5
 1e01f08:    69 60             	b[r0 + 6] = r1			  ## 7PIN_led8888.c:656:7
 1e01f0a:    55 01             	{pc, r5, r4} = [sp++]			  ## 7PIN_led8888.c:659:1


update_charge_ui:
 1e01f0c:    74 01             	[--sp] = {rets, r4}			  ## app_charge.c:28:0
 1e01f0e:    c4 ff 44 08 00 00 	r4 = 2116 <update_charge_ui.var : 844 >			  ## app_charge.c:30:44
 1e01f14:    01 68             	r1 = b[r4 + 0] (u)			  ## app_charge.c:30:5
 1e01f16:    40 70             	r0 = 4			  ## app_charge.c:30:5
 1e01f18:    bf f3 47 f7       	call -4466 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## app_charge.c:30:5
 1e01f1c:    00 48             	r0 = [r4 + 0]			  ## app_charge.c:31:8
 1e01f1e:    11 90             	r1 = r0 + 1			  ## app_charge.c:31:8
 1e01f20:    10 70             	r0 = 1			  ## app_charge.c:31:8
 1e01f22:    41 e0 01 c0       	ifs (r1 > 4) goto 2 <update_charge_ui+0x1C : 1e01f28 >			  ## app_charge.c:31:8
 1e01f26:    10 08             	r0 = r1			  ## app_charge.c:31:8
 1e01f28:    08 48             	[r4 + 0] = r0			  ## app_charge.c:32:12
 1e01f2a:    54 01             	{pc, r4} = [sp++]			  ## app_charge.c:33:1


app_idle_query:
 1e01f2c:    c0 ff 98 20 00 00 	r0 = 8344 <is_idle_active : 2098 >			  ## app_idle.c:84:0
 1e01f32:    01 60             	r1 = b[r0 + 0] (u)			  ## app_idle.c:85:13
 1e01f34:    10 70             	r0 = 1			  ## app_idle.c:85:12
 1e01f36:    01 22             	if (r1 == 0) goto 2 <app_idle_query+0xE : 1e01f3a >			  ## app_idle.c:85:12
 1e01f38:    00 70             	r0 = 0			  ## app_idle.c:85:12
 1e01f3a:    20 00             	rts			  ## app_idle.c:85:5


idle_state_machine:
 1e01f3c:    74 01             	[--sp] = {rets, r4}			  ## app_idle.c:54:0
 1e01f3e:    11 e0 27 10       	if (r1 != 1) goto 78 <idle_state_machine+0x54 : 1e01f90 >			  ## app_idle.c:54:0
 1e01f42:    26 24             	if (r2 == 0) goto 76 <idle_state_machine+0x54 : 1e01f90 >			  ## app_idle.c:54:0
 1e01f44:    10 44             	r0 = [r2 + 4]			  ## app_idle.c:62:21
 1e01f46:    20 e0 23 10       	if (r0 != 2) goto 70 <idle_state_machine+0x54 : 1e01f90 >
 1e01f4a:    c2 ff 89 0e e1 01 	r2 = 31526537 <update_target_end+0xC59 : 1e10e89 >			  ## app_idle.c:64:13
 1e01f50:    20 70             	r0 = 2			  ## app_idle.c:64:13
 1e01f52:    80 f3 55 57       	call 44714 <log_print : 1e0ce00 >			  ## app_idle.c:64:13
 1e01f56:    98 f3 45 27       	call 3165834 <os_taskq_flush : 106de4 >			  ## app_idle.c:65:13
 1e01f5a:    c4 ff af 0e e1 01 	r4 = 31526575 <update_target_end+0xC7F : 1e10eaf >			  ## app_idle.c:22:5
 1e01f60:    20 70             	r0 = 2			  ## app_idle.c:22:5
 1e01f62:    42 08             	r2 = r4			  ## app_idle.c:22:5
 1e01f64:    80 f3 4c 57       	call 44696 <log_print : 1e0ce00 >			  ## app_idle.c:22:5
 1e01f68:    c2 ff eb 0e e1 01 	r2 = 31526635 <update_target_end+0xCBB : 1e10eeb >			  ## app_idle.c:23:5
 1e01f6e:    20 70             	r0 = 2			  ## app_idle.c:23:5
 1e01f70:    80 f3 46 57       	call 44684 <log_print : 1e0ce00 >			  ## app_idle.c:23:5
 1e01f74:    20 70             	r0 = 2			  ## app_idle.c:24:5
 1e01f76:    42 08             	r2 = r4			  ## app_idle.c:24:5
 1e01f78:    80 f3 42 57       	call 44676 <log_print : 1e0ce00 >			  ## app_idle.c:24:5
 1e01f7c:    c0 ff 09 23 e1 01 	r0 = 31531785 <update_target_end+0x20D9 : 1e12309 >			  ## app_idle.c:26:5
 1e01f82:    80 f3 de d5       	call 109500 <clk_set : 1e1cb42 >			  ## app_idle.c:26:5
 1e01f86:    c0 ff 98 20 00 00 	r0 = 8344 <is_idle_active : 2098 >			  ## app_idle.c:27:20
 1e01f8c:    11 70             	r1 = 1			  ## app_idle.c:27:20
 1e01f8e:    09 60             	b[r0 + 0] = r1			  ## app_idle.c:27:20
 1e01f90:    00 70             	r0 = 0			  ## app_idle.c:80:5
 1e01f92:    54 01             	{pc, r4} = [sp++]			  ## app_idle.c:80:5


led_8888_init:
 1e01f94:    74 01             	[--sp] = {rets, r4}			  ## 7PIN_led8888.c:793:0
 1e01f96:    28 16             	call -944 <LED8888_close_init : 1e01be8 >			  ## 7PIN_led8888.c:794:2
 1e01f98:    c4 ff 96 20 00 00 	r4 = 8342 <led8888_scan_t : 2096 >			  ## 7PIN_led8888.c:794:2
 1e01f9e:    00 58             	r0 = h[r4 + 0] (u)			  ## 7PIN_led8888.c:797:5
 1e01fa0:    09 30             	if (r0 != 0) goto 18 <led_8888_init+0x20 : 1e01fb4 >			  ## 7PIN_led8888.c:797:5
 1e01fa2:    c1 ff 16 1c e0 01 	r1 = 31464470 <led8888_scan : 1e01c16 >			  ## 7PIN_led8888.c:798:20
 1e01fa8:    00 70             	r0 = 0			  ## 7PIN_led8888.c:798:20
 1e01faa:    22 70             	r2 = 2			  ## 7PIN_led8888.c:798:20
 1e01fac:    13 70             	r3 = 1			  ## 7PIN_led8888.c:798:20
 1e01fae:    80 f3 4a 51       	call 41620 <usr_timer_add : 1e0c246 >			  ## 7PIN_led8888.c:798:20
 1e01fb2:    08 58             	h[r4 + 0] = r0			  ## 7PIN_led8888.c:798:18
 1e01fb4:    54 01             	{pc, r4} = [sp++]			  ## 7PIN_led8888.c:816:1


ble_module_enable:
 1e01fb6:    75 01             	[--sp] = {rets, r5, r4}			  ## le_trans_data.c:1279:0
 1e01fb8:    04 08             	r4 = r0			  ## le_trans_data.c:1279:0
 1e01fba:    c0 ff 3e 09 e1 01 	r0 = 31525182 <update_target_end+0x70E : 1e1093e >			  ## le_trans_data.c:1280:5
 1e01fc0:    41 08             	r1 = r4			  ## le_trans_data.c:1280:5
 1e01fc2:    80 f3 f0 56       	call 44512 <printf : 1e0cda6 >			  ## le_trans_data.c:1280:5
 1e01fc6:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:1280:5
 1e01fcc:    06 28             	if (r4 == 0) goto 12 <ble_module_enable+0x24 : 1e01fda >			  ## le_trans_data.c:1281:9
 1e01fce:    10 70             	r0 = 1
 1e01fd0:    10 f9 54 50       	b[r5 + 84] = r0
 1e01fd4:    15 01             	{rets, r5, r4} = [sp++]			  ## le_trans_data.c:1283:9
 1e01fd6:    ff f3 60 f7       	goto -4416 <bt_ble_adv_enable : 1e00e9a >			  ## le_trans_data.c:1283:9
 1e01fda:    90 5b             	r0 = h[r5 + 50] (u)			  ## le_trans_data.c:1285:13
 1e01fdc:    06 20             	if (r0 == 0) goto 12 <ble_module_enable+0x34 : 1e01fea >			  ## le_trans_data.c:1285:13
 1e01fde:    00 70             	r0 = 0
 1e01fe0:    10 f9 54 50       	b[r5 + 84] = r0
 1e01fe4:    15 01             	{rets, r5, r4} = [sp++]			  ## le_trans_data.c:1287:13
 1e01fe6:    ff f3 40 fb       	goto -2432 <ble_disconnect : 1e0166a >			  ## le_trans_data.c:1287:13
 1e01fea:    00 70             	r0 = 0			  ## le_trans_data.c:1289:13
 1e01fec:    04 70             	r4 = 0			  ## le_trans_data.c:1289:13
 1e01fee:    bf f3 54 f7       	call -4440 <bt_ble_adv_enable : 1e00e9a >			  ## le_trans_data.c:1289:13
 1e01ff2:    14 f9 54 50       	b[r5 + 84] = r4			  ## le_trans_data.c:1289:13
 1e01ff6:    55 01             	{pc, r5, r4} = [sp++]			  ## le_trans_data.c:1293:1


Report_SKIP_ROPE_MODE:
 1e01ff8:    34 00             	[--sp] = rets			  ## le_trans_data.c:735:0
 1e01ffa:    fc 0b             	sp += -8			  ## le_trans_data.c:735:0
 1e01ffc:    d0 f5 00 00       	b[sp] = r0			  ## le_trans_data.c:740:13
 1e02000:    60 70             	r0 = 6			  ## le_trans_data.c:741:13
 1e02002:    d0 f5 01 00       	b[sp+1] = r0			  ## le_trans_data.c:741:13
 1e02006:    d2 f5 02 00       	b[sp+2] = r2			  ## le_trans_data.c:742:14
 1e0200a:    08 d4             	r0 = r1 >> 16			  ## le_trans_data.c:743:29
 1e0200c:    d0 f5 03 00       	b[sp+3] = r0			  ## le_trans_data.c:743:13
 1e02010:    08 d2             	r0 = r1 >> 8			  ## le_trans_data.c:744:32
 1e02012:    d0 f5 04 00       	b[sp+4] = r0			  ## le_trans_data.c:744:16
 1e02016:    bf f3 af f5       	call -5282 <get_vbat_level : 1e00b78 >			  ## le_trans_data.c:745:15
 1e0201a:    11 70             	r1 = 1
 1e0201c:    03 ff 36 01 01 00 	if (r0 < 310) goto 2 <Report_SKIP_ROPE_MODE+0x2C : 1e02024 >
 1e02022:    51 70             	r1 = 5
 1e02024:    d1 f5 05 00       	b[sp+5] = r1			  ## le_trans_data.c:745:13
 1e02028:    bf f3 b1 f5       	call -5278 <app_send_user_data_check : 1e00b8e >			  ## le_trans_data.c:749:6
 1e0202c:    03 20             	if (r0 == 0) goto 6 <Report_SKIP_ROPE_MODE+0x3C : 1e02034 >			  ## le_trans_data.c:749:6
 1e0202e:    00 a0             	r0 = sp + 0
 1e02030:    bf f3 be f5       	call -5252 <app_send_user_data : 1e00bb0 >			  ## le_trans_data.c:751:6
 1e02034:    04 0a             	sp += 8
 1e02036:    30 00             	pc = [sp++]			  ## le_trans_data.c:754:2


DISPLAY_NUM_DATA_UPDATE:
 1e02038:    76 01             	[--sp] = {rets, r6-r4}			  ## 7PIN_led8888.c:668:0
 1e0203a:    15 08             	r5 = r1			  ## 7PIN_led8888.c:668:0
 1e0203c:    04 08             	r4 = r0			  ## 7PIN_led8888.c:668:0
 1e0203e:    c0 ff d5 0b e1 01 	r0 = 31525845 <update_target_end+0x9A5 : 1e10bd5 >			  ## 7PIN_led8888.c:671:4
 1e02044:    80 f3 af 56       	call 44382 <printf : 1e0cda6 >			  ## 7PIN_led8888.c:671:4
 1e02048:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## 7PIN_led8888.c:671:4
 1e0204e:    00 f7 42 60       	r0 = h[r6 + 66] (u)			  ## 7PIN_led8888.c:676:9
 1e02052:    c1 ff 20 bf 02 00 	r1 = 180000 <text_size+0xF22C : 2bf20 >			  ## 7PIN_led8888.c:676:9
 1e02058:    80 f3 02 51       	call 41476 <sys_timer_modify : 1e0c260 >			  ## 7PIN_led8888.c:676:9
 1e0205c:    00 ff ff 50 12 00 	if (r5 == 255) goto 36 <DISPLAY_NUM_DATA_UPDATE+0x4E : 1e02086 >			  ## 7PIN_led8888.c:680:5
 1e02062:    c0 ff ff 2a e1 01 	r0 = 31533823 <LED_NUMBER : 1e12aff >
 1e02068:    15 e0 15 10       	if (r5 != 1) goto 42 <DISPLAY_NUM_DATA_UPDATE+0x5E : 1e02096 >
 1e0206c:    c1 73             	r1 = 60			  ## 7PIN_led8888.c:682:11
 1e0206e:    c0 fe 10 24       	r2 = r4 / r1 (u)			  ## 7PIN_led8888.c:682:11
 1e02072:    a5 04             	r5 = r2.l (u)			  ## 7PIN_led8888.c:684:7
 1e02074:    d0 fe 10 34       	r3 = r4 % r1 (u)			  ## 7PIN_led8888.c:683:11
 1e02078:    a5 e0 1b 20       	if (r5 >= 10) goto 54 <DISPLAY_NUM_DATA_UPDATE+0x7A : 1e020b2 >			  ## 7PIN_led8888.c:683:11
 1e0207c:    01 70             	r1 = 0
 1e0207e:    59 6c             	b[r6 + 5] = r1
 1e02080:    02 70             	r2 = 0
 1e02082:    1f 3a             	if (r5 != 0) goto 62 <DISPLAY_NUM_DATA_UPDATE+0x8A : 1e020c2 >
 1e02084:    23 18             	goto 70 <DISPLAY_NUM_DATA_UPDATE+0x94 : 1e020cc >
 1e02086:    02 70             	r2 = 0
 1e02088:    5a 6c             	b[r6 + 5] = r2			  ## 7PIN_led8888.c:708:26
 1e0208a:    8a 6c             	b[r6 + 8] = r2			  ## 7PIN_led8888.c:709:26
 1e0208c:    9a 6c             	b[r6 + 9] = r2			  ## 7PIN_led8888.c:710:26
 1e0208e:    aa 6c             	b[r6 + 10] = r2			  ## 7PIN_led8888.c:711:26
 1e02090:    7a 6c             	b[r6 + 7] = r2			  ## 7PIN_led8888.c:712:26
 1e02092:    01 70             	r1 = 0			  ## 7PIN_led8888.c:748:4
 1e02094:    4b 18             	goto 150 <DISPLAY_NUM_DATA_UPDATE+0xF4 : 1e0212c >			  ## 7PIN_led8888.c:748:4
 1e02096:    02 ff e8 43 26 00 	if (r4 >= 1000) goto 76 <DISPLAY_NUM_DATA_UPDATE+0xB0 : 1e020e8 >
 1e0209c:    03 70             	r3 = 0
 1e0209e:    5b 6c             	b[r6 + 5] = r3
 1e020a0:    44 e6 2c 20       	if (r4 >= 100) goto 88 <DISPLAY_NUM_DATA_UPDATE+0xC4 : 1e020fc >
 1e020a4:    02 70             	r2 = 0
 1e020a6:    8a 6c             	b[r6 + 8] = r2
 1e020a8:    01 70             	r1 = 0
 1e020aa:    05 70             	r5 = 0
 1e020ac:    a4 e0 2f 20       	if (r4 >= 10) goto 94 <DISPLAY_NUM_DATA_UPDATE+0xD6 : 1e0210e >
 1e020b0:    36 18             	goto 108 <DISPLAY_NUM_DATA_UPDATE+0xE6 : 1e0211e >
 1e020b2:    a1 70             	r1 = 10			  ## 7PIN_led8888.c:690:45
 1e020b4:    c0 fe 10 25       	r2 = r5 / r1 (u)			  ## 7PIN_led8888.c:690:45
 1e020b8:    d0 fe 10 12       	r1 = r2 % r1 (u)			  ## 7PIN_led8888.c:690:49
 1e020bc:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## 7PIN_led8888.c:690:29
 1e020c0:    59 6c             	b[r6 + 5] = r1			  ## 7PIN_led8888.c:690:29
 1e020c2:    a2 70             	r2 = 10			  ## 7PIN_led8888.c:699:44
 1e020c4:    d0 fe 20 25       	r2 = r5 % r2 (u)			  ## 7PIN_led8888.c:699:44
 1e020c8:    02 fa 00 20       	r2 = b[r2+r0] (u)			  ## 7PIN_led8888.c:699:29
 1e020cc:    a5 70             	r5 = 10
 1e020ce:    c0 fe 50 33       	r3 = r3 / r5 (u)			  ## 7PIN_led8888.c:702:43
 1e020d2:    d0 fe 50 33       	r3 = r3 % r5 (u)			  ## 7PIN_led8888.c:702:47
 1e020d6:    03 fa 00 30       	r3 = b[r3+r0] (u)			  ## 7PIN_led8888.c:702:27
 1e020da:    d0 fe 50 44       	r4 = r4 % r5 (u)			  ## 7PIN_led8888.c:703:43
 1e020de:    00 fa 00 40       	r0 = b[r4+r0] (u)			  ## 7PIN_led8888.c:703:28
 1e020e2:    8a 6c             	b[r6 + 8] = r2			  ## 7PIN_led8888.c:703:28
 1e020e4:    9b 6c             	b[r6 + 9] = r3			  ## 7PIN_led8888.c:702:26
 1e020e6:    21 18             	goto 66 <DISPLAY_NUM_DATA_UPDATE+0xF2 : 1e0212a >			  ## 7PIN_led8888.c:702:26
 1e020e8:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## 7PIN_led8888.c:723:44
 1e020ec:    c0 fe 10 14       	r1 = r4 / r1 (u)			  ## 7PIN_led8888.c:723:44
 1e020f0:    a2 70             	r2 = 10			  ## 7PIN_led8888.c:723:50
 1e020f2:    d0 fe 20 11       	r1 = r1 % r2 (u)			  ## 7PIN_led8888.c:723:50
 1e020f6:    03 fa 00 10       	r3 = b[r1+r0] (u)			  ## 7PIN_led8888.c:723:28
 1e020fa:    5b 6c             	b[r6 + 5] = r3			  ## 7PIN_led8888.c:723:28
 1e020fc:    41 76             	r1 = 100			  ## 7PIN_led8888.c:732:44
 1e020fe:    c0 fe 10 14       	r1 = r4 / r1 (u)			  ## 7PIN_led8888.c:732:44
 1e02102:    a2 70             	r2 = 10			  ## 7PIN_led8888.c:732:49
 1e02104:    d0 fe 20 11       	r1 = r1 % r2 (u)			  ## 7PIN_led8888.c:732:49
 1e02108:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## 7PIN_led8888.c:732:28
 1e0210c:    8a 6c             	b[r6 + 8] = r2			  ## 7PIN_led8888.c:732:28
 1e0210e:    a1 70             	r1 = 10			  ## 7PIN_led8888.c:741:44
 1e02110:    c0 fe 10 54       	r5 = r4 / r1 (u)			  ## 7PIN_led8888.c:741:44
 1e02114:    d0 fe 10 15       	r1 = r5 % r1 (u)			  ## 7PIN_led8888.c:741:48
 1e02118:    05 fa 00 10       	r5 = b[r1+r0] (u)			  ## 7PIN_led8888.c:741:28
 1e0211c:    31 08             	r1 = r3			  ## 7PIN_led8888.c:741:28
 1e0211e:    a3 70             	r3 = 10
 1e02120:    d0 fe 30 34       	r3 = r4 % r3 (u)			  ## 7PIN_led8888.c:744:43
 1e02124:    00 fa 00 30       	r0 = b[r3+r0] (u)			  ## 7PIN_led8888.c:744:28
 1e02128:    9d 6c             	b[r6 + 9] = r5			  ## 7PIN_led8888.c:744:28
 1e0212a:    a8 6c             	b[r6 + 10] = r0
 1e0212c:    c0 ff 0e 0c e1 01 	r0 = 31525902 <update_target_end+0x9DE : 1e10c0e >			  ## 7PIN_led8888.c:748:4
 1e02132:    80 f3 38 56       	call 44144 <printf : 1e0cda6 >			  ## 7PIN_led8888.c:748:4
 1e02136:    a2 6c             	r2 = b[r6 + 10] (u)			  ## 7PIN_led8888.c:749:2
 1e02138:    91 6c             	r1 = b[r6 + 9] (u)			  ## 7PIN_led8888.c:749:2
 1e0213a:    c0 ff 53 0c e1 01 	r0 = 31525971 <update_target_end+0xA23 : 1e10c53 >			  ## 7PIN_led8888.c:749:2
 1e02140:    16 01             	{rets, r6-r4} = [sp++]			  ## 7PIN_led8888.c:749:2
 1e02142:    c0 f3 30 56       	goto 44128 <printf : 1e0cda6 >			  ## 7PIN_led8888.c:749:2


time_down_over_deal:
 1e02146:    74 01             	[--sp] = {rets, r4}			  ## app_spp_and_le.c:1110:0
 1e02148:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:1110:0
 1e0214e:    e0 59             	r0 = h[r4 + 60] (u)			  ## app_spp_and_le.c:1111:5
 1e02150:    04 20             	if (r0 == 0) goto 8 <time_down_over_deal+0x14 : 1e0215a >			  ## app_spp_and_le.c:1111:5
 1e02152:    80 f3 84 50       	call 41224 <usr_timeout_del : 1e0c25e >			  ## app_spp_and_le.c:1113:3
 1e02156:    00 70             	r0 = 0			  ## app_spp_and_le.c:1114:21
 1e02158:    e8 59             	h[r4 + 60] = r0			  ## app_spp_and_le.c:1114:21
 1e0215a:    f0 59             	r0 = h[r4 + 62] (u)			  ## app_spp_and_le.c:1116:5
 1e0215c:    04 20             	if (r0 == 0) goto 8 <time_down_over_deal+0x20 : 1e02166 >			  ## app_spp_and_le.c:1116:5
 1e0215e:    80 f3 91 4f       	call 40738 <usr_timer_del : 1e0c084 >			  ## app_spp_and_le.c:1118:3
 1e02162:    00 70             	r0 = 0			  ## app_spp_and_le.c:1119:29
 1e02164:    f8 59             	h[r4 + 62] = r0			  ## app_spp_and_le.c:1119:29
 1e02166:    00 f7 40 40       	r0 = h[r4 + 64] (u)			  ## app_spp_and_le.c:1121:5
 1e0216a:    05 20             	if (r0 == 0) goto 10 <time_down_over_deal+0x30 : 1e02176 >			  ## app_spp_and_le.c:1121:5
 1e0216c:    e0 59             	r0 = h[r4 + 60] (u)			  ## app_spp_and_le.c:1123:3
 1e0216e:    80 f3 76 50       	call 41196 <usr_timeout_del : 1e0c25e >			  ## app_spp_and_le.c:1123:3
 1e02172:    00 70             	r0 = 0			  ## app_spp_and_le.c:1124:21
 1e02174:    e8 59             	h[r4 + 60] = r0			  ## app_spp_and_le.c:1124:21
 1e02176:    c0 ff c0 08 00 00 	r0 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## app_spp_and_le.c:1126:50
 1e0217c:    11 40             	r1 = [r0 + 4]			  ## app_spp_and_le.c:1126:50
 1e0217e:    50 76             	r0 = 101			  ## app_spp_and_le.c:1126:2
 1e02180:    02 70             	r2 = 0			  ## app_spp_and_le.c:1126:2
 1e02182:    3a 17             	call -396 <Report_SKIP_ROPE_MODE : 1e01ff8 >			  ## app_spp_and_le.c:1126:2
 1e02184:    f0 49             	r0 = [r4 + 124]			  ## app_spp_and_le.c:1128:26
 1e02186:    01 70             	r1 = 0			  ## app_spp_and_le.c:1128:2
 1e02188:    14 01             	{rets, r4} = [sp++]			  ## app_spp_and_le.c:1128:2
 1e0218a:    56 1f             	goto -340 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_spp_and_le.c:1128:2


charge_close:
 1e0218c:    74 01             	[--sp] = {rets, r4}			  ## charge.c:189:0
 1e0218e:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## charge.c:189:0
 1e02194:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:192:9
 1e02196:    10 e0 06 00       	if (r0 == 1) goto 12 <charge_close+0x1A : 1e021a6 >			  ## charge.c:192:9
 1e0219a:    c0 ff 1a 18 1a 00 	r0 = 1710106 <uECC_vli_cmp_unsafe+0x9A81E : 1a181a >
 1e021a0:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:193:9
 1e021a2:    71 b0             	r1 &= 4294967294			  ## charge.c:193:9
 1e021a4:    09 60             	b[r0 + 0] = r1			  ## charge.c:193:9
 1e021a6:    bf f3 e8 f2       	call -6704 <power_wakeup_disable_with_port : 1e0077a >			  ## charge.c:196:5
 1e021aa:    10 70             	r0 = 1			  ## charge.c:198:5
 1e021ac:    bf f3 0a f2       	call -7148 <charge_event_to_user : 1e005c4 >			  ## charge.c:198:5
 1e021b0:    00 f6 d8 41       	r0 = [r4 + 472]			  ## charge.c:200:17
 1e021b4:    08 20             	if (r0 == 0) goto 16 <charge_close+0x3A : 1e021c6 >			  ## charge.c:200:17
 1e021b6:    00 f6 d8 41       	r0 = [r4 + 472]			  ## charge.c:201:31
 1e021ba:    20 04             	r0 = r0.l (u)			  ## charge.c:201:9
 1e021bc:    80 f3 62 4f       	call 40644 <usr_timer_del : 1e0c084 >			  ## charge.c:201:9
 1e021c0:    00 70             	r0 = 0			  ## charge.c:201:9
 1e021c2:    10 f6 d8 41       	[r4 + 472] = r0			  ## charge.c:202:30
 1e021c6:    00 f6 dc 41       	r0 = [r4 + 476]			  ## charge.c:204:17
 1e021ca:    08 20             	if (r0 == 0) goto 16 <charge_close+0x50 : 1e021dc >			  ## charge.c:204:17
 1e021cc:    00 f6 dc 41       	r0 = [r4 + 476]			  ## charge.c:205:31
 1e021d0:    20 04             	r0 = r0.l (u)			  ## charge.c:205:9
 1e021d2:    80 f3 56 4f       	call 40620 <sys_timer_del : 1e0c082 >			  ## charge.c:205:9
 1e021d6:    00 70             	r0 = 0			  ## charge.c:205:9
 1e021d8:    10 f6 dc 41       	[r4 + 476] = r0			  ## charge.c:206:26
 1e021dc:    54 01             	{pc, r4} = [sp++]			  ## charge.c:208:1


vbat_check_init:
 1e021de:    74 01             	[--sp] = {rets, r4}			  ## app_power_manage.c:185:0
 1e021e0:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:185:0
 1e021e6:    a0 49             	r0 = [r4 + 104]			  ## app_power_manage.c:186:9
 1e021e8:    06 20             	if (r0 == 0) goto 12 <vbat_check_init+0x18 : 1e021f6 >			  ## app_power_manage.c:186:9
 1e021ea:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:189:9
 1e021ec:    01 fb 30 75       	r1 = 30000 <nvbss_size+0x2B0 : 7530 >			  ## app_power_manage.c:189:9
 1e021f0:    80 f3 36 50       	call 41068 <sys_timer_modify : 1e0c260 >			  ## app_power_manage.c:189:9
 1e021f4:    09 18             	goto 18 <vbat_check_init+0x2A : 1e02208 >			  ## app_power_manage.c:189:9
 1e021f6:    c1 ff 14 25 e0 01 	r1 = 31466772 <vbat_check_slow : 1e02514 >			  ## app_power_manage.c:187:27
 1e021fc:    00 70             	r0 = 0			  ## app_power_manage.c:187:27
 1e021fe:    02 fb 30 75       	r2 = 30000 <nvbss_size+0x2B0 : 7530 >			  ## app_power_manage.c:187:27
 1e02202:    80 f3 ca 50       	call 41364 <sys_timer_add : 1e0c39a >			  ## app_power_manage.c:187:27
 1e02206:    a8 49             	[r4 + 104] = r0			  ## app_power_manage.c:187:25
 1e02208:    b0 49             	r0 = [r4 + 108]			  ## app_power_manage.c:192:9
 1e0220a:    09 30             	if (r0 != 0) goto 18 <vbat_check_init+0x40 : 1e0221e >			  ## app_power_manage.c:192:9
 1e0220c:    c1 ff ca 25 e0 01 	r1 = 31466954 <vbat_check : 1e025ca >			  ## app_power_manage.c:193:27
 1e02212:    00 70             	r0 = 0			  ## app_power_manage.c:193:27
 1e02214:    a2 70             	r2 = 10			  ## app_power_manage.c:193:27
 1e02216:    13 70             	r3 = 1			  ## app_power_manage.c:193:27
 1e02218:    80 f3 15 50       	call 41002 <usr_timer_add : 1e0c246 >			  ## app_power_manage.c:193:27
 1e0221c:    b8 49             	[r4 + 108] = r0			  ## app_power_manage.c:193:25
 1e0221e:    54 01             	{pc, r4} = [sp++]			  ## app_power_manage.c:195:1


power_set_soft_poweroff_prepare:
 1e02220:    74 01             	[--sp] = {rets, r4}			  ## pmu_analog.c:835:0
 1e02222:    98 f3 bb 25       	call 3165046 <local_irq_disable : 106d9c >			  ## pmu_analog.c:836:5
 1e02226:    08 00             	csync			  ## pmu_analog.c:836:5
 1e02228:    c4 ff 80 48 00 00 	r4 = 18560 <tws_sync_channel_end : 4880 >			  ## pmu_analog.c:836:5
 1e0222e:    00 f6 60 41       	r0 = [r4 + 352]			  ## pmu_analog.c:838:20
 1e02232:    01 20             	if (r0 == 0) goto 2 <power_set_soft_poweroff_prepare+0x16 : 1e02236 >			  ## pmu_analog.c:838:20
 1e02234:    80 00             	call r0			  ## pmu_analog.c:840:9
 1e02236:    c0 ff 45 18 1a 00 	r0 = 1710149 <uECC_vli_cmp_unsafe+0x9A849 : 1a1845 >
 1e0223c:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:845:17
 1e0223e:    01 fd 07 19       	r1 = r1 | 7			  ## pmu_analog.c:845:17
 1e02242:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:845:17
 1e02244:    01 fc d0 ff       	r1 = r0 + -48			  ## pmu_analog.c:845:17
 1e02248:    50 62             	r0 = b[r1 + 5] (u)			  ## pmu_analog.c:848:5
 1e0224a:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:848:5
 1e0224c:    58 62             	b[r1 + 5] = r0			  ## pmu_analog.c:848:5
 1e0224e:    10 fc 7c 00       	r0 = r1 + 124			  ## pmu_analog.c:848:5
 1e02252:    02 61             	r2 = b[r0 + 16] (u)			  ## pmu_analog.c:851:5
 1e02254:    72 b0             	r2 &= 4294967294			  ## pmu_analog.c:851:5
 1e02256:    0a 61             	b[r0 + 16] = r2			  ## pmu_analog.c:851:5
 1e02258:    12 61             	r2 = b[r0 + 17] (u)			  ## pmu_analog.c:853:5
 1e0225a:    22 fd fc 29       	r2 = r2 & 252			  ## pmu_analog.c:853:5
 1e0225e:    1a 61             	b[r0 + 17] = r2			  ## pmu_analog.c:853:5
 1e02260:    02 62             	r2 = b[r1 + 0] (u)			  ## pmu_analog.c:856:5
 1e02262:    92 b2             	r2 |= 32			  ## pmu_analog.c:856:5
 1e02264:    0a 62             	b[r1 + 0] = r2			  ## pmu_analog.c:856:5
 1e02266:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:859:5
 1e02268:    21 fd e1 19       	r1 = r1 & 225			  ## pmu_analog.c:859:5
 1e0226c:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:859:5
 1e0226e:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:860:5
 1e02270:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:860:5
 1e02272:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:860:5
 1e02274:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:861:5
 1e02276:    f1 b2             	r1 &= 4294967263			  ## pmu_analog.c:861:5
 1e02278:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:861:5
 1e0227a:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:864:5
 1e0227c:    f1 b1             	r1 &= 4294967287			  ## pmu_analog.c:864:5
 1e0227e:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:864:5
 1e02280:    c1 ff 0c 00 1e 00 	r1 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## pmu_analog.c:864:5
 1e02286:    00 f4 01 19       	[r1 + 0] |= 1			  ## pmu_analog.c:805:24
 1e0228a:    12 42             	r2 = [r1 + 4]			  ## pmu_analog.c:806:5
 1e0228c:    32 fd 07 2a       	r2 = r2 & 4294965503			  ## pmu_analog.c:806:5
 1e02290:    02 fd 03 2a       	r2 = r2 | 768			  ## pmu_analog.c:806:5
 1e02294:    1a 42             	[r1 + 4] = r2			  ## pmu_analog.c:806:5
 1e02296:    08 00             	csync			  ## pmu_analog.c:807:5
 1e02298:    11 fc f4 30       	r1 = r1 + 12532			  ## pmu_analog.c:814:17
 1e0229c:    02 70             	r2 = 0			  ## pmu_analog.c:814:17
 1e0229e:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:814:17
 1e022a0:    11 fc 00 e7       	r1 = r1 + -6400			  ## pmu_analog.c:824:18
 1e022a4:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:824:18
 1e022a6:    11 fc 00 3d       	r1 = r1 + 15616			  ## pmu_analog.c:824:18
 1e022aa:    12 f6 00 15       	[r1 + 1280] = r2			  ## pmu_analog.c:826:19
 1e022ae:    13 fc 00 f2       	r3 = r1 + -3584			  ## pmu_analog.c:826:19
 1e022b2:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:829:22
 1e022b4:    1a 46             	[r3 + 4] = r2			  ## pmu_analog.c:830:22
 1e022b6:    13 fc 00 c7       	r3 = r1 + -14592			  ## pmu_analog.c:870:18
 1e022ba:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:870:18
 1e022bc:    13 fc 00 c8       	r3 = r1 + -14336			  ## pmu_analog.c:871:18
 1e022c0:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:871:18
 1e022c2:    13 fc 00 c9       	r3 = r1 + -14080			  ## pmu_analog.c:872:18
 1e022c6:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:872:18
 1e022c8:    13 fc 00 cf       	r3 = r1 + -12544			  ## pmu_analog.c:876:18
 1e022cc:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:876:18
 1e022ce:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:878:19
 1e022d0:    51 60             	r1 = b[r0 + 5] (u)			  ## pmu_analog.c:881:5
 1e022d2:    21 fd f8 19       	r1 = r1 & 248			  ## pmu_analog.c:881:5
 1e022d6:    01 fd 03 19       	r1 = r1 | 3			  ## pmu_analog.c:881:5
 1e022da:    59 60             	b[r0 + 5] = r1			  ## pmu_analog.c:881:5
 1e022dc:    a1 60             	r1 = b[r0 + 10] (u)			  ## pmu_analog.c:882:5
 1e022de:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:882:5
 1e022e2:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:882:5
 1e022e6:    a9 60             	b[r0 + 10] = r1			  ## pmu_analog.c:882:5
 1e022e8:    b1 60             	r1 = b[r0 + 11] (u)			  ## pmu_analog.c:883:5
 1e022ea:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:883:5
 1e022ee:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:883:5
 1e022f2:    b9 60             	b[r0 + 11] = r1			  ## pmu_analog.c:883:5
 1e022f4:    41 60             	r1 = b[r0 + 4] (u)			  ## pmu_analog.c:886:5
 1e022f6:    02 f9 4c 41       	r2 = b[r4 + 332] (u)			  ## pmu_analog.c:886:5
 1e022fa:    21 fd c7 19       	r1 = r1 & 199			  ## pmu_analog.c:886:5
 1e022fe:    d2 c0             	r2 = r2 << 3			  ## pmu_analog.c:886:5
 1e02300:    22 fd 38 29       	r2 = r2 & 56			  ## pmu_analog.c:886:5
 1e02304:    51 b4             	r1 |= r2			  ## pmu_analog.c:886:5
 1e02306:    49 60             	b[r0 + 4] = r1			  ## pmu_analog.c:886:5
 1e02308:    54 01             	{pc, r4} = [sp++]			  ## pmu_analog.c:887:1


power_set_soft_poweroff:
 1e0230a:    c0 ff f4 20 00 00 	r0 = 8436 <charge_mode : 20f4 >			  ## power_hw.c:1343:0
 1e02310:    02 70             	r2 = 0			  ## power_hw.c:1344:17
 1e02312:    0a 60             	b[r0 + 0] = r2			  ## power_hw.c:1344:17
 1e02314:    c0 ff c9 0f 1a 00 	r0 = 1707977 <uECC_vli_cmp_unsafe+0x99FCD : 1a0fc9 >			  ## power_hw.c:1344:17
 1e0231a:    0a 60             	b[r0 + 0] = r2			  ## power_hw.c:1345:20
 1e0231c:    c1 ff 80 48 00 00 	r1 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:1345:20
 1e02322:    03 f9 36 10       	r3 = b[r1 + 54] (u)			  ## power_hw.c:1347:17
 1e02326:    07 36             	if (r3 != 0) goto 14 <power_set_soft_poweroff+0x2C : 1e02336 >			  ## power_hw.c:1347:17
 1e02328:    1a 60             	b[r0 + 1] = r2			  ## power_hw.c:1358:22
 1e0232a:    01 f9 37 10       	r1 = b[r1 + 55] (u)			  ## power_hw.c:1359:21
 1e0232e:    0b 32             	if (r1 != 0) goto 22 <power_set_soft_poweroff+0x3C : 1e02346 >			  ## power_hw.c:1359:21
 1e02330:    00 70             	r0 = 0			  ## power_hw.c:1366:13
 1e02332:    90 f3 6f 0d       	call 2104030 <power_set_soft_poweroff_legacy : 3e14 >			  ## power_hw.c:1366:13
 1e02336:    12 70             	r2 = 1
 1e02338:    1a 60             	b[r0 + 1] = r2			  ## power_hw.c:1348:22
 1e0233a:    01 f9 37 10       	r1 = b[r1 + 55] (u)			  ## power_hw.c:1349:21
 1e0233e:    01 22             	if (r1 == 0) goto 2 <power_set_soft_poweroff+0x38 : 1e02342 >			  ## power_hw.c:1349:21
 1e02340:    0a 60             	b[r0 + 0] = r2			  ## power_hw.c:1350:28
 1e02342:    90 f3 3f 0d       	call 2103934 <power_set_soft_poweroff_advance : 3dc4 >
 1e02346:    11 70             	r1 = 1
 1e02348:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1360:28
 1e0234a:    10 70             	r0 = 1			  ## power_hw.c:1362:13
 1e0234c:    90 f3 62 0d       	call 2104004 <power_set_soft_poweroff_legacy : 3e14 >			  ## power_hw.c:1362:13


app_charge_event_handler:
 1e02350:    75 01             	[--sp] = {rets, r5, r4}			  ## app_charge.c:152:0
 1e02352:    00 04             	r0 = r0.b0 (u)			  ## app_charge.c:152:0
 1e02354:    50 e0 9b 80       	if (r0 > 5) goto 310 <.GJTIE242_0_0_+0x122 : 1e0248e >			  ## app_charge.c:152:0
 1e02358:    c4 ff c9 0d e1 01 	r4 = 31526345 <update_target_end+0xB99 : 1e10dc9 >			  ## app_charge.c:152:0
 1e0235e:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## app_charge.c:152:0
 1e02364:    a0 00             	tbb [r0]			  ## app_charge.c:152:0


.GJTIS242_0_0_:
 1e02366:    03     < 3 : 0x3 >
 1e02367:    28     < 40 : 0x28 >
 1e02368:    38     < 56 : 0x38 >
 1e02369:    4b     < 75 : 0x4B >
 1e0236a:    53     < 83 : 0x53 >
 1e0236b:    75     < 117 : 0x75 >
 1e0236c:    c3 ff f4 0d e1 01 	r3 = 31526388 <update_target_end+0xBC4 : 1e10df4 >			  ## app_charge.c:66:5
 1e02372:    20 70             	r0 = 2			  ## app_charge.c:66:5
 1e02374:    42 08             	r2 = r4			  ## app_charge.c:66:5
 1e02376:    80 f3 43 55       	call 43654 <log_print : 1e0ce00 >			  ## app_charge.c:66:5
 1e0237a:    20 70             	r0 = 2			  ## app_charge.c:68:5
 1e0237c:    bf f3 db f0       	call -7754 <power_set_mode : 1e00536 >			  ## app_charge.c:68:5
 1e02380:    09 16             	call -1006 <led_8888_init : 1e01f94 >			  ## app_charge.c:71:5
 1e02382:    00 70             	r0 = 0			  ## app_charge.c:42:5
 1e02384:    18 16             	call -976 <ble_module_enable : 1e01fb6 >			  ## app_charge.c:42:5
 1e02386:    df 16             	call -578 <time_down_over_deal : 1e02146 >			  ## app_charge.c:53:4
 1e02388:    80 f3 4f 62       	call 50334 <sys_key_event_disable : 1e0e82a >			  ## app_charge.c:54:4
 1e0238c:    00 70             	r0 = 0			  ## app_charge.c:56:2
 1e0238e:    f1 7f             	r1 = 255			  ## app_charge.c:56:2
 1e02390:    53 16             	call -858 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_charge.c:56:2
 1e02392:    40 70             	r0 = 4			  ## app_charge.c:57:2
 1e02394:    11 70             	r1 = 1			  ## app_charge.c:57:2
 1e02396:    bf f3 08 f5       	call -5616 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## app_charge.c:57:2
 1e0239a:    c1 ff 0c 1f e0 01 	r1 = 31465228 <update_charge_ui : 1e01f0c >			  ## app_charge.c:58:25
 1e023a0:    00 70             	r0 = 0			  ## app_charge.c:58:25
 1e023a2:    02 fb 90 01       	r2 = 400 <BTCTLER_CL_BSS_SIZE+0x4 : 190 >			  ## app_charge.c:58:25
 1e023a6:    13 70             	r3 = 1			  ## app_charge.c:58:25
 1e023a8:    80 f3 4d 4f       	call 40602 <usr_timer_add : 1e0c246 >			  ## app_charge.c:58:25
 1e023ac:    a8 5b             	h[r5 + 52] = r0			  ## app_charge.c:58:23
 1e023ae:    c3 ff e3 0d e1 01 	r3 = 31526371 <update_target_end+0xBB3 : 1e10de3 >			  ## app_charge.c:61:5
 1e023b4:    26 18             	goto 76 <.GJTIE242_0_0_+0x96 : 1e02402 >			  ## app_charge.c:61:5
 1e023b6:    c3 ff 27 0e e1 01 	r3 = 31526439 <update_target_end+0xBF7 : 1e10e27 >			  ## app_charge.c:96:5
 1e023bc:    20 70             	r0 = 2			  ## app_charge.c:96:5
 1e023be:    42 08             	r2 = r4			  ## app_charge.c:96:5
 1e023c0:    80 f3 1e 55       	call 43580 <log_print : 1e0ce00 >			  ## app_charge.c:96:5
 1e023c4:    a0 5b             	r0 = h[r5 + 52] (u)			  ## app_charge.c:99:8
 1e023c6:    02 20             	if (r0 == 0) goto 4 <.GJTIE242_0_0_+0x60 : 1e023cc >			  ## app_charge.c:99:8
 1e023c8:    80 f3 49 4f       	call 40594 <usr_timeout_del : 1e0c25e >			  ## app_charge.c:100:9
 1e023cc:    00 70             	r0 = 0
 1e023ce:    a8 5b             	h[r5 + 52] = r0			  ## app_charge.c:101:23
 1e023d0:    f1 7f             	r1 = 255			  ## app_charge.c:102:2
 1e023d2:    15 01             	{rets, r5, r4} = [sp++]			  ## app_charge.c:102:2
 1e023d4:    31 1e             	goto -926 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_charge.c:102:2
 1e023d6:    c3 ff 16 0e e1 01 	r3 = 31526422 <update_target_end+0xBE6 : 1e10e16 >			  ## app_charge.c:84:5
 1e023dc:    20 70             	r0 = 2			  ## app_charge.c:84:5
 1e023de:    42 08             	r2 = r4			  ## app_charge.c:84:5
 1e023e0:    80 f3 0e 55       	call 43548 <log_print : 1e0ce00 >			  ## app_charge.c:84:5
 1e023e4:    d3 16             	call -602 <charge_close : 1e0218c >			  ## app_charge.c:85:5
 1e023e6:    40 70             	r0 = 4			  ## app_charge.c:87:5
 1e023e8:    31 70             	r1 = 3			  ## app_charge.c:87:5
 1e023ea:    bf f3 de f4       	call -5700 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## app_charge.c:87:5
 1e023ee:    a0 5b             	r0 = h[r5 + 52] (u)			  ## app_charge.c:88:8
 1e023f0:    02 20             	if (r0 == 0) goto 4 <.GJTIE242_0_0_+0x8A : 1e023f6 >			  ## app_charge.c:88:8
 1e023f2:    80 f3 34 4f       	call 40552 <usr_timeout_del : 1e0c25e >			  ## app_charge.c:89:9
 1e023f6:    00 70             	r0 = 0			  ## app_charge.c:90:23
 1e023f8:    a8 5b             	h[r5 + 52] = r0			  ## app_charge.c:90:23
 1e023fa:    55 01             	{pc, r5, r4} = [sp++]			  ## app_charge.c:90:23
 1e023fc:    c3 ff 06 0e e1 01 	r3 = 31526406 <update_target_end+0xBD6 : 1e10e06 >			  ## app_charge.c:79:5
 1e02402:    20 70             	r0 = 2
 1e02404:    42 08             	r2 = r4
 1e02406:    15 01             	{rets, r5, r4} = [sp++]
 1e02408:    c0 f3 fa 54       	goto 43508 <log_print : 1e0ce00 >
 1e0240c:    c3 ff 39 0e e1 01 	r3 = 31526457 <update_target_end+0xC09 : 1e10e39 >			  ## app_charge.c:111:5
 1e02412:    20 70             	r0 = 2			  ## app_charge.c:111:5
 1e02414:    42 08             	r2 = r4			  ## app_charge.c:111:5
 1e02416:    80 f3 f3 54       	call 43494 <log_print : 1e0ce00 >			  ## app_charge.c:111:5
 1e0241a:    00 f6 d8 51       	r0 = [r5 + 472]			  ## charge.c:167:17
 1e0241e:    08 20             	if (r0 == 0) goto 16 <.GJTIE242_0_0_+0xC4 : 1e02430 >			  ## charge.c:167:17
 1e02420:    00 f6 d8 51       	r0 = [r5 + 472]			  ## charge.c:168:31
 1e02424:    20 04             	r0 = r0.l (u)			  ## charge.c:168:9
 1e02426:    80 f3 2d 4e       	call 40026 <usr_timer_del : 1e0c084 >			  ## charge.c:168:9
 1e0242a:    00 70             	r0 = 0			  ## charge.c:168:9
 1e0242c:    10 f6 d8 51       	[r5 + 472] = r0			  ## charge.c:169:30
 1e02430:    c0 ff 0d 00 05 00 	r0 = 327693 <text_size+0x33319 : 5000d >			  ## charge.c:172:10
 1e02436:    bf f3 03 f0       	call -8186 <adc_get_voltage : 1e00440 >			  ## charge.c:172:10
 1e0243a:    80 c0             	r0 = r0 << 2			  ## charge.c:172:38
 1e0243c:    40 d0             	r0 = r0 >> 1			  ## charge.c:172:9
 1e0243e:    03 ff e1 05 26 00 	if (r0 < 1505) goto 76 <.GJTIE242_0_0_+0x124 : 1e02490 >			  ## charge.c:172:9
 1e02444:    00 f6 cc 51       	r0 = [r5 + 460]			  ## charge.c:173:31
 1e02448:    40 60             	r0 = b[r0 + 4] (u)			  ## charge.c:173:9
 1e0244a:    bf f3 04 f0       	call -8184 <set_charge_mA : 1e00456 >			  ## charge.c:173:9
 1e0244e:    31 18             	goto 98 <.GJTIE242_0_0_+0x146 : 1e024b2 >			  ## charge.c:173:9
 1e02450:    c3 ff 4e 0e e1 01 	r3 = 31526478 <update_target_end+0xC1E : 1e10e4e >			  ## app_charge.c:133:5
 1e02456:    20 70             	r0 = 2			  ## app_charge.c:133:5
 1e02458:    42 08             	r2 = r4			  ## app_charge.c:133:5
 1e0245a:    80 f3 d1 54       	call 43426 <log_print : 1e0ce00 >			  ## app_charge.c:133:5
 1e0245e:    96 16             	call -724 <charge_close : 1e0218c >			  ## app_charge.c:134:5
 1e02460:    30 70             	r0 = 3			  ## app_charge.c:135:5
 1e02462:    bf f3 68 f0       	call -7984 <power_set_mode : 1e00536 >			  ## app_charge.c:135:5
 1e02466:    80 f3 11 62       	call 50210 <sys_key_event_enable : 1e0e88c >			  ## app_charge.c:136:2
 1e0246a:    b9 16             	call -654 <vbat_check_init : 1e021de >			  ## app_charge.c:138:5
 1e0246c:    80 f3 95 63       	call 50986 <get_current_app : 1e0eb9a >			  ## app_charge.c:141:11
 1e02470:    04 08             	r4 = r0			  ## app_charge.c:141:11
 1e02472:    0d 28             	if (r4 == 0) goto 26 <.GJTIE242_0_0_+0x122 : 1e0248e >
 1e02474:    31 48             	r1 = [r4 + 12]			  ## app_charge.c:143:9
 1e02476:    c0 ff 64 0e e1 01 	r0 = 31526500 <update_target_end+0xC34 : 1e10e64 >			  ## app_charge.c:143:9
 1e0247c:    80 f3 93 54       	call 43302 <printf : 1e0cda6 >			  ## app_charge.c:143:9
 1e02480:    30 48             	r0 = [r4 + 12]			  ## app_charge.c:144:19
 1e02482:    c1 ff 4a 0f e1 01 	r1 = 31526730 <update_target_end+0xD1A : 1e10f4a >			  ## app_charge.c:144:7
 1e02488:    98 f3 34 25       	call 3164776 <strcmp : 106ef4 >			  ## app_charge.c:144:7
 1e0248c:    1e 20             	if (r0 == 0) goto 60 <.GJTIE242_0_0_+0x15E : 1e024ca >			  ## app_charge.c:144:7
 1e0248e:    55 01             	{pc, r5, r4} = [sp++]
 1e02490:    00 70             	r0 = 0			  ## charge.c:175:9
 1e02492:    bf f3 e0 ef       	call -8256 <set_charge_mA : 1e00456 >			  ## charge.c:175:9
 1e02496:    00 f6 dc 51       	r0 = [r5 + 476]			  ## charge.c:176:22
 1e0249a:    0b 30             	if (r0 != 0) goto 22 <.GJTIE242_0_0_+0x146 : 1e024b2 >			  ## charge.c:176:22
 1e0249c:    c1 ff 78 04 e0 01 	r1 = 31458424 <charge_cc_check : 1e00478 >			  ## charge.c:177:32
 1e024a2:    c2 ff 60 ea 00 00 	r2 = 60000 <_nv_pre_end+0x2F60 : ea60 >			  ## charge.c:177:32
 1e024a8:    00 70             	r0 = 0			  ## charge.c:177:32
 1e024aa:    80 f3 76 4f       	call 40684 <sys_timer_add : 1e0c39a >			  ## charge.c:177:32
 1e024ae:    10 f6 dc 51       	[r5 + 476] = r0			  ## charge.c:177:30
 1e024b2:    bf f3 0a f1       	call -7660 <power_wakeup_enable_with_port : 1e006ca >			  ## charge.c:181:5
 1e024b6:    c0 ff 1a 18 1a 00 	r0 = 1710106 <uECC_vli_cmp_unsafe+0x9A81E : 1a181a >			  ## charge.c:181:5
 1e024bc:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:183:5
 1e024be:    11 b0             	r1 |= 1			  ## charge.c:183:5
 1e024c0:    09 60             	b[r0 + 0] = r1			  ## charge.c:183:5
 1e024c2:    00 70             	r0 = 0			  ## charge.c:185:5
 1e024c4:    15 01             	{rets, r5, r4} = [sp++]			  ## charge.c:185:5
 1e024c6:    ff f3 7d f0       	goto -7942 <charge_event_to_user : 1e005c4 >			  ## charge.c:185:5
 1e024ca:    1f 17             	call -450 <power_set_soft_poweroff : 1e0230a >			  ## app_charge.c:145:13


idle_event_handler:
 1e024cc:    34 00             	[--sp] = rets			  ## app_idle.c:32:0
 1e024ce:    00 52             	r0 = h[r1 + 0] (u)			  ## app_idle.c:33:20
 1e024d0:    40 e0 08 10       	if (r0 != 4) goto 16 <idle_event_handler+0x18 : 1e024e4 >
 1e024d4:    10 42             	r0 = [r1 + 4]			  ## app_idle.c:40:25
 1e024d6:    c2 ff 00 47 48 43 	r2 = 1128810240 <uECC_vli_cmp_unsafe+0x137D704 : 1484700 >			  ## app_idle.c:40:29
 1e024dc:    20 f2 02 10       	if (r0 != r2) goto 4 <idle_event_handler+0x18 : 1e024e4 >			  ## app_idle.c:40:29
 1e024e0:    80 62             	r0 = b[r1 + 8] (u)			  ## app_idle.c:41:13
 1e024e2:    36 17             	call -404 <app_charge_event_handler : 1e02350 >			  ## app_idle.c:41:13
 1e024e4:    00 70             	r0 = 0			  ## app_idle.c:48:1
 1e024e6:    30 00             	pc = [sp++]			  ## app_idle.c:48:1


__errno:
 1e024e8:    c0 ff 9c 20 00 00 	r0 = 8348 <__errno.err : 209c >			  ## app_main.c:217:0
 1e024ee:    20 00             	rts			  ## app_main.c:219:5


power_event_to_user:
 1e024f0:    34 00             	[--sp] = rets			  ## app_power_manage.c:45:0
 1e024f2:    f4 0b             	sp += -24			  ## app_power_manage.c:45:0
 1e024f4:    41 70             	r1 = 4			  ## app_power_manage.c:45:0
 1e024f6:    91 f5 00 00       	h[sp] = r1			  ## app_power_manage.c:47:12
 1e024fa:    c1 ff 00 57 4f 50 	r1 = 1347376896 <uECC_vli_cmp_unsafe+0x3EE704 : 4f5700 >			  ## app_power_manage.c:48:12
 1e02500:    19 02             	[sp+4] = r1			  ## app_power_manage.c:48:12
 1e02502:    d0 f5 08 00       	b[sp+8] = r0			  ## app_power_manage.c:49:19
 1e02506:    00 70             	r0 = 0			  ## app_power_manage.c:49:19
 1e02508:    38 02             	[sp+12] = r0			  ## app_power_manage.c:50:19
 1e0250a:    00 a0             	r0 = sp + 0			  ## app_power_manage.c:50:19
 1e0250c:    80 f3 51 61       	call 49826 <sys_event_notify : 1e0e7b2 >			  ## app_power_manage.c:51:5
 1e02510:    0c 0a             	sp += 24
 1e02512:    30 00             	pc = [sp++]			  ## app_power_manage.c:52:1


vbat_check_slow:
 1e02514:    74 01             	[--sp] = {rets, r4}			  ## app_power_manage.c:173:0
 1e02516:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:173:0
 1e0251c:    b0 49             	r0 = [r4 + 108]			  ## app_power_manage.c:174:9
 1e0251e:    09 30             	if (r0 != 0) goto 18 <vbat_check_slow+0x1E : 1e02532 >
 1e02520:    c1 ff ca 25 e0 01 	r1 = 31466954 <vbat_check : 1e025ca >			  ## app_power_manage.c:175:27
 1e02526:    00 70             	r0 = 0			  ## app_power_manage.c:175:27
 1e02528:    a2 70             	r2 = 10			  ## app_power_manage.c:175:27
 1e0252a:    13 70             	r3 = 1			  ## app_power_manage.c:175:27
 1e0252c:    80 f3 8b 4e       	call 40214 <usr_timer_add : 1e0c246 >			  ## app_power_manage.c:175:27
 1e02530:    b8 49             	[r4 + 108] = r0			  ## app_power_manage.c:175:25
 1e02532:    01 f9 d0 41       	r1 = b[r4 + 464] (u)			  ## charge.c:96:20
 1e02536:    a0 49             	r0 = [r4 + 104]			  ## charge.c:96:20
 1e02538:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:180:9
 1e0253a:    04 22             	if (r1 == 0) goto 8 <vbat_check_slow+0x30 : 1e02544 >			  ## app_power_manage.c:177:9
 1e0253c:    c1 ff 60 ea 00 00 	r1 = 60000 <_nv_pre_end+0x2F60 : ea60 >			  ## app_power_manage.c:178:9
 1e02542:    02 18             	goto 4 <vbat_check_slow+0x34 : 1e02548 >			  ## app_power_manage.c:178:9
 1e02544:    01 fb 30 75       	r1 = 30000 <nvbss_size+0x2B0 : 7530 >			  ## app_power_manage.c:180:9
 1e02548:    14 01             	{rets, r4} = [sp++]
 1e0254a:    c0 f3 89 4e       	goto 40210 <sys_timer_modify : 1e0c260 >


battery_value_to_phone_level:
 1e0254e:    74 01             	[--sp] = {rets, r4}			  ## app_power_manage.c:148:0
 1e02550:    bf f3 12 f3       	call -6620 <get_vbat_level : 1e00b78 >			  ## app_power_manage.c:115:19
 1e02554:    c3 ff c0 23 00 00 	r3 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:115:19
 1e0255a:    c1 57             	r1 = h[r3 + 56] (u)			  ## app_power_manage.c:116:9
 1e0255c:    02 08             	r2 = r0			  ## app_power_manage.c:115:19
 1e0255e:    17 32             	if (r1 != 0) goto 46 <battery_value_to_phone_level+0x40 : 1e0258e >			  ## app_power_manage.c:115:19
 1e02560:    00 f9 d1 31       	r0 = b[r3 + 465] (u)
 1e02564:    02 30             	if (r0 != 0) goto 4 <battery_value_to_phone_level+0x1C : 1e0256a >
 1e02566:    bf f3 06 f1       	call -7668 <cpu_reset : 1e00776 >			  ## charge.c:343:5
 1e0256a:    04 f6 cc 31       	r4 = [r3 + 460]
 1e0256e:    20 68             	r0 = b[r4 + 2] (u)
 1e02570:    00 e1 03 30       	if (r0 < 16) goto 6 <battery_value_to_phone_level+0x2C : 1e0257a >
 1e02574:    bf f3 ff f0       	call -7682 <cpu_reset : 1e00776 >			  ## charge.c:344:5
 1e02578:    20 68             	r0 = b[r4 + 2] (u)			  ## charge.c:344:5
 1e0257a:    c1 ff a4 29 e1 01 	r1 = 31533476 <full_table : 1e129a4 >			  ## charge.c:345:12
 1e02580:    40 f8 00 10       	r0 = h[r1+r0<<1] (u)			  ## app_power_manage.c:118:31
 1e02584:    c0 89             	r0 += -100			  ## app_power_manage.c:118:55
 1e02586:    a1 70             	r1 = 10			  ## app_power_manage.c:118:62
 1e02588:    e0 fe 10 10       	r1 = r0 / r1 (s)			  ## app_power_manage.c:118:62
 1e0258c:    c9 57             	h[r3 + 56] = r1			  ## app_power_manage.c:118:28
 1e0258e:    c0 ff c0 25 00 00 	r0 = 9664 <_sdfile_handl : 25c0 >			  ## app_power_manage.c:124:28
 1e02594:    03 f7 74 00       	r3 = h[r0 + 116] (u)			  ## app_power_manage.c:124:28
 1e02598:    00 70             	r0 = 0			  ## app_power_manage.c:124:28
 1e0259a:    32 f2 14 90       	if (r2 <= r3) goto 40 <battery_value_to_phone_level+0x78 : 1e025c6 >			  ## app_power_manage.c:124:28
 1e0259e:    61 04             	r1 = r1.l (u)			  ## app_power_manage.c:130:73
 1e025a0:    e1 b2             	r1 = r1 - r3			  ## app_power_manage.c:130:92
 1e025a2:    e2 b4             	r2 = r2 - r3			  ## app_power_manage.c:130:37
 1e025a4:    02 fe 64 29       	r2 = r2 * 100			  ## app_power_manage.c:130:64
 1e025a8:    c0 fe 10 22       	r2 = r2 / r1 (u)			  ## app_power_manage.c:130:70
 1e025ac:    a3 04             	r3 = r2.l (u)			  ## app_power_manage.c:131:13
 1e025ae:    41 76             	r1 = 100			  ## app_power_manage.c:131:13
 1e025b0:    43 e6 04 80       	if (r3 > 100) goto 8 <battery_value_to_phone_level+0x6E : 1e025bc >			  ## app_power_manage.c:131:13
 1e025b4:    83 04             	r3 = r2.b0 (u)			  ## app_power_manage.c:130:23
 1e025b6:    21 08             	r1 = r2			  ## app_power_manage.c:130:23
 1e025b8:    53 e0 05 30       	if (r3 < 5) goto 10 <battery_value_to_phone_level+0x78 : 1e025c6 >			  ## app_power_manage.c:130:23
 1e025bc:    40 04             	r0 = r1.b0 (u)			  ## app_power_manage.c:152:9
 1e025be:    b0 8f             	r0 += -5			  ## app_power_manage.c:156:35
 1e025c0:    a1 70             	r1 = 10			  ## app_power_manage.c:156:40
 1e025c2:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## app_power_manage.c:156:40
 1e025c6:    00 04             	r0 = r0.b0 (u)			  ## app_power_manage.c:159:1
 1e025c8:    54 01             	{pc, r4} = [sp++]			  ## app_power_manage.c:159:1


vbat_check:
 1e025ca:    76 01             	[--sp] = {rets, r6-r4}			  ## app_power_manage.c:210:0
 1e025cc:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:210:0
 1e025d2:    b6 5b             	r6 = h[r5 + 54] (u)			  ## app_power_manage.c:221:10
 1e025d4:    bf f3 d0 f2       	call -6752 <get_vbat_level : 1e00b78 >			  ## app_power_manage.c:224:20
 1e025d8:    04 08             	r4 = r0			  ## app_power_manage.c:224:20
 1e025da:    02 2c             	if (r6 == 0) goto 4 <vbat_check+0x16 : 1e025e0 >			  ## app_power_manage.c:224:20
 1e025dc:    00 bd             	r0 = r6 + r4			  ## app_power_manage.c:224:37
 1e025de:    44 d0             	r4 = r0 >> 1			  ## app_power_manage.c:224:48
 1e025e0:    bc 5b             	h[r5 + 54] = r4
 1e025e2:    b5 17             	call -150 <battery_value_to_phone_level : 1e0254e >			  ## app_power_manage.c:227:25
 1e025e4:    b8 6a             	b[r5 + 11] = r0			  ## app_power_manage.c:227:23
 1e025e6:    b2 6a             	r2 = b[r5 + 11] (u)			  ## app_power_manage.c:229:55
 1e025e8:    c0 ff ed 0f e1 01 	r0 = 31526893 <update_target_end+0xDBD : 1e10fed >			  ## app_power_manage.c:229:5
 1e025ee:    03 70             	r3 = 0			  ## app_power_manage.c:229:5
 1e025f0:    41 08             	r1 = r4			  ## app_power_manage.c:229:5
 1e025f2:    80 f3 d8 53       	call 42928 <printf : 1e0cda6 >			  ## app_power_manage.c:229:5
 1e025f6:    c0 6a             	r0 = b[r5 + 12] (u)			  ## app_power_manage.c:231:13
 1e025f8:    10 80             	r0 += 1			  ## app_power_manage.c:231:13
 1e025fa:    c8 6a             	b[r5 + 12] = r0			  ## app_power_manage.c:231:13
 1e025fc:    b1 5b             	r1 = h[r5 + 54] (u)			  ## app_power_manage.c:231:13
 1e025fe:    c2 ff c0 25 00 00 	r2 = 9664 <_sdfile_handl : 25c0 >			  ## app_power_manage.c:231:13
 1e02604:    03 f7 74 20       	r3 = h[r2 + 116] (u)			  ## app_power_manage.c:233:58
 1e02608:    31 f2 03 80       	if (r1 > r3) goto 6 <vbat_check+0x48 : 1e02612 >			  ## app_power_manage.c:233:58
 1e0260c:    d3 6a             	r3 = b[r5 + 13] (u)			  ## app_power_manage.c:234:20
 1e0260e:    13 80             	r3 += 1			  ## app_power_manage.c:234:20
 1e02610:    db 6a             	b[r5 + 13] = r3			  ## app_power_manage.c:234:20
 1e02612:    02 f7 72 20       	r2 = h[r2 + 114] (u)			  ## app_power_manage.c:236:28
 1e02616:    21 f2 03 80       	if (r1 > r2) goto 6 <vbat_check+0x56 : 1e02620 >			  ## app_power_manage.c:236:28
 1e0261a:    e2 6a             	r2 = b[r5 + 14] (u)			  ## app_power_manage.c:237:21
 1e0261c:    12 80             	r2 += 1			  ## app_power_manage.c:237:21
 1e0261e:    ea 6a             	b[r5 + 14] = r2			  ## app_power_manage.c:237:21
 1e02620:    03 ff 2c 11 03 00 	if (r1 < 300) goto 6 <vbat_check+0x62 : 1e0262c >
 1e02626:    f1 6a             	r1 = b[r5 + 15] (u)			  ## app_power_manage.c:241:27
 1e02628:    11 80             	r1 += 1			  ## app_power_manage.c:241:27
 1e0262a:    f9 6a             	b[r5 + 15] = r1			  ## app_power_manage.c:241:27
 1e0262c:    00 04             	r0 = r0.b0 (u)			  ## app_power_manage.c:245:18
 1e0262e:    20 e0 8d 30       	if (r0 < 2) goto 282 <vbat_check+0x182 : 1e0274c >			  ## app_power_manage.c:245:18
 1e02632:    00 f9 d0 51       	r0 = b[r5 + 464] (u)			  ## charge.c:96:20
 1e02636:    0b 20             	if (r0 == 0) goto 22 <vbat_check+0x84 : 1e0264e >			  ## charge.c:96:20
 1e02638:    50 70             	r0 = 5			  ## app_power_manage.c:287:13
 1e0263a:    5a 17             	call -332 <power_event_to_user : 1e024f0 >			  ## app_power_manage.c:287:13
 1e0263c:    f0 6a             	r0 = b[r5 + 15] (u)			  ## app_power_manage.c:289:17
 1e0263e:    20 e0 63 30       	if (r0 < 2) goto 198 <vbat_check+0x13E : 1e02708 >			  ## app_power_manage.c:289:17
 1e02642:    00 f6 cc 51       	r0 = [r5 + 460]			  ## charge.c:325:20
 1e02646:    40 60             	r0 = b[r0 + 4] (u)			  ## app_power_manage.c:290:17
 1e02648:    bf f3 05 ef       	call -8694 <set_charge_mA : 1e00456 >			  ## app_power_manage.c:290:17
 1e0264c:    5d 18             	goto 186 <vbat_check+0x13E : 1e02708 >			  ## app_power_manage.c:290:17
 1e0264e:    d0 6a             	r0 = b[r5 + 13] (u)			  ## app_power_manage.c:248:17
 1e02650:    20 e0 1a 30       	if (r0 < 2) goto 52 <vbat_check+0xBE : 1e02688 >			  ## app_power_manage.c:248:17
 1e02654:    00 6b             	r0 = b[r5 + 16] (u)			  ## app_power_manage.c:249:30
 1e02656:    10 80             	r0 += 1			  ## app_power_manage.c:249:30
 1e02658:    08 6b             	b[r5 + 16] = r0			  ## app_power_manage.c:249:30
 1e0265a:    04 70             	r4 = 0			  ## app_power_manage.c:250:31
 1e0265c:    1c 6b             	b[r5 + 17] = r4			  ## app_power_manage.c:250:31
 1e0265e:    2c 6b             	b[r5 + 18] = r4			  ## app_power_manage.c:251:34
 1e02660:    21 70             	r1 = 2			  ## app_power_manage.c:252:28
 1e02662:    00 04             	r0 = r0.b0 (u)			  ## app_power_manage.c:249:30
 1e02664:    39 6b             	b[r5 + 19] = r1			  ## app_power_manage.c:252:28
 1e02666:    60 e0 37 90       	if (r0 <= 6) goto 110 <vbat_check+0x10E : 1e026d8 >			  ## app_power_manage.c:252:28
 1e0266a:    c2 ff 0b 10 e1 01 	r2 = 31526923 <update_target_end+0xDDB : 1e1100b >			  ## app_power_manage.c:254:21
 1e02670:    20 70             	r0 = 2			  ## app_power_manage.c:254:21
 1e02672:    80 f3 c5 53       	call 42890 <log_print : 1e0ce00 >			  ## app_power_manage.c:254:21
 1e02676:    0c 6b             	b[r5 + 16] = r4			  ## app_power_manage.c:255:35
 1e02678:    20 70             	r0 = 2			  ## app_power_manage.c:256:21
 1e0267a:    3a 17             	call -396 <power_event_to_user : 1e024f0 >			  ## app_power_manage.c:256:21
 1e0267c:    00 f7 6c 50       	r0 = h[r5 + 108] (u)			  ## app_power_manage.c:257:21
 1e02680:    80 f3 00 4d       	call 39424 <usr_timer_del : 1e0c084 >			  ## app_power_manage.c:257:21
 1e02684:    bc 4b             	[r5 + 108] = r4			  ## app_power_manage.c:258:37
 1e02686:    40 18             	goto 128 <vbat_check+0x13E : 1e02708 >			  ## app_power_manage.c:258:37
 1e02688:    e0 6a             	r0 = b[r5 + 14] (u)			  ## app_power_manage.c:260:24
 1e0268a:    20 e0 2a 30       	if (r0 < 2) goto 84 <vbat_check+0x118 : 1e026e2 >			  ## app_power_manage.c:260:24
 1e0268e:    10 6b             	r0 = b[r5 + 17] (u)			  ## app_power_manage.c:261:31
 1e02690:    11 90             	r1 = r0 + 1			  ## app_power_manage.c:261:31
 1e02692:    19 6b             	b[r5 + 17] = r1			  ## app_power_manage.c:261:31
 1e02694:    00 70             	r0 = 0			  ## app_power_manage.c:261:31
 1e02696:    08 6b             	b[r5 + 16] = r0			  ## app_power_manage.c:262:31
 1e02698:    28 6b             	b[r5 + 18] = r0			  ## app_power_manage.c:263:34
 1e0269a:    10 70             	r0 = 1			  ## app_power_manage.c:263:34
 1e0269c:    38 6b             	b[r5 + 19] = r0			  ## app_power_manage.c:264:28
 1e0269e:    42 04             	r2 = r1.b0 (u)			  ## app_power_manage.c:261:31
 1e026a0:    11 70             	r1 = 1			  ## app_power_manage.c:265:60
 1e026a2:    12 e0 01 80       	if (r2 > 1) goto 2 <vbat_check+0xDE : 1e026a8 >			  ## app_power_manage.c:265:60
 1e026a6:    01 70             	r1 = 0			  ## app_power_manage.c:265:60
 1e026a8:    42 e0 01 80       	if (r2 > 4) goto 2 <vbat_check+0xE4 : 1e026ae >
 1e026ac:    00 70             	r0 = 0			  ## app_power_manage.c:266:61
 1e026ae:    02 f9 70 50       	r2 = b[r5 + 112] (u)
 1e026b2:    01 34             	if (r2 != 0) goto 2 <vbat_check+0xEC : 1e026b6 >
 1e026b4:    10 08             	r0 = r1			  ## app_power_manage.c:265:43
 1e026b6:    10 e0 27 10       	if (r0 != 1) goto 78 <vbat_check+0x13E : 1e02708 >
 1e026ba:    10 70             	r0 = 1
 1e026bc:    10 f9 70 50       	b[r5 + 112] = r0
 1e026c0:    00 70             	r0 = 0
 1e026c2:    18 6b             	b[r5 + 17] = r0			  ## app_power_manage.c:268:35
 1e026c4:    90 4b             	r0 = [r5 + 100]			  ## app_power_manage.c:269:26
 1e026c6:    20 30             	if (r0 != 0) goto 64 <vbat_check+0x13E : 1e02708 >			  ## app_power_manage.c:269:26
 1e026c8:    c2 ff 4e 10 e1 01 	r2 = 31526990 <update_target_end+0xE1E : 1e1104e >			  ## app_power_manage.c:270:25
 1e026ce:    20 70             	r0 = 2			  ## app_power_manage.c:270:25
 1e026d0:    80 f3 96 53       	call 42796 <log_print : 1e0ce00 >			  ## app_power_manage.c:270:25
 1e026d4:    10 70             	r0 = 1			  ## app_power_manage.c:271:25
 1e026d6:    17 18             	goto 46 <vbat_check+0x13C : 1e02706 >			  ## app_power_manage.c:271:25
 1e026d8:    cc 6a             	b[r5 + 12] = r4			  ## app_power_manage.c:295:18
 1e026da:    dc 6a             	b[r5 + 13] = r4			  ## app_power_manage.c:296:21
 1e026dc:    ec 6a             	b[r5 + 14] = r4			  ## app_power_manage.c:297:22
 1e026de:    fc 6a             	b[r5 + 15] = r4			  ## app_power_manage.c:298:28
 1e026e0:    56 01             	{pc, r6-r4} = [sp++]			  ## app_power_manage.c:316:1
 1e026e2:    20 6b             	r0 = b[r5 + 18] (u)			  ## app_power_manage.c:275:33
 1e026e4:    11 90             	r1 = r0 + 1			  ## app_power_manage.c:275:33
 1e026e6:    29 6b             	b[r5 + 18] = r1			  ## app_power_manage.c:275:33
 1e026e8:    00 70             	r0 = 0			  ## app_power_manage.c:277:31
 1e026ea:    88 5a             	h[r5 + 16] = r0			  ## app_power_manage.c:277:31
 1e026ec:    30 6b             	r0 = b[r5 + 19] (u)			  ## app_power_manage.c:279:25
 1e026ee:    41 04             	r1 = r1.b0 (u)			  ## app_power_manage.c:275:33
 1e026f0:    31 e0 0b 30       	if (r1 < 3) goto 22 <vbat_check+0x140 : 1e0270a >			  ## app_power_manage.c:275:33
 1e026f4:    0a 20             	if (r0 == 0) goto 20 <vbat_check+0x140 : 1e0270a >
 1e026f6:    c2 ff 89 10 e1 01 	r2 = 31527049 <update_target_end+0xE59 : 1e11089 >			  ## app_power_manage.c:280:25
 1e026fc:    20 70             	r0 = 2			  ## app_power_manage.c:280:25
 1e026fe:    80 f3 7f 53       	call 42750 <log_print : 1e0ce00 >			  ## app_power_manage.c:280:25
 1e02702:    00 70             	r0 = 0			  ## app_power_manage.c:280:25
 1e02704:    38 6b             	b[r5 + 19] = r0			  ## app_power_manage.c:281:36
 1e02706:    f4 16             	call -536 <power_event_to_user : 1e024f0 >
 1e02708:    30 6b             	r0 = b[r5 + 19] (u)			  ## app_power_manage.c:300:13
 1e0270a:    04 70             	r4 = 0			  ## app_power_manage.c:295:18
 1e0270c:    cc 6a             	b[r5 + 12] = r4			  ## app_power_manage.c:295:18
 1e0270e:    dc 6a             	b[r5 + 13] = r4			  ## app_power_manage.c:296:21
 1e02710:    ec 6a             	b[r5 + 14] = r4			  ## app_power_manage.c:297:22
 1e02712:    fc 6a             	b[r5 + 15] = r4			  ## app_power_manage.c:298:28
 1e02714:    20 e0 1a 00       	if (r0 == 2) goto 52 <vbat_check+0x182 : 1e0274c >			  ## app_power_manage.c:298:28
 1e02718:    00 f7 6c 50       	r0 = h[r5 + 108] (u)			  ## app_power_manage.c:301:13
 1e0271c:    80 f3 b2 4c       	call 39268 <usr_timer_del : 1e0c084 >			  ## app_power_manage.c:301:13
 1e02720:    bc 4b             	[r5 + 108] = r4			  ## app_power_manage.c:302:29
 1e02722:    15 17             	call -470 <battery_value_to_phone_level : 1e0254e >			  ## app_power_manage.c:303:33
 1e02724:    b8 6a             	b[r5 + 11] = r0			  ## app_power_manage.c:303:31
 1e02726:    b0 6a             	r0 = b[r5 + 11] (u)			  ## app_power_manage.c:304:17
 1e02728:    c4 ff 48 08 00 00 	r4 = 2120 <old_battery_level : 848 >			  ## app_power_manage.c:304:17
 1e0272e:    01 68             	r1 = b[r4 + 0] (u)			  ## app_power_manage.c:304:38
 1e02730:    10 f2 05 10       	if (r0 != r1) goto 10 <vbat_check+0x174 : 1e0273e >			  ## app_power_manage.c:304:38
 1e02734:    40 6b             	r0 = b[r5 + 20] (u)			  ## app_power_manage.c:307:21
 1e02736:    01 f9 d0 51       	r1 = b[r5 + 464] (u)			  ## charge.c:96:20
 1e0273a:    10 f2 02 00       	if (r0 == r1) goto 4 <vbat_check+0x178 : 1e02742 >			  ## charge.c:96:20
 1e0273e:    30 70             	r0 = 3
 1e02740:    d7 16             	call -594 <power_event_to_user : 1e024f0 >
 1e02742:    00 f9 d0 51       	r0 = b[r5 + 464] (u)			  ## charge.c:96:20
 1e02746:    48 6b             	b[r5 + 20] = r0			  ## app_power_manage.c:312:32
 1e02748:    b0 6a             	r0 = b[r5 + 11] (u)			  ## app_power_manage.c:313:33
 1e0274a:    08 68             	b[r4 + 0] = r0			  ## app_power_manage.c:313:31
 1e0274c:    56 01             	{pc, r6-r4} = [sp++]			  ## app_power_manage.c:316:1


app_state_idle_query:
 1e0274e:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:1350:0
 1e02754:    00 f9 74 00       	r0 = b[r0 + 116] (u)			  ## app_spp_and_le.c:1350:0
 1e02758:    11 70             	r1 = 1			  ## app_spp_and_le.c:1350:0
 1e0275a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## app_spp_and_le.c:1351:5
 1e0275e:    20 00             	rts			  ## app_spp_and_le.c:1351:5


state_machine:
 1e02760:    76 01             	[--sp] = {rets, r6-r4}			  ## app_spp_and_le.c:638:0
 1e02762:    fa 0b             	sp += -12			  ## app_spp_and_le.c:638:0
 1e02764:    51 e0 a1 00       	if (r1 == 5) goto 322 <state_machine+0x14A : 1e028aa >			  ## app_spp_and_le.c:639:5
 1e02768:    11 e0 a5 10       	if (r1 != 1) goto 330 <state_machine+0x156 : 1e028b6 >
 1e0276c:    a4 24             	if (r2 == 0) goto 328 <state_machine+0x156 : 1e028b6 >
 1e0276e:    10 44             	r0 = [r2 + 4]			  ## app_spp_and_le.c:646:21
 1e02770:    10 e0 a1 10       	if (r0 != 1) goto 322 <state_machine+0x156 : 1e028b6 >
 1e02774:    c4 ff 3e 19 e1 01 	r4 = 31529278 <update_target_end+0x170E : 1e1193e >			  ## app_spp_and_le.c:565:5
 1e0277a:    20 70             	r0 = 2			  ## app_spp_and_le.c:565:5
 1e0277c:    42 08             	r2 = r4			  ## app_spp_and_le.c:565:5
 1e0277e:    80 f3 3f 53       	call 42622 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:565:5
 1e02782:    c2 ff 7c 19 e1 01 	r2 = 31529340 <update_target_end+0x174C : 1e1197c >			  ## app_spp_and_le.c:566:5
 1e02788:    20 70             	r0 = 2			  ## app_spp_and_le.c:566:5
 1e0278a:    80 f3 39 53       	call 42610 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:566:5
 1e0278e:    20 70             	r0 = 2			  ## app_spp_and_le.c:567:5
 1e02790:    42 08             	r2 = r4			  ## app_spp_and_le.c:567:5
 1e02792:    80 f3 35 53       	call 42602 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:567:5
 1e02796:    c0 ff 09 23 e1 01 	r0 = 31531785 <update_target_end+0x20D9 : 1e12309 >			  ## app_spp_and_le.c:570:5
 1e0279c:    80 f3 d1 d1       	call 107426 <clk_set : 1e1cb42 >			  ## app_spp_and_le.c:570:5
 1e027a0:    c0 ff 50 32 00 00 	r0 = 12880 <hdl.15 : 3250 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e027a6:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e027a8:    80 f3 e6 87       	call 69580 <bt_pll_para : 1e13778 >			  ## app_spp_and_le.c:574:5
 1e027ac:    80 f3 c4 2c       	call 22920 <__set_user_ctrl_conn_num : 1e08138 >			  ## app_spp_and_le.c:395:5
 1e027b0:    80 f3 db 2c       	call 22966 <__set_support_msbc_flag : 1e0816a >			  ## app_spp_and_le.c:396:5
 1e027b4:    80 f3 f0 2c       	call 23008 <__bt_set_update_battery_time : 1e08198 >			  ## app_spp_and_le.c:400:5
 1e027b8:    80 f3 08 2d       	call 23056 <__set_page_timeout_value : 1e081cc >			  ## app_spp_and_le.c:402:5
 1e027bc:    80 f3 0d 2d       	call 23066 <__set_super_timeout_value : 1e081da >			  ## app_spp_and_le.c:403:5
 1e027c0:    80 f3 12 2d       	call 23076 <__set_simple_pair_param : 1e081e8 >			  ## app_spp_and_le.c:413:5
 1e027c4:    64 a0             	r4 = sp + 6			  ## app_spp_and_le.c:413:5
 1e027c6:    40 08             	r0 = r4			  ## app_spp_and_le.c:423:9
 1e027c8:    80 f3 31 2d       	call 23138 <lib_make_ble_address : 1e0822e >			  ## app_spp_and_le.c:423:9
 1e027cc:    40 08             	r0 = r4			  ## app_spp_and_le.c:426:9
 1e027ce:    80 f3 42 bd       	call 96900 <le_controller_set_mac : 1e1a256 >			  ## app_spp_and_le.c:426:9
 1e027d2:    c0 ff ba 19 e1 01 	r0 = 31529402 <update_target_end+0x178A : 1e119ba >			  ## app_spp_and_le.c:428:11
 1e027d8:    80 f3 e5 52       	call 42442 <printf : 1e0cda6 >			  ## app_spp_and_le.c:428:11
 1e027dc:    c0 ff 2d 09 00 00 	r0 = 2349 <bt_cfg+0x20 : 92d >			  ## app_spp_and_le.c:431:9
 1e027e2:    61 70             	r1 = 6			  ## app_spp_and_le.c:431:9
 1e027e4:    80 f3 5c 54       	call 43192 <printf_buf : 1e0d0a0 >			  ## app_spp_and_le.c:431:9
 1e027e8:    40 08             	r0 = r4			  ## app_spp_and_le.c:432:9
 1e027ea:    80 f3 2c bd       	call 96856 <le_controller_get_mac : 1e1a246 >			  ## app_spp_and_le.c:432:9
 1e027ee:    61 70             	r1 = 6			  ## app_spp_and_le.c:433:8
 1e027f0:    40 08             	r0 = r4			  ## app_spp_and_le.c:433:8
 1e027f2:    80 f3 55 54       	call 43178 <printf_buf : 1e0d0a0 >			  ## app_spp_and_le.c:433:8
 1e027f6:    80 f3 39 2d       	call 23154 <__change_hci_class_type : 1e0826c >			  ## app_spp_and_le.c:583:5
 1e027fa:    80 f3 3d 2d       	call 23162 <btstack_init : 1e08278 >			  ## app_spp_and_le.c:586:5
 1e027fe:    04 70             	r4 = 0
 1e02800:    c6 ff ff 2a e1 01 	r6 = 31533823 <LED_NUMBER : 1e12aff >
 1e02806:    c5 ff b2 0b e1 01 	r5 = 31525810 <update_target_end+0x982 : 1e10bb2 >
 1e0280c:    07 18             	goto 14 <state_machine+0xBC : 1e0281c >
 1e0280e:    02 fa 00 46       	r2 = b[r4+r6] (u)			  ## 7PIN_led8888.c:152:3
 1e02812:    50 08             	r0 = r5			  ## 7PIN_led8888.c:152:3
 1e02814:    41 08             	r1 = r4			  ## 7PIN_led8888.c:152:3
 1e02816:    80 f3 c6 52       	call 42380 <printf : 1e0cda6 >			  ## 7PIN_led8888.c:152:3
 1e0281a:    14 80             	r4 += 1			  ## 7PIN_led8888.c:151:21
 1e0281c:    84 e0 f7 1f       	if (r4 != 8) goto -18 <state_machine+0xAE : 1e0280e >
 1e02820:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e02826:    e0 49             	r0 = [r4 + 120]			  ## app_spp_and_le.c:589:28
 1e02828:    01 70             	r1 = 0			  ## app_spp_and_le.c:589:4
 1e0282a:    06 14             	call -2036 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_spp_and_le.c:589:4
 1e0282c:    00 70             	r0 = 0			  ## app_spp_and_le.c:591:5
 1e0282e:    01 70             	r1 = 0			  ## app_spp_and_le.c:591:5
 1e02830:    bf f3 bb f2       	call -6794 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## app_spp_and_le.c:591:5
 1e02834:    bf f3 a0 f1       	call -7360 <get_vbat_level : 1e00b78 >			  ## app_spp_and_le.c:547:13
 1e02838:    01 08             	r1 = r0			  ## app_spp_and_le.c:547:13
 1e0283a:    35 70             	r5 = 3			  ## app_spp_and_le.c:547:13
 1e0283c:    08 ff 86 11 09 00 	if (r1 > 390) goto 18 <state_machine+0xF4 : 1e02854 >			  ## app_spp_and_le.c:547:13
 1e02842:    25 70             	r5 = 2
 1e02844:    08 ff 5e 11 05 00 	if (r1 > 350) goto 10 <state_machine+0xF4 : 1e02854 >
 1e0284a:    15 70             	r5 = 1			  ## app_spp_and_le.c:554:36
 1e0284c:    08 ff 40 11 01 00 	if (r1 > 320) goto 2 <state_machine+0xF4 : 1e02854 >			  ## app_spp_and_le.c:554:36
 1e02852:    05 70             	r5 = 0			  ## app_spp_and_le.c:554:36
 1e02854:    c2 ff 0a 1a e1 01 	r2 = 31529482 <update_target_end+0x17DA : 1e11a0a >			  ## app_spp_and_le.c:559:3
 1e0285a:    20 70             	r0 = 2			  ## app_spp_and_le.c:559:3
 1e0285c:    0d 02             	[sp] = r5			  ## app_spp_and_le.c:559:3
 1e0285e:    13 08             	r3 = r1			  ## app_spp_and_le.c:559:3
 1e02860:    80 f3 ce 52       	call 42396 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:559:3
 1e02864:    41 05             	r1 = r5.b0 (u)			  ## app_spp_and_le.c:592:6
 1e02866:    40 70             	r0 = 4			  ## app_spp_and_le.c:592:6
 1e02868:    bf f3 9f f2       	call -6850 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## app_spp_and_le.c:592:6
 1e0286c:    80 f3 0e 60       	call 49180 <sys_key_event_enable : 1e0e88c >			  ## app_spp_and_le.c:614:5
 1e02870:    c1 ff bc 28 e0 01 	r1 = 31467708 <app_set_soft_poweroff : 1e028bc >			  ## app_spp_and_le.c:617:27
 1e02876:    c2 ff 20 bf 02 00 	r2 = 180000 <text_size+0xF22C : 2bf20 >			  ## app_spp_and_le.c:617:27
 1e0287c:    00 70             	r0 = 0			  ## app_spp_and_le.c:617:27
 1e0287e:    80 f3 90 4d       	call 39712 <sys_timeout_add : 1e0c3a2 >			  ## app_spp_and_le.c:617:27
 1e02882:    10 f7 42 40       	h[r4 + 66] = r0			  ## app_spp_and_le.c:617:25
 1e02886:    c0 ff 00 50 1e 00 	r0 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >
 1e0288c:    03 f4 01 09       	[r0 + 12] |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:821:16
 1e02890:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:279:16
 1e02892:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:279:16
 1e02894:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:279:16
 1e02896:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e02898:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e0289a:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e0289c:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:590:15
 1e0289e:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:590:15
 1e028a0:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:590:15
 1e028a2:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:312:16
 1e028a4:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:312:16
 1e028a6:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:312:16
 1e028a8:    06 18             	goto 12 <state_machine+0x156 : 1e028b6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:312:16
 1e028aa:    c2 ff e3 19 e1 01 	r2 = 31529443 <update_target_end+0x17B3 : 1e119e3 >			  ## app_spp_and_le.c:659:9
 1e028b0:    20 70             	r0 = 2			  ## app_spp_and_le.c:659:9
 1e028b2:    80 f3 a5 52       	call 42314 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:659:9
 1e028b6:    00 70             	r0 = 0			  ## app_spp_and_le.c:663:5
 1e028b8:    06 0a             	sp += 12			  ## app_spp_and_le.c:663:5
 1e028ba:    56 01             	{pc, r6-r4} = [sp++]			  ## app_spp_and_le.c:663:5


app_set_soft_poweroff:
 1e028bc:    74 01             	[--sp] = {rets, r4}			  ## app_spp_and_le.c:470:0
 1e028be:    fe 0b             	sp += -4			  ## app_spp_and_le.c:470:0
 1e028c0:    c2 ff 15 19 e1 01 	r2 = 31529237 <update_target_end+0x16E5 : 1e11915 >			  ## app_spp_and_le.c:471:5
 1e028c6:    20 70             	r0 = 2			  ## app_spp_and_le.c:471:5
 1e028c8:    80 f3 9a 52       	call 42292 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:471:5
 1e028cc:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:484:14
 1e028d2:    10 70             	r0 = 1			  ## app_spp_and_le.c:484:14
 1e028d4:    10 f9 74 40       	b[r4 + 116] = r0			  ## app_spp_and_le.c:484:14
 1e028d8:    00 70             	r0 = 0			  ## app_spp_and_le.c:477:5
 1e028da:    bf f3 6c fb       	call -2344 <ble_module_enable : 1e01fb6 >			  ## app_spp_and_le.c:477:5
 1e028de:    e0 49             	r0 = [r4 + 120]			  ## app_spp_and_le.c:484:14
 1e028e0:    01 d6             	r1 = r0 >> 24			  ## app_spp_and_le.c:484:30
 1e028e2:    d1 f5 00 00       	b[sp] = r1			  ## app_spp_and_le.c:484:11
 1e028e6:    01 d4             	r1 = r0 >> 16			  ## app_spp_and_le.c:485:29
 1e028e8:    d1 f5 01 00       	b[sp+1] = r1			  ## app_spp_and_le.c:485:11
 1e028ec:    01 d2             	r1 = r0 >> 8			  ## app_spp_and_le.c:486:26
 1e028ee:    d1 f5 02 00       	b[sp+2] = r1			  ## app_spp_and_le.c:486:8
 1e028f2:    d0 f5 03 00       	b[sp+3] = r0			  ## app_spp_and_le.c:487:8
 1e028f6:    01 a0             	r1 = sp + 0			  ## app_spp_and_le.c:487:8
 1e028f8:    20 70             	r0 = 2			  ## app_spp_and_le.c:488:11
 1e028fa:    42 70             	r2 = 4			  ## app_spp_and_le.c:488:11
 1e028fc:    80 f3 9a 62       	call 50484 <syscfg_write : 1e0ee34 >			  ## app_spp_and_le.c:488:11
 1e02900:    c1 ff 0a 23 e0 01 	r1 = 31466250 <power_set_soft_poweroff : 1e0230a >			  ## app_spp_and_le.c:490:5
 1e02906:    00 70             	r0 = 0			  ## app_spp_and_le.c:490:5
 1e02908:    02 fb 2c 01       	r2 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## app_spp_and_le.c:490:5
 1e0290c:    80 f3 49 4d       	call 39570 <sys_timeout_add : 1e0c3a2 >			  ## app_spp_and_le.c:490:5
 1e02910:    02 0a             	sp += 4			  ## app_spp_and_le.c:490:5
 1e02912:    54 01             	{pc, r4} = [sp++]			  ## app_spp_and_le.c:491:1


state_prosses:
 1e02914:    76 01             	[--sp] = {rets, r6-r4}			  ## app_spp_and_le.c:1136:0
 1e02916:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:1136:0
 1e0291c:    d2 5d             	r2 = h[r6 + 58] (u)			  ## app_spp_and_le.c:1139:5
 1e0291e:    15 08             	r5 = r1			  ## app_spp_and_le.c:1139:5
 1e02920:    04 08             	r4 = r0
 1e02922:    05 24             	if (r2 == 0) goto 10 <state_prosses+0x1A : 1e0292e >
 1e02924:    20 08             	r0 = r2			  ## app_spp_and_le.c:1141:3
 1e02926:    80 f3 9a 4c       	call 39220 <usr_timeout_del : 1e0c25e >			  ## app_spp_and_le.c:1141:3
 1e0292a:    00 70             	r0 = 0			  ## app_spp_and_le.c:1142:28
 1e0292c:    d8 5d             	h[r6 + 58] = r0			  ## app_spp_and_le.c:1142:28
 1e0292e:    e0 5d             	r0 = h[r6 + 60] (u)			  ## app_spp_and_le.c:1144:5
 1e02930:    04 20             	if (r0 == 0) goto 8 <state_prosses+0x26 : 1e0293a >			  ## app_spp_and_le.c:1144:5
 1e02932:    80 f3 94 4c       	call 39208 <usr_timeout_del : 1e0c25e >			  ## app_spp_and_le.c:1146:3
 1e02936:    00 70             	r0 = 0			  ## app_spp_and_le.c:1147:21
 1e02938:    e8 5d             	h[r6 + 60] = r0			  ## app_spp_and_le.c:1147:21
 1e0293a:    f0 5d             	r0 = h[r6 + 62] (u)			  ## app_spp_and_le.c:1149:5
 1e0293c:    04 20             	if (r0 == 0) goto 8 <state_prosses+0x32 : 1e02946 >			  ## app_spp_and_le.c:1149:5
 1e0293e:    80 f3 a1 4b       	call 38722 <usr_timer_del : 1e0c084 >			  ## app_spp_and_le.c:1151:3
 1e02942:    00 70             	r0 = 0			  ## app_spp_and_le.c:1152:29
 1e02944:    f8 5d             	h[r6 + 62] = r0			  ## app_spp_and_le.c:1152:29
 1e02946:    00 f7 40 60       	r0 = h[r6 + 64] (u)			  ## app_spp_and_le.c:1154:5
 1e0294a:    05 20             	if (r0 == 0) goto 10 <state_prosses+0x42 : 1e02956 >			  ## app_spp_and_le.c:1154:5
 1e0294c:    e0 5d             	r0 = h[r6 + 60] (u)			  ## app_spp_and_le.c:1156:3
 1e0294e:    80 f3 86 4c       	call 39180 <usr_timeout_del : 1e0c25e >			  ## app_spp_and_le.c:1156:3
 1e02952:    00 70             	r0 = 0			  ## app_spp_and_le.c:1157:21
 1e02954:    e8 5d             	h[r6 + 60] = r0			  ## app_spp_and_le.c:1157:21
 1e02956:    14 28             	if (r4 == 0) goto 40 <state_prosses+0x6C : 1e02980 >
 1e02958:    14 e0 09 10       	if (r4 != 1) goto 18 <state_prosses+0x5A : 1e0296e >
 1e0295c:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:1166:23
 1e02960:    29 0e             	r1 = r5 * r0			  ## app_spp_and_le.c:1166:23
 1e02962:    c0 ff 46 21 e0 01 	r0 = 31465798 <time_down_over_deal : 1e02146 >			  ## app_spp_and_le.c:1166:23
 1e02968:    80 f3 22 4d       	call 39492 <usr_timeout_add : 1e0c3b0 >			  ## app_spp_and_le.c:1166:23
 1e0296c:    e8 5d             	h[r6 + 60] = r0			  ## app_spp_and_le.c:1166:22
 1e0296e:    c0 ff 1e 31 e0 01 	r0 = 31469854 <start_vibrate : 1e0311e >			  ## app_spp_and_le.c:1171:31
 1e02974:    01 fb b8 0b       	r1 = 3000 <BTCTLER_CL_CODE_TOTAL+0x26 : bb8 >			  ## app_spp_and_le.c:1171:31
 1e02978:    80 f3 1a 4d       	call 39476 <usr_timeout_add : 1e0c3b0 >			  ## app_spp_and_le.c:1171:31
 1e0297c:    10 f7 40 60       	h[r6 + 64] = r0			  ## app_spp_and_le.c:1171:31
 1e02980:    01 70             	r1 = 0			  ## app_spp_and_le.c:1173:3
 1e02982:    40 08             	r0 = r4			  ## app_spp_and_le.c:1173:3
 1e02984:    bf f3 11 f2       	call -7134 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## app_spp_and_le.c:1173:3
 1e02988:    50 08             	r0 = r5			  ## app_spp_and_le.c:1174:3
 1e0298a:    41 08             	r1 = r4			  ## app_spp_and_le.c:1174:3
 1e0298c:    16 01             	{rets, r6-r4} = [sp++]			  ## app_spp_and_le.c:1174:3
 1e0298e:    ff f3 53 fb       	goto -2394 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_spp_and_le.c:1174:3


event_handler:
 1e02992:    77 01             	[--sp] = {rets, r7-r4}			  ## app_spp_and_le.c:1298:0
 1e02994:    fe 0b             	sp += -4			  ## app_spp_and_le.c:1298:0
 1e02996:    14 08             	r4 = r1			  ## app_spp_and_le.c:1298:0
 1e02998:    00 58             	r0 = h[r4 + 0] (u)			  ## app_spp_and_le.c:1299:20
 1e0299a:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >
 1e029a0:    c7 ff c0 08 00 00 	r7 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >
 1e029a6:    00 e1 21 00       	if (r0 == 16) goto 66 <event_handler+0x5A : 1e029ec >			  ## app_spp_and_le.c:1299:5
 1e029aa:    40 e0 73 00       	if (r0 == 4) goto 230 <.GJTIE274_1_1_+0x3A : 1e02a94 >
 1e029ae:    10 e0 15 12       	if (r0 != 1) goto 1066 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e029b2:    10 48             	r0 = [r4 + 4]			  ## app_spp_and_le.c:1188:16
 1e029b4:    c1 ff 00 59 45 4b 	r1 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## app_spp_and_le.c:1188:20
 1e029ba:    10 f2 0f 12       	if (r0 != r1) goto 1054 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1188:20
 1e029be:    35 48             	r5 = [r4 + 12]			  ## app_spp_and_le.c:1190:34
 1e029c0:    a4 68             	r4 = b[r4 + 10] (u)			  ## app_spp_and_le.c:1189:35
 1e029c2:    c0 ff 0d 11 e1 01 	r0 = 31527181 <update_target_end+0xEDD : 1e1110d >			  ## app_spp_and_le.c:1191:9
 1e029c8:    41 08             	r1 = r4			  ## app_spp_and_le.c:1191:9
 1e029ca:    52 08             	r2 = r5			  ## app_spp_and_le.c:1191:9
 1e029cc:    80 f3 eb 51       	call 41942 <printf : 1e0cda6 >			  ## app_spp_and_le.c:1191:9
 1e029d0:    15 e0 a1 10       	if (r5 != 1) goto 322 <.GJTIE274_1_1_+0xBC : 1e02b16 >			  ## app_spp_and_le.c:1194:6
 1e029d4:    c0 ff 23 11 e1 01 	r0 = 31527203 <update_target_end+0xEF3 : 1e11123 >			  ## app_spp_and_le.c:1195:4
 1e029da:    11 70             	r1 = 1			  ## app_spp_and_le.c:1195:4
 1e029dc:    80 f3 e3 51       	call 41926 <printf : 1e0cda6 >			  ## app_spp_and_le.c:1195:4
 1e029e0:    04 e0 fc 11       	if (r4 != 0) goto 1016 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1195:4
 1e029e4:    c0 ff 4f 11 e1 01 	r0 = 31527247 <update_target_end+0xF1F : 1e1114f >			  ## app_spp_and_le.c:1197:5
 1e029ea:    75 19             	goto 746 <.GJTIE274_0_0_+0x2A : 1e02cd6 >			  ## app_spp_and_le.c:1197:5
 1e029ec:    10 48             	r0 = [r4 + 4]			  ## app_spp_and_le.c:1306:25
 1e029ee:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## app_spp_and_le.c:1306:13
 1e029f4:    10 f2 73 00       	if (r0 == r1) goto 230 <.GJTIE274_1_1_+0x84 : 1e02ade >			  ## app_spp_and_le.c:1306:13
 1e029f8:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e029fe:    10 f2 ed 11       	if (r0 != r1) goto 986 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02a02:    83 68             	r3 = b[r4 + 8] (u)			  ## app_spp_and_le.c:1008:5
 1e02a04:    c2 ff 1d 12 e1 01 	r2 = 31527453 <update_target_end+0xFED : 1e1121d >			  ## app_spp_and_le.c:1008:5
 1e02a0a:    20 70             	r0 = 2			  ## app_spp_and_le.c:1008:5
 1e02a0c:    80 f3 f8 51       	call 41968 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:1008:5
 1e02a10:    80 68             	r0 = b[r4 + 8] (u)			  ## app_spp_and_le.c:1008:5
 1e02a12:    01 fc fa ff       	r1 = r0 + -6			  ## app_spp_and_le.c:1010:5
 1e02a16:    d1 e1 cc 80       	if (r1 > 29) goto 408 <.GJTIE274_2_2_+0x7C : 1e02bb2 >			  ## app_spp_and_le.c:1010:5
 1e02a1a:    48 c0             	r0 = r1 << 1
 1e02a1c:    b0 00             	tbh [r0]


.GJTIL274_1_1_:
 1e02a1e:    1e 00     < 30 : 0x1E >
 1e02a20:    1e 00     < 30 : 0x1E >
 1e02a22:    84 01     < 388 : 0x184 >
 1e02a24:    4b 01     < 331 : 0x14B >
 1e02a26:    4b 01     < 331 : 0x14B >
 1e02a28:    a1 01     < 417 : 0x1A1 >
 1e02a2a:    a5 01     < 421 : 0x1A5 >
 1e02a2c:    84 01     < 388 : 0x184 >
 1e02a2e:    a9 01     < 425 : 0x1A9 >
 1e02a30:    ad 01     < 429 : 0x1AD >
 1e02a32:    b1 01     < 433 : 0x1B1 >
 1e02a34:    b5 01     < 437 : 0x1B5 >
 1e02a36:    84 01     < 388 : 0x184 >
 1e02a38:    84 01     < 388 : 0x184 >
 1e02a3a:    84 01     < 388 : 0x184 >
 1e02a3c:    84 01     < 388 : 0x184 >
 1e02a3e:    84 01     < 388 : 0x184 >
 1e02a40:    84 01     < 388 : 0x184 >
 1e02a42:    84 01     < 388 : 0x184 >
 1e02a44:    84 01     < 388 : 0x184 >
 1e02a46:    84 01     < 388 : 0x184 >
 1e02a48:    84 01     < 388 : 0x184 >
 1e02a4a:    84 01     < 388 : 0x184 >
 1e02a4c:    84 01     < 388 : 0x184 >
 1e02a4e:    84 01     < 388 : 0x184 >
 1e02a50:    84 01     < 388 : 0x184 >
 1e02a52:    b9 01     < 441 : 0x1B9 >
 1e02a54:    84 01     < 388 : 0x184 >
 1e02a56:    84 01     < 388 : 0x184 >
 1e02a58:    c1 01     < 449 : 0x1C1 >
 1e02a5a:    84 80             	r4 += 8			  ## app_spp_and_le.c:1307:55
 1e02a5c:    c2 ff 98 12 e1 01 	r2 = 31527576 <update_target_end+0x1068 : 1e11298 >			  ## app_spp_and_le.c:1035:9
 1e02a62:    20 70             	r0 = 2			  ## app_spp_and_le.c:1035:9
 1e02a64:    80 f3 cc 51       	call 41880 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:1035:9
 1e02a68:    14 80             	r4 += 1			  ## app_spp_and_le.c:1036:17
 1e02a6a:    61 70             	r1 = 6			  ## app_spp_and_le.c:1036:9
 1e02a6c:    40 08             	r0 = r4			  ## app_spp_and_le.c:1036:9
 1e02a6e:    80 f3 c7 52       	call 42382 <put_buf : 1e0d000 >			  ## app_spp_and_le.c:1036:9
 1e02a72:    60 fc 58 01       	r0 = r6 + 344			  ## app_spp_and_le.c:1037:9
 1e02a76:    62 70             	r2 = 6			  ## app_spp_and_le.c:1037:9
 1e02a78:    41 08             	r1 = r4			  ## app_spp_and_le.c:1037:9
 1e02a7a:    98 f3 33 22       	call 3163238 <memcpy : 106ee4 >			  ## app_spp_and_le.c:1037:9
 1e02a7e:    80 f3 f6 be       	call 97772 <bredr_get_rssi_for_address : 1e1a86e >			  ## app_spp_and_le.c:1038:9
 1e02a82:    01 08             	r1 = r0			  ## app_spp_and_le.c:1038:9
 1e02a84:    c2 ff c3 12 e1 01 	r2 = 31527619 <update_target_end+0x1093 : 1e112c3 >			  ## app_spp_and_le.c:1038:9
 1e02a8a:    20 70             	r0 = 2			  ## app_spp_and_le.c:1038:9
 1e02a8c:    13 08             	r3 = r1			  ## app_spp_and_le.c:1038:9
 1e02a8e:    80 f3 b7 51       	call 41838 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:1038:9
 1e02a92:    a4 19             	goto 840 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1038:9
 1e02a94:    10 48             	r0 = [r4 + 4]			  ## app_spp_and_le.c:1315:25
 1e02a96:    c1 ff 00 47 48 43 	r1 = 1128810240 <uECC_vli_cmp_unsafe+0x137D704 : 1484700 >			  ## app_spp_and_le.c:1315:13
 1e02a9c:    10 f2 38 00       	if (r0 == r1) goto 112 <.GJTIE274_1_1_+0xB6 : 1e02b10 >			  ## app_spp_and_le.c:1315:13
 1e02aa0:    c1 ff 00 57 4f 50 	r1 = 1347376896 <uECC_vli_cmp_unsafe+0x3EE704 : 4f5700 >
 1e02aa6:    10 f2 99 11       	if (r0 != r1) goto 818 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02aaa:    80 68             	r0 = b[r4 + 8] (u)			  ## app_power_manage.c:59:18
 1e02aac:    50 e0 5d 00       	if (r0 == 5) goto 186 <.GJTIE274_2_2_+0x34 : 1e02b6a >			  ## app_power_manage.c:59:5
 1e02ab0:    20 e0 64 00       	if (r0 == 2) goto 200 <.GJTIE274_2_2_+0x46 : 1e02b7c >
 1e02ab4:    10 e0 92 11       	if (r0 != 1) goto 804 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02ab8:    c0 ff a1 0f e1 01 	r0 = 31526817 <update_target_end+0xD71 : 1e10fa1 >			  ## app_power_manage.c:63:9
 1e02abe:    80 f3 72 51       	call 41700 <printf : 1e0cda6 >			  ## app_power_manage.c:63:9
 1e02ac2:    90 4d             	r0 = [r6 + 100]			  ## app_power_manage.c:64:13
 1e02ac4:    00 e0 8a 11       	if (r0 != 0) goto 788 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_power_manage.c:64:13
 1e02ac8:    c1 ff f0 24 e0 01 	r1 = 31466736 <power_event_to_user : 1e024f0 >			  ## app_power_manage.c:65:30
 1e02ace:    c2 ff 60 ea 00 00 	r2 = 60000 <_nv_pre_end+0x2F60 : ea60 >			  ## app_power_manage.c:65:30
 1e02ad4:    10 70             	r0 = 1			  ## app_power_manage.c:65:30
 1e02ad6:    80 f3 60 4c       	call 39104 <sys_timer_add : 1e0c39a >			  ## app_power_manage.c:65:30
 1e02ada:    98 4d             	[r6 + 100] = r0			  ## app_power_manage.c:65:28
 1e02adc:    7f 19             	goto 766 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_power_manage.c:65:28
 1e02ade:    83 68             	r3 = b[r4 + 8] (u)			  ## app_spp_and_le.c:884:5
 1e02ae0:    41 48             	r1 = [r4 + 16]			  ## app_spp_and_le.c:884:5
 1e02ae2:    c2 ff 1d 15 e1 01 	r2 = 31528221 <update_target_end+0x12ED : 1e1151d >			  ## app_spp_and_le.c:884:5
 1e02ae8:    20 70             	r0 = 2			  ## app_spp_and_le.c:884:5
 1e02aea:    09 02             	[sp] = r1			  ## app_spp_and_le.c:884:5
 1e02aec:    80 f3 88 51       	call 41744 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:884:5
 1e02af0:    85 68             	r5 = b[r4 + 8] (u)			  ## app_spp_and_le.c:886:13
 1e02af2:    01 ff fe 50 9d 00 	if (r5 != 254) goto 314 <.GJTIE274_2_2_+0xFC : 1e02c32 >			  ## app_spp_and_le.c:886:13
 1e02af8:    40 48             	r0 = [r4 + 16]			  ## app_spp_and_le.c:887:22
 1e02afa:    10 e0 96 00       	if (r0 == 1) goto 300 <.GJTIE274_2_2_+0xF4 : 1e02c2a >			  ## app_spp_and_le.c:887:13
 1e02afe:    e5 7f             	r5 = 254
 1e02b00:    9d 30             	if (r0 != 0) goto 314 <.GJTIE274_2_2_+0x106 : 1e02c3c >
 1e02b02:    00 70             	r0 = 0			  ## app_spp_and_le.c:888:13
 1e02b04:    80 f3 e4 2b       	call 22472 <set_remote_test_flag : 1e082d0 >			  ## app_spp_and_le.c:888:13
 1e02b08:    c2 ff 6d 15 e1 01 	r2 = 31528301 <update_target_end+0x133D : 1e1156d >			  ## app_spp_and_le.c:889:13
 1e02b0e:    63 19             	goto 710 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:889:13
 1e02b10:    80 68             	r0 = b[r4 + 8] (u)			  ## app_spp_and_le.c:1320:13
 1e02b12:    1e 14             	call -1988 <app_charge_event_handler : 1e02350 >			  ## app_spp_and_le.c:1320:13
 1e02b14:    63 19             	goto 710 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1320:13
 1e02b16:    b4 e0 61 81       	if (r4 > 11) goto 706 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02b1a:    60 c0             	r0 = r4 << 1
 1e02b1c:    b0 00             	tbh [r0]


.GJTIL274_2_2_:
 1e02b1e:    0c 00     < 12 : 0xC >
 1e02b20:    5f 01     < 351 : 0x15F >
 1e02b22:    cf 00     < 207 : 0xCF >
 1e02b24:    5f 01     < 351 : 0x15F >
 1e02b26:    5f 01     < 351 : 0x15F >
 1e02b28:    d9 00     < 217 : 0xD9 >
 1e02b2a:    5f 01     < 351 : 0x15F >
 1e02b2c:    5f 01     < 351 : 0x15F >
 1e02b2e:    5f 01     < 351 : 0x15F >
 1e02b30:    f4 00     < 244 : 0xF4 >
 1e02b32:    f8 00     < 248 : 0xF8 >
 1e02b34:    ea 00     < 234 : 0xEA >
 1e02b36:    50 6d             	r0 = b[r6 + 21] (u)			  ## app_spp_and_le.c:1238:15
 1e02b38:    11 90             	r1 = r0 + 1			  ## app_spp_and_le.c:1238:15
 1e02b3a:    42 04             	r2 = r1.b0 (u)			  ## app_spp_and_le.c:1238:15
 1e02b3c:    00 70             	r0 = 0			  ## app_spp_and_le.c:1239:9
 1e02b3e:    22 e0 01 80       	if (r2 > 2) goto 2 <.GJTIE274_2_2_+0xE : 1e02b44 >			  ## app_spp_and_le.c:1239:9
 1e02b42:    10 08             	r0 = r1			  ## app_spp_and_le.c:1239:9
 1e02b44:    58 6d             	b[r6 + 21] = r0			  ## app_spp_and_le.c:1240:16
 1e02b46:    03 04             	r3 = r0.b0 (u)			  ## app_spp_and_le.c:1242:6
 1e02b48:    c2 ff 69 11 e1 01 	r2 = 31527273 <update_target_end+0xF39 : 1e11169 >			  ## app_spp_and_le.c:1242:6
 1e02b4e:    20 70             	r0 = 2			  ## app_spp_and_le.c:1242:6
 1e02b50:    80 f3 56 51       	call 41644 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:1242:6
 1e02b54:    50 6d             	r0 = b[r6 + 21] (u)			  ## app_spp_and_le.c:1243:9
 1e02b56:    20 e0 44 01       	if (r0 == 2) goto 648 <.GJTIE274_0_0_+0x136 : 1e02de2 >			  ## app_spp_and_le.c:1243:9
 1e02b5a:    10 e0 4b 01       	if (r0 == 1) goto 662 <.GJTIE274_0_0_+0x148 : 1e02df4 >
 1e02b5e:    00 e0 3d 11       	if (r0 != 0) goto 634 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02b62:    e1 4d             	r1 = [r6 + 120]			  ## app_spp_and_le.c:1245:18
 1e02b64:    00 70             	r0 = 0			  ## app_spp_and_le.c:1246:5
 1e02b66:    d6 16             	call -596 <state_prosses : 1e02914 >			  ## app_spp_and_le.c:1246:5
 1e02b68:    39 19             	goto 626 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02b6a:    90 4d             	r0 = [r6 + 100]			  ## app_power_manage.c:82:13
 1e02b6c:    00 e0 36 01       	if (r0 == 0) goto 620 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_power_manage.c:82:13
 1e02b70:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:83:13
 1e02b72:    80 f3 86 4a       	call 38156 <sys_timer_del : 1e0c082 >			  ## app_power_manage.c:83:13
 1e02b76:    d9 f4 00 69       	[r6 + 100] = 0			  ## app_power_manage.c:84:28
 1e02b7a:    30 19             	goto 608 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_power_manage.c:84:28
 1e02b7c:    c0 ff c9 0f e1 01 	r0 = 31526857 <update_target_end+0xD99 : 1e10fc9 >			  ## app_power_manage.c:69:9
 1e02b82:    80 f3 10 51       	call 41504 <printf : 1e0cda6 >			  ## app_power_manage.c:69:9
 1e02b86:    a0 4d             	r0 = [r6 + 104]			  ## app_power_manage.c:199:9
 1e02b88:    05 20             	if (r0 == 0) goto 10 <.GJTIE274_2_2_+0x5E : 1e02b94 >			  ## app_power_manage.c:199:9
 1e02b8a:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:200:9
 1e02b8c:    80 f3 79 4a       	call 38130 <sys_timer_del : 1e0c082 >			  ## app_power_manage.c:200:9
 1e02b90:    da f4 00 69       	[r6 + 104] = 0			  ## app_power_manage.c:201:25
 1e02b94:    b0 4d             	r0 = [r6 + 108]			  ## app_power_manage.c:203:9
 1e02b96:    05 20             	if (r0 == 0) goto 10 <.GJTIE274_2_2_+0x6C : 1e02ba2 >			  ## app_power_manage.c:203:9
 1e02b98:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:204:9
 1e02b9a:    80 f3 73 4a       	call 38118 <usr_timer_del : 1e0c084 >			  ## app_power_manage.c:204:9
 1e02b9e:    db f4 00 69       	[r6 + 108] = 0			  ## app_power_manage.c:205:25
 1e02ba2:    90 4d             	r0 = [r6 + 100]			  ## app_power_manage.c:71:13
 1e02ba4:    93 20             	if (r0 == 0) goto 294 <.GJTIE274_0_0_+0x20 : 1e02ccc >			  ## app_power_manage.c:71:13
 1e02ba6:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:72:13
 1e02ba8:    80 f3 6b 4a       	call 38102 <sys_timer_del : 1e0c082 >			  ## app_power_manage.c:72:13
 1e02bac:    d9 f4 00 69       	[r6 + 100] = 0			  ## app_power_manage.c:73:28
 1e02bb0:    8d 18             	goto 282 <.GJTIE274_0_0_+0x20 : 1e02ccc >			  ## app_power_manage.c:73:28
 1e02bb2:    30 e3 f9 00       	if (r0 == 51) goto 498 <.GJTIE274_0_0_+0xFC : 1e02da8 >
 1e02bb6:    00 e3 fb 00       	if (r0 == 48) goto 502 <.GJTIE274_0_0_+0x104 : 1e02db0 >
 1e02bba:    30 e0 b4 10       	if (r0 != 3) goto 360 <.GJTIE274_0_0_+0x7A : 1e02d26 >
 1e02bbe:    c2 ff 6f 12 e1 01 	r2 = 31527535 <update_target_end+0x103F : 1e1126f >			  ## app_spp_and_le.c:1015:9
 1e02bc4:    20 70             	r0 = 2			  ## app_spp_and_le.c:1015:9
 1e02bc6:    80 f3 1b 51       	call 41526 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:1015:9
 1e02bca:    c0 ff 9e 09 e1 01 	r0 = 31525278 <update_target_end+0x76E : 1e1099e >			  ## le_trans_data.c:1347:5
 1e02bd0:    80 f3 e9 50       	call 41426 <printf : 1e0cda6 >			  ## le_trans_data.c:1347:5
 1e02bd4:    74 fc 4d 00       	r4 = r7 + 77			  ## le_trans_data.c:1358:27
 1e02bd8:    40 08             	r0 = r4			  ## le_trans_data.c:1358:27
 1e02bda:    98 f3 8f 21       	call 3162910 <strlen : 106efc >			  ## le_trans_data.c:1358:27
 1e02bde:    02 04             	r2 = r0.b0 (u)			  ## le_trans_data.c:1359:9
 1e02be0:    81 71             	r1 = 24			  ## le_trans_data.c:1359:9
 1e02be2:    82 e1 01 80       	if (r2 > 24) goto 2 <.GJTIE274_2_2_+0xB2 : 1e02be8 >			  ## le_trans_data.c:1359:9
 1e02be6:    01 08             	r1 = r0			  ## le_trans_data.c:1359:9
 1e02be8:    39 6c             	b[r6 + 3] = r1			  ## le_trans_data.c:1358:25
 1e02bea:    42 04             	r2 = r1.b0 (u)			  ## le_trans_data.c:1363:37
 1e02bec:    75 fc 30 00       	r5 = r7 + 48			  ## le_trans_data.c:1363:5
 1e02bf0:    50 08             	r0 = r5			  ## le_trans_data.c:1363:5
 1e02bf2:    41 08             	r1 = r4			  ## le_trans_data.c:1363:5
 1e02bf4:    98 f3 76 21       	call 3162860 <memcpy : 106ee4 >			  ## le_trans_data.c:1363:5
 1e02bf8:    30 6c             	r0 = b[r6 + 3] (u)			  ## le_trans_data.c:1367:13
 1e02bfa:    50 09             	r0 += r5			  ## le_trans_data.c:1367:13
 1e02bfc:    c1 ff c8 09 e1 01 	r1 = 31525320 <update_target_end+0x798 : 1e109c8 >			  ## le_trans_data.c:1367:5
 1e02c02:    52 70             	r2 = 5			  ## le_trans_data.c:1367:5
 1e02c04:    98 f3 6e 21       	call 3162844 <memcpy : 106ee4 >			  ## le_trans_data.c:1367:5
 1e02c08:    30 6c             	r0 = b[r6 + 3] (u)			  ## le_trans_data.c:1368:25
 1e02c0a:    50 80             	r0 += 5			  ## le_trans_data.c:1368:25
 1e02c0c:    38 6c             	b[r6 + 3] = r0			  ## le_trans_data.c:1368:25
 1e02c0e:    01 04             	r1 = r0.b0 (u)			  ## le_trans_data.c:1371:5
 1e02c10:    c0 ff ce 09 e1 01 	r0 = 31525326 <update_target_end+0x79E : 1e109ce >			  ## le_trans_data.c:1371:5
 1e02c16:    52 08             	r2 = r5			  ## le_trans_data.c:1371:5
 1e02c18:    80 f3 c5 50       	call 41354 <printf : 1e0cda6 >			  ## le_trans_data.c:1371:5
 1e02c1c:    10 70             	r0 = 1			  ## le_trans_data.c:1380:5
 1e02c1e:    bf f3 7a ef       	call -8460 <set_ble_work_state : 1e00b16 >			  ## le_trans_data.c:1380:5
 1e02c22:    10 70             	r0 = 1			  ## le_trans_data.c:1381:5
 1e02c24:    bf f3 c7 f9       	call -3186 <ble_module_enable : 1e01fb6 >			  ## le_trans_data.c:1381:5
 1e02c28:    d9 18             	goto 434 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## le_trans_data.c:1381:5
 1e02c2a:    00 70             	r0 = 0			  ## app_spp_and_le.c:897:17
 1e02c2c:    bf f3 35 f1       	call -7574 <bt_ble_adv_enable : 1e00e9a >			  ## app_spp_and_le.c:897:17
 1e02c30:    85 68             	r5 = b[r4 + 8] (u)			  ## app_spp_and_le.c:897:17
 1e02c32:    35 e0 03 10       	if (r5 != 3) goto 6 <.GJTIE274_2_2_+0x106 : 1e02c3c >
 1e02c36:    40 48             	r0 = [r4 + 16]			  ## app_spp_and_le.c:904:63
 1e02c38:    35 70             	r5 = 3			  ## app_spp_and_le.c:904:63
 1e02c3a:    28 20             	if (r0 == 0) goto 80 <.GJTIE274_2_2_+0x156 : 1e02c8c >			  ## app_spp_and_le.c:904:63
 1e02c3c:    80 f3 68 2b       	call 22224 <get_remote_test_flag : 1e08310 >			  ## app_spp_and_le.c:913:13
 1e02c40:    0e 20             	if (r0 == 0) goto 28 <.GJTIE274_2_2_+0x128 : 1e02c5e >			  ## app_spp_and_le.c:913:13
 1e02c42:    55 e0 0c 00       	if (r5 == 5) goto 24 <.GJTIE274_2_2_+0x128 : 1e02c5e >
 1e02c46:    00 ff fe 50 09 00 	if (r5 == 254) goto 18 <.GJTIE274_2_2_+0x128 : 1e02c5e >
 1e02c4c:    c2 ff 97 15 e1 01 	r2 = 31528343 <update_target_end+0x1367 : 1e11597 >			  ## app_spp_and_le.c:916:13
 1e02c52:    20 70             	r0 = 2			  ## app_spp_and_le.c:916:13
 1e02c54:    80 f3 d4 50       	call 41384 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:916:13
 1e02c58:    90 f3 1d 04       	call 2099258 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e02c5c:    85 68             	r5 = b[r4 + 8] (u)			  ## cpu.h:148:5
 1e02c5e:    00 ff f8 50 65 00 	if (r5 == 248) goto 202 <.GJTIE274_0_0_+0x82 : 1e02d2e >			  ## app_spp_and_le.c:921:5
 1e02c64:    35 e0 12 00       	if (r5 == 3) goto 36 <.GJTIE274_2_2_+0x156 : 1e02c8c >
 1e02c68:    55 e0 65 00       	if (r5 == 5) goto 202 <.GJTIE274_0_0_+0x8A : 1e02d36 >
 1e02c6c:    65 e1 67 00       	if (r5 == 22) goto 206 <.GJTIE274_0_0_+0x92 : 1e02d3e >
 1e02c70:    35 e3 69 00       	if (r5 == 51) goto 210 <.GJTIE274_0_0_+0x9A : 1e02d46 >
 1e02c74:    45 e3 6b 00       	if (r5 == 52) goto 214 <.GJTIE274_0_0_+0xA2 : 1e02d4e >
 1e02c78:    b5 e3 6d 00       	if (r5 == 59) goto 218 <.GJTIE274_0_0_+0xAA : 1e02d56 >
 1e02c7c:    d5 e6 06 00       	if (r5 == 109) goto 12 <.GJTIE274_2_2_+0x156 : 1e02c8c >
 1e02c80:    15 e0 ac 10       	if (r5 != 1) goto 344 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02c84:    c2 ff b8 15 e1 01 	r2 = 31528376 <update_target_end+0x1388 : 1e115b8 >			  ## app_spp_and_le.c:923:9
 1e02c8a:    a5 18             	goto 330 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:923:9
 1e02c8c:    c2 ff 46 17 e1 01 	r2 = 31528774 <update_target_end+0x1516 : 1e11746 >			  ## app_spp_and_le.c:956:9
 1e02c92:    20 70             	r0 = 2			  ## app_spp_and_le.c:956:9
 1e02c94:    80 f3 b4 50       	call 41320 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:956:9
 1e02c98:    40 48             	r0 = [r4 + 16]			  ## app_spp_and_le.c:957:21
 1e02c9a:    b0 e0 9f 80       	if (r0 > 11) goto 318 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:957:21
 1e02c9e:    a0 00             	tbb [r0]


.GJTIS274_0_0_:
 1e02ca0:    06     < 6 : 0x6 >
 1e02ca1:    9e     < 158 : 0x9E >
 1e02ca2:    9e     < 158 : 0x9E >
 1e02ca3:    9e     < 158 : 0x9E >
 1e02ca4:    8c     < 140 : 0x8C >
 1e02ca5:    9e     < 158 : 0x9E >
 1e02ca6:    90     < 144 : 0x90 >
 1e02ca7:    9e     < 158 : 0x9E >
 1e02ca8:    94     < 148 : 0x94 >
 1e02ca9:    9e     < 158 : 0x9E >
 1e02caa:    9e     < 158 : 0x9E >
 1e02cab:    98     < 152 : 0x98 >
 1e02cac:    c2 ff 7d 17 e1 01 	r2 = 31528829 <update_target_end+0x154D : 1e1177d >			  ## app_spp_and_le.c:959:13
 1e02cb2:    91 18             	goto 290 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:959:13
 1e02cb4:    c2 ff ee 12 e1 01 	r2 = 31527662 <update_target_end+0x10BE : 1e112ee >			  ## app_spp_and_le.c:1043:9
 1e02cba:    8d 18             	goto 282 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1043:9
 1e02cbc:    60 6d             	r0 = b[r6 + 22] (u)			  ## app_spp_and_le.c:1228:23
 1e02cbe:    10 80             	r0 += 1			  ## app_spp_and_le.c:1228:23
 1e02cc0:    01 04             	r1 = r0.b0 (u)			  ## app_spp_and_le.c:1228:23
 1e02cc2:    68 6d             	b[r6 + 22] = r0			  ## app_spp_and_le.c:1228:23
 1e02cc4:    a1 e0 8a 30       	if (r1 < 10) goto 276 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1228:23
 1e02cc8:    00 70             	r0 = 0			  ## app_spp_and_le.c:1231:24
 1e02cca:    68 6d             	b[r6 + 22] = r0			  ## app_spp_and_le.c:1231:24
 1e02ccc:    f7 15             	call -1042 <app_set_soft_poweroff : 1e028bc >
 1e02cce:    86 18             	goto 268 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02cd0:    c0 ff 98 11 e1 01 	r0 = 31527320 <update_target_end+0xF68 : 1e11198 >			  ## app_spp_and_le.c:1266:5
 1e02cd6:    80 f3 66 50       	call 41164 <printf : 1e0cda6 >
 1e02cda:    50 6d             	r0 = b[r6 + 21] (u)
 1e02cdc:    7f 30             	if (r0 != 0) goto 254 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02cde:    00 70             	r0 = 0
 1e02ce0:    e8 4d             	[r6 + 120] = r0
 1e02ce2:    01 70             	r1 = 0
 1e02ce4:    bf f3 61 f0       	call -7998 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >
 1e02ce8:    51 6d             	r1 = b[r6 + 21] (u)
 1e02cea:    e0 4d             	r0 = [r6 + 120]
 1e02cec:    bf f3 a4 f9       	call -3256 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >
 1e02cf0:    75 18             	goto 234 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02cf2:    c0 ff b8 11 e1 01 	r0 = 31527352 <update_target_end+0xF88 : 1e111b8 >			  ## app_spp_and_le.c:1275:5
 1e02cf8:    80 f3 55 50       	call 41130 <printf : 1e0cda6 >			  ## app_spp_and_le.c:1275:5
 1e02cfc:    10 70             	r0 = 1			  ## app_spp_and_le.c:1275:5
 1e02cfe:    58 6d             	b[r6 + 21] = r0			  ## app_spp_and_le.c:1276:15
 1e02d00:    0d 4e             	[r7 + 0] = r5			  ## app_spp_and_le.c:1277:31
 1e02d02:    1d 4e             	[r7 + 4] = r5			  ## app_spp_and_le.c:1278:32
 1e02d04:    0d 18             	goto 26 <.GJTIE274_0_0_+0x74 : 1e02d20 >			  ## app_spp_and_le.c:1278:32
 1e02d06:    e0 4d             	r0 = [r6 + 120]			  ## app_spp_and_le.c:1219:23
 1e02d08:    50 09             	r0 += r5			  ## app_spp_and_le.c:1219:23
 1e02d0a:    e8 4d             	[r6 + 120] = r0			  ## app_spp_and_le.c:1219:23
 1e02d0c:    67 18             	goto 206 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1219:23
 1e02d0e:    c0 ff ea 11 e1 01 	r0 = 31527402 <update_target_end+0xFBA : 1e111ea >			  ## app_spp_and_le.c:1284:5
 1e02d14:    80 f3 47 50       	call 41102 <printf : 1e0cda6 >			  ## app_spp_and_le.c:1284:5
 1e02d18:    20 70             	r0 = 2			  ## app_spp_and_le.c:1284:5
 1e02d1a:    58 6d             	b[r6 + 21] = r0			  ## app_spp_and_le.c:1285:15
 1e02d1c:    2d 4e             	[r7 + 8] = r5			  ## app_spp_and_le.c:1286:28
 1e02d1e:    3d 4e             	[r7 + 12] = r5			  ## app_spp_and_le.c:1287:28
 1e02d20:    51 08             	r1 = r5
 1e02d22:    f8 15             	call -1040 <state_prosses : 1e02914 >
 1e02d24:    5b 18             	goto 182 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02d26:    c2 ff f3 14 e1 01 	r2 = 31528179 <update_target_end+0x12C3 : 1e114f3 >			  ## app_spp_and_le.c:1092:9
 1e02d2c:    54 18             	goto 168 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1092:9
 1e02d2e:    c2 ff d5 16 e1 01 	r2 = 31528661 <update_target_end+0x14A5 : 1e116d5 >			  ## app_spp_and_le.c:945:9
 1e02d34:    50 18             	goto 160 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:945:9
 1e02d36:    c2 ff 0d 17 e1 01 	r2 = 31528717 <update_target_end+0x14DD : 1e1170d >			  ## app_spp_and_le.c:950:9
 1e02d3c:    4c 18             	goto 152 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:950:9
 1e02d3e:    c2 ff a1 16 e1 01 	r2 = 31528609 <update_target_end+0x1471 : 1e116a1 >			  ## app_spp_and_le.c:940:9
 1e02d44:    48 18             	goto 144 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:940:9
 1e02d46:    c2 ff ec 15 e1 01 	r2 = 31528428 <update_target_end+0x13BC : 1e115ec >			  ## app_spp_and_le.c:927:9
 1e02d4c:    44 18             	goto 136 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:927:9
 1e02d4e:    c2 ff 29 16 e1 01 	r2 = 31528489 <update_target_end+0x13F9 : 1e11629 >			  ## app_spp_and_le.c:932:9
 1e02d54:    40 18             	goto 128 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:932:9
 1e02d56:    43 48             	r3 = [r4 + 16]			  ## app_spp_and_le.c:936:9
 1e02d58:    c2 ff 61 16 e1 01 	r2 = 31528545 <update_target_end+0x1431 : 1e11661 >			  ## app_spp_and_le.c:936:9
 1e02d5e:    1c 18             	goto 56 <.GJTIE274_0_0_+0xEC : 1e02d98 >			  ## app_spp_and_le.c:936:9
 1e02d60:    c2 ff 1a 13 e1 01 	r2 = 31527706 <update_target_end+0x10EA : 1e1131a >			  ## app_spp_and_le.c:1047:9
 1e02d66:    37 18             	goto 110 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1047:9
 1e02d68:    c2 ff cf 13 e1 01 	r2 = 31527887 <update_target_end+0x119F : 1e113cf >			  ## app_spp_and_le.c:1063:9
 1e02d6e:    33 18             	goto 102 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1063:9
 1e02d70:    c2 ff 48 13 e1 01 	r2 = 31527752 <update_target_end+0x1118 : 1e11348 >			  ## app_spp_and_le.c:1051:9
 1e02d76:    2f 18             	goto 94 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1051:9
 1e02d78:    c2 ff 73 13 e1 01 	r2 = 31527795 <update_target_end+0x1143 : 1e11373 >			  ## app_spp_and_le.c:1055:9
 1e02d7e:    2b 18             	goto 86 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1055:9
 1e02d80:    c2 ff a1 13 e1 01 	r2 = 31527841 <update_target_end+0x1171 : 1e113a1 >			  ## app_spp_and_le.c:1059:9
 1e02d86:    27 18             	goto 78 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1059:9
 1e02d88:    c2 ff 2e 14 e1 01 	r2 = 31527982 <update_target_end+0x11FE : 1e1142e >			  ## app_spp_and_le.c:1071:9
 1e02d8e:    23 18             	goto 70 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1071:9
 1e02d90:    43 48             	r3 = [r4 + 16]			  ## app_spp_and_le.c:1079:9
 1e02d92:    c2 ff 90 14 e1 01 	r2 = 31528080 <update_target_end+0x1260 : 1e11490 >			  ## app_spp_and_le.c:1079:9
 1e02d98:    20 70             	r0 = 2
 1e02d9a:    80 f3 31 50       	call 41058 <log_print : 1e0ce00 >
 1e02d9e:    1e 18             	goto 60 <.GJTIE274_0_0_+0x130 : 1e02ddc >
 1e02da0:    c2 ff fd 13 e1 01 	r2 = 31527933 <update_target_end+0x11CD : 1e113fd >			  ## app_spp_and_le.c:1067:9
 1e02da6:    17 18             	goto 46 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1067:9
 1e02da8:    c2 ff c8 14 e1 01 	r2 = 31528136 <update_target_end+0x1298 : 1e114c8 >			  ## app_spp_and_le.c:1088:9
 1e02dae:    13 18             	goto 38 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1088:9
 1e02db0:    c2 ff 5e 14 e1 01 	r2 = 31528030 <update_target_end+0x122E : 1e1145e >			  ## app_spp_and_le.c:1075:9
 1e02db6:    0f 18             	goto 30 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:1075:9
 1e02db8:    c2 ff e0 17 e1 01 	r2 = 31528928 <update_target_end+0x15B0 : 1e117e0 >			  ## app_spp_and_le.c:978:13
 1e02dbe:    0b 18             	goto 22 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:978:13
 1e02dc0:    c2 ff a9 17 e1 01 	r2 = 31528873 <update_target_end+0x1579 : 1e117a9 >			  ## app_spp_and_le.c:963:13
 1e02dc6:    07 18             	goto 14 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:963:13
 1e02dc8:    c2 ff 11 18 e1 01 	r2 = 31528977 <update_target_end+0x15E1 : 1e11811 >			  ## app_spp_and_le.c:983:13
 1e02dce:    03 18             	goto 6 <.GJTIE274_0_0_+0x12A : 1e02dd6 >			  ## app_spp_and_le.c:983:13
 1e02dd0:    c2 ff 48 18 e1 01 	r2 = 31529032 <update_target_end+0x1618 : 1e11848 >			  ## app_spp_and_le.c:988:13
 1e02dd6:    20 70             	r0 = 2
 1e02dd8:    80 f3 12 50       	call 40996 <log_print : 1e0ce00 >
 1e02ddc:    00 70             	r0 = 0			  ## app_spp_and_le.c:1330:1
 1e02dde:    02 0a             	sp += 4			  ## app_spp_and_le.c:1330:1
 1e02de0:    57 01             	{pc, r7-r4} = [sp++]			  ## app_spp_and_le.c:1330:1
 1e02de2:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:1258:29
 1e02de6:    28 4e             	[r7 + 8] = r0			  ## app_spp_and_le.c:1258:29
 1e02de8:    38 4e             	[r7 + 12] = r0			  ## app_spp_and_le.c:1259:28
 1e02dea:    20 70             	r0 = 2			  ## app_spp_and_le.c:1260:6
 1e02dec:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:1260:6
 1e02df0:    91 15             	call -1246 <state_prosses : 1e02914 >			  ## app_spp_and_le.c:1260:6
 1e02df2:    f4 1f             	goto -24 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1260:6
 1e02df4:    c0 73             	r0 = 60			  ## app_spp_and_le.c:1251:32
 1e02df6:    08 4e             	[r7 + 0] = r0			  ## app_spp_and_le.c:1251:32
 1e02df8:    18 4e             	[r7 + 4] = r0			  ## app_spp_and_le.c:1252:31
 1e02dfa:    10 70             	r0 = 1			  ## app_spp_and_le.c:1253:5
 1e02dfc:    c1 73             	r1 = 60			  ## app_spp_and_le.c:1253:5
 1e02dfe:    8a 15             	call -1260 <state_prosses : 1e02914 >			  ## app_spp_and_le.c:1253:5
 1e02e00:    ed 1f             	goto -38 <.GJTIE274_0_0_+0x130 : 1e02ddc >			  ## app_spp_and_le.c:1253:5


gpio_set_fun_output_port:
 1e02e02:    74 01             	[--sp] = {rets, r4}			  ## gpio.c:1170:0
 1e02e04:    10 e3 0c 30       	if (r0 < 49) goto 24 <.GJTIE275_0_0_+0x4 : 1e02e20 >			  ## gpio.c:1174:9
 1e02e08:    03 fc cf ff       	r3 = r0 + -49			  ## gpio.c:1175:13
 1e02e0c:    33 e0 23 80       	if (r3 > 3) goto 70 <.GJTIE275_0_0_+0x3A : 1e02e56 >			  ## gpio.c:1175:13
 1e02e10:    c0 ff 64 56 1e 00 	r0 = 1988196 <uECC_vli_cmp_unsafe+0xDE668 : 1e5664 >
 1e02e16:    a3 00             	tbb [r3]


.GJTIS275_0_0_:
 1e02e18:    17     < 23 : 0x17 >
 1e02e19:    02     < 2 : 0x2 >
 1e02e1a:    14     < 20 : 0x14 >
 1e02e1b:    16     < 22 : 0x16 >
 1e02e1c:    40 80             	r0 += 4
 1e02e1e:    13 18             	goto 38 <.GJTIE275_0_0_+0x2A : 1e02e46 >
 1e02e20:    83 d0             	r3 = r0 >> 2			  ## gpio.c:1150:18
 1e02e22:    c4 ff fc ff ff 3f 	r4 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:1147:28
 1e02e28:    53 b9             	r3 &= r4			  ## gpio.c:1147:28
 1e02e2a:    c4 ff b8 30 e1 01 	r4 = 31535288 <gpio_out_regs : 1e130b8 >			  ## gpio.c:1150:18
 1e02e30:    83 f6 00 34       	r3 = [r3+r4]			  ## gpio.c:1150:18
 1e02e34:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:1148:27
 1e02e38:    80 c0             	r0 = r0 << 2			  ## gpio.c:1152:16
 1e02e3a:    30 09             	r0 += r3			  ## gpio.c:1152:16
 1e02e3c:    04 30             	if (r0 != 0) goto 8 <.GJTIE275_0_0_+0x2A : 1e02e46 >
 1e02e3e:    54 01             	{pc, r4} = [sp++]
 1e02e40:    80 80             	r0 += 8
 1e02e42:    01 18             	goto 2 <.GJTIE275_0_0_+0x2A : 1e02e46 >
 1e02e44:    c0 80             	r0 += 12
 1e02e46:    13 70             	r3 = 1			  ## gpio.c:1195:9
 1e02e48:    01 34             	if (r2 != 0) goto 2 <.GJTIE275_0_0_+0x30 : 1e02e4c >			  ## gpio.c:1195:9
 1e02e4a:    03 70             	r3 = 0			  ## gpio.c:1195:9
 1e02e4c:    de fd 10 31       	r3 <= insert(r1, p:2, l:30)			  ## gpio.c:1201:30
 1e02e50:    01 fd 02 39       	r1 = r3 | 2			  ## gpio.c:1201:30
 1e02e54:    09 40             	[r0 + 0] = r1			  ## gpio.c:1201:11
 1e02e56:    54 01             	{pc, r4} = [sp++]


gpio_set_die:
 1e02e58:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE277_0_0_+0xA : 1e02e7a >			  ## gpio.c:800:0
 1e02e5c:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:806:13
 1e02e60:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE277_0_0_+0x3A : 1e02eaa >			  ## gpio.c:806:13
 1e02e64:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e02e6a:    a2 00             	tbb [r2]


.GJTIS277_0_0_:
 1e02e6c:    02     < 2 : 0x2 >
 1e02e6d:    20     < 32 : 0x20 >
 1e02e6e:    25     < 37 : 0x25 >
 1e02e6f:    2a     < 42 : 0x2A >
 1e02e70:    02 40             	r2 = [r0 + 0]			  ## gpio.c:806:13
 1e02e72:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:806:13
 1e02e76:    0a 40             	[r0 + 0] = r2			  ## gpio.c:806:13
 1e02e78:    20 00             	rts			  ## gpio.c:806:13
 1e02e7a:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e02e7c:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e02e82:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e02e84:    c3 ff a8 30 e1 01 	r3 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e02e8a:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e02e8e:    0d 24             	if (r2 == 0) goto 26 <.GJTIE277_0_0_+0x3A : 1e02eaa >
 1e02e90:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:818:12
 1e02e94:    13 70             	r3 = 1			  ## gpio.c:818:12
 1e02e96:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:818:12
 1e02e9a:    03 22             	if (r1 == 0) goto 6 <.GJTIE277_0_0_+0x32 : 1e02ea2 >			  ## gpio.c:820:9
 1e02e9c:    31 44             	r1 = [r2 + 12]			  ## gpio.c:821:16
 1e02e9e:    50 b2             	r0 |= r1			  ## gpio.c:821:16
 1e02ea0:    03 18             	goto 6 <.GJTIE277_0_0_+0x38 : 1e02ea8 >
 1e02ea2:    31 44             	r1 = [r2 + 12]			  ## gpio.c:823:16
 1e02ea4:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:823:16
 1e02ea8:    38 44             	[r2 + 12] = r0
 1e02eaa:    20 00             	rts
 1e02eac:    02 40             	r2 = [r0 + 0]			  ## gpio.c:806:13
 1e02eae:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:806:13
 1e02eb2:    0a 40             	[r0 + 0] = r2			  ## gpio.c:806:13
 1e02eb4:    20 00             	rts			  ## gpio.c:806:13
 1e02eb6:    92 40             	r2 = [r0 + 36]			  ## gpio.c:806:13
 1e02eb8:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:806:13
 1e02ebc:    9a 40             	[r0 + 36] = r2			  ## gpio.c:806:13
 1e02ebe:    20 00             	rts			  ## gpio.c:806:13
 1e02ec0:    92 40             	r2 = [r0 + 36]			  ## gpio.c:806:13
 1e02ec2:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:806:13
 1e02ec6:    9a 40             	[r0 + 36] = r2			  ## gpio.c:806:13
 1e02ec8:    20 00             	rts			  ## gpio.c:806:13


timer_pwm_init:
 1e02eca:    77 01             	[--sp] = {rets, r7-r4}			  ## mcpwm.c:407:0
 1e02ecc:    04 08             	r4 = r0			  ## mcpwm.c:407:0
 1e02ece:    c0 ff 00 fc e1 ff 	r0 = 4293000192 <bank_code_load_addr+0xFEC : 1e1fc00 >			  ## mcpwm.c:408:5
 1e02ed4:    40 09             	r0 += r4			  ## mcpwm.c:408:5
 1e02ed6:    f4 fd 40 00       	r0 = r0 <> 8			  ## mcpwm.c:408:5
 1e02eda:    36 08             	r6 = r3			  ## mcpwm.c:408:5
 1e02edc:    27 08             	r7 = r2
 1e02ede:    15 08             	r5 = r1
 1e02ee0:    30 e0 42 80       	if (r0 > 3) goto 132 <.GJTIE278_0_0_+0x7E : 1e02f68 >
 1e02ee4:    a0 00             	tbb [r0]


.GJTIS278_0_0_:
 1e02ee6:    02     < 2 : 0x2 >
 1e02ee7:    04     < 4 : 0x4 >
 1e02ee8:    06     < 6 : 0x6 >
 1e02ee9:    08     < 8 : 0x8 >
 1e02eea:    c1 70             	r1 = 12			  ## mcpwm.c:410:9
 1e02eec:    07 18             	goto 14 <.GJTIE278_0_0_+0x12 : 1e02efc >			  ## mcpwm.c:410:9
 1e02eee:    d1 70             	r1 = 13			  ## mcpwm.c:413:9
 1e02ef0:    05 18             	goto 10 <.GJTIE278_0_0_+0x12 : 1e02efc >			  ## mcpwm.c:413:9
 1e02ef2:    e1 70             	r1 = 14			  ## mcpwm.c:416:9
 1e02ef4:    03 18             	goto 6 <.GJTIE278_0_0_+0x12 : 1e02efc >			  ## mcpwm.c:416:9
 1e02ef6:    80 f3 3c 55       	call 43640 <bit_clr_ie : 1e0d972 >			  ## mcpwm.c:419:9
 1e02efa:    f1 70             	r1 = 15			  ## mcpwm.c:420:9
 1e02efc:    02 70             	r2 = 0
 1e02efe:    50 08             	r0 = r5
 1e02f00:    80 17             	call -256 <gpio_set_fun_output_port : 1e02e02 >
 1e02f02:    00 70             	r0 = 0
 1e02f04:    08 48             	[r4 + 0] = r0			  ## mcpwm.c:427:20
 1e02f06:    00 f4 18 4a       	[r4 + 0] |= 6144			  ## mcpwm.c:428:20
 1e02f0a:    00 f4 10 49       	[r4 + 0] |= 16			  ## mcpwm.c:429:20
 1e02f0e:    18 48             	[r4 + 4] = r0			  ## mcpwm.c:430:20
 1e02f10:    b8 c0             	r0 = r7 << 2			  ## mcpwm.c:431:33
 1e02f12:    c1 ff 00 36 6e 01 	r1 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## mcpwm.c:431:28
 1e02f18:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## mcpwm.c:431:28
 1e02f1c:    28 48             	[r4 + 8] = r0			  ## mcpwm.c:431:20
 1e02f1e:    20 48             	r0 = [r4 + 8]			  ## mcpwm.c:432:34
 1e02f20:    80 0f             	r0 = r0 * r6			  ## mcpwm.c:432:38
 1e02f22:    01 fb 10 27       	r1 = 10000 <sys_timer_sem+0x48 : 2710 >			  ## mcpwm.c:432:46
 1e02f26:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## mcpwm.c:432:46
 1e02f2a:    38 48             	[r4 + 12] = r0			  ## mcpwm.c:432:20
 1e02f2c:    00 f4 01 49       	[r4 + 0] |= 1			  ## mcpwm.c:433:20
 1e02f30:    00 f4 01 4a       	[r4 + 0] |= 256			  ## mcpwm.c:434:20
 1e02f34:    11 70             	r1 = 1			  ## mcpwm.c:436:5
 1e02f36:    50 08             	r0 = r5			  ## mcpwm.c:436:5
 1e02f38:    8f 17             	call -226 <gpio_set_die : 1e02e58 >			  ## mcpwm.c:436:5
 1e02f3a:    01 70             	r1 = 0			  ## mcpwm.c:437:5
 1e02f3c:    50 08             	r0 = r5			  ## mcpwm.c:437:5
 1e02f3e:    bf f3 b5 f5       	call -5270 <gpio_set_pull_up : 1e01aac >			  ## mcpwm.c:437:5
 1e02f42:    50 08             	r0 = r5			  ## mcpwm.c:438:5
 1e02f44:    bf f3 98 f5       	call -5328 <gpio_set_pull_down : 1e01a78 >			  ## mcpwm.c:438:5
 1e02f48:    01 70             	r1 = 0			  ## mcpwm.c:439:5
 1e02f4a:    50 08             	r0 = r5			  ## mcpwm.c:439:5
 1e02f4c:    bf f3 14 f6       	call -5080 <gpio_set_direction : 1e01b78 >			  ## mcpwm.c:439:5
 1e02f50:    21 48             	r1 = [r4 + 8]			  ## mcpwm.c:441:50
 1e02f52:    c0 ff dd 02 e1 01 	r0 = 31523549 <update_target_end+0xAD : 1e102dd >			  ## mcpwm.c:441:5
 1e02f58:    80 f3 25 4f       	call 40522 <printf : 1e0cda6 >			  ## mcpwm.c:441:5
 1e02f5c:    01 48             	r1 = [r4 + 0]			  ## mcpwm.c:442:50
 1e02f5e:    c0 ff f4 02 e1 01 	r0 = 31523572 <update_target_end+0xC4 : 1e102f4 >			  ## mcpwm.c:442:5
 1e02f64:    80 f3 1f 4f       	call 40510 <printf : 1e0cda6 >			  ## mcpwm.c:442:5
 1e02f68:    57 01             	{pc, r7-r4} = [sp++]			  ## mcpwm.c:443:1


set_enter_lp:
 1e02f6a:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:669:0
 1e02f6c:    04 08             	r4 = r0			  ## board_ac632n_demo.c:669:0
 1e02f6e:    c0 ff 77 1d e1 01 	r0 = 31530359 <update_target_end+0x1B47 : 1e11d77 >			  ## board_ac632n_demo.c:670:5
 1e02f74:    c1 ff 8b 1d e1 01 	r1 = 31530379 <update_target_end+0x1B5B : 1e11d8b >			  ## board_ac632n_demo.c:670:5
 1e02f7a:    42 08             	r2 = r4			  ## board_ac632n_demo.c:670:5
 1e02f7c:    80 f3 13 4f       	call 40486 <printf : 1e0cda6 >			  ## board_ac632n_demo.c:670:5
 1e02f80:    c0 ff 5a 08 00 00 	r0 = 2138 <can_enter_lp : 85a >			  ## board_ac632n_demo.c:671:18
 1e02f86:    0c 60             	b[r0 + 0] = r4			  ## board_ac632n_demo.c:671:18
 1e02f88:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:672:1


set_timer_pwm_duty:
 1e02f8a:    22 40             	r2 = [r0 + 8]			  ## mcpwm.c:458:0
 1e02f8c:    51 0e             	r1 = r2 * r1			  ## mcpwm.c:459:38
 1e02f8e:    02 fb 10 27       	r2 = 10000 <sys_timer_sem+0x48 : 2710 >			  ## mcpwm.c:459:46
 1e02f92:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## mcpwm.c:459:46
 1e02f96:    39 40             	[r0 + 12] = r1			  ## mcpwm.c:459:20
 1e02f98:    20 00             	rts			  ## mcpwm.c:460:1


gpio_disable_fun_output_port:
 1e02f9a:    10 e3 0c 30       	if (r0 < 49) goto 24 <.GJTIE281_0_0_+0x4 : 1e02fb6 >			  ## gpio.c:1209:0
 1e02f9e:    01 fc cf ff       	r1 = r0 + -49			  ## gpio.c:1213:13
 1e02fa2:    31 e0 1f 80       	if (r1 > 3) goto 62 <.GJTIE281_0_0_+0x32 : 1e02fe4 >			  ## gpio.c:1213:13
 1e02fa6:    c0 ff 64 56 1e 00 	r0 = 1988196 <uECC_vli_cmp_unsafe+0xDE668 : 1e5664 >
 1e02fac:    a1 00             	tbb [r1]


.GJTIS281_0_0_:
 1e02fae:    17     < 23 : 0x17 >
 1e02faf:    02     < 2 : 0x2 >
 1e02fb0:    14     < 20 : 0x14 >
 1e02fb1:    16     < 22 : 0x16 >
 1e02fb2:    40 80             	r0 += 4
 1e02fb4:    13 18             	goto 38 <.GJTIE281_0_0_+0x2A : 1e02fdc >
 1e02fb6:    81 d0             	r1 = r0 >> 2			  ## gpio.c:1150:18
 1e02fb8:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:1147:28
 1e02fbe:    51 b5             	r1 &= r2			  ## gpio.c:1147:28
 1e02fc0:    c2 ff b8 30 e1 01 	r2 = 31535288 <gpio_out_regs : 1e130b8 >			  ## gpio.c:1150:18
 1e02fc6:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:1150:18
 1e02fca:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:1148:27
 1e02fce:    80 c0             	r0 = r0 << 2			  ## gpio.c:1152:16
 1e02fd0:    10 09             	r0 += r1			  ## gpio.c:1152:16
 1e02fd2:    04 30             	if (r0 != 0) goto 8 <.GJTIE281_0_0_+0x2A : 1e02fdc >
 1e02fd4:    20 00             	rts
 1e02fd6:    80 80             	r0 += 8
 1e02fd8:    01 18             	goto 2 <.GJTIE281_0_0_+0x2A : 1e02fdc >
 1e02fda:    c0 80             	r0 += 12
 1e02fdc:    01 40             	r1 = [r0 + 0]			  ## gpio.c:1233:11
 1e02fde:    31 fd 03 19       	r1 = r1 & 4294967292			  ## gpio.c:1233:11
 1e02fe2:    09 40             	[r0 + 0] = r1			  ## gpio.c:1233:11
 1e02fe4:    20 00             	rts


usb_set_dieh:
 1e02fe6:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:200:0
 1e02fec:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_dieh+0x1A : 1e03000 >			  ## gpio.c:201:9
 1e02ff0:    80 80             	r0 += 8
 1e02ff2:    13 70             	r3 = 1
 1e02ff4:    f8 fd 00 03       	r0 = r3 << r0
 1e02ff8:    0b 22             	if (r1 == 0) goto 22 <usb_set_dieh+0x2A : 1e03010 >			  ## gpio.c:203:13
 1e02ffa:    91 44             	r1 = [r2 + 36]			  ## gpio.c:204:30
 1e02ffc:    50 b2             	r0 |= r1			  ## gpio.c:204:30
 1e02ffe:    0b 18             	goto 22 <usb_set_dieh+0x30 : 1e03016 >			  ## gpio.c:204:30
 1e03000:    a0 80             	r0 += 10
 1e03002:    13 70             	r3 = 1
 1e03004:    f8 fd 00 03       	r0 = r3 << r0
 1e03008:    08 22             	if (r1 == 0) goto 16 <usb_set_dieh+0x34 : 1e0301a >			  ## gpio.c:210:13
 1e0300a:    01 44             	r1 = [r2 + 0]			  ## gpio.c:211:29
 1e0300c:    50 b2             	r0 |= r1			  ## gpio.c:211:29
 1e0300e:    08 18             	goto 16 <usb_set_dieh+0x3A : 1e03020 >			  ## gpio.c:211:29
 1e03010:    91 44             	r1 = [r2 + 36]			  ## gpio.c:206:30
 1e03012:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:206:30
 1e03016:    98 44             	[r2 + 36] = r0
 1e03018:    20 00             	rts
 1e0301a:    01 44             	r1 = [r2 + 0]			  ## gpio.c:213:29
 1e0301c:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:213:29
 1e03020:    08 44             	[r2 + 0] = r0
 1e03022:    20 00             	rts


gpio_set_dieh:
 1e03024:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_dieh+0x8 : 1e0302c >			  ## gpio.c:831:0
 1e03028:    f0 8c             	r0 += -49			  ## gpio.c:837:31
 1e0302a:    dd 1f             	goto -70 <usb_set_dieh : 1e02fe6 >			  ## gpio.c:837:13
 1e0302c:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e0302e:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e03034:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e03036:    c3 ff a8 30 e1 01 	r3 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e0303c:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e03040:    0d 24             	if (r2 == 0) goto 26 <gpio_set_dieh+0x38 : 1e0305c >
 1e03042:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:849:12
 1e03046:    13 70             	r3 = 1			  ## gpio.c:849:12
 1e03048:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:849:12
 1e0304c:    03 22             	if (r1 == 0) goto 6 <gpio_set_dieh+0x30 : 1e03054 >			  ## gpio.c:851:9
 1e0304e:    81 44             	r1 = [r2 + 32]			  ## gpio.c:852:17
 1e03050:    50 b2             	r0 |= r1			  ## gpio.c:852:17
 1e03052:    03 18             	goto 6 <gpio_set_dieh+0x36 : 1e0305a >
 1e03054:    81 44             	r1 = [r2 + 32]			  ## gpio.c:854:17
 1e03056:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:854:17
 1e0305a:    88 44             	[r2 + 32] = r0
 1e0305c:    20 00             	rts


timer_pwm_delete:
 1e0305e:    74 01             	[--sp] = {rets, r4}			  ## mcpwm.c:446:0
 1e03060:    14 08             	r4 = r1			  ## mcpwm.c:446:0
 1e03062:    03 08             	r3 = r0			  ## mcpwm.c:446:0
 1e03064:    40 08             	r0 = r4			  ## mcpwm.c:447:5
 1e03066:    99 17             	call -206 <gpio_disable_fun_output_port : 1e02f9a >			  ## mcpwm.c:447:5
 1e03068:    00 70             	r0 = 0			  ## mcpwm.c:448:20
 1e0306a:    08 46             	[r3 + 0] = r0			  ## mcpwm.c:448:20
 1e0306c:    01 70             	r1 = 0			  ## mcpwm.c:449:5
 1e0306e:    40 08             	r0 = r4			  ## mcpwm.c:449:5
 1e03070:    f3 16             	call -538 <gpio_set_die : 1e02e58 >			  ## mcpwm.c:449:5
 1e03072:    01 70             	r1 = 0			  ## mcpwm.c:450:5
 1e03074:    40 08             	r0 = r4			  ## mcpwm.c:450:5
 1e03076:    d6 17             	call -84 <gpio_set_dieh : 1e03024 >			  ## mcpwm.c:450:5
 1e03078:    01 70             	r1 = 0			  ## mcpwm.c:451:5
 1e0307a:    40 08             	r0 = r4			  ## mcpwm.c:451:5
 1e0307c:    bf f3 16 f5       	call -5588 <gpio_set_pull_up : 1e01aac >			  ## mcpwm.c:451:5
 1e03080:    40 08             	r0 = r4			  ## mcpwm.c:452:5
 1e03082:    bf f3 f9 f4       	call -5646 <gpio_set_pull_down : 1e01a78 >			  ## mcpwm.c:452:5
 1e03086:    11 70             	r1 = 1			  ## mcpwm.c:453:5
 1e03088:    40 08             	r0 = r4			  ## mcpwm.c:453:5
 1e0308a:    14 01             	{rets, r4} = [sp++]			  ## mcpwm.c:453:5
 1e0308c:    ff f3 74 f5       	goto -5400 <gpio_set_direction : 1e01b78 >			  ## mcpwm.c:453:5


buzzer_ctrl:
 1e03090:    76 01             	[--sp] = {rets, r6-r4}			  ## lost.c:176:0
 1e03092:    fc 0b             	sp += -8			  ## lost.c:176:0
 1e03094:    14 08             	r4 = r1			  ## lost.c:176:0
 1e03096:    05 08             	r5 = r0			  ## lost.c:176:0
 1e03098:    1c 02             	[sp+4] = r4			  ## lost.c:177:5
 1e0309a:    c2 ff ab 1d e1 01 	r2 = 31530411 <update_target_end+0x1B7B : 1e11dab >			  ## lost.c:177:5
 1e030a0:    c3 ff c6 1d e1 01 	r3 = 31530438 <update_target_end+0x1B96 : 1e11dc6 >			  ## lost.c:177:5
 1e030a6:    20 70             	r0 = 2			  ## lost.c:177:5
 1e030a8:    0d 02             	[sp] = r5			  ## lost.c:177:5
 1e030aa:    80 f3 a9 4e       	call 40274 <log_print : 1e0ce00 >			  ## lost.c:177:5
 1e030ae:    04 fe 64 49       	r4 = r4 * 100			  ## lost.c:179:17
 1e030b2:    c6 ff a0 20 00 00 	r6 = 8352 <buzzer_ctrl.init : 20a0 >
 1e030b8:    14 2a             	if (r5 == 0) goto 40 <buzzer_ctrl+0x52 : 1e030e2 >			  ## lost.c:180:8
 1e030ba:    00 6c             	r0 = b[r6 + 0] (u)
 1e030bc:    0c 30             	if (r0 != 0) goto 24 <buzzer_ctrl+0x46 : 1e030d6 >
 1e030be:    c0 ff 00 07 1e 00 	r0 = 1967872 <uECC_vli_cmp_unsafe+0xD9704 : 1e0700 >			  ## lost.c:182:13
 1e030c4:    51 70             	r1 = 5			  ## lost.c:182:13
 1e030c6:    02 fb be 0a       	r2 = 2750 <system_data_end+0xCA : abe >			  ## lost.c:182:13
 1e030ca:    43 08             	r3 = r4			  ## lost.c:182:13
 1e030cc:    fe 16             	call -516 <timer_pwm_init : 1e02eca >			  ## lost.c:182:13
 1e030ce:    10 70             	r0 = 1			  ## lost.c:182:13
 1e030d0:    08 6c             	b[r6 + 0] = r0			  ## lost.c:182:13
 1e030d2:    00 70             	r0 = 0			  ## lost.c:184:13
 1e030d4:    4a 17             	call -364 <set_enter_lp : 1e02f6a >			  ## lost.c:184:13
 1e030d6:    c0 ff 00 07 1e 00 	r0 = 1967872 <uECC_vli_cmp_unsafe+0xD9704 : 1e0700 >			  ## lost.c:186:9
 1e030dc:    41 08             	r1 = r4			  ## lost.c:186:9
 1e030de:    55 17             	call -342 <set_timer_pwm_duty : 1e02f8a >			  ## lost.c:186:9
 1e030e0:    0c 18             	goto 24 <buzzer_ctrl+0x6A : 1e030fa >			  ## lost.c:186:9
 1e030e2:    c0 ff 00 07 1e 00 	r0 = 1967872 <uECC_vli_cmp_unsafe+0xD9704 : 1e0700 >			  ## lost.c:188:9
 1e030e8:    51 70             	r1 = 5			  ## lost.c:188:9
 1e030ea:    02 fb be 0a       	r2 = 2750 <system_data_end+0xCA : abe >			  ## lost.c:188:9
 1e030ee:    43 08             	r3 = r4			  ## lost.c:188:9
 1e030f0:    b6 17             	call -148 <timer_pwm_delete : 1e0305e >			  ## lost.c:188:9
 1e030f2:    00 70             	r0 = 0			  ## lost.c:188:9
 1e030f4:    08 6c             	b[r6 + 0] = r0			  ## lost.c:188:9
 1e030f6:    10 70             	r0 = 1			  ## lost.c:190:9
 1e030f8:    38 17             	call -400 <set_enter_lp : 1e02f6a >			  ## lost.c:190:9
 1e030fa:    04 0a             	sp += 8
 1e030fc:    56 01             	{pc, r6-r4} = [sp++]			  ## lost.c:192:1


buzzer_ring:
 1e030fe:    34 00             	[--sp] = rets			  ## lost.c:195:0
 1e03100:    c2 ff 98 1d e1 01 	r2 = 31530392 <update_target_end+0x1B68 : 1e11d98 >			  ## lost.c:196:5
 1e03106:    c3 ff d2 1d e1 01 	r3 = 31530450 <update_target_end+0x1BA2 : 1e11dd2 >			  ## lost.c:196:5
 1e0310c:    20 70             	r0 = 2			  ## lost.c:196:5
 1e0310e:    80 f3 77 4e       	call 40174 <log_print : 1e0ce00 >			  ## lost.c:196:5
 1e03112:    10 70             	r0 = 1			  ## lost.c:197:2
 1e03114:    41 71             	r1 = 20			  ## lost.c:197:2
 1e03116:    bc 17             	call -136 <buzzer_ctrl : 1e03090 >			  ## lost.c:197:2
 1e03118:    00 70             	r0 = 0			  ## lost.c:198:5
 1e0311a:    88 01             	{rets} = [sp++]			  ## lost.c:198:5
 1e0311c:    26 1f             	goto -436 <set_enter_lp : 1e02f6a >			  ## lost.c:198:5


start_vibrate:
 1e0311e:    76 01             	[--sp] = {rets, r6-r4}			  ## app_spp_and_le.c:114:0
 1e03120:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:114:0
 1e03126:    00 f7 40 40       	r0 = h[r4 + 64] (u)			  ## app_spp_and_le.c:117:5
 1e0312a:    05 20             	if (r0 == 0) goto 10 <start_vibrate+0x18 : 1e03136 >			  ## app_spp_and_le.c:117:5
 1e0312c:    80 f3 97 48       	call 37166 <usr_timeout_del : 1e0c25e >			  ## app_spp_and_le.c:119:3
 1e03130:    00 70             	r0 = 0			  ## app_spp_and_le.c:120:29
 1e03132:    10 f7 40 40       	h[r4 + 64] = r0			  ## app_spp_and_le.c:120:29
 1e03136:    50 69             	r0 = b[r4 + 21] (u)			  ## app_spp_and_le.c:122:5
 1e03138:    37 20             	if (r0 == 0) goto 110 <start_vibrate+0x8A : 1e031a8 >			  ## app_spp_and_le.c:122:5
 1e0313a:    d0 59             	r0 = h[r4 + 58] (u)			  ## app_spp_and_le.c:124:6
 1e0313c:    08 30             	if (r0 != 0) goto 16 <start_vibrate+0x30 : 1e0314e >			  ## app_spp_and_le.c:124:6
 1e0313e:    c0 ff d6 31 e0 01 	r0 = 31470038 <stop_vibrate : 1e031d6 >			  ## app_spp_and_le.c:125:31
 1e03144:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:125:31
 1e03148:    80 f3 32 49       	call 37476 <usr_timeout_add : 1e0c3b0 >			  ## app_spp_and_le.c:125:31
 1e0314c:    d8 59             	h[r4 + 58] = r0			  ## app_spp_and_le.c:125:30
 1e0314e:    d7 17             	call -82 <buzzer_ring : 1e030fe >			  ## app_spp_and_le.c:128:4
 1e03150:    50 69             	r0 = b[r4 + 21] (u)			  ## app_spp_and_le.c:129:6
 1e03152:    c5 ff c0 08 00 00 	r5 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## app_spp_and_le.c:129:6
 1e03158:    10 e0 17 10       	if (r0 != 1) goto 46 <start_vibrate+0x6C : 1e0318a >			  ## app_spp_and_le.c:129:6
 1e0315c:    c1 ff fa 31 e0 01 	r1 = 31470074 <update_timer_for_timerdowm : 1e031fa >			  ## app_spp_and_le.c:131:32
 1e03162:    00 70             	r0 = 0			  ## app_spp_and_le.c:131:32
 1e03164:    02 fb e8 03       	r2 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:131:32
 1e03168:    13 70             	r3 = 1			  ## app_spp_and_le.c:131:32
 1e0316a:    06 70             	r6 = 0			  ## app_spp_and_le.c:131:32
 1e0316c:    80 f3 6b 48       	call 37078 <usr_timer_add : 1e0c246 >			  ## app_spp_and_le.c:131:32
 1e03170:    01 08             	r1 = r0			  ## app_spp_and_le.c:131:32
 1e03172:    f9 59             	h[r4 + 62] = r1			  ## app_spp_and_le.c:131:31
 1e03174:    c2 ff 8b 18 e1 01 	r2 = 31529099 <update_target_end+0x165B : 1e1188b >			  ## app_spp_and_le.c:132:4
 1e0317a:    20 70             	r0 = 2			  ## app_spp_and_le.c:132:4
 1e0317c:    13 08             	r3 = r1			  ## app_spp_and_le.c:132:4
 1e0317e:    80 f3 3f 4e       	call 40062 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:132:4
 1e03182:    11 4a             	r1 = [r5 + 4]			  ## app_spp_and_le.c:135:52
 1e03184:    fe 49             	[r4 + 124] = r6			  ## app_spp_and_le.c:134:18
 1e03186:    50 76             	r0 = 101			  ## app_spp_and_le.c:135:4
 1e03188:    0c 18             	goto 24 <start_vibrate+0x84 : 1e031a2 >			  ## app_spp_and_le.c:135:4
 1e0318a:    20 e0 06 10       	if (r0 != 2) goto 12 <start_vibrate+0x7C : 1e0319a >
 1e0318e:    f0 59             	r0 = h[r4 + 62] (u)			  ## app_spp_and_le.c:139:7
 1e03190:    04 20             	if (r0 == 0) goto 8 <start_vibrate+0x7C : 1e0319a >			  ## app_spp_and_le.c:139:7
 1e03192:    80 f3 77 47       	call 36590 <usr_timer_del : 1e0c084 >			  ## app_spp_and_le.c:141:5
 1e03196:    00 70             	r0 = 0			  ## app_spp_and_le.c:142:31
 1e03198:    f8 59             	h[r4 + 62] = r0			  ## app_spp_and_le.c:142:31
 1e0319a:    df f4 00 49       	[r4 + 124] = 0			  ## app_spp_and_le.c:146:18
 1e0319e:    31 4a             	r1 = [r5 + 12]			  ## app_spp_and_le.c:147:51
 1e031a0:    60 76             	r0 = 102			  ## app_spp_and_le.c:147:4
 1e031a2:    12 70             	r2 = 1
 1e031a4:    bf f3 28 f7       	call -4528 <Report_SKIP_ROPE_MODE : 1e01ff8 >
 1e031a8:    c2 ff ce 18 e1 01 	r2 = 31529166 <update_target_end+0x169E : 1e118ce >			  ## app_spp_and_le.c:151:4
 1e031ae:    20 70             	r0 = 2			  ## app_spp_and_le.c:151:4
 1e031b0:    16 01             	{rets, r6-r4} = [sp++]			  ## app_spp_and_le.c:151:4
 1e031b2:    c0 f3 25 4e       	goto 40010 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:151:4


buzzer_close:
 1e031b6:    34 00             	[--sp] = rets			  ## lost.c:203:0
 1e031b8:    c2 ff 98 1d e1 01 	r2 = 31530392 <update_target_end+0x1B68 : 1e11d98 >			  ## lost.c:204:5
 1e031be:    c3 ff de 1d e1 01 	r3 = 31530462 <update_target_end+0x1BAE : 1e11dde >			  ## lost.c:204:5
 1e031c4:    20 70             	r0 = 2			  ## lost.c:204:5
 1e031c6:    80 f3 1b 4e       	call 39990 <log_print : 1e0ce00 >			  ## lost.c:204:5
 1e031ca:    00 70             	r0 = 0			  ## lost.c:205:2
 1e031cc:    01 70             	r1 = 0			  ## lost.c:205:2
 1e031ce:    60 17             	call -320 <buzzer_ctrl : 1e03090 >			  ## lost.c:205:2
 1e031d0:    10 70             	r0 = 1			  ## lost.c:206:5
 1e031d2:    88 01             	{rets} = [sp++]			  ## lost.c:206:5
 1e031d4:    ca 1e             	goto -620 <set_enter_lp : 1e02f6a >			  ## lost.c:206:5


stop_vibrate:
 1e031d6:    74 01             	[--sp] = {rets, r4}			  ## app_spp_and_le.c:102:0
 1e031d8:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:102:0
 1e031de:    d0 59             	r0 = h[r4 + 58] (u)			  ## app_spp_and_le.c:104:5
 1e031e0:    02 20             	if (r0 == 0) goto 4 <stop_vibrate+0x10 : 1e031e6 >			  ## app_spp_and_le.c:104:5
 1e031e2:    80 f3 3c 48       	call 36984 <usr_timeout_del : 1e0c25e >			  ## app_spp_and_le.c:106:3
 1e031e6:    e7 17             	call -50 <buzzer_close : 1e031b6 >			  ## app_spp_and_le.c:108:2
 1e031e8:    00 70             	r0 = 0			  ## app_spp_and_le.c:109:28
 1e031ea:    d8 59             	h[r4 + 58] = r0			  ## app_spp_and_le.c:109:28
 1e031ec:    c2 ff f2 18 e1 01 	r2 = 31529202 <update_target_end+0x16C2 : 1e118f2 >			  ## app_spp_and_le.c:110:2
 1e031f2:    20 70             	r0 = 2			  ## app_spp_and_le.c:110:2
 1e031f4:    14 01             	{rets, r4} = [sp++]			  ## app_spp_and_le.c:110:2
 1e031f6:    c0 f3 03 4e       	goto 39942 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:110:2


update_timer_for_timerdowm:
 1e031fa:    c1 ff c0 08 00 00 	r1 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## app_spp_and_le.c:94:0
 1e03200:    00 42             	r0 = [r1 + 0]			  ## app_spp_and_le.c:95:5
 1e03202:    03 20             	if (r0 == 0) goto 6 <update_timer_for_timerdowm+0x10 : 1e0320a >			  ## app_spp_and_le.c:95:5
 1e03204:    f0 8f             	r0 += -1			  ## app_spp_and_le.c:96:28
 1e03206:    08 42             	[r1 + 0] = r0			  ## app_spp_and_le.c:96:28
 1e03208:    01 18             	goto 2 <update_timer_for_timerdowm+0x12 : 1e0320c >			  ## app_spp_and_le.c:96:28
 1e0320a:    00 70             	r0 = 0
 1e0320c:    11 70             	r1 = 1			  ## app_spp_and_le.c:98:2
 1e0320e:    ff f3 13 f7       	goto -4570 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_spp_and_le.c:98:2


lib_btstack_version:
 1e03212:    00 70             	r0 = 0			  ## version.c:25:0
 1e03214:    20 00             	rts			  ## version.c:26:5


lib_media_version:
 1e03216:    00 70             	r0 = 0			  ## version.c:29:0
 1e03218:    20 00             	rts			  ## version.c:30:5


custom_idle_query:
 1e0321a:    c0 ff 5a 08 00 00 	r0 = 2138 <can_enter_lp : 85a >			  ## board_ac632n_demo.c:674:0
 1e03220:    01 60             	r1 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:675:8
 1e03222:    10 70             	r0 = 1			  ## board_ac632n_demo.c:678:9
 1e03224:    01 32             	if (r1 != 0) goto 2 <custom_idle_query+0xE : 1e03228 >			  ## board_ac632n_demo.c:678:9
 1e03226:    00 70             	r0 = 0			  ## board_ac632n_demo.c:678:9
 1e03228:    20 00             	rts			  ## board_ac632n_demo.c:680:1


port_protect:
 1e0322a:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:345:0
 1e0322c:    f1 ef 10 00       	if (r1 == -1) goto 32 <port_protect+0x26 : 1e03250 >			  ## board_ac632n_demo.c:345:0
 1e03230:    ca d0             	r2 = r1 >> 3			  ## board_ac632n_demo.c:349:5
 1e03232:    c3 ff fe ff ff 1f 	r3 = 536870910 <bank_code_load_addr+0x1E13EA : 1fffffe >			  ## board_ac632n_demo.c:349:25
 1e03238:    52 b7             	r2 &= r3			  ## board_ac632n_demo.c:349:25
 1e0323a:    03 f8 00 02       	r3 = h[r0+r2] (u)			  ## board_ac632n_demo.c:349:41
 1e0323e:    21 fd 0f 19       	r1 = r1 & 15			  ## board_ac632n_demo.c:349:45
 1e03242:    14 70             	r4 = 1
 1e03244:    f8 fd 10 14       	r1 = r4 << r1			  ## board_ac632n_demo.c:349:45
 1e03248:    e3 fd 10 13       	r1 = r3 & ~r1			  ## board_ac632n_demo.c:349:41
 1e0324c:    11 f8 00 02       	h[r0+r2] = r1			  ## board_ac632n_demo.c:349:41
 1e03250:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:350:1


gpio_dir:
 1e03252:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:351:0
 1e03254:    24 08             	r4 = r2			  ## gpio.c:351:0
 1e03256:    15 08             	r5 = r1			  ## gpio.c:351:0
 1e03258:    10 e3 12 30       	if (r0 < 49) goto 36 <gpio_dir+0x2E : 1e03280 >			  ## gpio.c:354:9
 1e0325c:    1f 2a             	if (r5 == 0) goto 62 <gpio_dir+0x4A : 1e0329c >
 1e0325e:    06 70             	r6 = 0
 1e03260:    17 70             	r7 = 1
 1e03262:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:357:27
 1e03266:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:357:27
 1e0326a:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_dir+0x20 : 1e03272 >			  ## gpio.c:357:21
 1e0326e:    11 70             	r1 = 1			  ## gpio.c:358:21
 1e03270:    01 18             	goto 2 <gpio_dir+0x22 : 1e03274 >			  ## gpio.c:358:21
 1e03272:    01 70             	r1 = 0			  ## gpio.c:360:21
 1e03274:    bf f3 53 f4       	call -5978 <usb_set_direction : 1e01b1e >
 1e03278:    16 80             	r6 += 1			  ## gpio.c:356:45
 1e0327a:    65 f2 f2 1f       	if (r5 != r6) goto -28 <gpio_dir+0x10 : 1e03262 >
 1e0327e:    57 01             	{pc, r7-r4} = [sp++]
 1e03280:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e03282:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e03288:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e0328a:    c1 ff a8 30 e1 01 	r1 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e03290:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e03294:    03 20             	if (r0 == 0) goto 6 <gpio_dir+0x4A : 1e0329c >
 1e03296:    21 40             	r1 = [r0 + 8]			  ## gpio.c:382:18
 1e03298:    51 b8             	r1 |= r4			  ## gpio.c:391:13
 1e0329a:    29 40             	[r0 + 8] = r1			  ## gpio.c:397:12
 1e0329c:    57 01             	{pc, r7-r4} = [sp++]


usb_set_pull_up:
 1e0329e:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:140:0
 1e032a4:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_pull_up+0x1A : 1e032b8 >			  ## gpio.c:141:9
 1e032a8:    20 80             	r0 += 2
 1e032aa:    13 70             	r3 = 1
 1e032ac:    f8 fd 00 03       	r0 = r3 << r0
 1e032b0:    0b 22             	if (r1 == 0) goto 22 <usb_set_pull_up+0x2A : 1e032c8 >			  ## gpio.c:143:13
 1e032b2:    91 44             	r1 = [r2 + 36]			  ## gpio.c:144:30
 1e032b4:    50 b2             	r0 |= r1			  ## gpio.c:144:30
 1e032b6:    0b 18             	goto 22 <usb_set_pull_up+0x30 : 1e032ce >			  ## gpio.c:144:30
 1e032b8:    40 80             	r0 += 4
 1e032ba:    13 70             	r3 = 1
 1e032bc:    f8 fd 00 03       	r0 = r3 << r0
 1e032c0:    08 22             	if (r1 == 0) goto 16 <usb_set_pull_up+0x34 : 1e032d2 >			  ## gpio.c:150:13
 1e032c2:    01 44             	r1 = [r2 + 0]			  ## gpio.c:151:29
 1e032c4:    50 b2             	r0 |= r1			  ## gpio.c:151:29
 1e032c6:    08 18             	goto 16 <usb_set_pull_up+0x3A : 1e032d8 >			  ## gpio.c:151:29
 1e032c8:    91 44             	r1 = [r2 + 36]			  ## gpio.c:146:30
 1e032ca:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:146:30
 1e032ce:    98 44             	[r2 + 36] = r0
 1e032d0:    20 00             	rts
 1e032d2:    01 44             	r1 = [r2 + 0]			  ## gpio.c:153:29
 1e032d4:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:153:29
 1e032d8:    08 44             	[r2 + 0] = r0
 1e032da:    20 00             	rts


gpio_set_pu:
 1e032dc:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:598:0
 1e032de:    24 08             	r4 = r2			  ## gpio.c:598:0
 1e032e0:    15 08             	r5 = r1			  ## gpio.c:598:0
 1e032e2:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_set_pu+0x2C : 1e03308 >			  ## gpio.c:602:9
 1e032e6:    1e 2a             	if (r5 == 0) goto 60 <gpio_set_pu+0x48 : 1e03324 >
 1e032e8:    06 70             	r6 = 0
 1e032ea:    17 70             	r7 = 1
 1e032ec:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:605:27
 1e032f0:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:605:27
 1e032f4:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_set_pu+0x20 : 1e032fc >			  ## gpio.c:605:21
 1e032f8:    11 70             	r1 = 1			  ## gpio.c:606:21
 1e032fa:    01 18             	goto 2 <gpio_set_pu+0x22 : 1e032fe >			  ## gpio.c:606:21
 1e032fc:    01 70             	r1 = 0			  ## gpio.c:608:21
 1e032fe:    cf 17             	call -98 <usb_set_pull_up : 1e0329e >
 1e03300:    16 80             	r6 += 1			  ## gpio.c:604:45
 1e03302:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_set_pu+0x10 : 1e032ec >
 1e03306:    57 01             	{pc, r7-r4} = [sp++]
 1e03308:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e0330a:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e03310:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e03312:    c1 ff a8 30 e1 01 	r1 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e03318:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e0331c:    03 20             	if (r0 == 0) goto 6 <gpio_set_pu+0x48 : 1e03324 >
 1e0331e:    41 40             	r1 = [r0 + 16]			  ## gpio.c:630:18
 1e03320:    51 b9             	r1 &= r4			  ## gpio.c:636:13
 1e03322:    49 40             	[r0 + 16] = r1			  ## gpio.c:646:11
 1e03324:    57 01             	{pc, r7-r4} = [sp++]


gpio_set_pd:
 1e03326:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:684:0
 1e03328:    24 08             	r4 = r2			  ## gpio.c:684:0
 1e0332a:    15 08             	r5 = r1			  ## gpio.c:684:0
 1e0332c:    10 e3 12 30       	if (r0 < 49) goto 36 <gpio_set_pd+0x2E : 1e03354 >			  ## gpio.c:688:9
 1e03330:    1f 2a             	if (r5 == 0) goto 62 <gpio_set_pd+0x4A : 1e03370 >
 1e03332:    06 70             	r6 = 0
 1e03334:    17 70             	r7 = 1
 1e03336:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:691:27
 1e0333a:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:691:27
 1e0333e:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_set_pd+0x20 : 1e03346 >			  ## gpio.c:691:21
 1e03342:    11 70             	r1 = 1			  ## gpio.c:692:21
 1e03344:    01 18             	goto 2 <gpio_set_pd+0x22 : 1e03348 >			  ## gpio.c:692:21
 1e03346:    01 70             	r1 = 0			  ## gpio.c:694:21
 1e03348:    bf f3 77 f3       	call -6418 <usb_set_pull_down : 1e01a3a >
 1e0334c:    16 80             	r6 += 1			  ## gpio.c:690:45
 1e0334e:    65 f2 f2 1f       	if (r5 != r6) goto -28 <gpio_set_pd+0x10 : 1e03336 >
 1e03352:    57 01             	{pc, r7-r4} = [sp++]
 1e03354:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e03356:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e0335c:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e0335e:    c1 ff a8 30 e1 01 	r1 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e03364:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e03368:    03 20             	if (r0 == 0) goto 6 <gpio_set_pd+0x4A : 1e03370 >
 1e0336a:    51 40             	r1 = [r0 + 20]			  ## gpio.c:716:18
 1e0336c:    51 b9             	r1 &= r4			  ## gpio.c:722:13
 1e0336e:    59 40             	[r0 + 20] = r1			  ## gpio.c:731:11
 1e03370:    57 01             	{pc, r7-r4} = [sp++]


usb_set_die:
 1e03372:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:180:0
 1e03378:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_die+0x1A : 1e0338c >			  ## gpio.c:181:9
 1e0337c:    60 80             	r0 += 6
 1e0337e:    13 70             	r3 = 1
 1e03380:    f8 fd 00 03       	r0 = r3 << r0
 1e03384:    0b 22             	if (r1 == 0) goto 22 <usb_set_die+0x2A : 1e0339c >			  ## gpio.c:183:13
 1e03386:    91 44             	r1 = [r2 + 36]			  ## gpio.c:184:30
 1e03388:    50 b2             	r0 |= r1			  ## gpio.c:184:30
 1e0338a:    0b 18             	goto 22 <usb_set_die+0x30 : 1e033a2 >			  ## gpio.c:184:30
 1e0338c:    80 80             	r0 += 8
 1e0338e:    13 70             	r3 = 1
 1e03390:    f8 fd 00 03       	r0 = r3 << r0
 1e03394:    08 22             	if (r1 == 0) goto 16 <usb_set_die+0x34 : 1e033a6 >			  ## gpio.c:190:13
 1e03396:    01 44             	r1 = [r2 + 0]			  ## gpio.c:191:29
 1e03398:    50 b2             	r0 |= r1			  ## gpio.c:191:29
 1e0339a:    08 18             	goto 16 <usb_set_die+0x3A : 1e033ac >			  ## gpio.c:191:29
 1e0339c:    91 44             	r1 = [r2 + 36]			  ## gpio.c:186:30
 1e0339e:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:186:30
 1e033a2:    98 44             	[r2 + 36] = r0
 1e033a4:    20 00             	rts
 1e033a6:    01 44             	r1 = [r2 + 0]			  ## gpio.c:193:29
 1e033a8:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:193:29
 1e033ac:    08 44             	[r2 + 0] = r0
 1e033ae:    20 00             	rts


gpio_die:
 1e033b0:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:862:0
 1e033b2:    24 08             	r4 = r2			  ## gpio.c:862:0
 1e033b4:    15 08             	r5 = r1			  ## gpio.c:862:0
 1e033b6:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_die+0x2C : 1e033dc >			  ## gpio.c:866:9
 1e033ba:    1e 2a             	if (r5 == 0) goto 60 <gpio_die+0x48 : 1e033f8 >
 1e033bc:    06 70             	r6 = 0
 1e033be:    17 70             	r7 = 1
 1e033c0:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:869:27
 1e033c4:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:869:27
 1e033c8:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_die+0x20 : 1e033d0 >			  ## gpio.c:869:21
 1e033cc:    11 70             	r1 = 1			  ## gpio.c:870:21
 1e033ce:    01 18             	goto 2 <gpio_die+0x22 : 1e033d2 >			  ## gpio.c:870:21
 1e033d0:    01 70             	r1 = 0			  ## gpio.c:872:21
 1e033d2:    cf 17             	call -98 <usb_set_die : 1e03372 >
 1e033d4:    16 80             	r6 += 1			  ## gpio.c:868:45
 1e033d6:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_die+0x10 : 1e033c0 >
 1e033da:    57 01             	{pc, r7-r4} = [sp++]
 1e033dc:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e033de:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e033e4:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e033e6:    c1 ff a8 30 e1 01 	r1 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e033ec:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e033f0:    03 20             	if (r0 == 0) goto 6 <gpio_die+0x48 : 1e033f8 >
 1e033f2:    31 40             	r1 = [r0 + 12]			  ## gpio.c:894:18
 1e033f4:    51 b9             	r1 &= r4			  ## gpio.c:900:13
 1e033f6:    39 40             	[r0 + 12] = r1			  ## gpio.c:909:12
 1e033f8:    57 01             	{pc, r7-r4} = [sp++]


gpio_dieh:
 1e033fa:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:916:0
 1e033fc:    24 08             	r4 = r2			  ## gpio.c:916:0
 1e033fe:    15 08             	r5 = r1			  ## gpio.c:916:0
 1e03400:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_dieh+0x2C : 1e03426 >			  ## gpio.c:921:9
 1e03404:    1e 2a             	if (r5 == 0) goto 60 <gpio_dieh+0x48 : 1e03442 >
 1e03406:    06 70             	r6 = 0
 1e03408:    17 70             	r7 = 1
 1e0340a:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:924:27
 1e0340e:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:924:27
 1e03412:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_dieh+0x20 : 1e0341a >			  ## gpio.c:924:21
 1e03416:    11 70             	r1 = 1			  ## gpio.c:925:21
 1e03418:    01 18             	goto 2 <gpio_dieh+0x22 : 1e0341c >			  ## gpio.c:925:21
 1e0341a:    01 70             	r1 = 0			  ## gpio.c:927:21
 1e0341c:    e4 15             	call -1080 <usb_set_dieh : 1e02fe6 >
 1e0341e:    16 80             	r6 += 1			  ## gpio.c:923:45
 1e03420:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_dieh+0x10 : 1e0340a >
 1e03424:    57 01             	{pc, r7-r4} = [sp++]
 1e03426:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e03428:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## gpio.c:49:46
 1e0342e:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e03430:    c1 ff a8 30 e1 01 	r1 = 31535272 <gpio_regs : 1e130a8 >			  ## gpio.c:49:31
 1e03436:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e0343a:    03 20             	if (r0 == 0) goto 6 <gpio_dieh+0x48 : 1e03442 >
 1e0343c:    81 40             	r1 = [r0 + 32]			  ## gpio.c:950:18
 1e0343e:    51 b9             	r1 &= r4			  ## gpio.c:956:13
 1e03440:    89 40             	[r0 + 32] = r1			  ## gpio.c:965:13
 1e03442:    57 01             	{pc, r7-r4} = [sp++]


close_gpio:
 1e03444:    76 01             	[--sp] = {rets, r6-r4}			  ## board_ac632n_demo.c:355:0
 1e03446:    fc 0b             	sp += -8			  ## board_ac632n_demo.c:355:0
 1e03448:    c0 ff f4 2b e1 01 	r0 = 31534068 <wk_param+0x4C : 1e12bf4 >			  ## board_ac632n_demo.c:356:9
 1e0344e:    21 50             	r1 = h[r0 + 4] (u)			  ## board_ac632n_demo.c:356:9
 1e03450:    12 50             	r2 = h[r0 + 2] (u)			  ## board_ac632n_demo.c:356:9
 1e03452:    00 50             	r0 = h[r0 + 0] (u)			  ## board_ac632n_demo.c:356:9
 1e03454:    91 f5 04 00       	h[sp+4] = r1			  ## board_ac632n_demo.c:356:9
 1e03458:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## board_ac632n_demo.c:356:9
 1e0345c:    08 02             	[sp] = r0			  ## board_ac632n_demo.c:356:9
 1e0345e:    c0 ff 92 18 1a 00 	r0 = 1710226 <uECC_vli_cmp_unsafe+0x9A896 : 1a1892 >			  ## board_ac632n_demo.c:362:8
 1e03464:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:362:8
 1e03466:    03 f3 04 00       	if ((r0 & 8) == 0) goto 8 <close_gpio+0x2E : 1e03472 >			  ## board_ac632n_demo.c:362:8
 1e0346a:    00 fb fb 03       	r0 = 1019 <BTCTLER_LE_RAM_TOTAL+0x23 : 3fb >			  ## board_ac632n_demo.c:349:41
 1e0346e:    90 f5 02 00       	h[sp+2] = r0			  ## board_ac632n_demo.c:349:41
 1e03472:    c0 ff 48 18 1a 00 	r0 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## board_ac632n_demo.c:367:8
 1e03478:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:367:8
 1e0347a:    00 f3 19 00       	if ((r0 & 1) == 0) goto 50 <close_gpio+0x6C : 1e034b0 >			  ## board_ac632n_demo.c:367:8
 1e0347e:    c0 ff c0 18 1a 00 	r0 = 1710272 <uECC_vli_cmp_unsafe+0x9A8C4 : 1a18c0 >			  ## board_ac632n_demo.c:369:23
 1e03484:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:369:23
 1e03486:    01 fc ff ff       	r1 = r0 + -1			  ## board_ac632n_demo.c:370:28
 1e0348a:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:370:28
 1e0348c:    91 e0 0e 90       	if (r1 <= 9) goto 28 <close_gpio+0x68 : 1e034ac >			  ## board_ac632n_demo.c:370:28
 1e03490:    01 fc f5 ff       	r1 = r0 + -11			  ## board_ac632n_demo.c:373:35
 1e03494:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:373:35
 1e03496:    91 e0 02 80       	if (r1 > 9) goto 4 <close_gpio+0x5A : 1e0349e >			  ## board_ac632n_demo.c:373:35
 1e0349a:    50 80             	r0 += 5			  ## board_ac632n_demo.c:374:52
 1e0349c:    06 18             	goto 12 <close_gpio+0x66 : 1e034aa >			  ## board_ac632n_demo.c:374:52
 1e0349e:    01 fc eb ff       	r1 = r0 + -21			  ## board_ac632n_demo.c:376:35
 1e034a2:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:376:35
 1e034a4:    41 e0 79 80       	if (r1 > 4) goto 242 <close_gpio+0x156 : 1e0359a >			  ## board_ac632n_demo.c:376:35
 1e034a8:    b0 80             	r0 += 11			  ## board_ac632n_demo.c:377:52
 1e034aa:    01 04             	r1 = r0.b0 (u)
 1e034ac:    00 a0             	r0 = sp + 0
 1e034ae:    bd 16             	call -646 <port_protect : 1e0322a >
 1e034b0:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## board_ac632n_demo.c:349:41
 1e034b4:    70 b1             	r0 &= 4294967291			  ## board_ac632n_demo.c:349:41
 1e034b6:    90 f5 06 00       	h[sp+6] = r0			  ## board_ac632n_demo.c:349:41
 1e034ba:    86 f5 02 00       	r6 = h[sp+2] (u)			  ## board_ac632n_demo.c:349:41
 1e034be:    34 fd a0 69       	r4 = r6 & 4294967135			  ## board_ac632n_demo.c:349:41
 1e034c2:    94 f5 02 00       	h[sp+2] = r4			  ## board_ac632n_demo.c:349:41
 1e034c6:    85 f5 00 00       	r5 = h[sp] (u)			  ## board_ac632n_demo.c:349:41
 1e034ca:    32 fd 01 59       	r2 = r5 & 4294967294			  ## board_ac632n_demo.c:419:27
 1e034ce:    00 70             	r0 = 0			  ## board_ac632n_demo.c:419:5
 1e034d0:    91 70             	r1 = 9			  ## board_ac632n_demo.c:419:5
 1e034d2:    bf 16             	call -642 <gpio_dir : 1e03252 >			  ## board_ac632n_demo.c:419:5
 1e034d4:    d0 bb             	r0 = ~r5			  ## board_ac632n_demo.c:349:41
 1e034d6:    c1 ff 01 00 ff ff 	r1 = 4294901761 <bank_code_load_addr+0x1D13ED : 1ff0001 >			  ## board_ac632n_demo.c:419:27
 1e034dc:    e0 fd 10 50       	r5 = r0 | r1			  ## board_ac632n_demo.c:420:30
 1e034e0:    00 70             	r0 = 0			  ## board_ac632n_demo.c:420:5
 1e034e2:    91 70             	r1 = 9			  ## board_ac632n_demo.c:420:5
 1e034e4:    52 08             	r2 = r5			  ## board_ac632n_demo.c:420:5
 1e034e6:    fa 16             	call -524 <gpio_set_pu : 1e032dc >			  ## board_ac632n_demo.c:420:5
 1e034e8:    00 70             	r0 = 0			  ## board_ac632n_demo.c:421:5
 1e034ea:    91 70             	r1 = 9			  ## board_ac632n_demo.c:421:5
 1e034ec:    52 08             	r2 = r5			  ## board_ac632n_demo.c:421:5
 1e034ee:    1b 17             	call -458 <gpio_set_pd : 1e03326 >			  ## board_ac632n_demo.c:421:5
 1e034f0:    00 70             	r0 = 0			  ## board_ac632n_demo.c:422:5
 1e034f2:    91 70             	r1 = 9			  ## board_ac632n_demo.c:422:5
 1e034f4:    52 08             	r2 = r5			  ## board_ac632n_demo.c:422:5
 1e034f6:    5c 17             	call -328 <gpio_die : 1e033b0 >			  ## board_ac632n_demo.c:422:5
 1e034f8:    00 70             	r0 = 0			  ## board_ac632n_demo.c:423:5
 1e034fa:    91 70             	r1 = 9			  ## board_ac632n_demo.c:423:5
 1e034fc:    52 08             	r2 = r5			  ## board_ac632n_demo.c:423:5
 1e034fe:    7d 17             	call -262 <gpio_dieh : 1e033fa >			  ## board_ac632n_demo.c:423:5
 1e03500:    00 71             	r0 = 16			  ## board_ac632n_demo.c:425:5
 1e03502:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:425:5
 1e03504:    42 08             	r2 = r4			  ## board_ac632n_demo.c:425:5
 1e03506:    a5 16             	call -694 <gpio_dir : 1e03252 >			  ## board_ac632n_demo.c:425:5
 1e03508:    d0 bd             	r0 = ~r6			  ## board_ac632n_demo.c:349:41
 1e0350a:    c1 ff a0 00 ff ff 	r1 = 4294901920 <bank_code_load_addr+0x1D148C : 1ff00a0 >			  ## board_ac632n_demo.c:349:41
 1e03510:    e0 fd 10 40       	r4 = r0 | r1			  ## board_ac632n_demo.c:426:31
 1e03514:    00 71             	r0 = 16			  ## board_ac632n_demo.c:426:5
 1e03516:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:426:5
 1e03518:    42 08             	r2 = r4			  ## board_ac632n_demo.c:426:5
 1e0351a:    e0 16             	call -576 <gpio_set_pu : 1e032dc >			  ## board_ac632n_demo.c:426:5
 1e0351c:    00 71             	r0 = 16			  ## board_ac632n_demo.c:427:5
 1e0351e:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:427:5
 1e03520:    42 08             	r2 = r4			  ## board_ac632n_demo.c:427:5
 1e03522:    01 17             	call -510 <gpio_set_pd : 1e03326 >			  ## board_ac632n_demo.c:427:5
 1e03524:    00 71             	r0 = 16			  ## board_ac632n_demo.c:428:5
 1e03526:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:428:5
 1e03528:    42 08             	r2 = r4			  ## board_ac632n_demo.c:428:5
 1e0352a:    42 17             	call -380 <gpio_die : 1e033b0 >			  ## board_ac632n_demo.c:428:5
 1e0352c:    00 71             	r0 = 16			  ## board_ac632n_demo.c:429:5
 1e0352e:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:429:5
 1e03530:    42 08             	r2 = r4			  ## board_ac632n_demo.c:429:5
 1e03532:    63 17             	call -314 <gpio_dieh : 1e033fa >			  ## board_ac632n_demo.c:429:5
 1e03534:    c1 ff 00 18 1e 00 	r1 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >
 1e0353a:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e0353c:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e0353e:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03540:    10 fc 00 3c       	r0 = r1 + 15360			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03544:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03548:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e0354a:    72 b2             	r2 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e0354c:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e0354e:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e03550:    72 b3             	r2 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e03552:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e03554:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03556:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03558:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e0355a:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e0355e:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:113:29
 1e03560:    72 b1             	r2 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:113:29
 1e03562:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:113:29
 1e03564:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e03566:    72 b4             	r2 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e03568:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e0356a:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e0356c:    72 b5             	r2 &= 4294966271			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e0356e:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e03570:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e03572:    f2 b2             	r2 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e03574:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e03576:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e03578:    f2 b3             	r2 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e0357a:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e0357c:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e0357e:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03580:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03582:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e03586:    00 f4 08 09       	[r0 + 0] |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e0358a:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e0358c:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e0358e:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e03590:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e03592:    f1 b5             	r1 &= 4294965247			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e03594:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e03596:    04 0a             	sp += 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e03598:    56 01             	{pc, r6-r4} = [sp++]			  ## board_ac632n_demo.c:454:1
 1e0359a:    60 8e             	r0 += -26			  ## board_ac632n_demo.c:379:18
 1e0359c:    30 e0 88 8f       	if (r0 > 3) goto -240 <close_gpio+0x6C : 1e034b0 >			  ## board_ac632n_demo.c:379:18
 1e035a0:    a0 00             	tbb [r0]


.GJTIS302_0_0_:
 1e035a2:    02     < 2 : 0x2 >
 1e035a3:    02     < 2 : 0x2 >
 1e035a4:    02     < 2 : 0x2 >
 1e035a5:    02     < 2 : 0x2 >
 1e035a6:    00 70             	r0 = 0
 1e035a8:    90 f5 06 00       	h[sp+6] = r0
 1e035ac:    81 1f             	goto -254 <close_gpio+0x6C : 1e034b0 >


sleep_enter_callback:
 1e035ae:    10 e0 03 10       	if (r0 != 1) goto 6 <sleep_enter_callback+0xA : 1e035b8 >			  ## board_ac632n_demo.c:570:0
 1e035b2:    c0 73             	r0 = 60			  ## board_ac632n_demo.c:573:9
 1e035b4:    c0 f3 75 4d       	goto 39658 <putchar : 1e0d0a2 >			  ## board_ac632n_demo.c:573:9
 1e035b8:    45 1f             	goto -374 <close_gpio : 1e03444 >			  ## board_ac632n_demo.c:577:9


sleep_exit_callback:
 1e035ba:    e0 73             	r0 = 62			  ## board_ac632n_demo.c:564:0
 1e035bc:    c0 f3 71 4d       	goto 39650 <putchar : 1e0d0a2 >			  ## board_ac632n_demo.c:565:5


mask_softflag_config:
 1e035c0:    c1 ff 30 18 1a 00 	r1 = 1710128 <uECC_vli_cmp_unsafe+0x9A834 : 1a1830 >			  ## power_hw.c:1234:0
 1e035c6:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:1235:17
 1e035c8:    12 b3             	r2 |= 64			  ## power_hw.c:1235:17
 1e035ca:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:1235:17
 1e035cc:    02 60             	r2 = b[r0 + 0] (u)			  ## power_hw.c:1236:38
 1e035ce:    8a 62             	b[r1 + 8] = r2			  ## power_hw.c:1236:20
 1e035d0:    12 60             	r2 = b[r0 + 1] (u)			  ## power_hw.c:1237:38
 1e035d2:    9a 62             	b[r1 + 9] = r2			  ## power_hw.c:1237:20
 1e035d4:    22 60             	r2 = b[r0 + 2] (u)			  ## power_hw.c:1238:38
 1e035d6:    aa 63             	b[r1 + 26] = r2			  ## power_hw.c:1238:20
 1e035d8:    30 60             	r0 = b[r0 + 3] (u)			  ## power_hw.c:1239:38
 1e035da:    b8 63             	b[r1 + 27] = r0			  ## power_hw.c:1239:20
 1e035dc:    20 00             	rts			  ## power_hw.c:1240:1


board_set_soft_poweroff:
 1e035de:    34 00             	[--sp] = rets			  ## board_ac632n_demo.c:548:0
 1e035e0:    fe 0b             	sp += -4			  ## board_ac632n_demo.c:548:0
 1e035e2:    c2 ff 4b 1d e1 01 	r2 = 31530315 <update_target_end+0x1B1B : 1e11d4b >			  ## board_ac632n_demo.c:549:5
 1e035e8:    c3 ff 5f 1d e1 01 	r3 = 31530335 <update_target_end+0x1B2F : 1e11d5f >			  ## board_ac632n_demo.c:549:5
 1e035ee:    20 70             	r0 = 2			  ## board_ac632n_demo.c:549:5
 1e035f0:    80 f3 06 4c       	call 38924 <log_print : 1e0ce00 >			  ## board_ac632n_demo.c:549:5
 1e035f4:    c0 ff 14 54 1e 00 	r0 = 1987604 <uECC_vli_cmp_unsafe+0xDE418 : 1e5414 >			  ## board_ac632n_demo.c:295:58
 1e035fa:    00 40             	r0 = [r0 + 0]			  ## board_ac632n_demo.c:295:58
 1e035fc:    80 d3             	r0 = r0 >> 14			  ## board_ac632n_demo.c:295:46
 1e035fe:    20 fd 04 09       	r0 = r0 & 4			  ## board_ac632n_demo.c:295:46
 1e03602:    d0 f5 00 00       	b[sp] = r0			  ## board_ac632n_demo.c:295:46
 1e03606:    00 70             	r0 = 0			  ## board_ac632n_demo.c:301:37
 1e03608:    d0 f5 01 00       	b[sp+1] = r0			  ## board_ac632n_demo.c:301:37
 1e0360c:    d0 f5 02 00       	b[sp+2] = r0			  ## board_ac632n_demo.c:304:38
 1e03610:    d0 f5 03 00       	b[sp+3] = r0			  ## board_ac632n_demo.c:307:38
 1e03614:    00 a0             	r0 = sp + 0			  ## board_ac632n_demo.c:307:38
 1e03616:    d4 17             	call -88 <mask_softflag_config : 1e035c0 >			  ## board_ac632n_demo.c:308:5
 1e03618:    15 17             	call -470 <close_gpio : 1e03444 >			  ## board_ac632n_demo.c:556:5
 1e0361a:    02 0a             	sp += 4			  ## board_ac632n_demo.c:556:5
 1e0361c:    30 00             	pc = [sp++]			  ## board_ac632n_demo.c:557:1


aport_wakeup_callback:
 1e0361e:    75 01             	[--sp] = {rets, r5, r4}			  ## board_ac632n_demo.c:775:0
 1e03620:    fc 0b             	sp += -8			  ## board_ac632n_demo.c:775:0
 1e03622:    14 08             	r4 = r1			  ## board_ac632n_demo.c:775:0
 1e03624:    01 08             	r1 = r0			  ## board_ac632n_demo.c:775:0
 1e03626:    1c 02             	[sp+4] = r4			  ## board_ac632n_demo.c:776:2
 1e03628:    c2 ff 1b 1d e1 01 	r2 = 31530267 <update_target_end+0x1AEB : 1e11d1b >			  ## board_ac632n_demo.c:776:2
 1e0362e:    c3 ff 35 1d e1 01 	r3 = 31530293 <update_target_end+0x1B05 : 1e11d35 >			  ## board_ac632n_demo.c:776:2
 1e03634:    20 70             	r0 = 2			  ## board_ac632n_demo.c:776:2
 1e03636:    09 02             	[sp] = r1			  ## board_ac632n_demo.c:776:2
 1e03638:    80 f3 e2 4b       	call 38852 <log_print : 1e0ce00 >			  ## board_ac632n_demo.c:776:2
 1e0363c:    40 fc c9 ff       	r0 = r4 + -55			  ## board_ac632n_demo.c:778:5
 1e03640:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## board_ac632n_demo.c:778:5
 1e03646:    20 e0 11 20       	if (r0 >= 2) goto 34 <aport_wakeup_callback+0x4E : 1e0366c >			  ## board_ac632n_demo.c:778:5
 1e0364a:    00 f9 d1 51       	r0 = b[r5 + 465] (u)			  ## charge.c:302:18
 1e0364e:    22 20             	if (r0 == 0) goto 68 <aport_wakeup_callback+0x76 : 1e03694 >			  ## charge.c:302:18
 1e03650:    00 f6 d4 51       	r0 = [r5 + 468]			  ## charge.c:306:17
 1e03654:    1f 30             	if (r0 != 0) goto 62 <aport_wakeup_callback+0x76 : 1e03694 >			  ## charge.c:306:17
 1e03656:    c1 ff f4 05 e0 01 	r1 = 31458804 <ldo5v_detect : 1e005f4 >			  ## charge.c:307:31
 1e0365c:    00 70             	r0 = 0			  ## charge.c:307:31
 1e0365e:    22 70             	r2 = 2			  ## charge.c:307:31
 1e03660:    13 70             	r3 = 1			  ## charge.c:307:31
 1e03662:    80 f3 f0 45       	call 35808 <usr_timer_add : 1e0c246 >			  ## charge.c:307:31
 1e03666:    10 f6 d4 51       	[r5 + 468] = r0			  ## charge.c:307:29
 1e0366a:    14 18             	goto 40 <aport_wakeup_callback+0x76 : 1e03694 >			  ## charge.c:307:29
 1e0366c:    54 e3 12 10       	if (r4 != 53) goto 36 <aport_wakeup_callback+0x76 : 1e03694 >
 1e03670:    00 f9 d1 51       	r0 = b[r5 + 465] (u)			  ## charge.c:313:18
 1e03674:    0f 20             	if (r0 == 0) goto 30 <aport_wakeup_callback+0x76 : 1e03694 >			  ## charge.c:313:18
 1e03676:    bf f3 80 e8       	call -12032 <power_wakeup_disable_with_port : 1e0077a >			  ## charge.c:317:5
 1e0367a:    00 f6 d8 51       	r0 = [r5 + 472]			  ## charge.c:318:17
 1e0367e:    0a 30             	if (r0 != 0) goto 20 <aport_wakeup_callback+0x76 : 1e03694 >			  ## charge.c:318:17
 1e03680:    c1 ff 22 07 e0 01 	r1 = 31459106 <charge_full_detect : 1e00722 >			  ## charge.c:319:32
 1e03686:    00 70             	r0 = 0			  ## charge.c:319:32
 1e03688:    22 70             	r2 = 2			  ## charge.c:319:32
 1e0368a:    13 70             	r3 = 1			  ## charge.c:319:32
 1e0368c:    80 f3 db 45       	call 35766 <usr_timer_add : 1e0c246 >			  ## charge.c:319:32
 1e03690:    10 f6 d8 51       	[r5 + 472] = r0			  ## charge.c:319:30
 1e03694:    04 0a             	sp += 8
 1e03696:    55 01             	{pc, r5, r4} = [sp++]			  ## board_ac632n_demo.c:788:1


port_wakeup_callback:
 1e03698:    77 01             	[--sp] = {rets, r7-r4}			  ## board_ac632n_demo.c:688:0
 1e0369a:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## board_ac632n_demo.c:688:0
 1e036a0:    51 e1 04 00       	if (r1 == 21) goto 8 <port_wakeup_callback+0x14 : 1e036ac >			  ## board_ac632n_demo.c:688:0
 1e036a4:    71 e1 08 10       	if (r1 != 23) goto 16 <port_wakeup_callback+0x20 : 1e036b8 >			  ## board_ac632n_demo.c:688:0
 1e036a8:    10 70             	r0 = 1			  ## board_ac632n_demo.c:688:0
 1e036aa:    01 18             	goto 2 <port_wakeup_callback+0x16 : 1e036ae >			  ## board_ac632n_demo.c:688:0
 1e036ac:    20 70             	r0 = 2			  ## board_ac632n_demo.c:688:0
 1e036ae:    01 f6 80 50       	r1 = [r5 + 128]			  ## board_ac632n_demo.c:688:0
 1e036b2:    50 b2             	r0 |= r1			  ## board_ac632n_demo.c:688:0
 1e036b4:    10 f6 80 50       	[r5 + 128] = r0			  ## board_ac632n_demo.c:688:0
 1e036b8:    00 f7 44 50       	r0 = h[r5 + 68] (u)			  ## board_ac632n_demo.c:752:9
 1e036bc:    05 20             	if (r0 == 0) goto 10 <port_wakeup_callback+0x30 : 1e036c8 >			  ## board_ac632n_demo.c:752:9
 1e036be:    01 fb b0 04       	r1 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD8 : 4b0 >			  ## board_ac632n_demo.c:755:17
 1e036c2:    80 f3 cd 45       	call 35738 <sys_timer_modify : 1e0c260 >			  ## board_ac632n_demo.c:755:17
 1e036c6:    0a 18             	goto 20 <port_wakeup_callback+0x44 : 1e036dc >			  ## board_ac632n_demo.c:755:17
 1e036c8:    c1 ff 84 37 e0 01 	r1 = 31471492 <skip_rope_date_update : 1e03784 >			  ## board_ac632n_demo.c:753:30
 1e036ce:    00 70             	r0 = 0			  ## board_ac632n_demo.c:753:30
 1e036d0:    02 fb b0 04       	r2 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD8 : 4b0 >			  ## board_ac632n_demo.c:753:30
 1e036d4:    80 f3 65 46       	call 36042 <sys_timeout_add : 1e0c3a2 >			  ## board_ac632n_demo.c:753:30
 1e036d8:    10 f7 44 50       	h[r5 + 68] = r0			  ## board_ac632n_demo.c:753:29
 1e036dc:    00 f6 80 50       	r0 = [r5 + 128]			  ## board_ac632n_demo.c:756:8
 1e036e0:    30 e0 44 10       	if (r0 != 3) goto 136 <port_wakeup_callback+0xD4 : 1e0376c >			  ## board_ac632n_demo.c:756:8
 1e036e4:    e1 4b             	r1 = [r5 + 120]			  ## app_spp_and_le.c:353:2
 1e036e6:    c0 ff 3d 1a e1 01 	r0 = 31529533 <update_target_end+0x180D : 1e11a3d >			  ## app_spp_and_le.c:353:2
 1e036ec:    80 f3 5b 4b       	call 38582 <printf : 1e0cda6 >			  ## app_spp_and_le.c:353:2
 1e036f0:    e0 4b             	r0 = [r5 + 120]			  ## app_spp_and_le.c:354:20
 1e036f2:    10 80             	r0 += 1			  ## app_spp_and_le.c:354:20
 1e036f4:    e8 4b             	[r5 + 120] = r0			  ## app_spp_and_le.c:354:20
 1e036f6:    51 6b             	r1 = b[r5 + 21] (u)			  ## app_spp_and_le.c:355:8
 1e036f8:    21 e0 07 00       	if (r1 == 2) goto 14 <port_wakeup_callback+0x72 : 1e0370a >			  ## app_spp_and_le.c:355:8
 1e036fc:    20 32             	if (r1 != 0) goto 64 <port_wakeup_callback+0xA6 : 1e0373e >
 1e036fe:    01 70             	r1 = 0			  ## app_spp_and_le.c:357:9
 1e03700:    bf f3 9a f4       	call -5836 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_spp_and_le.c:357:9
 1e03704:    e0 4b             	r0 = [r5 + 120]			  ## app_spp_and_le.c:358:28
 1e03706:    41 75             	r1 = 84			  ## app_spp_and_le.c:358:5
 1e03708:    1e 18             	goto 60 <port_wakeup_callback+0xAE : 1e03746 >			  ## app_spp_and_le.c:358:5
 1e0370a:    c6 ff c0 08 00 00 	r6 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >
 1e03710:    20 4c             	r0 = [r6 + 8]			  ## app_spp_and_le.c:363:32
 1e03712:    f1 4b             	r1 = [r5 + 124]			  ## app_spp_and_le.c:364:24
 1e03714:    03 fc ff ff       	r3 = r0 + -1			  ## app_spp_and_le.c:363:32
 1e03718:    2b 4c             	[r6 + 8] = r3			  ## app_spp_and_le.c:363:32
 1e0371a:    10 92             	r0 = r1 + 1			  ## app_spp_and_le.c:364:24
 1e0371c:    f8 4b             	[r5 + 124] = r0			  ## app_spp_and_le.c:364:24
 1e0371e:    c2 ff 5c 1a e1 01 	r2 = 31529564 <update_target_end+0x182C : 1e11a5c >			  ## app_spp_and_le.c:365:10
 1e03724:    20 70             	r0 = 2			  ## app_spp_and_le.c:365:10
 1e03726:    80 f3 6b 4b       	call 38614 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:365:10
 1e0372a:    24 4c             	r4 = [r6 + 8]			  ## app_spp_and_le.c:365:10
 1e0372c:    01 70             	r1 = 0			  ## app_spp_and_le.c:371:13
 1e0372e:    07 70             	r7 = 0			  ## app_spp_and_le.c:371:13
 1e03730:    40 08             	r0 = r4			  ## app_spp_and_le.c:371:13
 1e03732:    bf f3 81 f4       	call -5886 <DISPLAY_NUM_DATA_UPDATE : 1e02038 >			  ## app_spp_and_le.c:371:13
 1e03736:    1b 28             	if (r4 == 0) goto 54 <port_wakeup_callback+0xD6 : 1e0376e >			  ## app_spp_and_le.c:371:13
 1e03738:    f0 4b             	r0 = [r5 + 124]			  ## app_spp_and_le.c:379:28
 1e0373a:    61 75             	r1 = 86			  ## app_spp_and_le.c:379:5
 1e0373c:    04 18             	goto 8 <port_wakeup_callback+0xAE : 1e03746 >			  ## app_spp_and_le.c:379:5
 1e0373e:    f0 4b             	r0 = [r5 + 124]			  ## app_spp_and_le.c:384:18
 1e03740:    10 80             	r0 += 1			  ## app_spp_and_le.c:384:18
 1e03742:    f8 4b             	[r5 + 124] = r0			  ## app_spp_and_le.c:384:18
 1e03744:    51 75             	r1 = 85			  ## app_spp_and_le.c:385:4
 1e03746:    bf f3 58 ea       	call -11088 <Send_SKIP_ROPE_NUM_BLE : 1e00bfa >
 1e0374a:    e3 4b             	r3 = [r5 + 120]			  ## app_spp_and_le.c:387:4
 1e0374c:    c2 ff 8d 1a e1 01 	r2 = 31529613 <update_target_end+0x185D : 1e11a8d >			  ## app_spp_and_le.c:387:4
 1e03752:    20 70             	r0 = 2			  ## app_spp_and_le.c:387:4
 1e03754:    80 f3 54 4b       	call 38568 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:387:4
 1e03758:    53 6b             	r3 = b[r5 + 21] (u)			  ## app_spp_and_le.c:388:5
 1e0375a:    c2 ff bc 1a e1 01 	r2 = 31529660 <update_target_end+0x188C : 1e11abc >			  ## app_spp_and_le.c:388:5
 1e03760:    20 70             	r0 = 2			  ## app_spp_and_le.c:388:5
 1e03762:    80 f3 4d 4b       	call 38554 <log_print : 1e0ce00 >			  ## app_spp_and_le.c:388:5
 1e03766:    00 70             	r0 = 0			  ## app_spp_and_le.c:388:5
 1e03768:    10 f6 80 50       	[r5 + 128] = r0			  ## board_ac632n_demo.c:768:24
 1e0376c:    57 01             	{pc, r7-r4} = [sp++]			  ## board_ac632n_demo.c:772:1
 1e0376e:    00 70             	r0 = 0			  ## app_spp_and_le.c:372:13
 1e03770:    01 70             	r1 = 0			  ## app_spp_and_le.c:372:13
 1e03772:    bf f3 1a eb       	call -10700 <DISPLAY_STATE_DATA_UPDATE : 1e00daa >			  ## app_spp_and_le.c:372:13
 1e03776:    31 4c             	r1 = [r6 + 12]			  ## app_spp_and_le.c:373:48
 1e03778:    60 75             	r0 = 86			  ## app_spp_and_le.c:373:5
 1e0377a:    02 70             	r2 = 0			  ## app_spp_and_le.c:373:5
 1e0377c:    bf f3 3c f4       	call -6024 <Report_SKIP_ROPE_MODE : 1e01ff8 >			  ## app_spp_and_le.c:373:5
 1e03780:    5f 6b             	b[r5 + 21] = r7			  ## app_spp_and_le.c:374:22
 1e03782:    e3 1f             	goto -58 <port_wakeup_callback+0xB2 : 1e0374a >			  ## app_spp_and_le.c:374:22


skip_rope_date_update:
 1e03784:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:626:0
 1e03786:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## board_ac632n_demo.c:626:0
 1e0378c:    00 f7 44 40       	r0 = h[r4 + 68] (u)			  ## board_ac632n_demo.c:658:8
 1e03790:    05 20             	if (r0 == 0) goto 10 <skip_rope_date_update+0x18 : 1e0379c >			  ## board_ac632n_demo.c:658:8
 1e03792:    80 f3 63 45       	call 35526 <sys_timeout_del : 1e0c25c >			  ## board_ac632n_demo.c:660:9
 1e03796:    00 70             	r0 = 0			  ## board_ac632n_demo.c:661:23
 1e03798:    10 f7 44 40       	h[r4 + 68] = r0			  ## board_ac632n_demo.c:661:23
 1e0379c:    00 70             	r0 = 0			  ## board_ac632n_demo.c:663:15
 1e0379e:    10 f6 80 40       	[r4 + 128] = r0			  ## board_ac632n_demo.c:663:15
 1e037a2:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:665:1


uart_enter_deepsleep:
 1e037a4:    c0 ff 14 56 1e 00 	r0 = 1988116 <uECC_vli_cmp_unsafe+0xDE618 : 1e5614 >			  ## uart.c:384:0
 1e037aa:    00 40             	r0 = [r0 + 0]			  ## uart.c:385:28
 1e037ac:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## uart.c:386:17
 1e037b2:    10 f6 84 10       	[r1 + 132] = r0			  ## uart.c:385:17
 1e037b6:    20 fb 71 04       	r0 = 1974272			  ## uart.c:386:29
 1e037ba:    00 40             	r0 = [r0 + 0]			  ## uart.c:386:29
 1e037bc:    10 f6 88 10       	[r1 + 136] = r0			  ## uart.c:386:17
 1e037c0:    20 00             	rts			  ## uart.c:387:1


uart_exit_deepsleep:
 1e037c2:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## uart.c:390:0
 1e037c8:    01 f6 84 00       	r1 = [r0 + 132]			  ## uart.c:391:24
 1e037cc:    c2 ff 08 50 1e 00 	r2 = 1986568 <uECC_vli_cmp_unsafe+0xDE00C : 1e5008 >			  ## uart.c:391:24
 1e037d2:    11 f6 0c 26       	[r2 + 1548] = r1			  ## uart.c:391:22
 1e037d6:    01 44             	r1 = [r2 + 0]			  ## uart.c:392:19
 1e037d8:    f1 b2             	r1 &= 4294967263			  ## uart.c:392:19
 1e037da:    09 44             	[r2 + 0] = r1			  ## uart.c:392:19
 1e037dc:    c1 ff 28 32 00 00 	r1 = 12840 <hdl.2.371 : 3228 >			  ## clock.c:1693:30
 1e037e2:    02 42             	r2 = [r1 + 0]			  ## clock.c:1693:30
 1e037e4:    f1 07             	r1 = -1			  ## clock.c:2233:9
 1e037e6:    01 24             	if (r2 == 0) goto 2 <uart_exit_deepsleep+0x28 : 1e037ea >			  ## clock.c:2233:9
 1e037e8:    51 70             	r1 = 5			  ## clock.c:2233:9
 1e037ea:    20 fb 71 24       	r2 = 1974272
 1e037ee:    29 44             	[r2 + 8] = r1			  ## uart.c:393:20
 1e037f0:    00 f6 88 00       	r0 = [r0 + 136]			  ## uart.c:394:22
 1e037f4:    08 44             	[r2 + 0] = r0			  ## uart.c:394:20
 1e037f6:    00 f4 34 2a       	[r2 + 0] |= 13312			  ## uart.c:395:20
 1e037fa:    20 00             	rts			  ## uart.c:398:1


clock_critical_enter:
 1e037fc:    20 00             	rts			  ## uart.c:197:0


clock_critical_exit:
 1e037fe:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## uart.c:200:0
 1e03804:    00 f6 8c 00       	r0 = [r0 + 140]			  ## uart.c:201:9
 1e03808:    0d 20             	if (r0 == 0) goto 26 <clock_critical_exit+0x26 : 1e03824 >			  ## uart.c:201:9
 1e0380a:    c1 ff 28 32 00 00 	r1 = 12840 <hdl.2.371 : 3228 >			  ## clock.c:1693:30
 1e03810:    01 42             	r1 = [r1 + 0]			  ## clock.c:1693:30
 1e03812:    f2 07             	r2 = -1			  ## clock.c:2233:9
 1e03814:    01 22             	if (r1 == 0) goto 2 <clock_critical_exit+0x1A : 1e03818 >			  ## clock.c:2233:9
 1e03816:    52 70             	r2 = 5			  ## clock.c:2233:9
 1e03818:    2a 40             	[r0 + 8] = r2			  ## uart.c:204:17
 1e0381a:    02 70             	r2 = 0			  ## uart.c:204:17
 1e0381c:    02 22             	if (r1 == 0) goto 4 <clock_critical_exit+0x24 : 1e03822 >
 1e0381e:    02 fb c0 5d       	r2 = 24000 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x123C : 5dc0 >			  ## clock.c:2233:9
 1e03822:    4a 40             	[r0 + 16] = r2			  ## uart.c:205:18
 1e03824:    20 00             	rts			  ## uart.c:206:1


tmr_enter_deepsleep:
 1e03826:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:256:0
 1e0382c:    11 40             	r1 = [r0 + 4]			  ## timer.c:257:29
 1e0382e:    c2 ff 50 24 00 00 	r2 = 9296 <tmr_sfr.0 : 2450 >			  ## timer.c:259:16
 1e03834:    09 44             	[r2 + 0] = r1			  ## timer.c:257:16
 1e03836:    21 40             	r1 = [r0 + 8]			  ## timer.c:258:29
 1e03838:    19 44             	[r2 + 4] = r1			  ## timer.c:258:16
 1e0383a:    00 40             	r0 = [r0 + 0]			  ## timer.c:259:29
 1e0383c:    28 44             	[r2 + 8] = r0			  ## timer.c:259:16
 1e0383e:    20 00             	rts			  ## timer.c:260:1


timer1_isr:
 1e03840:    e9 01             	[--sp] = {psr, rets, reti}			  ## timer.c:100:0
 1e03842:    78 f3 3f 00       	[--sp] = {r5-r0}			  ## timer.c:106:20
 1e03846:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:106:20
 1e0384c:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## timer.c:106:20
 1e03850:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## timer.c:106:20
 1e03856:    45 fc 9c 00       	r5 = r4 + 156			  ## timer.c:106:20
 1e0385a:    00 4a             	r0 = [r5 + 0]			  ## timer.c:111:5
 1e0385c:    10 80             	r0 += 1			  ## timer.c:111:5
 1e0385e:    08 4a             	[r5 + 0] = r0			  ## timer.c:111:5
 1e03860:    10 4a             	r0 = [r5 + 4]			  ## timer.c:113:28
 1e03862:    21 4a             	r1 = [r5 + 8]			  ## timer.c:113:17
 1e03864:    10 09             	r0 += r1			  ## timer.c:113:17
 1e03866:    28 4a             	[r5 + 8] = r0			  ## timer.c:113:17
 1e03868:    80 f3 cc 45       	call 35736 <usr_timer_schedule : 1e0c404 >			  ## timer.c:115:5
 1e0386c:    30 4a             	r0 = [r5 + 12]			  ## timer.c:119:9
 1e0386e:    05 20             	if (r0 == 0) goto 10 <timer1_isr+0x3A : 1e0387a >			  ## timer.c:119:9
 1e03870:    00 f6 a8 40       	r0 = [r4 + 168]			  ## timer.c:120:18
 1e03874:    f0 8f             	r0 += -1			  ## timer.c:120:18
 1e03876:    10 f6 a8 40       	[r4 + 168] = r0			  ## timer.c:120:18
 1e0387a:    70 f3 3f 00       	{r5-r0} = [sp++]			  ## timer.c:125:1
 1e0387e:    a9 01             	{psr, rets, reti} = [sp++]			  ## timer.c:125:1
 1e03880:    22 00             	rti			  ## timer.c:125:1


clock_critical_enter.507:
 1e03882:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:241:0
 1e03888:    01 f9 ac 00       	r1 = b[r0 + 172] (u)			  ## timer.c:241:0
 1e0388c:    08 22             	if (r1 == 0) goto 16 <clock_critical_enter.507+0x1C : 1e0389e >			  ## timer.c:241:0
 1e0388e:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:241:0
 1e03894:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e03896:    12 f6 b0 00       	[r0 + 176] = r2			  ## timer.c:136:23
 1e0389a:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e0389e:    20 00             	rts			  ## timer.c:243:1


clock_critical_exit.508:
 1e038a0:    ff f3 99 e7       	goto -12494 <timer1_resume : 1e007d6 >			  ## timer.c:246:0


__power_suspend_post:
 1e038a4:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:172:0
 1e038aa:    01 f9 ac 00       	r1 = b[r0 + 172] (u)			  ## timer.c:172:0
 1e038ae:    08 22             	if (r1 == 0) goto 16 <__power_suspend_post+0x1C : 1e038c0 >			  ## timer.c:172:0
 1e038b0:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:172:0
 1e038b6:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e038b8:    12 f6 b0 00       	[r0 + 176] = r2			  ## timer.c:136:23
 1e038bc:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e038c0:    20 00             	rts			  ## timer.c:174:1


__power_resume:
 1e038c2:    34 00             	[--sp] = rets			  ## timer.c:177:0
 1e038c4:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:179:17
 1e038ca:    02 f6 a4 00       	r2 = [r0 + 164]			  ## timer.c:179:17
 1e038ce:    03 fb e8 03       	r3 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## timer.c:179:25
 1e038d2:    c0 fe 30 11       	r1 = r1 / r3 (u)			  ## timer.c:179:25
 1e038d6:    21 09             	r1 += r2			  ## timer.c:179:17
 1e038d8:    11 f6 a4 00       	[r0 + 164] = r1			  ## timer.c:179:17
 1e038dc:    bf f3 7b e7       	call -12554 <timer1_resume : 1e007d6 >			  ## timer.c:182:5
 1e038e0:    88 01             	{rets} = [sp++]			  ## timer.c:184:5
 1e038e2:    c0 f3 8f 45       	goto 35614 <usr_timer_schedule : 1e0c404 >			  ## timer.c:184:5


exception_analyze:
 1e038e6:    60 f3 00 00       	trigger			  ## debug.c:896:0
 1e038ea:    c0 ff 4a 18 1a 00 	r0 = 1710154 <uECC_vli_cmp_unsafe+0x9A84E : 1a184a >			  ## debug.c:888:18
 1e038f0:    b1 7a             	r1 = 171			  ## debug.c:888:18
 1e038f2:    09 60             	b[r0 + 0] = r1			  ## debug.c:888:18
 1e038f4:    cf f3 cf fd       	goto 2096030 <p33_soft_reset : 3496 >			  ## cpu.h:148:5


key_active_set:
 1e038f8:    c0 ff 40 1d 00 00 	r0 = 7488 <is_key_active : 1d40 >			  ## key_driver.c:219:0
 1e038fe:    31 72             	r1 = 35			  ## key_driver.c:220:19
 1e03900:    09 60             	b[r0 + 0] = r1			  ## key_driver.c:220:19
 1e03902:    20 00             	rts			  ## key_driver.c:221:1


__hw_p2m_irq:
 1e03904:    e9 01             	[--sp] = {psr, rets, reti}			  ## power_hw.c:1652:0
 1e03906:    78 f3 ff 7f       	[--sp] = {r14-r0}			  ## power_hw.c:1652:0
 1e0390a:    c0 ff f3 1f 1a 00 	r0 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1652:0
 1e03910:    08 f9 01 00       	r8 = b[r0 + 1] (u)			  ## power_hw.c:1653:14
 1e03914:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1658:21
 1e03916:    e0 fd 80 11       	r1 = r1 | r8			  ## power_hw.c:1658:21
 1e0391a:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1658:21
 1e0391c:    00 fc b5 f8       	r0 = r0 + -1867			  ## power_wakeup.c:683:16
 1e03920:    09 f9 00 00       	r9 = b[r0 + 0] (u)
 1e03924:    0b fc a1 ff       	r11 = r0 + -95
 1e03928:    00 f3 05 90       	if ((r9 & 1) == 0) goto 10 <__hw_p2m_irq+0x32 : 1e03936 >
 1e0392c:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## power_wakeup.c:688:21
 1e03930:    10 b3             	r0 |= 64			  ## power_wakeup.c:688:21
 1e03932:    10 f9 00 b0       	b[r11 + 0] = r0			  ## power_wakeup.c:688:21
 1e03936:    cc ff c0 23 00 00 	r12 = 9152 <cur_ch : 23c0 >
 1e0393c:    01 f3 28 90       	if ((r9 & 2) == 0) goto 80 <__hw_p2m_irq+0x8C : 1e03990 >
 1e03940:    00 f9 0d b0       	r0 = b[r11 + 13] (u)			  ## power_wakeup.c:692:21
 1e03944:    01 f9 0e b0       	r1 = b[r11 + 14] (u)			  ## power_wakeup.c:693:21
 1e03948:    10 f9 0f b0       	b[r11 + 15] = r0			  ## power_wakeup.c:694:23
 1e0394c:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## power_wakeup.c:696:45
 1e03950:    25 04             	r5 = r0.l (u)			  ## power_wakeup.c:612:9
 1e03952:    11 f9 10 b0       	b[r11 + 16] = r1			  ## power_wakeup.c:695:23
 1e03956:    1c 2a             	if (r5 == 0) goto 56 <__hw_p2m_irq+0x8C : 1e03990 >			  ## power_wakeup.c:695:23
 1e03958:    c6 ff 84 23 00 00 	r6 = 9092 <hdl.0+0x4 : 2384 >
 1e0395e:    04 70             	r4 = 0
 1e03960:    1d 70             	r13 = 1
 1e03962:    ba fc 77 00       	r10 = r11 + 119
 1e03966:    07 70             	r7 = 0
 1e03968:    f8 fd 70 0d       	r0 = r13 << r7			  ## power_wakeup.c:614:23
 1e0396c:    50 f0 0b 00       	if ((r0 & r5) == 0) goto 22 <__hw_p2m_irq+0x82 : 1e03986 >			  ## power_wakeup.c:614:23
 1e03970:    00 fa 00 7a       	r0 = b[r7+r10] (u)			  ## power_wakeup.c:616:21
 1e03974:    e0 e1 07 80       	if (r0 > 30) goto 14 <__hw_p2m_irq+0x82 : 1e03986 >			  ## power_wakeup.c:616:21
 1e03978:    bf 17             	call -130 <key_active_set : 1e038f8 >			  ## power_wakeup.c:617:21
 1e0397a:    00 f6 c0 c0       	r0 = [r12 + 192]			  ## power_wakeup.c:618:25
 1e0397e:    03 20             	if (r0 == 0) goto 6 <__hw_p2m_irq+0x82 : 1e03986 >			  ## power_wakeup.c:618:25
 1e03980:    01 6c             	r1 = b[r6 + 0] (u)			  ## power_wakeup.c:619:25
 1e03982:    00 05             	r0 = r4.b0 (u)			  ## power_wakeup.c:619:25
 1e03984:    89 16             	call -750 <port_wakeup_callback : 1e03698 >			  ## power_wakeup.c:619:25
 1e03986:    14 80             	r4 += 1			  ## power_wakeup.c:613:27
 1e03988:    17 80             	r7 += 1			  ## power_wakeup.c:613:47
 1e0398a:    56 80             	r6 += 5			  ## power_wakeup.c:613:27
 1e0398c:    c7 e0 ec 1f       	if (r7 != 12) goto -40 <__hw_p2m_irq+0x64 : 1e03968 >			  ## power_wakeup.c:613:27
 1e03990:    02 f3 30 90       	if ((r9 & 4) == 0) goto 96 <__hw_p2m_irq+0xF0 : 1e039f4 >
 1e03994:    0a f9 1c b0       	r10 = b[r11 + 28] (u)			  ## power_wakeup.c:700:23
 1e03998:    09 f9 1d b0       	r9 = b[r11 + 29] (u)			  ## power_wakeup.c:701:23
 1e0399c:    1a f9 1e b0       	b[r11 + 30] = r10			  ## power_wakeup.c:702:25
 1e039a0:    b0 fc 1f 00       	r0 = r11 + 31			  ## power_wakeup.c:703:25
 1e039a4:    19 f9 00 00       	b[r0 + 0] = r9			  ## power_wakeup.c:703:25
 1e039a8:    0e 70             	r14 = 0
 1e039aa:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e039b0:    17 70             	r7 = 1
 1e039b2:    cd ff 48 30 e1 01 	r13 = 31535176 <WSIG_to_PANA : 1e13048 >
 1e039b8:    14 70             	r4 = 1
 1e039ba:    be f1 01 00       	if ((r14 & r11) != 0) goto 2 <__hw_p2m_irq+0xBC : 1e039c0 >
 1e039be:    04 70             	r4 = 0
 1e039c0:    a6 08             	r6 = r10
 1e039c2:    be f0 01 00       	if ((r14 & r11) == 0) goto 2 <__hw_p2m_irq+0xC4 : 1e039c8 >
 1e039c6:    96 08             	r6 = r9
 1e039c8:    10 2c             	if (r6 == 0) goto 32 <__hw_p2m_irq+0xE6 : 1e039ea >
 1e039ca:    05 70             	r5 = 0
 1e039cc:    f8 fd 50 07       	r0 = r7 << r5			  ## power_wakeup.c:593:27
 1e039d0:    60 f0 08 00       	if ((r0 & r6) == 0) goto 16 <__hw_p2m_irq+0xE0 : 1e039e4 >			  ## power_wakeup.c:593:27
 1e039d4:    00 f6 c4 c0       	r0 = [r12 + 196]			  ## power_wakeup.c:596:25
 1e039d8:    05 20             	if (r0 == 0) goto 10 <__hw_p2m_irq+0xE0 : 1e039e4 >			  ## power_wakeup.c:596:25
 1e039da:    01 fa 00 5d       	r1 = b[r5+r13] (u)			  ## power_wakeup.c:597:25
 1e039de:    00 70             	r0 = 0			  ## power_wakeup.c:597:25
 1e039e0:    42 08             	r2 = r4			  ## power_wakeup.c:597:25
 1e039e2:    1d 16             	call -966 <aport_wakeup_callback : 1e0361e >			  ## power_wakeup.c:597:25
 1e039e4:    15 80             	r5 += 1			  ## power_wakeup.c:592:55
 1e039e6:    35 e0 f1 1f       	if (r5 != 3) goto -30 <__hw_p2m_irq+0xC8 : 1e039cc >			  ## power_wakeup.c:592:55
 1e039ea:    1e 80             	r14 += 1			  ## power_wakeup.c:582:29
 1e039ec:    e6 fd 00 0e       	r0 = r14.l (u)			  ## power_wakeup.c:582:29
 1e039f0:    20 e0 e2 1f       	if (r0 != 2) goto -60 <__hw_p2m_irq+0xB4 : 1e039b8 >			  ## power_wakeup.c:582:29
 1e039f4:    c4 ff a1 14 1a 00 	r4 = 1709217 <uECC_vli_cmp_unsafe+0x9A4A5 : 1a14a1 >
 1e039fa:    75 68             	r5 = b[r4 + 7] (u)			  ## rtc.c:264:14
 1e039fc:    00 f3 0a 50       	if ((r5 & 1) == 0) goto 20 <__hw_p2m_irq+0x110 : 1e03a14 >			  ## rtc.c:264:14
 1e03a00:    40 fc df ff       	r0 = r4 + -33
 1e03a04:    01 60             	r1 = b[r0 + 0] (u)
 1e03a06:    71 b0             	r1 &= 4294967294			  ## rtc.c:229:20
 1e03a08:    09 60             	b[r0 + 0] = r1			  ## rtc.c:229:20
 1e03a0a:    80 70             	r0 = 8			  ## rtc.c:258:17
 1e03a0c:    01 40             	r1 = [r0 + 0]			  ## rtc.c:258:17
 1e03a0e:    02 22             	if (r1 == 0) goto 4 <__hw_p2m_irq+0x110 : 1e03a14 >			  ## rtc.c:258:17
 1e03a10:    00 70             	r0 = 0			  ## rtc.c:259:9
 1e03a12:    81 00             	call r1			  ## rtc.c:259:9
 1e03a14:    04 f3 03 50       	if ((r5 & 16) == 0) goto 6 <__hw_p2m_irq+0x11A : 1e03a1e >
 1e03a18:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:272:9
 1e03a1a:    10 b0             	r0 |= 1			  ## rtc.c:272:9
 1e03a1c:    08 68             	b[r4 + 0] = r0			  ## rtc.c:272:9
 1e03a1e:    05 f3 03 50       	if ((r5 & 32) == 0) goto 6 <__hw_p2m_irq+0x124 : 1e03a28 >
 1e03a22:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:276:9
 1e03a24:    90 b0             	r0 |= 2			  ## rtc.c:276:9
 1e03a26:    08 68             	b[r4 + 0] = r0			  ## rtc.c:276:9
 1e03a28:    50 05             	r0 = r5.b0 (s)			  ## rtc.c:264:14
 1e03a2a:    06 f3 03 50       	if ((r5 & 64) == 0) goto 6 <__hw_p2m_irq+0x130 : 1e03a34 >			  ## rtc.c:264:14
 1e03a2e:    01 68             	r1 = b[r4 + 0] (u)			  ## rtc.c:280:9
 1e03a30:    11 b1             	r1 |= 4			  ## rtc.c:280:9
 1e03a32:    09 68             	b[r4 + 0] = r1			  ## rtc.c:280:9
 1e03a34:    f0 ef 03 c0       	ifs (r0 > -1) goto 6 <__hw_p2m_irq+0x13A : 1e03a3e >
 1e03a38:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:284:9
 1e03a3a:    90 b1             	r0 |= 8			  ## rtc.c:284:9
 1e03a3c:    08 68             	b[r4 + 0] = r0			  ## rtc.c:284:9
 1e03a3e:    22 f3 04 80       	if ((r8 & 4) != 0) goto 8 <__hw_p2m_irq+0x146 : 1e03a4a >
 1e03a42:    70 f3 ff 7f       	{r14-r0} = [sp++]			  ## power_hw.c:1678:1
 1e03a46:    a9 01             	{psr, rets, reti} = [sp++]			  ## power_hw.c:1678:1
 1e03a48:    22 00             	rti			  ## power_hw.c:1678:1
 1e03a4a:    28 fb 00 43       	r4 = rets			  ## wdt.c:60:5
 1e03a4e:    28 fb 00 50       	r5 = reti			  ## wdt.c:61:5
 1e03a52:    c0 ff d0 30 e1 01 	r0 = 31535312 <gpio_out_regs+0x18 : 1e130d0 >			  ## wdt.c:63:5
 1e03a58:    80 f3 86 4a       	call 38156 <puts : 1e0cf68 >			  ## wdt.c:63:5
 1e03a5c:    c0 ff be 28 e1 01 	r0 = 31533246 <update_target_end+0x268E : 1e128be >			  ## wdt.c:64:5
 1e03a62:    41 08             	r1 = r4			  ## wdt.c:64:5
 1e03a64:    80 f3 9f 49       	call 37694 <printf : 1e0cda6 >			  ## wdt.c:64:5
 1e03a68:    c0 ff fb 1d e1 01 	r0 = 31530491 <update_target_end+0x1BCB : 1e11dfb >			  ## wdt.c:65:5
 1e03a6e:    51 08             	r1 = r5			  ## wdt.c:65:5
 1e03a70:    80 f3 99 49       	call 37682 <printf : 1e0cda6 >			  ## wdt.c:65:5
 1e03a74:    28 fb 00 1e       	r1 = sp			  ## wdt.c:67:5
 1e03a78:    c0 ff 19 1e e1 01 	r0 = 31530521 <update_target_end+0x1BE9 : 1e11e19 >			  ## wdt.c:68:5
 1e03a7e:    80 f3 92 49       	call 37668 <printf : 1e0cda6 >			  ## wdt.c:68:5
 1e03a82:    28 fb 00 1c       	r1 = usp			  ## wdt.c:69:5
 1e03a86:    c0 ff 0a 1e e1 01 	r0 = 31530506 <update_target_end+0x1BDA : 1e11e0a >			  ## wdt.c:70:5
 1e03a8c:    80 f3 8b 49       	call 37654 <printf : 1e0cda6 >			  ## wdt.c:70:5
 1e03a90:    28 fb 00 1d       	r1 = ssp			  ## wdt.c:71:5
 1e03a94:    c0 ff 18 1e e1 01 	r0 = 31530520 <update_target_end+0x1BE8 : 1e11e18 >			  ## wdt.c:72:5
 1e03a9a:    80 f3 84 49       	call 37640 <printf : 1e0cda6 >			  ## wdt.c:72:5
 1e03a9e:    ff 1f             	goto -2 <__hw_p2m_irq+0x19A : 1e03a9e >			  ## wdt.c:73:5


__wakeup_is_idle:
 1e03aa0:    10 70             	r0 = 1			  ## power_wakeup.c:107:0
 1e03aa2:    20 00             	rts			  ## power_wakeup.c:111:5


usb_dev_idle_query:
 1e03aa4:    10 70             	r0 = 1			  ## otg.c:579:0
 1e03aa6:    20 00             	rts			  ## otg.c:588:1


lrc_critical_enter:
 1e03aa8:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:186:0
 1e03aae:    00 f9 cc 00       	r0 = b[r0 + 204] (u)			  ## lrc_hw.c:186:0
 1e03ab2:    08 20             	if (r0 == 0) goto 16 <lrc_critical_enter+0x1C : 1e03ac4 >			  ## lrc_hw.c:186:0
 1e03ab4:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:186:0
 1e03aba:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e03abc:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e03abe:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e03ac0:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e03ac4:    20 00             	rts			  ## lrc_hw.c:188:1


__hw_lrc_enable:
 1e03ac6:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:93:0
 1e03acc:    01 f9 cc 10       	r1 = b[r1 + 204] (u)			  ## lrc_hw.c:93:0
 1e03ad0:    0b 22             	if (r1 == 0) goto 22 <__hw_lrc_enable+0x22 : 1e03ae8 >			  ## lrc_hw.c:93:0
 1e03ad2:    c1 ff 00 36 1e 00 	r1 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:93:0
 1e03ad8:    02 42             	r2 = [r1 + 0]			  ## lrc_hw.c:98:18
 1e03ada:    72 b0             	r2 &= 4294967294			  ## lrc_hw.c:98:18
 1e03adc:    0a 42             	[r1 + 0] = r2			  ## lrc_hw.c:98:18
 1e03ade:    00 f4 40 19       	[r1 + 0] |= 64			  ## lrc_hw.c:100:18
 1e03ae2:    02 20             	if (r0 == 0) goto 4 <__hw_lrc_enable+0x22 : 1e03ae8 >			  ## lrc_hw.c:100:18
 1e03ae4:    00 f4 01 19       	[r1 + 0] |= 1			  ## lrc_hw.c:103:22
 1e03ae8:    20 00             	rts			  ## lrc_hw.c:105:1


lrc_critical_exit:
 1e03aea:    10 70             	r0 = 1			  ## lrc_hw.c:191:0
 1e03aec:    ec 1f             	goto -40 <__hw_lrc_enable : 1e03ac6 >			  ## lrc_hw.c:192:5


lrc_timeout_handler:
 1e03aee:    78 01             	[--sp] = {rets, r8-r4}			  ## lrc_hw.c:134:0
 1e03af0:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:134:0
 1e03af6:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:137:19
 1e03af8:    00 f3 77 10       	if ((r1 & 1) == 0) goto 238 <lrc_timeout_handler+0xFC : 1e03bea >			  ## lrc_hw.c:137:19
 1e03afc:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:141:22
 1e03afe:    51 04             	r1 = r1.b0 (s)			  ## lrc_hw.c:141:36
 1e03b00:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <lrc_timeout_handler+0xE : 1e03afc >			  ## lrc_hw.c:141:5
 1e03b04:    12 40             	r2 = [r0 + 4]			  ## lrc_hw.c:145:24
 1e03b06:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >
 1e03b0c:    01 f9 cc 80       	r1 = b[r8 + 204] (u)
 1e03b10:    05 22             	if (r1 == 0) goto 10 <lrc_timeout_handler+0x2E : 1e03b1c >
 1e03b12:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e03b14:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e03b16:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e03b18:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e03b1c:    2f 24             	if (r2 == 0) goto 94 <lrc_timeout_handler+0x8E : 1e03b7c >
 1e03b1e:    c0 ff 20 32 00 00 	r0 = 12832 <hdl.5 : 3220 >			  ## clock.c:1757:20
 1e03b24:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:1757:12
 1e03b26:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xD754C : f4240 >			  ## clock.c:1757:35
 1e03b2c:    40 0e             	r0 = r0 * r1			  ## clock.c:1757:35
 1e03b2e:    c1 d6             	r1 = r0 >> 27			  ## clock.c:2260:9
 1e03b30:    40 c1             	r0 = r0 << 5			  ## clock.c:2260:9
 1e03b32:    03 70             	r3 = 0			  ## lrc_hw.c:159:80
 1e03b34:    80 f3 91 1e       	call 15650 <__udivdi3 : 1e0785a >			  ## lrc_hw.c:159:80
 1e03b38:    10 f6 d8 80       	[r8 + 216] = r0			  ## lrc_hw.c:159:20
 1e03b3c:    01 f9 d4 80       	r1 = b[r8 + 212] (u)
 1e03b40:    42 71             	r2 = 20
 1e03b42:    01 32             	if (r1 != 0) goto 2 <lrc_timeout_handler+0x58 : 1e03b46 >
 1e03b44:    02 70             	r2 = 0
 1e03b46:    c3 ff 70 27 00 00 	r3 = 10096 <pmu_voltage : 2770 >
 1e03b4c:    05 f6 84 30       	r5 = [r3 + 132]			  ## lrc_hw.c:115:9
 1e03b50:    18 2a             	if (r5 == 0) goto 48 <lrc_timeout_handler+0x94 : 1e03b82 >			  ## lrc_hw.c:115:9
 1e03b52:    85 04             	r5 = r2.b0 (u)			  ## lrc_hw.c:120:25
 1e03b54:    f5 8f             	r5 += -1			  ## lrc_hw.c:120:27
 1e03b56:    15 e0 0c b0       	ifs (r5 < 1) goto 24 <lrc_timeout_handler+0x84 : 1e03b72 >			  ## lrc_hw.c:120:27
 1e03b5a:    07 70             	r7 = 0
 1e03b5c:    16 70             	r6 = 1
 1e03b5e:    bf c0             	r7 = r7 << 2			  ## lrc_hw.c:121:54
 1e03b60:    37 09             	r7 += r3			  ## lrc_hw.c:121:54
 1e03b62:    04 f6 88 70       	r4 = [r7 + 136]			  ## lrc_hw.c:121:35
 1e03b66:    14 f6 84 70       	[r7 + 132] = r4			  ## lrc_hw.c:121:33
 1e03b6a:    87 05             	r7 = r6.b0 (u)			  ## lrc_hw.c:120:21
 1e03b6c:    16 80             	r6 += 1			  ## lrc_hw.c:120:9
 1e03b6e:    57 f2 f6 bf       	ifs (r7 < r5) goto -20 <lrc_timeout_handler+0x70 : 1e03b5e >			  ## lrc_hw.c:120:9
 1e03b72:    ac c0             	r4 = r5 << 2			  ## lrc_hw.c:123:9
 1e03b74:    34 09             	r4 += r3			  ## lrc_hw.c:123:9
 1e03b76:    10 f6 84 40       	[r4 + 132] = r0			  ## lrc_hw.c:123:33
 1e03b7a:    0e 18             	goto 28 <lrc_timeout_handler+0xAA : 1e03b98 >			  ## lrc_hw.c:123:33
 1e03b7c:    00 f4 01 09       	[r0 + 0] |= 1			  ## lrc_hw.c:152:22
 1e03b80:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1
 1e03b82:    05 70             	r5 = 0
 1e03b84:    15 22             	if (r1 == 0) goto 42 <lrc_timeout_handler+0xC2 : 1e03bb0 >
 1e03b86:    35 fc 84 00       	r5 = r3 + 132
 1e03b8a:    86 04             	r6 = r2.b0 (u)			  ## lrc_hw.c:116:21
 1e03b8c:    07 70             	r7 = 0			  ## lrc_hw.c:116:21
 1e03b8e:    17 80             	r7 += 1			  ## lrc_hw.c:116:29
 1e03b90:    50 f6 04 50       	[r5 ++= 4] = r0			  ## lrc_hw.c:117:33
 1e03b94:    67 f2 fb 3f       	if (r7 < r6) goto -10 <lrc_timeout_handler+0xA0 : 1e03b8e >			  ## lrc_hw.c:117:33
 1e03b98:    05 70             	r5 = 0
 1e03b9a:    0a 22             	if (r1 == 0) goto 20 <lrc_timeout_handler+0xC2 : 1e03bb0 >
 1e03b9c:    30 fc 84 00       	r0 = r3 + 132
 1e03ba0:    83 04             	r3 = r2.b0 (u)			  ## lrc_hw.c:126:17
 1e03ba2:    06 70             	r6 = 0			  ## lrc_hw.c:126:17
 1e03ba4:    44 f6 04 00       	r4 = [r0 ++= 4]			  ## lrc_hw.c:127:16
 1e03ba8:    16 80             	r6 += 1			  ## lrc_hw.c:126:25
 1e03baa:    45 09             	r5 += r4			  ## lrc_hw.c:127:13
 1e03bac:    36 f2 fa 3f       	if (r6 < r3) goto -12 <lrc_timeout_handler+0xB6 : 1e03ba4 >
 1e03bb0:    80 04             	r0 = r2.b0 (u)			  ## lrc_hw.c:126:21
 1e03bb2:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:130:30
 1e03bb6:    10 f6 d0 80       	[r8 + 208] = r0			  ## lrc_hw.c:130:24
 1e03bba:    40 71             	r0 = 20			  ## lrc_hw.c:168:31
 1e03bbc:    01 32             	if (r1 != 0) goto 2 <lrc_timeout_handler+0xD2 : 1e03bc0 >			  ## lrc_hw.c:168:31
 1e03bbe:    00 70             	r0 = 0
 1e03bc0:    c1 ff f8 20 00 00 	r1 = 8440 <lrc.4 : 20f8 >
 1e03bc6:    02 62             	r2 = b[r1 + 0] (u)			  ## lrc_hw.c:168:17
 1e03bc8:    02 f2 0d 80       	if (r2 > r0) goto 26 <lrc_timeout_handler+0xF8 : 1e03be6 >			  ## lrc_hw.c:168:17
 1e03bcc:    12 80             	r2 += 1			  ## lrc_hw.c:169:27
 1e03bce:    83 04             	r3 = r2.b0 (u)			  ## lrc_hw.c:173:13
 1e03bd0:    0a 62             	b[r1 + 0] = r2			  ## lrc_hw.c:169:27
 1e03bd2:    03 f2 08 10       	if (r3 != r0) goto 16 <lrc_timeout_handler+0xF8 : 1e03be6 >			  ## lrc_hw.c:169:27
 1e03bd6:    c0 ff fa 20 00 00 	r0 = 8442 <lrc.2 : 20fa >			  ## lrc_hw.c:176:38
 1e03bdc:    00 60             	r0 = b[r0 + 0] (u)			  ## lrc_hw.c:176:38
 1e03bde:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## lrc_hw.c:176:13
 1e03be2:    80 f3 6c 44       	call 35032 <usr_timer_modify : 1e0c4be >			  ## lrc_hw.c:176:13
 1e03be6:    10 70             	r0 = 1			  ## lrc_hw.c:180:5
 1e03be8:    6e 17             	call -292 <__hw_lrc_enable : 1e03ac6 >			  ## lrc_hw.c:180:5
 1e03bea:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1


__hw_btosc_time_set:
 1e03bec:    7c 01             	[--sp] = {rets, r12-r4}			  ## power_hw.c:360:0
 1e03bee:    ca ff 80 48 00 00 	r10 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:371:19
 1e03bf4:    a0 fc 40 01       	r0 = r10 + 320			  ## power_hw.c:371:19
 1e03bf8:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:361:23
 1e03bfa:    89 d1             	r1 = r1 >> 6			  ## power_hw.c:361:23
 1e03bfc:    09 40             	[r0 + 0] = r1			  ## power_hw.c:361:23
 1e03bfe:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## power_hw.c:361:23
 1e03c04:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:363:5
 1e03c06:    22 fd fc 29       	r2 = r2 & 252			  ## power_hw.c:363:5
 1e03c0a:    12 b0             	r2 |= 1			  ## power_hw.c:363:5
 1e03c0c:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:363:5
 1e03c0e:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:365:5
 1e03c10:    02 fd 0c 29       	r2 = r2 | 12			  ## power_hw.c:365:5
 1e03c14:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:365:5
 1e03c16:    01 fb b8 0b       	r1 = 3000 <BTCTLER_CL_CODE_TOTAL+0x26 : bb8 >			  ## power_hw.c:365:5
 1e03c1a:    11 f6 24 a0       	[r10 + 36] = r1			  ## power_hw.c:367:29
 1e03c1e:    09 f6 00 00       	r9 = [r0 + 0]			  ## power_hw.c:273:18
 1e03c22:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e03c24:    02 fb ec 13       	r2 = 5100 <UPDATE_CODE_TOTAL_SIZE+0x158 : 13ec >			  ## power_hw.c:273:16
 1e03c28:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e03c2a:    90 08             	r0 = r9			  ## power_hw.c:273:16
 1e03c2c:    80 f3 f6 1d       	call 15340 <__muldi3 : 1e0781c >			  ## power_hw.c:273:16
 1e03c30:    06 08             	r6 = r0			  ## power_hw.c:273:16
 1e03c32:    17 08             	r7 = r1			  ## power_hw.c:273:16
 1e03c34:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xD754C : f4240 >			  ## power_hw.c:273:16
 1e03c3a:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03c3c:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03c3e:    80 f3 10 1f       	call 15904 <__umoddi3 : 1e07a62 >			  ## power_hw.c:275:11
 1e03c42:    04 08             	r4 = r0			  ## power_hw.c:275:11
 1e03c44:    15 08             	r5 = r1			  ## power_hw.c:275:11
 1e03c46:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03c48:    60 08             	r0 = r6			  ## power_hw.c:275:11
 1e03c4a:    71 08             	r1 = r7			  ## power_hw.c:275:11
 1e03c4c:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03c4e:    80 f3 04 1e       	call 15368 <__udivdi3 : 1e0785a >			  ## power_hw.c:275:11
 1e03c52:    e0 fd 50 24       	r2 = r4 | r5			  ## power_hw.c:279:9
 1e03c56:    1b 70             	r11 = 1			  ## power_hw.c:279:9
 1e03c58:    11 70             	r1 = 1			  ## power_hw.c:279:9
 1e03c5a:    01 34             	if (r2 != 0) goto 2 <__hw_btosc_time_set+0x72 : 1e03c5e >			  ## power_hw.c:279:9
 1e03c5c:    01 70             	r1 = 0			  ## power_hw.c:279:9
 1e03c5e:    0c b2             	r12 = r1 + r0			  ## power_hw.c:279:9
 1e03c60:    1c f6 20 a0       	[r10 + 32] = r12			  ## power_hw.c:369:20
 1e03c64:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e03c66:    02 fb b8 0b       	r2 = 3000 <BTCTLER_CL_CODE_TOTAL+0x26 : bb8 >			  ## power_hw.c:273:16
 1e03c6a:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e03c6c:    90 08             	r0 = r9			  ## power_hw.c:273:16
 1e03c6e:    80 f3 d5 1d       	call 15274 <__muldi3 : 1e0781c >			  ## power_hw.c:273:16
 1e03c72:    04 08             	r4 = r0			  ## power_hw.c:273:16
 1e03c74:    15 08             	r5 = r1			  ## power_hw.c:273:16
 1e03c76:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03c78:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03c7a:    80 f3 f2 1e       	call 15844 <__umoddi3 : 1e07a62 >			  ## power_hw.c:275:11
 1e03c7e:    06 08             	r6 = r0			  ## power_hw.c:275:11
 1e03c80:    17 08             	r7 = r1			  ## power_hw.c:275:11
 1e03c82:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03c84:    40 08             	r0 = r4			  ## power_hw.c:275:11
 1e03c86:    51 08             	r1 = r5			  ## power_hw.c:275:11
 1e03c88:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03c8a:    80 f3 e6 1d       	call 15308 <__udivdi3 : 1e0785a >			  ## power_hw.c:275:11
 1e03c8e:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:279:9
 1e03c92:    01 32             	if (r1 != 0) goto 2 <__hw_btosc_time_set+0xAA : 1e03c96 >			  ## power_hw.c:279:9
 1e03c94:    0b 70             	r11 = 0			  ## power_hw.c:279:9
 1e03c96:    b0 09             	r0 += r11			  ## power_hw.c:279:9
 1e03c98:    10 f6 28 a0       	[r10 + 40] = r0			  ## power_hw.c:370:20
 1e03c9c:    c0 09             	r0 += r12			  ## power_hw.c:371:35
 1e03c9e:    10 f6 2c a0       	[r10 + 44] = r0			  ## power_hw.c:371:19
 1e03ca2:    5c 01             	{pc, r12-r4} = [sp++]			  ## power_hw.c:372:1


__hw_lrc_time_set:
 1e03ca4:    7d 01             	[--sp] = {rets, r13-r4}			  ## power_hw.c:375:0
 1e03ca6:    04 08             	r4 = r0			  ## power_hw.c:375:0
 1e03ca8:    02 fb ec 13       	r2 = 5100 <UPDATE_CODE_TOTAL_SIZE+0x158 : 13ec >			  ## power_hw.c:375:0
 1e03cac:    24 e0 1c 00       	if (r4 == 2) goto 56 <__hw_lrc_time_set+0x44 : 1e03ce8 >			  ## power_hw.c:375:0
 1e03cb0:    c0 ff 0d 00 03 00 	r0 = 196621 <text_size+0x13319 : 3000d >			  ## xosc_fsck.c:317:14
 1e03cb6:    bf f3 c3 e3       	call -14458 <adc_get_voltage : 1e00440 >			  ## xosc_fsck.c:317:14
 1e03cba:    c1 ff 1c 32 00 00 	r1 = 12828 <hdl.27 : 321c >
 1e03cc0:    02 42             	r2 = [r1 + 0]			  ## xosc_fsck.c:322:26
 1e03cc2:    c3 ff 18 32 00 00 	r3 = 12824 <update_bss_end : 3218 >			  ## xosc_fsck.c:322:26
 1e03cc8:    05 70             	r5 = 0			  ## xosc_fsck.c:322:26
 1e03cca:    0d 66             	b[r3 + 0] = r5			  ## xosc_fsck.c:322:26
 1e03ccc:    a2 b0             	r2 = r0 - r2			  ## xosc_fsck.c:322:16
 1e03cce:    d5 df             	r5 = r2 >>> 31			  ## xosc_fsck.c:322:16
 1e03cd0:    52 09             	r2 += r5			  ## xosc_fsck.c:322:16
 1e03cd2:    d5 b4             	r5 ^= r2			  ## xosc_fsck.c:322:16
 1e03cd4:    02 fb ec 13       	r2 = 5100 <UPDATE_CODE_TOTAL_SIZE+0x158 : 13ec >			  ## xosc_fsck.c:322:16
 1e03cd8:    e5 e1 05 b0       	ifs (r5 < 30) goto 10 <__hw_lrc_time_set+0x42 : 1e03ce6 >			  ## xosc_fsck.c:322:16
 1e03cdc:    12 70             	r2 = 1
 1e03cde:    0a 66             	b[r3 + 0] = r2
 1e03ce0:    08 42             	[r1 + 0] = r0			  ## xosc_fsck.c:324:34
 1e03ce2:    02 fb 8c 23       	r2 = 9100 <hdl.0+0xC : 238c >			  ## xosc_fsck.c:324:34
 1e03ce6:    0c 28             	if (r4 == 0) goto 24 <__hw_lrc_time_set+0x5C : 1e03d00 >
 1e03ce8:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >
 1e03cee:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:385:9
 1e03cf0:    21 fd fc 19       	r1 = r1 & 252			  ## power_hw.c:385:9
 1e03cf4:    91 b0             	r1 |= 2			  ## power_hw.c:385:9
 1e03cf6:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:385:9
 1e03cf8:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:387:9
 1e03cfa:    21 fd f3 19       	r1 = r1 & 243			  ## power_hw.c:387:9
 1e03cfe:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:387:9
 1e03d00:    cb ff 80 48 00 00 	r11 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:394:19
 1e03d06:    00 f6 48 b1       	r0 = [r11 + 328]			  ## power_hw.c:390:96
 1e03d0a:    09 fc d8 0e       	r9 = r0 + 3800			  ## power_hw.c:390:83
 1e03d0e:    19 f6 24 b0       	[r11 + 36] = r9			  ## power_hw.c:390:29
 1e03d12:    0a f6 40 b1       	r10 = [r11 + 320]			  ## power_hw.c:273:18
 1e03d16:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e03d18:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e03d1a:    a0 08             	r0 = r10			  ## power_hw.c:273:16
 1e03d1c:    80 f3 7e 1d       	call 15100 <__muldi3 : 1e0781c >			  ## power_hw.c:273:16
 1e03d20:    07 08             	r7 = r0			  ## power_hw.c:273:16
 1e03d22:    14 08             	r4 = r1			  ## power_hw.c:273:16
 1e03d24:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xD754C : f4240 >
 1e03d2a:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03d2c:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03d2e:    80 f3 98 1e       	call 15664 <__umoddi3 : 1e07a62 >			  ## power_hw.c:275:11
 1e03d32:    05 08             	r5 = r0			  ## power_hw.c:275:11
 1e03d34:    16 08             	r6 = r1			  ## power_hw.c:275:11
 1e03d36:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03d38:    70 08             	r0 = r7			  ## power_hw.c:275:11
 1e03d3a:    41 08             	r1 = r4			  ## power_hw.c:275:11
 1e03d3c:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03d3e:    80 f3 8c 1d       	call 15128 <__udivdi3 : 1e0785a >			  ## power_hw.c:275:11
 1e03d42:    e0 fd 60 25       	r2 = r5 | r6			  ## power_hw.c:279:9
 1e03d46:    1c 70             	r12 = 1			  ## power_hw.c:279:9
 1e03d48:    11 70             	r1 = 1			  ## power_hw.c:279:9
 1e03d4a:    01 34             	if (r2 != 0) goto 2 <__hw_lrc_time_set+0xAA : 1e03d4e >			  ## power_hw.c:279:9
 1e03d4c:    01 70             	r1 = 0			  ## power_hw.c:279:9
 1e03d4e:    0d b2             	r13 = r1 + r0			  ## power_hw.c:279:9
 1e03d50:    1d f6 20 b0       	[r11 + 32] = r13			  ## power_hw.c:392:20
 1e03d54:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e03d56:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e03d58:    a0 08             	r0 = r10			  ## power_hw.c:273:16
 1e03d5a:    92 08             	r2 = r9			  ## power_hw.c:273:16
 1e03d5c:    80 f3 5e 1d       	call 15036 <__muldi3 : 1e0781c >			  ## power_hw.c:273:16
 1e03d60:    04 08             	r4 = r0			  ## power_hw.c:273:16
 1e03d62:    15 08             	r5 = r1			  ## power_hw.c:273:16
 1e03d64:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03d66:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03d68:    80 f3 7b 1e       	call 15606 <__umoddi3 : 1e07a62 >			  ## power_hw.c:275:11
 1e03d6c:    06 08             	r6 = r0			  ## power_hw.c:275:11
 1e03d6e:    17 08             	r7 = r1			  ## power_hw.c:275:11
 1e03d70:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03d72:    40 08             	r0 = r4			  ## power_hw.c:275:11
 1e03d74:    51 08             	r1 = r5			  ## power_hw.c:275:11
 1e03d76:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03d78:    80 f3 6f 1d       	call 15070 <__udivdi3 : 1e0785a >			  ## power_hw.c:275:11
 1e03d7c:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:279:9
 1e03d80:    01 32             	if (r1 != 0) goto 2 <__hw_lrc_time_set+0xE0 : 1e03d84 >			  ## power_hw.c:279:9
 1e03d82:    0c 70             	r12 = 0			  ## power_hw.c:279:9
 1e03d84:    c0 09             	r0 += r12			  ## power_hw.c:279:9
 1e03d86:    10 f6 28 b0       	[r11 + 40] = r0			  ## power_hw.c:393:20
 1e03d8a:    d0 09             	r0 += r13			  ## power_hw.c:394:35
 1e03d8c:    10 f6 2c b0       	[r11 + 44] = r0			  ## power_hw.c:394:19
 1e03d90:    5d 01             	{pc, r13-r4} = [sp++]			  ## power_hw.c:399:1


low_power_group_query:
 1e03d92:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:983:0
 1e03d94:    04 08             	r4 = r0			  ## power_hw.c:983:0
 1e03d96:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e03d98:    45 f2 15 00       	if (r5 == r4) goto 42 <low_power_group_query+0x34 : 1e03dc6 >			  ## list.h:124:18
 1e03d9c:    f6 07             	r6 = -1
 1e03d9e:    31 4a             	r1 = [r5 + 12]			  ## power_hw.c:993:16
 1e03da0:    f0 07             	r0 = -1			  ## power_hw.c:993:16
 1e03da2:    05 22             	if (r1 == 0) goto 10 <low_power_group_query+0x1C : 1e03dae >			  ## power_hw.c:993:16
 1e03da4:    11 42             	r1 = [r1 + 4]			  ## power_hw.c:993:31
 1e03da6:    03 22             	if (r1 == 0) goto 6 <low_power_group_query+0x1C : 1e03dae >			  ## power_hw.c:993:31
 1e03da8:    20 4a             	r0 = [r5 + 8]			  ## power_hw.c:994:43
 1e03daa:    81 00             	call r1			  ## power_hw.c:994:20
 1e03dac:    0e 20             	if (r0 == 0) goto 28 <low_power_group_query+0x38 : 1e03dca >
 1e03dae:    06 f2 01 80       	if (r6 > r0) goto 2 <low_power_group_query+0x22 : 1e03db4 >
 1e03db2:    60 08             	r0 = r6			  ## power_hw.c:1003:13
 1e03db4:    05 4a             	r5 = [r5 + 0]
 1e03db6:    06 08             	r6 = r0
 1e03db8:    45 f2 f1 1f       	if (r5 != r4) goto -30 <low_power_group_query+0xC : 1e03d9e >
 1e03dbc:    01 70             	r1 = 0			  ## power_hw.c:1011:9
 1e03dbe:    f0 ef 05 00       	if (r0 == -1) goto 10 <low_power_group_query+0x3A : 1e03dcc >			  ## power_hw.c:1011:9
 1e03dc2:    01 08             	r1 = r0			  ## power_hw.c:1011:9
 1e03dc4:    03 18             	goto 6 <low_power_group_query+0x3A : 1e03dcc >			  ## power_hw.c:1011:9
 1e03dc6:    f1 07             	r1 = -1
 1e03dc8:    01 18             	goto 2 <low_power_group_query+0x3A : 1e03dcc >
 1e03dca:    01 70             	r1 = 0
 1e03dcc:    10 08             	r0 = r1			  ## power_hw.c:1016:1
 1e03dce:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:1016:1


__lp_timer_is_running:
 1e03dd0:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:261:0
 1e03dd6:    00 60             	r0 = b[r0 + 0] (u)			  ## lp_timer_hw.c:262:13
 1e03dd8:    81 fd 28 00       	r0 = uextra(r0, p:5, l:1)			  ## lp_timer_hw.c:262:12
 1e03ddc:    20 00             	rts			  ## lp_timer_hw.c:262:5


__lp_timer_dump:
 1e03dde:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:47:0
 1e03de4:    01 60             	r1 = b[r0 + 0] (u)			  ## lp_timer_hw.c:48:5
 1e03de6:    11 b3             	r1 |= 64			  ## lp_timer_hw.c:48:5
 1e03de8:    09 60             	b[r0 + 0] = r1			  ## lp_timer_hw.c:48:5
 1e03dea:    21 f9 00 00       	r1 = b[r0 + 0] (s)			  ## lp_timer_hw.c:49:13
 1e03dee:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__lp_timer_dump+0xC : 1e03dea >			  ## lp_timer_hw.c:49:5
 1e03df2:    20 00             	rts			  ## lp_timer_hw.c:71:1


__lp_timer_set_time:
 1e03df4:    75 01             	[--sp] = {rets, r5, r4}			  ## lp_timer_hw.c:75:0
 1e03df6:    02 08             	r2 = r0			  ## lp_timer_hw.c:75:0
 1e03df8:    c5 ff 80 48 00 00 	r5 = 18560 <tws_sync_channel_end : 4880 >			  ## lp_timer_hw.c:75:0
 1e03dfe:    00 f6 40 51       	r0 = [r5 + 320]			  ## power_hw.c:309:18
 1e03e02:    01 70             	r1 = 0			  ## power_hw.c:309:16
 1e03e04:    03 70             	r3 = 0			  ## power_hw.c:309:16
 1e03e06:    04 70             	r4 = 0			  ## power_hw.c:309:16
 1e03e08:    80 f3 08 1d       	call 14864 <__muldi3 : 1e0781c >			  ## power_hw.c:309:16
 1e03e0c:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD754C : f4240 >			  ## power_hw.c:311:11
 1e03e12:    03 70             	r3 = 0			  ## power_hw.c:311:11
 1e03e14:    80 f3 21 1d       	call 14914 <__udivdi3 : 1e0785a >			  ## power_hw.c:311:11
 1e03e18:    b1 4a             	r1 = [r5 + 44]			  ## lp_timer_hw.c:80:25
 1e03e1a:    10 f2 04 20       	if (r0 >= r1) goto 8 <__lp_timer_set_time+0x32 : 1e03e26 >			  ## lp_timer_hw.c:80:9
 1e03e1e:    a0 72             	r0 = 42			  ## lp_timer_hw.c:81:9
 1e03e20:    80 f3 3f 49       	call 37502 <putchar : 1e0d0a2 >			  ## lp_timer_hw.c:81:9
 1e03e24:    17 18             	goto 46 <__lp_timer_set_time+0x60 : 1e03e54 >			  ## lp_timer_hw.c:81:9
 1e03e26:    a1 4a             	r1 = [r5 + 40]			  ## lp_timer_hw.c:86:29
 1e03e28:    61 b0             	r1 = r0 - r1			  ## lp_timer_hw.c:86:19
 1e03e2a:    0a d6             	r2 = r1 >> 24			  ## lp_timer_hw.c:90:27
 1e03e2c:    c3 ff d1 1f 1a 00 	r3 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## lp_timer_hw.c:90:27
 1e03e32:    aa 66             	b[r3 + 10] = r2			  ## lp_timer_hw.c:90:19
 1e03e34:    0a d4             	r2 = r1 >> 16			  ## lp_timer_hw.c:91:27
 1e03e36:    9a 66             	b[r3 + 9] = r2			  ## lp_timer_hw.c:91:19
 1e03e38:    0a d2             	r2 = r1 >> 8			  ## lp_timer_hw.c:92:27
 1e03e3a:    8a 66             	b[r3 + 8] = r2			  ## lp_timer_hw.c:92:19
 1e03e3c:    79 66             	b[r3 + 7] = r1			  ## lp_timer_hw.c:93:19
 1e03e3e:    01 d6             	r1 = r0 >> 24			  ## lp_timer_hw.c:98:27
 1e03e40:    69 66             	b[r3 + 6] = r1			  ## lp_timer_hw.c:98:19
 1e03e42:    01 d4             	r1 = r0 >> 16			  ## lp_timer_hw.c:99:27
 1e03e44:    59 66             	b[r3 + 5] = r1			  ## lp_timer_hw.c:99:19
 1e03e46:    01 d2             	r1 = r0 >> 8			  ## lp_timer_hw.c:100:27
 1e03e48:    49 66             	b[r3 + 4] = r1			  ## lp_timer_hw.c:100:19
 1e03e4a:    38 66             	b[r3 + 3] = r0			  ## lp_timer_hw.c:101:19
 1e03e4c:    00 66             	r0 = b[r3 + 0] (u)			  ## lp_timer_hw.c:103:5
 1e03e4e:    10 b0             	r0 |= 1			  ## lp_timer_hw.c:103:5
 1e03e50:    08 66             	b[r3 + 0] = r0			  ## lp_timer_hw.c:103:5
 1e03e52:    14 70             	r4 = 1			  ## lp_timer_hw.c:103:5
 1e03e54:    40 08             	r0 = r4			  ## lp_timer_hw.c:108:1
 1e03e56:    55 01             	{pc, r5, r4} = [sp++]			  ## lp_timer_hw.c:108:1


__tus_cnt:
 1e03e58:    34 00             	[--sp] = rets			  ## power_hw.c:334:0
 1e03e5a:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD754C : f4240 >			  ## power_hw.c:338:18
 1e03e60:    01 70             	r1 = 0			  ## power_hw.c:338:18
 1e03e62:    03 70             	r3 = 0			  ## power_hw.c:338:18
 1e03e64:    80 f3 da 1c       	call 14772 <__muldi3 : 1e0781c >			  ## power_hw.c:338:18
 1e03e68:    c2 ff 80 48 00 00 	r2 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:340:25
 1e03e6e:    02 f6 40 21       	r2 = [r2 + 320]			  ## power_hw.c:340:13
 1e03e72:    03 70             	r3 = 0			  ## power_hw.c:340:11
 1e03e74:    88 01             	{rets} = [sp++]			  ## power_hw.c:340:11
 1e03e76:    c0 f3 f0 1c       	goto 14816 <__udivdi3 : 1e0785a >			  ## power_hw.c:340:11


__lp_timer_get_period:
 1e03e7a:    c1 ff d4 1f 1a 00 	r1 = 1712084 <uECC_vli_cmp_unsafe+0x9AFD8 : 1a1fd4 >			  ## lp_timer_hw.c:162:0
 1e03e80:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:165:11
 1e03e82:    12 62             	r2 = b[r1 + 1] (u)			  ## lp_timer_hw.c:166:13
 1e03e84:    23 62             	r3 = b[r1 + 2] (u)			  ## lp_timer_hw.c:167:13
 1e03e86:    31 62             	r1 = b[r1 + 3] (u)			  ## lp_timer_hw.c:168:13
 1e03e88:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:166:9
 1e03e8c:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:167:9
 1e03e90:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:168:9
 1e03e94:    e1 1f             	goto -62 <__tus_cnt : 1e03e58 >			  ## lp_timer_hw.c:170:12


__low_power_suspend:
 1e03e96:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:627:0
 1e03e98:    04 08             	r4 = r0			  ## power_hw.c:627:0
 1e03e9a:    06 48             	r6 = [r4 + 0]			  ## power_hw.c:627:0
 1e03e9c:    15 08             	r5 = r1			  ## power_hw.c:627:0
 1e03e9e:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x20 : 1e03eb6 >			  ## power_hw.c:627:0
 1e03ea2:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:631:16
 1e03ea4:    04 20             	if (r0 == 0) goto 8 <__low_power_suspend+0x18 : 1e03eae >			  ## power_hw.c:631:16
 1e03ea6:    21 40             	r1 = [r0 + 8]			  ## power_hw.c:631:31
 1e03ea8:    02 22             	if (r1 == 0) goto 4 <__low_power_suspend+0x18 : 1e03eae >			  ## power_hw.c:631:31
 1e03eaa:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:632:38
 1e03eac:    81 00             	call r1			  ## power_hw.c:632:13
 1e03eae:    06 4c             	r6 = [r6 + 0]
 1e03eb0:    46 f2 f7 1f       	if (r6 != r4) goto -18 <__low_power_suspend+0xC : 1e03ea2 >
 1e03eb4:    06 48             	r6 = [r4 + 0]
 1e03eb6:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x38 : 1e03ece >
 1e03eba:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:636:16
 1e03ebc:    05 20             	if (r0 == 0) goto 10 <__low_power_suspend+0x32 : 1e03ec8 >			  ## power_hw.c:636:16
 1e03ebe:    32 40             	r2 = [r0 + 12]			  ## power_hw.c:636:31
 1e03ec0:    03 24             	if (r2 == 0) goto 6 <__low_power_suspend+0x32 : 1e03ec8 >			  ## power_hw.c:636:31
 1e03ec2:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:637:37
 1e03ec4:    51 08             	r1 = r5			  ## power_hw.c:637:13
 1e03ec6:    82 00             	call r2			  ## power_hw.c:637:13
 1e03ec8:    06 4c             	r6 = [r6 + 0]
 1e03eca:    46 f2 f6 1f       	if (r6 != r4) goto -20 <__low_power_suspend+0x24 : 1e03eba >
 1e03ece:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:640:1


__hw_xosc_fsck_run:
 1e03ed0:    c0 ff 00 11 1e 00 	r0 = 1970432 <uECC_vli_cmp_unsafe+0xDA104 : 1e1100 >			  ## xosc_fsck.c:43:0
 1e03ed6:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:45:5
 1e03eda:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:47:5
 1e03edc:    31 fd 70 1a       	r1 = r1 & 4294938623			  ## xosc_fsck.c:47:5
 1e03ee0:    11 b7             	r1 |= 16384			  ## xosc_fsck.c:47:5
 1e03ee2:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:47:5
 1e03ee4:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:48:5
 1e03ee6:    31 fd 0e 19       	r1 = r1 & 4294967281			  ## xosc_fsck.c:48:5
 1e03eea:    01 fd 0c 19       	r1 = r1 | 12			  ## xosc_fsck.c:48:5
 1e03eee:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:48:5
 1e03ef0:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:49:5
 1e03ef2:    31 fd 0f 1a       	r1 = r1 & 4294963455			  ## xosc_fsck.c:49:5
 1e03ef6:    01 fd 07 1a       	r1 = r1 | 1792			  ## xosc_fsck.c:49:5
 1e03efa:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:49:5
 1e03efc:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:51:5
 1e03f00:    00 f4 01 09       	[r0 + 0] |= 1			  ## xosc_fsck.c:52:5
 1e03f04:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:55:24
 1e03f06:    51 04             	r1 = r1.b0 (s)			  ## xosc_fsck.c:55:12
 1e03f08:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__hw_xosc_fsck_run+0x34 : 1e03f04 >			  ## xosc_fsck.c:55:5
 1e03f0c:    11 40             	r1 = [r0 + 4]			  ## xosc_fsck.c:60:86
 1e03f0e:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:65:5
 1e03f10:    71 b0             	r1 &= 4294967294			  ## xosc_fsck.c:65:5
 1e03f12:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:65:5
 1e03f14:    20 00             	rts			  ## xosc_fsck.c:66:1


__lp_timer_get_pass_time:
 1e03f16:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:146:0
 1e03f1c:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:147:5
 1e03f1e:    10 b3             	r0 |= 64			  ## lp_timer_hw.c:147:5
 1e03f20:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:147:5
 1e03f22:    00 00             	nop			  ## lp_timer_hw.c:148:5
 1e03f24:    00 00             	nop			  ## lp_timer_hw.c:149:5
 1e03f26:    20 f9 00 10       	r0 = b[r1 + 0] (s)			  ## lp_timer_hw.c:150:13
 1e03f2a:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <__lp_timer_get_pass_time+0x10 : 1e03f26 >			  ## lp_timer_hw.c:150:5
 1e03f2e:    90 62             	r0 = b[r1 + 9] (u)			  ## lp_timer_hw.c:153:12
 1e03f30:    a2 62             	r2 = b[r1 + 10] (u)			  ## lp_timer_hw.c:154:14
 1e03f32:    b3 62             	r3 = b[r1 + 11] (u)			  ## lp_timer_hw.c:155:14
 1e03f34:    c1 62             	r1 = b[r1 + 12] (u)			  ## lp_timer_hw.c:156:14
 1e03f36:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:154:10
 1e03f3a:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:155:10
 1e03f3e:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:156:10
 1e03f42:    8a 1f             	goto -236 <__tus_cnt : 1e03e58 >			  ## lp_timer_hw.c:158:12


__tcnt_us:
 1e03f44:    78 01             	[--sp] = {rets, r8-r4}			  ## power_hw.c:268:0
 1e03f46:    02 08             	r2 = r0			  ## power_hw.c:268:0
 1e03f48:    c0 ff 80 48 00 00 	r0 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:273:30
 1e03f4e:    00 f6 40 01       	r0 = [r0 + 320]			  ## power_hw.c:273:18
 1e03f52:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e03f54:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e03f56:    80 f3 61 1c       	call 14530 <__muldi3 : 1e0781c >			  ## power_hw.c:273:16
 1e03f5a:    04 08             	r4 = r0			  ## power_hw.c:273:16
 1e03f5c:    15 08             	r5 = r1			  ## power_hw.c:273:16
 1e03f5e:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xD754C : f4240 >			  ## power_hw.c:275:11
 1e03f64:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03f66:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03f68:    80 f3 7b 1d       	call 15094 <__umoddi3 : 1e07a62 >			  ## power_hw.c:275:11
 1e03f6c:    07 08             	r7 = r0			  ## power_hw.c:275:11
 1e03f6e:    16 08             	r6 = r1			  ## power_hw.c:275:11
 1e03f70:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03f72:    40 08             	r0 = r4			  ## power_hw.c:275:11
 1e03f74:    51 08             	r1 = r5			  ## power_hw.c:275:11
 1e03f76:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e03f78:    80 f3 6f 1c       	call 14558 <__udivdi3 : 1e0785a >			  ## power_hw.c:275:11
 1e03f7c:    e0 fd 60 27       	r2 = r7 | r6			  ## power_hw.c:279:9
 1e03f80:    11 70             	r1 = 1			  ## power_hw.c:279:9
 1e03f82:    01 34             	if (r2 != 0) goto 2 <__tcnt_us+0x42 : 1e03f86 >			  ## power_hw.c:279:9
 1e03f84:    01 70             	r1 = 0			  ## power_hw.c:279:9
 1e03f86:    10 09             	r0 += r1			  ## power_hw.c:279:9
 1e03f88:    58 01             	{pc, r8-r4} = [sp++]			  ## power_hw.c:282:5


wdt_close:
 1e03f8a:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:13:0
 1e03f90:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:14:18
 1e03f92:    71 b2             	r1 &= 4294967279			  ## wdt.c:14:18
 1e03f94:    09 60             	b[r0 + 0] = r1			  ## wdt.c:14:18
 1e03f96:    20 00             	rts			  ## wdt.c:15:1


norflash_open:
 1e03f98:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:605:0
 1e03f9a:    c5 ff c0 25 00 00 	r5 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:605:0
 1e03fa0:    01 f9 93 50       	r1 = b[r5 + 147] (u)			  ## vm_sfc.c:608:21
 1e03fa4:    04 08             	r4 = r0			  ## vm_sfc.c:608:21
 1e03fa6:    18 32             	if (r1 != 0) goto 48 <norflash_open+0x40 : 1e03fd8 >			  ## vm_sfc.c:608:21
 1e03fa8:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >
 1e03fae:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:593:18
 1e03fb0:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:593:18
 1e03fb2:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:593:18
 1e03fb4:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:594:18
 1e03fb6:    31 fd 0c 1a       	r1 = r1 & 4294964223			  ## vm_sfc.c:594:18
 1e03fba:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:594:18
 1e03fbc:    00 f4 60 0a       	[r0 + 0] |= 24576			  ## vm_sfc.c:595:18
 1e03fc0:    00 fc 14 38       	r0 = r0 + 14356			  ## vm_sfc.c:595:18
 1e03fc4:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:596:20
 1e03fc6:    f1 b9             	r1 &= 4294443007			  ## vm_sfc.c:596:20
 1e03fc8:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:596:20
 1e03fca:    50 fc 58 01       	r0 = r5 + 344			  ## vm_sfc.c:598:5
 1e03fce:    98 f3 25 17       	call 3157578 <os_mutex_create : 106e1c >			  ## vm_sfc.c:598:5
 1e03fd2:    10 70             	r0 = 1			  ## vm_sfc.c:600:21
 1e03fd4:    10 f9 93 50       	b[r5 + 147] = r0			  ## vm_sfc.c:600:21
 1e03fd8:    0a 28             	if (r4 == 0) goto 20 <norflash_open+0x56 : 1e03fee >
 1e03fda:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:614:32
 1e03fe0:    01 fc e0 01       	r1 = r0 + 480			  ## vm_sfc.c:613:17
 1e03fe4:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:613:17
 1e03fe6:    51 fc 80 00       	r1 = r5 + 128			  ## vm_sfc.c:614:32
 1e03fea:    11 f6 f0 01       	[r0 + 496] = r1			  ## vm_sfc.c:614:32
 1e03fee:    c0 ff 54 45 00 00 	r0 = 17748 <lmp_conn_for_link : 4554 >			  ## vm_sfc.c:617:5
 1e03ff4:    c1 ff 54 45 00 00 	r1 = 17748 <lmp_conn_for_link : 4554 >			  ## vm_sfc.c:617:5
 1e03ffa:    21 b2             	r1 = r1 - r0			  ## vm_sfc.c:617:5
 1e03ffc:    10 70             	r0 = 1			  ## vm_sfc.c:617:5
 1e03ffe:    28 ff 10 1a 01 00 	if (r1 > 4096) goto 2 <norflash_open+0x6E : 1e04006 >			  ## vm_sfc.c:617:5
 1e04004:    00 70             	r0 = 0			  ## vm_sfc.c:617:5
 1e04006:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:617:5


p11_init:
 1e04008:    77 01             	[--sp] = {rets, r7-r4}			  ## power_hw.c:1624:0
 1e0400a:    c0 ff 04 3e 1e 00 	r0 = 1981956 <uECC_vli_cmp_unsafe+0xDCE08 : 1e3e04 >			  ## power_hw.c:1624:0
 1e04010:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1628:14
 1e04012:    05 f3 fd 1f       	if ((r1 & 32) == 0) goto -6 <p11_init+0x8 : 1e04010 >			  ## power_hw.c:1628:30
 1e04016:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1628:33
 1e04018:    06 f3 fa 1f       	if ((r1 & 64) == 0) goto -12 <p11_init+0x8 : 1e04010 >			  ## power_hw.c:1628:33
 1e0401c:    f1 7f             	r1 = 255
 1e0401e:    c2 ff 80 1f 1a 00 	r2 = 1712000 <uECC_vli_cmp_unsafe+0x9AF84 : 1a1f80 >
 1e04024:    e3 7e             	r3 = 238
 1e04026:    b4 7a             	r4 = 171
 1e04028:    e5 70             	r5 = 14
 1e0402a:    56 75             	r6 = 85
 1e0402c:    09 64             	b[r2 + 0] = r1			  ## power_hw.c:1634:20
 1e0402e:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1635:20
 1e04030:    0c 64             	b[r2 + 0] = r4			  ## power_hw.c:1636:20
 1e04032:    0d 64             	b[r2 + 0] = r5			  ## power_hw.c:1637:20
 1e04034:    0e 64             	b[r2 + 0] = r6			  ## power_hw.c:1638:20
 1e04036:    07 40             	r7 = [r0 + 0]			  ## power_hw.c:1639:15
 1e04038:    00 f3 f8 7f       	if ((r7 & 1) == 0) goto -16 <p11_init+0x24 : 1e0402c >			  ## power_hw.c:1639:5
 1e0403c:    57 01             	{pc, r7-r4} = [sp++]			  ## power_hw.c:1641:1


wdt_init:
 1e0403e:    c0 71             	r0 = 28			  ## wdt.c:79:0
 1e04040:    c1 ff 88 1f 1a 00 	r1 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:79:0
 1e04046:    08 62             	b[r1 + 0] = r0			  ## wdt.c:79:0
 1e04048:    00 70             	r0 = 0			  ## wdt.c:79:0
 1e0404a:    18 62             	b[r1 + 1] = r0			  ## wdt.c:79:0
 1e0404c:    20 00             	rts			  ## wdt.c:87:1


uart_init:
 1e0404e:    20 fb 71 04       	r0 = 1974272			  ## uart.c:143:0
 1e04052:    02 40             	r2 = [r0 + 0]			  ## uart.c:83:28
 1e04054:    f1 7a             	r1 = 175			  ## uart.c:83:28
 1e04056:    00 f3 0c 20       	if ((r2 & 1) == 0) goto 24 <uart_init+0x24 : 1e04072 >			  ## uart.c:83:28
 1e0405a:    00 fc 00 01       	r0 = r0 + 256
 1e0405e:    02 40             	r2 = [r0 + 0]			  ## uart.c:85:28
 1e04060:    31 7b             	r1 = 179			  ## uart.c:85:28
 1e04062:    00 f3 06 20       	if ((r2 & 1) == 0) goto 12 <uart_init+0x24 : 1e04072 >			  ## uart.c:85:28
 1e04066:    00 fc 00 01       	r0 = r0 + 256
 1e0406a:    02 40             	r2 = [r0 + 0]			  ## uart.c:87:28
 1e0406c:    b1 7b             	r1 = 187			  ## uart.c:87:28
 1e0406e:    20 f3 25 20       	if ((r2 & 1) != 0) goto 74 <uart_init+0x6E : 1e040bc >			  ## uart.c:87:28
 1e04072:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >
 1e04078:    10 f6 8c 20       	[r2 + 140] = r0
 1e0407c:    c2 ff 00 18 1e 00 	r2 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >
 1e04082:    03 44             	r3 = [r2 + 0]			  ## gpio.c:235:22
 1e04084:    73 b0             	r3 &= 4294967294			  ## gpio.c:235:22
 1e04086:    0b 44             	[r2 + 0] = r3			  ## gpio.c:235:22
 1e04088:    22 fc 00 3c       	r2 = r2 + 15360			  ## gpio.c:235:22
 1e0408c:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## gpio.c:235:22
 1e04090:    03 44             	r3 = [r2 + 0]			  ## gpio.c:411:13
 1e04092:    73 b1             	r3 &= 4294967291			  ## gpio.c:411:13
 1e04094:    0b 44             	[r2 + 0] = r3			  ## gpio.c:411:13
 1e04096:    00 f4 01 29       	[r2 + 0] |= 1			  ## gpio.c:412:13
 1e0409a:    11 f6 64 22       	[r2 + 612] = r1			  ## gpio.c:1201:11
 1e0409e:    c0 f4 34 0a       	[r0 + 0] = 13312			  ## uart.c:175:17
 1e040a2:    c1 ff 28 32 00 00 	r1 = 12840 <hdl.2.371 : 3228 >			  ## clock.c:1693:30
 1e040a8:    02 42             	r2 = [r1 + 0]			  ## clock.c:1693:30
 1e040aa:    f1 07             	r1 = -1			  ## clock.c:2233:9
 1e040ac:    01 24             	if (r2 == 0) goto 2 <uart_init+0x62 : 1e040b0 >			  ## clock.c:2233:9
 1e040ae:    51 70             	r1 = 5			  ## clock.c:2233:9
 1e040b0:    29 40             	[r0 + 8] = r1			  ## uart.c:189:17
 1e040b2:    01 40             	r1 = [r0 + 0]			  ## uart.c:190:17
 1e040b4:    02 fb 05 34       	r2 = 13317 <vAppSoftwareInterruptISR+0x39 : 3405 >			  ## uart.c:190:17
 1e040b8:    51 b4             	r1 |= r2			  ## uart.c:190:17
 1e040ba:    09 40             	[r0 + 0] = r1			  ## uart.c:190:17
 1e040bc:    20 00             	rts


efuse_dump:
 1e040be:    74 01             	[--sp] = {rets, r4}			  ## efuse.c:174:0
 1e040c0:    c4 ff 00 08 00 00 	r4 = 2048 <report_mmu_tlb_size : 800 >			  ## efuse.c:15:22
 1e040c6:    e1 58             	r1 = h[r4 + 28] (u)			  ## efuse.c:175:35
 1e040c8:    c0 ff 26 1e e1 01 	r0 = 31530534 <update_target_end+0x1BF6 : 1e11e26 >			  ## efuse.c:175:5
 1e040ce:    80 f3 6a 46       	call 36052 <printf : 1e0cda6 >			  ## efuse.c:175:5
 1e040d2:    f0 58             	r0 = h[r4 + 30] (u)			  ## efuse.c:15:22
 1e040d4:    21 fd 0f 09       	r1 = r0 & 15			  ## efuse.c:176:35
 1e040d8:    c0 ff 39 1e e1 01 	r0 = 31530553 <update_target_end+0x1C09 : 1e11e39 >			  ## efuse.c:176:5
 1e040de:    80 f3 62 46       	call 36036 <printf : 1e0cda6 >			  ## efuse.c:176:5
 1e040e2:    f0 58             	r0 = h[r4 + 30] (u)			  ## efuse.c:21:23
 1e040e4:    85 fd 20 10       	r1 = uextra(r0, p:4, l:5)			  ## efuse.c:21:40
 1e040e8:    c0 ff 4c 1e e1 01 	r0 = 31530572 <update_target_end+0x1C1C : 1e11e4c >			  ## efuse.c:177:5
 1e040ee:    14 01             	{rets, r4} = [sp++]			  ## efuse.c:177:5
 1e040f0:    c0 f3 59 46       	goto 36018 <printf : 1e0cda6 >			  ## efuse.c:177:5


reset_source_dump:
 1e040f4:    78 01             	[--sp] = {rets, r8-r4}			  ## power_hw.c:1565:0
 1e040f6:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## power_hw.c:1565:0
 1e040fc:    00 70             	r0 = 0			  ## power_hw.c:1565:0
 1e040fe:    10 f6 bc 70       	[r7 + 188] = r0			  ## power_hw.c:1568:24
 1e04102:    c0 ff f8 1f 1a 00 	r0 = 1712120 <uECC_vli_cmp_unsafe+0x9AFFC : 1a1ff8 >			  ## power_hw.c:1568:24
 1e04108:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1571:5
 1e0410a:    71 b2             	r1 &= 4294967279			  ## power_hw.c:1571:5
 1e0410c:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1571:5
 1e0410e:    05 fc 1a f8       	r5 = r0 + -2022			  ## power_hw.c:1571:5
 1e04112:    30 6a             	r0 = b[r5 + 3] (u)			  ## power_hw.c:1572:5
 1e04114:    f0 b2             	r0 &= 4294967263			  ## power_hw.c:1572:5
 1e04116:    38 6a             	b[r5 + 3] = r0			  ## power_hw.c:1572:5
 1e04118:    20 fb 1e 0b       	r0 = 1966080			  ## power_hw.c:1572:5
 1e0411c:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1574:20
 1e0411e:    51 04             	r1 = r1.b0 (s)			  ## power_hw.c:1574:38
 1e04120:    01 e0 08 b0       	ifs (r1 < 0) goto 16 <reset_source_dump+0x40 : 1e04134 >			  ## power_hw.c:1574:9
 1e04124:    70 fc bc 00       	r0 = r7 + 188			  ## power_hw.c:1575:28
 1e04128:    00 f4 80 09       	[r0 + 0] |= 128			  ## power_hw.c:1575:28
 1e0412c:    c0 ff 40 32 e1 01 	r0 = 31535680 <gpio_out_regs+0x188 : 1e13240 >			  ## power_hw.c:1576:9
 1e04132:    d4 18             	goto 424 <system_code_size+0x140 : 1e042dc >			  ## power_hw.c:1576:9
 1e04134:    00 f4 40 09       	[r0 + 0] |= 64			  ## power_hw.c:1579:23
 1e04138:    06 f6 c0 00       	r6 = [r0 + 192]			  ## power_hw.c:1581:19
 1e0413c:    00 f6 bc 70       	r0 = [r7 + 188]			  ## power_hw.c:1582:24
 1e04140:    81 05             	r1 = r6.b0 (u)			  ## power_hw.c:1582:27
 1e04142:    50 b2             	r0 |= r1			  ## power_hw.c:1582:24
 1e04144:    10 f6 bc 70       	[r7 + 188] = r0			  ## power_hw.c:1582:24
 1e04148:    c0 ff f4 1e e1 01 	r0 = 31530740 <update_target_end+0x1CC4 : 1e11ef4 >			  ## power_hw.c:1584:5
 1e0414e:    80 f3 2a 46       	call 35924 <printf : 1e0cda6 >			  ## power_hw.c:1584:5
 1e04152:    00 f3 a9 60       	if ((r6 & 1) == 0) goto 338 <system_code_size+0x10C : 1e042a8 >			  ## power_hw.c:1584:5
 1e04156:    c0 ff 13 1f e1 01 	r0 = 31530771 <update_target_end+0x1CE3 : 1e11f13 >			  ## power_hw.c:1587:9
 1e0415c:    80 f3 04 47       	call 36360 <puts : 1e0cf68 >			  ## power_hw.c:1587:9
 1e04160:    20 f9 78 57       	r0 = b[r5 + 1912] (s)			  ## power_hw.c:1528:10
 1e04164:    00 e0 08 b0       	ifs (r0 < 0) goto 16 <reset_source_dump+0x84 : 1e04178 >			  ## power_hw.c:1528:9
 1e04168:    70 fc bc 00       	r0 = r7 + 188			  ## power_hw.c:1529:28
 1e0416c:    00 f4 80 0a       	[r0 + 0] |= 32768			  ## power_hw.c:1529:28
 1e04170:    c0 ff a0 31 e1 01 	r0 = 31535520 <gpio_out_regs+0xE8 : 1e131a0 >			  ## power_hw.c:1530:9
 1e04176:    96 18             	goto 300 <system_code_size+0x108 : 1e042a4 >			  ## power_hw.c:1530:9
 1e04178:    50 fc 78 07       	r0 = r5 + 1912
 1e0417c:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1534:17
 1e0417e:    11 b3             	r1 |= 64			  ## power_hw.c:1534:17
 1e04180:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1534:17
 1e04182:    44 60             	r4 = b[r0 + 4] (u)			  ## power_hw.c:1537:28
 1e04184:    00 f6 bc 70       	r0 = [r7 + 188]			  ## power_hw.c:1537:24
 1e04188:    21 c2             	r1 = r4 << 8			  ## power_hw.c:1537:32
 1e0418a:    50 b2             	r0 |= r1			  ## power_hw.c:1537:24
 1e0418c:    10 f6 bc 70       	[r7 + 188] = r0			  ## power_hw.c:1537:24
 1e04190:    c0 ff b5 1e e1 01 	r0 = 31530677 <update_target_end+0x1C85 : 1e11eb5 >			  ## power_hw.c:1539:5
 1e04196:    41 08             	r1 = r4			  ## power_hw.c:1539:5
 1e04198:    80 f3 05 46       	call 35850 <printf : 1e0cda6 >			  ## power_hw.c:1539:5


system_code_size:
 1e0419c:    00 f3 05 40       	if ((r4 & 1) == 0) goto 10 <system_code_size+0xE : 1e041aa >			  ## power_hw.c:1539:5
 1e041a0:    c0 ff d3 1e e1 01 	r0 = 31530707 <update_target_end+0x1CA3 : 1e11ed3 >			  ## power_hw.c:1542:9
 1e041a6:    80 f3 df 46       	call 36286 <puts : 1e0cf68 >			  ## power_hw.c:1542:9
 1e041aa:    01 f3 05 40       	if ((r4 & 2) == 0) goto 10 <system_code_size+0x1C : 1e041b8 >
 1e041ae:    c0 ff c0 31 e1 01 	r0 = 31535552 <gpio_out_regs+0x108 : 1e131c0 >			  ## power_hw.c:1545:9
 1e041b4:    80 f3 d8 46       	call 36272 <puts : 1e0cf68 >			  ## power_hw.c:1545:9
 1e041b8:    02 f3 61 40       	if ((r4 & 4) == 0) goto 194 <system_code_size+0xE2 : 1e0427e >
 1e041bc:    c0 ff dc 1e e1 01 	r0 = 31530716 <update_target_end+0x1CAC : 1e11edc >			  ## power_hw.c:1548:9
 1e041c2:    80 f3 d1 46       	call 36258 <puts : 1e0cf68 >			  ## power_hw.c:1548:9
 1e041c6:    20 f9 1e 50       	r0 = b[r5 + 30] (s)			  ## power_hw.c:1483:10
 1e041ca:    00 e0 0a b0       	ifs (r0 < 0) goto 20 <system_code_size+0x46 : 1e041e2 >			  ## power_hw.c:1483:9
 1e041ce:    70 fc bc 00       	r0 = r7 + 188			  ## power_hw.c:1484:28
 1e041d2:    00 f4 80 0b       	[r0 + 0] |= 8388608			  ## power_hw.c:1484:28
 1e041d6:    c0 ff 10 31 e1 01 	r0 = 31535376 <gpio_out_regs+0x58 : 1e13110 >			  ## power_hw.c:1485:9
 1e041dc:    80 f3 c4 46       	call 36232 <puts : 1e0cf68 >			  ## power_hw.c:1485:9
 1e041e0:    4e 18             	goto 156 <system_code_size+0xE2 : 1e0427e >			  ## power_hw.c:1485:9
 1e041e2:    e8 9b             	r8 = r5 + 30
 1e041e4:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## power_hw.c:1489:17
 1e041e8:    10 b3             	r0 |= 64			  ## power_hw.c:1489:17
 1e041ea:    10 f9 00 80       	b[r8 + 0] = r0			  ## power_hw.c:1489:17
 1e041ee:    05 6a             	r5 = b[r5 + 0] (u)			  ## power_hw.c:1492:28
 1e041f0:    00 f6 bc 70       	r0 = [r7 + 188]			  ## power_hw.c:1492:24
 1e041f4:    29 c4             	r1 = r5 << 16			  ## power_hw.c:1492:32
 1e041f6:    50 b2             	r0 |= r1			  ## power_hw.c:1492:24
 1e041f8:    10 f6 bc 70       	[r7 + 188] = r0			  ## power_hw.c:1492:24
 1e041fc:    c0 ff 79 1e e1 01 	r0 = 31530617 <update_target_end+0x1C49 : 1e11e79 >			  ## power_hw.c:1494:5
 1e04202:    51 08             	r1 = r5			  ## power_hw.c:1494:5
 1e04204:    80 f3 cf 45       	call 35742 <printf : 1e0cda6 >			  ## power_hw.c:1494:5
 1e04208:    00 f3 05 50       	if ((r5 & 1) == 0) goto 10 <system_code_size+0x7A : 1e04216 >			  ## power_hw.c:1494:5
 1e0420c:    c0 ff 97 1e e1 01 	r0 = 31530647 <update_target_end+0x1C67 : 1e11e97 >			  ## power_hw.c:1497:9
 1e04212:    80 f3 a9 46       	call 36178 <puts : 1e0cf68 >			  ## power_hw.c:1497:9
 1e04216:    01 f3 05 50       	if ((r5 & 2) == 0) goto 10 <system_code_size+0x88 : 1e04224 >
 1e0421a:    c0 ff a1 1e e1 01 	r0 = 31530657 <update_target_end+0x1C71 : 1e11ea1 >			  ## power_hw.c:1500:9
 1e04220:    80 f3 a2 46       	call 36164 <puts : 1e0cf68 >			  ## power_hw.c:1500:9
 1e04224:    02 f3 05 50       	if ((r5 & 4) == 0) goto 10 <system_code_size+0x96 : 1e04232 >
 1e04228:    c0 ff ab 1e e1 01 	r0 = 31530667 <update_target_end+0x1C7B : 1e11eab >			  ## power_hw.c:1503:9
 1e0422e:    80 f3 9b 46       	call 36150 <puts : 1e0cf68 >			  ## power_hw.c:1503:9
 1e04232:    03 f3 05 50       	if ((r5 & 8) == 0) goto 10 <system_code_size+0xA4 : 1e04240 >
 1e04236:    c0 ff af 1e e1 01 	r0 = 31530671 <update_target_end+0x1C7F : 1e11eaf >			  ## power_hw.c:1506:9
 1e0423c:    80 f3 94 46       	call 36136 <puts : 1e0cf68 >			  ## power_hw.c:1506:9
 1e04240:    04 f3 05 50       	if ((r5 & 16) == 0) goto 10 <system_code_size+0xB2 : 1e0424e >
 1e04244:    c0 ff 30 31 e1 01 	r0 = 31535408 <gpio_out_regs+0x78 : 1e13130 >			  ## power_hw.c:1509:9
 1e0424a:    80 f3 8d 46       	call 36122 <puts : 1e0cf68 >			  ## power_hw.c:1509:9
 1e0424e:    05 f3 16 50       	if ((r5 & 32) == 0) goto 44 <system_code_size+0xE2 : 1e0427e >
 1e04252:    c0 ff 50 31 e1 01 	r0 = 31535440 <gpio_out_regs+0x98 : 1e13150 >			  ## power_hw.c:1512:9
 1e04258:    80 f3 86 46       	call 36108 <puts : 1e0cf68 >			  ## power_hw.c:1512:9
 1e0425c:    00 f9 1a 80       	r0 = b[r8 + 26] (u)			  ## power_hw.c:1514:13
 1e04260:    01 ff ab 00 0c 00 	if (r0 != 171) goto 24 <system_code_size+0xE2 : 1e0427e >			  ## power_hw.c:1514:13
 1e04266:    c0 ff 80 31 e1 01 	r0 = 31535488 <gpio_out_regs+0xC8 : 1e13180 >			  ## power_hw.c:1515:13
 1e0426c:    80 f3 7c 46       	call 36088 <puts : 1e0cf68 >			  ## power_hw.c:1515:13
 1e04270:    70 fc bc 00       	r0 = r7 + 188			  ## power_hw.c:1516:32
 1e04274:    00 f4 01 0c       	[r0 + 0] |= 16777216			  ## power_hw.c:1516:32
 1e04278:    00 70             	r0 = 0			  ## power_hw.c:1517:26
 1e0427a:    10 f9 1a 80       	b[r8 + 26] = r0			  ## power_hw.c:1517:26
 1e0427e:    03 f3 05 40       	if ((r4 & 8) == 0) goto 10 <system_code_size+0xF0 : 1e0428c >
 1e04282:    c0 ff ea 1e e1 01 	r0 = 31530730 <update_target_end+0x1CBA : 1e11eea >			  ## power_hw.c:1552:9
 1e04288:    80 f3 6e 46       	call 36060 <puts : 1e0cf68 >			  ## power_hw.c:1552:9
 1e0428c:    04 f3 05 40       	if ((r4 & 16) == 0) goto 10 <system_code_size+0xFE : 1e0429a >
 1e04290:    c0 ff f0 31 e1 01 	r0 = 31535600 <gpio_out_regs+0x138 : 1e131f0 >			  ## power_hw.c:1555:9
 1e04296:    80 f3 67 46       	call 36046 <puts : 1e0cf68 >			  ## power_hw.c:1555:9
 1e0429a:    05 f3 05 40       	if ((r4 & 32) == 0) goto 10 <system_code_size+0x10C : 1e042a8 >
 1e0429e:    c0 ff 20 32 e1 01 	r0 = 31535648 <gpio_out_regs+0x168 : 1e13220 >			  ## power_hw.c:1559:9
 1e042a4:    80 f3 60 46       	call 36032 <puts : 1e0cf68 >
 1e042a8:    01 f3 05 60       	if ((r6 & 2) == 0) goto 10 <system_code_size+0x11A : 1e042b6 >
 1e042ac:    c0 ff 21 1f e1 01 	r0 = 31530785 <update_target_end+0x1CF1 : 1e11f21 >			  ## power_hw.c:1591:9
 1e042b2:    80 f3 59 46       	call 36018 <puts : 1e0cf68 >			  ## power_hw.c:1591:9
 1e042b6:    02 f3 05 60       	if ((r6 & 4) == 0) goto 10 <system_code_size+0x128 : 1e042c4 >
 1e042ba:    c0 ff 2a 1f e1 01 	r0 = 31530794 <update_target_end+0x1CFA : 1e11f2a >			  ## power_hw.c:1594:9
 1e042c0:    80 f3 52 46       	call 36004 <puts : 1e0cf68 >			  ## power_hw.c:1594:9
 1e042c4:    05 f3 05 60       	if ((r6 & 32) == 0) goto 10 <system_code_size+0x136 : 1e042d2 >
 1e042c8:    c0 ff 60 32 e1 01 	r0 = 31535712 <gpio_out_regs+0x1A8 : 1e13260 >			  ## power_hw.c:1597:9
 1e042ce:    80 f3 4b 46       	call 35990 <puts : 1e0cf68 >			  ## power_hw.c:1597:9
 1e042d2:    06 f3 05 60       	if ((r6 & 64) == 0) goto 10 <system_code_size+0x144 : 1e042e0 >
 1e042d6:    c0 ff 90 32 e1 01 	r0 = 31535760 <gpio_out_regs+0x1D8 : 1e13290 >			  ## power_hw.c:1601:9
 1e042dc:    80 f3 44 46       	call 35976 <puts : 1e0cf68 >
 1e042e0:    58 01             	{pc, r8-r4} = [sp++]


timer1_init:
 1e042e2:    34 00             	[--sp] = rets			  ## timer.c:197:0
 1e042e4:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:198:20
 1e042ea:    c0 f4 40 0a       	[r0 + 0] = 16384			  ## timer.c:198:20
 1e042ee:    c2 ff 40 38 e0 01 	r2 = 31471680 <timer1_isr : 1e03840 >			  ## timer.c:200:5
 1e042f4:    50 70             	r0 = 5			  ## timer.c:200:5
 1e042f6:    11 70             	r1 = 1			  ## timer.c:200:5
 1e042f8:    80 f3 47 4b       	call 38542 <request_irq : 1e0d98a >			  ## timer.c:200:5
 1e042fc:    00 70             	r0 = 0			  ## timer.c:204:5
 1e042fe:    30 00             	pc = [sp++]			  ## timer.c:204:5


get_dev_id:
 1e04300:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:154:0
 1e04302:    04 08             	r4 = r0			  ## debug.c:154:0
 1e04304:    98 f3 fa 15       	call 3156980 <strlen : 106efc >			  ## debug.c:158:48
 1e04308:    05 08             	r5 = r0			  ## debug.c:158:48
 1e0430a:    07 70             	r7 = 0			  ## debug.c:158:48
 1e0430c:    c6 ff ac 2c e1 01 	r6 = 31534252 <dev_id_list : 1e12cac >			  ## debug.c:158:48
 1e04312:    60 08             	r0 = r6			  ## debug.c:158:14
 1e04314:    41 08             	r1 = r4			  ## debug.c:158:14
 1e04316:    52 08             	r2 = r5			  ## debug.c:158:14
 1e04318:    98 f3 e8 15       	call 3156944 <memcmp : 106eec >			  ## debug.c:158:14
 1e0431c:    06 20             	if (r0 == 0) goto 12 <get_dev_id+0x2A : 1e0432a >			  ## debug.c:158:14
 1e0431e:    17 80             	r7 += 1			  ## debug.c:157:47
 1e04320:    16 81             	r6 += 17			  ## debug.c:157:19
 1e04322:    27 e3 f6 3f       	if (r7 < 50) goto -20 <get_dev_id+0x12 : 1e04312 >			  ## debug.c:157:19
 1e04326:    f0 07             	r0 = -1
 1e04328:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1
 1e0432a:    00 6d             	r0 = b[r6 + 16] (u)			  ## debug.c:159:20
 1e0432c:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1


mpu_privilege:
 1e0432e:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1344:0
 1e04330:    16 fc d0 ff       	r6 = r1 + -48			  ## debug.c:1347:5
 1e04334:    64 02             	r4 = [sp+24]			  ## debug.c:1347:5
 1e04336:    55 02             	r5 = [sp+20]			  ## debug.c:1347:5
 1e04338:    80 c0             	r0 = r0 << 2
 1e0433a:    c7 ff 00 03 1b 00 	r7 = 1770240 <uECC_vli_cmp_unsafe+0xA9304 : 1b0300 >


system_code_total_size:
 1e0433c:    00 03             	r0 = [sp+64]
 1e0433e:    1b 00             	cli
 1e04340:    70 09             	r0 += r7
 1e04342:    36 e0 13 20       	if (r6 >= 3) goto 38 <system_code_total_size+0x30 : 1e0436c >
 1e04346:    03 41             	r3 = [r0 + 64]			  ## debug.c:1361:26
 1e04348:    81 05             	r1 = r6.b0 (u)			  ## debug.c:1361:29
 1e0434a:    ce c0             	r6 = r1 << 3			  ## debug.c:1361:29
 1e0434c:    82 0d             	r2 <<= r6			  ## debug.c:1361:29
 1e0434e:    52 b6             	r2 |= r3			  ## debug.c:1361:26
 1e04350:    0a 41             	[r0 + 64] = r2			  ## debug.c:1361:26
 1e04352:    12 70             	r2 = 1			  ## debug.c:1362:29
 1e04354:    13 70             	r3 = 1			  ## debug.c:1362:29
 1e04356:    01 3a             	if (r5 != 0) goto 2 <system_code_total_size+0x1E : 1e0435a >			  ## debug.c:1362:29
 1e04358:    03 70             	r3 = 0			  ## debug.c:1362:29
 1e0435a:    95 92             	r5 = r1 + 9			  ## debug.c:1362:29
 1e0435c:    43 0d             	r3 <<= r5			  ## debug.c:1362:29
 1e0435e:    01 38             	if (r4 != 0) goto 2 <system_code_total_size+0x26 : 1e04362 >			  ## debug.c:1362:29
 1e04360:    02 70             	r2 = 0			  ## debug.c:1362:29
 1e04362:    11 81             	r1 += 17			  ## debug.c:1362:29
 1e04364:    f8 fd 10 12       	r1 = r2 << r1			  ## debug.c:1362:29
 1e04368:    51 b6             	r1 |= r3			  ## debug.c:1362:29
 1e0436a:    1b 18             	goto 54 <system_code_total_size+0x66 : 1e043a2 >			  ## debug.c:1362:29
 1e0436c:    01 e5 10 00       	if (r1 == 80) goto 32 <system_code_total_size+0x54 : 1e04390 >
 1e04370:    31 e4 1a 10       	if (r1 != 67) goto 52 <system_code_total_size+0x6C : 1e043a8 >
 1e04374:    12 70             	r2 = 1
 1e04376:    16 70             	r6 = 1			  ## debug.c:1350:30
 1e04378:    01 36             	if (r3 != 0) goto 2 <system_code_total_size+0x40 : 1e0437c >			  ## debug.c:1350:30
 1e0437a:    06 70             	r6 = 0			  ## debug.c:1350:30
 1e0437c:    11 70             	r1 = 1			  ## debug.c:1350:52
 1e0437e:    01 3a             	if (r5 != 0) goto 2 <system_code_total_size+0x46 : 1e04382 >
 1e04380:    01 70             	r1 = 0			  ## debug.c:1350:52
 1e04382:    c1 fd 10 16       	r1 <= insert(r6, p:2, l:1)			  ## debug.c:1350:49
 1e04386:    01 38             	if (r4 != 0) goto 2 <system_code_total_size+0x4E : 1e0438a >			  ## debug.c:1350:49
 1e04388:    02 70             	r2 = 0			  ## debug.c:1350:74
 1e0438a:    c1 fd 08 12       	r1 <= insert(r2, p:1, l:1)			  ## debug.c:1350:71
 1e0438e:    09 18             	goto 18 <system_code_total_size+0x66 : 1e043a2 >			  ## debug.c:1350:71
 1e04390:    11 70             	r1 = 1
 1e04392:    12 70             	r2 = 1			  ## debug.c:1354:53
 1e04394:    01 38             	if (r4 != 0) goto 2 <system_code_total_size+0x5C : 1e04398 >			  ## debug.c:1354:53
 1e04396:    02 70             	r2 = 0			  ## debug.c:1354:53
 1e04398:    01 3a             	if (r5 != 0) goto 2 <system_code_total_size+0x60 : 1e0439c >
 1e0439a:    01 70             	r1 = 0			  ## debug.c:1354:30
 1e0439c:    09 c2             	r1 = r1 << 8			  ## debug.c:1354:30
 1e0439e:    c1 fd 80 12       	r1 <= insert(r2, p:16, l:1)			  ## debug.c:1354:50
 1e043a2:    02 40             	r2 = [r0 + 0]
 1e043a4:    51 b4             	r1 |= r2
 1e043a6:    09 40             	[r0 + 0] = r1
 1e043a8:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1367:1


mpu_set:
 1e043aa:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1424:0
 1e043ac:    f8 0b             	sp += -16			  ## debug.c:1424:0
 1e043ae:    04 08             	r4 = r0			  ## debug.c:1424:0
 1e043b0:    34 e0 72 c0       	ifs (r4 > 3) goto 228 <mpu_set+0xEE : 1e04498 >			  ## debug.c:1424:0
 1e043b4:    c5 ff fc 03 1b 00 	r5 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:1424:0
 1e043ba:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e043bc:    96 02             	r6 = [sp+36]			  ## debug.c:572:14
 1e043be:    20 f3 05 00       	if ((r0 & 1) != 0) goto 10 <mpu_set+0x22 : 1e043cc >			  ## debug.c:572:14
 1e043c2:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:573:9
 1e043c6:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e043c8:    00 f3 fb 0f       	if ((r0 & 1) == 0) goto -10 <mpu_set+0x18 : 1e043c2 >			  ## debug.c:572:14
 1e043cc:    50 fc 84 ff       	r0 = r5 + -124			  ## debug.c:1432:5
 1e043d0:    b1 f6 00 04       	[r0+r4<<2] = r1			  ## debug.c:1432:22
 1e043d4:    00 84             	r0 += 64			  ## debug.c:1433:5
 1e043d6:    b2 f6 00 04       	[r0+r4<<2] = r2			  ## debug.c:1433:22
 1e043da:    01 fc 40 ff       	r1 = r0 + -192			  ## debug.c:1435:5
 1e043de:    00 70             	r0 = 0
 1e043e0:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1435:22
 1e043e4:    01 84             	r1 += 64			  ## debug.c:1436:5
 1e043e6:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1436:22
 1e043ea:    81 a2             	r1 = sp + 40			  ## debug.c:1436:22
 1e043ec:    29 02             	[sp+8] = r1			  ## debug.c:1443:5
 1e043ee:    39 02             	[sp+12] = r1
 1e043f0:    01 6c             	r1 = b[r6 + 0] (u)			  ## debug.c:1377:12
 1e043f2:    02 70             	r2 = 0			  ## debug.c:1377:12
 1e043f4:    03 70             	r3 = 0
 1e043f6:    3e 22             	if (r1 == 0) goto 124 <mpu_set+0xCA : 1e04474 >
 1e043f8:    51 04             	r1 = r1.b0 (s)			  ## debug.c:1378:17
 1e043fa:    f1 e4 17 c0       	ifs (r1 > 79) goto 46 <mpu_set+0x82 : 1e0442c >			  ## debug.c:1378:9
 1e043fe:    17 fc d0 ff       	r7 = r1 + -48
 1e04402:    47 e0 21 20       	if (r7 >= 4) goto 66 <mpu_set+0x9E : 1e04448 >
 1e04406:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1395:13
 1e0440a:    19 02             	[sp+4] = r1			  ## debug.c:1395:13
 1e0440c:    27 fd 02 39       	r7 = r3 & 2			  ## debug.c:1395:13
 1e04410:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1395:13
 1e04412:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1395:13
 1e04414:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1395:13
 1e04418:    0f 02             	[sp] = r7			  ## debug.c:1395:13
 1e0441a:    40 08             	r0 = r4			  ## debug.c:1395:13
 1e0441c:    88 17             	call -240 <mpu_privilege : 1e0432e >			  ## debug.c:1395:13
 1e0441e:    30 02             	r0 = [sp+12]			  ## debug.c:1396:19
 1e04420:    41 90             	r1 = r0 + 4			  ## debug.c:1396:19
 1e04422:    39 02             	[sp+12] = r1			  ## debug.c:1396:19
 1e04424:    02 40             	r2 = [r0 + 0]			  ## debug.c:1396:19
 1e04426:    00 6c             	r0 = b[r6 + 0] (u)			  ## debug.c:1397:20
 1e04428:    03 70             	r3 = 0			  ## debug.c:1397:20
 1e0442a:    21 18             	goto 66 <mpu_set+0xC4 : 1e0446e >			  ## debug.c:1397:20
 1e0442c:    61 e7 06 c0       	ifs (r1 > 118) goto 12 <mpu_set+0x92 : 1e0443c >
 1e04430:    01 e5 0c 00       	if (r1 == 80) goto 24 <mpu_set+0xA2 : 1e0444c >
 1e04434:    21 e7 1b 10       	if (r1 != 114) goto 54 <mpu_set+0xC4 : 1e0446e >
 1e04438:    93 b0             	r3 |= 2			  ## debug.c:1405:23
 1e0443a:    19 18             	goto 50 <mpu_set+0xC4 : 1e0446e >			  ## debug.c:1405:23
 1e0443c:    71 e7 16 00       	if (r1 == 119) goto 44 <mpu_set+0xC2 : 1e0446c >
 1e04440:    81 e7 15 10       	if (r1 != 120) goto 42 <mpu_set+0xC4 : 1e0446e >
 1e04444:    13 b1             	r3 |= 4			  ## debug.c:1408:23
 1e04446:    13 18             	goto 38 <mpu_set+0xC4 : 1e0446e >			  ## debug.c:1408:23
 1e04448:    31 e4 11 10       	if (r1 != 67) goto 34 <mpu_set+0xC4 : 1e0446e >
 1e0444c:    21 fd 01 39       	r1 = r3 & 1
 1e04450:    19 02             	[sp+4] = r1
 1e04452:    27 fd 02 39       	r7 = r3 & 2
 1e04456:    01 04             	r1 = r0.b0 (u)
 1e04458:    82 04             	r2 = r2.b0 (u)
 1e0445a:    23 fd 04 39       	r3 = r3 & 4
 1e0445e:    0f 02             	[sp] = r7
 1e04460:    40 08             	r0 = r4
 1e04462:    65 17             	call -310 <mpu_privilege : 1e0432e >
 1e04464:    00 6c             	r0 = b[r6 + 0] (u)
 1e04466:    02 70             	r2 = 0
 1e04468:    03 70             	r3 = 0
 1e0446a:    01 18             	goto 2 <mpu_set+0xC4 : 1e0446e >
 1e0446c:    13 b0             	r3 |= 1			  ## debug.c:1402:23
 1e0446e:    11 6c             	r1 = b[r6 + 1] (u)			  ## debug.c:1377:12
 1e04470:    16 80             	r6 += 1			  ## debug.c:1414:15
 1e04472:    c2 33             	if (r1 != 0) goto -124 <mpu_set+0x4E : 1e043f8 >
 1e04474:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1416:5
 1e04478:    19 02             	[sp+4] = r1			  ## debug.c:1416:5
 1e0447a:    26 fd 02 39       	r6 = r3 & 2			  ## debug.c:1416:5
 1e0447e:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1416:5
 1e04480:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1416:5
 1e04482:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1416:5
 1e04486:    0e 02             	[sp] = r6			  ## debug.c:1416:5
 1e04488:    40 08             	r0 = r4			  ## debug.c:1416:5
 1e0448a:    51 17             	call -350 <mpu_privilege : 1e0432e >			  ## debug.c:1416:5
 1e0448c:    02 18             	goto 4 <mpu_set+0xE8 : 1e04492 >			  ## debug.c:1416:5
 1e0448e:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:580:9
 1e04492:    00 4a             	r0 = [r5 + 0]
 1e04494:    20 f3 fb 0f       	if ((r0 & 1) != 0) goto -10 <mpu_set+0xE4 : 1e0448e >
 1e04498:    08 0a             	sp += 16
 1e0449a:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1457:1


debug_init:
 1e0449c:    76 01             	[--sp] = {rets, r6-r4}			  ## debug.c:1606:0
 1e0449e:    fa 0b             	sp += -12			  ## debug.c:1606:0
 1e044a0:    c0 ff 17 00 00 80 	r0 = 2147483671 <BTCTLER_CL_DATA_SIZE+0xB : 17 >			  ## debug.c:1612:14
 1e044a6:    c1 ff c0 e1 1b 00 	r1 = 1827264 <uECC_vli_cmp_unsafe+0xB71C4 : 1be1c0 >			  ## debug.c:1612:14
 1e044ac:    08 43             	[r1 + 64] = r0			  ## debug.c:1612:14
 1e044ae:    c0 f4 01 19       	[r1 + 0] = 1			  ## debug.c:1619:14
 1e044b2:    db f4 10 1b       	[r1 + 108] = 1048576			  ## debug.c:598:19
 1e044b6:    da f4 11 1b       	[r1 + 104] = 1114112			  ## debug.c:599:19
 1e044ba:    c4 ff 80 32 00 00 	r4 = 12928 <report_data_code_begin : 3280 >			  ## debug.c:592:19
 1e044c0:    9c 43             	[r1 + 100] = r4			  ## debug.c:592:19
 1e044c2:    c6 ff e8 49 00 00 	r6 = 18920 <report_overlay_end : 49e8 >			  ## debug.c:1619:14
 1e044c8:    8e 43             	[r1 + 96] = r6			  ## debug.c:593:19
 1e044ca:    c0 ff 20 01 e0 01 	r0 = 31457568 <text_begin : 1e00120 >			  ## debug.c:586:19
 1e044d0:    78 43             	[r1 + 92] = r0			  ## debug.c:586:19
 1e044d2:    c0 ff 14 ce e1 01 	r0 = 31575572 <text_end : 1e1ce14 >			  ## debug.c:587:19
 1e044d8:    68 43             	[r1 + 88] = r0			  ## debug.c:587:19
 1e044da:    c0 ff 40 09 00 00 	r0 = 2368 <data_magic : 940 >			  ## debug.c:1655:5
 1e044e0:    f1 7f             	r1 = 255			  ## debug.c:1655:5
 1e044e2:    02 74             	r2 = 64			  ## debug.c:1655:5
 1e044e4:    98 f3 04 15       	call 3156488 <memset : 106ef0 >			  ## debug.c:1655:5
 1e044e8:    c0 ff 5f 1e e1 01 	r0 = 31530591 <update_target_end+0x1C2F : 1e11e5f >			  ## debug.c:1662:99
 1e044ee:    08 17             	call -496 <get_dev_id : 1e04300 >			  ## debug.c:1662:99
 1e044f0:    05 08             	r5 = r0			  ## debug.c:1662:99
 1e044f2:    c0 ff 67 1e e1 01 	r0 = 31530599 <update_target_end+0x1C37 : 1e11e67 >			  ## debug.c:1662:122
 1e044f8:    03 17             	call -506 <get_dev_id : 1e04300 >			  ## debug.c:1662:122
 1e044fa:    28 02             	[sp+8] = r0			  ## debug.c:1662:5
 1e044fc:    1d 02             	[sp+4] = r5			  ## debug.c:1662:5
 1e044fe:    c1 ff 6e 1e e1 01 	r1 = 31530606 <update_target_end+0x1C3E : 1e11e6e >			  ## debug.c:1662:5
 1e04504:    62 fc ff ff       	r2 = r6 + -1			  ## debug.c:1619:14
 1e04508:    00 70             	r0 = 0			  ## debug.c:1662:5
 1e0450a:    09 02             	[sp] = r1			  ## debug.c:1662:5
 1e0450c:    41 08             	r1 = r4			  ## debug.c:1662:5
 1e0450e:    4d 17             	call -358 <mpu_set : 1e043aa >			  ## debug.c:1662:5
 1e04510:    06 0a             	sp += 12			  ## debug.c:1662:5
 1e04512:    56 01             	{pc, r6-r4} = [sp++]			  ## debug.c:1702:1


__crc16_mutex_init:
 1e04514:    c0 ff a4 20 00 00 	r0 = 8356 <mutex : 20a4 >			  ## crc16.c:14:0
 1e0451a:    d8 f3 7f 14       	goto 3156222 <os_mutex_create : 106e1c >			  ## crc16.c:15:5


setup_arch:
 1e0451e:    76 01             	[--sp] = {rets, r6-r4}			  ## setup.c:123:0
 1e04520:    fe 0b             	sp += -4			  ## setup.c:123:0
 1e04522:    bf f3 49 e0       	call -16238 <power_enter_charge_mode : 1e005b8 >			  ## setup.c:127:5
 1e04526:    20 fb 71 04       	r0 = 1974272			  ## setup.c:131:20
 1e0452a:    00 f4 04 09       	[r0 + 0] |= 4			  ## setup.c:131:20
 1e0452e:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## setup.c:131:20
 1e04534:    01 f9 dc 00       	r1 = b[r0 + 220] (u)			  ## setup.c:131:20
 1e04538:    46 32             	if (r1 != 0) goto 140 <setup_arch+0xA8 : 1e045c6 >			  ## setup.c:131:20
 1e0453a:    14 70             	r4 = 1
 1e0453c:    c2 ff e8 49 00 00 	r2 = 18920 <report_overlay_end : 49e8 >
 1e04542:    c3 ff 60 fb 00 00 	r3 = 64352 <report_heap_end : fb60 >
 1e04548:    a1 b6             	r1 = r3 - r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e0454a:    c9 d1             	r1 = r1 >> 7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e0454c:    14 f9 dc 00       	b[r0 + 220] = r4
 1e04550:    0b ff 01 14 02 00 	ifs (r1 < 1025) goto 4 <setup_arch+0x3C : 1e0455a >
 1e04556:    8f f3 9e f7       	call 2092860 <p33_soft_reset : 3496 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0455a:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e0455c:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e0455e:    98 f3 9f 14       	call 3156286 <pmalloc_init : 106ea0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e04562:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e04568:    01 fb 00 08       	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e0456c:    98 f3 a4 14       	call 3156296 <vmm_init_ : 106eb8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e04570:    c5 ff 50 29 00 00 	r5 = 10576 <stack_mem : 2950 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e04576:    cf f4 20 5b       	[r5 + 60] = 2097152			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:610:29
 1e0457a:    c0 ff 00 f0 20 00 	r0 = 2158592 <uECC_vli_cmp_unsafe+0x108004 : 20f000 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e04580:    08 4b             	[r5 + 64] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e04582:    d1 f4 f0 5a       	[r5 + 68] = 61440			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:612:29
 1e04586:    d2 f4 f0 55       	[r5 + 72] = 31457280			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:615:29
 1e0458a:    00 fb e0 01       	r0 = 480 <BTCTLER_CONTROLLER_BSS_SIZE+0x20 : 1e0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:616:29
 1e0458e:    10 f7 4c 50       	h[r5 + 76] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:617:29
 1e04592:    50 fc 50 00       	r0 = r5 + 80			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04596:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04598:    92 77             	r2 = 121			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e0459a:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e0459c:    98 f3 a8 14       	call 3156304 <memset : 106ef0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e045a0:    c0 ff fc ff ff 1f 	r0 = 536870908 <bank_code_load_addr+0x1E13E8 : 1fffffc >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e045a6:    f1 d0             	r1 = r6 >> 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:9
 1e045a8:    51 b1             	r1 &= r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:25
 1e045aa:    82 f6 00 15       	r2 = [r1+r5]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e045ae:    23 fd 1f 69       	r3 = r6 & 31			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e045b2:    f8 fd 30 34       	r3 = r4 << r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e045b6:    52 b6             	r2 |= r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e045b8:    92 f6 00 15       	[r1+r5] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e045bc:    01 f7 4a 50       	r1 = h[r5 + 74] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:622:44
 1e045c0:    16 80             	r6 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:622:65
 1e045c2:    16 f2 f0 3f       	if (r6 < r1) goto -32 <setup_arch+0x88 : 1e045a6 >
 1e045c6:    c0 ff 40 10 00 00 	r0 = 4160 <stack_magic : 1040 >			  ## setup.c:134:5
 1e045cc:    a1 75             	r1 = 90			  ## setup.c:134:5
 1e045ce:    02 71             	r2 = 16			  ## setup.c:134:5
 1e045d0:    98 f3 8e 14       	call 3156252 <memset : 106ef0 >			  ## setup.c:134:5
 1e045d4:    c0 ff 50 18 00 00 	r0 = 6224 <stack_magic0 : 1850 >			  ## setup.c:135:5
 1e045da:    a1 75             	r1 = 90			  ## setup.c:135:5
 1e045dc:    02 71             	r2 = 16			  ## setup.c:135:5
 1e045de:    98 f3 87 14       	call 3156238 <memset : 106ef0 >			  ## setup.c:135:5
 1e045e2:    12 15             	call -1500 <p11_init : 1e04008 >			  ## setup.c:138:5
 1e045e4:    2c 15             	call -1448 <wdt_init : 1e0403e >			  ## setup.c:140:5
 1e045e6:    c0 ff 48 18 1a 00 	r0 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## setup.c:140:5
 1e045ec:    01 60             	r1 = b[r0 + 0] (u)			  ## setup.c:142:2
 1e045ee:    71 b0             	r1 &= 4294967294			  ## setup.c:142:2
 1e045f0:    09 60             	b[r0 + 0] = r1			  ## setup.c:142:2
 1e045f2:    90 8c             	r0 += -55			  ## setup.c:142:2
 1e045f4:    01 60             	r1 = b[r0 + 0] (u)			  ## setup.c:143:5
 1e045f6:    71 b0             	r1 &= 4294967294			  ## setup.c:143:5
 1e045f8:    09 60             	b[r0 + 0] = r1			  ## setup.c:143:5
 1e045fa:    00 fc 81 00       	r0 = r0 + 129			  ## setup.c:143:5
 1e045fe:    01 60             	r1 = b[r0 + 0] (u)			  ## setup.c:144:6
 1e04600:    f1 b1             	r1 &= 4294967287			  ## setup.c:144:6
 1e04602:    09 60             	b[r0 + 0] = r1			  ## setup.c:144:6
 1e04604:    80 f3 0b c3       	call 99862 <clk_voltage_init : 1e1cc1e >			  ## setup.c:146:5
 1e04608:    80 f3 0f c3       	call 99870 <clk_early_init : 1e1cc2a >			  ## setup.c:147:5
 1e0460c:    80 f3 20 50       	call 41024 <tick_timer_init : 1e0e650 >			  ## setup.c:149:5
 1e04610:    1e 15             	call -1476 <uart_init : 1e0404e >			  ## board_ac632n_demo.c:244:9
 1e04612:    80 f3 5a 45       	call 35508 <log_early_init : 1e0d0ca >			  ## setup.c:156:5
 1e04616:    c2 ff 0b 03 e1 01 	r2 = 31523595 <update_target_end+0xDB : 1e1030b >			  ## setup.c:161:5
 1e0461c:    20 70             	r0 = 2			  ## setup.c:161:5
 1e0461e:    80 f3 ef 43       	call 34782 <log_print : 1e0ce00 >			  ## setup.c:161:5
 1e04622:    c1 ff 66 03 e1 01 	r1 = 31523686 <update_target_end+0x136 : 1e10366 >			  ## setup.c:162:5
 1e04628:    c2 ff 40 03 e1 01 	r2 = 31523648 <update_target_end+0x110 : 1e10340 >			  ## setup.c:162:5
 1e0462e:    c3 ff 5a 03 e1 01 	r3 = 31523674 <update_target_end+0x12A : 1e1035a >			  ## setup.c:162:5
 1e04634:    20 70             	r0 = 2			  ## setup.c:162:5
 1e04636:    09 02             	[sp] = r1			  ## setup.c:162:5
 1e04638:    80 f3 e2 43       	call 34756 <log_print : 1e0ce00 >			  ## setup.c:162:5
 1e0463c:    c2 ff 6f 03 e1 01 	r2 = 31523695 <update_target_end+0x13F : 1e1036f >			  ## setup.c:163:5
 1e04642:    20 70             	r0 = 2			  ## setup.c:163:5
 1e04644:    80 f3 dc 43       	call 34744 <log_print : 1e0ce00 >			  ## setup.c:163:5
 1e04648:    3a 15             	call -1420 <efuse_dump : 1e040be >			  ## setup.c:167:5
 1e0464a:    54 15             	call -1368 <reset_source_dump : 1e040f4 >			  ## setup.c:169:5
 1e0464c:    c4 ff 40 45 00 00 	r4 = 17728 <exception_irq_handler : 4540 >			  ## setup.c:174:5
 1e04652:    00 70             	r0 = 0			  ## setup.c:174:5
 1e04654:    21 70             	r1 = 2			  ## setup.c:174:5
 1e04656:    42 08             	r2 = r4			  ## setup.c:174:5
 1e04658:    80 f3 97 49       	call 37678 <request_irq : 1e0d98a >			  ## setup.c:174:5
 1e0465c:    10 70             	r0 = 1			  ## setup.c:175:5
 1e0465e:    21 70             	r1 = 2			  ## setup.c:175:5
 1e04660:    42 08             	r2 = r4			  ## setup.c:175:5
 1e04662:    80 f3 92 49       	call 37668 <request_irq : 1e0d98a >			  ## setup.c:175:5
 1e04666:    80 f3 62 3f       	call 32452 <sys_timer_init : 1e0c52e >			  ## setup.c:177:5
 1e0466a:    18 17             	call -464 <debug_init : 1e0449c >			  ## setup.c:179:5
 1e0466c:    53 17             	call -346 <__crc16_mutex_init : 1e04514 >			  ## setup.c:184:5
 1e0466e:    02 0a             	sp += 4			  ## setup.c:184:5
 1e04670:    56 01             	{pc, r6-r4} = [sp++]			  ## setup.c:185:1


low_power_sys_get:
 1e04672:    74 01             	[--sp] = {rets, r4}			  ## power_hw.c:1156:0
 1e04674:    04 08             	r4 = r0			  ## power_hw.c:1156:0
 1e04676:    00 71             	r0 = 16			  ## power_hw.c:1159:13
 1e04678:    80 f3 cb 48       	call 37270 <malloc : 1e0d812 >			  ## power_hw.c:1159:13
 1e0467c:    0d 20             	if (r0 == 0) goto 26 <low_power_sys_get+0x26 : 1e04698 >			  ## power_hw.c:1159:13
 1e0467e:    3c 40             	[r0 + 12] = r4			  ## power_hw.c:1164:16
 1e04680:    c2 f4 00 09       	[r0 + 8] = 0			  ## power_hw.c:1165:17
 1e04684:    c1 ff 80 48 00 00 	r1 = 18560 <tws_sync_channel_end : 4880 >			  ## list.h:154:28
 1e0468a:    42 42             	r2 = [r1 + 16]			  ## list.h:154:28
 1e0468c:    48 42             	[r1 + 16] = r0			  ## list.h:137:16
 1e0468e:    c1 80             	r1 += 12			  ## list.h:137:16
 1e04690:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e04692:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e04694:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e04696:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1170:1
 1e04698:    8f f3 fd f6       	call 2092538 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0469c:    00 70             	r0 = 0			  ## cpu.h:148:5
 1e0469e:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1170:1


power_init:
 1e046a0:    7b 01             	[--sp] = {rets, r11-r4}			  ## power_hw.c:1818:0
 1e046a2:    ec 0b             	sp += -40			  ## power_hw.c:1818:0
 1e046a4:    c0 ff f3 1f 1a 00 	r0 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1818:0
 1e046aa:    31 60             	r1 = b[r0 + 3] (u)			  ## power_hw.c:1724:5
 1e046ac:    f1 b2             	r1 &= 4294967263			  ## power_hw.c:1724:5
 1e046ae:    39 60             	b[r0 + 3] = r1			  ## power_hw.c:1724:5
 1e046b0:    06 fc 20 f8       	r6 = r0 + -2016			  ## power_hw.c:1724:5
 1e046b4:    41 6c             	r1 = b[r6 + 4] (u)			  ## power_hw.c:1726:5


BTSTACK_CODE_TOTAL_SIZE:
 1e046b6:    f1 b0             	r1 &= 4294967293			  ## power_hw.c:1726:5
 1e046b8:    49 6c             	b[r6 + 4] = r1			  ## power_hw.c:1726:5
 1e046ba:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1682:9
 1e046bc:    c9 ff 80 48 00 00 	r9 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:1682:9
 1e046c2:    03 22             	if (r1 == 0) goto 6 <BTSTACK_CODE_TOTAL_SIZE+0x14 : 1e046ca >			  ## power_hw.c:1682:9
 1e046c4:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1683:27
 1e046c6:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1683:25
 1e046c8:    51 18             	goto 162 <BTSTACK_CODE_TOTAL_SIZE+0xB6 : 1e0476c >			  ## power_hw.c:1683:25
 1e046ca:    00 f9 35 90       	r0 = b[r9 + 53] (u)			  ## power_hw.c:1688:17
 1e046ce:    4e 30             	if (r0 != 0) goto 156 <BTSTACK_CODE_TOTAL_SIZE+0xB6 : 1e0476c >			  ## power_hw.c:1688:17
 1e046d0:    10 70             	r0 = 1			  ## power_hw.c:1691:26
 1e046d2:    10 f9 35 90       	b[r9 + 53] = r0			  ## power_hw.c:1691:26
 1e046d6:    67 fc 77 07       	r7 = r6 + 1911			  ## power_hw.c:1691:26
 1e046da:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1697:22
 1e046dc:    90 b0             	r0 |= 2			  ## power_hw.c:1697:22
 1e046de:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1697:22
 1e046e0:    20 6e             	r0 = b[r7 + 2] (u)			  ## power_hw.c:1698:22
 1e046e2:    90 b1             	r0 |= 8			  ## power_hw.c:1698:22
 1e046e4:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:1698:22
 1e046e6:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1701:9
 1e046e8:    20 fd cf 09       	r0 = r0 & 207			  ## power_hw.c:1701:9
 1e046ec:    10 b2             	r0 |= 16			  ## power_hw.c:1701:9
 1e046ee:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1701:9
 1e046f0:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1709:22
 1e046f2:    90 b1             	r0 |= 8			  ## power_hw.c:1709:22
 1e046f4:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1709:22
 1e046f6:    80 a0             	r0 = sp + 8
 1e046f8:    01 70             	r1 = 0			  ## power_hw.c:128:21
 1e046fa:    02 72             	r2 = 32			  ## power_hw.c:128:21
 1e046fc:    98 f3 f8 13       	call 3155952 <memset : 106ef0 >			  ## power_hw.c:128:21
 1e04700:    c0 ff 35 1f e1 01 	r0 = 31530805 <update_target_end+0x1D05 : 1e11f35 >			  ## power_hw.c:130:15
 1e04706:    c1 ff 5a 1f e1 01 	r1 = 31530842 <update_target_end+0x1D2A : 1e11f5a >			  ## power_hw.c:130:15
 1e0470c:    80 f3 57 5a       	call 46254 <fopen : 1e0fbbe >			  ## power_hw.c:130:15
 1e04710:    04 08             	r4 = r0			  ## power_hw.c:130:15
 1e04712:    26 28             	if (r4 == 0) goto 76 <BTSTACK_CODE_TOTAL_SIZE+0xAA : 1e04760 >
 1e04714:    81 a0             	r1 = sp + 8
 1e04716:    80 f3 6d 5b       	call 46810 <fget_attrs : 1e0fdf4 >			  ## power_hw.c:136:5
 1e0471a:    32 02             	r2 = [sp+12]			  ## power_hw.c:137:30
 1e0471c:    43 02             	r3 = [sp+16]			  ## power_hw.c:138:36
 1e0471e:    22 ff 01 2d 02 00 	if (r2 >= 65537) goto 4 <BTSTACK_CODE_TOTAL_SIZE+0x72 : 1e04728 >
 1e04724:    03 34             	if (r2 != 0) goto 6 <BTSTACK_CODE_TOTAL_SIZE+0x76 : 1e0472c >
 1e04726:    0a 18             	goto 20 <BTSTACK_CODE_TOTAL_SIZE+0x86 : 1e0473c >
 1e04728:    8f f3 b5 f6       	call 2092394 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0472c:    20 fb 1a 0b       	r0 = 1703936
 1e04730:    81 f9 01 30       	r1 = b[r3 ++= 1] (u)			  ## power_hw.c:144:26
 1e04734:    91 f9 01 00       	b[r0 ++= 1] = r1			  ## power_hw.c:144:24
 1e04738:    52 f3 fa ff       	if (--r2 != 0) goto -12 <BTSTACK_CODE_TOTAL_SIZE+0x7A : 1e04730 >
 1e0473c:    40 08             	r0 = r4			  ## power_hw.c:147:5
 1e0473e:    80 f3 19 5b       	call 46642 <fclose : 1e0fd74 >			  ## power_hw.c:147:5
 1e04742:    c0 ff 51 1f e1 01 	r0 = 31530833 <update_target_end+0x1D21 : 1e11f51 >			  ## power_hw.c:153:87
 1e04748:    db 15             	call -1098 <get_dev_id : 1e04300 >			  ## power_hw.c:153:87
 1e0474a:    18 02             	[sp+4] = r0			  ## power_hw.c:153:5
 1e0474c:    c3 ff 59 1f e1 01 	r3 = 31530841 <update_target_end+0x1D29 : 1e11f59 >			  ## power_hw.c:153:5
 1e04752:    62 fc 56 f7       	r2 = r6 + -2218			  ## power_hw.c:153:5
 1e04756:    30 70             	r0 = 3			  ## power_hw.c:153:5
 1e04758:    20 fb 1a 1b       	r1 = 1703936			  ## power_hw.c:153:5
 1e0475c:    0b 02             	[sp] = r3			  ## power_hw.c:153:5
 1e0475e:    25 16             	call -950 <mpu_set : 1e043aa >			  ## power_hw.c:153:5
 1e04760:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1715:21
 1e04762:    90 b2             	r0 |= 32			  ## power_hw.c:1715:21
 1e04764:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:1715:21
 1e04766:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1716:16
 1e04768:    25 f3 fd 0f       	if ((r0 & 32) != 0) goto -6 <BTSTACK_CODE_TOTAL_SIZE+0xB0 : 1e04766 >			  ## power_hw.c:1716:16
 1e0476c:    c2 ff 04 39 e0 01 	r2 = 31471876 <__hw_p2m_irq : 1e03904 >			  ## power_hw.c:1730:5
 1e04772:    a0 70             	r0 = 10			  ## power_hw.c:1730:5
 1e04774:    01 70             	r1 = 0			  ## power_hw.c:1730:5
 1e04776:    04 70             	r4 = 0			  ## power_hw.c:1730:5
 1e04778:    80 f3 07 49       	call 37390 <request_irq : 1e0d98a >			  ## power_hw.c:1730:5
 1e0477c:    97 fc 30 00       	r7 = r9 + 48			  ## power_hw.c:1730:5
 1e04780:    3c 6e             	b[r7 + 3] = r4			  ## power_hw.c:1824:20
 1e04782:    6c 6e             	b[r7 + 6] = r4			  ## power_hw.c:1826:23
 1e04784:    0c 6f             	b[r7 + 16] = r4			  ## power_hw.c:1828:21
 1e04786:    7c 6e             	b[r7 + 7] = r4			  ## power_hw.c:1830:24
 1e04788:    8c 6e             	b[r7 + 8] = r4			  ## power_hw.c:1832:35
 1e0478a:    9c 6f             	b[r7 + 25] = r4			  ## power_hw.c:1834:33
 1e0478c:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## power_hw.c:1834:33
 1e04790:    91 fc 40 01       	r1 = r9 + 320			  ## power_hw.c:1834:33
 1e04794:    28 42             	[r1 + 8] = r0			  ## power_hw.c:1834:33
 1e04796:    40 70             	r0 = 4			  ## power_hw.c:1844:33
 1e04798:    c8 6f             	b[r7 + 28] = r0			  ## power_hw.c:1844:33
 1e0479a:    7c 6f             	b[r7 + 23] = r4			  ## power_hw.c:435:25
 1e0479c:    8c 6f             	b[r7 + 24] = r4			  ## power_hw.c:437:30
 1e0479e:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## power_hw.c:439:25
 1e047a4:    18 42             	[r1 + 4] = r0			  ## power_hw.c:439:25
 1e047a6:    c0 f4 7d 1a       	[r1 + 0] = 32000			  ## power_hw.c:441:23
 1e047aa:    80 71             	r0 = 24			  ## power_hw.c:445:27
 1e047ac:    58 6f             	b[r7 + 21] = r0			  ## power_hw.c:445:27
 1e047ae:    bc 6f             	b[r7 + 27] = r4			  ## power_hw.c:448:30
 1e047b0:    c0 75             	r0 = 92			  ## lp_timer_hw.c:220:19
 1e047b2:    61 fc be 07       	r1 = r6 + 1982			  ## lp_timer_hw.c:220:19
 1e047b6:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:220:19
 1e047b8:    30 75             	r0 = 83			  ## lp_timer_hw.c:222:19
 1e047ba:    18 62             	b[r1 + 1] = r0			  ## lp_timer_hw.c:222:19
 1e047bc:    2c 62             	b[r1 + 2] = r4			  ## lp_timer_hw.c:224:19
 1e047be:    10 72             	r0 = 33			  ## lrc_hw.c:81:17
 1e047c0:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:81:17
 1e047c2:    10 74             	r0 = 65			  ## lrc_hw.c:82:17
 1e047c4:    18 6c             	b[r6 + 1] = r0			  ## lrc_hw.c:82:17
 1e047c6:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:82:17
 1e047cc:    10 70             	r0 = 1			  ## lrc_hw.c:82:17
 1e047ce:    86 fc cc 00       	r6 = r8 + 204			  ## lrc_hw.c:82:17
 1e047d2:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:82:17
 1e047d4:    c1 ff f8 20 00 00 	r1 = 8440 <lrc.4 : 20f8 >			  ## lrc_hw.c:228:24
 1e047da:    0c 62             	b[r1 + 0] = r4			  ## lrc_hw.c:228:24
 1e047dc:    88 6c             	b[r6 + 8] = r0			  ## lrc_hw.c:228:24
 1e047de:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:228:24
 1e047e4:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:232:5
 1e047e6:    31 fd 3e 19       	r1 = r1 & 4294967233			  ## lrc_hw.c:232:5
 1e047ea:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:232:5
 1e047ec:    f0 71             	r0 = 31			  ## lrc_hw.c:67:17
 1e047ee:    c4 ff ac 0f 1a 00 	r4 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >
 1e047f4:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e047f6:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e047f8:    2a 73             	r10 = 50			  ## lrc_hw.c:68:27
 1e047fa:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e047fe:    a8 69             	b[r4 + 26] = r0			  ## lrc_hw.c:68:22
 1e04800:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e04802:    8b 7c             	r11 = 200			  ## lrc_hw.c:69:29
 1e04804:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e04808:    b8 69             	b[r4 + 27] = r0			  ## lrc_hw.c:69:23
 1e0480a:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e0480c:    05 fb 58 02       	r5 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## lrc_hw.c:70:29
 1e04810:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e04814:    c8 69             	b[r4 + 28] = r0			  ## lrc_hw.c:70:23
 1e04816:    10 70             	r0 = 1			  ## lrc_hw.c:237:5
 1e04818:    bf f3 55 f9       	call -3414 <__hw_lrc_enable : 1e03ac6 >			  ## lrc_hw.c:237:5
 1e0481c:    00 70             	r0 = 0			  ## lrc_hw.c:239:5
 1e0481e:    bf f3 66 f9       	call -3380 <lrc_timeout_handler : 1e03aee >			  ## lrc_hw.c:239:5
 1e04822:    10 4c             	r0 = [r6 + 4]			  ## lrc_hw.c:245:28
 1e04824:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xD754C : f4240 >			  ## lrc_hw.c:65:24
 1e0482a:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## lrc_hw.c:65:24
 1e0482e:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e04830:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e04832:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e04836:    a8 69             	b[r4 + 26] = r0			  ## lrc_hw.c:68:22
 1e04838:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e0483a:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e0483e:    b8 69             	b[r4 + 27] = r0			  ## lrc_hw.c:69:23
 1e04840:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e04842:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e04846:    c8 69             	b[r4 + 28] = r0			  ## lrc_hw.c:70:23
 1e04848:    c1 ff ee 3a e0 01 	r1 = 31472366 <lrc_timeout_handler : 1e03aee >			  ## lrc_hw.c:239:5
 1e0484e:    00 70             	r0 = 0			  ## lrc_hw.c:247:21
 1e04850:    a2 70             	r2 = 10			  ## lrc_hw.c:247:21
 1e04852:    03 70             	r3 = 0			  ## lrc_hw.c:247:21
 1e04854:    80 f3 f7 3c       	call 31214 <usr_timer_add : 1e0c246 >			  ## lrc_hw.c:247:21
 1e04858:    71 6f             	r1 = b[r7 + 23] (u)			  ## power_hw.c:454:24
 1e0485a:    c2 ff fa 20 00 00 	r2 = 8442 <lrc.2 : 20fa >			  ## lrc_hw.c:247:19
 1e04860:    08 64             	b[r2 + 0] = r0			  ## lrc_hw.c:247:19
 1e04862:    05 22             	if (r1 == 0) goto 10 <BTSTACK_CODE_TOTAL_SIZE+0x1B8 : 1e0486e >			  ## power_hw.c:454:5
 1e04864:    11 e0 06 10       	if (r1 != 1) goto 12 <BTSTACK_CODE_TOTAL_SIZE+0x1BE : 1e04874 >
 1e04868:    bf f3 c0 f9       	call -3200 <__hw_btosc_time_set : 1e03bec >			  ## power_hw.c:456:9
 1e0486c:    03 18             	goto 6 <BTSTACK_CODE_TOTAL_SIZE+0x1BE : 1e04874 >			  ## power_hw.c:456:9
 1e0486e:    20 70             	r0 = 2			  ## power_hw.c:459:9
 1e04870:    bf f3 18 fa       	call -3024 <__hw_lrc_time_set : 1e03ca4 >			  ## power_hw.c:459:9
 1e04874:    00 fb 04 05       	r0 = 1284 <BTCTLER_CONTROLLER_DATA_SIZE+0x48 : 504 >			  ## power_hw.c:472:27
 1e04878:    10 f7 4c 91       	h[r9 + 332] = r0			  ## power_hw.c:472:27
 1e0487c:    40 fc e9 08       	r0 = r4 + 2281			  ## power_hw.c:472:27
 1e04880:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:473:5
 1e04882:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:473:5
 1e04886:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:473:5
 1e04888:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:474:5
 1e0488a:    21 fd f8 19       	r1 = r1 & 248			  ## power_hw.c:474:5
 1e0488e:    01 fd 05 19       	r1 = r1 | 5			  ## power_hw.c:474:5
 1e04892:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:474:5
 1e04894:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:483:5
 1e04896:    f1 b3             	r1 &= 4294967167			  ## power_hw.c:483:5
 1e04898:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:483:5
 1e0489a:    01 fc b0 ff       	r1 = r0 + -80			  ## power_hw.c:483:5
 1e0489e:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:486:17
 1e048a0:    22 fd f8 29       	r2 = r2 & 248			  ## power_hw.c:486:17
 1e048a4:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:486:17
 1e048a6:    81 60             	r1 = b[r0 + 8] (u)			  ## power_hw.c:489:5
 1e048a8:    71 b3             	r1 &= 4294967231			  ## power_hw.c:489:5
 1e048aa:    89 60             	b[r0 + 8] = r1			  ## power_hw.c:489:5
 1e048ac:    19 f6 00 90       	[r9 + 0] = r9			  ## list.h:188:16
 1e048b0:    19 f6 04 90       	[r9 + 4] = r9			  ## list.h:189:16
 1e048b4:    90 fc 0c 00       	r0 = r9 + 12			  ## list.h:188:16
 1e048b8:    10 f6 0c 90       	[r9 + 12] = r0			  ## list.h:188:16
 1e048bc:    10 f6 10 90       	[r9 + 16] = r0			  ## list.h:189:16
 1e048c0:    00 f9 33 90       	r0 = b[r9 + 51] (u)			  ## power_hw.c:1859:17
 1e048c4:    08 20             	if (r0 == 0) goto 16 <BTSTACK_CODE_TOTAL_SIZE+0x220 : 1e048d6 >
 1e048c6:    80 f3 dc 4e       	call 40376 <vPortSysSleepInit : 1e0e682 >			  ## power_hw.c:1860:9
 1e048ca:    c0 ff 54 2c e1 01 	r0 = 31534164 <timer_power_ops : 1e12c54 >			  ## timer.c:209:26
 1e048d0:    d0 16             	call -608 <low_power_sys_get : 1e04672 >			  ## timer.c:209:26
 1e048d2:    10 f6 b4 80       	[r8 + 180] = r0			  ## timer.c:209:24
 1e048d6:    14 0a             	sp += 40
 1e048d8:    5b 01             	{pc, r11-r4} = [sp++]			  ## power_hw.c:1876:1


power_set_callback:
 1e048da:    c0 ff ae 35 e0 01 	r0 = 31471022 <sleep_enter_callback : 1e035ae >			  ## power_hw.c:1416:0
 1e048e0:    c1 ff d0 49 00 00 	r1 = 18896 <tws_sync_channel_end+0x150 : 49d0 >			  ## power_hw.c:1420:37
 1e048e6:    08 42             	[r1 + 0] = r0			  ## power_hw.c:1418:33
 1e048e8:    c0 ff ba 35 e0 01 	r0 = 31471034 <sleep_exit_callback : 1e035ba >			  ## power_hw.c:1419:33
 1e048ee:    18 42             	[r1 + 4] = r0			  ## power_hw.c:1419:33
 1e048f0:    c0 ff de 35 e0 01 	r0 = 31471070 <board_set_soft_poweroff : 1e035de >			  ## power_hw.c:1420:37
 1e048f6:    48 42             	[r1 + 16] = r0			  ## power_hw.c:1420:37
 1e048f8:    20 00             	rts			  ## power_hw.c:1421:1


power_keep_dacvdd_en:
 1e048fa:    c0 ff 80 48 00 00 	r0 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:1407:0
 1e04900:    01 70             	r1 = 0			  ## power_hw.c:1408:25
 1e04902:    11 f9 34 00       	b[r0 + 52] = r1			  ## power_hw.c:1408:25
 1e04906:    20 00             	rts			  ## power_hw.c:1409:1


__hw_power_set_wakeup_IO:
 1e04908:    78 01             	[--sp] = {rets, r8-r4}			  ## power_wakeup.c:520:0
 1e0490a:    13 08             	r3 = r1			  ## power_wakeup.c:520:0
 1e0490c:    08 08             	r8 = r0			  ## power_wakeup.c:520:0
 1e0490e:    00 66             	r0 = b[r3 + 0] (u)			  ## power_wakeup.c:521:52
 1e04910:    51 70             	r1 = 5			  ## power_wakeup.c:521:52
 1e04912:    c4 ff 80 23 00 00 	r4 = 9088 <hdl.0 : 2380 >			  ## power_wakeup.c:521:52
 1e04918:    80 fe 10 48       	r4 += r8 * r1			  ## power_wakeup.c:521:52
 1e0491c:    08 68             	b[r4 + 0] = r0			  ## power_wakeup.c:521:44
 1e0491e:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:522:45
 1e04920:    1d 68             	b[r4 + 1] = r5			  ## power_wakeup.c:522:37
 1e04922:    21 66             	r1 = b[r3 + 2] (u)			  ## power_wakeup.c:523:45
 1e04924:    29 68             	b[r4 + 2] = r1			  ## power_wakeup.c:523:37
 1e04926:    31 66             	r1 = b[r3 + 3] (u)			  ## power_wakeup.c:524:45
 1e04928:    39 68             	b[r4 + 3] = r1			  ## power_wakeup.c:524:37
 1e0492a:    46 66             	r6 = b[r3 + 4] (u)			  ## power_wakeup.c:525:45
 1e0492c:    4e 68             	b[r4 + 4] = r6			  ## power_wakeup.c:525:37
 1e0492e:    06 e3 03 80       	if (r6 > 48) goto 6 <__hw_power_set_wakeup_IO+0x30 : 1e04938 >			  ## power_wakeup.c:529:9
 1e04932:    27 fd f0 69       	r7 = r6 & 240			  ## power_wakeup.c:530:46
 1e04936:    0e 18             	goto 28 <__hw_power_set_wakeup_IO+0x4C : 1e04954 >			  ## power_wakeup.c:530:46
 1e04938:    64 fc cd ff       	r4 = r6 + -51			  ## power_wakeup.c:542:13
 1e0493c:    07 05             	r7 = r4.b0 (u)			  ## power_wakeup.c:542:13
 1e0493e:    34 73             	r4 = 51			  ## power_wakeup.c:542:13
 1e04940:    27 e0 01 30       	if (r7 < 2) goto 2 <__hw_power_set_wakeup_IO+0x3E : 1e04946 >			  ## power_wakeup.c:542:13
 1e04944:    14 73             	r4 = 49			  ## power_wakeup.c:542:13
 1e04946:    67 fc cb ff       	r7 = r6 + -53			  ## power_wakeup.c:545:41
 1e0494a:    c2 05             	r2 = r7.b0 (u)			  ## power_wakeup.c:545:41
 1e0494c:    57 73             	r7 = 53			  ## power_wakeup.c:545:41
 1e0494e:    42 e0 01 30       	if (r2 < 4) goto 2 <__hw_power_set_wakeup_IO+0x4C : 1e04954 >
 1e04952:    47 08             	r7 = r4			  ## power_wakeup.c:545:41
 1e04954:    c4 ff 50 18 1a 00 	r4 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >
 1e0495a:    f7 e2 29 d0       	ifs (r7 <= 47) goto 82 <.GJTIE428_1_1_+0x30 : 1e049b0 >
 1e0495e:    07 8d             	r7 += -48
 1e04960:    57 e0 4c 80       	if (r7 > 5) goto 152 <.GJTIE428_2_2_+0x2C : 1e049fc >
 1e04964:    a7 00             	tbb [r7]


.GJTIS428_0_0_:
 1e04966:    2a     < 42 : 0x2A >
 1e04967:    03     < 3 : 0x3 >
 1e04968:    4b     < 75 : 0x4B >
 1e04969:    03     < 3 : 0x3 >
 1e0496a:    4b     < 75 : 0x4B >
 1e0496b:    43     < 67 : 0x43 >
 1e0496c:    63 fc cf ff       	r3 = r6 + -49			  ## power_wakeup.c:345:5
 1e04970:    33 e0 6e 80       	if (r3 > 3) goto 220 <.GJTIE428_2_2_+0x80 : 1e04a50 >
 1e04974:    c1 ff 00 54 1e 00 	r1 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e0497a:    a3 00             	tbb [r3]


.GJTIS428_1_1_:
 1e0497c:    02     < 2 : 0x2 >
 1e0497d:    6c     < 108 : 0x6C >
 1e0497e:    83     < 131 : 0x83 >
 1e0497f:    9a     < 154 : 0x9A >
 1e04980:    00 f4 04 1a       	[r1 + 0] |= 1024			  ## power_wakeup.c:349:9
 1e04984:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_wakeup.c:350:9
 1e04988:    05 e0 33 01       	if (r5 == 0) goto 614 <.GJTIE428_2_2_+0x222 : 1e04bf2 >			  ## power_wakeup.c:351:13
 1e0498c:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_1_1_+0x18 : 1e04998 >
 1e0498e:    00 f4 10 19       	[r1 + 0] |= 16			  ## power_wakeup.c:353:17
 1e04992:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:354:17
 1e04994:    70 b3             	r0 &= 4294967231			  ## power_wakeup.c:354:17
 1e04996:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:354:17
 1e04998:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e0499a:    11 70             	r1 = 1			  ## power_wakeup.c:356:30
 1e0499c:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:356:30
 1e049a0:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e049a2:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e049a4:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e049a6:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e049a8:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e049aa:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e049ac:    a1 71             	r1 = 26			  ## power_wakeup.c:100:1
 1e049ae:    74 19             	goto 744 <.GJTIE428_2_2_+0x2C8 : 1e04c98 >			  ## power_wakeup.c:100:1
 1e049b0:    04 2e             	if (r7 == 0) goto 8 <.GJTIE428_1_1_+0x3A : 1e049ba >
 1e049b2:    07 e1 02 00       	if (r7 == 16) goto 4 <.GJTIE428_1_1_+0x3A : 1e049ba >
 1e049b6:    07 e2 21 10       	if (r7 != 32) goto 66 <.GJTIE428_2_2_+0x2C : 1e049fc >
 1e049ba:    31 d1             	r1 = r6 >> 4			  ## power_wakeup.c:220:5
 1e049bc:    31 e0 20 80       	if (r1 > 3) goto 64 <.GJTIE428_2_2_+0x30 : 1e04a00 >			  ## power_wakeup.c:220:5
 1e049c0:    25 fd 0f 69       	r5 = r6 & 15			  ## power_wakeup.c:217:24
 1e049c4:    c0 ff 20 30 e1 01 	r0 = 31535136 <PB_valid : 1e13020 >			  ## power_wakeup.c:217:24
 1e049ca:    a1 00             	tbb [r1]			  ## power_wakeup.c:217:24


.GJTIS428_2_2_:
 1e049cc:    02     < 2 : 0x2 >
 1e049cd:    1b     < 27 : 0x1B >
 1e049ce:    29     < 41 : 0x29 >
 1e049cf:    3a     < 58 : 0x3A >
 1e049d0:    01 70             	r1 = 0
 1e049d2:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## power_wakeup.c:224:22
 1e049d6:    25 f2 81 00       	if (r5 == r2) goto 258 <.GJTIE428_2_2_+0x10C : 1e04adc >			  ## power_wakeup.c:224:22
 1e049da:    11 80             	r1 += 1			  ## power_wakeup.c:223:48
 1e049dc:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE428_2_2_+0x2 : 1e049d2 >			  ## power_wakeup.c:223:48
 1e049e0:    8f f3 59 f5       	call 2091698 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e049e4:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## cpu.h:148:5
 1e049ea:    29 18             	goto 82 <.GJTIE428_2_2_+0x6E : 1e04a3e >			  ## cpu.h:148:5
 1e049ec:    56 e3 ce 00       	if (r6 == 53) goto 412 <.GJTIE428_2_2_+0x1BC : 1e04b8c >			  ## power_wakeup.c:444:5
 1e049f0:    86 e3 ce 00       	if (r6 == 56) goto 412 <.GJTIE428_2_2_+0x1C0 : 1e04b90 >
 1e049f4:    76 e3 ce 10       	if (r6 != 55) goto 412 <.GJTIE428_2_2_+0x1C4 : 1e04b94 >
 1e049f8:    18 70             	r8 = 1
 1e049fa:    cf 18             	goto 414 <.GJTIE428_2_2_+0x1CA : 1e04b9a >
 1e049fc:    8f f3 4b f5       	call 2091670 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e04a00:    58 01             	{pc, r8-r4} = [sp++]			  ## power_wakeup.c:569:1
 1e04a02:    01 70             	r1 = 0
 1e04a04:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## power_wakeup.c:237:22
 1e04a08:    25 f2 71 00       	if (r5 == r2) goto 226 <.GJTIE428_2_2_+0x11E : 1e04aee >			  ## power_wakeup.c:237:22
 1e04a0c:    11 80             	r1 += 1			  ## power_wakeup.c:236:48
 1e04a0e:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE428_2_2_+0x34 : 1e04a04 >			  ## power_wakeup.c:236:48
 1e04a12:    8f f3 40 f5       	call 2091648 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e04a16:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## cpu.h:148:5
 1e04a1c:    10 18             	goto 32 <.GJTIE428_2_2_+0x6E : 1e04a3e >			  ## cpu.h:148:5
 1e04a1e:    00 70             	r0 = 0
 1e04a20:    c1 ff 3e 30 e1 01 	r1 = 31535166 <PD_valid : 1e1303e >
 1e04a26:    02 fa 00 01       	r2 = b[r0+r1] (u)			  ## power_wakeup.c:250:22
 1e04a2a:    25 f2 69 00       	if (r5 == r2) goto 210 <.GJTIE428_2_2_+0x130 : 1e04b00 >			  ## power_wakeup.c:250:22
 1e04a2e:    10 80             	r0 += 1			  ## power_wakeup.c:249:48
 1e04a30:    40 e0 f9 9f       	if (r0 <= 4) goto -14 <.GJTIE428_2_2_+0x56 : 1e04a26 >			  ## power_wakeup.c:249:48
 1e04a34:    8f f3 2f f5       	call 2091614 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e04a38:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## cpu.h:148:5
 1e04a3e:    68 18             	goto 208 <.GJTIE428_2_2_+0x140 : 1e04b10 >
 1e04a40:    c7 ff 00 59 1e 00 	r7 = 1988864 <uECC_vli_cmp_unsafe+0xDE904 : 1e5900 >
 1e04a46:    e6 71             	r6 = 30
 1e04a48:    63 2a             	if (r5 == 0) goto 198 <.GJTIE428_2_2_+0x140 : 1e04b10 >
 1e04a4a:    8f f3 24 f5       	call 2091592 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e04a4e:    60 18             	goto 192 <.GJTIE428_2_2_+0x140 : 1e04b10 >			  ## cpu.h:148:5
 1e04a50:    01 70             	r1 = 0
 1e04a52:    23 19             	goto 582 <.GJTIE428_2_2_+0x2CA : 1e04c9a >
 1e04a54:    00 f4 08 1a       	[r1 + 0] |= 2048			  ## power_wakeup.c:369:9
 1e04a58:    00 f4 08 19       	[r1 + 0] |= 8			  ## power_wakeup.c:370:9
 1e04a5c:    df 2a             	if (r5 == 0) goto 446 <.GJTIE428_2_2_+0x24C : 1e04c1c >			  ## power_wakeup.c:371:13
 1e04a5e:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_2_2_+0x9A : 1e04a6a >
 1e04a60:    00 f4 20 19       	[r1 + 0] |= 32			  ## power_wakeup.c:373:17
 1e04a64:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:374:17
 1e04a66:    f0 b3             	r0 &= 4294967167			  ## power_wakeup.c:374:17
 1e04a68:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:374:17
 1e04a6a:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04a6c:    11 70             	r1 = 1			  ## power_wakeup.c:376:30
 1e04a6e:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:376:30
 1e04a72:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04a74:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e04a76:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e04a78:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04a7a:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e04a7c:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e04a7e:    b1 71             	r1 = 27			  ## power_wakeup.c:100:1
 1e04a80:    0b 19             	goto 534 <.GJTIE428_2_2_+0x2C8 : 1e04c98 >			  ## power_wakeup.c:100:1
 1e04a82:    09 f4 04 1a       	[r1 + 36] |= 1024			  ## power_wakeup.c:389:9
 1e04a86:    09 f4 04 19       	[r1 + 36] |= 4			  ## power_wakeup.c:390:9
 1e04a8a:    dd 2a             	if (r5 == 0) goto 442 <.GJTIE428_2_2_+0x276 : 1e04c46 >			  ## power_wakeup.c:391:13
 1e04a8c:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_2_2_+0xC8 : 1e04a98 >
 1e04a8e:    09 f4 10 19       	[r1 + 36] |= 16			  ## power_wakeup.c:393:17
 1e04a92:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:394:17
 1e04a94:    70 b3             	r0 &= 4294967231			  ## power_wakeup.c:394:17
 1e04a96:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:394:17
 1e04a98:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04a9a:    11 70             	r1 = 1			  ## power_wakeup.c:396:30
 1e04a9c:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:396:30
 1e04aa0:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04aa2:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e04aa4:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e04aa6:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04aa8:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e04aaa:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e04aac:    c1 71             	r1 = 28			  ## power_wakeup.c:100:1
 1e04aae:    f4 18             	goto 488 <.GJTIE428_2_2_+0x2C8 : 1e04c98 >			  ## power_wakeup.c:100:1
 1e04ab0:    09 f4 08 1a       	[r1 + 36] |= 2048			  ## power_wakeup.c:409:9
 1e04ab4:    09 f4 08 19       	[r1 + 36] |= 8			  ## power_wakeup.c:410:9
 1e04ab8:    db 2a             	if (r5 == 0) goto 438 <.GJTIE428_2_2_+0x2A0 : 1e04c70 >			  ## power_wakeup.c:411:13
 1e04aba:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_2_2_+0xF6 : 1e04ac6 >
 1e04abc:    09 f4 20 19       	[r1 + 36] |= 32			  ## power_wakeup.c:413:17
 1e04ac0:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:414:17
 1e04ac2:    f0 b3             	r0 &= 4294967167			  ## power_wakeup.c:414:17
 1e04ac4:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:414:17
 1e04ac6:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04ac8:    11 70             	r1 = 1			  ## power_wakeup.c:416:30
 1e04aca:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:416:30
 1e04ace:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04ad0:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e04ad2:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e04ad4:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04ad6:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e04ad8:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e04ada:    dd 18             	goto 442 <.GJTIE428_2_2_+0x2C6 : 1e04c96 >			  ## power_wakeup.c:100:1
 1e04adc:    c0 ff 2a 30 e1 01 	r0 = 31535146 <PA_map_tbl : 1e1302a >			  ## power_wakeup.c:225:23
 1e04ae2:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:225:23
 1e04ae6:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## power_wakeup.c:225:23
 1e04aec:    11 18             	goto 34 <.GJTIE428_2_2_+0x140 : 1e04b10 >			  ## power_wakeup.c:225:23
 1e04aee:    c0 ff 34 30 e1 01 	r0 = 31535156 <PB_map_tbl : 1e13034 >			  ## power_wakeup.c:238:23
 1e04af4:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:238:23
 1e04af8:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## power_wakeup.c:238:23
 1e04afe:    08 18             	goto 16 <.GJTIE428_2_2_+0x140 : 1e04b10 >			  ## power_wakeup.c:238:23
 1e04b00:    c1 ff 43 30 e1 01 	r1 = 31535171 <PD_map_tbl : 1e13043 >			  ## power_wakeup.c:251:23
 1e04b06:    06 fa 00 01       	r6 = b[r0+r1] (u)			  ## power_wakeup.c:251:23
 1e04b0a:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## power_wakeup.c:251:23
 1e04b10:    21 4e             	r1 = [r7 + 8]			  ## power_wakeup.c:283:15
 1e04b12:    10 70             	r0 = 1			  ## power_wakeup.c:283:15
 1e04b14:    40 0d             	r0 <<= r5			  ## power_wakeup.c:283:18
 1e04b16:    51 b0             	r1 |= r0			  ## power_wakeup.c:283:15
 1e04b18:    29 4e             	[r7 + 8] = r1			  ## power_wakeup.c:283:15
 1e04b1a:    31 4e             	r1 = [r7 + 12]			  ## power_wakeup.c:284:15
 1e04b1c:    51 b0             	r1 |= r0			  ## power_wakeup.c:284:15
 1e04b1e:    39 4e             	[r7 + 12] = r1			  ## power_wakeup.c:284:15
 1e04b20:    81 4e             	r1 = [r7 + 32]			  ## power_wakeup.c:285:16
 1e04b22:    51 b0             	r1 |= r0			  ## power_wakeup.c:285:16
 1e04b24:    89 4e             	[r7 + 32] = r1			  ## power_wakeup.c:285:16
 1e04b26:    12 66             	r2 = b[r3 + 1] (u)			  ## power_wakeup.c:287:15
 1e04b28:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:287:15
 1e04b2a:    13 24             	if (r2 == 0) goto 38 <.GJTIE428_2_2_+0x182 : 1e04b52 >			  ## power_wakeup.c:287:9
 1e04b2c:    07 22             	if (r1 == 0) goto 14 <.GJTIE428_2_2_+0x16C : 1e04b3c >
 1e04b2e:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:289:22
 1e04b30:    51 b0             	r1 |= r0			  ## power_wakeup.c:289:22
 1e04b32:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:289:22
 1e04b34:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:290:22
 1e04b36:    e3 fd 00 01       	r0 = r1 & ~r0			  ## power_wakeup.c:290:22
 1e04b3a:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:290:22
 1e04b3c:    32 68             	r2 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04b3e:    10 70             	r0 = 1			  ## power_wakeup.c:292:26
 1e04b40:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:292:26
 1e04b44:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e04b46:    52 b2             	r2 |= r1			  ## power_wakeup.c:100:1
 1e04b48:    3a 68             	b[r4 + 3] = r2			  ## power_wakeup.c:100:1
 1e04b4a:    22 68             	r2 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04b4c:    23 04             	r3 = r0.l (u)			  ## power_wakeup.c:100:1
 1e04b4e:    53 b4             	r3 |= r2			  ## power_wakeup.c:100:1
 1e04b50:    15 18             	goto 42 <.GJTIE428_2_2_+0x1AC : 1e04b7c >			  ## power_wakeup.c:100:1
 1e04b52:    07 22             	if (r1 == 0) goto 14 <.GJTIE428_2_2_+0x192 : 1e04b62 >
 1e04b54:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:295:22
 1e04b56:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:295:22
 1e04b5a:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:295:22
 1e04b5c:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:296:22
 1e04b5e:    50 b2             	r0 |= r1			  ## power_wakeup.c:296:22
 1e04b60:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:296:22
 1e04b62:    32 68             	r2 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04b64:    10 70             	r0 = 1			  ## power_wakeup.c:298:27
 1e04b66:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:298:27
 1e04b6a:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e04b6c:    e3 fd 10 22       	r2 = r2 & ~r1			  ## power_wakeup.c:100:1
 1e04b70:    3a 68             	b[r4 + 3] = r2			  ## power_wakeup.c:100:1
 1e04b72:    22 68             	r2 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04b74:    23 04             	r3 = r0.l (u)			  ## power_wakeup.c:100:1
 1e04b76:    13 fd ff 39       	r3 = r3 ^ 255			  ## power_wakeup.c:100:1
 1e04b7a:    53 b5             	r3 &= r2			  ## power_wakeup.c:100:1
 1e04b7c:    2b 68             	b[r4 + 2] = r3			  ## power_wakeup.c:100:1
 1e04b7e:    42 fc 70 00       	r2 = r4 + 112			  ## power_wakeup.c:302:5
 1e04b82:    16 fa 00 82       	b[r8+r2] = r6			  ## power_wakeup.c:302:21
 1e04b86:    02 d2             	r2 = r0 >> 8			  ## power_wakeup.c:101:1
 1e04b88:    9a 68             	b[r4 + 9] = r2			  ## power_wakeup.c:101:1
 1e04b8a:    90 18             	goto 288 <.GJTIE428_2_2_+0x2DC : 1e04cac >			  ## power_wakeup.c:101:1
 1e04b8c:    28 70             	r8 = 2
 1e04b8e:    05 18             	goto 10 <.GJTIE428_2_2_+0x1CA : 1e04b9a >
 1e04b90:    08 70             	r8 = 0
 1e04b92:    03 18             	goto 6 <.GJTIE428_2_2_+0x1CA : 1e04b9a >
 1e04b94:    8f f3 7f f4       	call 2091262 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e04b98:    31 66             	r1 = b[r3 + 3] (u)
 1e04b9a:    40 fc 30 00       	r0 = r4 + 48			  ## power_wakeup.c:466:5
 1e04b9e:    11 fa 00 80       	b[r8+r0] = r1			  ## power_wakeup.c:466:21
 1e04ba2:    01 69             	r1 = b[r4 + 16] (u)			  ## power_wakeup.c:497:17
 1e04ba4:    10 70             	r0 = 1			  ## power_wakeup.c:497:17
 1e04ba6:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:497:20
 1e04baa:    51 b0             	r1 |= r0			  ## power_wakeup.c:497:17
 1e04bac:    09 69             	b[r4 + 16] = r1			  ## power_wakeup.c:497:17
 1e04bae:    71 69             	r1 = b[r4 + 23] (u)			  ## power_wakeup.c:499:21
 1e04bb0:    51 b0             	r1 |= r0			  ## power_wakeup.c:499:21
 1e04bb2:    79 69             	b[r4 + 23] = r1			  ## power_wakeup.c:499:21
 1e04bb4:    81 69             	r1 = b[r4 + 24] (u)			  ## power_wakeup.c:500:21
 1e04bb6:    51 b0             	r1 |= r0			  ## power_wakeup.c:500:21
 1e04bb8:    89 69             	b[r4 + 24] = r1			  ## power_wakeup.c:500:21
 1e04bba:    11 66             	r1 = b[r3 + 1] (u)			  ## power_wakeup.c:502:15
 1e04bbc:    11 e0 08 00       	if (r1 == 1) goto 16 <.GJTIE428_2_2_+0x200 : 1e04bd0 >			  ## power_wakeup.c:502:9
 1e04bc0:    21 e0 0e 10       	if (r1 != 2) goto 28 <.GJTIE428_2_2_+0x210 : 1e04be0 >
 1e04bc4:    11 69             	r1 = b[r4 + 17] (u)			  ## power_wakeup.c:503:23
 1e04bc6:    51 b0             	r1 |= r0			  ## power_wakeup.c:503:23
 1e04bc8:    19 69             	b[r4 + 17] = r1			  ## power_wakeup.c:503:23
 1e04bca:    22 69             	r2 = b[r4 + 18] (u)			  ## power_wakeup.c:504:23
 1e04bcc:    21 99             	r1 = r4 + 18			  ## power_wakeup.c:504:23
 1e04bce:    0e 18             	goto 28 <.GJTIE428_2_2_+0x21C : 1e04bec >			  ## power_wakeup.c:504:23
 1e04bd0:    21 69             	r1 = b[r4 + 18] (u)			  ## power_wakeup.c:507:23
 1e04bd2:    51 b0             	r1 |= r0			  ## power_wakeup.c:507:23
 1e04bd4:    29 69             	b[r4 + 18] = r1			  ## power_wakeup.c:507:23
 1e04bd6:    12 69             	r2 = b[r4 + 17] (u)			  ## power_wakeup.c:508:23
 1e04bd8:    11 99             	r1 = r4 + 17			  ## power_wakeup.c:508:23
 1e04bda:    e3 fd 00 02       	r0 = r2 & ~r0			  ## power_wakeup.c:508:23
 1e04bde:    07 18             	goto 14 <.GJTIE428_2_2_+0x21E : 1e04bee >			  ## power_wakeup.c:508:23
 1e04be0:    21 69             	r1 = b[r4 + 18] (u)			  ## power_wakeup.c:511:23
 1e04be2:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:511:23
 1e04be6:    29 69             	b[r4 + 18] = r1			  ## power_wakeup.c:511:23
 1e04be8:    12 69             	r2 = b[r4 + 17] (u)			  ## power_wakeup.c:512:23
 1e04bea:    11 99             	r1 = r4 + 17			  ## power_wakeup.c:512:23
 1e04bec:    50 b4             	r0 |= r2
 1e04bee:    08 62             	b[r1 + 0] = r0
 1e04bf0:    58 01             	{pc, r8-r4} = [sp++]			  ## power_wakeup.c:569:1
 1e04bf2:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_2_2_+0x22E : 1e04bfe >
 1e04bf4:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:359:17
 1e04bf6:    70 b2             	r0 &= 4294967279			  ## power_wakeup.c:359:17
 1e04bf8:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:359:17
 1e04bfa:    00 f4 40 19       	[r1 + 0] |= 64			  ## power_wakeup.c:360:17
 1e04bfe:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04c00:    11 70             	r1 = 1			  ## power_wakeup.c:362:31
 1e04c02:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:362:31
 1e04c06:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04c08:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e04c0c:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e04c0e:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04c10:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e04c12:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e04c16:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e04c18:    a1 71             	r1 = 26			  ## power_wakeup.c:100:1
 1e04c1a:    3e 18             	goto 124 <.GJTIE428_2_2_+0x2C8 : 1e04c98 >			  ## power_wakeup.c:100:1
 1e04c1c:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_2_2_+0x258 : 1e04c28 >
 1e04c1e:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:379:17
 1e04c20:    f0 b2             	r0 &= 4294967263			  ## power_wakeup.c:379:17
 1e04c22:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:379:17
 1e04c24:    00 f4 80 19       	[r1 + 0] |= 128			  ## power_wakeup.c:380:17
 1e04c28:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04c2a:    11 70             	r1 = 1			  ## power_wakeup.c:382:31
 1e04c2c:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:382:31
 1e04c30:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04c32:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e04c36:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e04c38:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04c3a:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e04c3c:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e04c40:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e04c42:    b1 71             	r1 = 27			  ## power_wakeup.c:100:1
 1e04c44:    29 18             	goto 82 <.GJTIE428_2_2_+0x2C8 : 1e04c98 >			  ## power_wakeup.c:100:1
 1e04c46:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_2_2_+0x282 : 1e04c52 >
 1e04c48:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:399:17
 1e04c4a:    70 b2             	r0 &= 4294967279			  ## power_wakeup.c:399:17
 1e04c4c:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:399:17
 1e04c4e:    09 f4 40 19       	[r1 + 36] |= 64			  ## power_wakeup.c:400:17
 1e04c52:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04c54:    11 70             	r1 = 1			  ## power_wakeup.c:402:31
 1e04c56:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:402:31
 1e04c5a:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04c5c:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e04c60:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e04c62:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04c64:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e04c66:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e04c6a:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e04c6c:    c1 71             	r1 = 28			  ## power_wakeup.c:100:1
 1e04c6e:    14 18             	goto 40 <.GJTIE428_2_2_+0x2C8 : 1e04c98 >			  ## power_wakeup.c:100:1
 1e04c70:    05 20             	if (r0 == 0) goto 10 <.GJTIE428_2_2_+0x2AC : 1e04c7c >
 1e04c72:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:419:17
 1e04c74:    f0 b2             	r0 &= 4294967263			  ## power_wakeup.c:419:17
 1e04c76:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:419:17
 1e04c78:    09 f4 80 19       	[r1 + 36] |= 128			  ## power_wakeup.c:420:17
 1e04c7c:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04c7e:    11 70             	r1 = 1			  ## power_wakeup.c:422:31
 1e04c80:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:422:31
 1e04c84:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04c86:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e04c8a:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e04c8c:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e04c8e:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e04c90:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e04c94:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e04c96:    d1 71             	r1 = 29
 1e04c98:    28 68             	b[r4 + 2] = r0			  ## power_wakeup.c:100:1
 1e04c9a:    40 fc 70 00       	r0 = r4 + 112			  ## power_wakeup.c:435:5
 1e04c9e:    11 fa 00 80       	b[r8+r0] = r1			  ## power_wakeup.c:435:21
 1e04ca2:    10 70             	r0 = 1			  ## power_wakeup.c:437:23
 1e04ca4:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:437:23
 1e04ca8:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:99:1
 1e04caa:    99 68             	b[r4 + 9] = r1			  ## power_wakeup.c:101:1
 1e04cac:    88 68             	b[r4 + 8] = r0
 1e04cae:    12 68             	r2 = b[r4 + 1] (u)
 1e04cb0:    51 b4             	r1 |= r2
 1e04cb2:    19 68             	b[r4 + 1] = r1
 1e04cb4:    01 68             	r1 = b[r4 + 0] (u)
 1e04cb6:    50 b2             	r0 |= r1
 1e04cb8:    08 68             	b[r4 + 0] = r0
 1e04cba:    58 01             	{pc, r8-r4} = [sp++]			  ## power_wakeup.c:569:1


power_wakeup_init:
 1e04cbc:    79 01             	[--sp] = {rets, r9-r4}			  ## power_wakeup.c:828:0
 1e04cbe:    06 70             	r6 = 0			  ## power_wakeup.c:828:0
 1e04cc0:    c3 ff 0c 50 1e 00 	r3 = 1986572 <uECC_vli_cmp_unsafe+0xDE010 : 1e500c >			  ## power_wakeup.c:828:0
 1e04cc6:    0e 46             	[r3 + 0] = r6			  ## power_wakeup.c:774:19
 1e04cc8:    5e 46             	[r3 + 20] = r6			  ## power_wakeup.c:775:20
 1e04cca:    39 fc 00 01       	r9 = r3 + 256			  ## power_wakeup.c:775:20
 1e04cce:    16 f6 00 90       	[r9 + 0] = r6			  ## power_wakeup.c:778:19
 1e04cd2:    60 70             	r0 = 6			  ## power_wakeup.c:779:20
 1e04cd4:    10 f6 14 90       	[r9 + 20] = r0			  ## power_wakeup.c:779:20
 1e04cd8:    31 fc 00 03       	r1 = r3 + 768			  ## power_wakeup.c:779:20
 1e04cdc:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:782:19
 1e04cde:    5e 42             	[r1 + 20] = r6			  ## power_wakeup.c:783:20
 1e04ce0:    10 fc f4 c4       	r0 = r1 + -15116			  ## power_wakeup.c:787:14
 1e04ce4:    0e 40             	[r0 + 0] = r6			  ## power_wakeup.c:787:14
 1e04ce6:    00 fc 00 3c       	r0 = r0 + 15360			  ## power_wakeup.c:787:14
 1e04cea:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:788:5
 1e04cec:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:788:5
 1e04cee:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:788:5
 1e04cf0:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:789:5
 1e04cf2:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:789:5
 1e04cf4:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:789:5
 1e04cf6:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:790:5
 1e04cf8:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:790:5
 1e04cfa:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:790:5
 1e04cfc:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:791:5
 1e04cfe:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:791:5
 1e04d00:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:791:5
 1e04d02:    16 f6 f4 16       	[r1 + 1780] = r6			  ## power_wakeup.c:794:15
 1e04d06:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:795:5
 1e04d08:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:795:5
 1e04d0a:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:795:5
 1e04d0c:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:796:5
 1e04d0e:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:796:5
 1e04d10:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:796:5
 1e04d12:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:797:5
 1e04d14:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:797:5
 1e04d16:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:797:5
 1e04d18:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:798:5
 1e04d1a:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:798:5
 1e04d1c:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:798:5
 1e04d1e:    c5 ff 48 18 1a 00 	r5 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## power_wakeup.c:798:5
 1e04d24:    04 6a             	r4 = b[r5 + 0] (u)			  ## power_wakeup.c:800:9
 1e04d26:    58 fc 60 00       	r8 = r5 + 96			  ## power_wakeup.c:800:9
 1e04d2a:    00 f3 54 40       	if ((r4 & 1) == 0) goto 168 <.GJTIE429_0_0_+0x36 : 1e04dd6 >			  ## power_wakeup.c:800:9
 1e04d2e:    04 f9 18 80       	r4 = b[r8 + 24] (u)			  ## power_wakeup.c:801:23
 1e04d32:    47 fc ff ff       	r7 = r4 + -1			  ## power_wakeup.c:802:29
 1e04d36:    c2 05             	r2 = r7.b0 (u)			  ## power_wakeup.c:802:29
 1e04d38:    92 e0 09 80       	if (r2 > 9) goto 18 <power_wakeup_init+0x92 : 1e04d4e >			  ## power_wakeup.c:802:29
 1e04d3c:    00 46             	r0 = [r3 + 0]			  ## power_wakeup.c:803:27
 1e04d3e:    11 70             	r1 = 1			  ## power_wakeup.c:803:30
 1e04d40:    c1 0d             	r1 <<= r7			  ## power_wakeup.c:803:30
 1e04d42:    50 b2             	r0 |= r1			  ## power_wakeup.c:803:27
 1e04d44:    08 46             	[r3 + 0] = r0			  ## power_wakeup.c:803:27
 1e04d46:    52 46             	r2 = [r3 + 20]			  ## power_wakeup.c:804:28
 1e04d48:    40 97             	r0 = r3 + 20			  ## power_wakeup.c:804:28
 1e04d4a:    51 b4             	r1 |= r2			  ## power_wakeup.c:804:28
 1e04d4c:    43 18             	goto 134 <.GJTIE429_0_0_+0x34 : 1e04dd4 >			  ## power_wakeup.c:804:28
 1e04d4e:    43 fc f5 ff       	r3 = r4 + -11			  ## power_wakeup.c:805:37
 1e04d52:    c2 04             	r2 = r3.b0 (u)			  ## power_wakeup.c:805:37
 1e04d54:    92 e0 0d 80       	if (r2 > 9) goto 26 <power_wakeup_init+0xB6 : 1e04d72 >			  ## power_wakeup.c:805:37
 1e04d58:    00 f6 00 90       	r0 = [r9 + 0]			  ## power_wakeup.c:806:27
 1e04d5c:    11 70             	r1 = 1			  ## power_wakeup.c:806:30
 1e04d5e:    c1 0c             	r1 <<= r3			  ## power_wakeup.c:806:30
 1e04d60:    50 b2             	r0 |= r1			  ## power_wakeup.c:806:27
 1e04d62:    10 f6 00 90       	[r9 + 0] = r0			  ## power_wakeup.c:806:27
 1e04d66:    02 f6 14 90       	r2 = [r9 + 20]			  ## power_wakeup.c:807:28
 1e04d6a:    90 fc 14 00       	r0 = r9 + 20			  ## power_wakeup.c:807:28
 1e04d6e:    51 b4             	r1 |= r2			  ## power_wakeup.c:807:28
 1e04d70:    31 18             	goto 98 <.GJTIE429_0_0_+0x34 : 1e04dd4 >			  ## power_wakeup.c:807:28
 1e04d72:    42 fc eb ff       	r2 = r4 + -21			  ## power_wakeup.c:808:37
 1e04d76:    83 04             	r3 = r2.b0 (u)			  ## power_wakeup.c:808:37
 1e04d78:    43 e0 0b 80       	if (r3 > 4) goto 22 <power_wakeup_init+0xD6 : 1e04d92 >			  ## power_wakeup.c:808:37
 1e04d7c:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:809:27
 1e04d7e:    13 70             	r3 = 1			  ## power_wakeup.c:809:30
 1e04d80:    f8 fd 20 23       	r2 = r3 << r2			  ## power_wakeup.c:809:30
 1e04d84:    50 b4             	r0 |= r2			  ## power_wakeup.c:809:27
 1e04d86:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:809:27
 1e04d88:    51 42             	r1 = [r1 + 20]			  ## power_wakeup.c:810:28
 1e04d8a:    90 fc 14 02       	r0 = r9 + 532			  ## power_wakeup.c:810:28
 1e04d8e:    51 b4             	r1 |= r2			  ## power_wakeup.c:810:28
 1e04d90:    21 18             	goto 66 <.GJTIE429_0_0_+0x34 : 1e04dd4 >			  ## power_wakeup.c:810:28
 1e04d92:    41 fc e6 ff       	r1 = r4 + -26			  ## power_wakeup.c:811:20
 1e04d96:    31 e0 1e 80       	if (r1 > 3) goto 60 <.GJTIE429_0_0_+0x36 : 1e04dd6 >			  ## power_wakeup.c:811:20
 1e04d9a:    a1 00             	tbb [r1]


.GJTIS429_0_0_:
 1e04d9c:    02     < 2 : 0x2 >
 1e04d9d:    07     < 7 : 0x7 >
 1e04d9e:    0c     < 12 : 0xC >
 1e04d9f:    14     < 20 : 0x14 >
 1e04da0:    00 f4 01 0a       	[r0 + 0] |= 256			  ## power_wakeup.c:812:13
 1e04da4:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:813:13
 1e04da6:    11 b5             	r1 |= 1024			  ## power_wakeup.c:813:13
 1e04da8:    15 18             	goto 42 <.GJTIE429_0_0_+0x34 : 1e04dd4 >			  ## power_wakeup.c:813:13
 1e04daa:    00 f4 02 0a       	[r0 + 0] |= 512			  ## power_wakeup.c:815:13
 1e04dae:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:816:13
 1e04db0:    91 b5             	r1 |= 2048			  ## power_wakeup.c:816:13
 1e04db2:    10 18             	goto 32 <.GJTIE429_0_0_+0x34 : 1e04dd4 >			  ## power_wakeup.c:816:13
 1e04db4:    09 f4 01 0a       	[r0 + 36] |= 256			  ## power_wakeup.c:818:13
 1e04db8:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:819:13
 1e04dba:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:819:13
 1e04dbe:    01 fd 04 0a       	r1 = r0 | 1024			  ## power_wakeup.c:819:13
 1e04dc2:    07 18             	goto 14 <.GJTIE429_0_0_+0x32 : 1e04dd2 >			  ## power_wakeup.c:819:13
 1e04dc4:    09 f4 02 0a       	[r0 + 36] |= 512			  ## power_wakeup.c:821:13
 1e04dc8:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:822:13
 1e04dca:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:822:13
 1e04dce:    01 fd 08 0a       	r1 = r0 | 2048			  ## power_wakeup.c:822:13
 1e04dd2:    20 08             	r0 = r2
 1e04dd4:    09 40             	[r0 + 0] = r1
 1e04dd6:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:841:17
 1e04ddc:    c7 ff a8 2b e1 01 	r7 = 31533992 <wk_param : 1e12ba8 >			  ## power_wakeup.c:841:17
 1e04de2:    17 f6 c8 00       	[r0 + 200] = r7			  ## power_wakeup.c:833:24
 1e04de6:    01 f9 00 80       	r1 = b[r8 + 0] (u)			  ## power_wakeup.c:835:16
 1e04dea:    e9 61             	b[r0 + 30] = r1			  ## power_wakeup.c:835:14
 1e04dec:    e1 6a             	r1 = b[r5 + 14] (u)			  ## power_wakeup.c:837:16
 1e04dee:    f1 6a             	r1 = b[r5 + 15] (u)			  ## power_wakeup.c:837:32
 1e04df0:    d1 6b             	r1 = b[r5 + 29] (u)			  ## power_wakeup.c:839:19
 1e04df2:    f9 61             	b[r0 + 31] = r1			  ## power_wakeup.c:839:17
 1e04df4:    e1 6b             	r1 = b[r5 + 30] (u)			  ## power_wakeup.c:841:19
 1e04df6:    11 f9 20 00       	b[r0 + 32] = r1			  ## power_wakeup.c:841:17
 1e04dfa:    50 fc 60 fc       	r0 = r5 + -928			  ## power_wakeup.c:843:19
 1e04dfe:    00 60             	r0 = b[r0 + 0] (u)			  ## power_wakeup.c:843:19
 1e04e00:    98 f3 cc 0f       	call 3153816 <local_irq_disable : 106d9c >			  ## power_wakeup.c:638:5
 1e04e04:    08 00             	csync			  ## power_wakeup.c:638:5
 1e04e06:    04 70             	r4 = 0
 1e04e08:    81 f6 00 67       	r1 = [r6+r7]			  ## power_wakeup.c:641:16
 1e04e0c:    02 22             	if (r1 == 0) goto 4 <.GJTIE429_0_0_+0x72 : 1e04e12 >
 1e04e0e:    00 05             	r0 = r4.b0 (u)			  ## power_wakeup.c:643:13
 1e04e10:    7b 15             	call -1290 <__hw_power_set_wakeup_IO : 1e04908 >			  ## power_wakeup.c:643:13
 1e04e12:    46 80             	r6 += 4			  ## power_wakeup.c:640:23
 1e04e14:    14 80             	r4 += 1			  ## power_wakeup.c:640:23
 1e04e16:    06 e3 f7 1f       	if (r6 != 48) goto -18 <.GJTIE429_0_0_+0x68 : 1e04e08 >			  ## power_wakeup.c:640:23
 1e04e1a:    06 70             	r6 = 0
 1e04e1c:    04 70             	r4 = 0
 1e04e1e:    c0 b9             	r0 = r4 + r7			  ## power_wakeup.c:648:16
 1e04e20:    c1 40             	r1 = [r0 + 48]			  ## power_wakeup.c:648:16
 1e04e22:    02 22             	if (r1 == 0) goto 4 <.GJTIE429_0_0_+0x88 : 1e04e28 >
 1e04e24:    80 05             	r0 = r6.b0 (u)			  ## power_wakeup.c:650:13
 1e04e26:    70 15             	call -1312 <__hw_power_set_wakeup_IO : 1e04908 >			  ## power_wakeup.c:650:13
 1e04e28:    44 80             	r4 += 4			  ## power_wakeup.c:647:22
 1e04e2a:    16 80             	r6 += 1			  ## power_wakeup.c:647:22
 1e04e2c:    c4 e0 f7 1f       	if (r4 != 12) goto -18 <.GJTIE429_0_0_+0x7E : 1e04e1e >			  ## power_wakeup.c:647:22
 1e04e30:    f0 7f             	r0 = 255			  ## power_wakeup.c:655:19
 1e04e32:    08 6b             	b[r5 + 16] = r0			  ## power_wakeup.c:655:19
 1e04e34:    18 6b             	b[r5 + 17] = r0			  ## power_wakeup.c:656:19
 1e04e36:    f8 6b             	b[r5 + 31] = r0			  ## power_wakeup.c:657:21
 1e04e38:    56 fc 20 00       	r6 = r5 + 32			  ## power_wakeup.c:657:21
 1e04e3c:    08 6c             	b[r6 + 0] = r0			  ## power_wakeup.c:658:21
 1e04e3e:    98 f3 ab 0f       	call 3153750 <local_irq_enable : 106d98 >			  ## power_wakeup.c:660:5
 1e04e42:    81 6a             	r1 = b[r5 + 8] (u)			  ## power_wakeup.c:133:45
 1e04e44:    c0 ff 66 1f e1 01 	r0 = 31530854 <update_target_end+0x1D36 : 1e11f66 >			  ## power_wakeup.c:133:5
 1e04e4a:    80 f3 ac 3f       	call 32600 <printf : 1e0cda6 >			  ## power_wakeup.c:133:5
 1e04e4e:    91 6a             	r1 = b[r5 + 9] (u)			  ## power_wakeup.c:134:45
 1e04e50:    c0 ff 82 1f e1 01 	r0 = 31530882 <update_target_end+0x1D52 : 1e11f82 >			  ## power_wakeup.c:134:5
 1e04e56:    80 f3 a6 3f       	call 32588 <printf : 1e0cda6 >			  ## power_wakeup.c:134:5
 1e04e5a:    a1 6a             	r1 = b[r5 + 10] (u)			  ## power_wakeup.c:135:45
 1e04e5c:    c0 ff 9e 1f e1 01 	r0 = 31530910 <update_target_end+0x1D6E : 1e11f9e >			  ## power_wakeup.c:135:5
 1e04e62:    80 f3 a0 3f       	call 32576 <printf : 1e0cda6 >			  ## power_wakeup.c:135:5
 1e04e66:    b1 6a             	r1 = b[r5 + 11] (u)			  ## power_wakeup.c:136:45
 1e04e68:    c0 ff ba 1f e1 01 	r0 = 31530938 <update_target_end+0x1D8A : 1e11fba >			  ## power_wakeup.c:136:5
 1e04e6e:    80 f3 9a 3f       	call 32564 <printf : 1e0cda6 >			  ## power_wakeup.c:136:5
 1e04e72:    c1 6a             	r1 = b[r5 + 12] (u)			  ## power_wakeup.c:137:45
 1e04e74:    c0 ff d6 1f e1 01 	r0 = 31530966 <update_target_end+0x1DA6 : 1e11fd6 >			  ## power_wakeup.c:137:5
 1e04e7a:    80 f3 94 3f       	call 32552 <printf : 1e0cda6 >			  ## power_wakeup.c:137:5
 1e04e7e:    d1 6a             	r1 = b[r5 + 13] (u)			  ## power_wakeup.c:138:45
 1e04e80:    c0 ff f2 1f e1 01 	r0 = 31530994 <update_target_end+0x1DC2 : 1e11ff2 >			  ## power_wakeup.c:138:5
 1e04e86:    80 f3 8e 3f       	call 32540 <printf : 1e0cda6 >			  ## power_wakeup.c:138:5
 1e04e8a:    e1 6a             	r1 = b[r5 + 14] (u)			  ## power_wakeup.c:139:45
 1e04e8c:    c0 ff 0e 20 e1 01 	r0 = 31531022 <update_target_end+0x1DDE : 1e1200e >			  ## power_wakeup.c:139:5
 1e04e92:    80 f3 88 3f       	call 32528 <printf : 1e0cda6 >			  ## power_wakeup.c:139:5
 1e04e96:    f1 6a             	r1 = b[r5 + 15] (u)			  ## power_wakeup.c:140:45
 1e04e98:    c0 ff 2a 20 e1 01 	r0 = 31531050 <update_target_end+0x1DFA : 1e1202a >			  ## power_wakeup.c:140:5
 1e04e9e:    80 f3 82 3f       	call 32516 <printf : 1e0cda6 >			  ## power_wakeup.c:140:5
 1e04ea2:    81 6b             	r1 = b[r5 + 24] (u)			  ## power_wakeup.c:142:45
 1e04ea4:    c0 ff 46 20 e1 01 	r0 = 31531078 <update_target_end+0x1E16 : 1e12046 >			  ## power_wakeup.c:142:5
 1e04eaa:    80 f3 7c 3f       	call 32504 <printf : 1e0cda6 >			  ## power_wakeup.c:142:5
 1e04eae:    91 6b             	r1 = b[r5 + 25] (u)			  ## power_wakeup.c:143:45
 1e04eb0:    c0 ff 62 20 e1 01 	r0 = 31531106 <update_target_end+0x1E32 : 1e12062 >			  ## power_wakeup.c:143:5
 1e04eb6:    80 f3 76 3f       	call 32492 <printf : 1e0cda6 >			  ## power_wakeup.c:143:5
 1e04eba:    a1 6b             	r1 = b[r5 + 26] (u)			  ## power_wakeup.c:144:45
 1e04ebc:    c0 ff 7e 20 e1 01 	r0 = 31531134 <update_target_end+0x1E4E : 1e1207e >			  ## power_wakeup.c:144:5
 1e04ec2:    80 f3 70 3f       	call 32480 <printf : 1e0cda6 >			  ## power_wakeup.c:144:5
 1e04ec6:    b1 6b             	r1 = b[r5 + 27] (u)			  ## power_wakeup.c:145:45
 1e04ec8:    c0 ff 9a 20 e1 01 	r0 = 31531162 <update_target_end+0x1E6A : 1e1209a >			  ## power_wakeup.c:145:5
 1e04ece:    80 f3 6a 3f       	call 32468 <printf : 1e0cda6 >			  ## power_wakeup.c:145:5
 1e04ed2:    d1 6b             	r1 = b[r5 + 29] (u)			  ## power_wakeup.c:146:45
 1e04ed4:    c0 ff b6 20 e1 01 	r0 = 31531190 <update_target_end+0x1E86 : 1e120b6 >			  ## power_wakeup.c:146:5
 1e04eda:    80 f3 64 3f       	call 32456 <printf : 1e0cda6 >			  ## power_wakeup.c:146:5
 1e04ede:    e1 6b             	r1 = b[r5 + 30] (u)			  ## power_wakeup.c:147:45
 1e04ee0:    c0 ff d2 20 e1 01 	r0 = 31531218 <update_target_end+0x1EA2 : 1e120d2 >			  ## power_wakeup.c:147:5
 1e04ee6:    80 f3 5e 3f       	call 32444 <printf : 1e0cda6 >			  ## power_wakeup.c:147:5
 1e04eea:    81 6d             	r1 = b[r6 + 24] (u)			  ## power_wakeup.c:148:45
 1e04eec:    c0 ff ee 20 e1 01 	r0 = 31531246 <update_target_end+0x1EBE : 1e120ee >			  ## power_wakeup.c:148:5
 1e04ef2:    80 f3 58 3f       	call 32432 <printf : 1e0cda6 >			  ## power_wakeup.c:148:5
 1e04ef6:    91 6d             	r1 = b[r6 + 25] (u)			  ## power_wakeup.c:149:45
 1e04ef8:    c0 ff 0a 21 e1 01 	r0 = 31531274 <update_target_end+0x1EDA : 1e1210a >			  ## power_wakeup.c:149:5
 1e04efe:    80 f3 52 3f       	call 32420 <printf : 1e0cda6 >			  ## power_wakeup.c:149:5
 1e04f02:    a1 6d             	r1 = b[r6 + 26] (u)			  ## power_wakeup.c:150:45
 1e04f04:    c0 ff 26 21 e1 01 	r0 = 31531302 <update_target_end+0x1EF6 : 1e12126 >			  ## power_wakeup.c:150:5
 1e04f0a:    80 f3 4c 3f       	call 32408 <printf : 1e0cda6 >			  ## power_wakeup.c:150:5
 1e04f0e:    c1 6b             	r1 = b[r5 + 28] (u)			  ## power_wakeup.c:152:45
 1e04f10:    c0 ff 42 21 e1 01 	r0 = 31531330 <update_target_end+0x1F12 : 1e12142 >			  ## power_wakeup.c:152:5
 1e04f16:    80 f3 46 3f       	call 32396 <printf : 1e0cda6 >			  ## power_wakeup.c:152:5
 1e04f1a:    01 f9 18 80       	r1 = b[r8 + 24] (u)			  ## power_wakeup.c:157:42
 1e04f1e:    c0 ff 5e 21 e1 01 	r0 = 31531358 <update_target_end+0x1F2E : 1e1215e >			  ## power_wakeup.c:157:5
 1e04f24:    80 f3 3f 3f       	call 32382 <printf : 1e0cda6 >			  ## power_wakeup.c:157:5
 1e04f28:    01 f9 19 80       	r1 = b[r8 + 25] (u)			  ## power_wakeup.c:158:42
 1e04f2c:    c0 ff 78 21 e1 01 	r0 = 31531384 <update_target_end+0x1F48 : 1e12178 >			  ## power_wakeup.c:158:5
 1e04f32:    80 f3 38 3f       	call 32368 <printf : 1e0cda6 >			  ## power_wakeup.c:158:5
 1e04f36:    01 f9 1a 80       	r1 = b[r8 + 26] (u)			  ## power_wakeup.c:159:42
 1e04f3a:    c0 ff 92 21 e1 01 	r0 = 31531410 <update_target_end+0x1F62 : 1e12192 >			  ## power_wakeup.c:159:5
 1e04f40:    80 f3 31 3f       	call 32354 <printf : 1e0cda6 >			  ## power_wakeup.c:159:5
 1e04f44:    01 f9 1b 80       	r1 = b[r8 + 27] (u)			  ## power_wakeup.c:160:42
 1e04f48:    c0 ff ac 21 e1 01 	r0 = 31531436 <update_target_end+0x1F7C : 1e121ac >			  ## power_wakeup.c:160:5
 1e04f4e:    80 f3 2a 3f       	call 32340 <printf : 1e0cda6 >			  ## power_wakeup.c:160:5
 1e04f52:    01 f9 1c 80       	r1 = b[r8 + 28] (u)			  ## power_wakeup.c:161:42
 1e04f56:    c0 ff c6 21 e1 01 	r0 = 31531462 <update_target_end+0x1F96 : 1e121c6 >			  ## power_wakeup.c:161:5
 1e04f5c:    80 f3 23 3f       	call 32326 <printf : 1e0cda6 >			  ## power_wakeup.c:161:5
 1e04f60:    01 f9 1d 80       	r1 = b[r8 + 29] (u)			  ## power_wakeup.c:162:42
 1e04f64:    c0 ff e0 21 e1 01 	r0 = 31531488 <update_target_end+0x1FB0 : 1e121e0 >			  ## power_wakeup.c:162:5
 1e04f6a:    80 f3 1c 3f       	call 32312 <printf : 1e0cda6 >			  ## power_wakeup.c:162:5
 1e04f6e:    01 f9 1e 80       	r1 = b[r8 + 30] (u)			  ## power_wakeup.c:163:42
 1e04f72:    c0 ff fa 21 e1 01 	r0 = 31531514 <update_target_end+0x1FCA : 1e121fa >			  ## power_wakeup.c:163:5
 1e04f78:    80 f3 15 3f       	call 32298 <printf : 1e0cda6 >			  ## power_wakeup.c:163:5
 1e04f7c:    01 f9 1f 80       	r1 = b[r8 + 31] (u)			  ## power_wakeup.c:164:42
 1e04f80:    c0 ff 14 22 e1 01 	r0 = 31531540 <update_target_end+0x1FE4 : 1e12214 >			  ## power_wakeup.c:164:5
 1e04f86:    80 f3 0e 3f       	call 32284 <printf : 1e0cda6 >			  ## power_wakeup.c:164:5
 1e04f8a:    54 fc 80 00       	r4 = r5 + 128			  ## power_wakeup.c:164:5
 1e04f8e:    01 68             	r1 = b[r4 + 0] (u)			  ## power_wakeup.c:165:42
 1e04f90:    c0 ff 2e 22 e1 01 	r0 = 31531566 <update_target_end+0x1FFE : 1e1222e >			  ## power_wakeup.c:165:5
 1e04f96:    80 f3 06 3f       	call 32268 <printf : 1e0cda6 >			  ## power_wakeup.c:165:5
 1e04f9a:    11 68             	r1 = b[r4 + 1] (u)			  ## power_wakeup.c:166:42
 1e04f9c:    c0 ff 48 22 e1 01 	r0 = 31531592 <update_target_end+0x2018 : 1e12248 >			  ## power_wakeup.c:166:5
 1e04fa2:    80 f3 00 3f       	call 32256 <printf : 1e0cda6 >			  ## power_wakeup.c:166:5
 1e04fa6:    21 68             	r1 = b[r4 + 2] (u)			  ## power_wakeup.c:167:42
 1e04fa8:    c0 ff 62 22 e1 01 	r0 = 31531618 <update_target_end+0x2032 : 1e12262 >			  ## power_wakeup.c:167:5
 1e04fae:    80 f3 fa 3e       	call 32244 <printf : 1e0cda6 >			  ## power_wakeup.c:167:5
 1e04fb2:    31 68             	r1 = b[r4 + 3] (u)			  ## power_wakeup.c:168:42
 1e04fb4:    c0 ff 7c 22 e1 01 	r0 = 31531644 <update_target_end+0x204C : 1e1227c >			  ## power_wakeup.c:168:5
 1e04fba:    80 f3 f4 3e       	call 32232 <printf : 1e0cda6 >			  ## power_wakeup.c:168:5
 1e04fbe:    05 84             	r5 += 64			  ## power_wakeup.c:168:5
 1e04fc0:    01 6a             	r1 = b[r5 + 0] (u)			  ## power_wakeup.c:170:41
 1e04fc2:    c0 ff 96 22 e1 01 	r0 = 31531670 <update_target_end+0x2066 : 1e12296 >			  ## power_wakeup.c:170:5
 1e04fc8:    80 f3 ed 3e       	call 32218 <printf : 1e0cda6 >			  ## power_wakeup.c:170:5
 1e04fcc:    11 6a             	r1 = b[r5 + 1] (u)			  ## power_wakeup.c:171:41
 1e04fce:    c0 ff af 22 e1 01 	r0 = 31531695 <update_target_end+0x207F : 1e122af >			  ## power_wakeup.c:171:5
 1e04fd4:    80 f3 e7 3e       	call 32206 <printf : 1e0cda6 >			  ## power_wakeup.c:171:5
 1e04fd8:    21 6a             	r1 = b[r5 + 2] (u)			  ## power_wakeup.c:172:41
 1e04fda:    c0 ff c8 22 e1 01 	r0 = 31531720 <update_target_end+0x2098 : 1e122c8 >			  ## power_wakeup.c:172:5
 1e04fe0:    80 f3 e1 3e       	call 32194 <printf : 1e0cda6 >			  ## power_wakeup.c:172:5
 1e04fe4:    40 fc 2e 07       	r0 = r4 + 1838			  ## power_wakeup.c:172:5
 1e04fe8:    01 60             	r1 = b[r0 + 0] (u)			  ## power_wakeup.c:666:5
 1e04fea:    91 b2             	r1 |= 32			  ## power_wakeup.c:666:5
 1e04fec:    09 60             	b[r0 + 0] = r1			  ## power_wakeup.c:666:5
 1e04fee:    00 70             	r0 = 0			  ## power_wakeup.c:852:15
 1e04ff0:    c8 6b             	b[r5 + 28] = r0			  ## power_wakeup.c:852:15
 1e04ff2:    88 68             	b[r4 + 8] = r0			  ## power_wakeup.c:853:18
 1e04ff4:    98 68             	b[r4 + 9] = r0			  ## power_wakeup.c:854:18
 1e04ff6:    a8 68             	b[r4 + 10] = r0			  ## power_wakeup.c:855:18
 1e04ff8:    b8 68             	b[r4 + 11] = r0			  ## power_wakeup.c:856:18
 1e04ffa:    c8 68             	b[r4 + 12] = r0			  ## power_wakeup.c:857:18
 1e04ffc:    59 01             	{pc, r9-r4} = [sp++]			  ## power_wakeup.c:858:1


aport_edge_wkup_set_callback:
 1e04ffe:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:968:0
 1e05004:    c1 ff 1e 36 e0 01 	r1 = 31471134 <aport_wakeup_callback : 1e0361e >			  ## power_wakeup.c:969:32
 1e0500a:    11 f6 c4 00       	[r0 + 196] = r1			  ## power_wakeup.c:969:32
 1e0500e:    20 00             	rts			  ## power_wakeup.c:970:1


port_edge_wkup_set_callback:
 1e05010:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:963:0
 1e05016:    c1 ff 98 36 e0 01 	r1 = 31471256 <port_wakeup_callback : 1e03698 >			  ## power_wakeup.c:964:31
 1e0501c:    11 f6 c0 00       	[r0 + 192] = r1			  ## power_wakeup.c:964:31
 1e05020:    20 00             	rts			  ## power_wakeup.c:965:1


adc_pmu_detect_en:
 1e05022:    c0 ff 94 18 1a 00 	r0 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:112:0
 1e05028:    01 60             	r1 = b[r0 + 0] (u)			  ## p33.c:113:5
 1e0502a:    11 b0             	r1 |= 1			  ## p33.c:113:5
 1e0502c:    09 60             	b[r0 + 0] = r1			  ## p33.c:113:5
 1e0502e:    10 70             	r0 = 1			  ## p33.c:114:5
 1e05030:    ff f3 1c d9       	goto -19912 <adc_pmu_ch_select : 1e0026c >			  ## p33.c:114:5


check_wvdd_pvdd_trim:
 1e05034:    77 01             	[--sp] = {rets, r7-r4}			  ## pmu_calibrate.c:304:0
 1e05036:    c4 ff 70 27 00 00 	r4 = 10096 <pmu_voltage : 2770 >			  ## pmu_calibrate.c:304:0
 1e0503c:    f1 7f             	r1 = 255			  ## pmu_calibrate.c:305:5
 1e0503e:    42 78             	r2 = 132			  ## pmu_calibrate.c:305:5
 1e05040:    40 08             	r0 = r4			  ## pmu_calibrate.c:305:5
 1e05042:    98 f3 55 0f       	call 3153578 <memset : 106ef0 >			  ## pmu_calibrate.c:305:5
 1e05046:    30 76             	r0 = 99			  ## pmu_calibrate.c:307:18
 1e05048:    42 78             	r2 = 132			  ## pmu_calibrate.c:307:18
 1e0504a:    41 08             	r1 = r4			  ## pmu_calibrate.c:307:18
 1e0504c:    80 f3 4f 4f       	call 40606 <syscfg_read : 1e0eeee >			  ## pmu_calibrate.c:307:18
 1e05050:    15 70             	r5 = 1
 1e05052:    10 e0 32 b0       	ifs (r0 < 1) goto 100 <check_wvdd_pvdd_trim+0x86 : 1e050ba >
 1e05056:    41 fc 80 00       	r1 = r4 + 128
 1e0505a:    12 62             	r2 = b[r1 + 1] (u)			  ## pmu_calibrate.c:314:26
 1e0505c:    00 ff ff 20 2c 00 	if (r2 == 255) goto 88 <check_wvdd_pvdd_trim+0x86 : 1e050ba >			  ## pmu_calibrate.c:314:26
 1e05062:    33 62             	r3 = b[r1 + 3] (u)			  ## pmu_calibrate.c:314:62
 1e05064:    00 ff ff 30 28 00 	if (r3 == 255) goto 80 <check_wvdd_pvdd_trim+0x86 : 1e050ba >			  ## pmu_calibrate.c:314:62
 1e0506a:    00 62             	r0 = b[r1 + 0] (u)			  ## pmu_calibrate.c:314:102
 1e0506c:    00 ff ff 00 24 00 	if (r0 == 255) goto 72 <check_wvdd_pvdd_trim+0x86 : 1e050ba >
 1e05072:    21 62             	r1 = b[r1 + 2] (u)			  ## pmu_calibrate.c:314:138
 1e05074:    00 ff ff 10 20 00 	if (r1 == 255) goto 64 <check_wvdd_pvdd_trim+0x86 : 1e050ba >			  ## pmu_calibrate.c:314:138
 1e0507a:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## power_hw.c:1473:12
 1e05080:    06 f6 bc 50       	r6 = [r5 + 188]			  ## power_hw.c:1473:12
 1e05084:    c7 ff 00 08 00 01 	r7 = 16779264 <uECC_vli_cmp_unsafe+0xEF9804 : 1000800 >			  ## pmu_calibrate.c:320:47
 1e0508a:    05 70             	r5 = 0			  ## pmu_calibrate.c:320:47
 1e0508c:    76 f0 15 00       	if ((r6 & r7) == 0) goto 42 <check_wvdd_pvdd_trim+0x86 : 1e050ba >			  ## pmu_calibrate.c:320:47
 1e05090:    16 96             	r6 = r3 + 1			  ## pmu_calibrate.c:322:45
 1e05092:    e6 e0 05 80       	if (r6 > 14) goto 10 <check_wvdd_pvdd_trim+0x6C : 1e050a0 >
 1e05096:    a2 b6             	r2 = r3 - r2			  ## pmu_calibrate.c:323:48
 1e05098:    12 e0 02 c0       	ifs (r2 > 1) goto 4 <check_wvdd_pvdd_trim+0x6C : 1e050a0 >			  ## pmu_calibrate.c:323:48
 1e0509c:    16 f9 83 40       	b[r4 + 131] = r6			  ## pmu_calibrate.c:324:47
 1e050a0:    12 92             	r2 = r1 + 1			  ## pmu_calibrate.c:328:45
 1e050a2:    e2 e0 05 80       	if (r2 > 14) goto 10 <check_wvdd_pvdd_trim+0x7C : 1e050b0 >			  ## pmu_calibrate.c:328:45
 1e050a6:    20 b2             	r0 = r1 - r0			  ## pmu_calibrate.c:329:48
 1e050a8:    10 e0 02 c0       	ifs (r0 > 1) goto 4 <check_wvdd_pvdd_trim+0x7C : 1e050b0 >			  ## pmu_calibrate.c:329:48
 1e050ac:    12 f9 82 40       	b[r4 + 130] = r2			  ## pmu_calibrate.c:330:47
 1e050b0:    30 76             	r0 = 99			  ## pmu_calibrate.c:334:22
 1e050b2:    42 78             	r2 = 132			  ## pmu_calibrate.c:334:22
 1e050b4:    41 08             	r1 = r4			  ## pmu_calibrate.c:334:22
 1e050b6:    80 f3 bd 4e       	call 40314 <syscfg_write : 1e0ee34 >			  ## pmu_calibrate.c:334:22
 1e050ba:    50 08             	r0 = r5			  ## pmu_calibrate.c:347:1
 1e050bc:    57 01             	{pc, r7-r4} = [sp++]			  ## pmu_calibrate.c:347:1


adc_wait_pnd:
 1e050be:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:349:0
 1e050c4:    01 40             	r1 = [r0 + 0]			  ## adc_api.c:350:22
 1e050c6:    51 04             	r1 = r1.b0 (s)			  ## adc_api.c:350:12
 1e050c8:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <adc_wait_pnd+0x6 : 1e050c4 >			  ## adc_api.c:350:5
 1e050cc:    11 40             	r1 = [r0 + 4]			  ## adc_api.c:351:27
 1e050ce:    00 00             	nop			  ## adc_api.c:352:5
 1e050d0:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:353:17
 1e050d4:    60 04             	r0 = r1.l (u)			  ## adc_api.c:354:5
 1e050d6:    20 00             	rts			  ## adc_api.c:354:5


get_vdd_voltage:
 1e050d8:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:410:0
 1e050da:    04 08             	r4 = r0			  ## adc_api.c:410:0
 1e050dc:    d0 70             	r0 = 13			  ## adc_api.c:414:5
 1e050de:    bf f3 de d8       	call -20036 <adc_sample : 1e0029e >			  ## adc_api.c:414:5
 1e050e2:    05 70             	r5 = 0			  ## adc_api.c:414:5
 1e050e4:    a2 70             	r2 = 10
 1e050e6:    03 18             	goto 6 <get_vdd_voltage+0x16 : 1e050ee >
 1e050e8:    ea 17             	call -44 <adc_wait_pnd : 1e050be >			  ## adc_api.c:416:22
 1e050ea:    05 09             	r5 += r0			  ## adc_api.c:416:19
 1e050ec:    f2 8f             	r2 += -1			  ## adc_api.c:415:5
 1e050ee:    fc 35             	if (r2 != 0) goto -8 <get_vdd_voltage+0x10 : 1e050e8 >			  ## adc_api.c:415:5
 1e050f0:    40 08             	r0 = r4			  ## adc_api.c:419:5
 1e050f2:    bf f3 d4 d8       	call -20056 <adc_sample : 1e0029e >			  ## adc_api.c:419:5
 1e050f6:    02 70             	r2 = 0			  ## adc_api.c:419:5
 1e050f8:    a3 70             	r3 = 10
 1e050fa:    03 18             	goto 6 <get_vdd_voltage+0x2A : 1e05102 >
 1e050fc:    e0 17             	call -64 <adc_wait_pnd : 1e050be >			  ## adc_api.c:421:23
 1e050fe:    02 09             	r2 += r0			  ## adc_api.c:421:20
 1e05100:    f3 8f             	r3 += -1			  ## adc_api.c:420:5
 1e05102:    fc 37             	if (r3 != 0) goto -8 <get_vdd_voltage+0x24 : 1e050fc >
 1e05104:    a1 70             	r1 = 10			  ## adc_api.c:424:29
 1e05106:    c0 fe 10 05       	r0 = r5 / r1 (u)			  ## adc_api.c:424:29
 1e0510a:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## adc_api.c:425:30
 1e0510e:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:427:12
 1e05110:    ff f3 81 d9       	goto -19710 <adc_value_to_voltage : 1e00416 >			  ## adc_api.c:427:12


get_wvdd_trim_level:
 1e05114:    c0 ff 70 27 00 00 	r0 = 10096 <pmu_voltage : 2770 >			  ## pmu_calibrate.c:283:0
 1e0511a:    00 f9 83 00       	r0 = b[r0 + 131] (u)			  ## pmu_calibrate.c:284:5
 1e0511e:    20 00             	rts			  ## pmu_calibrate.c:284:5


get_pvdd_trim_level:
 1e05120:    c0 ff 70 27 00 00 	r0 = 10096 <pmu_voltage : 2770 >			  ## pmu_calibrate.c:288:0
 1e05126:    00 f9 82 00       	r0 = b[r0 + 130] (u)			  ## pmu_calibrate.c:289:5
 1e0512a:    20 00             	rts			  ## pmu_calibrate.c:289:5


update_wvdd_pvdd_trim_level:
 1e0512c:    c3 ff 70 27 00 00 	r3 = 10096 <pmu_voltage : 2770 >			  ## pmu_calibrate.c:293:0
 1e05132:    32 fc 80 00       	r2 = r3 + 128			  ## pmu_calibrate.c:295:28
 1e05136:    38 64             	b[r2 + 3] = r0			  ## pmu_calibrate.c:294:57
 1e05138:    18 64             	b[r2 + 1] = r0			  ## pmu_calibrate.c:294:28
 1e0513a:    29 64             	b[r2 + 2] = r1			  ## pmu_calibrate.c:295:57
 1e0513c:    09 64             	b[r2 + 0] = r1			  ## pmu_calibrate.c:295:28
 1e0513e:    30 76             	r0 = 99			  ## pmu_calibrate.c:297:18
 1e05140:    42 78             	r2 = 132			  ## pmu_calibrate.c:297:18
 1e05142:    31 08             	r1 = r3			  ## pmu_calibrate.c:297:18
 1e05144:    c0 f3 76 4e       	goto 40172 <syscfg_write : 1e0ee34 >			  ## pmu_calibrate.c:297:18


adc_add_sample_ch:
 1e05148:    78 01             	[--sp] = {rets, r8-r4}			  ## adc_api.c:51:0
 1e0514a:    fe 0b             	sp += -4			  ## adc_api.c:51:0
 1e0514c:    04 08             	r4 = r0			  ## adc_api.c:51:0
 1e0514e:    c6 ff 94 28 00 00 	r6 = 10388 <adc_queue : 2894 >			  ## adc_api.c:51:0
 1e05154:    05 70             	r5 = 0			  ## adc_api.c:51:0
 1e05156:    c8 ff 30 02 e1 01 	r8 = 31523376 <update_target_end : 1e10230 >			  ## adc_api.c:51:0
 1e0515c:    c7 ff 3f 02 e1 01 	r7 = 31523391 <update_target_end+0xF : 1e1023f >			  ## adc_api.c:51:0
 1e05162:    0f 18             	goto 30 <adc_add_sample_ch+0x3A : 1e05182 >			  ## adc_api.c:51:0
 1e05164:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:54:65
 1e05166:    08 02             	[sp] = r0			  ## adc_api.c:54:9
 1e05168:    80 08             	r0 = r8			  ## adc_api.c:54:9
 1e0516a:    71 08             	r1 = r7			  ## adc_api.c:54:9
 1e0516c:    52 08             	r2 = r5			  ## adc_api.c:54:9
 1e0516e:    43 08             	r3 = r4			  ## adc_api.c:54:9
 1e05170:    80 f3 19 3e       	call 31794 <printf : 1e0cda6 >			  ## adc_api.c:54:9
 1e05174:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:55:26
 1e05176:    40 f2 13 00       	if (r0 == r4) goto 38 <adc_add_sample_ch+0x58 : 1e051a0 >			  ## adc_api.c:55:26
 1e0517a:    f0 ef 05 00       	if (r0 == -1) goto 10 <adc_add_sample_ch+0x40 : 1e05188 >
 1e0517e:    06 81             	r6 += 16			  ## adc_api.c:53:5
 1e05180:    15 80             	r5 += 1			  ## adc_api.c:53:34
 1e05182:    95 e0 ef 9f       	if (r5 <= 9) goto -34 <adc_add_sample_ch+0x1C : 1e05164 >
 1e05186:    0c 18             	goto 24 <adc_add_sample_ch+0x58 : 1e051a0 >
 1e05188:    0c 4c             	[r6 + 0] = r4			  ## adc_api.c:58:29
 1e0518a:    10 70             	r0 = 1			  ## adc_api.c:59:32
 1e0518c:    28 5c             	h[r6 + 4] = r0			  ## adc_api.c:59:32
 1e0518e:    00 70             	r0 = 0			  ## adc_api.c:59:32
 1e05190:    28 4c             	[r6 + 8] = r0			  ## adc_api.c:60:34
 1e05192:    38 4c             	[r6 + 12] = r0			  ## adc_api.c:61:40
 1e05194:    c0 ff 51 02 e1 01 	r0 = 31523409 <update_target_end+0x21 : 1e10251 >			  ## adc_api.c:62:13
 1e0519a:    41 08             	r1 = r4			  ## adc_api.c:62:13
 1e0519c:    80 f3 03 3e       	call 31750 <printf : 1e0cda6 >			  ## adc_api.c:62:13
 1e051a0:    02 0a             	sp += 4
 1e051a2:    58 01             	{pc, r8-r4} = [sp++]


adc_set_sample_freq:
 1e051a4:    c1 ff a0 28 00 00 	r1 = 10400 <adc_queue+0xC : 28a0 >			  ## adc_api.c:70:0
 1e051aa:    02 70             	r2 = 0			  ## adc_api.c:70:0
 1e051ac:    06 18             	goto 12 <adc_set_sample_freq+0x16 : 1e051ba >			  ## adc_api.c:70:0
 1e051ae:    03 f6 f4 1f       	r3 = [r1 + -12]			  ## adc_api.c:73:26
 1e051b2:    03 f2 05 00       	if (r3 == r0) goto 10 <adc_set_sample_freq+0x1C : 1e051c0 >			  ## adc_api.c:73:26
 1e051b6:    01 81             	r1 += 16			  ## adc_api.c:72:5
 1e051b8:    12 80             	r2 += 1			  ## adc_api.c:72:34
 1e051ba:    92 e0 f8 9f       	if (r2 <= 9) goto -16 <adc_set_sample_freq+0xA : 1e051ae >
 1e051be:    20 00             	rts
 1e051c0:    c0 f4 64 19       	[r1 + 0] = 100			  ## adc_api.c:74:40
 1e051c4:    c0 ff b0 08 00 00 	r0 = 2224 <jiffies : 8b0 >			  ## adc_api.c:75:59
 1e051ca:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:75:59
 1e051cc:    40 86             	r0 += 100			  ## adc_api.c:75:57
 1e051ce:    10 f6 fc 1f       	[r1 + -4] = r0			  ## adc_api.c:75:34
 1e051d2:    20 00             	rts


board_init:
 1e051d4:    7a 01             	[--sp] = {rets, r10-r4}			  ## board_ac632n_demo.c:314:0
 1e051d6:    b2 0b             	sp += -156			  ## board_ac632n_demo.c:314:0
 1e051d8:    c2 ff 97 1c e1 01 	r2 = 31530135 <update_target_end+0x1A67 : 1e11c97 >			  ## board_ac632n_demo.c:792:5
 1e051de:    c3 ff b8 1c e1 01 	r3 = 31530168 <update_target_end+0x1A88 : 1e11cb8 >			  ## board_ac632n_demo.c:792:5
 1e051e4:    20 70             	r0 = 2			  ## board_ac632n_demo.c:792:5
 1e051e6:    80 f3 0b 3e       	call 31766 <log_print : 1e0ce00 >			  ## board_ac632n_demo.c:792:5
 1e051ea:    bf f3 59 fa       	call -2894 <power_init : 1e046a0 >			  ## board_ac632n_demo.c:794:5
 1e051ee:    bf f3 74 fb       	call -2328 <power_set_callback : 1e048da >			  ## board_ac632n_demo.c:801:5
 1e051f2:    bf f3 82 fb       	call -2300 <power_keep_dacvdd_en : 1e048fa >			  ## board_ac632n_demo.c:805:5
 1e051f6:    62 15             	call -1340 <power_wakeup_init : 1e04cbc >			  ## board_ac632n_demo.c:807:5
 1e051f8:    02 17             	call -508 <aport_edge_wkup_set_callback : 1e04ffe >			  ## board_ac632n_demo.c:809:5
 1e051fa:    0a 17             	call -492 <port_edge_wkup_set_callback : 1e05010 >			  ## board_ac632n_demo.c:810:5
 1e051fc:    12 17             	call -476 <adc_pmu_detect_en : 1e05022 >			  ## adc_api.c:606:5
 1e051fe:    1a 17             	call -460 <check_wvdd_pvdd_trim : 1e05034 >			  ## adc_api.c:610:15
 1e05200:    0a 08             	r10 = r0			  ## adc_api.c:610:15
 1e05202:    2e 20             	if (r0 == 0) goto 92 <board_init+0x8C : 1e05260 >			  ## adc_api.c:435:9
 1e05204:    c7 ff 91 18 1a 00 	r7 = 1710225 <uECC_vli_cmp_unsafe+0x9A895 : 1a1891 >
 1e0520a:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:436:9
 1e0520c:    20 fd f0 09       	r0 = r0 & 240			  ## adc_api.c:436:9
 1e05210:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:436:9
 1e05212:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:437:9
 1e05214:    10 b2             	r0 |= 16			  ## adc_api.c:437:9
 1e05216:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:437:9
 1e05218:    00 6e             	r0 = b[r7 + 0] (u)			  ## adc_api.c:438:9
 1e0521a:    90 b1             	r0 |= 8			  ## adc_api.c:438:9
 1e0521c:    08 6e             	b[r7 + 0] = r0			  ## adc_api.c:438:9
 1e0521e:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## adc_api.c:439:9
 1e05222:    8f f3 16 f8       	call 2093100 <delay : 4252 >			  ## adc_api.c:439:9
 1e05226:    06 70             	r6 = 0			  ## adc_api.c:439:9
 1e05228:    c5 ff 0d 00 0e 00 	r5 = 917517 <text_size+0xC3319 : e000d >			  ## adc_api.c:439:9
 1e0522e:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:441:13
 1e05230:    20 fd f0 09       	r0 = r0 & 240			  ## adc_api.c:441:13
 1e05234:    50 bc             	r0 |= r6			  ## adc_api.c:441:13
 1e05236:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:441:13
 1e05238:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## adc_api.c:442:13
 1e0523c:    8f f3 09 f8       	call 2093074 <delay : 4252 >			  ## adc_api.c:442:13
 1e05240:    50 08             	r0 = r5			  ## adc_api.c:443:17
 1e05242:    4a 17             	call -364 <get_vdd_voltage : 1e050d8 >			  ## adc_api.c:443:17
 1e05244:    08 ff 8a 02 04 00 	if (r0 > 650) goto 8 <board_init+0x7E : 1e05252 >			  ## adc_api.c:443:17
 1e0524a:    16 80             	r6 += 1			  ## adc_api.c:446:22
 1e0524c:    80 05             	r0 = r6.b0 (u)			  ## adc_api.c:446:22
 1e0524e:    80 e0 ee 3f       	if (r0 < 8) goto -36 <board_init+0x5A : 1e0522e >			  ## adc_api.c:446:22
 1e05252:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:448:9
 1e05254:    70 b2             	r0 &= 4294967279			  ## adc_api.c:448:9
 1e05256:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:448:9
 1e05258:    00 6e             	r0 = b[r7 + 0] (u)			  ## adc_api.c:449:9
 1e0525a:    f0 b1             	r0 &= 4294967287			  ## adc_api.c:449:9
 1e0525c:    08 6e             	b[r7 + 0] = r0			  ## adc_api.c:449:9
 1e0525e:    02 18             	goto 4 <board_init+0x90 : 1e05264 >			  ## adc_api.c:449:9
 1e05260:    59 17             	call -334 <get_wvdd_trim_level : 1e05114 >			  ## adc_api.c:453:20
 1e05262:    06 08             	r6 = r0			  ## adc_api.c:453:20
 1e05264:    88 05             	r8 = r6.b0 (u)			  ## adc_api.c:455:46
 1e05266:    c0 ff 9a 02 e1 01 	r0 = 31523482 <update_target_end+0x6A : 1e1029a >			  ## adc_api.c:455:5
 1e0526c:    a1 08             	r1 = r10			  ## adc_api.c:455:5
 1e0526e:    82 08             	r2 = r8			  ## adc_api.c:455:5
 1e05270:    80 f3 99 3d       	call 31538 <printf : 1e0cda6 >			  ## adc_api.c:455:5
 1e05274:    c0 ff c0 0f 1a 00 	r0 = 1707968 <uECC_vli_cmp_unsafe+0x99FC4 : 1a0fc0 >			  ## adc_api.c:458:15
 1e0527a:    0e 60             	b[r0 + 0] = r6			  ## adc_api.c:458:15
 1e0527c:    07 fc 83 08       	r7 = r0 + 2179
 1e05280:    0a e0 1a 00       	if (r10 == 0) goto 52 <board_init+0xE4 : 1e052b8 >			  ## adc_api.c:466:9
 1e05284:    f5 70             	r5 = 15
 1e05286:    09 70             	r9 = 0
 1e05288:    04 7f             	r4 = 240
 1e0528a:    c6 ff 0d 00 08 00 	r6 = 524301 <text_size+0x63319 : 8000d >
 1e05290:    03 70             	r3 = 0
 1e05292:    10 18             	goto 32 <board_init+0xE0 : 1e052b4 >
 1e05294:    10 6e             	r0 = b[r7 + 1] (u)			  ## adc_api.c:468:13
 1e05296:    e0 fd 50 04       	r0 = r4 | r5			  ## adc_api.c:468:13
 1e0529a:    18 6e             	b[r7 + 1] = r0			  ## adc_api.c:468:13
 1e0529c:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## adc_api.c:469:13
 1e052a0:    8f f3 d7 f7       	call 2092974 <delay : 4252 >			  ## adc_api.c:469:13
 1e052a4:    60 08             	r0 = r6			  ## adc_api.c:470:17
 1e052a6:    18 17             	call -464 <get_vdd_voltage : 1e050d8 >			  ## adc_api.c:470:17
 1e052a8:    03 08             	r3 = r0			  ## adc_api.c:470:17
 1e052aa:    03 ff 1a 34 08 00 	if (r3 < 1050) goto 16 <board_init+0xEC : 1e052c0 >
 1e052b0:    04 8f             	r4 += -16			  ## adc_api.c:467:9
 1e052b2:    f5 8f             	r5 += -1			  ## adc_api.c:467:24
 1e052b4:    ef 39             	if (r4 != 0) goto -34 <board_init+0xC0 : 1e05294 >
 1e052b6:    05 18             	goto 10 <board_init+0xEE : 1e052c2 >
 1e052b8:    33 17             	call -410 <get_pvdd_trim_level : 1e05120 >			  ## adc_api.c:481:15
 1e052ba:    06 08             	r6 = r0			  ## adc_api.c:481:15
 1e052bc:    03 70             	r3 = 0
 1e052be:    08 18             	goto 16 <board_init+0xFC : 1e052d0 >
 1e052c0:    59 08             	r9 = r5
 1e052c2:    10 70             	r0 = 1			  ## adc_api.c:475:15
 1e052c4:    03 ff e8 33 01 00 	if (r3 < 1000) goto 2 <board_init+0xF8 : 1e052cc >			  ## adc_api.c:475:15
 1e052ca:    00 70             	r0 = 0			  ## adc_api.c:475:15
 1e052cc:    80 fb 90 60       	r6 = r0 + r9			  ## adc_api.c:475:13
 1e052d0:    10 6e             	r0 = b[r7 + 1] (u)			  ## adc_api.c:484:5
 1e052d2:    30 c1             	r0 = r6 << 4			  ## adc_api.c:484:5
 1e052d4:    50 bc             	r0 |= r6			  ## adc_api.c:484:5
 1e052d6:    18 6e             	b[r7 + 1] = r0			  ## adc_api.c:484:5
 1e052d8:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## adc_api.c:485:5
 1e052dc:    8f f3 b9 f7       	call 2092914 <delay : 4252 >			  ## adc_api.c:485:5
 1e052e0:    00 6e             	r0 = b[r7 + 0] (u)			  ## adc_api.c:486:5
 1e052e2:    61 fc fa ff       	r1 = r6 + -6			  ## adc_api.c:486:5
 1e052e6:    00 fd 70 19       	r0 = r1 | 112			  ## adc_api.c:486:5
 1e052ea:    08 6e             	b[r7 + 0] = r0			  ## adc_api.c:486:5
 1e052ec:    c0 ff b2 02 e1 01 	r0 = 31523506 <update_target_end+0x82 : 1e102b2 >			  ## adc_api.c:488:5
 1e052f2:    09 02             	[sp] = r1			  ## adc_api.c:488:5
 1e052f4:    a1 08             	r1 = r10			  ## adc_api.c:488:5
 1e052f6:    62 08             	r2 = r6			  ## adc_api.c:488:5
 1e052f8:    80 f3 55 3d       	call 31402 <printf : 1e0cda6 >			  ## adc_api.c:488:5
 1e052fc:    0a e0 03 00       	if (r10 == 0) goto 6 <board_init+0x132 : 1e05306 >
 1e05300:    81 05             	r1 = r6.b0 (u)			  ## adc_api.c:615:9
 1e05302:    80 08             	r0 = r8			  ## adc_api.c:615:9
 1e05304:    13 17             	call -474 <update_wvdd_pvdd_trim_level : 1e0512c >			  ## adc_api.c:615:9
 1e05306:    c0 ff 94 28 00 00 	r0 = 10388 <adc_queue : 2894 >			  ## adc_api.c:359:5
 1e0530c:    f1 7f             	r1 = 255			  ## adc_api.c:359:5
 1e0530e:    02 7b             	r2 = 176			  ## adc_api.c:359:5
 1e05310:    98 f3 ee 0d       	call 3152860 <memset : 106ef0 >			  ## adc_api.c:359:5
 1e05314:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## adc_api.c:359:5
 1e0531a:    85 fc b8 01       	r5 = r8 + 440			  ## adc_api.c:360:5
 1e0531e:    01 70             	r1 = 0			  ## adc_api.c:360:5
 1e05320:    42 71             	r2 = 20			  ## adc_api.c:360:5
 1e05322:    06 70             	r6 = 0			  ## adc_api.c:360:5
 1e05324:    50 08             	r0 = r5			  ## adc_api.c:360:5
 1e05326:    98 f3 e3 0d       	call 3152838 <memset : 106ef0 >			  ## adc_api.c:360:5
 1e0532a:    84 fc a4 01       	r4 = r8 + 420			  ## adc_api.c:361:5
 1e0532e:    01 70             	r1 = 0			  ## adc_api.c:361:5
 1e05330:    42 71             	r2 = 20			  ## adc_api.c:361:5
 1e05332:    40 08             	r0 = r4			  ## adc_api.c:361:5
 1e05334:    98 f3 dc 0d       	call 3152824 <memset : 106ef0 >			  ## adc_api.c:361:5
 1e05338:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:363:17
 1e0533e:    0e 40             	[r0 + 0] = r6			  ## adc_api.c:363:17
 1e05340:    c6 ff 0d 00 05 00 	r6 = 327693 <text_size+0x33319 : 5000d >			  ## adc_api.c:365:5
 1e05346:    60 08             	r0 = r6			  ## adc_api.c:365:5
 1e05348:    ff 16             	call -514 <adc_add_sample_ch : 1e05148 >			  ## adc_api.c:365:5
 1e0534a:    60 08             	r0 = r6			  ## adc_api.c:366:5
 1e0534c:    2b 17             	call -426 <adc_set_sample_freq : 1e051a4 >			  ## adc_api.c:366:5
 1e0534e:    d0 70             	r0 = 13			  ## adc_api.c:368:5
 1e05350:    fb 16             	call -522 <adc_add_sample_ch : 1e05148 >			  ## adc_api.c:368:5
 1e05352:    d0 70             	r0 = 13			  ## adc_api.c:369:5
 1e05354:    27 17             	call -434 <adc_set_sample_freq : 1e051a4 >			  ## adc_api.c:369:5
 1e05356:    d0 70             	r0 = 13			  ## adc_api.c:371:5
 1e05358:    bf f3 a1 d7       	call -20670 <adc_sample : 1e0029e >			  ## adc_api.c:371:5
 1e0535c:    93 70             	r3 = 9
 1e0535e:    06 18             	goto 12 <board_init+0x198 : 1e0536c >
 1e05360:    ae 16             	call -676 <adc_wait_pnd : 1e050be >			  ## adc_api.c:374:41
 1e05362:    01 08             	r1 = r0			  ## adc_api.c:374:41
 1e05364:    50 08             	r0 = r5			  ## adc_api.c:374:9
 1e05366:    bf f3 77 d7       	call -20754 <adc_value_push : 1e00258 >			  ## adc_api.c:374:9
 1e0536a:    f3 8f             	r3 += -1			  ## adc_api.c:373:5
 1e0536c:    f9 37             	if (r3 != 0) goto -14 <board_init+0x18C : 1e05360 >			  ## adc_api.c:373:5
 1e0536e:    50 08             	r0 = r5			  ## adc_api.c:377:36
 1e05370:    bf f3 26 d8       	call -20404 <adc_value_avg : 1e003c0 >			  ## adc_api.c:377:36
 1e05374:    01 08             	r1 = r0			  ## adc_api.c:377:36
 1e05376:    c0 ff 63 02 e1 01 	r0 = 31523427 <update_target_end+0x33 : 1e10263 >			  ## adc_api.c:377:5
 1e0537c:    80 f3 13 3d       	call 31270 <printf : 1e0cda6 >			  ## adc_api.c:377:5
 1e05380:    60 08             	r0 = r6			  ## adc_api.c:379:5
 1e05382:    bf f3 8c d7       	call -20712 <adc_sample : 1e0029e >			  ## adc_api.c:379:5
 1e05386:    93 70             	r3 = 9
 1e05388:    06 18             	goto 12 <board_init+0x1C2 : 1e05396 >
 1e0538a:    99 16             	call -718 <adc_wait_pnd : 1e050be >			  ## adc_api.c:381:42
 1e0538c:    01 08             	r1 = r0			  ## adc_api.c:381:42
 1e0538e:    40 08             	r0 = r4			  ## adc_api.c:381:9
 1e05390:    bf f3 62 d7       	call -20796 <adc_value_push : 1e00258 >			  ## adc_api.c:381:9
 1e05394:    f3 8f             	r3 += -1			  ## adc_api.c:380:5
 1e05396:    f9 37             	if (r3 != 0) goto -14 <board_init+0x1B6 : 1e0538a >
 1e05398:    40 08             	r0 = r4			  ## adc_api.c:384:37
 1e0539a:    bf f3 11 d8       	call -20446 <adc_value_avg : 1e003c0 >			  ## adc_api.c:384:37
 1e0539e:    01 08             	r1 = r0			  ## adc_api.c:384:37
 1e053a0:    c0 ff 77 02 e1 01 	r0 = 31523447 <update_target_end+0x47 : 1e10277 >			  ## adc_api.c:384:5
 1e053a6:    80 f3 fe 3c       	call 31228 <printf : 1e0cda6 >			  ## adc_api.c:384:5
 1e053aa:    60 08             	r0 = r6			  ## adc_api.c:385:30
 1e053ac:    bf f3 48 d8       	call -20336 <adc_get_voltage : 1e00440 >			  ## adc_api.c:385:30
 1e053b0:    81 c0             	r1 = r0 << 2			  ## adc_api.c:385:58
 1e053b2:    c0 ff 8c 02 e1 01 	r0 = 31523468 <update_target_end+0x5C : 1e1028c >			  ## adc_api.c:385:5
 1e053b8:    80 f3 f5 3c       	call 31210 <printf : 1e0cda6 >			  ## adc_api.c:385:5
 1e053bc:    c2 ff 96 03 e0 01 	r2 = 31458198 <adc_isr : 1e00396 >			  ## adc_api.c:396:5
 1e053c2:    70 71             	r0 = 23			  ## adc_api.c:396:5
 1e053c4:    01 70             	r1 = 0			  ## adc_api.c:396:5
 1e053c6:    80 f3 e0 42       	call 34240 <request_irq : 1e0d98a >			  ## adc_api.c:396:5
 1e053ca:    c1 ff da 02 e0 01 	r1 = 31458010 <adc_scan : 1e002da >			  ## adc_api.c:398:5
 1e053d0:    00 70             	r0 = 0			  ## adc_api.c:398:5
 1e053d2:    a2 70             	r2 = 10			  ## adc_api.c:398:5
 1e053d4:    03 70             	r3 = 0			  ## adc_api.c:398:5
 1e053d6:    80 f3 36 37       	call 28268 <usr_timer_add : 1e0c246 >			  ## adc_api.c:398:5
 1e053da:    c4 a1             	r4 = sp + 28
 1e053dc:    01 70             	r1 = 0			  ## user_cfg.c:174:8
 1e053de:    02 78             	r2 = 128			  ## user_cfg.c:174:8
 1e053e0:    40 08             	r0 = r4			  ## user_cfg.c:174:8
 1e053e2:    98 f3 85 0d       	call 3152650 <memset : 106ef0 >			  ## user_cfg.c:174:8
 1e053e6:    01 70             	r1 = 0			  ## user_cfg.c:177:5
 1e053e8:    02 78             	r2 = 128			  ## user_cfg.c:177:5
 1e053ea:    40 08             	r0 = r4			  ## user_cfg.c:177:5
 1e053ec:    98 f3 80 0d       	call 3152640 <memset : 106ef0 >			  ## user_cfg.c:177:5
 1e053f0:    50 76             	r0 = 101			  ## user_cfg.c:190:11
 1e053f2:    02 72             	r2 = 32			  ## user_cfg.c:190:11
 1e053f4:    41 08             	r1 = r4			  ## user_cfg.c:190:11
 1e053f6:    80 f3 7a 4d       	call 39668 <syscfg_read : 1e0eeee >			  ## user_cfg.c:190:11
 1e053fa:    04 08             	r4 = r0			  ## user_cfg.c:190:11
 1e053fc:    c6 ff c0 08 00 00 	r6 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >
 1e05402:    f4 ef 12 d0       	ifs (r4 <= -1) goto 36 <board_init+0x256 : 1e0542a >
 1e05406:    65 fc 4d 00       	r5 = r6 + 77			  ## user_cfg.c:194:9
 1e0540a:    01 70             	r1 = 0			  ## user_cfg.c:194:9
 1e0540c:    02 72             	r2 = 32			  ## user_cfg.c:194:9
 1e0540e:    07 70             	r7 = 0			  ## user_cfg.c:194:9
 1e05410:    50 08             	r0 = r5			  ## user_cfg.c:194:9
 1e05412:    98 f3 6d 0d       	call 3152602 <memset : 106ef0 >			  ## user_cfg.c:194:9
 1e05416:    c1 a1             	r1 = sp + 28			  ## user_cfg.c:194:9
 1e05418:    04 e2 0e b0       	ifs (r4 < 32) goto 28 <board_init+0x264 : 1e05438 >			  ## user_cfg.c:193:16
 1e0541c:    02 72             	r2 = 32			  ## user_cfg.c:195:9
 1e0541e:    50 08             	r0 = r5			  ## user_cfg.c:195:9
 1e05420:    98 f3 60 0d       	call 3152576 <memcpy : 106ee4 >			  ## user_cfg.c:195:9
 1e05424:    17 f9 6c 60       	b[r6 + 108] = r7			  ## user_cfg.c:196:45
 1e05428:    0b 18             	goto 22 <board_init+0x26C : 1e05440 >			  ## user_cfg.c:196:45
 1e0542a:    c2 ff e0 1a e1 01 	r2 = 31529696 <update_target_end+0x18B0 : 1e11ae0 >			  ## user_cfg.c:192:9
 1e05430:    20 70             	r0 = 2			  ## user_cfg.c:192:9
 1e05432:    80 f3 e5 3c       	call 31178 <log_print : 1e0ce00 >			  ## user_cfg.c:192:9
 1e05436:    04 18             	goto 8 <board_init+0x26C : 1e05440 >			  ## user_cfg.c:192:9
 1e05438:    50 08             	r0 = r5			  ## user_cfg.c:199:9
 1e0543a:    42 08             	r2 = r4			  ## user_cfg.c:199:9
 1e0543c:    98 f3 52 0d       	call 3152548 <memcpy : 106ee4 >			  ## user_cfg.c:199:9
 1e05440:    63 fc 4d 00       	r3 = r6 + 77			  ## user_cfg.c:202:5
 1e05444:    c2 ff 06 1b e1 01 	r2 = 31529734 <update_target_end+0x18D6 : 1e11b06 >			  ## user_cfg.c:202:5
 1e0544a:    20 70             	r0 = 2			  ## user_cfg.c:202:5
 1e0544c:    80 f3 d8 3c       	call 31152 <log_print : 1e0ce00 >			  ## user_cfg.c:202:5
 1e05450:    c4 ff c0 25 00 00 	r4 = 9664 <_sdfile_handl : 25c0 >			  ## user_cfg.c:202:5
 1e05456:    41 fc 5e 00       	r1 = r4 + 94			  ## user_cfg.c:206:11
 1e0545a:    00 fb 59 02       	r0 = 601 <BTCTLER_CONTROLLER_BSS_SIZE+0x99 : 259 >			  ## user_cfg.c:206:11
 1e0545e:    12 70             	r2 = 1			  ## user_cfg.c:206:11
 1e05460:    80 f3 45 4d       	call 39562 <syscfg_read : 1e0eeee >			  ## user_cfg.c:206:11
 1e05464:    00 e0 03 b0       	ifs (r0 < 0) goto 6 <board_init+0x29A : 1e0546e >			  ## user_cfg.c:207:9
 1e05468:    00 f9 5e 40       	r0 = b[r4 + 94] (u)
 1e0546c:    09 18             	goto 18 <board_init+0x2AC : 1e05480 >
 1e0546e:    c2 ff 2d 1b e1 01 	r2 = 31529773 <update_target_end+0x18FD : 1e11b2d >			  ## user_cfg.c:208:9
 1e05474:    10 70             	r0 = 1			  ## user_cfg.c:208:9
 1e05476:    80 f3 c3 3c       	call 31110 <log_print : 1e0ce00 >			  ## user_cfg.c:208:9
 1e0547a:    a0 70             	r0 = 10			  ## user_cfg.c:208:9
 1e0547c:    10 f9 5e 40       	b[r4 + 94] = r0			  ## user_cfg.c:209:26
 1e05480:    80 f3 88 71       	call 58128 <bt_max_pwr_set : 1e13794 >			  ## user_cfg.c:211:5
 1e05484:    84 85             	r4 += 88			  ## user_cfg.c:211:5
 1e05486:    63 68             	r3 = b[r4 + 6] (u)			  ## user_cfg.c:213:5
 1e05488:    c2 ff 4f 1b e1 01 	r2 = 31529807 <update_target_end+0x191F : 1e11b4f >			  ## user_cfg.c:213:5
 1e0548e:    20 70             	r0 = 2			  ## user_cfg.c:213:5
 1e05490:    80 f3 b6 3c       	call 31084 <log_print : 1e0ce00 >			  ## user_cfg.c:213:5
 1e05494:    e0 70             	r0 = 14			  ## user_cfg.c:215:26
 1e05496:    08 68             	b[r4 + 0] = r0			  ## user_cfg.c:215:26
 1e05498:    28 68             	b[r4 + 2] = r0			  ## user_cfg.c:216:26
 1e0549a:    00 fb 36 01       	r0 = 310 <DRIVER_RAM_TOTAL+0x44 : 136 >			  ## user_cfg.c:216:26
 1e0549e:    d8 58             	h[r4 + 26] = r0			  ## user_cfg.c:257:28
 1e054a0:    01 fb 2c 01       	r1 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## user_cfg.c:257:28
 1e054a4:    e9 58             	h[r4 + 28] = r1			  ## user_cfg.c:258:29
 1e054a6:    c2 ff 71 1b e1 01 	r2 = 31529841 <update_target_end+0x1941 : 1e11b71 >			  ## user_cfg.c:259:5
 1e054ac:    20 70             	r0 = 2			  ## user_cfg.c:259:5
 1e054ae:    a3 92             	r3 = r1 + 10			  ## user_cfg.c:259:5
 1e054b0:    09 02             	[sp] = r1			  ## user_cfg.c:259:5
 1e054b2:    80 f3 a5 3c       	call 31050 <log_print : 1e0ce00 >			  ## user_cfg.c:259:5
 1e054b6:    05 70             	r5 = 0			  ## user_cfg.c:259:5
 1e054b8:    cd 58             	h[r4 + 24] = r5			  ## user_cfg.c:272:27
 1e054ba:    c2 ff ab 1b e1 01 	r2 = 31529899 <update_target_end+0x197B : 1e11bab >			  ## user_cfg.c:273:5
 1e054c0:    20 70             	r0 = 2			  ## user_cfg.c:273:5
 1e054c2:    03 70             	r3 = 0			  ## user_cfg.c:273:5
 1e054c4:    80 f3 9c 3c       	call 31032 <log_print : 1e0ce00 >			  ## user_cfg.c:273:5
 1e054c8:    95 f5 14 00       	h[sp+20] = r5			  ## user_cfg.c:281:8
 1e054cc:    4d 02             	[sp+16] = r5			  ## user_cfg.c:281:8
 1e054ce:    61 a1             	r1 = sp + 22			  ## user_cfg.c:281:8
 1e054d0:    60 76             	r0 = 102			  ## user_cfg.c:295:19
 1e054d2:    62 70             	r2 = 6			  ## user_cfg.c:295:19
 1e054d4:    80 f3 0b 4d       	call 39446 <syscfg_read : 1e0eeee >			  ## user_cfg.c:295:19
 1e054d8:    c4 ff 94 2b e1 01 	r4 = 31533972 <app_spple_ops+0x8 : 1e12b94 >
 1e054de:    60 e0 0c 10       	if (r0 != 6) goto 24 <board_init+0x326 : 1e054fa >
 1e054e2:    60 a1             	r0 = sp + 22
 1e054e4:    62 70             	r2 = 6			  ## user_cfg.c:296:32
 1e054e6:    41 08             	r1 = r4			  ## user_cfg.c:296:32
 1e054e8:    98 f3 00 0d       	call 3152384 <memcmp : 106eec >			  ## user_cfg.c:296:32
 1e054ec:    06 20             	if (r0 == 0) goto 12 <board_init+0x326 : 1e054fa >			  ## user_cfg.c:296:32
 1e054ee:    60 a1             	r0 = sp + 22
 1e054f0:    01 a1             	r1 = sp + 16
 1e054f2:    62 70             	r2 = 6			  ## user_cfg.c:296:68
 1e054f4:    98 f3 fa 0c       	call 3152372 <memcmp : 106eec >			  ## user_cfg.c:296:68
 1e054f8:    0a 30             	if (r0 != 0) goto 20 <board_init+0x33A : 1e0550e >			  ## user_cfg.c:296:68
 1e054fa:    65 a1             	r5 = sp + 22
 1e054fc:    61 70             	r1 = 6			  ## user_cfg.c:297:17
 1e054fe:    50 08             	r0 = r5			  ## user_cfg.c:297:17
 1e05500:    80 f3 d8 a9       	call 86960 <get_random_number : 1e1a8b4 >			  ## user_cfg.c:297:17
 1e05504:    60 76             	r0 = 102			  ## user_cfg.c:298:17
 1e05506:    62 70             	r2 = 6			  ## user_cfg.c:298:17
 1e05508:    51 08             	r1 = r5			  ## user_cfg.c:298:17
 1e0550a:    80 f3 93 4c       	call 39206 <syscfg_write : 1e0ee34 >			  ## user_cfg.c:298:17
 1e0550e:    85 fc 5e 01       	r5 = r8 + 350			  ## user_cfg.c:302:5
 1e05512:    60 76             	r0 = 102			  ## user_cfg.c:302:5
 1e05514:    62 70             	r2 = 6			  ## user_cfg.c:302:5
 1e05516:    51 08             	r1 = r5			  ## user_cfg.c:302:5
 1e05518:    80 f3 e9 4c       	call 39378 <syscfg_read : 1e0eeee >			  ## user_cfg.c:302:5
 1e0551c:    62 70             	r2 = 6			  ## user_cfg.c:303:10
 1e0551e:    50 08             	r0 = r5			  ## user_cfg.c:303:10
 1e05520:    41 08             	r1 = r4			  ## user_cfg.c:303:10
 1e05522:    98 f3 e3 0c       	call 3152326 <memcmp : 106eec >			  ## user_cfg.c:303:10
 1e05526:    0f 30             	if (r0 != 0) goto 30 <board_init+0x372 : 1e05546 >			  ## user_cfg.c:303:10
 1e05528:    61 70             	r1 = 6			  ## user_cfg.c:304:9
 1e0552a:    50 08             	r0 = r5			  ## user_cfg.c:304:9
 1e0552c:    80 f3 c2 a9       	call 86916 <get_random_number : 1e1a8b4 >			  ## user_cfg.c:304:9
 1e05530:    60 76             	r0 = 102			  ## user_cfg.c:305:9
 1e05532:    62 70             	r2 = 6			  ## user_cfg.c:305:9
 1e05534:    51 08             	r1 = r5			  ## user_cfg.c:305:9
 1e05536:    80 f3 7d 4c       	call 39162 <syscfg_write : 1e0ee34 >			  ## user_cfg.c:305:9
 1e0553a:    c2 ff d1 1b e1 01 	r2 = 31529937 <update_target_end+0x19A1 : 1e11bd1 >			  ## user_cfg.c:306:9
 1e05540:    20 70             	r0 = 2			  ## user_cfg.c:306:9
 1e05542:    80 f3 5d 3c       	call 30906 <log_print : 1e0ce00 >			  ## user_cfg.c:306:9
 1e05546:    c2 ff fa 1b e1 01 	r2 = 31529978 <update_target_end+0x19CA : 1e11bfa >			  ## user_cfg.c:309:5
 1e0554c:    20 70             	r0 = 2			  ## user_cfg.c:309:5
 1e0554e:    80 f3 57 3c       	call 30894 <log_print : 1e0ce00 >			  ## user_cfg.c:309:5
 1e05552:    64 a1             	r4 = sp + 22			  ## user_cfg.c:309:5
 1e05554:    61 70             	r1 = 6			  ## user_cfg.c:310:5
 1e05556:    40 08             	r0 = r4			  ## user_cfg.c:310:5
 1e05558:    80 f3 a2 3d       	call 31556 <printf_buf : 1e0d0a0 >			  ## user_cfg.c:310:5
 1e0555c:    60 fc 6d 00       	r0 = r6 + 109			  ## user_cfg.c:311:5
 1e05560:    62 70             	r2 = 6			  ## user_cfg.c:311:5
 1e05562:    41 08             	r1 = r4			  ## user_cfg.c:311:5
 1e05564:    98 f3 be 0c       	call 3152252 <memcpy : 106ee4 >			  ## user_cfg.c:311:5
 1e05568:    41 a0             	r1 = sp + 4			  ## user_cfg.c:311:5
 1e0556a:    00 fb 5f 02       	r0 = 607 <BTCTLER_CONTROLLER_BSS_SIZE+0x9F : 25f >			  ## user_cfg.c:324:11
 1e0556e:    92 70             	r2 = 9			  ## user_cfg.c:324:11
 1e05570:    80 f3 bd 4c       	call 39290 <syscfg_read : 1e0eeee >			  ## user_cfg.c:324:11
 1e05574:    10 e0 19 b0       	ifs (r0 < 1) goto 50 <board_init+0x3D6 : 1e055aa >
 1e05578:    c2 ff 13 1c e1 01 	r2 = 31530003 <update_target_end+0x19E3 : 1e11c13 >			  ## user_cfg.c:326:9
 1e0557e:    20 70             	r0 = 2			  ## user_cfg.c:326:9
 1e05580:    80 f3 3e 3c       	call 30844 <log_print : 1e0ce00 >			  ## user_cfg.c:326:9
 1e05584:    40 a0             	r0 = sp + 4			  ## user_cfg.c:326:9
 1e05586:    91 70             	r1 = 9			  ## user_cfg.c:327:9
 1e05588:    80 f3 8a 3d       	call 31508 <printf_buf : 1e0d0a0 >			  ## user_cfg.c:327:9
 1e0558c:    80 f5 04 00       	r0 = h[sp+4] (u)			  ## user_cfg.c:328:46
 1e05590:    88 5c             	h[r6 + 16] = r0			  ## user_cfg.c:328:36
 1e05592:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## user_cfg.c:329:46
 1e05596:    81 f5 08 00       	r1 = h[sp+8] (u)			  ## user_cfg.c:330:46
 1e0559a:    82 f5 0a 00       	r2 = h[sp+10] (u)			  ## user_cfg.c:331:46
 1e0559e:    c3 f5 0c 00       	r3 = b[sp+12] (u)			  ## user_cfg.c:332:46
 1e055a2:    98 5c             	h[r6 + 18] = r0			  ## user_cfg.c:329:36
 1e055a4:    a9 5c             	h[r6 + 20] = r1			  ## user_cfg.c:330:36
 1e055a6:    ba 5c             	h[r6 + 22] = r2			  ## user_cfg.c:331:36
 1e055a8:    8b 6d             	b[r6 + 24] = r3			  ## user_cfg.c:332:36
 1e055aa:    80 f3 43 ac       	call 88198 <lp_winsize_init : 1e1ae34 >			  ## user_cfg.c:335:5
 1e055ae:    80 f3 9d 54       	call 43322 <devices_init : 1e0feec >			  ## board_ac632n_demo.c:319:5
 1e055b2:    c0 ff fc 2b e1 01 	r0 = 31534076 <adkey_data : 1e12bfc >			  ## adkey.c:47:12
 1e055b8:    10 f6 50 80       	[r8 + 80] = r0			  ## adkey.c:47:12
 1e055bc:    b0 70             	r0 = 11			  ## adkey.c:55:5
 1e055be:    c4 15             	call -1144 <adc_add_sample_ch : 1e05148 >			  ## adkey.c:55:5
 1e055c0:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## adkey.c:55:5
 1e055c6:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e055c8:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e055ca:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e055cc:    01 fc 00 c4       	r1 = r0 + -15360
 1e055d0:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e055d2:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e055d4:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e055d6:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e055da:    00 f4 08 09       	[r0 + 0] |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e055de:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e055e0:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e055e2:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e055e4:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e055e6:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e055e8:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e055ea:    72 4c             	r2 = [r6 + 28]			  ## key_driver.c:252:9
 1e055ec:    c0 9d             	r0 = r6 + 28			  ## key_driver.c:252:9
 1e055ee:    c1 ff e6 09 e0 01 	r1 = 31459814 <key_driver_scan : 1e009e6 >			  ## key_driver.c:252:9
 1e055f4:    03 70             	r3 = 0			  ## key_driver.c:252:9
 1e055f6:    80 f3 26 36       	call 27724 <usr_timer_add : 1e0c246 >			  ## key_driver.c:252:9
 1e055fa:    bf f3 cb e4       	call -13930 <led_8888_init : 1e01f94 >			  ## board_ac632n_demo.c:264:5
 1e055fe:    c0 ff 08 51 1e 00 	r0 = 1986824 <uECC_vli_cmp_unsafe+0xDE10C : 1e5108 >
 1e05604:    00 f4 80 09       	[r0 + 0] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:277:16
 1e05608:    01 f4 80 09       	[r0 + 4] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:821:16
 1e0560c:    06 f4 80 09       	[r0 + 24] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:852:17
 1e05610:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e05612:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e05614:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e05616:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e05618:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e0561a:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e0561c:    02 f4 80 09       	[r0 + 8] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:588:15
 1e05620:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e05622:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e05624:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e05626:    00 f4 20 09       	[r0 + 0] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:277:16
 1e0562a:    01 f4 20 09       	[r0 + 4] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:821:16
 1e0562e:    06 f4 20 09       	[r0 + 24] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:852:17
 1e05632:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e05634:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e05636:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e05638:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e0563a:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e0563c:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e0563e:    02 f4 20 09       	[r0 + 8] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:588:15
 1e05642:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e05644:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e05646:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e05648:    00 f9 d0 81       	r0 = b[r8 + 464] (u)			  ## charge.c:96:20
 1e0564c:    02 20             	if (r0 == 0) goto 4 <board_init+0x47E : 1e05652 >			  ## board_ac632n_demo.c:323:8
 1e0564e:    20 70             	r0 = 2			  ## board_ac632n_demo.c:324:9
 1e05650:    01 18             	goto 2 <board_init+0x480 : 1e05654 >			  ## board_ac632n_demo.c:324:9
 1e05652:    30 70             	r0 = 3			  ## board_ac632n_demo.c:326:9
 1e05654:    bf f3 6f d7       	call -20770 <power_set_mode : 1e00536 >
 1e05658:    4e 0a             	sp += 156
 1e0565a:    5a 01             	{pc, r10-r4} = [sp++]			  ## board_ac632n_demo.c:336:1


get_wakeup_source:
 1e0565c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:713:0
 1e05662:    e0 61             	r0 = b[r0 + 30] (u)			  ## power_wakeup.c:714:5
 1e05664:    20 00             	rts			  ## power_wakeup.c:714:5


is_ldo5v_wakeup:
 1e05666:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:729:0
 1e0566c:    01 f6 c8 20       	r1 = [r2 + 200]			  ## power_wakeup.c:732:9
 1e05670:    00 70             	r0 = 0			  ## power_wakeup.c:732:9
 1e05672:    19 22             	if (r1 == 0) goto 50 <is_ldo5v_wakeup+0x40 : 1e056a6 >			  ## power_wakeup.c:732:9
 1e05674:    e3 65             	r3 = b[r2 + 30] (u)			  ## power_wakeup.c:736:9
 1e05676:    02 f3 16 30       	if ((r3 & 4) == 0) goto 44 <is_ldo5v_wakeup+0x40 : 1e056a6 >			  ## power_wakeup.c:736:9
 1e0567a:    00 f9 20 20       	r0 = b[r2 + 32] (u)
 1e0567e:    f2 65             	r2 = b[r2 + 31] (u)
 1e05680:    50 b4             	r0 |= r2			  ## power_wakeup.c:744:69
 1e05682:    01 83             	r1 += 48			  ## power_wakeup.c:737:9
 1e05684:    02 70             	r2 = 0			  ## power_wakeup.c:737:9
 1e05686:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## power_wakeup.c:738:20
 1e0568a:    43 66             	r3 = b[r3 + 4] (u)			  ## power_wakeup.c:739:23
 1e0568c:    73 e3 05 00       	if (r3 == 55) goto 10 <is_ldo5v_wakeup+0x34 : 1e0569a >			  ## power_wakeup.c:739:17
 1e05690:    83 e3 05 10       	if (r3 != 56) goto 10 <is_ldo5v_wakeup+0x38 : 1e0569e >
 1e05694:    00 f3 03 00       	if ((r0 & 1) == 0) goto 6 <is_ldo5v_wakeup+0x38 : 1e0569e >
 1e05698:    07 18             	goto 14 <is_ldo5v_wakeup+0x42 : 1e056a8 >
 1e0569a:    21 f3 05 00       	if ((r0 & 2) != 0) goto 10 <is_ldo5v_wakeup+0x42 : 1e056a8 >
 1e0569e:    12 80             	r2 += 1			  ## power_wakeup.c:737:47
 1e056a0:    32 e0 f1 3f       	if (r2 < 3) goto -30 <is_ldo5v_wakeup+0x20 : 1e05686 >			  ## power_wakeup.c:737:47
 1e056a4:    00 70             	r0 = 0
 1e056a6:    20 00             	rts			  ## power_wakeup.c:751:1
 1e056a8:    10 70             	r0 = 1
 1e056aa:    20 00             	rts			  ## power_wakeup.c:751:1


app_main:
 1e056ac:    78 01             	[--sp] = {rets, r8-r4}			  ## app_main.c:110:0
 1e056ae:    f6 0b             	sp += -20			  ## app_main.c:110:0
 1e056b0:    06 70             	r6 = 0			  ## app_main.c:110:0
 1e056b2:    0e 02             	[sp] = r6			  ## update.c:167:5
 1e056b4:    c2 ff 48 0b e1 01 	r2 = 31525704 <update_target_end+0x918 : 1e10b48 >			  ## update.c:167:5
 1e056ba:    20 70             	r0 = 2			  ## update.c:167:5
 1e056bc:    03 70             	r3 = 0			  ## update.c:167:5
 1e056be:    25 70             	r5 = 2			  ## update.c:167:5
 1e056c0:    80 f3 9e 3b       	call 30524 <log_print : 1e0ce00 >			  ## update.c:167:5
 1e056c4:    80 f3 be ab       	call 87932 <check_update_param_len : 1e1ae44 >			  ## update.c:171:5
 1e056c8:    c9 17             	call -110 <get_wakeup_source : 1e0565c >			  ## app_main.c:117:5
 1e056ca:    04 08             	r4 = r0			  ## app_main.c:117:5
 1e056cc:    cc 17             	call -104 <is_ldo5v_wakeup : 1e05666 >			  ## app_main.c:117:5
 1e056ce:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## charge.c:96:20
 1e056d4:    02 f9 d0 71       	r2 = b[r7 + 464] (u)			  ## app_main.c:117:5
 1e056d8:    03 08             	r3 = r0			  ## app_main.c:117:5
 1e056da:    c0 ff 27 0f e1 01 	r0 = 31526695 <update_target_end+0xCF7 : 1e10f27 >			  ## app_main.c:117:5
 1e056e0:    c1 ff 41 0f e1 01 	r1 = 31526721 <update_target_end+0xD11 : 1e10f41 >			  ## app_main.c:117:5
 1e056e6:    0a 02             	[sp] = r2			  ## app_main.c:117:5
 1e056e8:    42 08             	r2 = r4			  ## app_main.c:117:5
 1e056ea:    80 f3 5c 3b       	call 30392 <printf : 1e0cda6 >			  ## app_main.c:117:5
 1e056ee:    00 f9 d0 71       	r0 = b[r7 + 464] (u)			  ## charge.c:96:20
 1e056f2:    0b 20             	if (r0 == 0) goto 22 <app_main+0x5E : 1e0570a >			  ## charge.c:96:20
 1e056f4:    3e 02             	[sp+12] = r6			  ## app_main.c:123:9
 1e056f6:    4e 02             	[sp+16] = r6			  ## app_main.c:123:9
 1e056f8:    c3 ff 4a 0f e1 01 	r3 = 31526730 <update_target_end+0xD1A : 1e10f4a >			  ## app_main.c:124:17
 1e056fe:    1b 02             	[sp+4] = r3			  ## app_main.c:124:17
 1e05700:    2d 02             	[sp+8] = r5			  ## app_main.c:125:19
 1e05702:    c2 ff 4f 0f e1 01 	r2 = 31526735 <update_target_end+0xD1F : 1e10f4f >			  ## app_main.c:126:9
 1e05708:    2d 18             	goto 90 <app_main+0xB8 : 1e05764 >			  ## app_main.c:126:9
 1e0570a:    c8 ff ae 10 e1 01 	r8 = 31527086 <update_target_end+0xE7E : 1e110ae >
 1e05710:    c7 ff c0 25 00 00 	r7 = 9664 <_sdfile_handl : 25c0 >
 1e05716:    04 70             	r4 = 0
 1e05718:    bf f3 88 de       	call -17136 <clr_wdt : 1e0142c >			  ## app_power_manage.c:332:9
 1e0571c:    bf f3 2c da       	call -19368 <get_vbat_level : 1e00b78 >			  ## app_power_manage.c:333:15
 1e05720:    05 08             	r5 = r0			  ## app_power_manage.c:333:15
 1e05722:    80 08             	r0 = r8			  ## app_power_manage.c:334:9
 1e05724:    51 08             	r1 = r5			  ## app_power_manage.c:334:9
 1e05726:    80 f3 3e 3b       	call 30332 <printf : 1e0cda6 >			  ## app_power_manage.c:334:9
 1e0572a:    00 f7 74 70       	r0 = h[r7 + 116] (u)			  ## app_power_manage.c:335:28
 1e0572e:    05 f2 06 20       	if (r5 >= r0) goto 12 <app_main+0x92 : 1e0573e >			  ## app_power_manage.c:335:28
 1e05732:    14 80             	r4 += 1			  ## app_power_manage.c:336:26
 1e05734:    00 05             	r0 = r4.b0 (u)			  ## app_power_manage.c:336:26
 1e05736:    06 70             	r6 = 0			  ## app_power_manage.c:336:26
 1e05738:    b0 e0 ee 3f       	if (r0 < 11) goto -36 <app_main+0x6C : 1e05718 >			  ## app_power_manage.c:336:26
 1e0573c:    1b 18             	goto 54 <app_main+0xC8 : 1e05774 >			  ## app_power_manage.c:336:26
 1e0573e:    16 80             	r6 += 1			  ## app_power_manage.c:344:29
 1e05740:    80 05             	r0 = r6.b0 (u)			  ## app_power_manage.c:344:29
 1e05742:    04 70             	r4 = 0			  ## app_power_manage.c:344:29
 1e05744:    a0 e0 e8 9f       	if (r0 <= 10) goto -48 <app_main+0x6C : 1e05718 >			  ## app_power_manage.c:344:29
 1e05748:    bf f3 49 e5       	call -13678 <vbat_check_init : 1e021de >			  ## app_power_manage.c:347:17
 1e0574c:    00 70             	r0 = 0			  ## app_power_manage.c:347:17
 1e0574e:    38 02             	[sp+12] = r0			  ## app_main.c:146:5
 1e05750:    48 02             	[sp+16] = r0			  ## app_main.c:146:5
 1e05752:    c3 ff 06 11 e1 01 	r3 = 31527174 <update_target_end+0xED6 : 1e11106 >			  ## app_main.c:148:13
 1e05758:    1b 02             	[sp+4] = r3			  ## app_main.c:148:13
 1e0575a:    10 70             	r0 = 1			  ## app_main.c:149:15
 1e0575c:    28 02             	[sp+8] = r0			  ## app_main.c:149:15
 1e0575e:    c2 ff 6b 0f e1 01 	r2 = 31526763 <update_target_end+0xD3B : 1e10f6b >			  ## app_main.c:167:5
 1e05764:    20 70             	r0 = 2
 1e05766:    80 f3 4b 3b       	call 30358 <log_print : 1e0ce00 >
 1e0576a:    40 a0             	r0 = sp + 4
 1e0576c:    80 f3 08 4b       	call 38416 <start_app : 1e0ed80 >
 1e05770:    0a 0a             	sp += 20
 1e05772:    58 01             	{pc, r8-r4} = [sp++]			  ## app_main.c:176:1
 1e05774:    40 76             	r0 = 100			  ## app_power_manage.c:339:17
 1e05776:    98 f3 1f 0b       	call 3151422 <os_time_dly : 106db8 >			  ## app_power_manage.c:339:17
 1e0577a:    c2 ff b8 10 e1 01 	r2 = 31527096 <update_target_end+0xE88 : 1e110b8 >			  ## app_power_manage.c:340:17
 1e05780:    20 70             	r0 = 2			  ## app_power_manage.c:340:17
 1e05782:    80 f3 3d 3b       	call 30330 <log_print : 1e0ce00 >			  ## app_power_manage.c:340:17
 1e05786:    bf f3 c0 e5       	call -13440 <power_set_soft_poweroff : 1e0230a >			  ## app_power_manage.c:341:17


ble_profile_init:
 1e0578a:    34 00             	[--sp] = rets			  ## le_trans_data.c:999:0
 1e0578c:    c0 ff f2 03 e1 01 	r0 = 31523826 <update_target_end+0x1C2 : 1e103f2 >			  ## le_trans_data.c:1000:5
 1e05792:    80 f3 08 3b       	call 30224 <printf : 1e0cda6 >			  ## le_trans_data.c:1000:5
 1e05796:    80 f3 6b 2d       	call 23254 <att_server_init : 1e0b270 >			  ## le_trans_data.c:1010:5
 1e0579a:    80 f3 88 2d       	call 23312 <att_server_register_packet_handler : 1e0b2ae >			  ## le_trans_data.c:1011:5
 1e0579e:    80 f3 e6 15       	call 11212 <hci_event_callback_set : 1e0836e >			  ## le_trans_data.c:1015:5
 1e057a2:    80 f3 ef 15       	call 11230 <le_l2cap_register_packet_handler : 1e08384 >			  ## le_trans_data.c:1018:5
 1e057a6:    88 01             	{rets} = [sp++]			  ## le_trans_data.c:1030:5
 1e057a8:    c0 f3 f4 15       	goto 11240 <ble_vendor_set_default_att_mtu : 1e08394 >			  ## le_trans_data.c:1030:5


bredr_tx_bulk_alloc:
 1e057ac:    77 01             	[--sp] = {rets, r7-r4}			  ## link_bulk.c:381:0
 1e057ae:    c4 91             	r4 = r0 + 28			  ## link_bulk.c:381:0
 1e057b0:    c6 ff cd 28 e1 01 	r6 = 31533261 <update_target_end+0x269D : 1e128cd >			  ## link_bulk.c:381:0
 1e057b6:    c7 ff 30 23 00 00 	r7 = 9008 <acl_tx_bulk_sem : 2330 >			  ## link_bulk.c:381:0
 1e057bc:    00 70             	r0 = 0			  ## link_bulk.c:389:14
 1e057be:    41 08             	r1 = r4			  ## link_bulk.c:389:14
 1e057c0:    80 f3 59 3e       	call 31922 <lbuf_alloc : 1e0d476 >			  ## link_bulk.c:389:14
 1e057c4:    05 08             	r5 = r0			  ## link_bulk.c:389:14
 1e057c6:    16 3a             	if (r5 != 0) goto 44 <bredr_tx_bulk_alloc+0x48 : 1e057f4 >			  ## link_bulk.c:390:13
 1e057c8:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e057cc:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e057d0:    05 70             	r5 = 0
 1e057d2:    01 ff 00 03 15 00 	if (r0 != 768) goto 42 <bredr_tx_bulk_alloc+0x56 : 1e05802 >
 1e057d8:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e057dc:    61 ff ff 09 10 00 	if ((r0 & 255) != 0) goto 32 <bredr_tx_bulk_alloc+0x56 : 1e05802 >
 1e057e2:    60 08             	r0 = r6			  ## link_bulk.c:397:9
 1e057e4:    80 f3 c0 3b       	call 30592 <puts : 1e0cf68 >			  ## link_bulk.c:397:9
 1e057e8:    01 70             	r1 = 0			  ## link_bulk.c:398:13
 1e057ea:    70 08             	r0 = r7			  ## link_bulk.c:398:13
 1e057ec:    98 f3 0c 0b       	call 3151384 <os_sem_pend : 106e08 >			  ## link_bulk.c:398:13
 1e057f0:    e5 21             	if (r0 == 0) goto -54 <bredr_tx_bulk_alloc+0x10 : 1e057bc >			  ## link_bulk.c:398:13
 1e057f2:    07 18             	goto 14 <bredr_tx_bulk_alloc+0x56 : 1e05802 >			  ## link_bulk.c:398:13
 1e057f4:    01 70             	r1 = 0			  ## link_bulk.c:404:5
 1e057f6:    c2 71             	r2 = 28			  ## link_bulk.c:404:5
 1e057f8:    98 f3 7a 0b       	call 3151604 <memset : 106ef0 >			  ## link_bulk.c:404:5
 1e057fc:    00 9b             	r0 = r5 + 16			  ## link_bulk.c:406:25
 1e057fe:    48 4a             	[r5 + 16] = r0			  ## list.h:188:16
 1e05800:    58 4a             	[r5 + 20] = r0			  ## list.h:189:16
 1e05802:    50 08             	r0 = r5			  ## link_bulk.c:409:1
 1e05804:    57 01             	{pc, r7-r4} = [sp++]			  ## link_bulk.c:409:1


__vsprintf:
 1e05806:    7b 01             	[--sp] = {rets, r11-r4}			  ## vsprintf.c:72:0
 1e05808:    fe 0b             	sp += -4			  ## vsprintf.c:72:0
 1e0580a:    14 08             	r4 = r1			  ## vsprintf.c:72:0
 1e0580c:    0a 02             	[sp] = r2			  ## vsprintf.c:72:0
 1e0580e:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:77:12
 1e05810:    08 08             	r8 = r0			  ## vsprintf.c:77:12
 1e05812:    86 08             	r6 = r8
 1e05814:    bd 22             	if (r1 == 0) goto 378 <.GJTIE507_0_0_+0xFE : 1e05990 >
 1e05816:    49 76             	r9 = 100
 1e05818:    aa 70             	r10 = 10
 1e0581a:    50 04             	r0 = r1.b0 (s)			  ## vsprintf.c:78:17
 1e0581c:    20 e5 2e d0       	ifs (r0 <= 82) goto 92 <__vsprintf+0x76 : 1e0587c >			  ## vsprintf.c:78:17
 1e05820:    20 e6 1f c0       	ifs (r0 > 98) goto 62 <__vsprintf+0x5C : 1e05862 >
 1e05824:    30 e5 3f 00       	if (r0 == 83) goto 126 <.GJTIE507_0_0_+0x14 : 1e058a6 >
 1e05828:    20 e6 af 10       	if (r0 != 98) goto 350 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e0582c:    20 f9 02 40       	r0 = b[r4 + 2] (s)			  ## vsprintf.c:101:21
 1e05830:    22 f9 01 40       	r2 = b[r4 + 1] (s)			  ## vsprintf.c:99:20
 1e05834:    01 08             	r1 = r0			  ## vsprintf.c:101:17
 1e05836:    80 fe a0 12       	r1 += r2 * r10			  ## vsprintf.c:101:17
 1e0583a:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:101:17
 1e0583e:    24 80             	r4 += 2			  ## vsprintf.c:100:13
 1e05840:    a4 22             	if (r1 == 0) goto 328 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e05842:    02 fe 0a 29       	r2 = r2 * 10			  ## vsprintf.c:99:35
 1e05846:    63 08             	r3 = r6			  ## vsprintf.c:99:35
 1e05848:    05 02             	r5 = [sp]			  ## vsprintf.c:104:24
 1e0584a:    47 9a             	r7 = r5 + 4			  ## vsprintf.c:104:24
 1e0584c:    0f 02             	[sp] = r7			  ## vsprintf.c:104:24
 1e0584e:    05 4a             	r5 = [r5 + 0]			  ## vsprintf.c:104:24
 1e05850:    f1 8f             	r1 += -1			  ## vsprintf.c:103:23
 1e05852:    95 f9 01 30       	b[r3 ++= 1] = r5			  ## vsprintf.c:105:25
 1e05856:    f8 33             	if (r1 != 0) goto -16 <__vsprintf+0x42 : 1e05848 >			  ## vsprintf.c:103:13
 1e05858:    20 09             	r0 += r2			  ## vsprintf.c:103:23
 1e0585a:    60 09             	r0 += r6			  ## vsprintf.c:103:23
 1e0585c:    06 fc f0 fd       	r6 = r0 + -528			  ## vsprintf.c:103:23
 1e05860:    94 18             	goto 296 <.GJTIE507_0_0_+0xF8 : 1e0598a >			  ## vsprintf.c:103:23
 1e05862:    30 e6 2d 00       	if (r0 == 99) goto 90 <.GJTIE507_0_0_+0x2E : 1e058c0 >
 1e05866:    c0 e6 90 10       	if (r0 != 108) goto 288 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e0586a:    00 02             	r0 = [sp]			  ## vsprintf.c:155:24
 1e0586c:    41 90             	r1 = r0 + 4			  ## vsprintf.c:155:24
 1e0586e:    09 02             	[sp] = r1			  ## vsprintf.c:155:24
 1e05870:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:155:24
 1e05874:    1b f9 00 60       	b[r6 + 0] = r11			  ## vsprintf.c:156:21
 1e05878:    16 80             	r6 += 1
 1e0587a:    87 18             	goto 270 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e0587c:    01 fc bf ff       	r1 = r0 + -65
 1e05880:    b1 e0 31 80       	if (r1 > 11) goto 98 <.GJTIE507_0_0_+0x54 : 1e058e6 >
 1e05884:    a1 00             	tbb [r1]


.GJTIS507_0_0_:
 1e05886:    06     < 6 : 0x6 >
 1e05887:    50     < 80 : 0x50 >
 1e05888:    5a     < 90 : 0x5A >
 1e05889:    82     < 130 : 0x82 >
 1e0588a:    82     < 130 : 0x82 >
 1e0588b:    82     < 130 : 0x82 >
 1e0588c:    82     < 130 : 0x82 >
 1e0588d:    72     < 114 : 0x72 >
 1e0588e:    82     < 130 : 0x82 >
 1e0588f:    82     < 130 : 0x82 >
 1e05890:    82     < 130 : 0x82 >
 1e05891:    7b     < 123 : 0x7B >
 1e05892:    00 02             	r0 = [sp]			  ## vsprintf.c:137:20
 1e05894:    41 90             	r1 = r0 + 4			  ## vsprintf.c:137:20
 1e05896:    09 02             	[sp] = r1			  ## vsprintf.c:137:20
 1e05898:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:137:20
 1e0589a:    62 70             	r2 = 6			  ## vsprintf.c:138:13
 1e0589c:    60 08             	r0 = r6			  ## vsprintf.c:138:13
 1e0589e:    98 f3 21 0b       	call 3151426 <memcpy : 106ee4 >			  ## vsprintf.c:138:13
 1e058a2:    66 80             	r6 += 6			  ## vsprintf.c:139:18
 1e058a4:    72 18             	goto 228 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e058a6:    00 02             	r0 = [sp]			  ## vsprintf.c:131:20
 1e058a8:    41 90             	r1 = r0 + 4			  ## vsprintf.c:131:20
 1e058aa:    09 02             	[sp] = r1			  ## vsprintf.c:131:20
 1e058ac:    05 40             	r5 = [r0 + 0]			  ## vsprintf.c:131:20
 1e058ae:    60 08             	r0 = r6			  ## vsprintf.c:132:13
 1e058b0:    51 08             	r1 = r5			  ## vsprintf.c:132:13
 1e058b2:    98 f3 21 0b       	call 3151426 <strcpy : 106ef8 >			  ## vsprintf.c:132:13
 1e058b6:    50 08             	r0 = r5			  ## vsprintf.c:133:19
 1e058b8:    98 f3 20 0b       	call 3151424 <strlen : 106efc >			  ## vsprintf.c:133:19
 1e058bc:    06 09             	r6 += r0			  ## vsprintf.c:134:18
 1e058be:    65 18             	goto 202 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e058c0:    00 02             	r0 = [sp]			  ## vsprintf.c:114:20
 1e058c2:    22 f9 02 40       	r2 = b[r4 + 2] (s)			  ## vsprintf.c:113:21
 1e058c6:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:111:20
 1e058ca:    41 90             	r1 = r0 + 4			  ## vsprintf.c:114:20
 1e058cc:    09 02             	[sp] = r1			  ## vsprintf.c:114:20
 1e058ce:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:114:20
 1e058d0:    80 fe a0 23       	r2 += r3 * r10			  ## vsprintf.c:113:17
 1e058d4:    25 fc f0 fd       	r5 = r2 + -528			  ## vsprintf.c:113:17
 1e058d8:    60 08             	r0 = r6			  ## vsprintf.c:115:13
 1e058da:    52 08             	r2 = r5			  ## vsprintf.c:115:13
 1e058dc:    98 f3 02 0b       	call 3151364 <memcpy : 106ee4 >			  ## vsprintf.c:115:13
 1e058e0:    56 09             	r6 += r5			  ## vsprintf.c:116:18
 1e058e2:    24 80             	r4 += 2			  ## vsprintf.c:112:13
 1e058e4:    52 18             	goto 164 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e058e6:    01 fc cf ff       	r1 = r0 + -49
 1e058ea:    21 e0 13 30       	if (r1 < 2) goto 38 <.GJTIE507_0_0_+0x82 : 1e05914 >
 1e058ee:    d0 8c             	r0 += -51
 1e058f0:    20 e0 4b 20       	if (r0 >= 2) goto 150 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e058f4:    00 02             	r0 = [sp]			  ## vsprintf.c:89:20
 1e058f6:    41 90             	r1 = r0 + 4			  ## vsprintf.c:89:20
 1e058f8:    09 02             	[sp] = r1			  ## vsprintf.c:89:20
 1e058fa:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:89:20
 1e058fc:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:90:21
 1e058fe:    01 d2             	r1 = r0 >> 8			  ## vsprintf.c:91:28
 1e05900:    19 6c             	b[r6 + 1] = r1			  ## vsprintf.c:91:21
 1e05902:    01 d4             	r1 = r0 >> 16			  ## vsprintf.c:92:28
 1e05904:    29 6c             	b[r6 + 2] = r1			  ## vsprintf.c:92:21
 1e05906:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:93:17
 1e05908:    41 e3 3e 10       	if (r1 != 52) goto 124 <.GJTIE507_0_0_+0xF6 : 1e05988 >			  ## vsprintf.c:93:17
 1e0590c:    00 d6             	r0 = r0 >> 24			  ## vsprintf.c:94:32
 1e0590e:    38 6c             	b[r6 + 3] = r0			  ## vsprintf.c:94:25
 1e05910:    46 80             	r6 += 4			  ## vsprintf.c:94:22
 1e05912:    3b 18             	goto 118 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e05914:    00 02             	r0 = [sp]			  ## vsprintf.c:81:20
 1e05916:    41 90             	r1 = r0 + 4			  ## vsprintf.c:81:20
 1e05918:    09 02             	[sp] = r1			  ## vsprintf.c:81:20
 1e0591a:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:81:20
 1e0591c:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:82:21
 1e0591e:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:83:17
 1e05920:    21 e3 aa 1f       	if (r1 != 50) goto -172 <__vsprintf+0x72 : 1e05878 >			  ## vsprintf.c:83:17
 1e05924:    27 18             	goto 78 <.GJTIE507_0_0_+0xE2 : 1e05974 >			  ## vsprintf.c:83:17
 1e05926:    00 02             	r0 = [sp]			  ## vsprintf.c:150:20
 1e05928:    41 90             	r1 = r0 + 4			  ## vsprintf.c:150:20
 1e0592a:    09 02             	[sp] = r1			  ## vsprintf.c:150:20
 1e0592c:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:150:20
 1e0592e:    60 08             	r0 = r6			  ## vsprintf.c:151:13
 1e05930:    b2 08             	r2 = r11			  ## vsprintf.c:151:13
 1e05932:    98 f3 d7 0a       	call 3151278 <memcpy : 106ee4 >			  ## vsprintf.c:151:13
 1e05936:    b6 09             	r6 += r11			  ## vsprintf.c:152:18
 1e05938:    28 18             	goto 80 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e0593a:    00 02             	r0 = [sp]			  ## vsprintf.c:126:20
 1e0593c:    22 f9 03 40       	r2 = b[r4 + 3] (s)			  ## vsprintf.c:124:21
 1e05940:    21 f9 02 40       	r1 = b[r4 + 2] (s)			  ## vsprintf.c:122:21
 1e05944:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:120:20
 1e05948:    45 90             	r5 = r0 + 4			  ## vsprintf.c:126:20
 1e0594a:    0d 02             	[sp] = r5			  ## vsprintf.c:126:20
 1e0594c:    05 fe 0a 19       	r5 = r1 * 10			  ## vsprintf.c:122:36
 1e05950:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:126:20
 1e05952:    80 fe 90 53       	r5 += r3 * r9			  ## vsprintf.c:122:17
 1e05956:    80 ba             	r0 = r5 + r2			  ## vsprintf.c:124:17
 1e05958:    05 fc 30 eb       	r5 = r0 + -5328			  ## vsprintf.c:124:17
 1e0595c:    60 08             	r0 = r6			  ## vsprintf.c:127:13
 1e0595e:    52 08             	r2 = r5			  ## vsprintf.c:127:13
 1e05960:    98 f3 c0 0a       	call 3151232 <memcpy : 106ee4 >			  ## vsprintf.c:127:13
 1e05964:    56 09             	r6 += r5			  ## vsprintf.c:128:18
 1e05966:    34 80             	r4 += 3			  ## vsprintf.c:123:13
 1e05968:    10 18             	goto 32 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e0596a:    00 02             	r0 = [sp]			  ## vsprintf.c:142:20
 1e0596c:    41 90             	r1 = r0 + 4			  ## vsprintf.c:142:20
 1e0596e:    09 02             	[sp] = r1			  ## vsprintf.c:142:20
 1e05970:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:142:20
 1e05972:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:143:21
 1e05974:    00 d2             	r0 = r0 >> 8
 1e05976:    18 6c             	b[r6 + 1] = r0
 1e05978:    26 80             	r6 += 2
 1e0597a:    07 18             	goto 14 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e0597c:    00 02             	r0 = [sp]			  ## vsprintf.c:147:24
 1e0597e:    41 90             	r1 = r0 + 4			  ## vsprintf.c:147:24
 1e05980:    09 02             	[sp] = r1			  ## vsprintf.c:147:24
 1e05982:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:147:24
 1e05986:    01 18             	goto 2 <.GJTIE507_0_0_+0xF8 : 1e0598a >
 1e05988:    36 80             	r6 += 3			  ## vsprintf.c:92:18
 1e0598a:    11 68             	r1 = b[r4 + 1] (u)			  ## vsprintf.c:77:12
 1e0598c:    14 80             	r4 += 1			  ## vsprintf.c:163:15
 1e0598e:    45 33             	if (r1 != 0) goto -374 <__vsprintf+0x14 : 1e0581a >
 1e05990:    90 fb 80 06       	r0 = r6 - r8			  ## vsprintf.c:166:17
 1e05994:    02 0a             	sp += 4			  ## vsprintf.c:166:17
 1e05996:    5b 01             	{pc, r11-r4} = [sp++]			  ## vsprintf.c:166:5


bredr_rx_bulk_free:
 1e05998:    76 01             	[--sp] = {rets, r6-r4}			  ## link_bulk.c:306:0
 1e0599a:    41 60             	r1 = b[r0 + 4] (u)			  ## link_bulk.c:308:29
 1e0599c:    16 50             	r6 = h[r0 + 2] (u)			  ## link_bulk.c:307:20
 1e0599e:    65 b0             	r5 = r0 - r1			  ## link_bulk.c:308:27
 1e059a0:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:311:5
 1e059a4:    50 08             	r0 = r5			  ## link_bulk.c:312:5
 1e059a6:    80 f3 14 3e       	call 31784 <lbuf_free_check : 1e0d5d2 >			  ## link_bulk.c:312:5
 1e059aa:    50 08             	r0 = r5			  ## link_bulk.c:314:21
 1e059ac:    80 f3 31 3e       	call 31842 <lbuf_real_size : 1e0d612 >			  ## link_bulk.c:314:21
 1e059b0:    04 08             	r4 = r0			  ## link_bulk.c:314:21
 1e059b2:    50 08             	r0 = r5			  ## link_bulk.c:315:9
 1e059b4:    80 f3 c7 3b       	call 30606 <lbuf_free : 1e0d146 >			  ## link_bulk.c:315:9
 1e059b8:    0e 20             	if (r0 == 0) goto 28 <bredr_rx_bulk_free+0x3E : 1e059d6 >			  ## link_bulk.c:315:9
 1e059ba:    81 fd 40 06       	r0 = uextra(r6, p:8, l:1)			  ## link_bulk.c:307:20
 1e059be:    80 c0             	r0 = r0 << 2			  ## link_bulk.c:316:18
 1e059c0:    c1 ff 28 23 00 00 	r1 = 9000 <link : 2328 >			  ## link_bulk.c:316:18
 1e059c6:    10 09             	r0 += r1			  ## link_bulk.c:316:18
 1e059c8:    11 50             	r1 = h[r0 + 2] (u)			  ## link_bulk.c:316:28
 1e059ca:    21 b3             	r1 = r1 - r4			  ## link_bulk.c:316:28
 1e059cc:    72 04             	r2 = r1.l (s)			  ## link_bulk.c:316:28
 1e059ce:    02 e0 01 c0       	ifs (r2 > 0) goto 2 <bredr_rx_bulk_free+0x3C : 1e059d4 >			  ## link_bulk.c:316:28
 1e059d2:    01 70             	r1 = 0			  ## link_bulk.c:317:13
 1e059d4:    19 50             	h[r0 + 2] = r1			  ## link_bulk.c:318:32
 1e059d6:    56 01             	{pc, r6-r4} = [sp++]


bredr_tx_bulk_free:
 1e059d8:    74 01             	[--sp] = {rets, r4}			  ## link_bulk.c:435:0
 1e059da:    04 08             	r4 = r0			  ## link_bulk.c:435:0
 1e059dc:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:440:5
 1e059e0:    40 08             	r0 = r4			  ## link_bulk.c:441:5
 1e059e2:    80 f3 f6 3d       	call 31724 <lbuf_free_check : 1e0d5d2 >			  ## link_bulk.c:441:5
 1e059e6:    98 f3 d9 09       	call 3150770 <local_irq_disable : 106d9c >			  ## link_bulk.c:443:5
 1e059ea:    40 48             	r0 = [r4 + 16]			  ## list.h:165:36
 1e059ec:    51 48             	r1 = [r4 + 20]			  ## list.h:165:23
 1e059ee:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e059f0:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e059f2:    98 f3 d1 09       	call 3150754 <local_irq_enable : 106d98 >			  ## link_bulk.c:445:5
 1e059f6:    80 68             	r0 = b[r4 + 8] (u)			  ## link_bulk.c:447:15
 1e059f8:    09 20             	if (r0 == 0) goto 18 <bredr_tx_bulk_free+0x34 : 1e05a0c >			  ## link_bulk.c:447:9
 1e059fa:    02 b8             	r2 = r4 + r0			  ## link_bulk.c:449:14
 1e059fc:    41 64             	r1 = b[r2 + 4] (u)			  ## link_bulk.c:449:14
 1e059fe:    10 f2 02 00       	if (r0 == r1) goto 4 <bredr_tx_bulk_free+0x2E : 1e05a06 >			  ## link_bulk.c:449:14
 1e05a02:    8f f3 48 ed       	call 2087568 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e05a06:    20 08             	r0 = r2			  ## link_bulk.c:451:16
 1e05a08:    14 01             	{rets, r4} = [sp++]			  ## link_bulk.c:451:16
 1e05a0a:    c6 1f             	goto -116 <bredr_rx_bulk_free : 1e05998 >			  ## link_bulk.c:451:16
 1e05a0c:    50 68             	r0 = b[r4 + 5] (u)			  ## link_bulk.c:454:15
 1e05a0e:    25 f3 08 00       	if ((r0 & 32) != 0) goto 16 <bredr_tx_bulk_free+0x4A : 1e05a22 >			  ## link_bulk.c:454:15
 1e05a12:    40 08             	r0 = r4			  ## link_bulk.c:455:9
 1e05a14:    80 f3 97 3b       	call 30510 <lbuf_free : 1e0d146 >			  ## link_bulk.c:455:9
 1e05a18:    c0 ff 30 23 00 00 	r0 = 9008 <acl_tx_bulk_sem : 2330 >			  ## link_bulk.c:456:9
 1e05a1e:    98 f3 f5 09       	call 3150826 <os_sem_post : 106e0c >			  ## link_bulk.c:456:9
 1e05a22:    54 01             	{pc, r4} = [sp++]			  ## link_bulk.c:458:1


bredr_tx_bulk_pop:
 1e05a24:    01 08             	r1 = r0			  ## link_bulk.c:427:0
 1e05a26:    03 42             	r3 = [r1 + 0]			  ## list.h:124:18
 1e05a28:    32 fc f0 ff       	r2 = r3 + -16			  ## link_bulk.c:429:16
 1e05a2c:    00 70             	r0 = 0			  ## link_bulk.c:429:16
 1e05a2e:    13 f2 01 00       	if (r3 == r1) goto 2 <bredr_tx_bulk_pop+0x10 : 1e05a34 >			  ## link_bulk.c:429:16
 1e05a32:    20 08             	r0 = r2			  ## link_bulk.c:428:9
 1e05a34:    20 00             	rts			  ## link_bulk.c:432:1


btctler_little_endian_read_16:
 1e05a36:    10 09             	r0 += r1			  ## btcontroller_util.c:43:0
 1e05a38:    11 60             	r1 = b[r0 + 1] (u)			  ## btcontroller_util.c:44:51
 1e05a3a:    00 60             	r0 = b[r0 + 0] (u)			  ## btcontroller_util.c:44:23
 1e05a3c:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## btcontroller_util.c:44:48
 1e05a40:    20 04             	r0 = r0.l (u)			  ## btcontroller_util.c:44:5
 1e05a42:    20 00             	rts			  ## btcontroller_util.c:44:5


att_iterator_fetch_next:
 1e05a44:    77 01             	[--sp] = {rets, r7-r4}			  ## att_db.c:123:0
 1e05a46:    02 08             	r2 = r0			  ## att_db.c:123:0
 1e05a48:    03 44             	r3 = [r2 + 0]			  ## att_db.c:124:44
 1e05a4a:    01 70             	r1 = 0			  ## att_db.c:124:18
 1e05a4c:    05 70             	r5 = 0			  ## att_db.c:124:18
 1e05a4e:    30 08             	r0 = r3			  ## att_db.c:124:18
 1e05a50:    80 f3 1e 13       	call 9788 <little_endian_read_16 : 1e08090 >			  ## att_db.c:124:18
 1e05a54:    04 08             	r4 = r0			  ## att_db.c:124:18
 1e05a56:    2c 54             	h[r2 + 4] = r4			  ## att_db.c:124:16
 1e05a58:    17 28             	if (r4 == 0) goto 46 <att_iterator_fetch_next+0x44 : 1e05a88 >			  ## att_db.c:124:16
 1e05a5a:    21 70             	r1 = 2			  ## att_db.c:134:18
 1e05a5c:    30 08             	r0 = r3			  ## att_db.c:134:18
 1e05a5e:    80 f3 17 13       	call 9774 <little_endian_read_16 : 1e08090 >			  ## att_db.c:134:18
 1e05a62:    05 08             	r5 = r0			  ## att_db.c:134:18
 1e05a64:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:134:16
 1e05a66:    41 70             	r1 = 4			  ## att_db.c:135:18
 1e05a68:    30 08             	r0 = r3			  ## att_db.c:135:18
 1e05a6a:    80 f3 11 13       	call 9762 <little_endian_read_16 : 1e08090 >			  ## att_db.c:135:18
 1e05a6e:    01 b7             	r1 = r3 + r4			  ## att_db.c:146:17
 1e05a70:    86 70             	r6 = 8			  ## att_db.c:138:9
 1e05a72:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x34 : 1e05a78 >			  ## att_db.c:138:9
 1e05a76:    66 71             	r6 = 22			  ## att_db.c:138:9
 1e05a78:    36 09             	r6 += r3
 1e05a7a:    87 07             	r7 = -8			  ## att_db.c:138:9
 1e05a7c:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x3E : 1e05a82 >			  ## att_db.c:138:9
 1e05a80:    a7 06             	r7 = -22			  ## att_db.c:138:9
 1e05a82:    74 09             	r4 += r7
 1e05a84:    65 96             	r5 = r3 + 6			  ## att_db.c:136:19
 1e05a86:    05 18             	goto 10 <att_iterator_fetch_next+0x4E : 1e05a92 >			  ## att_db.c:136:19
 1e05a88:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:126:19
 1e05a8a:    00 70             	r0 = 0			  ## att_db.c:126:19
 1e05a8c:    04 70             	r4 = 0			  ## att_db.c:126:19
 1e05a8e:    06 70             	r6 = 0			  ## att_db.c:126:19
 1e05a90:    01 70             	r1 = 0			  ## att_db.c:126:19
 1e05a92:    48 54             	h[r2 + 8] = r0			  ## att_db.c:135:16
 1e05a94:    3d 44             	[r2 + 12] = r5			  ## att_db.c:136:16
 1e05a96:    8c 54             	h[r2 + 16] = r4			  ## att_db.c:136:16
 1e05a98:    5e 44             	[r2 + 20] = r6			  ## att_db.c:136:16
 1e05a9a:    09 44             	[r2 + 0] = r1			  ## att_db.c:131:21
 1e05a9c:    57 01             	{pc, r7-r4} = [sp++]			  ## att_db.c:147:1


is_Bluetooth_Base_UUID:
 1e05a9e:    74 01             	[--sp] = {rets, r4}			  ## att_db.c:78:0
 1e05aa0:    04 08             	r4 = r0			  ## att_db.c:78:0
 1e05aa2:    c1 ff 72 30 e1 01 	r1 = 31535218 <bluetooth_base_uuid : 1e13072 >			  ## att_db.c:79:9
 1e05aa8:    c2 70             	r2 = 12			  ## att_db.c:79:9
 1e05aaa:    98 f3 1f 0a       	call 3150910 <memcmp : 106eec >			  ## att_db.c:79:9
 1e05aae:    01 08             	r1 = r0			  ## att_db.c:79:9
 1e05ab0:    00 70             	r0 = 0			  ## att_db.c:79:9
 1e05ab2:    07 32             	if (r1 != 0) goto 14 <is_Bluetooth_Base_UUID+0x24 : 1e05ac2 >			  ## att_db.c:79:9
 1e05ab4:    f0 68             	r0 = b[r4 + 15] (u)			  ## att_db.c:82:9
 1e05ab6:    e1 68             	r1 = b[r4 + 14] (u)			  ## att_db.c:82:9
 1e05ab8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## att_db.c:82:9
 1e05abc:    10 70             	r0 = 1			  ## att_db.c:82:9
 1e05abe:    01 22             	if (r1 == 0) goto 2 <is_Bluetooth_Base_UUID+0x24 : 1e05ac2 >			  ## att_db.c:82:9
 1e05ac0:    00 70             	r0 = 0			  ## att_db.c:82:9
 1e05ac2:    54 01             	{pc, r4} = [sp++]			  ## att_db.c:87:1


att_iterator_match_uuid16:
 1e05ac4:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:150:0
 1e05ac6:    42 50             	r2 = h[r0 + 8] (u)			  ## att_db.c:151:13
 1e05ac8:    14 08             	r4 = r1			  ## att_db.c:151:13
 1e05aca:    05 70             	r5 = 0
 1e05acc:    11 24             	if (r2 == 0) goto 34 <att_iterator_match_uuid16+0x2C : 1e05af0 >
 1e05ace:    71 60             	r1 = b[r0 + 7] (u)			  ## att_db.c:154:19
 1e05ad0:    36 40             	r6 = [r0 + 12]			  ## att_db.c:154:19
 1e05ad2:    21 f3 02 10       	if ((r1 & 2) != 0) goto 4 <att_iterator_match_uuid16+0x16 : 1e05ada >			  ## att_db.c:154:19
 1e05ad6:    01 70             	r1 = 0			  ## att_db.c:160:12
 1e05ad8:    04 18             	goto 8 <att_iterator_match_uuid16+0x1E : 1e05ae2 >			  ## att_db.c:160:12
 1e05ada:    60 08             	r0 = r6			  ## att_db.c:155:14
 1e05adc:    e0 17             	call -64 <is_Bluetooth_Base_UUID : 1e05a9e >			  ## att_db.c:155:14
 1e05ade:    08 20             	if (r0 == 0) goto 16 <att_iterator_match_uuid16+0x2C : 1e05af0 >			  ## att_db.c:155:14
 1e05ae0:    c1 70             	r1 = 12			  ## att_db.c:158:16
 1e05ae2:    60 08             	r0 = r6
 1e05ae4:    80 f3 d4 12       	call 9640 <little_endian_read_16 : 1e08090 >
 1e05ae8:    15 70             	r5 = 1
 1e05aea:    40 f2 01 00       	if (r0 == r4) goto 2 <att_iterator_match_uuid16+0x2C : 1e05af0 >
 1e05aee:    05 70             	r5 = 0
 1e05af0:    50 08             	r0 = r5			  ## att_db.c:161:1
 1e05af2:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:161:1


att_iterator_match_uuid:
 1e05af4:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:164:0
 1e05af6:    05 08             	r5 = r0			  ## att_db.c:164:0
 1e05af8:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:165:13
 1e05afa:    16 08             	r6 = r1			  ## att_db.c:165:13
 1e05afc:    04 70             	r4 = 0
 1e05afe:    26 20             	if (r0 == 0) goto 76 <att_iterator_match_uuid+0x58 : 1e05b4c >
 1e05b00:    22 e0 09 10       	if (r2 != 2) goto 18 <att_iterator_match_uuid+0x22 : 1e05b16 >			  ## att_db.c:169:9
 1e05b04:    01 70             	r1 = 0			  ## att_db.c:170:46
 1e05b06:    60 08             	r0 = r6			  ## att_db.c:170:46
 1e05b08:    80 f3 c2 12       	call 9604 <little_endian_read_16 : 1e08090 >			  ## att_db.c:170:46
 1e05b0c:    01 08             	r1 = r0			  ## att_db.c:170:46
 1e05b0e:    50 08             	r0 = r5			  ## att_db.c:170:16
 1e05b10:    d9 17             	call -78 <att_iterator_match_uuid16 : 1e05ac4 >			  ## att_db.c:170:16
 1e05b12:    04 08             	r4 = r0			  ## att_db.c:170:16
 1e05b14:    1b 18             	goto 54 <att_iterator_match_uuid+0x58 : 1e05b4c >			  ## att_db.c:170:16
 1e05b16:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:173:19
 1e05b18:    21 f3 11 00       	if ((r0 & 2) != 0) goto 34 <att_iterator_match_uuid+0x4A : 1e05b3e >			  ## att_db.c:173:19
 1e05b1c:    60 08             	r0 = r6			  ## att_db.c:177:10
 1e05b1e:    bf 17             	call -130 <is_Bluetooth_Base_UUID : 1e05a9e >			  ## att_db.c:177:10
 1e05b20:    15 20             	if (r0 == 0) goto 42 <att_iterator_match_uuid+0x58 : 1e05b4c >
 1e05b22:    c1 70             	r1 = 12			  ## att_db.c:180:12
 1e05b24:    60 08             	r0 = r6			  ## att_db.c:180:12
 1e05b26:    80 f3 b3 12       	call 9574 <little_endian_read_16 : 1e08090 >			  ## att_db.c:180:12
 1e05b2a:    32 4a             	r2 = [r5 + 12]			  ## att_db.c:180:73
 1e05b2c:    03 08             	r3 = r0			  ## att_db.c:180:12
 1e05b2e:    01 70             	r1 = 0			  ## att_db.c:180:47
 1e05b30:    20 08             	r0 = r2			  ## att_db.c:180:47
 1e05b32:    80 f3 ad 12       	call 9562 <little_endian_read_16 : 1e08090 >			  ## att_db.c:180:47
 1e05b36:    14 70             	r4 = 1			  ## att_db.c:180:44
 1e05b38:    03 f2 07 10       	if (r3 != r0) goto 14 <att_iterator_match_uuid+0x56 : 1e05b4a >			  ## att_db.c:180:44
 1e05b3c:    07 18             	goto 14 <att_iterator_match_uuid+0x58 : 1e05b4c >			  ## att_db.c:180:44
 1e05b3e:    30 4a             	r0 = [r5 + 12]			  ## att_db.c:174:27
 1e05b40:    02 71             	r2 = 16			  ## att_db.c:174:16
 1e05b42:    98 f3 d3 09       	call 3150758 <memcmp : 106eec >			  ## att_db.c:174:16
 1e05b46:    14 70             	r4 = 1			  ## att_db.c:174:43
 1e05b48:    01 20             	if (r0 == 0) goto 2 <att_iterator_match_uuid+0x58 : 1e05b4c >			  ## att_db.c:174:43
 1e05b4a:    04 70             	r4 = 0
 1e05b4c:    40 08             	r0 = r4			  ## att_db.c:181:1
 1e05b4e:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:181:1


att_validate_security:
 1e05b50:    75 01             	[--sp] = {rets, r5, r4}			  ## att_db.c:380:0
 1e05b52:    0d d3             	r5 = r1 >> 12			  ## att_db.c:380:0
 1e05b54:    23 fd 0f 59       	r3 = r5 & 15			  ## att_db.c:381:46
 1e05b58:    14 96             	r4 = r3 + 1			  ## att_db.c:383:33
 1e05b5a:    02 70             	r2 = 0
 1e05b5c:    60 ff 0f 59 01 00 	if ((r5 & 15) == 0) goto 2 <att_validate_security+0x14 : 1e05b64 >
 1e05b62:    42 08             	r2 = r4			  ## att_db.c:382:9
 1e05b64:    0a f3 02 10       	if ((r1 & 1024) == 0) goto 4 <att_validate_security+0x1C : 1e05b6c >
 1e05b68:    74 60             	r4 = b[r0 + 7] (u)			  ## att_db.c:387:79
 1e05b6a:    10 28             	if (r4 == 0) goto 32 <att_validate_security+0x3C : 1e05b8c >			  ## att_db.c:387:79
 1e05b6c:    0b f3 02 10       	if ((r1 & 2048) == 0) goto 4 <att_validate_security+0x24 : 1e05b74 >
 1e05b70:    81 60             	r1 = b[r0 + 8] (u)			  ## att_db.c:390:78
 1e05b72:    0e 22             	if (r1 == 0) goto 28 <att_validate_security+0x40 : 1e05b90 >			  ## att_db.c:390:78
 1e05b74:    11 70             	r1 = 1			  ## att_db.c:393:38
 1e05b76:    01 36             	if (r3 != 0) goto 2 <att_validate_security+0x2A : 1e05b7a >			  ## att_db.c:393:38
 1e05b78:    01 70             	r1 = 0
 1e05b7a:    63 60             	r3 = b[r0 + 6] (u)
 1e05b7c:    02 36             	if (r3 != 0) goto 4 <att_validate_security+0x32 : 1e05b82 >
 1e05b7e:    f0 70             	r0 = 15
 1e05b80:    08 32             	if (r1 != 0) goto 16 <att_validate_security+0x42 : 1e05b92 >
 1e05b82:    c0 70             	r0 = 12			  ## att_db.c:397:9
 1e05b84:    32 f2 05 80       	if (r2 > r3) goto 10 <att_validate_security+0x42 : 1e05b92 >			  ## att_db.c:397:9
 1e05b88:    00 70             	r0 = 0			  ## att_db.c:397:9
 1e05b8a:    03 18             	goto 6 <att_validate_security+0x42 : 1e05b92 >			  ## att_db.c:397:9
 1e05b8c:    50 70             	r0 = 5
 1e05b8e:    01 18             	goto 2 <att_validate_security+0x42 : 1e05b92 >
 1e05b90:    80 70             	r0 = 8
 1e05b92:    00 04             	r0 = r0.b0 (u)			  ## att_db.c:400:1
 1e05b94:    55 01             	{pc, r5, r4} = [sp++]			  ## att_db.c:400:1


att_service_handler_for_handle:
 1e05b96:    34 00             	[--sp] = rets			  ## att_db.c:201:0
 1e05b98:    fa 0b             	sp += -12			  ## att_db.c:201:0
 1e05b9a:    03 08             	r3 = r0			  ## att_db.c:201:0
 1e05b9c:    c1 ff fc 1c 00 00 	r1 = 7420 <att_global_info+0x1C : 1cfc >			  ## att_db.c:203:5
 1e05ba2:    00 a0             	r0 = sp + 0			  ## att_db.c:203:5
 1e05ba4:    80 f3 19 1a       	call 13362 <btstack_linked_list_iterator_init : 1e08fda >			  ## att_db.c:203:5
 1e05ba8:    00 a0             	r0 = sp + 0
 1e05baa:    80 f3 78 12       	call 9456 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## att_db.c:204:12
 1e05bae:    0a 20             	if (r0 == 0) goto 20 <att_service_handler_for_handle+0x2E : 1e05bc4 >
 1e05bb0:    00 a0             	r0 = sp + 0
 1e05bb2:    80 f3 82 12       	call 9476 <btstack_linked_list_iterator_next : 1e080ba >			  ## att_db.c:205:68
 1e05bb6:    21 50             	r1 = h[r0 + 4] (u)			  ## att_db.c:206:22
 1e05bb8:    31 f2 f6 8f       	if (r1 > r3) goto -20 <att_service_handler_for_handle+0x12 : 1e05ba8 >			  ## att_db.c:206:22
 1e05bbc:    31 50             	r1 = h[r0 + 6] (u)			  ## att_db.c:209:22
 1e05bbe:    31 f2 f3 3f       	if (r1 < r3) goto -26 <att_service_handler_for_handle+0x12 : 1e05ba8 >			  ## att_db.c:209:22
 1e05bc2:    01 18             	goto 2 <att_service_handler_for_handle+0x30 : 1e05bc6 >			  ## att_db.c:209:22
 1e05bc4:    00 70             	r0 = 0
 1e05bc6:    06 0a             	sp += 12
 1e05bc8:    30 00             	pc = [sp++]			  ## att_db.c:215:1


att_update_value_len:
 1e05bca:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:251:0
 1e05bcc:    fe 0b             	sp += -4			  ## att_db.c:251:0
 1e05bce:    04 08             	r4 = r0			  ## att_db.c:251:0
 1e05bd0:    70 68             	r0 = b[r4 + 7] (u)			  ## att_db.c:252:44
 1e05bd2:    15 08             	r5 = r1			  ## att_db.c:252:44
 1e05bd4:    00 f3 12 00       	if ((r0 & 1) == 0) goto 36 <att_update_value_len+0x32 : 1e05bfc >
 1e05bd8:    40 58             	r0 = h[r4 + 8] (u)			  ## att_db.c:219:38
 1e05bda:    dd 17             	call -70 <att_service_handler_for_handle : 1e05b96 >			  ## att_db.c:219:38
 1e05bdc:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e05bde:    c1 ff f0 1c 00 00 	r1 = 7408 <att_global_info+0x10 : 1cf0 >			  ## att_db.c:220:9
 1e05be4:    01 20             	if (r0 == 0) goto 2 <att_update_value_len+0x1E : 1e05be8 >			  ## att_db.c:220:9
 1e05be6:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e05be8:    06 42             	r6 = [r1 + 0]
 1e05bea:    08 2c             	if (r6 == 0) goto 16 <att_update_value_len+0x32 : 1e05bfc >
 1e05bec:    41 58             	r1 = h[r4 + 8] (u)			  ## att_db.c:259:21
 1e05bee:    00 70             	r0 = 0			  ## att_db.c:259:21
 1e05bf0:    02 70             	r2 = 0			  ## att_db.c:259:21
 1e05bf2:    03 70             	r3 = 0			  ## att_db.c:259:21
 1e05bf4:    08 02             	[sp] = r0			  ## att_db.c:259:21
 1e05bf6:    50 08             	r0 = r5			  ## att_db.c:259:21
 1e05bf8:    86 00             	call r6			  ## att_db.c:259:21
 1e05bfa:    88 58             	h[r4 + 16] = r0			  ## att_db.c:259:19
 1e05bfc:    02 0a             	sp += 4
 1e05bfe:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:261:1


att_copy_value:
 1e05c00:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:265:0
 1e05c02:    fe 0b             	sp += -4			  ## att_db.c:265:0
 1e05c04:    05 08             	r5 = r0			  ## att_db.c:265:0
 1e05c06:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:268:19
 1e05c08:    36 08             	r6 = r3
 1e05c0a:    28 08             	r8 = r2
 1e05c0c:    17 08             	r7 = r1
 1e05c0e:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <att_copy_value+0x2C : 1e05c2c >
 1e05c12:    80 5a             	r0 = h[r5 + 16] (u)			  ## att_db.c:277:34
 1e05c14:    e0 b1             	r0 = r0 - r7			  ## att_db.c:277:44
 1e05c16:    21 04             	r1 = r0.l (u)			  ## att_db.c:277:44
 1e05c18:    61 f2 01 80       	if (r1 > r6) goto 2 <att_copy_value+0x1E : 1e05c1e >			  ## att_db.c:277:44
 1e05c1c:    06 08             	r6 = r0			  ## att_db.c:278:9
 1e05c1e:    51 4a             	r1 = [r5 + 20]			  ## att_db.c:281:24
 1e05c20:    a5 05             	r5 = r6.l (u)			  ## att_db.c:281:31
 1e05c22:    80 08             	r0 = r8			  ## att_db.c:281:5
 1e05c24:    52 08             	r2 = r5			  ## att_db.c:281:5
 1e05c26:    98 f3 5d 09       	call 3150522 <memcpy : 106ee4 >			  ## att_db.c:281:5
 1e05c2a:    13 18             	goto 38 <att_copy_value+0x52 : 1e05c52 >			  ## att_db.c:281:5
 1e05c2c:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:219:38
 1e05c2e:    b3 17             	call -154 <att_service_handler_for_handle : 1e05b96 >			  ## att_db.c:219:38
 1e05c30:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e05c32:    c1 ff f0 1c 00 00 	r1 = 7408 <att_global_info+0x10 : 1cf0 >			  ## att_db.c:220:9
 1e05c38:    01 20             	if (r0 == 0) goto 2 <att_copy_value+0x3C : 1e05c3c >			  ## att_db.c:220:9
 1e05c3a:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e05c3c:    04 42             	r4 = [r1 + 0]
 1e05c3e:    08 28             	if (r4 == 0) goto 16 <att_copy_value+0x50 : 1e05c50 >
 1e05c40:    70 02             	r0 = [sp+28]
 1e05c42:    41 5a             	r1 = h[r5 + 8] (u)			  ## att_db.c:273:16
 1e05c44:    0e 02             	[sp] = r6			  ## att_db.c:273:16
 1e05c46:    72 08             	r2 = r7			  ## att_db.c:273:16
 1e05c48:    83 08             	r3 = r8			  ## att_db.c:273:16
 1e05c4a:    84 00             	call r4			  ## att_db.c:273:16
 1e05c4c:    05 08             	r5 = r0			  ## att_db.c:273:16
 1e05c4e:    01 18             	goto 2 <att_copy_value+0x52 : 1e05c52 >
 1e05c50:    05 70             	r5 = 0
 1e05c52:    50 08             	r0 = r5			  ## att_db.c:283:1
 1e05c54:    02 0a             	sp += 4			  ## att_db.c:283:1
 1e05c56:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:283:1


att_find_handle:
 1e05c58:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:185:0
 1e05c5a:    15 08             	r5 = r1			  ## att_db.c:185:0
 1e05c5c:    06 08             	r6 = r0			  ## att_db.c:185:0
 1e05c5e:    04 70             	r4 = 0			  ## att_db.c:185:0
 1e05c60:    0f 2a             	if (r5 == 0) goto 30 <att_find_handle+0x28 : 1e05c80 >			  ## att_db.c:185:0
 1e05c62:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:114:27
 1e05c68:    30 40             	r0 = [r0 + 12]			  ## att_db.c:114:27
 1e05c6a:    08 4c             	[r6 + 0] = r0			  ## att_db.c:114:17
 1e05c6c:    09 20             	if (r0 == 0) goto 18 <att_find_handle+0x28 : 1e05c80 >			  ## att_db.c:114:17
 1e05c6e:    60 08             	r0 = r6			  ## att_db.c:191:9
 1e05c70:    e9 16             	call -558 <att_iterator_fetch_next : 1e05a44 >			  ## att_db.c:191:9
 1e05c72:    40 5c             	r0 = h[r6 + 8] (u)			  ## att_db.c:192:17
 1e05c74:    50 f2 03 00       	if (r0 == r5) goto 6 <att_find_handle+0x26 : 1e05c7e >			  ## att_db.c:192:17
 1e05c78:    00 4c             	r0 = [r6 + 0]
 1e05c7a:    f9 31             	if (r0 != 0) goto -14 <att_find_handle+0x16 : 1e05c6e >
 1e05c7c:    01 18             	goto 2 <att_find_handle+0x28 : 1e05c80 >
 1e05c7e:    14 70             	r4 = 1
 1e05c80:    40 08             	r0 = r4			  ## att_db.c:198:1
 1e05c82:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:198:1


att_notify_write_callbacks:
 1e05c84:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:1130:0
 1e05c86:    f6 0b             	sp += -20			  ## att_db.c:1130:0
 1e05c88:    14 08             	r4 = r1			  ## att_db.c:1130:0
 1e05c8a:    05 08             	r5 = r0			  ## att_db.c:1130:0
 1e05c8c:    c8 ff e0 1c 00 00 	r8 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:1130:0
 1e05c92:    81 fc 1c 00       	r1 = r8 + 28			  ## att_db.c:1133:5
 1e05c96:    80 a0             	r0 = sp + 8			  ## att_db.c:1133:5
 1e05c98:    80 f3 9f 19       	call 13118 <btstack_linked_list_iterator_init : 1e08fda >			  ## att_db.c:1133:5
 1e05c9c:    80 f3 ff 11       	call 9214 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## att_db.c:1134:12
 1e05ca0:    11 20             	if (r0 == 0) goto 34 <att_notify_write_callbacks+0x40 : 1e05cc4 >			  ## att_db.c:1134:12
 1e05ca2:    07 70             	r7 = 0
 1e05ca4:    80 a0             	r0 = sp + 8
 1e05ca6:    80 f3 08 12       	call 9232 <btstack_linked_list_iterator_next : 1e080ba >			  ## att_db.c:1135:68
 1e05caa:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1136:23
 1e05cac:    07 2c             	if (r6 == 0) goto 14 <att_notify_write_callbacks+0x38 : 1e05cbc >			  ## att_db.c:1136:23
 1e05cae:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1139:9
 1e05cb0:    1f 02             	[sp+4] = r7			  ## att_db.c:1139:9
 1e05cb2:    01 70             	r1 = 0			  ## att_db.c:1139:9
 1e05cb4:    03 70             	r3 = 0			  ## att_db.c:1139:9
 1e05cb6:    0f 02             	[sp] = r7			  ## att_db.c:1139:9
 1e05cb8:    42 08             	r2 = r4			  ## att_db.c:1139:9
 1e05cba:    86 00             	call r6			  ## att_db.c:1139:9
 1e05cbc:    80 a0             	r0 = sp + 8
 1e05cbe:    80 f3 ee 11       	call 9180 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## att_db.c:1134:12
 1e05cc2:    f0 31             	if (r0 != 0) goto -32 <att_notify_write_callbacks+0x20 : 1e05ca4 >
 1e05cc4:    06 f6 14 80       	r6 = [r8 + 20]			  ## att_db.c:1141:18
 1e05cc8:    08 2c             	if (r6 == 0) goto 16 <att_notify_write_callbacks+0x56 : 1e05cda >			  ## att_db.c:1141:18
 1e05cca:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1144:5
 1e05ccc:    02 70             	r2 = 0			  ## att_db.c:1144:5
 1e05cce:    1a 02             	[sp+4] = r2			  ## att_db.c:1144:5
 1e05cd0:    01 70             	r1 = 0			  ## att_db.c:1144:5
 1e05cd2:    03 70             	r3 = 0			  ## att_db.c:1144:5
 1e05cd4:    0a 02             	[sp] = r2			  ## att_db.c:1144:5
 1e05cd6:    42 08             	r2 = r4			  ## att_db.c:1144:5
 1e05cd8:    86 00             	call r6			  ## att_db.c:1144:5
 1e05cda:    0a 0a             	sp += 20
 1e05cdc:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:1145:1


att_handle_request:
 1e05cde:    7f 01             	[--sp] = {rets, r15-r4}			  ## att_db.c:1284:0
 1e05ce0:    78 0b             	sp += -272			  ## att_db.c:1284:0
 1e05ce2:    16 08             	r6 = r1			  ## att_db.c:1284:0
 1e05ce4:    01 6c             	r1 = b[r6 + 0] (u)			  ## att_db.c:1284:0
 1e05ce6:    3d 08             	r13 = r3			  ## att_db.c:1284:0
 1e05ce8:    27 08             	r7 = r2			  ## att_db.c:1284:0
 1e05cea:    0c 08             	r12 = r0			  ## att_db.c:1284:0
 1e05cec:    10 fc fe ff       	r0 = r1 + -2			  ## att_db.c:1288:5
 1e05cf0:    0e 70             	r14 = 0			  ## att_db.c:1288:5
 1e05cf2:    ca ff e0 1c 00 00 	r10 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:1288:5
 1e05cf8:    60 e1 32 80       	if (r0 > 22) goto 100 <.GJTIE683_0_0_+0x2E : 1e05d60 >			  ## att_db.c:1288:5
 1e05cfc:    0f f7 02 c0       	r15 = h[r12 + 2] (u)			  ## att_db.c:1286:53
 1e05d00:    41 c0             	r1 = r0 << 1			  ## att_db.c:1286:53
 1e05d02:    b1 00             	tbh [r1]			  ## att_db.c:1286:53


.GJTIL683_0_0_:
 1e05d04:    17 00     < 23 : 0x17 >
 1e05d06:    5e 00     < 94 : 0x5E >
 1e05d08:    70 00     < 112 : 0x70 >
 1e05d0a:    bb 04     < 1211 : 0x4BB >
 1e05d0c:    c7 00     < 199 : 0xC7 >
 1e05d0e:    bb 04     < 1211 : 0x4BB >
 1e05d10:    35 01     < 309 : 0x135 >
 1e05d12:    bb 04     < 1211 : 0x4BB >
 1e05d14:    ba 01     < 442 : 0x1BA >
 1e05d16:    bb 04     < 1211 : 0x4BB >
 1e05d18:    d2 01     < 466 : 0x1D2 >
 1e05d1a:    bb 04     < 1211 : 0x4BB >
 1e05d1c:    ef 01     < 495 : 0x1EF >
 1e05d1e:    bb 04     < 1211 : 0x4BB >
 1e05d20:    31 02     < 561 : 0x231 >
 1e05d22:    bb 04     < 1211 : 0x4BB >
 1e05d24:    61 02     < 609 : 0x261 >
 1e05d26:    bb 04     < 1211 : 0x4BB >
 1e05d28:    bb 04     < 1211 : 0x4BB >
 1e05d2a:    bb 04     < 1211 : 0x4BB >
 1e05d2c:    7f 02     < 639 : 0x27F >
 1e05d2e:    bb 04     < 1211 : 0x4BB >
 1e05d30:    a9 02     < 681 : 0x2A9 >
 1e05d32:    11 70             	r1 = 1			  ## att_db.c:411:30
 1e05d34:    60 08             	r0 = r6			  ## att_db.c:411:30
 1e05d36:    80 f3 ab 11       	call 9046 <little_endian_read_16 : 1e08090 >			  ## att_db.c:411:30
 1e05d3a:    01 f7 04 c0       	r1 = h[r12 + 4] (u)			  ## att_db.c:414:41
 1e05d3e:    10 f2 01 30       	if (r0 < r1) goto 2 <.GJTIE683_0_0_+0x12 : 1e05d44 >			  ## att_db.c:414:41
 1e05d42:    10 08             	r0 = r1			  ## att_db.c:416:5
 1e05d44:    10 f7 02 c0       	h[r12 + 2] = r0
 1e05d48:    3e 70             	r14 = 3
 1e05d4a:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:420:24
 1e05d4e:    02 f7 02 c0       	r2 = h[r12 + 2] (u)			  ## att_db.c:421:5
 1e05d52:    11 70             	r1 = 1			  ## att_db.c:421:5
 1e05d54:    d0 08             	r0 = r13			  ## att_db.c:421:5
 1e05d56:    80 f3 18 27       	call 20016 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:421:5
 1e05d5a:    01 f7 02 c0       	r1 = h[r12 + 2] (u)			  ## att_db.c:422:5
 1e05d5e:    3c 18             	goto 120 <.GJTIE683_0_0_+0xA6 : 1e05dd8 >			  ## att_db.c:422:5
 1e05d60:    21 e5 8b 14       	if (r1 != 82) goto 2326 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e05d64:    11 70             	r1 = 1			  ## att_db.c:1217:23
 1e05d66:    60 08             	r0 = r6			  ## att_db.c:1217:23
 1e05d68:    80 f3 92 11       	call 8996 <little_endian_read_16 : 1e08090 >			  ## att_db.c:1217:23
 1e05d6c:    04 08             	r4 = r0			  ## att_db.c:1217:23
 1e05d6e:    13 17             	call -474 <att_service_handler_for_handle : 1e05b96 >			  ## att_db.c:228:38
 1e05d70:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e05d72:    a1 fc 14 00       	r1 = r10 + 20			  ## att_db.c:229:9
 1e05d76:    01 20             	if (r0 == 0) goto 2 <.GJTIE683_0_0_+0x48 : 1e05d7a >			  ## att_db.c:229:9
 1e05d78:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e05d7a:    08 f6 00 10       	r8 = [r1 + 0]
 1e05d7e:    08 e0 7c 04       	if (r8 == 0) goto 2296 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e05d82:    80 af             	r0 = sp + 248
 1e05d84:    41 08             	r1 = r4			  ## att_db.c:1224:14
 1e05d86:    68 17             	call -304 <att_find_handle : 1e05c58 >			  ## att_db.c:1224:14
 1e05d88:    00 e0 77 04       	if (r0 == 0) goto 2286 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e05d8c:    81 f5 fe 00       	r1 = h[sp+254] (u)			  ## att_db.c:1228:13
 1e05d90:    00 fb 04 01       	r0 = 260 <DRIVER_RAM_TOTAL+0x12 : 104 >			  ## att_db.c:1228:9
 1e05d94:    50 b3             	r0 &= r1			  ## att_db.c:1228:9
 1e05d96:    01 ff 04 01 6f 04 	if (r0 != 260) goto 2270 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:1228:9
 1e05d9c:    c0 08             	r0 = r12			  ## att_db.c:1234:9
 1e05d9e:    d8 16             	call -592 <att_validate_security : 1e05b50 >			  ## att_db.c:1234:9
 1e05da0:    00 e0 6b 14       	if (r0 != 0) goto 2262 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:1234:9
 1e05da4:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1237:5
 1e05da8:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1237:115
 1e05dac:    61 04             	r1 = r1.l (u)			  ## att_db.c:1237:5
 1e05dae:    19 02             	[sp+4] = r1			  ## att_db.c:1237:5
 1e05db0:    31 9c             	r1 = r6 + 3			  ## att_db.c:1237:98
 1e05db2:    02 70             	r2 = 0			  ## att_db.c:1237:5
 1e05db4:    03 70             	r3 = 0			  ## att_db.c:1237:5
 1e05db6:    09 02             	[sp] = r1			  ## att_db.c:1237:5
 1e05db8:    41 08             	r1 = r4			  ## att_db.c:1237:5
 1e05dba:    88 00             	call r8			  ## att_db.c:1237:5
 1e05dbc:    c0 f3 5d 04       	goto 2234 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:1237:5
 1e05dc0:    11 70             	r1 = 1			  ## att_db.c:431:30
 1e05dc2:    60 08             	r0 = r6			  ## att_db.c:431:30
 1e05dc4:    80 f3 64 11       	call 8904 <little_endian_read_16 : 1e08090 >			  ## att_db.c:431:30
 1e05dc8:    02 f7 04 c0       	r2 = h[r12 + 4] (u)			  ## att_db.c:434:41
 1e05dcc:    01 08             	r1 = r0			  ## att_db.c:431:30
 1e05dce:    21 f2 01 30       	if (r1 < r2) goto 2 <.GJTIE683_0_0_+0xA2 : 1e05dd4 >			  ## att_db.c:431:30
 1e05dd2:    21 08             	r1 = r2			  ## att_db.c:436:5
 1e05dd4:    11 f7 02 c0       	h[r12 + 2] = r1
 1e05dd8:    00 f7 00 c0       	r0 = h[r12 + 0] (u)
 1e05ddc:    80 f3 e0 30       	call 25024 <gatt_client_sync_mtu : 1e0bfa0 >
 1e05de0:    c0 f3 4b 04       	goto 2198 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e05de4:    11 70             	r1 = 1			  ## att_db.c:524:100
 1e05de6:    1e 70             	r14 = 1			  ## att_db.c:524:100
 1e05de8:    60 08             	r0 = r6			  ## att_db.c:524:100
 1e05dea:    80 f3 51 11       	call 8866 <little_endian_read_16 : 1e08090 >			  ## att_db.c:524:100
 1e05dee:    05 08             	r5 = r0			  ## att_db.c:524:100
 1e05df0:    31 70             	r1 = 3			  ## att_db.c:524:142
 1e05df2:    60 08             	r0 = r6			  ## att_db.c:524:142
 1e05df4:    80 f3 4c 11       	call 8856 <little_endian_read_16 : 1e08090 >			  ## att_db.c:524:142
 1e05df8:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:459:35
 1e05dfc:    61 04             	r1 = r1.l (u)			  ## att_db.c:459:35
 1e05dfe:    06 08             	r6 = r0			  ## att_db.c:524:142
 1e05e00:    61 f2 42 22       	if (r1 >= r6) goto 1156 <.GJTIE683_0_0_+0x556 : 1e06288 >
 1e05e04:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e05e08:    58 02             	[sp+20] = r0			  ## att_db.c:114:17
 1e05e0a:    08 70             	r8 = 0			  ## att_db.c:114:17
 1e05e0c:    37 18             	goto 110 <.GJTIE683_0_0_+0x14A : 1e05e7c >			  ## att_db.c:114:17
 1e05e0e:    40 a1             	r0 = sp + 20
 1e05e10:    19 16             	call -974 <att_iterator_fetch_next : 1e05a44 >			  ## att_db.c:469:9
 1e05e12:    82 f5 1c 00       	r2 = h[sp+28] (u)			  ## att_db.c:470:17
 1e05e16:    20 fc ff ff       	r0 = r2 + -1			  ## att_db.c:470:13
 1e05e1a:    20 04             	r0 = r0.l (u)			  ## att_db.c:470:13
 1e05e1c:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE683_0_0_+0x14E : 1e05e80 >			  ## att_db.c:470:13
 1e05e20:    52 f2 2c 30       	if (r2 < r5) goto 88 <.GJTIE683_0_0_+0x14A : 1e05e7c >
 1e05e24:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## att_db.c:482:38
 1e05e28:    00 71             	r0 = 16			  ## att_db.c:482:34
 1e05e2a:    29 f3 01 10       	if ((r1 & 512) != 0) goto 2 <.GJTIE683_0_0_+0xFE : 1e05e30 >			  ## att_db.c:482:34
 1e05e2e:    20 70             	r0 = 2			  ## att_db.c:482:34
 1e05e30:    e6 fd 00 3e       	r3 = r14.l (u)			  ## att_db.c:485:13
 1e05e34:    23 e0 05 30       	if (r3 < 2) goto 10 <.GJTIE683_0_0_+0x110 : 1e05e42 >			  ## att_db.c:485:13
 1e05e38:    e6 fd 00 48       	r4 = r8.l (u)
 1e05e3c:    27 04             	r7 = r0.l (u)
 1e05e3e:    47 f2 1f 10       	if (r7 != r4) goto 62 <.GJTIE683_0_0_+0x14E : 1e05e80 >
 1e05e42:    13 e0 09 10       	if (r3 != 1) goto 18 <.GJTIE683_0_0_+0x126 : 1e05e58 >
 1e05e46:    21 fd 02 1a       	r1 = r1 & 512			  ## att_db.c:482:44
 1e05e4a:    87 fd 48 11       	r1 = uextra(r1, p:9, l:7)			  ## att_db.c:495:39
 1e05e4e:    11 80             	r1 += 1			  ## att_db.c:495:39
 1e05e50:    11 fa 00 d3       	b[r13+r3] = r1			  ## att_db.c:495:37
 1e05e54:    2e 70             	r14 = 2			  ## att_db.c:495:37
 1e05e56:    08 08             	r8 = r0			  ## att_db.c:495:37
 1e05e58:    e6 fd 00 38       	r3 = r8.l (u)			  ## att_db.c:500:26
 1e05e5c:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:500:13
 1e05e60:    24 92             	r4 = r1 + 2			  ## att_db.c:500:20
 1e05e62:    c7 b8             	r7 = r4 + r3			  ## att_db.c:500:24
 1e05e64:    f7 f2 7e 82       	if (r7 > r15) goto 1276 <.GJTIE683_0_0_+0x632 : 1e06364 >			  ## att_db.c:500:24
 1e05e68:    d0 08             	r0 = r13			  ## att_db.c:505:9
 1e05e6a:    80 f3 8e 26       	call 19740 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:505:9
 1e05e6e:    81 02             	r1 = [sp+32]			  ## att_db.c:508:45
 1e05e70:    20 05             	r0 = r4.l (u)			  ## att_db.c:508:34
 1e05e72:    d0 09             	r0 += r13			  ## att_db.c:508:32
 1e05e74:    32 08             	r2 = r3			  ## att_db.c:508:9
 1e05e76:    98 f3 35 08       	call 3149930 <memcpy : 106ee4 >			  ## att_db.c:508:9
 1e05e7a:    7e 08             	r14 = r7			  ## att_db.c:508:9
 1e05e7c:    50 02             	r0 = [sp+20]			  ## att_db.c:119:16
 1e05e7e:    c7 31             	if (r0 != 0) goto -114 <.GJTIE683_0_0_+0xDC : 1e05e0e >			  ## att_db.c:119:16
 1e05e80:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:512:16
 1e05e84:    10 e0 6e 12       	if (r0 != 1) goto 1244 <.GJTIE683_0_0_+0x632 : 1e06364 >			  ## att_db.c:512:16
 1e05e88:    10 70             	r0 = 1
 1e05e8a:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e05e8e:    40 70             	r0 = 4			  ## att_db.c:347:24
 1e05e90:    de 1b             	goto 1980 <.GJTIE683_0_0_+0x91C : 1e0664e >			  ## att_db.c:347:24
 1e05e92:    11 70             	r1 = 1			  ## att_db.c:609:102
 1e05e94:    14 70             	r4 = 1			  ## att_db.c:609:102
 1e05e96:    60 08             	r0 = r6			  ## att_db.c:609:102
 1e05e98:    80 f3 fa 10       	call 8692 <little_endian_read_16 : 1e08090 >			  ## att_db.c:609:102
 1e05e9c:    05 08             	r5 = r0			  ## att_db.c:609:102
 1e05e9e:    31 70             	r1 = 3			  ## att_db.c:610:13
 1e05ea0:    60 08             	r0 = r6			  ## att_db.c:610:13
 1e05ea2:    80 f3 f5 10       	call 8682 <little_endian_read_16 : 1e08090 >			  ## att_db.c:610:13
 1e05ea6:    08 08             	r8 = r0			  ## att_db.c:610:13
 1e05ea8:    51 70             	r1 = 5			  ## att_db.c:610:55
 1e05eaa:    5e 70             	r14 = 5			  ## att_db.c:610:55
 1e05eac:    60 08             	r0 = r6			  ## att_db.c:610:55
 1e05eae:    80 f3 ef 10       	call 8670 <little_endian_read_16 : 1e08090 >			  ## att_db.c:610:55
 1e05eb2:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:550:35
 1e05eb6:    61 04             	r1 = r1.l (u)			  ## att_db.c:550:35
 1e05eb8:    09 08             	r9 = r0			  ## att_db.c:610:55
 1e05eba:    81 f2 f2 21       	if (r1 >= r8) goto 996 <.GJTIE683_0_0_+0x570 : 1e062a2 >
 1e05ebe:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e05ec2:    7a 9c             	r10 = r6 + 7			  ## att_db.c:610:113
 1e05ec4:    71 fc f9 ff       	r1 = r7 + -7			  ## att_db.c:608:37
 1e05ec8:    b8 02             	[sp+44] = r0			  ## att_db.c:114:17
 1e05eca:    6b 04             	r11 = r1.l (u)			  ## att_db.c:114:17
 1e05ecc:    0c 70             	r12 = 0			  ## att_db.c:114:17
 1e05ece:    07 70             	r7 = 0
 1e05ed0:    3a 18             	goto 116 <.GJTIE683_0_0_+0x214 : 1e05f46 >
 1e05ed2:    c0 a2             	r0 = sp + 44
 1e05ed4:    b7 15             	call -1170 <att_iterator_fetch_next : 1e05a44 >			  ## att_db.c:561:9
 1e05ed6:    86 f5 34 00       	r6 = h[sp+52] (u)			  ## att_db.c:563:16
 1e05eda:    02 2c             	if (r6 == 0) goto 4 <.GJTIE683_0_0_+0x1AE : 1e05ee0 >
 1e05edc:    56 f2 33 30       	if (r6 < r5) goto 102 <.GJTIE683_0_0_+0x214 : 1e05f46 >
 1e05ee0:    86 f2 33 80       	if (r6 > r8) goto 102 <.GJTIE683_0_0_+0x218 : 1e05f4a >
 1e05ee4:    e6 fd 00 0c       	r0 = r12.l (u)			  ## att_db.c:571:22
 1e05ee8:    15 20             	if (r0 == 0) goto 42 <.GJTIE683_0_0_+0x1E2 : 1e05f14 >			  ## att_db.c:571:22
 1e05eea:    0a 2c             	if (r6 == 0) goto 20 <.GJTIE683_0_0_+0x1CE : 1e05f00 >
 1e05eec:    c0 a2             	r0 = sp + 44
 1e05eee:    01 fb 00 28       	r1 = 10240 <lrc.7+0xC : 2800 >			  ## att_db.c:572:32
 1e05ef2:    e8 15             	call -1072 <att_iterator_match_uuid16 : 1e05ac4 >			  ## att_db.c:572:32
 1e05ef4:    05 30             	if (r0 != 0) goto 10 <.GJTIE683_0_0_+0x1CE : 1e05f00 >
 1e05ef6:    c0 a2             	r0 = sp + 44
 1e05ef8:    01 fb 01 28       	r1 = 10241 <lrc.7+0xD : 2801 >			  ## att_db.c:572:93
 1e05efc:    e3 15             	call -1082 <att_iterator_match_uuid16 : 1e05ac4 >			  ## att_db.c:572:93
 1e05efe:    0d 20             	if (r0 == 0) goto 26 <.GJTIE683_0_0_+0x1E8 : 1e05f1a >
 1e05f00:    21 05             	r1 = r4.l (u)			  ## att_db.c:575:13
 1e05f02:    d0 08             	r0 = r13			  ## att_db.c:575:13
 1e05f04:    72 08             	r2 = r7			  ## att_db.c:575:13
 1e05f06:    80 f3 40 26       	call 19584 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:575:13
 1e05f0a:    24 80             	r4 += 2			  ## att_db.c:576:20
 1e05f0c:    20 05             	r0 = r4.l (u)			  ## att_db.c:580:17
 1e05f0e:    40 80             	r0 += 4			  ## att_db.c:580:24
 1e05f10:    f0 f2 1b 80       	if (r0 > r15) goto 54 <.GJTIE683_0_0_+0x218 : 1e05f4a >			  ## att_db.c:580:24
 1e05f14:    0c 70             	r12 = 0
 1e05f16:    07 70             	r7 = 0
 1e05f18:    16 2c             	if (r6 == 0) goto 44 <.GJTIE683_0_0_+0x214 : 1e05f46 >
 1e05f1a:    c0 a2             	r0 = sp + 44
 1e05f1c:    91 08             	r1 = r9			  ## att_db.c:589:26
 1e05f1e:    d2 15             	call -1116 <att_iterator_match_uuid16 : 1e05ac4 >			  ## att_db.c:589:26
 1e05f20:    67 08             	r7 = r6
 1e05f22:    11 20             	if (r0 == 0) goto 34 <.GJTIE683_0_0_+0x214 : 1e05f46 >
 1e05f24:    80 f5 3c 00       	r0 = h[sp+60] (u)			  ## att_db.c:589:96
 1e05f28:    b0 f2 0d 10       	if (r0 != r11) goto 26 <.GJTIE683_0_0_+0x214 : 1e05f46 >			  ## att_db.c:589:96
 1e05f2c:    01 03             	r1 = [sp+64]			  ## att_db.c:589:136
 1e05f2e:    a0 08             	r0 = r10			  ## att_db.c:589:109
 1e05f30:    b2 08             	r2 = r11			  ## att_db.c:589:109
 1e05f32:    98 f3 db 07       	call 3149750 <memcmp : 106eec >			  ## att_db.c:589:109
 1e05f36:    07 30             	if (r0 != 0) goto 14 <.GJTIE683_0_0_+0x214 : 1e05f46 >			  ## att_db.c:589:109
 1e05f38:    21 05             	r1 = r4.l (u)			  ## att_db.c:591:13
 1e05f3a:    d0 08             	r0 = r13			  ## att_db.c:591:13
 1e05f3c:    62 08             	r2 = r6			  ## att_db.c:591:13
 1e05f3e:    80 f3 24 26       	call 19528 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:591:13
 1e05f42:    24 80             	r4 += 2			  ## att_db.c:592:20
 1e05f44:    1c 70             	r12 = 1
 1e05f46:    b0 02             	r0 = [sp+44]			  ## att_db.c:119:16
 1e05f48:    c4 31             	if (r0 != 0) goto -120 <.GJTIE683_0_0_+0x1A0 : 1e05ed2 >			  ## att_db.c:119:16
 1e05f4a:    20 05             	r0 = r4.l (u)			  ## att_db.c:597:16
 1e05f4c:    10 e0 0c 12       	if (r0 != 1) goto 1048 <.GJTIE683_0_0_+0x636 : 1e06368 >			  ## att_db.c:597:9
 1e05f50:    10 70             	r0 = 1
 1e05f52:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e05f56:    60 70             	r0 = 6			  ## att_db.c:348:24
 1e05f58:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e05f5c:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e05f5e:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e05f60:    52 08             	r2 = r5			  ## att_db.c:349:5
 1e05f62:    80 f3 12 26       	call 19492 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:349:5
 1e05f66:    a0 70             	r0 = 10			  ## att_db.c:350:24
 1e05f68:    10 f9 04 d0       	b[r13 + 4] = r0			  ## att_db.c:350:24
 1e05f6c:    86 1b             	goto 1804 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:350:24
 1e05f6e:    22 70             	r2 = 2			  ## att_db.c:730:5
 1e05f70:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE683_0_0_+0x244 : 1e05f76 >			  ## att_db.c:730:5
 1e05f74:    02 71             	r2 = 16			  ## att_db.c:730:5
 1e05f76:    11 70             	r1 = 1			  ## att_db.c:733:96
 1e05f78:    13 70             	r3 = 1			  ## att_db.c:733:96
 1e05f7a:    60 08             	r0 = r6			  ## att_db.c:733:96
 1e05f7c:    80 f3 88 10       	call 8464 <little_endian_read_16 : 1e08090 >			  ## att_db.c:733:96
 1e05f80:    07 08             	r7 = r0			  ## att_db.c:733:96
 1e05f82:    31 70             	r1 = 3			  ## att_db.c:733:138
 1e05f84:    60 08             	r0 = r6			  ## att_db.c:733:138
 1e05f86:    80 f3 83 10       	call 8454 <little_endian_read_16 : 1e08090 >			  ## att_db.c:733:138
 1e05f8a:    71 fc ff ff       	r1 = r7 + -1			  ## att_db.c:625:35
 1e05f8e:    61 04             	r1 = r1.l (u)			  ## att_db.c:625:35
 1e05f90:    08 08             	r8 = r0			  ## att_db.c:733:138
 1e05f92:    01 f2 90 21       	if (r1 >= r0) goto 800 <.GJTIE683_0_0_+0x584 : 1e062b6 >			  ## att_db.c:733:138
 1e05f96:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e05f9a:    18 03             	[sp+68] = r0			  ## att_db.c:114:17
 1e05f9c:    00 e0 4c 02       	if (r0 == 0) goto 1176 <.GJTIE683_0_0_+0x706 : 1e06438 >
 1e05fa0:    59 9c             	r9 = r6 + 5			  ## att_db.c:733:201
 1e05fa2:    f0 fc fe ff       	r0 = r15 + -2			  ## att_db.c:733:201
 1e05fa6:    48 02             	[sp+16] = r0			  ## att_db.c:733:201
 1e05fa8:    f0 fc fc ff       	r0 = r15 + -4			  ## att_db.c:733:201
 1e05fac:    38 02             	[sp+12] = r0			  ## att_db.c:733:201
 1e05fae:    1e 70             	r14 = 1			  ## att_db.c:733:201
 1e05fb0:    0b 70             	r11 = 0			  ## att_db.c:733:201
 1e05fb2:    a6 04             	r6 = r2.l (u)			  ## att_db.c:733:201
 1e05fb4:    05 70             	r5 = 0
 1e05fb6:    b4 08             	r4 = r11
 1e05fb8:    4b 08             	r11 = r4
 1e05fba:    40 a4             	r0 = sp + 68
 1e05fbc:    43 15             	call -1402 <att_iterator_fetch_next : 1e05a44 >			  ## att_db.c:638:9
 1e05fbe:    84 f5 4c 00       	r4 = h[sp+76] (u)			  ## att_db.c:640:17
 1e05fc2:    0a 70             	r10 = 0			  ## att_db.c:640:17
 1e05fc4:    04 e0 52 03       	if (r4 == 0) goto 1700 <.GJTIE683_0_0_+0x93A : 1e0666c >			  ## att_db.c:640:17
 1e05fc8:    74 f2 07 30       	if (r4 < r7) goto 14 <.GJTIE683_0_0_+0x2A8 : 1e05fda >
 1e05fcc:    84 f2 4e 83       	if (r4 > r8) goto 1692 <.GJTIE683_0_0_+0x93A : 1e0666c >
 1e05fd0:    40 a4             	r0 = sp + 68
 1e05fd2:    91 08             	r1 = r9			  ## att_db.c:651:14
 1e05fd4:    62 08             	r2 = r6			  ## att_db.c:651:14
 1e05fd6:    8e 15             	call -1252 <att_iterator_match_uuid : 1e05af4 >			  ## att_db.c:651:14
 1e05fd8:    03 30             	if (r0 != 0) goto 6 <.GJTIE683_0_0_+0x2AE : 1e05fe0 >
 1e05fda:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e05fdc:    ee 31             	if (r0 != 0) goto -36 <.GJTIE683_0_0_+0x288 : 1e05fba >			  ## att_db.c:119:16
 1e05fde:    46 1b             	goto 1676 <.GJTIE683_0_0_+0x93A : 1e0666c >			  ## att_db.c:119:16
 1e05fe0:    81 f5 4a 00       	r1 = h[sp+74] (u)			  ## att_db.c:656:17
 1e05fe4:    21 f3 09 10       	if ((r1 & 2) != 0) goto 18 <.GJTIE683_0_0_+0x2C8 : 1e05ffa >			  ## att_db.c:656:13
 1e05fe8:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## att_db.c:657:17
 1e05fee:    0b f0 01 00       	if ((r11 & r0) == 0) goto 2 <.GJTIE683_0_0_+0x2C2 : 1e05ff4 >			  ## att_db.c:657:17
 1e05ff2:    b4 08             	r4 = r11			  ## att_db.c:657:17
 1e05ff4:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e05ff6:    e0 31             	if (r0 != 0) goto -64 <.GJTIE683_0_0_+0x286 : 1e05fb8 >			  ## att_db.c:119:16
 1e05ff8:    38 1b             	goto 1648 <.GJTIE683_0_0_+0x938 : 1e0666a >			  ## att_db.c:119:16
 1e05ffa:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE683_0_0_+0x2D4 : 1e06006 >
 1e05ffe:    c0 08             	r0 = r12			  ## att_db.c:665:26
 1e06000:    a7 15             	call -1202 <att_validate_security : 1e05b50 >			  ## att_db.c:665:26
 1e06002:    00 e0 5c 13       	if (r0 != 0) goto 1720 <.GJTIE683_0_0_+0x98C : 1e066be >			  ## att_db.c:665:26
 1e06006:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:671:9
 1e0600a:    40 a4             	r0 = sp + 68			  ## att_db.c:671:9
 1e0600c:    de 15             	call -1092 <att_update_value_len : 1e05bca >			  ## att_db.c:671:9
 1e0600e:    83 f5 54 00       	r3 = h[sp+84] (u)			  ## att_db.c:674:41
 1e06012:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:675:13
 1e06016:    20 96             	r0 = r3 + 2			  ## att_db.c:674:36
 1e06018:    21 e0 04 30       	if (r1 < 2) goto 8 <.GJTIE683_0_0_+0x2F2 : 1e06024 >			  ## att_db.c:674:36
 1e0601c:    22 04             	r2 = r0.l (u)
 1e0601e:    64 05             	r4 = r5.l (u)
 1e06020:    24 f2 24 13       	if (r4 != r2) goto 1608 <.GJTIE683_0_0_+0x93A : 1e0666c >
 1e06024:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE683_0_0_+0x2FE : 1e06030 >
 1e06028:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:684:37
 1e0602c:    2e 70             	r14 = 2			  ## att_db.c:684:37
 1e0602e:    05 08             	r5 = r0			  ## att_db.c:684:37
 1e06030:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:689:13
 1e06034:    60 05             	r0 = r5.l (u)			  ## att_db.c:689:22
 1e06036:    10 09             	r0 += r1			  ## att_db.c:689:20
 1e06038:    f0 f2 09 90       	if (r0 <= r15) goto 18 <.GJTIE683_0_0_+0x31C : 1e0604e >			  ## att_db.c:689:20
 1e0603c:    21 e0 1a 83       	if (r1 > 2) goto 1588 <.GJTIE683_0_0_+0x942 : 1e06674 >
 1e06040:    32 02             	r2 = [sp+12]
 1e06042:    92 f5 54 00       	h[sp+84] = r2			  ## att_db.c:693:26
 1e06046:    40 02             	r0 = [sp+16]			  ## att_db.c:694:32
 1e06048:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:694:32
 1e0604c:    23 08             	r3 = r2			  ## att_db.c:700:85
 1e0604e:    82 f5 4c 00       	r2 = h[sp+76] (u)			  ## att_db.c:698:9
 1e06052:    d0 08             	r0 = r13			  ## att_db.c:698:9
 1e06054:    80 f3 99 25       	call 19250 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:698:9
 1e06058:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:700:33
 1e0605c:    08 02             	[sp] = r0			  ## att_db.c:700:33
 1e0605e:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:699:16
 1e06062:    24 04             	r4 = r0.l (u)			  ## att_db.c:700:74
 1e06064:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:700:72
 1e06068:    e3 04             	r3 = r3.l (u)			  ## att_db.c:700:33
 1e0606a:    40 a4             	r0 = sp + 68			  ## att_db.c:700:33
 1e0606c:    01 70             	r1 = 0			  ## att_db.c:700:33
 1e0606e:    c8 15             	call -1136 <att_copy_value : 1e05c00 >			  ## att_db.c:700:33
 1e06070:    11 03             	r1 = [sp+68]			  ## att_db.c:119:16
 1e06072:    0e b1             	r14 = r0 + r4			  ## att_db.c:701:16
 1e06074:    a0 33             	if (r1 != 0) goto -192 <.GJTIE683_0_0_+0x284 : 1e05fb6 >			  ## att_db.c:701:16
 1e06076:    fa 1a             	goto 1524 <.GJTIE683_0_0_+0x93A : 1e0666c >			  ## att_db.c:701:16
 1e06078:    11 70             	r1 = 1			  ## att_db.c:784:88
 1e0607a:    17 70             	r7 = 1			  ## att_db.c:784:88
 1e0607c:    60 08             	r0 = r6			  ## att_db.c:784:88
 1e0607e:    80 f3 07 10       	call 8206 <little_endian_read_16 : 1e08090 >			  ## att_db.c:784:88
 1e06082:    04 08             	r4 = r0			  ## att_db.c:784:88
 1e06084:    c0 a5             	r0 = sp + 92
 1e06086:    41 08             	r1 = r4			  ## att_db.c:746:14
 1e06088:    e7 15             	call -1074 <att_find_handle : 1e05c58 >			  ## att_db.c:746:14
 1e0608a:    00 e0 23 01       	if (r0 == 0) goto 582 <.GJTIE683_0_0_+0x5A2 : 1e062d4 >
 1e0608e:    81 f5 62 00       	r1 = h[sp+98] (u)			  ## att_db.c:752:13
 1e06092:    21 f3 47 11       	if ((r1 & 2) != 0) goto 654 <.GJTIE683_0_0_+0x5F2 : 1e06324 >			  ## att_db.c:752:9
 1e06096:    10 70             	r0 = 1
 1e06098:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0609c:    a0 70             	r0 = 10			  ## att_db.c:348:24
 1e0609e:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e060a2:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e060a4:    23 70             	r3 = 2			  ## att_db.c:349:5
 1e060a6:    e8 19             	goto 976 <.GJTIE683_0_0_+0x746 : 1e06478 >			  ## att_db.c:349:5
 1e060a8:    11 70             	r1 = 1			  ## att_db.c:838:93
 1e060aa:    14 70             	r4 = 1			  ## att_db.c:838:93
 1e060ac:    60 08             	r0 = r6			  ## att_db.c:838:93
 1e060ae:    80 f3 ef 0f       	call 8158 <little_endian_read_16 : 1e08090 >			  ## att_db.c:838:93
 1e060b2:    07 08             	r7 = r0			  ## att_db.c:838:93
 1e060b4:    31 70             	r1 = 3			  ## att_db.c:838:135
 1e060b6:    60 08             	r0 = r6			  ## att_db.c:838:135
 1e060b8:    80 f3 ea 0f       	call 8148 <little_endian_read_16 : 1e08090 >			  ## att_db.c:838:135
 1e060bc:    06 08             	r6 = r0			  ## att_db.c:838:135
 1e060be:    40 a7             	r0 = sp + 116
 1e060c0:    71 08             	r1 = r7			  ## att_db.c:796:14
 1e060c2:    ca 15             	call -1132 <att_find_handle : 1e05c58 >			  ## att_db.c:796:14
 1e060c4:    00 e0 13 01       	if (r0 == 0) goto 550 <.GJTIE683_0_0_+0x5BC : 1e062ee >
 1e060c8:    81 f5 7a 00       	r1 = h[sp+122] (u)			  ## att_db.c:802:13
 1e060cc:    21 f3 35 11       	if ((r1 & 2) != 0) goto 618 <.GJTIE683_0_0_+0x608 : 1e0633a >			  ## att_db.c:802:9
 1e060d0:    10 70             	r0 = 1
 1e060d2:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e060d6:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e060d8:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e060dc:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e060de:    23 70             	r3 = 2			  ## att_db.c:349:5
 1e060e0:    f0 18             	goto 480 <.GJTIE683_0_0_+0x590 : 1e062c2 >			  ## att_db.c:349:5
 1e060e2:    c0 ff ff ff 01 00 	r0 = 131071 <text_size+0x330B : 1ffff >			  ## att_db.c:908:36
 1e060e8:    70 09             	r0 += r7			  ## att_db.c:908:36
 1e060ea:    40 d0             	r0 = r0 >> 1			  ## att_db.c:908:41
 1e060ec:    28 04             	r8 = r0.l (u)			  ## att_db.c:909:97
 1e060ee:    08 e0 07 01       	if (r8 == 0) goto 526 <.GJTIE683_0_0_+0x5CE : 1e06300 >
 1e060f2:    1a 9c             	r10 = r6 + 1			  ## att_db.c:909:111
 1e060f4:    f9 fc ff ff       	r9 = r15 + -1
 1e060f8:    1e 70             	r14 = 1
 1e060fa:    07 70             	r7 = 0
 1e060fc:    06 70             	r6 = 0
 1e060fe:    a0 08             	r0 = r10			  ## att_db.c:860:18
 1e06100:    71 08             	r1 = r7			  ## att_db.c:860:18
 1e06102:    80 f3 c5 0f       	call 8074 <little_endian_read_16 : 1e08090 >			  ## att_db.c:860:18
 1e06106:    04 08             	r4 = r0			  ## att_db.c:860:18
 1e06108:    04 e0 a0 01       	if (r4 == 0) goto 832 <.GJTIE683_0_0_+0x71A : 1e0644c >			  ## att_db.c:860:18
 1e0610c:    c0 a8             	r0 = sp + 140
 1e0610e:    41 08             	r1 = r4			  ## att_db.c:868:18
 1e06110:    a3 15             	call -1210 <att_find_handle : 1e05c58 >			  ## att_db.c:868:18
 1e06112:    00 e0 a5 01       	if (r0 == 0) goto 842 <.GJTIE683_0_0_+0x72E : 1e06460 >
 1e06116:    81 f5 92 00       	r1 = h[sp+146] (u)			  ## att_db.c:874:17
 1e0611a:    01 f3 a5 11       	if ((r1 & 2) == 0) goto 842 <.GJTIE683_0_0_+0x736 : 1e06468 >			  ## att_db.c:874:17
 1e0611e:    20 f3 05 10       	if ((r1 & 1) != 0) goto 10 <.GJTIE683_0_0_+0x3FA : 1e0612c >
 1e06122:    c0 08             	r0 = r12			  ## att_db.c:881:26
 1e06124:    15 15             	call -1494 <att_validate_security : 1e05b50 >			  ## att_db.c:881:26
 1e06126:    03 08             	r3 = r0			  ## att_db.c:881:26
 1e06128:    03 e0 9f 11       	if (r3 != 0) goto 830 <.GJTIE683_0_0_+0x738 : 1e0646a >			  ## att_db.c:881:26
 1e0612c:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:886:9
 1e06130:    c0 a8             	r0 = sp + 140			  ## att_db.c:886:9
 1e06132:    4b 15             	call -1386 <att_update_value_len : 1e05bca >			  ## att_db.c:886:9
 1e06134:    80 f5 9c 00       	r0 = h[sp+156] (u)			  ## att_db.c:889:25
 1e06138:    e6 fd 00 4e       	r4 = r14.l (u)			  ## att_db.c:889:13
 1e0613c:    01 b1             	r1 = r0 + r4			  ## att_db.c:889:20
 1e0613e:    f1 f2 03 90       	if (r1 <= r15) goto 6 <.GJTIE683_0_0_+0x416 : 1e06148 >			  ## att_db.c:889:20
 1e06142:    99 f5 9c 00       	h[sp+156] = r9			  ## att_db.c:890:26
 1e06146:    90 08             	r0 = r9			  ## att_db.c:894:85
 1e06148:    05 f7 00 c0       	r5 = h[r12 + 0] (u)			  ## att_db.c:894:33
 1e0614c:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:894:72
 1e06150:    23 04             	r3 = r0.l (u)			  ## att_db.c:894:33
 1e06152:    c0 a8             	r0 = sp + 140			  ## att_db.c:894:33
 1e06154:    01 70             	r1 = 0			  ## att_db.c:894:33
 1e06156:    0d 02             	[sp] = r5			  ## att_db.c:894:33
 1e06158:    53 15             	call -1370 <att_copy_value : 1e05c00 >			  ## att_db.c:894:33
 1e0615a:    0e b1             	r14 = r0 + r4			  ## att_db.c:895:16
 1e0615c:    16 80             	r6 += 1			  ## att_db.c:859:35
 1e0615e:    27 80             	r7 += 2			  ## att_db.c:859:19
 1e06160:    86 f2 cd bf       	ifs (r6 < r8) goto -102 <.GJTIE683_0_0_+0x3CC : 1e060fe >			  ## att_db.c:859:19
 1e06164:    ce 18             	goto 412 <.GJTIE683_0_0_+0x5D0 : 1e06302 >			  ## att_db.c:859:19
 1e06166:    24 70             	r4 = 2			  ## att_db.c:1032:5
 1e06168:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE683_0_0_+0x43C : 1e0616e >			  ## att_db.c:1032:5
 1e0616c:    04 71             	r4 = 16			  ## att_db.c:1032:5
 1e0616e:    11 70             	r1 = 1			  ## att_db.c:1035:102
 1e06170:    13 70             	r3 = 1			  ## att_db.c:1035:102
 1e06172:    60 08             	r0 = r6			  ## att_db.c:1035:102
 1e06174:    80 f3 8c 0f       	call 7960 <little_endian_read_16 : 1e08090 >			  ## att_db.c:1035:102
 1e06178:    05 08             	r5 = r0			  ## att_db.c:1035:102
 1e0617a:    31 70             	r1 = 3			  ## att_db.c:1035:144
 1e0617c:    60 08             	r0 = r6			  ## att_db.c:1035:144
 1e0617e:    80 f3 87 0f       	call 7950 <little_endian_read_16 : 1e08090 >			  ## att_db.c:1035:144
 1e06182:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:939:35
 1e06186:    61 04             	r1 = r1.l (u)			  ## att_db.c:939:35
 1e06188:    08 08             	r8 = r0			  ## att_db.c:1035:144
 1e0618a:    01 f2 9d 20       	if (r1 >= r0) goto 314 <.GJTIE683_0_0_+0x596 : 1e062c8 >
 1e0618e:    56 80             	r6 += 5			  ## att_db.c:1035:207
 1e06190:    01 70             	r1 = 0
 1e06192:    87 e0 04 30       	if (r7 < 8) goto 8 <.GJTIE683_0_0_+0x46C : 1e0619e >
 1e06196:    60 08             	r0 = r6			  ## att_db.c:94:10
 1e06198:    82 14             	call -1788 <is_Bluetooth_Base_UUID : 1e05a9e >			  ## att_db.c:94:10
 1e0619a:    c1 70             	r1 = 12			  ## att_db.c:94:10
 1e0619c:    d9 20             	if (r0 == 0) goto 434 <.GJTIE683_0_0_+0x61E : 1e06350 >			  ## att_db.c:94:10
 1e0619e:    60 08             	r0 = r6			  ## att_db.c:97:12
 1e061a0:    80 f3 76 0f       	call 7916 <little_endian_read_16 : 1e08090 >			  ## att_db.c:97:12
 1e061a4:    70 b0             	r0 &= 4294967294			  ## att_db.c:945:45
 1e061a6:    21 ff 28 0a d2 00 	if (r0 != 10240) goto 420 <.GJTIE683_0_0_+0x61E : 1e06350 >			  ## att_db.c:945:45
 1e061ac:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e061b0:    10 f5 a4 00       	[sp+164] = r0			  ## att_db.c:114:17
 1e061b4:    02 70             	r2 = 0			  ## att_db.c:114:17
 1e061b6:    1e 70             	r14 = 1
 1e061b8:    20 05             	r0 = r4.l (u)
 1e061ba:    38 02             	[sp+12] = r0
 1e061bc:    04 70             	r4 = 0
 1e061be:    0c 70             	r12 = 0
 1e061c0:    00 70             	r0 = 0
 1e061c2:    48 02             	[sp+16] = r0
 1e061c4:    ea 19             	goto 980 <.GJTIE683_0_0_+0x868 : 1e0659a >
 1e061c6:    11 70             	r1 = 1			  ## att_db.c:1048:23
 1e061c8:    14 70             	r4 = 1			  ## att_db.c:1048:23
 1e061ca:    60 08             	r0 = r6			  ## att_db.c:1048:23
 1e061cc:    80 f3 60 0f       	call 7872 <little_endian_read_16 : 1e08090 >			  ## att_db.c:1048:23
 1e061d0:    08 08             	r8 = r0			  ## att_db.c:1048:23
 1e061d2:    c0 ab             	r0 = sp + 188			  ## att_db.c:1048:23
 1e061d4:    81 08             	r1 = r8			  ## att_db.c:1050:14
 1e061d6:    40 15             	call -1408 <att_find_handle : 1e05c58 >			  ## att_db.c:1050:14
 1e061d8:    96 20             	if (r0 == 0) goto 300 <.GJTIE683_0_0_+0x5D4 : 1e06306 >
 1e061da:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e061dc:    dc 14             	call -1608 <att_service_handler_for_handle : 1e05b96 >			  ## att_db.c:228:38
 1e061de:    a1 fc 14 00       	r1 = r10 + 20			  ## att_db.c:229:9
 1e061e2:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e061e4:    01 20             	if (r0 == 0) goto 2 <.GJTIE683_0_0_+0x4B6 : 1e061e8 >			  ## att_db.c:230:25
 1e061e6:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e061e8:    04 42             	r4 = [r1 + 0]
 1e061ea:    06 28             	if (r4 == 0) goto 12 <.GJTIE683_0_0_+0x4C6 : 1e061f8 >
 1e061ec:    81 f5 c2 00       	r1 = h[sp+194] (u)			  ## att_db.c:1058:13
 1e061f0:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE683_0_0_+0x4C6 : 1e061f8 >			  ## att_db.c:1058:13
 1e061f4:    28 f3 5d 11       	if ((r1 & 256) != 0) goto 698 <.GJTIE683_0_0_+0x780 : 1e064b2 >
 1e061f8:    10 70             	r0 = 1
 1e061fa:    10 f9 00 d0       	b[r13 + 0] = r0
 1e061fe:    20 71             	r0 = 18
 1e06200:    21 18             	goto 66 <.GJTIE683_0_0_+0x512 : 1e06244 >
 1e06202:    11 70             	r1 = 1			  ## att_db.c:1087:23
 1e06204:    60 08             	r0 = r6			  ## att_db.c:1087:23
 1e06206:    80 f3 43 0f       	call 7814 <little_endian_read_16 : 1e08090 >			  ## att_db.c:1087:23
 1e0620a:    08 08             	r8 = r0			  ## att_db.c:1087:23
 1e0620c:    31 70             	r1 = 3			  ## att_db.c:1088:23
 1e0620e:    60 08             	r0 = r6			  ## att_db.c:1088:23
 1e06210:    80 f3 3e 0f       	call 7804 <little_endian_read_16 : 1e08090 >			  ## att_db.c:1088:23
 1e06214:    09 08             	r9 = r0			  ## att_db.c:1088:23
 1e06216:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e06218:    be 14             	call -1668 <att_service_handler_for_handle : 1e05b96 >			  ## att_db.c:228:38
 1e0621a:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e0621c:    a1 fc 14 00       	r1 = r10 + 20			  ## att_db.c:229:9
 1e06220:    01 20             	if (r0 == 0) goto 2 <.GJTIE683_0_0_+0x4F2 : 1e06224 >			  ## att_db.c:229:9
 1e06222:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e06224:    04 42             	r4 = [r1 + 0]
 1e06226:    0a 28             	if (r4 == 0) goto 20 <.GJTIE683_0_0_+0x50A : 1e0623c >
 1e06228:    40 ad             	r0 = sp + 212
 1e0622a:    81 08             	r1 = r8			  ## att_db.c:1094:14
 1e0622c:    15 15             	call -1494 <att_find_handle : 1e05c58 >			  ## att_db.c:1094:14
 1e0622e:    a1 20             	if (r0 == 0) goto 322 <.GJTIE683_0_0_+0x640 : 1e06372 >
 1e06230:    81 f5 da 00       	r1 = h[sp+218] (u)			  ## att_db.c:1098:13
 1e06234:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE683_0_0_+0x50A : 1e0623c >			  ## att_db.c:1098:13
 1e06238:    28 f3 55 11       	if ((r1 & 256) != 0) goto 682 <.GJTIE683_0_0_+0x7B4 : 1e064e6 >
 1e0623c:    10 70             	r0 = 1
 1e0623e:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06242:    60 71             	r0 = 22
 1e06244:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06248:    21 70             	r1 = 2
 1e0624a:    d0 08             	r0 = r13
 1e0624c:    82 08             	r2 = r8
 1e0624e:    80 f3 9c 24       	call 18744 <little_endian_store_16 : 1e0ab8a >
 1e06252:    30 70             	r0 = 3
 1e06254:    04 1a             	goto 1032 <.GJTIE683_0_0_+0x92C : 1e0665e >
 1e06256:    10 6c             	r0 = b[r6 + 1] (u)			  ## att_db.c:1186:9
 1e06258:    63 20             	if (r0 == 0) goto 198 <.GJTIE683_0_0_+0x5EE : 1e06320 >			  ## att_db.c:1186:9
 1e0625a:    00 f9 18 a0       	r0 = b[r10 + 24] (u)			  ## att_db.c:1188:21
 1e0625e:    8d 20             	if (r0 == 0) goto 282 <.GJTIE683_0_0_+0x648 : 1e0637a >			  ## att_db.c:1188:21
 1e06260:    31 70             	r1 = 3			  ## att_db.c:1173:5
 1e06262:    c0 08             	r0 = r12			  ## att_db.c:1173:5
 1e06264:    0f 15             	call -1506 <att_notify_write_callbacks : 1e05c84 >			  ## att_db.c:1173:5
 1e06266:    03 f9 18 a0       	r3 = b[r10 + 24] (u)			  ## att_db.c:1194:43
 1e0626a:    02 f7 1a a0       	r2 = h[r10 + 26] (u)			  ## att_db.c:349:5
 1e0626e:    00 70             	r0 = 0			  ## att_db.c:349:5
 1e06270:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:325:42
 1e06274:    10 f7 1a a0       	h[r10 + 26] = r0			  ## att_db.c:326:44
 1e06278:    10 70             	r0 = 1			  ## att_db.c:326:44
 1e0627a:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0627e:    80 71             	r0 = 24			  ## att_db.c:347:24
 1e06280:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e06284:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e06286:    ea 18             	goto 468 <.GJTIE683_0_0_+0x72A : 1e0645c >			  ## att_db.c:349:5
 1e06288:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:347:24
 1e0628c:    40 70             	r0 = 4			  ## att_db.c:347:24
 1e0628e:    18 66             	b[r3 + 1] = r0			  ## att_db.c:348:24
 1e06290:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e06292:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e06294:    52 08             	r2 = r5			  ## att_db.c:349:5
 1e06296:    80 f3 78 24       	call 18672 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:349:5
 1e0629a:    1e f9 04 00       	b[r0 + 4] = r14			  ## att_db.c:350:24
 1e0629e:    5e 70             	r14 = 5			  ## att_db.c:350:24
 1e062a0:    ec 19             	goto 984 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:350:24
 1e062a2:    0c 66             	b[r3 + 0] = r4			  ## att_db.c:347:24
 1e062a4:    60 70             	r0 = 6			  ## att_db.c:348:24
 1e062a6:    18 66             	b[r3 + 1] = r0			  ## att_db.c:348:24
 1e062a8:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e062aa:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e062ac:    52 08             	r2 = r5			  ## att_db.c:349:5
 1e062ae:    80 f3 6c 24       	call 18648 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:349:5
 1e062b2:    4c 60             	b[r0 + 4] = r4			  ## att_db.c:350:24
 1e062b4:    e2 19             	goto 964 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:350:24
 1e062b6:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e062ba:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e062bc:    10 f9 01 d0       	b[r13 + 1] = r0
 1e062c0:    21 70             	r1 = 2
 1e062c2:    d0 08             	r0 = r13
 1e062c4:    72 08             	r2 = r7
 1e062c6:    1d 19             	goto 570 <.GJTIE683_0_0_+0x7D0 : 1e06502 >
 1e062c8:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e062cc:    00 71             	r0 = 16			  ## att_db.c:348:24
 1e062ce:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e062d2:    44 18             	goto 136 <.GJTIE683_0_0_+0x62A : 1e0635c >			  ## att_db.c:348:24
 1e062d4:    17 f9 00 d0       	b[r13 + 0] = r7			  ## att_db.c:347:24
 1e062d8:    a0 70             	r0 = 10			  ## att_db.c:348:24
 1e062da:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e062de:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e062e0:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e062e2:    42 08             	r2 = r4			  ## att_db.c:349:5
 1e062e4:    80 f3 51 24       	call 18594 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:349:5
 1e062e8:    4f 60             	b[r0 + 4] = r7			  ## att_db.c:350:24
 1e062ea:    5e 70             	r14 = 5			  ## att_db.c:350:24
 1e062ec:    c6 19             	goto 908 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:350:24
 1e062ee:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:347:24
 1e062f2:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e062f4:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e062f8:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e062fa:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e062fc:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e062fe:    0b 18             	goto 22 <.GJTIE683_0_0_+0x5E4 : 1e06316 >			  ## att_db.c:349:5
 1e06300:    1e 70             	r14 = 1
 1e06302:    f0 70             	r0 = 15			  ## att_db.c:902:24
 1e06304:    b8 19             	goto 880 <.GJTIE683_0_0_+0x944 : 1e06676 >			  ## att_db.c:902:24
 1e06306:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:347:24
 1e0630a:    20 71             	r0 = 18			  ## att_db.c:348:24
 1e0630c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e06310:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e06312:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e06314:    82 08             	r2 = r8			  ## att_db.c:349:5
 1e06316:    80 f3 38 24       	call 18544 <little_endian_store_16 : 1e0ab8a >
 1e0631a:    4c 60             	b[r0 + 4] = r4
 1e0631c:    5e 70             	r14 = 5
 1e0631e:    ad 19             	goto 858 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e06320:    31 70             	r1 = 3			  ## att_db.c:1173:5
 1e06322:    f8 18             	goto 496 <.GJTIE683_0_0_+0x7E2 : 1e06514 >			  ## att_db.c:1173:5
 1e06324:    20 f3 58 10       	if ((r1 & 1) != 0) goto 176 <.GJTIE683_0_0_+0x6A6 : 1e063d8 >
 1e06328:    c0 08             	r0 = r12			  ## att_db.c:758:30
 1e0632a:    12 14             	call -2012 <att_validate_security : 1e05b50 >			  ## att_db.c:758:30
 1e0632c:    03 08             	r3 = r0			  ## att_db.c:758:30
 1e0632e:    54 26             	if (r3 == 0) goto 168 <.GJTIE683_0_0_+0x6A6 : 1e063d8 >			  ## att_db.c:758:30
 1e06330:    10 70             	r0 = 1
 1e06332:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e06336:    a0 70             	r0 = 10			  ## att_db.c:348:24
 1e06338:    9c 18             	goto 312 <.GJTIE683_0_0_+0x740 : 1e06472 >			  ## att_db.c:348:24
 1e0633a:    20 f3 67 10       	if ((r1 & 1) != 0) goto 206 <.GJTIE683_0_0_+0x6DA : 1e0640c >
 1e0633e:    c0 08             	r0 = r12			  ## att_db.c:808:30
 1e06340:    07 14             	call -2034 <att_validate_security : 1e05b50 >			  ## att_db.c:808:30
 1e06342:    03 08             	r3 = r0			  ## att_db.c:808:30
 1e06344:    63 26             	if (r3 == 0) goto 198 <.GJTIE683_0_0_+0x6DA : 1e0640c >			  ## att_db.c:808:30
 1e06346:    10 70             	r0 = 1
 1e06348:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0634c:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e0634e:    b6 1f             	goto -148 <.GJTIE683_0_0_+0x58A : 1e062bc >			  ## att_db.c:348:24
 1e06350:    10 70             	r0 = 1
 1e06352:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e06356:    03 71             	r3 = 16			  ## att_db.c:348:24
 1e06358:    13 f9 01 d0       	b[r13 + 1] = r3			  ## att_db.c:348:24
 1e0635c:    21 70             	r1 = 2
 1e0635e:    d0 08             	r0 = r13
 1e06360:    52 08             	r2 = r5
 1e06362:    cf 18             	goto 414 <.GJTIE683_0_0_+0x7D0 : 1e06502 >
 1e06364:    50 70             	r0 = 5			  ## att_db.c:516:24
 1e06366:    87 19             	goto 782 <.GJTIE683_0_0_+0x944 : 1e06676 >			  ## att_db.c:516:24
 1e06368:    70 70             	r0 = 7			  ## att_db.c:601:24
 1e0636a:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:601:24
 1e0636e:    4e 08             	r14 = r4			  ## att_db.c:601:24
 1e06370:    84 19             	goto 776 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:601:24
 1e06372:    13 70             	r3 = 1
 1e06374:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e06378:    be 18             	goto 380 <.GJTIE683_0_0_+0x7C4 : 1e064f6 >			  ## att_db.c:347:24
 1e0637a:    a1 fc 1c 00       	r1 = r10 + 28			  ## att_db.c:1151:5
 1e0637e:    c0 ae             	r0 = sp + 236			  ## att_db.c:1151:5
 1e06380:    80 f3 2b 16       	call 11350 <btstack_linked_list_iterator_init : 1e08fda >			  ## att_db.c:1151:5
 1e06384:    04 70             	r4 = 0
 1e06386:    c0 ae             	r0 = sp + 236
 1e06388:    80 f3 89 0e       	call 7442 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## att_db.c:1152:12
 1e0638c:    13 20             	if (r0 == 0) goto 38 <.GJTIE683_0_0_+0x682 : 1e063b4 >			  ## att_db.c:1152:5
 1e0638e:    c0 ae             	r0 = sp + 236
 1e06390:    80 f3 93 0e       	call 7462 <btstack_linked_list_iterator_next : 1e080ba >			  ## att_db.c:1153:68
 1e06394:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1154:23
 1e06396:    f7 2d             	if (r6 == 0) goto -18 <.GJTIE683_0_0_+0x654 : 1e06386 >
 1e06398:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1157:30
 1e0639c:    1c 02             	[sp+4] = r4			  ## att_db.c:1157:30
 1e0639e:    01 70             	r1 = 0			  ## att_db.c:1157:30
 1e063a0:    42 70             	r2 = 4			  ## att_db.c:1157:30
 1e063a2:    03 70             	r3 = 0			  ## att_db.c:1157:30
 1e063a4:    0c 02             	[sp] = r4			  ## att_db.c:1157:30
 1e063a6:    86 00             	call r6			  ## att_db.c:1157:30
 1e063a8:    60 ff ff 09 ec ff 	if ((r0 & 255) == 0) goto -40 <.GJTIE683_0_0_+0x654 : 1e06386 >			  ## att_db.c:1157:30
 1e063ae:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:1189:50
 1e063b2:    56 1f             	goto -340 <.GJTIE683_0_0_+0x52E : 1e06260 >			  ## att_db.c:1189:50
 1e063b4:    04 f6 14 a0       	r4 = [r10 + 20]			  ## att_db.c:1162:18
 1e063b8:    a9 28             	if (r4 == 0) goto 338 <.GJTIE683_0_0_+0x7DA : 1e0650c >			  ## att_db.c:1162:18
 1e063ba:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1165:12
 1e063be:    05 70             	r5 = 0			  ## att_db.c:1165:12
 1e063c0:    1d 02             	[sp+4] = r5			  ## att_db.c:1165:12
 1e063c2:    01 70             	r1 = 0			  ## att_db.c:1165:12
 1e063c4:    42 70             	r2 = 4			  ## att_db.c:1165:12
 1e063c6:    03 70             	r3 = 0			  ## att_db.c:1165:12
 1e063c8:    0d 02             	[sp] = r5			  ## att_db.c:1165:12
 1e063ca:    84 00             	call r4			  ## att_db.c:1165:12
 1e063cc:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:1189:50
 1e063d0:    61 ff ff 09 45 ff 	if ((r0 & 255) != 0) goto -374 <.GJTIE683_0_0_+0x52E : 1e06260 >			  ## att_db.c:1189:50
 1e063d6:    9d 18             	goto 314 <.GJTIE683_0_0_+0x7E0 : 1e06512 >			  ## att_db.c:1189:50
 1e063d8:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:764:5
 1e063dc:    c0 a5             	r0 = sp + 92			  ## att_db.c:764:5
 1e063de:    bf f3 f4 fb       	call -2072 <att_update_value_len : 1e05bca >			  ## att_db.c:764:5
 1e063e2:    80 f5 6c 00       	r0 = h[sp+108] (u)			  ## att_db.c:768:21
 1e063e6:    11 90             	r1 = r0 + 1			  ## att_db.c:768:16
 1e063e8:    f1 f2 04 90       	if (r1 <= r15) goto 8 <.GJTIE683_0_0_+0x6C2 : 1e063f4 >			  ## att_db.c:768:16
 1e063ec:    f0 fc ff ff       	r0 = r15 + -1			  ## att_db.c:769:45
 1e063f0:    90 f5 6c 00       	h[sp+108] = r0			  ## att_db.c:769:22
 1e063f4:    04 f7 00 c0       	r4 = h[r12 + 0] (u)			  ## att_db.c:773:29
 1e063f8:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:773:68
 1e063fc:    23 04             	r3 = r0.l (u)			  ## att_db.c:773:29
 1e063fe:    c0 a5             	r0 = sp + 92			  ## att_db.c:773:29
 1e06400:    01 70             	r1 = 0			  ## att_db.c:773:29
 1e06402:    0c 02             	[sp] = r4			  ## att_db.c:773:29
 1e06404:    bf f3 fc fb       	call -2056 <att_copy_value : 1e05c00 >			  ## att_db.c:773:29
 1e06408:    b1 70             	r1 = 11			  ## att_db.c:776:24
 1e0640a:    4f 18             	goto 158 <.GJTIE683_0_0_+0x778 : 1e064aa >			  ## att_db.c:776:24
 1e0640c:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:814:5
 1e06410:    40 a7             	r0 = sp + 116			  ## att_db.c:814:5
 1e06412:    bf f3 da fb       	call -2124 <att_update_value_len : 1e05bca >			  ## att_db.c:814:5
 1e06416:    80 f5 84 00       	r0 = h[sp+132] (u)			  ## att_db.c:816:27
 1e0641a:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE683_0_0_+0x74C : 1e0647e >			  ## att_db.c:816:9
 1e0641e:    10 70             	r0 = 1
 1e06420:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e06424:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e06426:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e0642a:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e0642c:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e0642e:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e06430:    80 f3 ab 23       	call 18262 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:349:5
 1e06434:    70 70             	r0 = 7			  ## att_db.c:350:24
 1e06436:    13 19             	goto 550 <.GJTIE683_0_0_+0x92C : 1e0665e >			  ## att_db.c:350:24
 1e06438:    10 70             	r0 = 1
 1e0643a:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0643e:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e06440:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e06444:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e06446:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e06448:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e0644a:    06 19             	goto 524 <.GJTIE683_0_0_+0x926 : 1e06658 >			  ## att_db.c:349:5
 1e0644c:    13 70             	r3 = 1
 1e0644e:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e06452:    e0 70             	r0 = 14			  ## att_db.c:348:24
 1e06454:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e06458:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e0645a:    02 70             	r2 = 0			  ## att_db.c:349:5
 1e0645c:    d0 08             	r0 = r13
 1e0645e:    51 18             	goto 162 <.GJTIE683_0_0_+0x7D0 : 1e06502 >
 1e06460:    13 70             	r3 = 1
 1e06462:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e06466:    04 18             	goto 8 <.GJTIE683_0_0_+0x73E : 1e06470 >			  ## att_db.c:347:24
 1e06468:    23 70             	r3 = 2
 1e0646a:    10 70             	r0 = 1
 1e0646c:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e06470:    e0 70             	r0 = 14
 1e06472:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06476:    21 70             	r1 = 2
 1e06478:    d0 08             	r0 = r13
 1e0647a:    42 08             	r2 = r4
 1e0647c:    42 18             	goto 132 <.GJTIE683_0_0_+0x7D0 : 1e06502 >
 1e0647e:    61 fb 01 69       	r1 = 1 - r6			  ## att_db.c:822:16
 1e06482:    01 09             	r1 += r0			  ## att_db.c:822:31
 1e06484:    f1 f2 05 d0       	ifs (r1 <= r15) goto 10 <.GJTIE683_0_0_+0x760 : 1e06492 >			  ## att_db.c:822:31
 1e06488:    80 fb 60 0f       	r0 = r15 + r6			  ## att_db.c:823:45
 1e0648c:    f0 8f             	r0 += -1			  ## att_db.c:823:49
 1e0648e:    90 f5 84 00       	h[sp+132] = r0			  ## att_db.c:823:22
 1e06492:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:827:29
 1e06496:    a0 b1             	r0 = r0 - r6			  ## att_db.c:827:102
 1e06498:    23 04             	r3 = r0.l (u)			  ## att_db.c:827:29
 1e0649a:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:827:79
 1e0649e:    40 a7             	r0 = sp + 116			  ## att_db.c:827:79
 1e064a0:    09 02             	[sp] = r1			  ## att_db.c:827:29
 1e064a2:    61 08             	r1 = r6			  ## att_db.c:827:29
 1e064a4:    bf f3 ac fb       	call -2216 <att_copy_value : 1e05c00 >			  ## att_db.c:827:29
 1e064a8:    d1 70             	r1 = 13			  ## att_db.c:830:24
 1e064aa:    11 f9 00 d0       	b[r13 + 0] = r1
 1e064ae:    1e 90             	r14 = r0 + 1
 1e064b0:    e4 18             	goto 456 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e064b2:    c0 08             	r0 = r12			  ## att_db.c:1065:26
 1e064b4:    bf f3 4c fb       	call -2408 <att_validate_security : 1e05b50 >			  ## att_db.c:1065:26
 1e064b8:    03 08             	r3 = r0			  ## att_db.c:1065:26
 1e064ba:    10 36             	if (r3 != 0) goto 32 <.GJTIE683_0_0_+0x7AA : 1e064dc >			  ## att_db.c:1065:26
 1e064bc:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1069:18
 1e064c0:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1069:128
 1e064c4:    61 04             	r1 = r1.l (u)			  ## att_db.c:1069:18
 1e064c6:    19 02             	[sp+4] = r1			  ## att_db.c:1069:18
 1e064c8:    31 9c             	r1 = r6 + 3			  ## att_db.c:1069:111
 1e064ca:    02 70             	r2 = 0			  ## att_db.c:1069:18
 1e064cc:    03 70             	r3 = 0			  ## att_db.c:1069:18
 1e064ce:    09 02             	[sp] = r1			  ## att_db.c:1069:18
 1e064d0:    81 08             	r1 = r8			  ## att_db.c:1069:18
 1e064d2:    84 00             	call r4			  ## att_db.c:1069:18
 1e064d4:    03 08             	r3 = r0			  ## att_db.c:1069:18
 1e064d6:    60 ff ff 39 51 00 	if ((r3 & 255) == 0) goto 162 <.GJTIE683_0_0_+0x84C : 1e0657e >			  ## att_db.c:1069:18
 1e064dc:    10 70             	r0 = 1
 1e064de:    10 f9 00 d0       	b[r13 + 0] = r0
 1e064e2:    20 71             	r0 = 18
 1e064e4:    09 18             	goto 18 <.GJTIE683_0_0_+0x7C6 : 1e064f8 >
 1e064e6:    c0 08             	r0 = r12			  ## att_db.c:1105:26
 1e064e8:    bf f3 32 fb       	call -2460 <att_validate_security : 1e05b50 >			  ## att_db.c:1105:26
 1e064ec:    03 08             	r3 = r0			  ## att_db.c:1105:26
 1e064ee:    1a 26             	if (r3 == 0) goto 52 <.GJTIE683_0_0_+0x7F2 : 1e06524 >			  ## att_db.c:1106:9
 1e064f0:    10 70             	r0 = 1
 1e064f2:    10 f9 00 d0       	b[r13 + 0] = r0
 1e064f6:    60 71             	r0 = 22
 1e064f8:    10 f9 01 d0       	b[r13 + 1] = r0
 1e064fc:    21 70             	r1 = 2
 1e064fe:    d0 08             	r0 = r13
 1e06500:    82 08             	r2 = r8
 1e06502:    80 f3 42 23       	call 18052 <little_endian_store_16 : 1e0ab8a >
 1e06506:    4b 60             	b[r0 + 4] = r3
 1e06508:    5e 70             	r14 = 5
 1e0650a:    b7 18             	goto 366 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e0650c:    00 70             	r0 = 0			  ## att_db.c:1189:50
 1e0650e:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:1189:50
 1e06512:    21 70             	r1 = 2			  ## att_db.c:1199:9
 1e06514:    c0 08             	r0 = r12
 1e06516:    bf f3 b5 fb       	call -2198 <att_notify_write_callbacks : 1e05c84 >
 1e0651a:    90 71             	r0 = 25			  ## att_db.c:1203:24
 1e0651c:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06520:    1e 70             	r14 = 1
 1e06522:    ab 18             	goto 342 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e06524:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1110:18
 1e06528:    71 fc fb ff       	r1 = r7 + -5			  ## att_db.c:1110:135
 1e0652c:    61 04             	r1 = r1.l (u)			  ## att_db.c:1110:18
 1e0652e:    19 02             	[sp+4] = r1			  ## att_db.c:1110:18
 1e06530:    51 9c             	r1 = r6 + 5			  ## att_db.c:1110:118
 1e06532:    12 70             	r2 = 1			  ## att_db.c:1110:18
 1e06534:    09 02             	[sp] = r1			  ## att_db.c:1110:18
 1e06536:    81 08             	r1 = r8			  ## att_db.c:1110:18
 1e06538:    93 08             	r3 = r9			  ## att_db.c:1110:18
 1e0653a:    84 00             	call r4			  ## att_db.c:1110:18
 1e0653c:    03 08             	r3 = r0			  ## att_db.c:1110:18
 1e0653e:    60 ff ff 39 13 00 	if ((r3 & 255) == 0) goto 38 <.GJTIE683_0_0_+0x838 : 1e0656a >			  ## att_db.c:1110:18
 1e06544:    c0 04             	r0 = r3.b0 (u)			  ## att_db.c:1110:18
 1e06546:    d0 e0 02 00       	if (r0 == 13) goto 4 <.GJTIE683_0_0_+0x81C : 1e0654e >			  ## att_db.c:1110:18
 1e0654a:    70 e0 d1 1f       	if (r0 != 7) goto -94 <.GJTIE683_0_0_+0x7BE : 1e064f0 >
 1e0654e:    01 f9 18 a0       	r1 = b[r10 + 24] (u)			  ## att_db.c:332:89
 1e06552:    d0 e0 03 10       	if (r0 != 13) goto 6 <.GJTIE683_0_0_+0x82A : 1e0655c >			  ## att_db.c:332:89
 1e06556:    c2 04             	r2 = r3.b0 (u)
 1e06558:    21 f2 03 10       	if (r1 != r2) goto 6 <.GJTIE683_0_0_+0x830 : 1e06562 >
 1e0655c:    70 e0 05 10       	if (r0 != 7) goto 10 <.GJTIE683_0_0_+0x838 : 1e0656a >
 1e06560:    04 32             	if (r1 != 0) goto 8 <.GJTIE683_0_0_+0x838 : 1e0656a >
 1e06562:    13 f9 18 a0       	b[r10 + 24] = r3
 1e06566:    18 f7 1a a0       	h[r10 + 26] = r8
 1e0656a:    d0 08             	r0 = r13			  ## att_db.c:1124:5
 1e0656c:    61 08             	r1 = r6			  ## att_db.c:1124:5
 1e0656e:    72 08             	r2 = r7			  ## att_db.c:1124:5
 1e06570:    98 f3 b8 04       	call 3148144 <memcpy : 106ee4 >			  ## att_db.c:1124:5
 1e06574:    70 71             	r0 = 23			  ## att_db.c:1125:24
 1e06576:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:1125:24
 1e0657a:    7e 08             	r14 = r7			  ## att_db.c:1125:24
 1e0657c:    7e 18             	goto 252 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:1125:24
 1e0657e:    30 71             	r0 = 19			  ## att_db.c:1073:24
 1e06580:    cd 1f             	goto -102 <.GJTIE683_0_0_+0x7EA : 1e0651c >			  ## att_db.c:1073:24
 1e06582:    22 02             	r2 = [sp+8]
 1e06584:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE683_0_0_+0x85E : 1e06590 >
 1e06588:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:1009:41
 1e0658c:    2e 70             	r14 = 2			  ## att_db.c:1009:41
 1e0658e:    02 08             	r2 = r0			  ## att_db.c:1009:41
 1e06590:    00 f5 b8 00       	r0 = [sp+184]			  ## att_db.c:1014:37
 1e06594:    48 02             	[sp+16] = r0
 1e06596:    14 70             	r4 = 1
 1e06598:    7c 08             	r12 = r7
 1e0659a:    2a 02             	[sp+8] = r2
 1e0659c:    aa 04             	r10 = r2.l (u)
 1e0659e:    ab fc fc ff       	r11 = r10 + -4
 1e065a2:    c9 08             	r9 = r12
 1e065a4:    00 f5 a4 00       	r0 = [sp+164]			  ## att_db.c:119:16
 1e065a8:    4a 20             	if (r0 == 0) goto 148 <.GJTIE683_0_0_+0x90C : 1e0663e >			  ## att_db.c:119:16
 1e065aa:    40 aa             	r0 = sp + 164
 1e065ac:    bf f3 4a fa       	call -2924 <att_iterator_fetch_next : 1e05a44 >			  ## att_db.c:959:9
 1e065b0:    87 f5 ac 00       	r7 = h[sp+172] (u)			  ## att_db.c:961:16
 1e065b4:    02 2e             	if (r7 == 0) goto 4 <.GJTIE683_0_0_+0x888 : 1e065ba >
 1e065b6:    57 f2 f5 3f       	if (r7 < r5) goto -22 <.GJTIE683_0_0_+0x872 : 1e065a4 >
 1e065ba:    87 f2 40 80       	if (r7 > r8) goto 128 <.GJTIE683_0_0_+0x90C : 1e0663e >
 1e065be:    20 05             	r0 = r4.l (u)			  ## att_db.c:971:22
 1e065c0:    2a 20             	if (r0 == 0) goto 84 <.GJTIE683_0_0_+0x8E4 : 1e06616 >			  ## att_db.c:971:22
 1e065c2:    0c 2e             	if (r7 == 0) goto 24 <.GJTIE683_0_0_+0x8AA : 1e065dc >
 1e065c4:    40 aa             	r0 = sp + 164
 1e065c6:    01 fb 00 28       	r1 = 10240 <lrc.7+0xC : 2800 >			  ## att_db.c:972:32
 1e065ca:    bf f3 7b fa       	call -2826 <att_iterator_match_uuid16 : 1e05ac4 >			  ## att_db.c:972:32
 1e065ce:    06 30             	if (r0 != 0) goto 12 <.GJTIE683_0_0_+0x8AA : 1e065dc >
 1e065d0:    40 aa             	r0 = sp + 164
 1e065d2:    01 fb 01 28       	r1 = 10241 <lrc.7+0xD : 2801 >			  ## att_db.c:972:93
 1e065d6:    bf f3 75 fa       	call -2838 <att_iterator_match_uuid16 : 1e05ac4 >			  ## att_db.c:972:93
 1e065da:    20 20             	if (r0 == 0) goto 64 <.GJTIE683_0_0_+0x8EA : 1e0661c >
 1e065dc:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:975:13
 1e065e0:    d0 08             	r0 = r13			  ## att_db.c:975:13
 1e065e2:    c2 08             	r2 = r12			  ## att_db.c:975:13
 1e065e4:    80 f3 d1 22       	call 17826 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:975:13
 1e065e8:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:976:20
 1e065ec:    21 04             	r1 = r0.l (u)			  ## att_db.c:977:13
 1e065ee:    d0 08             	r0 = r13			  ## att_db.c:977:13
 1e065f0:    92 08             	r2 = r9			  ## att_db.c:977:13
 1e065f2:    80 f3 ca 22       	call 17812 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:977:13
 1e065f6:    e0 fc 04 00       	r0 = r14 + 4			  ## att_db.c:978:20
 1e065fa:    24 04             	r4 = r0.l (u)			  ## att_db.c:979:38
 1e065fc:    80 fb 40 0d       	r0 = r13 + r4			  ## att_db.c:979:36
 1e06600:    41 02             	r1 = [sp+16]			  ## att_db.c:979:13
 1e06602:    b2 08             	r2 = r11			  ## att_db.c:979:13
 1e06604:    98 f3 6e 04       	call 3147996 <memcpy : 106ee4 >			  ## att_db.c:979:13
 1e06608:    80 fb b0 e4       	r14 = r4 + r11			  ## att_db.c:980:20
 1e0660c:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:984:17
 1e06610:    a0 09             	r0 += r10			  ## att_db.c:984:24
 1e06612:    f0 f2 14 80       	if (r0 > r15) goto 40 <.GJTIE683_0_0_+0x90C : 1e0663e >
 1e06616:    04 70             	r4 = 0
 1e06618:    09 70             	r9 = 0
 1e0661a:    c4 2f             	if (r7 == 0) goto -120 <.GJTIE683_0_0_+0x872 : 1e065a4 >
 1e0661c:    40 aa             	r0 = sp + 164
 1e0661e:    61 08             	r1 = r6			  ## att_db.c:994:26
 1e06620:    32 02             	r2 = [sp+12]			  ## att_db.c:994:26
 1e06622:    bf f3 67 fa       	call -2866 <att_iterator_match_uuid : 1e05af4 >			  ## att_db.c:994:26
 1e06626:    79 08             	r9 = r7
 1e06628:    bd 21             	if (r0 == 0) goto -134 <.GJTIE683_0_0_+0x872 : 1e065a4 >
 1e0662a:    80 f5 b4 00       	r0 = h[sp+180] (u)			  ## att_db.c:997:45
 1e0662e:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:998:17
 1e06632:    40 80             	r0 += 4			  ## att_db.c:997:40
 1e06634:    21 e0 a5 3f       	if (r1 < 2) goto -182 <.GJTIE683_0_0_+0x850 : 1e06582 >			  ## att_db.c:997:40
 1e06638:    22 04             	r2 = r0.l (u)
 1e0663a:    a2 f2 a2 0f       	if (r2 == r10) goto -188 <.GJTIE683_0_0_+0x850 : 1e06582 >
 1e0663e:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1019:16
 1e06642:    10 e0 10 10       	if (r0 != 1) goto 32 <.GJTIE683_0_0_+0x934 : 1e06666 >			  ## att_db.c:1019:9
 1e06646:    10 70             	r0 = 1
 1e06648:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0664c:    00 71             	r0 = 16			  ## att_db.c:348:24
 1e0664e:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06652:    21 70             	r1 = 2
 1e06654:    d0 08             	r0 = r13
 1e06656:    52 08             	r2 = r5
 1e06658:    80 f3 97 22       	call 17710 <little_endian_store_16 : 1e0ab8a >
 1e0665c:    a0 70             	r0 = 10
 1e0665e:    10 f9 04 d0       	b[r13 + 4] = r0
 1e06662:    5e 70             	r14 = 5
 1e06664:    0a 18             	goto 20 <.GJTIE683_0_0_+0x948 : 1e0667a >
 1e06666:    10 71             	r0 = 17			  ## att_db.c:1023:24
 1e06668:    06 18             	goto 12 <.GJTIE683_0_0_+0x944 : 1e06676 >			  ## att_db.c:1023:24
 1e0666a:    4b 08             	r11 = r4
 1e0666c:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:705:16
 1e06670:    20 e0 07 30       	if (r0 < 2) goto 14 <.GJTIE683_0_0_+0x950 : 1e06682 >			  ## att_db.c:705:16
 1e06674:    90 70             	r0 = 9			  ## att_db.c:706:28
 1e06676:    10 f9 00 d0       	b[r13 + 0] = r0
 1e0667a:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1340:5
 1e0667e:    88 0a             	sp += 272			  ## att_db.c:1340:5
 1e06680:    5f 01             	{pc, r15-r4} = [sp++]			  ## att_db.c:1340:5
 1e06682:    0a e0 0f 00       	if (r10 == 0) goto 30 <.GJTIE683_0_0_+0x972 : 1e066a4 >			  ## att_db.c:711:9
 1e06686:    10 70             	r0 = 1
 1e06688:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0668c:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e0668e:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e06692:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e06694:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e06696:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e06698:    80 f3 77 22       	call 17646 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:349:5
 1e0669c:    1a f9 04 00       	b[r0 + 4] = r10			  ## att_db.c:350:24
 1e066a0:    5e 70             	r14 = 5			  ## att_db.c:350:24
 1e066a2:    eb 1f             	goto -42 <.GJTIE683_0_0_+0x948 : 1e0667a >			  ## att_db.c:350:24
 1e066a4:    10 70             	r0 = 1
 1e066a6:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e066aa:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e066ac:    e6 fd 00 2b       	r2 = r11.l (u)			  ## att_db.c:716:9
 1e066b0:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e066b4:    02 e0 c6 0e       	if (r2 == 0) goto -628 <.GJTIE683_0_0_+0x712 : 1e06444 >			  ## att_db.c:348:24
 1e066b8:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e066ba:    23 70             	r3 = 2			  ## att_db.c:349:5
 1e066bc:    cf 1e             	goto -610 <.GJTIE683_0_0_+0x72A : 1e0645c >			  ## att_db.c:349:5
 1e066be:    0a 08             	r10 = r0
 1e066c0:    d5 1f             	goto -86 <.GJTIE683_0_0_+0x93A : 1e0666c >


btctler_nv_memory_malloc:
 1e066c2:    75 01             	[--sp] = {rets, r5, r4}			  ## btcontroller_heap.c:221:0
 1e066c4:    05 08             	r5 = r0			  ## btcontroller_heap.c:221:0
 1e066c6:    80 f3 a4 38       	call 29000 <malloc : 1e0d812 >			  ## btcontroller_heap.c:227:9
 1e066ca:    04 08             	r4 = r0			  ## btcontroller_heap.c:227:9
 1e066cc:    05 28             	if (r4 == 0) goto 10 <btctler_nv_memory_malloc+0x16 : 1e066d8 >			  ## btcontroller_heap.c:228:9
 1e066ce:    01 70             	r1 = 0			  ## btcontroller_heap.c:229:9
 1e066d0:    52 08             	r2 = r5			  ## btcontroller_heap.c:229:9
 1e066d2:    98 f3 0d 04       	call 3147802 <memset : 106ef0 >			  ## btcontroller_heap.c:229:9
 1e066d6:    09 18             	goto 18 <btctler_nv_memory_malloc+0x28 : 1e066ea >			  ## btcontroller_heap.c:229:9
 1e066d8:    28 fb 00 13       	r1 = rets			  ## btcontroller_heap.c:235:9
 1e066dc:    c0 ff be 28 e1 01 	r0 = 31533246 <update_target_end+0x268E : 1e128be >			  ## btcontroller_heap.c:236:9
 1e066e2:    80 f3 60 33       	call 26304 <printf : 1e0cda6 >			  ## btcontroller_heap.c:236:9
 1e066e6:    8f f3 d6 e6       	call 2084268 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e066ea:    40 08             	r0 = r4			  ## btcontroller_heap.c:239:5
 1e066ec:    55 01             	{pc, r5, r4} = [sp++]			  ## btcontroller_heap.c:239:5


__bt_malloc:
 1e066ee:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:259:0
 1e066f0:    e8 17             	call -48 <btctler_nv_memory_malloc : 1e066c2 >			  ## btcontroller_heap.c:262:9
 1e066f2:    02 08             	r2 = r0			  ## btcontroller_heap.c:262:9
 1e066f4:    02 34             	if (r2 != 0) goto 4 <__bt_malloc+0xC : 1e066fa >
 1e066f6:    8f f3 ce e6       	call 2084252 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e066fa:    20 08             	r0 = r2			  ## btcontroller_heap.c:265:5
 1e066fc:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:265:5


__vsprintf_len:
 1e066fe:    77 01             	[--sp] = {rets, r7-r4}			  ## vsprintf.c:5:0
 1e06700:    fe 0b             	sp += -4			  ## vsprintf.c:5:0
 1e06702:    09 02             	[sp] = r1			  ## vsprintf.c:5:0
 1e06704:    01 70             	r1 = 0			  ## vsprintf.c:5:0
 1e06706:    72 20             	if (r0 == 0) goto 228 <.GJTIE734_0_0_+0xA6 : 1e067ec >			  ## vsprintf.c:5:0
 1e06708:    04 60             	r4 = b[r0 + 0] (u)			  ## vsprintf.c:12:12
 1e0670a:    70 28             	if (r4 == 0) goto 224 <.GJTIE734_0_0_+0xA6 : 1e067ec >			  ## vsprintf.c:12:12
 1e0670c:    42 76             	r2 = 100
 1e0670e:    a3 70             	r3 = 10
 1e06710:    14 05             	r4 = r4.b0 (s)			  ## vsprintf.c:13:17
 1e06712:    14 e6 0d d0       	ifs (r4 <= 97) goto 26 <__vsprintf_len+0x32 : 1e06730 >			  ## vsprintf.c:13:17
 1e06716:    24 e6 1b 00       	if (r4 == 98) goto 54 <.GJTIE734_0_0_+0xA : 1e06750 >
 1e0671a:    34 e6 2a 00       	if (r4 == 99) goto 84 <.GJTIE734_0_0_+0x2C : 1e06772 >
 1e0671e:    c4 e6 62 10       	if (r4 != 108) goto 196 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e06722:    04 02             	r4 = [sp]			  ## vsprintf.c:62:25
 1e06724:    45 98             	r5 = r4 + 4			  ## vsprintf.c:62:25
 1e06726:    0d 02             	[sp] = r5			  ## vsprintf.c:62:25
 1e06728:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:62:25
 1e0672a:    41 09             	r1 += r4			  ## vsprintf.c:62:23
 1e0672c:    11 80             	r1 += 1			  ## vsprintf.c:62:17
 1e0672e:    5b 18             	goto 182 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e06730:    45 fc bf ff       	r5 = r4 + -65
 1e06734:    b5 e0 2b 80       	if (r5 > 11) goto 86 <.GJTIE734_0_0_+0x48 : 1e0678e >
 1e06738:    a5 00             	tbb [r5]


.GJTIS734_0_0_:
 1e0673a:    06     < 6 : 0x6 >
 1e0673b:    36     < 54 : 0x36 >
 1e0673c:    3a     < 58 : 0x3A >
 1e0673d:    56     < 86 : 0x56 >
 1e0673e:    56     < 86 : 0x56 >
 1e0673f:    56     < 86 : 0x56 >
 1e06740:    56     < 86 : 0x56 >
 1e06741:    4c     < 76 : 0x4C >
 1e06742:    56     < 86 : 0x56 >
 1e06743:    56     < 86 : 0x56 >
 1e06744:    56     < 86 : 0x56 >
 1e06745:    51     < 81 : 0x51 >
 1e06746:    04 02             	r4 = [sp]			  ## vsprintf.c:49:13
 1e06748:    44 80             	r4 += 4			  ## vsprintf.c:49:13
 1e0674a:    0c 02             	[sp] = r4			  ## vsprintf.c:49:13
 1e0674c:    61 80             	r1 += 6			  ## vsprintf.c:48:17
 1e0674e:    4b 18             	goto 150 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e06750:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## vsprintf.c:23:20
 1e06754:    24 f9 02 00       	r4 = b[r0 + 2] (s)			  ## vsprintf.c:25:21
 1e06758:    80 fe 30 41       	r4 += r1 * r3			  ## vsprintf.c:25:17
 1e0675c:    41 fc f0 fd       	r1 = r4 + -528			  ## vsprintf.c:25:17
 1e06760:    20 80             	r0 += 2			  ## vsprintf.c:24:13
 1e06762:    1f 22             	if (r1 == 0) goto 62 <.GJTIE734_0_0_+0x5C : 1e067a2 >
 1e06764:    14 08             	r4 = r1
 1e06766:    05 02             	r5 = [sp]			  ## vsprintf.c:28:17
 1e06768:    45 80             	r5 += 4			  ## vsprintf.c:28:17
 1e0676a:    f4 8f             	r4 += -1			  ## vsprintf.c:27:28
 1e0676c:    0d 02             	[sp] = r5			  ## vsprintf.c:28:17
 1e0676e:    fb 39             	if (r4 != 0) goto -10 <.GJTIE734_0_0_+0x20 : 1e06766 >			  ## vsprintf.c:28:17
 1e06770:    3a 18             	goto 116 <.GJTIE734_0_0_+0xA0 : 1e067e6 >			  ## vsprintf.c:28:17
 1e06772:    04 02             	r4 = [sp]			  ## vsprintf.c:36:13
 1e06774:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:35:21
 1e06778:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:33:21
 1e0677c:    44 80             	r4 += 4			  ## vsprintf.c:36:13
 1e0677e:    0c 02             	[sp] = r4			  ## vsprintf.c:36:13
 1e06780:    51 09             	r1 += r5			  ## vsprintf.c:33:17
 1e06782:    80 fe 30 16       	r1 += r6 * r3			  ## vsprintf.c:35:29
 1e06786:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:35:17
 1e0678a:    20 80             	r0 += 2			  ## vsprintf.c:34:13
 1e0678c:    2c 18             	goto 88 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e0678e:    45 fc cf ff       	r5 = r4 + -49
 1e06792:    45 e0 28 20       	if (r5 >= 4) goto 80 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e06796:    05 02             	r5 = [sp]			  ## vsprintf.c:19:13
 1e06798:    45 80             	r5 += 4			  ## vsprintf.c:19:13
 1e0679a:    0d 02             	[sp] = r5			  ## vsprintf.c:19:13
 1e0679c:    41 09             	r1 += r4			  ## vsprintf.c:18:28
 1e0679e:    01 8d             	r1 += -48			  ## vsprintf.c:18:17
 1e067a0:    22 18             	goto 68 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e067a2:    01 70             	r1 = 0
 1e067a4:    20 18             	goto 64 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e067a6:    04 02             	r4 = [sp]			  ## vsprintf.c:59:13
 1e067a8:    44 80             	r4 += 4			  ## vsprintf.c:59:13
 1e067aa:    0c 02             	[sp] = r4			  ## vsprintf.c:59:13
 1e067ac:    1c 18             	goto 56 <.GJTIE734_0_0_+0xA0 : 1e067e6 >			  ## vsprintf.c:59:13
 1e067ae:    04 02             	r4 = [sp]			  ## vsprintf.c:45:13
 1e067b0:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:42:21
 1e067b4:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:40:21
 1e067b8:    27 f9 03 00       	r7 = b[r0 + 3] (s)			  ## vsprintf.c:44:21
 1e067bc:    44 80             	r4 += 4			  ## vsprintf.c:45:13
 1e067be:    0c 02             	[sp] = r4			  ## vsprintf.c:45:13
 1e067c0:    80 fe 20 16       	r1 += r6 * r2			  ## vsprintf.c:40:17
 1e067c4:    71 09             	r1 += r7			  ## vsprintf.c:42:17
 1e067c6:    80 fe 30 15       	r1 += r5 * r3			  ## vsprintf.c:44:29
 1e067ca:    11 fc 30 eb       	r1 = r1 + -5328			  ## vsprintf.c:44:17
 1e067ce:    30 80             	r0 += 3			  ## vsprintf.c:43:13
 1e067d0:    0a 18             	goto 20 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e067d2:    04 02             	r4 = [sp]			  ## vsprintf.c:53:13
 1e067d4:    44 80             	r4 += 4			  ## vsprintf.c:53:13
 1e067d6:    0c 02             	[sp] = r4			  ## vsprintf.c:53:13
 1e067d8:    21 80             	r1 += 2			  ## vsprintf.c:52:17
 1e067da:    05 18             	goto 10 <.GJTIE734_0_0_+0xA0 : 1e067e6 >
 1e067dc:    04 02             	r4 = [sp]			  ## vsprintf.c:56:20
 1e067de:    45 98             	r5 = r4 + 4			  ## vsprintf.c:56:20
 1e067e0:    0d 02             	[sp] = r5			  ## vsprintf.c:56:20
 1e067e2:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:56:20
 1e067e4:    41 09             	r1 += r4			  ## vsprintf.c:56:17
 1e067e6:    14 60             	r4 = b[r0 + 1] (u)			  ## vsprintf.c:12:12
 1e067e8:    10 80             	r0 += 1			  ## vsprintf.c:65:15
 1e067ea:    92 39             	if (r4 != 0) goto -220 <__vsprintf_len+0x12 : 1e06710 >
 1e067ec:    10 08             	r0 = r1			  ## vsprintf.c:69:1
 1e067ee:    02 0a             	sp += 4			  ## vsprintf.c:69:1
 1e067f0:    57 01             	{pc, r7-r4} = [sp++]			  ## vsprintf.c:69:1


lbuf_alloc_btctrler:
 1e067f2:    77 01             	[--sp] = {rets, r7-r4}			  ## lbuf.c:60:0
 1e067f4:    04 08             	r4 = r0			  ## lbuf.c:60:0
 1e067f6:    06 93             	r6 = r1 + 16			  ## lbuf.c:68:9
 1e067f8:    20 fd 03 69       	r0 = r6 & 3			  ## lbuf.c:69:13
 1e067fc:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:70:18
 1e06800:    05 70             	r5 = 0			  ## lbuf.c:70:18
 1e06802:    07 70             	r7 = 0			  ## lbuf.c:69:9
 1e06804:    60 ff 03 69 01 00 	if ((r6 & 3) == 0) goto 2 <lbuf_alloc_btctrler+0x1A : 1e0680c >			  ## lbuf.c:69:9
 1e0680a:    07 08             	r7 = r0			  ## lbuf.c:69:9
 1e0680c:    98 f3 c6 02       	call 3147148 <local_irq_disable : 106d9c >			  ## lbuf.c:74:5
 1e06810:    20 48             	r0 = [r4 + 8]			  ## lbuf.c:76:5
 1e06812:    82 98             	r2 = r4 + 8			  ## lbuf.c:76:5
 1e06814:    20 f2 1f 00       	if (r0 == r2) goto 62 <lbuf_alloc_btctrler+0x64 : 1e06856 >			  ## lbuf.c:76:5
 1e06818:    81 bf             	r1 = r7 + r6			  ## lbuf.c:69:9
 1e0681a:    46 50             	r6 = h[r0 + 8] (u)			  ## lbuf.c:77:13
 1e0681c:    16 f2 04 20       	if (r6 >= r1) goto 8 <lbuf_alloc_btctrler+0x36 : 1e06828 >			  ## lbuf.c:77:13
 1e06820:    00 40             	r0 = [r0 + 0]			  ## lbuf.c:76:5
 1e06822:    20 f2 fa 1f       	if (r0 != r2) goto -12 <lbuf_alloc_btctrler+0x28 : 1e0681a >
 1e06826:    17 18             	goto 46 <lbuf_alloc_btctrler+0x64 : 1e06856 >
 1e06828:    03 40             	r3 = [r0 + 0]			  ## lbuf.c:83:61
 1e0682a:    12 40             	r2 = [r0 + 4]			  ## lbuf.c:83:46
 1e0682c:    c5 92             	r5 = r1 + 12			  ## lbuf.c:80:26
 1e0682e:    56 f2 07 90       	if (r6 <= r5) goto 14 <lbuf_alloc_btctrler+0x4E : 1e06840 >
 1e06832:    45 b0             	r5 = r0 + r1			  ## lbuf.c:81:44
 1e06834:    66 bc             	r6 = r6 - r1			  ## lbuf.c:82:31
 1e06836:    4e 5a             	h[r5 + 8] = r6			  ## lbuf.c:82:22
 1e06838:    1d 46             	[r3 + 4] = r5			  ## list.h:137:16
 1e0683a:    0b 4a             	[r5 + 0] = r3			  ## list.h:138:16
 1e0683c:    53 08             	r3 = r5			  ## list.h:138:16
 1e0683e:    01 18             	goto 2 <lbuf_alloc_btctrler+0x50 : 1e06842 >
 1e06840:    61 08             	r1 = r6
 1e06842:    1a 46             	[r3 + 4] = r2
 1e06844:    0b 44             	[r2 + 0] = r3
 1e06846:    2c 40             	[r0 + 8] = r4			  ## lbuf.c:95:21
 1e06848:    02 70             	r2 = 0			  ## lbuf.c:96:22
 1e0684a:    ea 60             	b[r0 + 14] = r2			  ## lbuf.c:96:22
 1e0684c:    69 50             	h[r0 + 12] = r1			  ## lbuf.c:97:20
 1e0684e:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:98:20
 1e06850:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e06852:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e06854:    05 91             	r5 = r0 + 16			  ## lbuf.c:105:21
 1e06856:    98 f3 9f 02       	call 3147070 <local_irq_enable : 106d98 >			  ## lbuf.c:115:5
 1e0685a:    50 08             	r0 = r5			  ## lbuf.c:116:5
 1e0685c:    57 01             	{pc, r7-r4} = [sp++]			  ## lbuf.c:116:5


lbuf_push_btctrler:
 1e0685e:    74 01             	[--sp] = {rets, r4}			  ## lbuf.c:197:0
 1e06860:    04 08             	r4 = r0			  ## lbuf.c:197:0
 1e06862:    98 f3 9b 02       	call 3147062 <local_irq_disable : 106d9c >			  ## lbuf.c:201:5
 1e06866:    01 70             	r1 = 0			  ## lbuf.c:203:14
 1e06868:    40 fc f0 ff       	r0 = r4 + -16			  ## lbuf.c:203:14
 1e0686c:    e9 60             	b[r0 + 14] = r1			  ## lbuf.c:203:14
 1e0686e:    f1 60             	r1 = b[r0 + 15] (u)			  ## lbuf.c:204:15
 1e06870:    12 92             	r2 = r1 + 1			  ## lbuf.c:204:15
 1e06872:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:204:15
 1e06874:    06 32             	if (r1 != 0) goto 12 <lbuf_push_btctrler+0x24 : 1e06882 >			  ## lbuf.c:204:15
 1e06876:    21 40             	r1 = [r0 + 8]			  ## lbuf.c:205:38
 1e06878:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e0687a:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e0687c:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0687e:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e06880:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e06882:    14 01             	{rets, r4} = [sp++]			  ## lbuf.c:208:5
 1e06884:    d8 f3 88 02       	goto 3147024 <local_irq_enable : 106d98 >			  ## lbuf.c:208:5


thread_resume:
 1e06888:    74 01             	[--sp] = {rets, r4}			  ## thread.c:143:0
 1e0688a:    04 08             	r4 = r0			  ## thread.c:143:0
 1e0688c:    98 f3 86 02       	call 3147020 <local_irq_disable : 106d9c >			  ## thread.c:150:5
 1e06890:    00 70             	r0 = 0			  ## thread.c:150:5
 1e06892:    68 69             	b[r4 + 22] = r0			  ## thread.c:151:25
 1e06894:    50 69             	r0 = b[r4 + 21] (u)			  ## thread.c:152:27
 1e06896:    11 70             	r1 = 1			  ## thread.c:152:22
 1e06898:    01 ff ff 00 01 00 	if (r0 != 255) goto 2 <thread_resume+0x18 : 1e068a0 >			  ## thread.c:152:22
 1e0689e:    01 70             	r1 = 0			  ## thread.c:152:22
 1e068a0:    10 09             	r0 += r1			  ## thread.c:152:22
 1e068a2:    58 69             	b[r4 + 21] = r0			  ## thread.c:152:20
 1e068a4:    98 f3 78 02       	call 3146992 <local_irq_enable : 106d98 >			  ## thread.c:154:5
 1e068a8:    20 48             	r0 = [r4 + 8]			  ## thread.c:156:9
 1e068aa:    50 40             	r0 = [r0 + 20]			  ## thread.c:156:16
 1e068ac:    14 01             	{rets, r4} = [sp++]			  ## thread.c:156:5
 1e068ae:    90 00             	goto r0			  ## thread.c:156:5


hw_dma_pop:
 1e068b0:    74 01             	[--sp] = {rets, r4}			  ## hw_dma.c:75:0
 1e068b2:    04 40             	r4 = [r0 + 0]			  ## list.h:124:18
 1e068b4:    04 f2 0b 00       	if (r4 == r0) goto 22 <hw_dma_pop+0x1E : 1e068ce >			  ## list.h:124:18
 1e068b8:    98 f3 70 02       	call 3146976 <local_irq_disable : 106d9c >			  ## hw_dma.c:85:5
 1e068bc:    00 48             	r0 = [r4 + 0]			  ## list.h:171:36
 1e068be:    11 48             	r1 = [r4 + 4]			  ## list.h:171:23
 1e068c0:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e068c2:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e068c4:    0c 48             	[r4 + 0] = r4			  ## list.h:172:17
 1e068c6:    1c 48             	[r4 + 4] = r4			  ## list.h:173:17
 1e068c8:    98 f3 66 02       	call 3146956 <local_irq_enable : 106d98 >			  ## hw_dma.c:87:5
 1e068cc:    01 18             	goto 2 <hw_dma_pop+0x20 : 1e068d0 >
 1e068ce:    04 70             	r4 = 0
 1e068d0:    40 08             	r0 = r4			  ## hw_dma.c:90:1
 1e068d2:    54 01             	{pc, r4} = [sp++]			  ## hw_dma.c:90:1


hw_dma_alloc:
 1e068d4:    34 00             	[--sp] = rets			  ## hw_dma.c:45:0
 1e068d6:    12 08             	r2 = r1			  ## hw_dma.c:45:0
 1e068d8:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## hw_dma.c:45:0
 1e068de:    06 20             	if (r0 == 0) goto 12 <hw_dma_alloc+0x18 : 1e068ec >			  ## hw_dma.c:45:0
 1e068e0:    00 f6 10 11       	r0 = [r1 + 272]			  ## hw_dma.c:45:0
 1e068e4:    13 fc 10 01       	r3 = r1 + 272			  ## hw_dma.c:45:0
 1e068e8:    08 30             	if (r0 != 0) goto 16 <hw_dma_alloc+0x26 : 1e068fa >			  ## hw_dma.c:45:0
 1e068ea:    05 18             	goto 10 <hw_dma_alloc+0x22 : 1e068f6 >			  ## hw_dma.c:45:0
 1e068ec:    00 f6 0c 11       	r0 = [r1 + 268]			  ## hw_dma.c:45:0
 1e068f0:    13 fc 0c 01       	r3 = r1 + 268			  ## hw_dma.c:45:0
 1e068f4:    02 30             	if (r0 != 0) goto 4 <hw_dma_alloc+0x26 : 1e068fa >			  ## hw_dma.c:45:0
 1e068f6:    8f f3 ce e5       	call 2083740 <p33_soft_reset : 3496 >			  ## hw_dma.c:45:0
 1e068fa:    00 46             	r0 = [r3 + 0]			  ## hw_dma.c:45:0
 1e068fc:    21 08             	r1 = r2			  ## hw_dma.c:52:16
 1e068fe:    88 01             	{rets} = [sp++]			  ## hw_dma.c:52:16
 1e06900:    78 1f             	goto -272 <lbuf_alloc_btctrler : 1e067f2 >			  ## hw_dma.c:52:16


hw_dma_push:
 1e06902:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:68:0
 1e06904:    14 08             	r4 = r1			  ## hw_dma.c:68:0
 1e06906:    05 08             	r5 = r0			  ## hw_dma.c:68:0
 1e06908:    98 f3 48 02       	call 3146896 <local_irq_disable : 106d9c >			  ## hw_dma.c:69:5
 1e0690c:    10 4a             	r0 = [r5 + 4]			  ## list.h:154:28
 1e0690e:    1c 4a             	[r5 + 4] = r4			  ## list.h:137:16
 1e06910:    0d 48             	[r4 + 0] = r5			  ## list.h:138:16
 1e06912:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e06914:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e06916:    15 01             	{rets, r5, r4} = [sp++]			  ## hw_dma.c:71:5
 1e06918:    d8 f3 3e 02       	goto 3146876 <local_irq_enable : 106d98 >			  ## hw_dma.c:71:5


aes128_start:
 1e0691c:    77 01             	[--sp] = {rets, r7-r4}			  ## aes128.c:18:0
 1e0691e:    24 08             	r4 = r2			  ## aes128.c:18:0
 1e06920:    15 08             	r5 = r1			  ## aes128.c:18:0
 1e06922:    06 08             	r6 = r0			  ## aes128.c:18:0
 1e06924:    98 f3 3a 02       	call 3146868 <local_irq_disable : 106d9c >			  ## aes128.c:19:5
 1e06928:    c0 6c             	r0 = b[r6 + 12] (u)			  ## aes_hw.c:46:12
 1e0692a:    d1 6c             	r1 = b[r6 + 13] (u)			  ## aes_hw.c:46:12
 1e0692c:    e2 6c             	r2 = b[r6 + 14] (u)			  ## aes_hw.c:46:12
 1e0692e:    f3 6c             	r3 = b[r6 + 15] (u)			  ## aes_hw.c:46:12
 1e06930:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:46:12
 1e06932:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:46:12
 1e06936:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## aes_hw.c:46:12
 1e0693a:    e0 fd 30 10       	r1 = r0 | r3			  ## aes_hw.c:46:12
 1e0693e:    c0 ff 00 43 1e 00 	r0 = 1983232 <uECC_vli_cmp_unsafe+0xDD304 : 1e4300 >
 1e06944:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:47:17
 1e06946:    81 6c             	r1 = b[r6 + 8] (u)			  ## aes_hw.c:49:12
 1e06948:    92 6c             	r2 = b[r6 + 9] (u)			  ## aes_hw.c:49:12
 1e0694a:    a3 6c             	r3 = b[r6 + 10] (u)			  ## aes_hw.c:49:12
 1e0694c:    b7 6c             	r7 = b[r6 + 11] (u)			  ## aes_hw.c:49:12
 1e0694e:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:49:12
 1e06950:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:49:12
 1e06954:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:49:12
 1e06958:    51 be             	r1 |= r7			  ## aes_hw.c:49:12
 1e0695a:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:50:17
 1e0695c:    41 6c             	r1 = b[r6 + 4] (u)			  ## aes_hw.c:52:12
 1e0695e:    52 6c             	r2 = b[r6 + 5] (u)			  ## aes_hw.c:52:12
 1e06960:    63 6c             	r3 = b[r6 + 6] (u)			  ## aes_hw.c:52:12
 1e06962:    77 6c             	r7 = b[r6 + 7] (u)			  ## aes_hw.c:52:12
 1e06964:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:52:12
 1e06966:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:52:12
 1e0696a:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:52:12
 1e0696e:    51 be             	r1 |= r7			  ## aes_hw.c:52:12
 1e06970:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:53:17
 1e06972:    01 6c             	r1 = b[r6 + 0] (u)			  ## aes_hw.c:55:12
 1e06974:    12 6c             	r2 = b[r6 + 1] (u)			  ## aes_hw.c:55:12
 1e06976:    23 6c             	r3 = b[r6 + 2] (u)			  ## aes_hw.c:55:12
 1e06978:    36 6c             	r6 = b[r6 + 3] (u)			  ## aes_hw.c:55:12
 1e0697a:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:55:12
 1e0697c:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:55:12
 1e06980:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:55:12
 1e06984:    51 bc             	r1 |= r6			  ## aes_hw.c:55:12
 1e06986:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:56:17
 1e06988:    c0 f4 10 09       	[r0 + 0] = 16			  ## aes_hw.c:59:17
 1e0698c:    01 40             	r1 = [r0 + 0]			  ## aes_hw.c:60:21
 1e0698e:    25 f3 fd 1f       	if ((r1 & 32) != 0) goto -6 <aes128_start+0x70 : 1e0698c >			  ## aes_hw.c:60:5
 1e06992:    c1 6a             	r1 = b[r5 + 12] (u)			  ## aes_hw.c:65:12
 1e06994:    d2 6a             	r2 = b[r5 + 13] (u)			  ## aes_hw.c:65:12
 1e06996:    e3 6a             	r3 = b[r5 + 14] (u)			  ## aes_hw.c:65:12
 1e06998:    f6 6a             	r6 = b[r5 + 15] (u)			  ## aes_hw.c:65:12
 1e0699a:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:65:12
 1e0699c:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:65:12
 1e069a0:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:65:12
 1e069a4:    51 bc             	r1 |= r6			  ## aes_hw.c:65:12
 1e069a6:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:66:19
 1e069a8:    81 6a             	r1 = b[r5 + 8] (u)			  ## aes_hw.c:68:12
 1e069aa:    92 6a             	r2 = b[r5 + 9] (u)			  ## aes_hw.c:68:12
 1e069ac:    a3 6a             	r3 = b[r5 + 10] (u)			  ## aes_hw.c:68:12
 1e069ae:    b6 6a             	r6 = b[r5 + 11] (u)			  ## aes_hw.c:68:12
 1e069b0:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:68:12
 1e069b2:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:68:12
 1e069b6:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:68:12
 1e069ba:    51 bc             	r1 |= r6			  ## aes_hw.c:68:12
 1e069bc:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:69:19
 1e069be:    41 6a             	r1 = b[r5 + 4] (u)			  ## aes_hw.c:71:12
 1e069c0:    52 6a             	r2 = b[r5 + 5] (u)			  ## aes_hw.c:71:12
 1e069c2:    63 6a             	r3 = b[r5 + 6] (u)			  ## aes_hw.c:71:12
 1e069c4:    76 6a             	r6 = b[r5 + 7] (u)			  ## aes_hw.c:71:12
 1e069c6:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:71:12
 1e069c8:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:71:12
 1e069cc:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:71:12
 1e069d0:    51 bc             	r1 |= r6			  ## aes_hw.c:71:12
 1e069d2:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:72:19
 1e069d4:    01 6a             	r1 = b[r5 + 0] (u)			  ## aes_hw.c:74:12
 1e069d6:    12 6a             	r2 = b[r5 + 1] (u)			  ## aes_hw.c:74:12
 1e069d8:    23 6a             	r3 = b[r5 + 2] (u)			  ## aes_hw.c:74:12
 1e069da:    35 6a             	r5 = b[r5 + 3] (u)			  ## aes_hw.c:74:12
 1e069dc:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:74:12
 1e069de:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:74:12
 1e069e2:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:74:12
 1e069e6:    51 ba             	r1 |= r5			  ## aes_hw.c:74:12
 1e069e8:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:75:19
 1e069ea:    c0 f4 01 09       	[r0 + 0] = 1			  ## aes_hw.c:78:18
 1e069ee:    01 40             	r1 = [r0 + 0]			  ## aes_hw.c:79:20
 1e069f0:    22 f3 fd 1f       	if ((r1 & 4) != 0) goto -6 <aes128_start+0xD2 : 1e069ee >			  ## aes_hw.c:79:5
 1e069f4:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e069f6:    09 68             	b[r4 + 0] = r1			  ## aes_hw.c:81:5
 1e069f8:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e069fa:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:81:5
 1e069fc:    19 68             	b[r4 + 1] = r1			  ## aes_hw.c:81:5
 1e069fe:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e06a00:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:81:5
 1e06a02:    29 68             	b[r4 + 2] = r1			  ## aes_hw.c:81:5
 1e06a04:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e06a06:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:81:5
 1e06a08:    39 68             	b[r4 + 3] = r1			  ## aes_hw.c:81:5
 1e06a0a:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e06a0c:    49 68             	b[r4 + 4] = r1			  ## aes_hw.c:82:5
 1e06a0e:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e06a10:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:82:5
 1e06a12:    59 68             	b[r4 + 5] = r1			  ## aes_hw.c:82:5
 1e06a14:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e06a16:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:82:5
 1e06a18:    69 68             	b[r4 + 6] = r1			  ## aes_hw.c:82:5
 1e06a1a:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e06a1c:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:82:5
 1e06a1e:    79 68             	b[r4 + 7] = r1			  ## aes_hw.c:82:5
 1e06a20:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e06a22:    89 68             	b[r4 + 8] = r1			  ## aes_hw.c:83:5
 1e06a24:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e06a26:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:83:5
 1e06a28:    99 68             	b[r4 + 9] = r1			  ## aes_hw.c:83:5
 1e06a2a:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e06a2c:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:83:5
 1e06a2e:    a9 68             	b[r4 + 10] = r1			  ## aes_hw.c:83:5
 1e06a30:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e06a32:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:83:5
 1e06a34:    b9 68             	b[r4 + 11] = r1			  ## aes_hw.c:83:5
 1e06a36:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e06a38:    c9 68             	b[r4 + 12] = r1			  ## aes_hw.c:84:5
 1e06a3a:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e06a3c:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:84:5
 1e06a3e:    d9 68             	b[r4 + 13] = r1			  ## aes_hw.c:84:5
 1e06a40:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e06a42:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:84:5
 1e06a44:    e9 68             	b[r4 + 14] = r1			  ## aes_hw.c:84:5
 1e06a46:    60 40             	r0 = [r0 + 24]			  ## aes_hw.c:84:5
 1e06a48:    00 d6             	r0 = r0 >> 24			  ## aes_hw.c:84:5
 1e06a4a:    f8 68             	b[r4 + 15] = r0			  ## aes_hw.c:84:5
 1e06a4c:    17 01             	{rets, r7-r4} = [sp++]			  ## aes128.c:21:5
 1e06a4e:    d8 f3 a3 01       	goto 3146566 <local_irq_enable : 106d98 >			  ## aes128.c:21:5


thread_suspend:
 1e06a52:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:122:0
 1e06a54:    15 08             	r5 = r1			  ## thread.c:122:0
 1e06a56:    04 08             	r4 = r0			  ## thread.c:122:0
 1e06a58:    98 f3 a0 01       	call 3146560 <local_irq_disable : 106d9c >			  ## thread.c:129:5
 1e06a5c:    6d 69             	b[r4 + 22] = r5			  ## thread.c:130:25
 1e06a5e:    07 3a             	if (r5 != 0) goto 14 <thread_suspend+0x1C : 1e06a6e >			  ## thread.c:130:25
 1e06a60:    52 69             	r2 = b[r4 + 21] (u)			  ## thread.c:133:31
 1e06a62:    21 fc ff ff       	r1 = r2 + -1			  ## thread.c:133:61
 1e06a66:    00 70             	r0 = 0			  ## thread.c:133:26
 1e06a68:    01 24             	if (r2 == 0) goto 2 <thread_suspend+0x1A : 1e06a6c >			  ## thread.c:133:26
 1e06a6a:    10 08             	r0 = r1			  ## thread.c:133:26
 1e06a6c:    58 69             	b[r4 + 21] = r0			  ## thread.c:133:24
 1e06a6e:    15 01             	{rets, r5, r4} = [sp++]			  ## thread.c:137:5
 1e06a70:    d8 f3 92 01       	goto 3146532 <local_irq_enable : 106d98 >			  ## thread.c:137:5


pseudo_random_genrate:
 1e06a74:    08 22             	if (r1 == 0) goto 16 <pseudo_random_genrate+0x12 : 1e06a86 >			  ## misc_hw.c:84:0
 1e06a76:    c2 ff 00 3b 1e 00 	r2 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## misc_hw.c:84:0
 1e06a7c:    03 44             	r3 = [r2 + 0]			  ## misc_hw.c:86:28
 1e06a7e:    93 f9 01 00       	b[r0 ++= 1] = r3			  ## misc_hw.c:86:17
 1e06a82:    51 f3 fb ff       	if (--r1 != 0) goto -10 <pseudo_random_genrate+0x8 : 1e06a7c >
 1e06a86:    20 00             	rts			  ## misc_hw.c:88:1


sys_timer_register:
 1e06a88:    02 08             	r2 = r0			  ## sys_timer.c:30:0
 1e06a8a:    00 70             	r0 = 0			  ## sys_timer.c:31:12
 1e06a8c:    c0 f3 85 2c       	goto 22794 <sys_timer_add : 1e0c39a >			  ## sys_timer.c:31:12


sys_timer_set_context:
 1e06a90:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:57:0
 1e06a92:    c0 f3 55 2e       	goto 23722 <sys_timer_set_user_data : 1e0c740 >			  ## sys_timer.c:58:5


low_power_request:
 1e06a96:    c0 ff 80 48 00 00 	r0 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:668:0
 1e06a9c:    01 f9 32 00       	r1 = b[r0 + 50] (u)			  ## power_hw.c:669:17
 1e06aa0:    03 22             	if (r1 == 0) goto 6 <low_power_request+0x12 : 1e06aa8 >			  ## power_hw.c:669:17
 1e06aa2:    11 70             	r1 = 1			  ## power_hw.c:670:25
 1e06aa4:    11 f9 30 00       	b[r0 + 48] = r1			  ## power_hw.c:670:25
 1e06aa8:    20 00             	rts			  ## power_hw.c:676:1


lbuf_init_btctrler:
 1e06aaa:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:28:0
 1e06aac:    fe 0b             	sp += -4			  ## lbuf.c:28:0
 1e06aae:    15 08             	r5 = r1			  ## lbuf.c:28:0
 1e06ab0:    04 08             	r4 = r0			  ## lbuf.c:28:0
 1e06ab2:    60 ff 03 49 0e 00 	if ((r4 & 3) == 0) goto 28 <lbuf_init_btctrler+0x2A : 1e06ad4 >			  ## lbuf.c:28:0
 1e06ab8:    20 fd 03 49       	r0 = r4 & 3			  ## lbuf.c:32:18
 1e06abc:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:33:22
 1e06ac0:    25 ba             	r5 = r5 - r0			  ## lbuf.c:33:17
 1e06ac2:    04 09             	r4 += r0			  ## lbuf.c:34:13
 1e06ac4:    c2 ff 71 28 e1 01 	r2 = 31533169 <update_target_end+0x2641 : 1e12871 >			  ## lbuf.c:36:9
 1e06aca:    10 70             	r0 = 1			  ## lbuf.c:36:9
 1e06acc:    0d 02             	[sp] = r5			  ## lbuf.c:36:9
 1e06ace:    43 08             	r3 = r4			  ## lbuf.c:36:9
 1e06ad0:    80 f3 96 31       	call 25388 <log_print : 1e0ce00 >			  ## lbuf.c:36:9
 1e06ad4:    60 ff 03 49 02 00 	if ((r4 & 3) == 0) goto 4 <lbuf_init_btctrler+0x34 : 1e06ade >
 1e06ada:    8f f3 dc e4       	call 2083256 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e06ade:    c0 ff e4 ff 00 00 	r0 = 65508 <_IRQ_MEM_ADDR+0xE4 : ffe4 >			  ## lbuf.c:43:41
 1e06ae4:    50 09             	r0 += r5			  ## lbuf.c:43:41
 1e06ae6:    c8 58             	h[r4 + 24] = r0			  ## lbuf.c:43:15
 1e06ae8:    0c 48             	[r4 + 0] = r4			  ## list.h:188:16
 1e06aea:    1c 48             	[r4 + 4] = r4			  ## list.h:189:16
 1e06aec:    00 99             	r0 = r4 + 16			  ## lbuf.c:42:34
 1e06aee:    38 48             	[r4 + 12] = r0			  ## list.h:137:16
 1e06af0:    81 98             	r1 = r4 + 8			  ## lbuf.c:50:27
 1e06af2:    49 48             	[r4 + 16] = r1			  ## list.h:138:16
 1e06af4:    59 48             	[r4 + 20] = r1			  ## list.h:139:16
 1e06af6:    28 48             	[r4 + 8] = r0			  ## list.h:140:16
 1e06af8:    40 08             	r0 = r4			  ## lbuf.c:54:5
 1e06afa:    02 0a             	sp += 4			  ## lbuf.c:54:5
 1e06afc:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:54:5


crc_get_32bit:
 1e06afe:    74 01             	[--sp] = {rets, r4}			  ## misc_hw.c:32:0
 1e06b00:    02 70             	r2 = 0			  ## misc_hw.c:32:0
 1e06b02:    c1 ff 00 35 1e 00 	r1 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## misc_hw.c:32:0
 1e06b08:    1a 42             	[r1 + 4] = r2			  ## misc_hw.c:36:17
 1e06b0a:    04 60             	r4 = b[r0 + 0] (u)			  ## misc_hw.c:36:17
 1e06b0c:    13 90             	r3 = r0 + 1			  ## misc_hw.c:37:5
 1e06b0e:    14 05             	r4 = r4.b0 (s)			  ## misc_hw.c:39:24
 1e06b10:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:39:22
 1e06b12:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## misc_hw.c:40:14
 1e06b16:    12 80             	r2 += 1			  ## misc_hw.c:40:5
 1e06b18:    fa 39             	if (r4 != 0) goto -12 <crc_get_32bit+0x10 : 1e06b0e >			  ## misc_hw.c:40:5
 1e06b1a:    08 00             	csync			  ## misc_hw.c:42:5
 1e06b1c:    13 42             	r3 = [r1 + 4]			  ## misc_hw.c:43:19
 1e06b1e:    c1 f4 00 19       	[r1 + 4] = 0			  ## misc_hw.c:45:17
 1e06b22:    24 fa 00 02       	r4 = b[r0+r2] (s)			  ## misc_hw.c:48:24
 1e06b26:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:48:22
 1e06b28:    52 f3 fb ff       	if (--r2 != 0) goto -10 <crc_get_32bit+0x24 : 1e06b22 >			  ## misc_hw.c:49:5
 1e06b2c:    08 00             	csync			  ## misc_hw.c:51:5
 1e06b2e:    10 42             	r0 = [r1 + 4]			  ## misc_hw.c:52:20
 1e06b30:    00 c4             	r0 = r0 << 16			  ## misc_hw.c:52:24
 1e06b32:    50 b6             	r0 |= r3			  ## misc_hw.c:52:9
 1e06b34:    54 01             	{pc, r4} = [sp++]			  ## misc_hw.c:54:5


thread_create:
 1e06b36:    79 01             	[--sp] = {rets, r9-r4}			  ## thread.c:85:0
 1e06b38:    34 08             	r4 = r3			  ## thread.c:85:0
 1e06b3a:    28 08             	r8 = r2			  ## thread.c:85:0
 1e06b3c:    19 08             	r9 = r1			  ## thread.c:85:0
 1e06b3e:    05 08             	r5 = r0			  ## thread.c:85:0
 1e06b40:    90 08             	r0 = r9			  ## thread.c:63:22
 1e06b42:    dd 17             	call -70 <crc_get_32bit : 1e06afe >			  ## thread.c:63:22
 1e06b44:    06 48             	r6 = [r4 + 0]			  ## thread.c:63:22
 1e06b46:    07 08             	r7 = r0			  ## thread.c:63:22
 1e06b48:    46 f2 09 00       	if (r6 == r4) goto 18 <thread_create+0x28 : 1e06b5e >
 1e06b4c:    30 4c             	r0 = [r6 + 12]			  ## thread.c:69:44
 1e06b4e:    d7 17             	call -82 <crc_get_32bit : 1e06afe >			  ## thread.c:69:27
 1e06b50:    07 f2 1c 00       	if (r7 == r0) goto 56 <thread_create+0x56 : 1e06b8c >			  ## thread.c:69:27
 1e06b54:    06 4c             	r6 = [r6 + 0]
 1e06b56:    46 f2 f9 1f       	if (r6 != r4) goto -14 <thread_create+0x16 : 1e06b4c >
 1e06b5a:    00 48             	r0 = [r4 + 0]
 1e06b5c:    01 18             	goto 2 <thread_create+0x2A : 1e06b60 >
 1e06b5e:    40 08             	r0 = r4			  ## list.h:124:18
 1e06b60:    18 f6 10 50       	[r5 + 16] = r8			  ## thread.c:95:13
 1e06b64:    11 70             	r1 = 1			  ## thread.c:96:20
 1e06b66:    59 6b             	b[r5 + 21] = r1			  ## thread.c:96:20
 1e06b68:    01 70             	r1 = 0			  ## thread.c:97:25
 1e06b6a:    69 6b             	b[r5 + 22] = r1			  ## thread.c:97:25
 1e06b6c:    19 f6 0c 50       	[r5 + 12] = r9			  ## thread.c:98:14
 1e06b70:    2c 4a             	[r5 + 8] = r4			  ## thread.c:99:15
 1e06b72:    40 f2 06 10       	if (r0 != r4) goto 12 <thread_create+0x4C : 1e06b82 >			  ## thread.c:99:15
 1e06b76:    22 48             	r2 = [r4 + 8]			  ## thread.c:104:26
 1e06b78:    c0 ff 90 6b e0 01 	r0 = 31484816 <thread_schedule : 1e06b90 >			  ## thread.c:104:15
 1e06b7e:    82 00             	call r2			  ## thread.c:104:15
 1e06b80:    06 30             	if (r0 != 0) goto 12 <thread_create+0x58 : 1e06b8e >
 1e06b82:    10 48             	r0 = [r4 + 4]			  ## list.h:154:28
 1e06b84:    1d 48             	[r4 + 4] = r5			  ## list.h:137:16
 1e06b86:    0c 4a             	[r5 + 0] = r4			  ## list.h:138:16
 1e06b88:    18 4a             	[r5 + 4] = r0			  ## list.h:139:16
 1e06b8a:    0d 40             	[r0 + 0] = r5			  ## list.h:140:16
 1e06b8c:    00 70             	r0 = 0
 1e06b8e:    59 01             	{pc, r9-r4} = [sp++]			  ## thread.c:118:1


thread_schedule:
 1e06b90:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:27:0
 1e06b92:    04 08             	r4 = r0			  ## thread.c:27:0
 1e06b94:    02 48             	r2 = [r4 + 0]			  ## thread.c:33:5
 1e06b96:    42 f2 0a 00       	if (r2 == r4) goto 20 <thread_schedule+0x1E : 1e06bae >
 1e06b9a:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:35:16
 1e06b9c:    05 44             	r5 = [r2 + 0]			  ## thread.c:35:16
 1e06b9e:    03 20             	if (r0 == 0) goto 6 <thread_schedule+0x16 : 1e06ba6 >
 1e06ba0:    41 44             	r1 = [r2 + 16]			  ## thread.c:37:16
 1e06ba2:    20 08             	r0 = r2			  ## thread.c:37:13
 1e06ba4:    81 00             	call r1			  ## thread.c:37:13
 1e06ba6:    52 08             	r2 = r5
 1e06ba8:    45 f2 f7 1f       	if (r5 != r4) goto -18 <thread_schedule+0xA : 1e06b9a >
 1e06bac:    02 48             	r2 = [r4 + 0]
 1e06bae:    42 f2 0f 00       	if (r2 == r4) goto 30 <thread_schedule+0x40 : 1e06bd0 >
 1e06bb2:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:43:16
 1e06bb4:    04 20             	if (r0 == 0) goto 8 <thread_schedule+0x2E : 1e06bbe >			  ## thread.c:43:16
 1e06bb6:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:43:34
 1e06bb8:    0f 20             	if (r0 == 0) goto 30 <thread_schedule+0x48 : 1e06bd8 >			  ## thread.c:43:34
 1e06bba:    8f f3 6c e4       	call 2083032 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e06bbe:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:50:31
 1e06bc0:    03 f2 01 c0       	ifs (r3 > r0) goto 2 <thread_schedule+0x36 : 1e06bc6 >
 1e06bc4:    30 08             	r0 = r3			  ## thread.c:50:13
 1e06bc6:    02 44             	r2 = [r2 + 0]
 1e06bc8:    03 08             	r3 = r0
 1e06bca:    42 f2 f2 1f       	if (r2 != r4) goto -28 <thread_schedule+0x22 : 1e06bb2 >
 1e06bce:    00 00             	nop
 1e06bd0:    42 48             	r2 = [r4 + 16]			  ## thread.c:55:12
 1e06bd2:    01 04             	r1 = r0.b0 (u)			  ## thread.c:55:5
 1e06bd4:    00 70             	r0 = 0			  ## thread.c:55:5
 1e06bd6:    82 00             	call r2			  ## thread.c:55:5
 1e06bd8:    55 01             	{pc, r5, r4} = [sp++]			  ## thread.c:56:1


thread_run:
 1e06bda:    da 1f             	goto -76 <thread_schedule : 1e06b90 >			  ## thread.c:175:0


ccm_memory_v2:
 1e06bdc:    7a 01             	[--sp] = {rets, r10-r4}			  ## aes_hw.c:99:0
 1e06bde:    36 08             	r6 = r3			  ## aes_hw.c:99:0
 1e06be0:    28 08             	r8 = r2			  ## aes_hw.c:99:0
 1e06be2:    15 08             	r5 = r1			  ## aes_hw.c:99:0
 1e06be4:    07 08             	r7 = r0			  ## aes_hw.c:99:0
 1e06be6:    98 f3 d9 00       	call 3146162 <local_irq_disable : 106d9c >			  ## aes_hw.c:101:5
 1e06bea:    90 02             	r0 = [sp+36]			  ## aes_hw.c:101:5
 1e06bec:    08 00             	csync			  ## aes_hw.c:101:5
 1e06bee:    c2 ff 00 43 1e 00 	r2 = 1983232 <uECC_vli_cmp_unsafe+0xDD304 : 1e4300 >			  ## aes_hw.c:101:5
 1e06bf4:    b8 44             	[r2 + 44] = r0			  ## aes_hw.c:106:21
 1e06bf6:    30 6e             	r0 = b[r7 + 3] (u)			  ## aes_hw.c:110:12
 1e06bf8:    21 6e             	r1 = b[r7 + 2] (u)			  ## aes_hw.c:110:12
 1e06bfa:    13 6e             	r3 = b[r7 + 1] (u)			  ## aes_hw.c:110:12
 1e06bfc:    04 6e             	r4 = b[r7 + 0] (u)			  ## aes_hw.c:110:12
 1e06bfe:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:110:12
 1e06c00:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:110:12
 1e06c04:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:110:12
 1e06c08:    50 b8             	r0 |= r4			  ## aes_hw.c:110:12
 1e06c0a:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:111:17
 1e06c0c:    70 6e             	r0 = b[r7 + 7] (u)			  ## aes_hw.c:113:12
 1e06c0e:    61 6e             	r1 = b[r7 + 6] (u)			  ## aes_hw.c:113:12
 1e06c10:    53 6e             	r3 = b[r7 + 5] (u)			  ## aes_hw.c:113:12
 1e06c12:    44 6e             	r4 = b[r7 + 4] (u)			  ## aes_hw.c:113:12
 1e06c14:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:113:12
 1e06c16:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:113:12
 1e06c1a:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:113:12
 1e06c1e:    50 b8             	r0 |= r4			  ## aes_hw.c:113:12
 1e06c20:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:114:17
 1e06c22:    b0 6e             	r0 = b[r7 + 11] (u)			  ## aes_hw.c:116:12
 1e06c24:    a1 6e             	r1 = b[r7 + 10] (u)			  ## aes_hw.c:116:12
 1e06c26:    93 6e             	r3 = b[r7 + 9] (u)			  ## aes_hw.c:116:12
 1e06c28:    84 6e             	r4 = b[r7 + 8] (u)			  ## aes_hw.c:116:12
 1e06c2a:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:116:12
 1e06c2c:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:116:12
 1e06c30:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:116:12
 1e06c34:    50 b8             	r0 |= r4			  ## aes_hw.c:116:12
 1e06c36:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:117:17
 1e06c38:    f0 6e             	r0 = b[r7 + 15] (u)			  ## aes_hw.c:119:12
 1e06c3a:    e1 6e             	r1 = b[r7 + 14] (u)			  ## aes_hw.c:119:12
 1e06c3c:    d3 6e             	r3 = b[r7 + 13] (u)			  ## aes_hw.c:119:12
 1e06c3e:    c4 6e             	r4 = b[r7 + 12] (u)			  ## aes_hw.c:119:12
 1e06c40:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:119:12
 1e06c42:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:119:12
 1e06c46:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:119:12
 1e06c4a:    50 b8             	r0 |= r4			  ## aes_hw.c:119:12
 1e06c4c:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:120:17
 1e06c4e:    c0 f4 10 29       	[r2 + 0] = 16			  ## aes_hw.c:122:17
 1e06c52:    08 2c             	if (r6 == 0) goto 16 <ccm_memory_v2+0x88 : 1e06c64 >			  ## aes_hw.c:123:9
 1e06c54:    16 e0 02 00       	if (r6 == 1) goto 4 <ccm_memory_v2+0x80 : 1e06c5c >
 1e06c58:    8f f3 1d e4       	call 2082874 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e06c5c:    00 44             	r0 = [r2 + 0]			  ## aes_hw.c:125:21
 1e06c5e:    07 fd 08 0a       	r7 = r0 | 2048			  ## aes_hw.c:125:21
 1e06c62:    03 18             	goto 6 <ccm_memory_v2+0x8E : 1e06c6a >
 1e06c64:    00 44             	r0 = [r2 + 0]			  ## aes_hw.c:127:21
 1e06c66:    37 fd 08 0a       	r7 = r0 & 4294965247			  ## aes_hw.c:127:21
 1e06c6a:    d1 02             	r1 = [sp+52]
 1e06c6c:    c4 02             	r4 = [sp+48]
 1e06c6e:    b0 02             	r0 = [sp+44]
 1e06c70:    0a f5 28 00       	r10 = [sp+40]
 1e06c74:    09 f5 20 00       	r9 = [sp+32]
 1e06c78:    0f 44             	[r2 + 0] = r7
 1e06c7a:    07 44             	r7 = [r2 + 0]			  ## aes_hw.c:129:20
 1e06c7c:    25 f3 fd 7f       	if ((r7 & 32) != 0) goto -6 <ccm_memory_v2+0x9E : 1e06c7a >			  ## aes_hw.c:129:5
 1e06c80:    cc 44             	[r2 + 48] = r4			  ## aes_hw.c:135:21
 1e06c82:    34 6a             	r4 = b[r5 + 3] (u)			  ## aes_hw.c:138:12
 1e06c84:    27 6a             	r7 = b[r5 + 2] (u)			  ## aes_hw.c:138:12
 1e06c86:    16 6a             	r6 = b[r5 + 1] (u)			  ## aes_hw.c:138:12
 1e06c88:    03 6a             	r3 = b[r5 + 0] (u)			  ## aes_hw.c:138:12
 1e06c8a:    24 c6             	r4 = r4 << 24			  ## aes_hw.c:138:12
 1e06c8c:    c8 fd 80 47       	r4 <= insert(r7, p:16, l:8)			  ## aes_hw.c:138:12
 1e06c90:    c8 fd 40 46       	r4 <= insert(r6, p:8, l:8)			  ## aes_hw.c:138:12
 1e06c94:    53 b8             	r3 |= r4			  ## aes_hw.c:138:12
 1e06c96:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:139:19
 1e06c98:    73 6a             	r3 = b[r5 + 7] (u)			  ## aes_hw.c:141:12
 1e06c9a:    64 6a             	r4 = b[r5 + 6] (u)			  ## aes_hw.c:141:12
 1e06c9c:    56 6a             	r6 = b[r5 + 5] (u)			  ## aes_hw.c:141:12
 1e06c9e:    47 6a             	r7 = b[r5 + 4] (u)			  ## aes_hw.c:141:12
 1e06ca0:    1b c6             	r3 = r3 << 24			  ## aes_hw.c:141:12
 1e06ca2:    c8 fd 80 34       	r3 <= insert(r4, p:16, l:8)			  ## aes_hw.c:141:12
 1e06ca6:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## aes_hw.c:141:12
 1e06caa:    53 be             	r3 |= r7			  ## aes_hw.c:141:12
 1e06cac:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:142:19
 1e06cae:    b3 6a             	r3 = b[r5 + 11] (u)			  ## aes_hw.c:144:12
 1e06cb0:    a4 6a             	r4 = b[r5 + 10] (u)			  ## aes_hw.c:144:12
 1e06cb2:    96 6a             	r6 = b[r5 + 9] (u)			  ## aes_hw.c:144:12
 1e06cb4:    87 6a             	r7 = b[r5 + 8] (u)			  ## aes_hw.c:144:12
 1e06cb6:    1b c6             	r3 = r3 << 24			  ## aes_hw.c:144:12
 1e06cb8:    c8 fd 80 34       	r3 <= insert(r4, p:16, l:8)			  ## aes_hw.c:144:12
 1e06cbc:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## aes_hw.c:144:12
 1e06cc0:    53 be             	r3 |= r7			  ## aes_hw.c:144:12
 1e06cc2:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:145:19
 1e06cc4:    c3 6a             	r3 = b[r5 + 12] (u)			  ## aes_hw.c:147:12
 1e06cc6:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:148:19
 1e06cc8:    03 f9 00 80       	r3 = b[r8 + 0] (u)			  ## aes_hw.c:151:22
 1e06ccc:    8b 44             	[r2 + 32] = r3			  ## aes_hw.c:151:20
 1e06cce:    94 08             	r4 = r9			  ## aes_hw.c:156:9
 1e06cd0:    01 22             	if (r1 == 0) goto 2 <ccm_memory_v2+0xF8 : 1e06cd4 >			  ## aes_hw.c:156:9
 1e06cd2:    a4 08             	r4 = r10			  ## aes_hw.c:156:9
 1e06cd4:    9c 44             	[r2 + 36] = r4
 1e06cd6:    01 22             	if (r1 == 0) goto 2 <ccm_memory_v2+0xFE : 1e06cda >
 1e06cd8:    9a 08             	r10 = r9			  ## aes_hw.c:156:9
 1e06cda:    1a f6 28 20       	[r2 + 40] = r10
 1e06cde:    20 fb 01 3b       	r3 = 65536			  ## aes_hw.c:156:9
 1e06ce2:    02 22             	if (r1 == 0) goto 4 <ccm_memory_v2+0x10C : 1e06ce8 >			  ## aes_hw.c:156:9
 1e06ce4:    20 fb 04 3b       	r3 = 262144			  ## aes_hw.c:156:9
 1e06ce8:    01 44             	r1 = [r2 + 0]
 1e06cea:    51 b6             	r1 |= r3
 1e06cec:    09 44             	[r2 + 0] = r1
 1e06cee:    01 44             	r1 = [r2 + 0]			  ## aes_hw.c:178:21
 1e06cf0:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <ccm_memory_v2+0x112 : 1e06cee >			  ## aes_hw.c:178:5
 1e06cf4:    00 f4 40 2c       	[r2 + 0] |= 1073741824			  ## aes_hw.c:179:17
 1e06cf8:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e06cfa:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:182:5
 1e06cfc:    09 60             	b[r0 + 0] = r1			  ## aes_hw.c:182:5
 1e06cfe:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e06d00:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:182:5
 1e06d02:    19 60             	b[r0 + 1] = r1			  ## aes_hw.c:182:5
 1e06d04:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e06d06:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:182:5
 1e06d08:    29 60             	b[r0 + 2] = r1			  ## aes_hw.c:182:5
 1e06d0a:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e06d0c:    39 60             	b[r0 + 3] = r1			  ## aes_hw.c:182:5
 1e06d0e:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e06d10:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:183:5
 1e06d12:    49 60             	b[r0 + 4] = r1			  ## aes_hw.c:183:5
 1e06d14:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e06d16:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:183:5
 1e06d18:    59 60             	b[r0 + 5] = r1			  ## aes_hw.c:183:5
 1e06d1a:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e06d1c:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:183:5
 1e06d1e:    69 60             	b[r0 + 6] = r1			  ## aes_hw.c:183:5
 1e06d20:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e06d22:    79 60             	b[r0 + 7] = r1			  ## aes_hw.c:183:5
 1e06d24:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e06d26:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:184:5
 1e06d28:    89 60             	b[r0 + 8] = r1			  ## aes_hw.c:184:5
 1e06d2a:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e06d2c:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:184:5
 1e06d2e:    99 60             	b[r0 + 9] = r1			  ## aes_hw.c:184:5
 1e06d30:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e06d32:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:184:5
 1e06d34:    a9 60             	b[r0 + 10] = r1			  ## aes_hw.c:184:5
 1e06d36:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e06d38:    b9 60             	b[r0 + 11] = r1			  ## aes_hw.c:184:5
 1e06d3a:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e06d3c:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:185:5
 1e06d3e:    c9 60             	b[r0 + 12] = r1			  ## aes_hw.c:185:5
 1e06d40:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e06d42:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:185:5
 1e06d44:    d9 60             	b[r0 + 13] = r1			  ## aes_hw.c:185:5
 1e06d46:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e06d48:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:185:5
 1e06d4a:    e9 60             	b[r0 + 14] = r1			  ## aes_hw.c:185:5
 1e06d4c:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e06d4e:    f9 60             	b[r0 + 15] = r1			  ## aes_hw.c:185:5
 1e06d50:    1a 01             	{rets, r10-r4} = [sp++]			  ## aes_hw.c:190:5
 1e06d52:    d8 f3 21 00       	goto 3145794 <local_irq_enable : 106d98 >			  ## aes_hw.c:190:5


_vm_area_erase:
 1e06d56:    78 01             	[--sp] = {rets, r8-r4}			  ## vm.c:266:0
 1e06d58:    08 08             	r8 = r0			  ## vm.c:266:0
 1e06d5a:    10 40             	r0 = [r0 + 4]			  ## vm.c:266:0
 1e06d5c:    c1 ff 20 2a 00 00 	r1 = 10784 <vm_obj : 2a20 >			  ## vm.c:271:9
 1e06d62:    01 f9 6d 11       	r1 = b[r1 + 365] (u)			  ## vm.c:271:9
 1e06d66:    05 f6 00 80       	r5 = [r8 + 0]			  ## vm.c:267:33
 1e06d6a:    22 f3 12 10       	if ((r1 & 4) != 0) goto 36 <_vm_area_erase+0x3C : 1e06d92 >
 1e06d6e:    00 d3             	r0 = r0 >> 12			  ## vm.c:282:30
 1e06d70:    26 04             	r6 = r0.l (u)			  ## vm.c:283:29
 1e06d72:    1e 2c             	if (r6 == 0) goto 60 <_vm_area_erase+0x5A : 1e06db0 >			  ## vm.c:283:29
 1e06d74:    17 70             	r7 = 1
 1e06d76:    04 fb 00 f0       	r4 = -4096 <bank_code_load_addr+0x1E03EC : 1fff000 >
 1e06d7a:    e2 fd 40 15       	r1 = r5 & r4
 1e06d7e:    80 7c             	r0 = 200			  ## vm.c:1423:5
 1e06d80:    bf f3 a0 d2       	call -23232 <norflash_ioctl : 1e012c4 >			  ## vm.c:1423:5
 1e06d84:    e0 05             	r0 = r7.l (u)			  ## vm.c:283:23
 1e06d86:    17 80             	r7 += 1			  ## vm.c:283:9
 1e06d88:    55 fc 00 10       	r5 = r5 + 4096			  ## vm.c:289:24
 1e06d8c:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x24 : 1e06d7a >
 1e06d90:    0f 18             	goto 30 <_vm_area_erase+0x5A : 1e06db0 >
 1e06d92:    00 d2             	r0 = r0 >> 8			  ## vm.c:272:30
 1e06d94:    26 04             	r6 = r0.l (u)			  ## vm.c:273:29
 1e06d96:    0c 2c             	if (r6 == 0) goto 24 <_vm_area_erase+0x5A : 1e06db0 >			  ## vm.c:273:29
 1e06d98:    14 70             	r4 = 1
 1e06d9a:    31 fd ff 59       	r1 = r5 & 4294967040
 1e06d9e:    c0 7c             	r0 = 204			  ## vm.c:1423:5
 1e06da0:    bf f3 90 d2       	call -23264 <norflash_ioctl : 1e012c4 >			  ## vm.c:1423:5
 1e06da4:    20 05             	r0 = r4.l (u)			  ## vm.c:273:23
 1e06da6:    14 80             	r4 += 1			  ## vm.c:273:9
 1e06da8:    55 fc 00 01       	r5 = r5 + 256			  ## vm.c:279:24
 1e06dac:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x44 : 1e06d9a >
 1e06db0:    00 70             	r0 = 0			  ## vm.c:293:30
 1e06db2:    10 f7 08 80       	h[r8 + 8] = r0			  ## vm.c:293:30
 1e06db6:    58 01             	{pc, r8-r4} = [sp++]			  ## vm.c:293:30


vm_reset:
 1e06db8:    75 01             	[--sp] = {rets, r5, r4}			  ## vm.c:591:0
 1e06dba:    fe 0b             	sp += -4			  ## vm.c:591:0
 1e06dbc:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:594:9
 1e06dc2:    08 02             	[sp] = r0			  ## vm.c:594:9
 1e06dc4:    c4 ff 20 2a 00 00 	r4 = 10784 <vm_obj : 2a20 >			  ## vm.c:604:5
 1e06dca:    40 08             	r0 = r4			  ## vm.c:596:5
 1e06dcc:    c4 17             	call -120 <_vm_area_erase : 1e06d56 >			  ## vm.c:596:5
 1e06dce:    c0 98             	r0 = r4 + 12			  ## vm.c:597:5
 1e06dd0:    c2 17             	call -124 <_vm_area_erase : 1e06d56 >			  ## vm.c:597:5
 1e06dd2:    45 fc 68 01       	r5 = r4 + 360			  ## vm.c:597:5
 1e06dd6:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:599:19
 1e06dd8:    f0 b0             	r0 &= 4294967293			  ## vm.c:599:19
 1e06dda:    58 6a             	b[r5 + 5] = r0			  ## vm.c:599:19
 1e06ddc:    02 48             	r2 = [r4 + 0]			  ## vm.c:601:38
 1e06dde:    00 a0             	r0 = sp + 0
 1e06de0:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e06de2:    bf f3 d9 d3       	call -22606 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e06de6:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:602:19
 1e06de8:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:602:19
 1e06dec:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:602:19
 1e06df0:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:602:19
 1e06df4:    40 80             	r0 += 4			  ## vm.c:602:46
 1e06df6:    08 4a             	[r5 + 0] = r0			  ## vm.c:602:17
 1e06df8:    80 99             	r0 = r4 + 24			  ## vm.c:604:5
 1e06dfa:    01 70             	r1 = 0			  ## vm.c:604:5
 1e06dfc:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:604:5
 1e06e00:    98 f3 76 00       	call 3145964 <memset : 106ef0 >			  ## vm.c:604:5
 1e06e04:    02 0a             	sp += 4			  ## vm.c:604:5
 1e06e06:    55 01             	{pc, r5, r4} = [sp++]			  ## vm.c:604:5


vm_area_check:
 1e06e08:    34 00             	[--sp] = rets			  ## vm.c:544:0
 1e06e0a:    13 08             	r3 = r1			  ## vm.c:544:0
 1e06e0c:    8f f3 4b e5       	call 2083478 <flash_addr2cpu_addr : 38a6 >			  ## vm.c:545:20
 1e06e10:    08 26             	if (r3 == 0) goto 16 <vm_area_check+0x1A : 1e06e22 >
 1e06e12:    01 60             	r1 = b[r0 + 0] (u)			  ## vm_commom.c:7:13
 1e06e14:    10 80             	r0 += 1			  ## vm_commom.c:7:15
 1e06e16:    f3 8f             	r3 += -1			  ## vm_commom.c:6:15
 1e06e18:    00 ff ff 10 f9 ff 	if (r1 == 255) goto -14 <vm_area_check+0x8 : 1e06e10 >
 1e06e1e:    00 70             	r0 = 0
 1e06e20:    30 00             	pc = [sp++]			  ## vm.c:552:1
 1e06e22:    10 70             	r0 = 1
 1e06e24:    30 00             	pc = [sp++]			  ## vm.c:552:1


_vm_defrag:
 1e06e26:    7f 01             	[--sp] = {rets, r15-r4}			  ## vm.c:423:0
 1e06e28:    7c 0b             	sp += -264			  ## vm.c:423:0
 1e06e2a:    c8 ff 20 2a 00 00 	r8 = 10784 <vm_obj : 2a20 >			  ## vm.c:423:0
 1e06e30:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:432:9
 1e06e34:    40 d0             	r0 = r0 >> 1			  ## vm.c:432:9
 1e06e36:    19 70             	r9 = 1			  ## vm.c:432:9
 1e06e38:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:432:9
 1e06e3c:    ca 70             	r10 = 12			  ## vm.c:432:9
 1e06e3e:    81 08             	r1 = r8			  ## vm.c:432:9
 1e06e40:    80 fe a0 10       	r1 += r0 * r10			  ## vm.c:432:9
 1e06e44:    41 52             	r1 = h[r1 + 8] (u)			  ## vm.c:432:9
 1e06e46:    ab 32             	if (r1 != 0) goto 342 <_vm_defrag+0x178 : 1e06f9e >			  ## vm.c:432:9
 1e06e48:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:441:19
 1e06e4c:    81 f6 00 08       	r1 = [r0+r8]			  ## vm.c:441:19
 1e06e50:    41 80             	r1 += 4			  ## vm.c:441:47
 1e06e52:    11 f6 68 81       	[r8 + 360] = r1			  ## vm.c:441:17
 1e06e56:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:444:38
 1e06e5a:    c0 ff 77 bb ee dd 	r0 = 3723410295 <bank_code_load_addr+0xCCF63 : 1eebb77 >			  ## vm.c:443:14
 1e06e60:    08 02             	[sp] = r0			  ## vm.c:443:14
 1e06e62:    00 a0             	r0 = sp + 0			  ## vm.c:443:14
 1e06e64:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e06e66:    bf f3 97 d3       	call -22738 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e06e6a:    0b 70             	r11 = 0
 1e06e6c:    f0 fd 08 0b       	r0 = r11 << 1			  ## vm.c:476:17
 1e06e70:    80 fb 80 c0       	r12 = r0 + r8			  ## vm.c:476:17
 1e06e74:    00 f7 18 c0       	r0 = h[r12 + 24] (u)			  ## vm.c:476:17
 1e06e78:    60 20             	if (r0 == 0) goto 192 <_vm_defrag+0x114 : 1e06f3a >			  ## vm.c:476:17
 1e06e7a:    8d fc 68 01       	r13 = r8 + 360
 1e06e7e:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## vm.c:478:54
 1e06e82:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:478:54
 1e06e86:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:478:54
 1e06e8a:    81 f6 00 18       	r1 = [r1+r8]			  ## vm.c:478:54
 1e06e8e:    02 b2             	r2 = r1 + r0			  ## vm.c:478:52
 1e06e90:    40 a0             	r0 = sp + 4
 1e06e92:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e06e94:    bf f3 dd d1       	call -23622 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e06e98:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:481:68
 1e06e9c:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:481:68
 1e06ea0:    11 fd 01 09       	r1 = r0 ^ 1			  ## vm.c:481:68
 1e06ea4:    82 08             	r2 = r8			  ## vm.c:481:68
 1e06ea6:    80 fe a0 21       	r2 += r1 * r10			  ## vm.c:481:68
 1e06eaa:    01 44             	r1 = [r2 + 0]			  ## vm.c:481:68
 1e06eac:    12 44             	r2 = [r2 + 4]			  ## vm.c:481:98
 1e06eae:    c3 f5 07 00       	r3 = b[sp+7] (u)			  ## vm.c:479:23
 1e06eb2:    c4 f5 06 00       	r4 = b[sp+6] (u)			  ## vm.c:479:23
 1e06eb6:    0f f6 00 d0       	r15 = [r13 + 0]			  ## vm.c:481:21
 1e06eba:    12 09             	r2 += r1			  ## vm.c:481:96
 1e06ebc:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## vm.c:479:23
 1e06ec0:    21 d1             	r1 = r4 >> 4			  ## vm.c:479:23
 1e06ec2:    80 fb 10 3f       	r3 = r15 + r1			  ## vm.c:481:33
 1e06ec6:    43 80             	r3 += 4			  ## vm.c:481:60
 1e06ec8:    23 f2 68 80       	if (r3 > r2) goto 208 <_vm_defrag+0x176 : 1e06f9c >			  ## vm.c:481:60
 1e06ecc:    4e 92             	r14 = r1 + 4			  ## vm.c:494:114
 1e06ece:    e5 08             	r5 = r14			  ## vm.c:345:17
 1e06ed0:    03 ff 00 51 02 00 	if (r5 < 256) goto 4 <_vm_defrag+0xB4 : 1e06eda >			  ## vm.c:345:17
 1e06ed6:    05 fb 00 01       	r5 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:345:17
 1e06eda:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:494:43
 1e06ede:    80 f6 00 08       	r0 = [r0+r8]			  ## vm.c:494:43
 1e06ee2:    01 f7 18 c0       	r1 = h[r12 + 24] (u)			  ## vm.c:494:72
 1e06ee6:    06 b2             	r6 = r1 + r0			  ## vm.c:494:70
 1e06ee8:    e4 08             	r4 = r14
 1e06eea:    87 a0             	r7 = sp + 8
 1e06eec:    70 08             	r0 = r7			  ## vm.c:1466:5
 1e06eee:    51 08             	r1 = r5			  ## vm.c:1466:5
 1e06ef0:    62 08             	r2 = r6			  ## vm.c:1466:5
 1e06ef2:    bf f3 ae d1       	call -23716 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e06ef6:    70 08             	r0 = r7			  ## vm.c:1448:5
 1e06ef8:    51 08             	r1 = r5			  ## vm.c:1448:5
 1e06efa:    f2 08             	r2 = r15			  ## vm.c:1448:5
 1e06efc:    bf f3 4c d3       	call -22888 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e06f00:    56 09             	r6 += r5			  ## vm.c:354:18
 1e06f02:    5f 09             	r15 += r5			  ## vm.c:353:18
 1e06f04:    64 b9             	r4 = r4 - r5			  ## vm.c:352:13
 1e06f06:    45 08             	r5 = r4			  ## vm.c:345:17
 1e06f08:    03 ff 00 41 02 00 	if (r4 < 256) goto 4 <_vm_defrag+0xEC : 1e06f12 >
 1e06f0e:    05 fb 00 01       	r5 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:345:17
 1e06f12:    eb 3b             	if (r5 != 0) goto -42 <_vm_defrag+0xC4 : 1e06eea >
 1e06f14:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:495:49
 1e06f18:    40 d0             	r0 = r0 >> 1			  ## vm.c:495:49
 1e06f1a:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:495:49
 1e06f1e:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:495:49
 1e06f22:    80 f6 00 08       	r0 = [r0+r8]			  ## vm.c:495:49
 1e06f26:    01 f6 00 d0       	r1 = [r13 + 0]			  ## vm.c:495:35
 1e06f2a:    20 b2             	r0 = r1 - r0			  ## vm.c:495:47
 1e06f2c:    10 f7 18 c0       	h[r12 + 24] = r0			  ## vm.c:495:33
 1e06f30:    00 f6 00 d0       	r0 = [r13 + 0]			  ## vm.c:496:29
 1e06f34:    e0 09             	r0 += r14			  ## vm.c:496:29
 1e06f36:    10 f6 00 d0       	[r13 + 0] = r0			  ## vm.c:496:29
 1e06f3a:    1b 80             	r11 += 1			  ## vm.c:446:46
 1e06f3c:    0b e8 96 3f       	if (r11 < 128) goto -212 <_vm_defrag+0x46 : 1e06e6c >			  ## vm.c:446:46
 1e06f40:    85 fc 6d 01       	r5 = r8 + 365
 1e06f44:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:509:38
 1e06f46:    40 d0             	r0 = r0 >> 1			  ## vm.c:509:38
 1e06f48:    11 70             	r1 = 1			  ## vm.c:509:38
 1e06f4a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:509:38
 1e06f4e:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:509:38
 1e06f52:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:509:38
 1e06f56:    c0 ff 55 aa ee dd 	r0 = 3723405909 <bank_code_load_addr+0xCBE41 : 1eeaa55 >			  ## vm.c:508:14
 1e06f5c:    08 02             	[sp] = r0			  ## vm.c:508:14
 1e06f5e:    04 a0             	r4 = sp + 0			  ## vm.c:508:14
 1e06f60:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e06f62:    40 08             	r0 = r4			  ## vm.c:1448:5
 1e06f64:    bf f3 18 d3       	call -22992 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e06f68:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:512:37
 1e06f6a:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## vm.c:512:37
 1e06f6e:    c2 70             	r2 = 12			  ## vm.c:512:37
 1e06f70:    80 08             	r0 = r8			  ## vm.c:512:25
 1e06f72:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:512:25
 1e06f76:    ef 16             	call -546 <_vm_area_erase : 1e06d56 >			  ## vm.c:512:9
 1e06f78:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:525:21
 1e06f7a:    b0 b0             	r0 ^= 2			  ## vm.c:525:19
 1e06f7c:    08 6a             	b[r5 + 0] = r0			  ## vm.c:525:19
 1e06f7e:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:528:38
 1e06f82:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:528:38
 1e06f86:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:528:38
 1e06f8a:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:527:14
 1e06f90:    08 02             	[sp] = r0			  ## vm.c:527:14
 1e06f92:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e06f94:    40 08             	r0 = r4			  ## vm.c:1448:5
 1e06f96:    bf f3 ff d2       	call -23042 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e06f9a:    01 18             	goto 2 <_vm_defrag+0x178 : 1e06f9e >
 1e06f9c:    0d 17             	call -486 <vm_reset : 1e06db8 >			  ## vm.c:484:21
 1e06f9e:    84 0a             	sp += 264
 1e06fa0:    5f 01             	{pc, r15-r4} = [sp++]


vm_warning_line_check:
 1e06fa2:    c0 ff 20 2a 00 00 	r0 = 10784 <vm_obj : 2a20 >			  ## vm.c:562:0
 1e06fa8:    01 fc 68 01       	r1 = r0 + 360			  ## vm.c:565:33
 1e06fac:    52 62             	r2 = b[r1 + 5] (u)			  ## vm.c:565:33
 1e06fae:    81 fd 08 22       	r2 = uextra(r2, p:1, l:1)			  ## vm.c:565:33
 1e06fb2:    c3 70             	r3 = 12			  ## vm.c:565:33
 1e06fb4:    80 fe 30 02       	r0 += r2 * r3			  ## vm.c:565:33
 1e06fb8:    12 40             	r2 = [r0 + 4]			  ## vm.c:565:33
 1e06fba:    43 62             	r3 = b[r1 + 4] (u)			  ## vm.c:565:23
 1e06fbc:    d2 0e             	r2 = r2 * r3			  ## vm.c:565:31
 1e06fbe:    00 40             	r0 = [r0 + 0]			  ## vm.c:575:24
 1e06fc0:    01 42             	r1 = [r1 + 0]			  ## vm.c:575:9
 1e06fc2:    43 76             	r3 = 100			  ## vm.c:566:17
 1e06fc4:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## vm.c:566:17
 1e06fc8:    02 09             	r2 += r0			  ## vm.c:575:51
 1e06fca:    10 70             	r0 = 1			  ## vm.c:575:51
 1e06fcc:    21 f2 01 80       	if (r1 > r2) goto 2 <vm_warning_line_check+0x30 : 1e06fd2 >			  ## vm.c:575:51
 1e06fd0:    00 70             	r0 = 0			  ## vm.c:575:21
 1e06fd2:    20 00             	rts			  ## vm.c:580:1


syscfg_vm_init:
 1e06fd4:    7c 01             	[--sp] = {rets, r12-r4}			  ## vm.c:1589:0
 1e06fd6:    f8 0b             	sp += -16			  ## vm.c:1589:0
 1e06fd8:    c7 ff 60 26 00 00 	r7 = 9824 <flash_info+0x20 : 2660 >			  ## vm_sfc.c:936:9
 1e06fde:    74 fc b8 00       	r4 = r7 + 184			  ## vm_sfc.c:889:5
 1e06fe2:    f1 07             	r1 = -1			  ## vm_sfc.c:889:5
 1e06fe4:    40 08             	r0 = r4			  ## vm_sfc.c:889:5
 1e06fe6:    97 f3 1d ff       	call 3145274 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:889:5
 1e06fea:    15 4e             	r5 = [r7 + 4]			  ## vm_sfc.c:936:9
 1e06fec:    36 4e             	r6 = [r7 + 12]			  ## vm_sfc.c:936:9
 1e06fee:    07 6e             	r7 = b[r7 + 0] (u)			  ## vm_sfc.c:936:9
 1e06ff0:    40 08             	r0 = r4			  ## vm_sfc.c:944:5
 1e06ff2:    97 f3 19 ff       	call 3145266 <os_mutex_post : 106e28 >			  ## vm_sfc.c:944:5
 1e06ff6:    00 fb 00 20       	r0 = 8192 <att_ram_buffer+0x2BC : 2000 >			  ## vm.c:1600:9
 1e06ffa:    17 e0 02 00       	if (r7 == 1) goto 4 <syscfg_vm_init+0x2E : 1e07002 >
 1e06ffe:    00 fb 00 40       	r0 = 16384 <low_power_system_down+0x108 : 4000 >			  ## vm.c:1600:9
 1e07002:    06 f2 01 30       	if (r6 < r0) goto 2 <syscfg_vm_init+0x34 : 1e07008 >
 1e07006:    06 08             	r6 = r0
 1e07008:    c8 ff 20 2a 00 00 	r8 = 10784 <vm_obj : 2a20 >
 1e0700e:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:232:9
 1e07012:    20 f3 24 00       	if ((r0 & 1) != 0) goto 72 <syscfg_vm_init+0x8A : 1e0705e >			  ## vm.c:232:9
 1e07016:    03 ff 00 62 21 00 	if (r6 < 512) goto 66 <syscfg_vm_init+0x8A : 1e0705e >
 1e0701c:    01 70             	r1 = 0
 1e0701e:    12 70             	r2 = 1
 1e07020:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x52 : 1e07026 >
 1e07024:    02 70             	r2 = 0			  ## vm.c:1600:18
 1e07026:    92 c0             	r2 = r2 << 2			  ## vm.c:813:18
 1e07028:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x5A : 1e0702e >			  ## vm.c:813:18
 1e0702c:    21 08             	r1 = r2			  ## vm.c:820:29
 1e0702e:    b3 d3             	r3 = r6 >> 14			  ## vm.c:820:40
 1e07030:    01 36             	if (r3 != 0) goto 2 <syscfg_vm_init+0x60 : 1e07034 >			  ## vm.c:820:40
 1e07032:    21 08             	r1 = r2			  ## vm.c:820:29
 1e07034:    70 b1             	r0 &= 4294967291			  ## vm.c:813:18
 1e07036:    50 b2             	r0 |= r1			  ## vm.c:820:29
 1e07038:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:813:18
 1e0703c:    40 bd             	r0 = r6 + r5			  ## vm.c:837:30
 1e0703e:    12 22             	if (r1 == 0) goto 36 <syscfg_vm_init+0x90 : 1e07064 >			  ## vm.c:837:30
 1e07040:    51 fc ff 00       	r1 = r5 + 255			  ## vm.c:836:28
 1e07044:    34 fd ff 19       	r4 = r1 & 4294967040			  ## vm.c:836:28
 1e07048:    20 b1             	r0 = r0 - r4			  ## vm.c:837:30
 1e0704a:    01 fb 00 fe       	r1 = -512 <bank_code_load_addr+0x1E11EC : 1fffe00 >			  ## vm.c:838:55
 1e0704e:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:838:55
 1e07052:    23 ff 20 5a 16 00 	if (r5 < 8192) goto 44 <syscfg_vm_init+0xB0 : 1e07084 >
 1e07058:    05 fb 00 20       	r5 = 8192 <att_ram_buffer+0x2BC : 2000 >			  ## vm.c:841:13
 1e0705c:    13 18             	goto 38 <syscfg_vm_init+0xB0 : 1e07084 >
 1e0705e:    8f f3 1a e2       	call 2081844 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e07062:    db 18             	goto 438 <syscfg_vm_init+0x246 : 1e0721a >			  ## cpu.h:148:5
 1e07064:    51 fc ff 0f       	r1 = r5 + 4095			  ## vm.c:826:28
 1e07068:    02 fb 00 f0       	r2 = -4096 <bank_code_load_addr+0x1E03EC : 1fff000 >			  ## vm.c:826:28
 1e0706c:    e2 fd 20 41       	r4 = r1 & r2			  ## vm.c:826:28
 1e07070:    20 b1             	r0 = r0 - r4			  ## vm.c:827:30
 1e07072:    01 fb 00 e0       	r1 = -8192 <bank_code_load_addr+0x1DF3EC : 1ffe000 >			  ## vm.c:828:57
 1e07076:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:828:57
 1e0707a:    23 ff 02 5b 02 00 	if (r5 < 131072) goto 4 <syscfg_vm_init+0xB0 : 1e07084 >
 1e07080:    20 fb 02 5b       	r5 = 131072			  ## vm.c:831:13
 1e07084:    80 fc 18 00       	r0 = r8 + 24			  ## vm.c:853:5
 1e07088:    01 70             	r1 = 0			  ## vm.c:853:5
 1e0708a:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:853:5
 1e0708e:    97 f3 2f ff       	call 3145310 <memset : 106ef0 >			  ## vm.c:853:5
 1e07092:    68 d0             	r0 = r5 >> 1			  ## vm.c:855:12
 1e07094:    10 f6 04 80       	[r8 + 4] = r0			  ## vm.c:856:25
 1e07098:    14 f6 00 80       	[r8 + 0] = r4			  ## vm.c:857:25
 1e0709c:    10 f6 10 80       	[r8 + 16] = r0			  ## vm.c:858:25
 1e070a0:    40 09             	r0 += r4			  ## vm.c:859:35
 1e070a2:    10 f6 0c 80       	[r8 + 12] = r0			  ## vm.c:859:25
 1e070a6:    00 75             	r0 = 80			  ## vm.c:860:13
 1e070a8:    10 f9 6c 81       	b[r8 + 364] = r0			  ## vm.c:860:13
 1e070ac:    40 a0             	r0 = sp + 4			  ## vm.c:860:13
 1e070ae:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e070b0:    42 08             	r2 = r4			  ## vm.c:1466:5
 1e070b2:    bf f3 ce d0       	call -24164 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e070b6:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:880:33
 1e070ba:    00 a0             	r0 = sp + 0
 1e070bc:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e070be:    bf f3 c8 d0       	call -24176 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e070c2:    10 02             	r0 = [sp+4]			  ## vm.c:884:13
 1e070c4:    e0 ef 1a d0       	ifs (r0 <= -2) goto 52 <syscfg_vm_init+0x128 : 1e070fc >
 1e070c8:    11 90             	r1 = r0 + 1
 1e070ca:    21 e0 20 30       	if (r1 < 2) goto 64 <syscfg_vm_init+0x13A : 1e0710e >
 1e070ce:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >
 1e070d4:    10 f2 25 10       	if (r0 != r1) goto 74 <syscfg_vm_init+0x14E : 1e07122 >
 1e070d8:    01 02             	r1 = [sp]			  ## vm.c:886:13
 1e070da:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e070de:    c2 ff 55 aa ee dd 	r2 = 3723405909 <bank_code_load_addr+0xCBE41 : 1eeaa55 >			  ## vm.c:886:24
 1e070e4:    21 f2 2f 10       	if (r1 != r2) goto 94 <syscfg_vm_init+0x172 : 1e07146 >			  ## vm.c:886:13
 1e070e8:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:888:46
 1e070ec:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:887:24
 1e070f0:    28 02             	[sp+8] = r0			  ## vm.c:887:22
 1e070f2:    80 a0             	r0 = sp + 8			  ## vm.c:887:22
 1e070f4:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e070f6:    bf f3 4f d2       	call -23394 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e070fa:    0f 18             	goto 30 <syscfg_vm_init+0x146 : 1e0711a >
 1e070fc:    c1 ff 55 aa ee dd 	r1 = 3723405909 <bank_code_load_addr+0xCBE41 : 1eeaa55 >
 1e07102:    10 f2 10 00       	if (r0 == r1) goto 32 <syscfg_vm_init+0x152 : 1e07126 >
 1e07106:    11 fc 22 11       	r1 = r1 + 4386
 1e0710a:    10 f2 0a 10       	if (r0 != r1) goto 20 <syscfg_vm_init+0x14E : 1e07122 >
 1e0710e:    00 02             	r0 = [sp]			  ## vm.c:905:13
 1e07110:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:905:24
 1e07116:    10 f2 04 10       	if (r0 != r1) goto 8 <syscfg_vm_init+0x14E : 1e07122 >			  ## vm.c:905:24
 1e0711a:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e0711e:    90 b0             	r0 |= 2
 1e07120:    13 18             	goto 38 <syscfg_vm_init+0x174 : 1e07148 >
 1e07122:    4a 16             	call -876 <vm_reset : 1e06db8 >
 1e07124:    13 18             	goto 38 <syscfg_vm_init+0x178 : 1e0714c >
 1e07126:    84 fc 6c 01       	r4 = r8 + 364
 1e0712a:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:897:20
 1e0712c:    02 f6 00 80       	r2 = [r8 + 0]			  ## vm.c:898:42
 1e07130:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:897:20
 1e07134:    28 02             	[sp+8] = r0			  ## vm.c:897:18
 1e07136:    80 a0             	r0 = sp + 8			  ## vm.c:897:18
 1e07138:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e0713a:    bf f3 2d d2       	call -23462 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e0713e:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:899:23
 1e07140:    f0 b0             	r0 &= 4294967293			  ## vm.c:899:23
 1e07142:    18 68             	b[r4 + 1] = r0			  ## vm.c:899:23
 1e07144:    03 18             	goto 6 <syscfg_vm_init+0x178 : 1e0714c >
 1e07146:    f0 b0             	r0 &= 4294967293			  ## vm.c:891:27
 1e07148:    10 f9 6d 81       	b[r8 + 365] = r0
 1e0714c:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:923:45
 1e07150:    70 d0             	r0 = r6 >> 1			  ## vm.c:923:45
 1e07152:    11 70             	r1 = 1			  ## vm.c:923:45
 1e07154:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:923:45
 1e07158:    c5 70             	r5 = 12			  ## vm.c:923:45
 1e0715a:    84 08             	r4 = r8			  ## vm.c:923:62
 1e0715c:    80 fe 50 40       	r4 += r0 * r5			  ## vm.c:923:62
 1e07160:    11 48             	r1 = [r4 + 4]			  ## vm.c:923:91
 1e07162:    00 48             	r0 = [r4 + 0]			  ## vm.c:923:62
 1e07164:    51 16             	call -862 <vm_area_check : 1e06e08 >			  ## vm.c:923:18
 1e07166:    04 30             	if (r0 != 0) goto 8 <syscfg_vm_init+0x19C : 1e07170 >			  ## vm.c:923:18
 1e07168:    40 08             	r0 = r4			  ## vm.c:925:9
 1e0716a:    f5 15             	call -1046 <_vm_area_erase : 1e06d56 >			  ## vm.c:925:9
 1e0716c:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:925:9
 1e07170:    81 fd 08 06       	r0 = uextra(r6, p:1, l:1)			  ## vm.c:929:69
 1e07174:    81 08             	r1 = r8			  ## vm.c:371:33
 1e07176:    80 fe 50 10       	r1 += r0 * r5			  ## vm.c:371:33
 1e0717a:    0a f6 00 10       	r10 = [r1 + 0]			  ## vm.c:371:33
 1e0717e:    10 42             	r0 = [r1 + 4]			  ## vm.c:374:50
 1e07180:    ab fc 04 00       	r11 = r10 + 4			  ## vm.c:371:38
 1e07184:    80 fb 00 9b       	r9 = r11 + r0			  ## vm.c:374:37
 1e07188:    c0 a0             	r0 = sp + 12
 1e0718a:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e0718c:    b2 08             	r2 = r11			  ## vm.c:1466:5
 1e0718e:    bf f3 60 d0       	call -24384 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e07192:    c7 f5 0e 00       	r7 = b[sp+14] (u)			  ## vm.c:389:18
 1e07196:    c0 f5 0f 00       	r0 = b[sp+15] (u)			  ## vm.c:389:18
 1e0719a:    cc f5 0c 00       	r12 = b[sp+12] (u)			  ## vm.c:395:13
 1e0719e:    c4 f5 0d 00       	r4 = b[sp+13] (u)			  ## vm.c:390:18
 1e071a2:    71 08             	r1 = r7			  ## vm.c:389:18
 1e071a4:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## vm.c:389:18
 1e071a8:    0d d1             	r5 = r1 >> 4			  ## vm.c:389:18
 1e071aa:    b6 fc 04 00       	r6 = r11 + 4			  ## vm.c:393:46
 1e071ae:    60 08             	r0 = r6			  ## vm.c:393:46
 1e071b0:    8f f3 79 e3       	call 2082546 <flash_addr2cpu_addr : 38a6 >			  ## vm.c:393:46
 1e071b4:    51 08             	r1 = r5			  ## vm.c:393:26
 1e071b6:    bf f3 30 d0       	call -24480 <CRC16 : 1e0121a >			  ## vm.c:393:26
 1e071ba:    00 04             	r0 = r0.b0 (u)			  ## vm.c:395:23
 1e071bc:    0c f2 0e 10       	if (r12 != r0) goto 28 <syscfg_vm_init+0x208 : 1e071dc >			  ## vm.c:395:23
 1e071c0:    90 fb a0 0b       	r0 = r11 - r10			  ## vm.c:396:45
 1e071c4:    39 c2             	r1 = r7 << 8			  ## vm.c:390:18
 1e071c6:    21 fd 0f 1a       	r1 = r1 & 3840			  ## vm.c:390:18
 1e071ca:    51 b8             	r1 |= r4			  ## vm.c:390:18
 1e071cc:    49 c0             	r1 = r1 << 1			  ## vm.c:396:13
 1e071ce:    81 09             	r1 += r8			  ## vm.c:396:13
 1e071d0:    8b bb             	r11 = r5 + r6			  ## vm.c:398:24
 1e071d2:    b2 fc 04 00       	r2 = r11 + 4			  ## vm.c:400:28
 1e071d6:    c8 52             	h[r1 + 24] = r0			  ## vm.c:396:32
 1e071d8:    92 f2 d6 3f       	if (r2 < r9) goto -84 <syscfg_vm_init+0x1B4 : 1e07188 >			  ## vm.c:396:32
 1e071dc:    1b f6 68 81       	[r8 + 360] = r11			  ## vm.c:929:17
 1e071e0:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:931:45
 1e071e4:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:931:45
 1e071e8:    c1 70             	r1 = 12			  ## vm.c:931:45
 1e071ea:    82 08             	r2 = r8			  ## vm.c:931:74
 1e071ec:    80 fe 10 20       	r2 += r0 * r1			  ## vm.c:931:74
 1e071f0:    00 44             	r0 = [r2 + 0]			  ## vm.c:931:74
 1e071f2:    11 44             	r1 = [r2 + 4]			  ## vm.c:931:103
 1e071f4:    90 fb b0 00       	r0 = r0 - r11			  ## vm.c:931:101
 1e071f8:    01 09             	r1 += r0			  ## vm.c:931:130
 1e071fa:    b0 08             	r0 = r11			  ## vm.c:931:18
 1e071fc:    05 16             	call -1014 <vm_area_check : 1e06e08 >			  ## vm.c:931:18
 1e071fe:    01 30             	if (r0 != 0) goto 2 <syscfg_vm_init+0x22E : 1e07202 >			  ## vm.c:931:18
 1e07200:    12 16             	call -988 <_vm_defrag : 1e06e26 >			  ## vm.c:933:9
 1e07202:    cf 16             	call -610 <vm_warning_line_check : 1e06fa2 >			  ## vm.c:937:9
 1e07204:    01 20             	if (r0 == 0) goto 2 <syscfg_vm_init+0x234 : 1e07208 >			  ## vm.c:937:9
 1e07206:    0f 16             	call -994 <_vm_defrag : 1e06e26 >			  ## vm.c:939:9
 1e07208:    80 fc 18 01       	r0 = r8 + 280			  ## vm.c:942:5
 1e0720c:    97 f3 06 fe       	call 3144716 <os_mutex_create : 106e1c >			  ## vm.c:942:5
 1e07210:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:944:18
 1e07214:    10 b0             	r0 |= 1			  ## vm.c:944:18
 1e07216:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:944:18
 1e0721a:    00 70             	r0 = 0			  ## vm.c:1622:5
 1e0721c:    08 0a             	sp += 16			  ## vm.c:1622:5
 1e0721e:    5c 01             	{pc, r12-r4} = [sp++]			  ## vm.c:1622:5


vm_check_id:
 1e07220:    f0 8f             	r0 += -1			  ## vm.c:1580:0
 1e07222:    21 04             	r1 = r0.l (u)			  ## vm.c:1581:44
 1e07224:    10 70             	r0 = 1			  ## vm.c:1581:44
 1e07226:    f1 e7 01 30       	if (r1 < 127) goto 2 <vm_check_id+0xC : 1e0722c >			  ## vm.c:1581:44
 1e0722a:    00 70             	r0 = 0			  ## vm.c:1581:44
 1e0722c:    20 00             	rts			  ## vm.c:1586:1


vm_read:
 1e0722e:    7b 01             	[--sp] = {rets, r11-r4}			  ## vm.c:1138:0
 1e07230:    fe 0b             	sp += -4			  ## vm.c:1138:0
 1e07232:    c4 ff 20 2a 00 00 	r4 = 10784 <vm_obj : 2a20 >			  ## vm.c:1138:0
 1e07238:    03 f9 6d 41       	r3 = b[r4 + 365] (u)			  ## vm.c:232:9
 1e0723c:    26 08             	r6 = r2			  ## vm.c:232:9
 1e0723e:    19 08             	r9 = r1
 1e07240:    05 08             	r5 = r0
 1e07242:    07 fb 06 ff       	r7 = -250 <bank_code_load_addr+0x1E12F2 : 1ffff06 >
 1e07246:    00 f3 55 30       	if ((r3 & 1) == 0) goto 170 <vm_read+0xC6 : 1e072f4 >
 1e0724a:    a7 8f             	r7 += -6
 1e0724c:    f5 e7 52 80       	if (r5 > 127) goto 164 <vm_read+0xC6 : 1e072f4 >
 1e07250:    50 2c             	if (r6 == 0) goto 160 <vm_read+0xC4 : 1e072f2 >
 1e07252:    48 fc 18 01       	r8 = r4 + 280			  ## vm.c:1161:5
 1e07256:    f1 07             	r1 = -1			  ## vm.c:1161:5
 1e07258:    80 08             	r0 = r8			  ## vm.c:1161:5
 1e0725a:    97 f3 e3 fd       	call 3144646 <os_mutex_pend : 106e24 >			  ## vm.c:1161:5
 1e0725e:    68 c0             	r0 = r5 << 1			  ## vm.c:1189:13
 1e07260:    0a b1             	r10 = r0 + r4			  ## vm.c:1189:13
 1e07262:    00 f7 18 a0       	r0 = h[r10 + 24] (u)			  ## vm.c:1189:13
 1e07266:    47 80             	r7 += 4			  ## vm.c:1189:13
 1e07268:    40 20             	if (r0 == 0) goto 128 <vm_read+0xBC : 1e072ea >			  ## vm.c:1189:13
 1e0726a:    01 f9 6d 41       	r1 = b[r4 + 365] (u)			  ## vm.c:1192:32
 1e0726e:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1192:32
 1e07272:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1192:32
 1e07276:    81 f6 00 14       	r1 = [r1+r4]			  ## vm.c:1192:32
 1e0727a:    02 b2             	r2 = r1 + r0			  ## vm.c:1192:59
 1e0727c:    00 a0             	r0 = sp + 0
 1e0727e:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e07280:    bf f3 e7 cf       	call -24626 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e07284:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1197:50
 1e07288:    c1 f5 03 00       	r1 = b[sp+3] (u)			  ## vm.c:1194:22
 1e0728c:    c3 f5 02 00       	r3 = b[sp+2] (u)			  ## vm.c:1194:22
 1e07290:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1197:50
 1e07294:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1197:50
 1e07298:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1197:50
 1e0729c:    02 f7 18 a0       	r2 = h[r10 + 24] (u)			  ## vm.c:1197:50
 1e072a0:    cb f5 00 00       	r11 = b[sp] (u)			  ## vm.c:1199:17
 1e072a4:    d8 fd 40 31       	r3 <= insert(r1, p:8, l:24)			  ## vm.c:1194:22
 1e072a8:    20 09             	r0 += r2			  ## vm.c:1197:50
 1e072aa:    40 80             	r0 += 4			  ## vm.c:1197:50
 1e072ac:    8f f3 fb e2       	call 2082294 <flash_addr2cpu_addr : 38a6 >			  ## vm.c:1197:50
 1e072b0:    8c fd 20 53       	r5 = uextra(r3, p:4, l:12)			  ## vm.c:1194:22
 1e072b4:    51 08             	r1 = r5			  ## vm.c:1197:30
 1e072b6:    bf f3 b0 cf       	call -24736 <CRC16 : 1e0121a >			  ## vm.c:1197:30
 1e072ba:    00 04             	r0 = r0.b0 (u)			  ## vm.c:1199:27
 1e072bc:    0b f2 15 10       	if (r11 != r0) goto 42 <vm_read+0xBC : 1e072ea >			  ## vm.c:1199:27
 1e072c0:    60 05             	r0 = r5.l (u)			  ## vm.c:1200:28
 1e072c2:    60 f2 01 80       	if (r0 > r6) goto 2 <vm_read+0x9A : 1e072c8 >			  ## vm.c:1200:28
 1e072c6:    56 08             	r6 = r5			  ## vm.c:1200:21
 1e072c8:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1204:36
 1e072cc:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1204:36
 1e072d0:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1204:36
 1e072d4:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1204:36
 1e072d8:    01 f7 18 a0       	r1 = h[r10 + 24] (u)			  ## vm.c:1204:92
 1e072dc:    a7 05             	r7 = r6.l (u)			  ## vm.c:1203:23
 1e072de:    10 09             	r0 += r1			  ## vm.c:1204:63
 1e072e0:    42 90             	r2 = r0 + 4			  ## vm.c:1204:90
 1e072e2:    90 08             	r0 = r9			  ## vm.c:1466:5
 1e072e4:    71 08             	r1 = r7			  ## vm.c:1466:5
 1e072e6:    bf f3 b4 cf       	call -24728 <norflash_read : 1e01252 >			  ## vm.c:1466:5
 1e072ea:    80 08             	r0 = r8			  ## vm.c:1219:5
 1e072ec:    97 f3 9c fd       	call 3144504 <os_mutex_post : 106e28 >			  ## vm.c:1219:5
 1e072f0:    01 18             	goto 2 <vm_read+0xC6 : 1e072f4 >			  ## vm.c:1219:5
 1e072f2:    07 70             	r7 = 0
 1e072f4:    70 08             	r0 = r7			  ## vm.c:1221:1
 1e072f6:    02 0a             	sp += 4			  ## vm.c:1221:1
 1e072f8:    5b 01             	{pc, r11-r4} = [sp++]			  ## vm.c:1221:1


vm_write:
 1e072fa:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm.c:1028:0
 1e072fc:    fe 0b             	sp += -4			  ## vm.c:1028:0
 1e072fe:    c7 ff 20 2a 00 00 	r7 = 10784 <vm_obj : 2a20 >			  ## vm.c:1028:0
 1e07304:    03 f9 6d 71       	r3 = b[r7 + 365] (u)			  ## vm.c:232:9
 1e07308:    24 08             	r4 = r2			  ## vm.c:232:9
 1e0730a:    19 08             	r9 = r1
 1e0730c:    05 08             	r5 = r0
 1e0730e:    06 fb 06 ff       	r6 = -250 <bank_code_load_addr+0x1E12F2 : 1ffff06 >
 1e07312:    00 f3 a7 30       	if ((r3 & 1) == 0) goto 334 <vm_write+0x16A : 1e07464 >
 1e07316:    a6 8f             	r6 += -6
 1e07318:    f5 e7 a4 80       	if (r5 > 127) goto 328 <vm_write+0x16A : 1e07464 >
 1e0731c:    20 d3             	r0 = r4 >> 12			  ## vm.c:1041:13
 1e0731e:    26 80             	r6 += 2			  ## vm.c:1041:13
 1e07320:    a1 30             	if (r0 != 0) goto 322 <vm_write+0x16A : 1e07464 >			  ## vm.c:1041:13
 1e07322:    78 fc 18 01       	r8 = r7 + 280			  ## vm.c:1254:5
 1e07326:    f1 07             	r1 = -1			  ## vm.c:1254:5
 1e07328:    80 08             	r0 = r8			  ## vm.c:1254:5
 1e0732a:    97 f3 7b fd       	call 3144438 <os_mutex_pend : 106e24 >			  ## vm.c:1254:5
 1e0732e:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1254:5
 1e07332:    40 d0             	r0 = r0 >> 1			  ## vm.c:1254:5
 1e07334:    11 70             	r1 = 1			  ## vm.c:1254:5
 1e07336:    e3 fd 00 11       	r1 = r1 & ~r0			  ## vm.c:1254:5
 1e0733a:    c2 70             	r2 = 12			  ## vm.c:1254:5
 1e0733c:    70 08             	r0 = r7			  ## vm.c:1254:5
 1e0733e:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:1254:5
 1e07342:    41 50             	r1 = h[r0 + 8] (u)			  ## vm.c:1254:5
 1e07344:    01 22             	if (r1 == 0) goto 2 <vm_write+0x4E : 1e07348 >			  ## vm.c:1254:5
 1e07346:    07 15             	call -1522 <_vm_area_erase : 1e06d56 >			  ## vm.c:1258:13
 1e07348:    80 08             	r0 = r8			  ## vm.c:1300:5
 1e0734a:    97 f3 6d fd       	call 3144410 <os_mutex_post : 106e28 >			  ## vm.c:1300:5
 1e0734e:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1300:5
 1e07352:    00 f3 0b 00       	if ((r0 & 1) == 0) goto 22 <vm_write+0x72 : 1e0736c >
 1e07356:    f1 07             	r1 = -1			  ## vm.c:1319:5
 1e07358:    80 08             	r0 = r8			  ## vm.c:1319:5
 1e0735a:    97 f3 63 fd       	call 3144390 <os_mutex_pend : 106e24 >			  ## vm.c:1319:5
 1e0735e:    21 16             	call -958 <vm_warning_line_check : 1e06fa2 >			  ## vm.c:1320:17
 1e07360:    10 e0 01 10       	if (r0 != 1) goto 2 <vm_write+0x6C : 1e07366 >			  ## vm.c:1320:17
 1e07364:    60 15             	call -1344 <_vm_defrag : 1e06e26 >			  ## vm.c:1321:15
 1e07366:    80 08             	r0 = r8			  ## vm.c:1330:5
 1e07368:    97 f3 5e fd       	call 3144380 <os_mutex_post : 106e28 >			  ## vm.c:1330:5
 1e0736c:    40 08             	r0 = r4			  ## vm.c:1049:20
 1e0736e:    80 f3 50 32       	call 25760 <malloc : 1e0d812 >			  ## vm.c:1049:20
 1e07372:    06 08             	r6 = r0			  ## vm.c:1049:20
 1e07374:    10 2c             	if (r6 == 0) goto 32 <vm_write+0x9C : 1e07396 >
 1e07376:    50 08             	r0 = r5			  ## vm.c:1052:20
 1e07378:    61 08             	r1 = r6			  ## vm.c:1052:20
 1e0737a:    42 08             	r2 = r4			  ## vm.c:1052:20
 1e0737c:    58 17             	call -336 <vm_read : 1e0722e >			  ## vm.c:1052:20
 1e0737e:    20 04             	r0 = r0.l (u)			  ## vm.c:1053:13
 1e07380:    40 f2 06 10       	if (r0 != r4) goto 12 <vm_write+0x96 : 1e07390 >			  ## vm.c:1053:13
 1e07384:    60 08             	r0 = r6			  ## vm.c:1054:22
 1e07386:    91 08             	r1 = r9			  ## vm.c:1054:22
 1e07388:    42 08             	r2 = r4			  ## vm.c:1054:22
 1e0738a:    97 f3 af fd       	call 3144542 <memcmp : 106eec >			  ## vm.c:1054:22
 1e0738e:    6d 20             	if (r0 == 0) goto 218 <vm_write+0x170 : 1e0746a >			  ## vm.c:1054:22
 1e07390:    60 08             	r0 = r6			  ## vm.c:1060:9
 1e07392:    80 f3 43 32       	call 25734 <free : 1e0d81c >			  ## vm.c:1060:9
 1e07396:    f1 07             	r1 = -1			  ## vm.c:1064:5
 1e07398:    80 08             	r0 = r8			  ## vm.c:1064:5
 1e0739a:    97 f3 43 fd       	call 3144326 <os_mutex_pend : 106e24 >			  ## vm.c:1064:5
 1e0739e:    90 08             	r0 = r9			  ## vm.c:1067:33
 1e073a0:    41 08             	r1 = r4			  ## vm.c:1067:33
 1e073a2:    bf f3 3a cf       	call -24972 <CRC16 : 1e0121a >			  ## vm.c:1067:33
 1e073a6:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## vm.c:1067:33
 1e073aa:    d0 f5 00 00       	b[sp] = r0			  ## vm.c:1069:17
 1e073ae:    d5 f5 01 00       	b[sp+1] = r5			  ## vm.c:1070:17
 1e073b2:    84 fd 40 05       	r0 = uextra(r5, p:8, l:4)			  ## vm.c:1071:65
 1e073b6:    81 fd 08 21       	r2 = uextra(r1, p:1, l:1)			  ## vm.c:1071:65
 1e073ba:    02 fe 0c 29       	r2 = r2 * 12			  ## vm.c:1071:65
 1e073be:    83 f6 00 27       	r3 = [r2+r7]			  ## vm.c:1071:65
 1e073c2:    02 f6 68 71       	r2 = [r7 + 360]			  ## vm.c:1071:65
 1e073c6:    d0 fd 20 04       	r0 <= insert(r4, p:4, l:16)			  ## vm.c:1071:47
 1e073ca:    d0 f5 02 00       	b[sp+2] = r0			  ## vm.c:1071:17
 1e073ce:    20 d1             	r0 = r4 >> 4			  ## vm.c:1072:19
 1e073d0:    d0 f5 03 00       	b[sp+3] = r0			  ## vm.c:1072:17
 1e073d4:    32 f2 06 80       	if (r2 > r3) goto 12 <vm_write+0xEA : 1e073e4 >			  ## vm.c:1072:17
 1e073d8:    8f f3 5d e0       	call 2080954 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e073dc:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e073e0:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e073e4:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)
 1e073e8:    c3 70             	r3 = 12
 1e073ea:    76 08             	r6 = r7
 1e073ec:    80 fe 30 60       	r6 += r0 * r3
 1e073f0:    00 4c             	r0 = [r6 + 0]
 1e073f2:    16 4c             	r6 = [r6 + 4]
 1e073f4:    20 b4             	r0 = r2 - r0
 1e073f6:    60 f2 06 30       	if (r0 < r6) goto 12 <vm_write+0x10C : 1e07406 >
 1e073fa:    8f f3 4c e0       	call 2080920 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e073fe:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e07402:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e07406:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)			  ## vm.c:1077:46
 1e0740a:    71 08             	r1 = r7			  ## vm.c:1077:46
 1e0740c:    80 fe 30 10       	r1 += r0 * r3			  ## vm.c:1077:46
 1e07410:    00 42             	r0 = [r1 + 0]			  ## vm.c:1077:46
 1e07412:    11 42             	r1 = [r1 + 4]			  ## vm.c:1077:75
 1e07414:    10 09             	r0 += r1			  ## vm.c:1077:73
 1e07416:    a0 b0             	r0 = r0 - r2			  ## vm.c:1077:102
 1e07418:    4a 98             	r10 = r4 + 4			  ## vm.c:1077:34
 1e0741a:    06 fb 05 ff       	r6 = -251 <bank_code_load_addr+0x1E12F1 : 1ffff05 >			  ## vm.c:1077:34
 1e0741e:    0a f2 1e 80       	if (r10 > r0) goto 60 <vm_write+0x164 : 1e0745e >			  ## vm.c:1077:34
 1e07422:    00 a0             	r0 = sp + 0
 1e07424:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e07426:    bf f3 b7 d0       	call -24210 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e0742a:    07 28             	if (r4 == 0) goto 14 <vm_write+0x140 : 1e0743a >
 1e0742c:    00 f6 68 71       	r0 = [r7 + 360]			  ## vm.c:1080:33
 1e07430:    42 90             	r2 = r0 + 4			  ## vm.c:1080:45
 1e07432:    90 08             	r0 = r9			  ## vm.c:1448:5
 1e07434:    41 08             	r1 = r4			  ## vm.c:1448:5
 1e07436:    bf f3 af d0       	call -24226 <norflash_write : 1e01598 >			  ## vm.c:1448:5
 1e0743a:    70 fc 68 01       	r0 = r7 + 360
 1e0743e:    51 60             	r1 = b[r0 + 5] (u)			  ## vm.c:1082:41
 1e07440:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1082:41
 1e07444:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1082:41
 1e07448:    81 f6 00 17       	r1 = [r1+r7]			  ## vm.c:1082:41
 1e0744c:    02 40             	r2 = [r0 + 0]			  ## vm.c:1082:27
 1e0744e:    6b c0             	r3 = r5 << 1			  ## vm.c:1082:9
 1e07450:    73 09             	r3 += r7			  ## vm.c:1082:9
 1e07452:    61 b4             	r1 = r2 - r1			  ## vm.c:1082:39
 1e07454:    c9 56             	h[r3 + 24] = r1			  ## vm.c:1082:25
 1e07456:    01 40             	r1 = [r0 + 0]			  ## vm.c:1088:21
 1e07458:    a1 09             	r1 += r10			  ## vm.c:1088:21
 1e0745a:    09 40             	[r0 + 0] = r1			  ## vm.c:1088:21
 1e0745c:    46 08             	r6 = r4			  ## vm.c:1088:21
 1e0745e:    80 08             	r0 = r8			  ## vm.c:1132:5
 1e07460:    97 f3 e2 fc       	call 3144132 <os_mutex_post : 106e28 >			  ## vm.c:1132:5
 1e07464:    60 08             	r0 = r6			  ## vm.c:1135:1
 1e07466:    02 0a             	sp += 4			  ## vm.c:1135:1
 1e07468:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm.c:1135:1
 1e0746a:    60 08             	r0 = r6			  ## vm.c:1056:17
 1e0746c:    80 f3 d6 31       	call 25516 <free : 1e0d81c >			  ## vm.c:1056:17
 1e07470:    46 08             	r6 = r4			  ## vm.c:1056:17
 1e07472:    f8 1f             	goto -16 <vm_write+0x16A : 1e07464 >


sdk_meky_check:
 1e07474:    c1 ff 84 74 e0 01 	r1 = 31487108 <_mkey_check : 1e07484 >			  ## key0_decode.c:137:0
 1e0747a:    00 70             	r0 = 0			  ## key0_decode.c:138:5
 1e0747c:    02 fb 40 1f       	r2 = 8000 <att_ram_buffer+0x1FC : 1f40 >			  ## key0_decode.c:138:5
 1e07480:    c0 f3 8f 27       	goto 20254 <sys_timeout_add : 1e0c3a2 >			  ## key0_decode.c:138:5


_mkey_check:
 1e07484:    78 01             	[--sp] = {rets, r8-r4}			  ## key0_decode.c:80:0
 1e07486:    de 0b             	sp += -68			  ## key0_decode.c:80:0
 1e07488:    c6 ff bc 08 00 00 	r6 = 2236 <puk : 8bc >			  ## key0_decode.c:80:0
 1e0748e:    07 4c             	r7 = [r6 + 0]			  ## key0_decode.c:84:22
 1e07490:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >
 1e07496:    00 f6 00 80       	r0 = [r8 + 0]			  ## key0_decode.c:86:41
 1e0749a:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## key0_decode.c:86:46
 1e0749e:    08 03             	[sp+64] = r0
 1e074a0:    00 03             	r0 = [sp+64]			  ## key0_decode.c:41:14
 1e074a2:    04 03             	r4 = [sp+64]			  ## key0_decode.c:41:14
 1e074a4:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <_mkey_check+0x28 : 1e074ac >			  ## key0_decode.c:41:9
 1e074a8:    cc 02             	[sp+48] = r4			  ## key0_decode.c:42:33
 1e074aa:    06 18             	goto 12 <_mkey_check+0x34 : 1e074b8 >			  ## key0_decode.c:42:33
 1e074ac:    00 a2             	r0 = sp + 32
 1e074ae:    02 72             	r2 = 32			  ## key0_decode.c:44:9
 1e074b0:    41 08             	r1 = r4			  ## key0_decode.c:44:9
 1e074b2:    97 f3 17 fd       	call 3144238 <memcpy : 106ee4 >			  ## key0_decode.c:44:9
 1e074b6:    c4 02             	r4 = [sp+48]			  ## key0_decode.c:44:9
 1e074b8:    20 05             	r0 = r4.l (u)			  ## key0_decode.c:48:5
 1e074ba:    05 a2             	r5 = sp + 32			  ## key0_decode.c:48:5
 1e074bc:    02 72             	r2 = 32			  ## key0_decode.c:48:5
 1e074be:    51 08             	r1 = r5			  ## key0_decode.c:48:5
 1e074c0:    bf f3 89 ce       	call -25326 <doe : 1e011d6 >			  ## key0_decode.c:48:5
 1e074c4:    cc 02             	[sp+48] = r4			  ## key0_decode.c:50:29
 1e074c6:    60 9a             	r0 = r5 + 6			  ## key0_decode.c:52:36
 1e074c8:    a1 71             	r1 = 26			  ## key0_decode.c:52:15
 1e074ca:    bf f3 a6 ce       	call -25268 <CRC16 : 1e0121a >			  ## key0_decode.c:52:15
 1e074ce:    81 f5 24 00       	r1 = h[sp+36] (u)			  ## key0_decode.c:54:30
 1e074d2:    10 f2 06 10       	if (r0 != r1) goto 12 <_mkey_check+0x5E : 1e074e2 >			  ## key0_decode.c:54:30
 1e074d6:    00 03             	r0 = [sp+64]			  ## key0_decode.c:57:27
 1e074d8:    c1 ff 98 36 6c f3 	r1 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:57:29
 1e074de:    d0 b2             	r0 ^= r1			  ## key0_decode.c:57:29
 1e074e0:    04 18             	goto 8 <_mkey_check+0x66 : 1e074ea >
 1e074e2:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:55:27
 1e074e4:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:55:33
 1e074e8:    d0 b2             	r0 ^= r1			  ## key0_decode.c:55:31
 1e074ea:    08 4c             	[r6 + 0] = r0
 1e074ec:    80 02             	r0 = [sp+32]			  ## key0_decode.c:60:37
 1e074ee:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:60:37
 1e074f0:    c5 ff 4a 4b 59 53 	r5 = 1398360906 <uECC_vli_cmp_unsafe+0x148DB4E : 1594b4a >			  ## key0_decode.c:60:20
 1e074f6:    42 08             	r2 = r4			  ## key0_decode.c:60:20
 1e074f8:    50 f2 02 00       	if (r0 == r5) goto 4 <_mkey_check+0x7C : 1e07500 >			  ## key0_decode.c:60:20
 1e074fc:    02 f6 04 80       	r2 = [r8 + 4]			  ## key0_decode.c:61:42
 1e07500:    d1 b4             	r1 ^= r2
 1e07502:    09 4c             	[r6 + 0] = r1
 1e07504:    81 f5 3e 00       	r1 = h[sp+62] (u)			  ## key0_decode.c:66:25
 1e07508:    f1 e0 03 10       	if (r1 != 15) goto 6 <_mkey_check+0x8E : 1e07512 >			  ## key0_decode.c:66:9
 1e0750c:    c1 f5 27 00       	r1 = b[sp+39] (u)
 1e07510:    08 18             	goto 16 <_mkey_check+0x9E : 1e07522 >
 1e07512:    02 4c             	r2 = [r6 + 0]			  ## key0_decode.c:67:27
 1e07514:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:67:47
 1e07518:    03 f6 00 80       	r3 = [r8 + 0]			  ## key0_decode.c:67:68
 1e0751c:    d2 b2             	r2 ^= r1			  ## key0_decode.c:67:31
 1e0751e:    d2 b6             	r2 ^= r3			  ## key0_decode.c:67:57
 1e07520:    0a 4c             	[r6 + 0] = r2			  ## key0_decode.c:67:13
 1e07522:    11 e0 01 10       	if (r1 != 1) goto 2 <_mkey_check+0xA4 : 1e07528 >
 1e07526:    40 08             	r0 = r4			  ## key0_decode.c:70:9
 1e07528:    01 4c             	r1 = [r6 + 0]
 1e0752a:    d0 b2             	r0 ^= r1
 1e0752c:    08 4c             	[r6 + 0] = r0
 1e0752e:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:89:17
 1e07530:    07 f2 3a 00       	if (r7 == r0) goto 116 <_mkey_check+0x124 : 1e075a8 >			  ## key0_decode.c:89:17
 1e07534:    0f 4c             	[r6 + 0] = r7			  ## key0_decode.c:93:9
 1e07536:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:95:14
 1e07538:    c8 ff 98 36 6c f3 	r8 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:95:18
 1e0753e:    80 f2 36 00       	if (r0 == r8) goto 108 <_mkey_check+0x12A : 1e075ae >			  ## key0_decode.c:95:18
 1e07542:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:98:27
 1e07544:    e1 fd 80 00       	r0 = r0 ^ r8			  ## key0_decode.c:98:31
 1e07548:    08 4c             	[r6 + 0] = r0			  ## key0_decode.c:98:13
 1e0754a:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:100:23
 1e0754c:    04 a0             	r4 = sp + 0			  ## key0_decode.c:100:23
 1e0754e:    02 72             	r2 = 32			  ## key0_decode.c:100:5
 1e07550:    40 08             	r0 = r4			  ## key0_decode.c:100:5
 1e07552:    97 f3 c7 fc       	call 3144078 <memcpy : 106ee4 >			  ## key0_decode.c:100:5
 1e07556:    47 02             	r7 = [sp+16]			  ## key0_decode.c:104:35
 1e07558:    e0 05             	r0 = r7.l (u)			  ## key0_decode.c:105:5
 1e0755a:    02 72             	r2 = 32			  ## key0_decode.c:105:5
 1e0755c:    41 08             	r1 = r4			  ## key0_decode.c:105:5
 1e0755e:    bf f3 3a ce       	call -25484 <doe : 1e011d6 >			  ## key0_decode.c:105:5
 1e07562:    4f 02             	[sp+16] = r7			  ## key0_decode.c:108:29
 1e07564:    00 02             	r0 = [sp]			  ## key0_decode.c:110:37
 1e07566:    50 f2 1f 10       	if (r0 != r5) goto 62 <_mkey_check+0x124 : 1e075a8 >			  ## key0_decode.c:110:37
 1e0756a:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## key0_decode.c:114:30
 1e0756e:    10 e0 1b 10       	if (r0 != 1) goto 54 <_mkey_check+0x124 : 1e075a8 >			  ## key0_decode.c:114:30
 1e07572:    80 f5 1e 00       	r0 = h[sp+30] (u)			  ## key0_decode.c:117:25
 1e07576:    f0 e0 17 10       	if (r0 != 15) goto 46 <_mkey_check+0x124 : 1e075a8 >			  ## key0_decode.c:117:25
 1e0757a:    00 a0             	r0 = sp + 0
 1e0757c:    60 80             	r0 += 6			  ## key0_decode.c:121:36
 1e0757e:    a1 71             	r1 = 26			  ## key0_decode.c:121:15
 1e07580:    bf f3 4b ce       	call -25450 <CRC16 : 1e0121a >			  ## key0_decode.c:121:15
 1e07584:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## key0_decode.c:121:15
 1e07588:    10 f2 02 00       	if (r0 == r1) goto 4 <_mkey_check+0x10C : 1e07590 >			  ## key0_decode.c:121:15
 1e0758c:    8f f3 83 df       	call 2080518 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e07590:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## efuse.c:9:22
 1e07596:    e0 50             	r0 = h[r0 + 28] (u)			  ## efuse.c:9:22
 1e07598:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## key0_decode.c:125:55
 1e0759c:    82 f5 18 00       	r2 = h[sp+24] (u)			  ## key0_decode.c:125:30
 1e075a0:    d0 b2             	r0 ^= r1			  ## key0_decode.c:125:42
 1e075a2:    50 b5             	r0 &= r2			  ## key0_decode.c:125:42
 1e075a4:    20 04             	r0 = r0.l (u)			  ## key0_decode.c:125:9
 1e075a6:    01 20             	if (r0 == 0) goto 2 <_mkey_check+0x126 : 1e075aa >			  ## key0_decode.c:125:9
 1e075a8:    ff 1f             	goto -2 <_mkey_check+0x124 : 1e075a8 >			  ## key0_decode.c:133:5
 1e075aa:    18 f6 00 60       	[r6 + 0] = r8			  ## key0_decode.c:126:13
 1e075ae:    22 0a             	sp += 68
 1e075b0:    58 01             	{pc, r8-r4} = [sp++]			  ## key0_decode.c:134:1


__addsf3:
 1e075b2:    77 01             	[--sp] = {rets, r7-r4}
 1e075b4:    33 fd 80 0c       	r3 = r0 & 2147483647
 1e075b8:    32 fc ff ff       	r2 = r3 + -1
 1e075bc:    c4 ff fe ff 7f 7f 	r4 = 2139095038 <uECC_vli_cmp_unsafe+0x16F9002 : 17ffffe >
 1e075c2:    35 fd 80 1c       	r5 = r1 & 2147483647
 1e075c6:    42 f2 1c 80       	if (r2 > r4) goto 56 <__addsf3+0x50 : 1e07602 >
 1e075ca:    52 fc ff ff       	r2 = r5 + -1
 1e075ce:    14 98             	r4 = r4 + 1
 1e075d0:    42 f2 17 20       	if (r2 >= r4) goto 46 <__addsf3+0x50 : 1e07602 >
 1e075d4:    02 08             	r2 = r0
 1e075d6:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x2A : 1e075dc >
 1e075da:    12 08             	r2 = r1
 1e075dc:    c6 ff ff ff 7f 00 	r6 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e075e2:    e2 fd 60 42       	r4 = r2 & r6
 1e075e6:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x3A : 1e075ec >
 1e075ea:    01 08             	r1 = r0
 1e075ec:    e2 fd 60 31       	r3 = r1 & r6
 1e075f0:    c8 d5             	r0 = r1 >> 23
 1e075f2:    88 fd b8 52       	r5 = uextra(r2, p:23, l:8)
 1e075f6:    60 ff ff 09 10 00 	if ((r0 & 255) == 0) goto 32 <__addsf3+0x6A : 1e0761c >
 1e075fc:    00 04             	r0 = r0.b0 (u)
 1e075fe:    1d 3a             	if (r5 != 0) goto 58 <__addsf3+0x88 : 1e0763a >
 1e07600:    15 18             	goto 42 <__addsf3+0x7A : 1e0762c >
 1e07602:    c2 ff 01 00 80 7f 	r2 = 2139095041 <uECC_vli_cmp_unsafe+0x16F9005 : 1800001 >
 1e07608:    23 f2 03 30       	if (r3 < r2) goto 6 <__addsf3+0x60 : 1e07612 >
 1e0760c:    02 fd 40 0b       	r2 = r0 | 4194304
 1e07610:    7a 18             	goto 244 <__addsf3+0x154 : 1e07706 >
 1e07612:    25 f2 66 30       	if (r5 < r2) goto 204 <__addsf3+0x130 : 1e076e2 >
 1e07616:    02 fd 40 1b       	r2 = r1 | 4194304
 1e0761a:    75 18             	goto 234 <__addsf3+0x154 : 1e07706 >
 1e0761c:    e8 fd 00 03       	r0 = clz(r3)
 1e07620:    06 fc f8 ff       	r6 = r0 + -8
 1e07624:    83 0d             	r3 <<= r6
 1e07626:    60 fb 09 09       	r0 = 9 - r0
 1e0762a:    07 3a             	if (r5 != 0) goto 14 <__addsf3+0x88 : 1e0763a >
 1e0762c:    e8 fd 00 54       	r5 = clz(r4)
 1e07630:    56 fc f8 ff       	r6 = r5 + -8
 1e07634:    84 0d             	r4 <<= r6
 1e07636:    65 fb 09 59       	r5 = 9 - r5
 1e0763a:    65 b1             	r5 = r0 - r5
 1e0763c:    d2 b2             	r2 ^= r1
 1e0763e:    e4 c0             	r4 = r4 << 3
 1e07640:    14 bd             	r4 |= 67108864
 1e07642:    db c0             	r3 = r3 << 3
 1e07644:    0d 2a             	if (r5 == 0) goto 26 <__addsf3+0xAE : 1e07660 >
 1e07646:    16 70             	r6 = 1
 1e07648:    f5 e1 0b 80       	if (r5 > 31) goto 22 <__addsf3+0xB0 : 1e07662 >
 1e0764c:    66 fb 20 59       	r6 = 32 - r5
 1e07650:    f8 fd 60 74       	r7 = r4 << r6
 1e07654:    16 70             	r6 = 1
 1e07656:    01 3e             	if (r7 != 0) goto 2 <__addsf3+0xA8 : 1e0765a >
 1e07658:    06 70             	r6 = 0
 1e0765a:    64 0d             	r4 >>= r5
 1e0765c:    56 b8             	r6 |= r4
 1e0765e:    01 18             	goto 2 <__addsf3+0xB0 : 1e07662 >
 1e07660:    46 08             	r6 = r4
 1e07662:    04 fd 04 3c       	r4 = r3 | 67108864
 1e07666:    f2 ef 0a d0       	ifs (r2 <= -1) goto 20 <__addsf3+0xCC : 1e0767e >
 1e0766a:    02 bd             	r2 = r6 + r4
 1e0766c:    1b f3 10 20       	if ((r2 & 134217728) == 0) goto 32 <__addsf3+0xDE : 1e07690 >
 1e07670:    83 b7             	r3 = r3 + r6
 1e07672:    23 fd 01 39       	r3 = r3 & 1
 1e07676:    52 d0             	r2 = r2 >> 1
 1e07678:    52 b6             	r2 |= r3
 1e0767a:    10 90             	r0 = r0 + 1
 1e0767c:    09 18             	goto 18 <__addsf3+0xDE : 1e07690 >
 1e0767e:    a2 b9             	r2 = r4 - r6
 1e07680:    3c 24             	if (r2 == 0) goto 120 <__addsf3+0x148 : 1e076fa >
 1e07682:    93 d6             	r3 = r2 >> 26
 1e07684:    05 36             	if (r3 != 0) goto 10 <__addsf3+0xDE : 1e07690 >
 1e07686:    e8 fd 00 32       	r3 = clz(r2)
 1e0768a:    b3 8f             	r3 += -5
 1e0768c:    e0 b0             	r0 = r0 - r3
 1e0768e:    c2 0c             	r2 <<= r3
 1e07690:    21 fd 80 1c       	r1 = r1 & 2147483648
 1e07694:    0b ff ff 00 03 00 	ifs (r0 < 255) goto 6 <__addsf3+0xEE : 1e076a0 >
 1e0769a:    02 fd ff 18       	r2 = r1 | 2139095040
 1e0769e:    33 18             	goto 102 <__addsf3+0x154 : 1e07706 >
 1e076a0:    00 e0 0c c0       	ifs (r0 > 0) goto 24 <__addsf3+0x10A : 1e076bc >
 1e076a4:    63 fb 01 09       	r3 = 1 - r0
 1e076a8:    60 fb 20 39       	r0 = 32 - r3
 1e076ac:    f8 fd 00 52       	r5 = r2 << r0
 1e076b0:    00 70             	r0 = 0
 1e076b2:    14 70             	r4 = 1
 1e076b4:    01 3a             	if (r5 != 0) goto 2 <__addsf3+0x106 : 1e076b8 >
 1e076b6:    04 70             	r4 = 0
 1e076b8:    e2 0c             	r2 >>= r3
 1e076ba:    52 b8             	r2 |= r4
 1e076bc:    23 fd 07 29       	r3 = r2 & 7
 1e076c0:    14 70             	r4 = 1
 1e076c2:    43 e0 01 80       	if (r3 > 4) goto 2 <__addsf3+0x116 : 1e076c8 >
 1e076c6:    04 70             	r4 = 0
 1e076c8:    c0 c5             	r0 = r0 << 23
 1e076ca:    50 b2             	r0 |= r1
 1e076cc:    97 fd 18 12       	r1 = uextra(r2, p:3, l:23)
 1e076d0:    50 b2             	r0 |= r1
 1e076d2:    00 b1             	r0 = r0 + r4
 1e076d4:    21 fd 01 09       	r1 = r0 & 1
 1e076d8:    43 e0 01 00       	if (r3 == 4) goto 2 <__addsf3+0x12C : 1e076de >
 1e076dc:    01 70             	r1 = 0
 1e076de:    02 b2             	r2 = r1 + r0
 1e076e0:    12 18             	goto 36 <__addsf3+0x154 : 1e07706 >
 1e076e2:    21 ff ff 38 0b 00 	if (r3 != 2139095040) goto 22 <__addsf3+0x14C : 1e076fe >
 1e076e8:    d1 b0             	r1 ^= r0
 1e076ea:    21 ff 80 1c 03 00 	if (r1 != 2147483648) goto 6 <__addsf3+0x144 : 1e076f6 >
 1e076f0:    c0 ff 00 00 c0 7f 	r0 = 2143289344 <uECC_vli_cmp_unsafe+0x1AF9004 : 1c00000 >
 1e076f6:    02 08             	r2 = r0
 1e076f8:    06 18             	goto 12 <__addsf3+0x154 : 1e07706 >
 1e076fa:    02 70             	r2 = 0
 1e076fc:    04 18             	goto 8 <__addsf3+0x154 : 1e07706 >
 1e076fe:    21 ff ff 58 03 00 	if (r5 != 2139095040) goto 6 <__addsf3+0x158 : 1e0770a >
 1e07704:    12 08             	r2 = r1
 1e07706:    20 08             	r0 = r2
 1e07708:    57 01             	{pc, r7-r4} = [sp++]
 1e0770a:    03 26             	if (r3 == 0) goto 6 <__addsf3+0x160 : 1e07712 >
 1e0770c:    02 08             	r2 = r0
 1e0770e:    62 3b             	if (r5 != 0) goto -316 <__addsf3+0x22 : 1e075d4 >
 1e07710:    fa 1f             	goto -12 <__addsf3+0x154 : 1e07706 >
 1e07712:    12 08             	r2 = r1
 1e07714:    f8 3b             	if (r5 != 0) goto -16 <__addsf3+0x154 : 1e07706 >
 1e07716:    e2 fd 00 21       	r2 = r1 & r0
 1e0771a:    f5 1f             	goto -22 <__addsf3+0x154 : 1e07706 >


__fixsfsi:
 1e0771c:    74 01             	[--sp] = {rets, r4}
 1e0771e:    01 08             	r1 = r0
 1e07720:    88 fd b8 21       	r2 = uextra(r1, p:23, l:8)
 1e07724:    00 70             	r0 = 0
 1e07726:    f2 e7 1e 30       	if (r2 < 127) goto 60 <__fixsfsi+0x4A : 1e07766 >
 1e0772a:    23 fc 81 ff       	r3 = r2 + -127
 1e0772e:    c8 df             	r0 = r1 >>> 31
 1e07730:    10 b0             	r0 |= 1
 1e07732:    03 e2 05 30       	if (r3 < 32) goto 10 <__fixsfsi+0x24 : 1e07740 >
 1e07736:    10 e0 0e 00       	if (r0 == 1) goto 28 <__fixsfsi+0x3A : 1e07756 >
 1e0773a:    20 fb 80 0c       	r0 = 2147483648
 1e0773e:    54 01             	{pc, r4} = [sp++]
 1e07740:    c4 ff ff ff 7f 00 	r4 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e07746:    51 b9             	r1 &= r4
 1e07748:    91 bb             	r1 |= 8388608
 1e0774a:    63 e1 08 c0       	ifs (r3 > 22) goto 16 <__fixsfsi+0x42 : 1e0775e >
 1e0774e:    62 fb 96 29       	r2 = 150 - r2
 1e07752:    a1 0c             	r1 >>= r2
 1e07754:    07 18             	goto 14 <__fixsfsi+0x48 : 1e07764 >
 1e07756:    c0 ff ff ff ff 7f 	r0 = 2147483647 <bank_code_load_addr+0x1E13EB : 1ffffff >
 1e0775c:    54 01             	{pc, r4} = [sp++]
 1e0775e:    22 fc 6a ff       	r2 = r2 + -150
 1e07762:    81 0c             	r1 <<= r2
 1e07764:    08 0e             	r0 = r1 * r0
 1e07766:    54 01             	{pc, r4} = [sp++]


__floatsisf:
 1e07768:    75 01             	[--sp] = {rets, r5, r4}
 1e0776a:    10 20             	if (r0 == 0) goto 32 <__floatsisf+0x24 : 1e0778c >
 1e0776c:    c1 df             	r1 = r0 >>> 31
 1e0776e:    42 b0             	r2 = r0 + r1
 1e07770:    d2 b2             	r2 ^= r1
 1e07772:    e8 fd 00 12       	r1 = clz(r2)
 1e07776:    11 fd 1f 19       	r1 = r1 ^ 31
 1e0777a:    20 fd 80 0c       	r0 = r0 & 2147483648
 1e0777e:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatsisf+0x28 : 1e07790 >
 1e07782:    63 fb 17 19       	r3 = 23 - r1
 1e07786:    c2 0c             	r2 <<= r3
 1e07788:    b2 bb             	r2 ^= 8388608
 1e0778a:    18 18             	goto 48 <__floatsisf+0x54 : 1e077bc >
 1e0778c:    00 70             	r0 = 0
 1e0778e:    55 01             	{pc, r5, r4} = [sp++]
 1e07790:    63 fb 37 19       	r3 = 55 - r1
 1e07794:    f8 fd 30 42       	r4 = r2 << r3
 1e07798:    13 70             	r3 = 1
 1e0779a:    28 ff 80 4c 01 00 	if (r4 > 2147483648) goto 2 <__floatsisf+0x3A : 1e077a2 >
 1e077a0:    03 70             	r3 = 0
 1e077a2:    15 fc e9 ff       	r5 = r1 + -23
 1e077a6:    62 0d             	r2 >>= r5
 1e077a8:    85 b6             	r5 = r3 + r2
 1e077aa:    25 fd 01 59       	r5 = r5 & 1
 1e077ae:    20 ff 80 4c 01 00 	if (r4 == 2147483648) goto 2 <__floatsisf+0x4E : 1e077b6 >
 1e077b4:    05 70             	r5 = 0
 1e077b6:    b2 bb             	r2 ^= 8388608
 1e077b8:    c2 b4             	r2 = r2 + r3
 1e077ba:    42 b5             	r2 = r2 + r5
 1e077bc:    c9 c5             	r1 = r1 << 23
 1e077be:    81 b2             	r1 = r1 + r2
 1e077c0:    41 fb 7e 18       	r1 = r1 + 1065353216
 1e077c4:    50 b2             	r0 |= r1
 1e077c6:    55 01             	{pc, r5, r4} = [sp++]


__floatunsisf:
 1e077c8:    74 01             	[--sp] = {rets, r4}
 1e077ca:    0b 20             	if (r0 == 0) goto 22 <__floatunsisf+0x1A : 1e077e2 >
 1e077cc:    e8 fd 00 10       	r1 = clz(r0)
 1e077d0:    11 fd 1f 19       	r1 = r1 ^ 31
 1e077d4:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatunsisf+0x1E : 1e077e6 >
 1e077d8:    62 fb 17 19       	r2 = 23 - r1
 1e077dc:    80 0c             	r0 <<= r2
 1e077de:    b0 bb             	r0 ^= 8388608
 1e077e0:    18 18             	goto 48 <__floatunsisf+0x4A : 1e07812 >
 1e077e2:    00 70             	r0 = 0
 1e077e4:    54 01             	{pc, r4} = [sp++]
 1e077e6:    62 fb 37 19       	r2 = 55 - r1
 1e077ea:    f8 fd 20 30       	r3 = r0 << r2
 1e077ee:    12 70             	r2 = 1
 1e077f0:    28 ff 80 3c 01 00 	if (r3 > 2147483648) goto 2 <__floatunsisf+0x30 : 1e077f8 >
 1e077f6:    02 70             	r2 = 0
 1e077f8:    14 fc e9 ff       	r4 = r1 + -23
 1e077fc:    20 0d             	r0 >>= r4
 1e077fe:    04 b4             	r4 = r2 + r0
 1e07800:    24 fd 01 49       	r4 = r4 & 1
 1e07804:    20 ff 80 3c 01 00 	if (r3 == 2147483648) goto 2 <__floatunsisf+0x44 : 1e0780c >
 1e0780a:    04 70             	r4 = 0
 1e0780c:    b0 bb             	r0 ^= 8388608
 1e0780e:    80 b0             	r0 = r0 + r2
 1e07810:    00 b1             	r0 = r0 + r4
 1e07812:    c9 c5             	r1 = r1 << 23
 1e07814:    40 b0             	r0 = r0 + r1
 1e07816:    40 fb 7e 08       	r0 = r0 + 1065353216
 1e0781a:    54 01             	{pc, r4} = [sp++]


__muldi3:
 1e0781c:    76 01             	[--sp] = {rets, r6-r4}
 1e0781e:    89 0e             	r1 = r1 * r2
 1e07820:    80 fe 00 13       	r1 += r3 * r0
 1e07824:    03 d4             	r3 = r0 >> 16
 1e07826:    14 d4             	r4 = r2 >> 16
 1e07828:    80 fe 30 14       	r1 += r4 * r3
 1e0782c:    20 04             	r0 = r0.l (u)
 1e0782e:    a2 04             	r2 = r2.l (u)
 1e07830:    15 0e             	r5 = r2 * r0
 1e07832:    2e d4             	r6 = r5 >> 16
 1e07834:    80 fe 30 62       	r6 += r2 * r3
 1e07838:    32 d4             	r2 = r6 >> 16
 1e0783a:    81 b2             	r1 = r1 + r2
 1e0783c:    a2 05             	r2 = r6.l (u)
 1e0783e:    80 fe 00 24       	r2 += r4 * r0
 1e07842:    12 d4             	r2 = r2 >> 16
 1e07844:    81 b2             	r1 = r1 + r2
 1e07846:    80 fe 00 64       	r6 += r4 * r0
 1e0784a:    60 05             	r0 = r5.l (u)
 1e0784c:    d0 fd 80 06       	r0 <= insert(r6, p:16, l:16)
 1e07850:    56 01             	{pc, r6-r4} = [sp++]


__subsf3:
 1e07852:    11 fd 80 1c       	r1 = r1 ^ 2147483648
 1e07856:    ff f3 ac fe       	goto -680 <__addsf3 : 1e075b2 >


__udivdi3:
 1e0785a:    74 01             	[--sp] = {rets, r4}
 1e0785c:    fe 0b             	sp += -4
 1e0785e:    04 70             	r4 = 0
 1e07860:    0c 02             	[sp] = r4
 1e07862:    80 f3 02 00       	call 4 <__udivmoddi4 : 1e0786a >
 1e07866:    02 0a             	sp += 4
 1e07868:    54 01             	{pc, r4} = [sp++]


__udivmoddi4:
 1e0786a:    7e 01             	[--sp] = {rets, r14-r4}
 1e0786c:    08 f5 30 00       	r8 = [sp+48]
 1e07870:    10 22             	if (r1 == 0) goto 32 <__udivmoddi4+0x28 : 1e07892 >
 1e07872:    19 24             	if (r2 == 0) goto 50 <__udivmoddi4+0x3C : 1e078a6 >
 1e07874:    33 26             	if (r3 == 0) goto 102 <__udivmoddi4+0x72 : 1e078dc >
 1e07876:    e8 fd 00 41       	r4 = clz(r1)
 1e0787a:    e8 fd 00 53       	r5 = clz(r3)
 1e0787e:    24 bb             	r4 = r5 - r4
 1e07880:    04 e2 48 30       	if (r4 < 32) goto 144 <__udivmoddi4+0xAA : 1e07914 >
 1e07884:    08 e0 56 00       	if (r8 == 0) goto 172 <__udivmoddi4+0xCA : 1e07934 >
 1e07888:    10 f6 00 80       	[r8 + 0] = r0
 1e0788c:    11 f6 04 80       	[r8 + 4] = r1
 1e07890:    51 18             	goto 162 <__udivmoddi4+0xCA : 1e07934 >
 1e07892:    34 26             	if (r3 == 0) goto 104 <__udivmoddi4+0x92 : 1e078fc >
 1e07894:    08 e0 4e 00       	if (r8 == 0) goto 156 <__udivmoddi4+0xCA : 1e07934 >
 1e07898:    01 70             	r1 = 0
 1e0789a:    11 f6 04 80       	[r8 + 4] = r1
 1e0789e:    10 f6 00 80       	[r8 + 0] = r0
 1e078a2:    00 70             	r0 = 0
 1e078a4:    5e 01             	{pc, r14-r4} = [sp++]
 1e078a6:    3d 26             	if (r3 == 0) goto 122 <__udivmoddi4+0xB8 : 1e07922 >
 1e078a8:    54 20             	if (r0 == 0) goto 168 <__udivmoddi4+0xE8 : 1e07952 >
 1e078aa:    34 fc ff ff       	r4 = r3 + -1
 1e078ae:    34 f0 81 00       	if ((r4 & r3) == 0) goto 258 <__udivmoddi4+0x14A : 1e079b4 >
 1e078b2:    e8 fd 00 41       	r4 = clz(r1)
 1e078b6:    e8 fd 00 53       	r5 = clz(r3)
 1e078ba:    24 bb             	r4 = r5 - r4
 1e078bc:    f4 e1 e2 2f       	if (r4 >= 31) goto -60 <__udivmoddi4+0x1A : 1e07884 >
 1e078c0:    1c 98             	r12 = r4 + 1
 1e078c2:    fa fd c0 90       	r9 = r0 >> r12
 1e078c6:    64 fb 1f 49       	r4 = 31 - r4
 1e078ca:    f8 fd 40 71       	r7 = r1 << r4
 1e078ce:    fa fd c0 b1       	r11 = r1 >> r12
 1e078d2:    e0 fd 90 17       	r1 = r7 | r9
 1e078d6:    00 0d             	r0 <<= r4
 1e078d8:    0d 70             	r13 = 0
 1e078da:    8b 18             	goto 278 <__udivmoddi4+0x188 : 1e079f2 >
 1e078dc:    24 fc ff ff       	r4 = r2 + -1
 1e078e0:    24 f0 43 00       	if ((r4 & r2) == 0) goto 134 <__udivmoddi4+0x100 : 1e0796a >
 1e078e4:    e8 fd 00 41       	r4 = clz(r1)
 1e078e8:    e8 fd 00 52       	r5 = clz(r2)
 1e078ec:    15 82             	r5 += 33
 1e078ee:    2c bb             	r12 = r5 - r4
 1e078f0:    0b 70             	r11 = 0
 1e078f2:    0c e2 50 10       	if (r12 != 32) goto 160 <__udivmoddi4+0x12C : 1e07996 >
 1e078f6:    0d 70             	r13 = 0
 1e078f8:    0c 72             	r12 = 32
 1e078fa:    7b 18             	goto 246 <__udivmoddi4+0x188 : 1e079f2 >
 1e078fc:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xA2 : 1e0790c >
 1e07900:    c1 f4 00 89       	[r8 + 4] = 0
 1e07904:    d0 fe 20 10       	r1 = r0 % r2 (u)
 1e07908:    11 f6 00 80       	[r8 + 0] = r1
 1e0790c:    c0 fe 20 00       	r0 = r0 / r2 (u)
 1e07910:    01 70             	r1 = 0
 1e07912:    5e 01             	{pc, r14-r4} = [sp++]
 1e07914:    1c 98             	r12 = r4 + 1
 1e07916:    0d 70             	r13 = 0
 1e07918:    0c e2 0f 10       	if (r12 != 32) goto 30 <__udivmoddi4+0xD0 : 1e0793a >
 1e0791c:    0b 70             	r11 = 0
 1e0791e:    0c 72             	r12 = 32
 1e07920:    68 18             	goto 208 <__udivmoddi4+0x188 : 1e079f2 >
 1e07922:    08 e0 07 00       	if (r8 == 0) goto 14 <__udivmoddi4+0xCA : 1e07934 >
 1e07926:    00 70             	r0 = 0
 1e07928:    10 f6 04 80       	[r8 + 4] = r0
 1e0792c:    10 f6 00 80       	[r8 + 0] = r0
 1e07930:    01 70             	r1 = 0
 1e07932:    5e 01             	{pc, r14-r4} = [sp++]
 1e07934:    00 70             	r0 = 0
 1e07936:    01 70             	r1 = 0
 1e07938:    5e 01             	{pc, r14-r4} = [sp++]
 1e0793a:    fa fd c0 90       	r9 = r0 >> r12
 1e0793e:    64 fb 1f 49       	r4 = 31 - r4
 1e07942:    f8 fd 40 a1       	r10 = r1 << r4
 1e07946:    fa fd c0 b1       	r11 = r1 >> r12
 1e0794a:    e0 fd 90 1a       	r1 = r10 | r9
 1e0794e:    00 0d             	r0 <<= r4
 1e07950:    50 18             	goto 160 <__udivmoddi4+0x188 : 1e079f2 >
 1e07952:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xF8 : 1e07962 >
 1e07956:    c0 f4 00 89       	[r8 + 0] = 0
 1e0795a:    d0 fe 30 01       	r0 = r1 % r3 (u)
 1e0795e:    10 f6 04 80       	[r8 + 4] = r0
 1e07962:    c0 fe 30 01       	r0 = r1 / r3 (u)
 1e07966:    01 70             	r1 = 0
 1e07968:    5e 01             	{pc, r14-r4} = [sp++]
 1e0796a:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x110 : 1e0797a >
 1e0796e:    c1 f4 00 89       	[r8 + 4] = 0
 1e07972:    e2 fd 00 34       	r3 = r4 & r0
 1e07976:    13 f6 00 80       	[r8 + 0] = r3
 1e0797a:    12 e0 71 00       	if (r2 == 1) goto 226 <__udivmoddi4+0x1F6 : 1e07a60 >
 1e0797e:    e3 fd 20 24       	r2 = r4 & ~r2
 1e07982:    e8 fd 00 22       	r2 = clz(r2)
 1e07986:    f8 fd 20 31       	r3 = r1 << r2
 1e0798a:    62 fb 20 29       	r2 = 32 - r2
 1e0798e:    a0 0c             	r0 >>= r2
 1e07990:    50 b6             	r0 |= r3
 1e07992:    a1 0c             	r1 >>= r2
 1e07994:    5e 01             	{pc, r14-r4} = [sp++]
 1e07996:    fc e1 1f 80       	if (r12 > 31) goto 62 <__udivmoddi4+0x16E : 1e079d8 >
 1e0799a:    fa fd c0 90       	r9 = r0 >> r12
 1e0799e:    67 fb 20 c9       	r7 = 32 - r12
 1e079a2:    f8 fd 70 41       	r4 = r1 << r7
 1e079a6:    fa fd c0 b1       	r11 = r1 >> r12
 1e079aa:    e0 fd 90 14       	r1 = r4 | r9
 1e079ae:    c0 0d             	r0 <<= r7
 1e079b0:    0d 70             	r13 = 0
 1e079b2:    1f 18             	goto 62 <__udivmoddi4+0x188 : 1e079f2 >
 1e079b4:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x15A : 1e079c4 >
 1e079b8:    10 f6 00 80       	[r8 + 0] = r0
 1e079bc:    e2 fd 10 04       	r0 = r4 & r1
 1e079c0:    10 f6 04 80       	[r8 + 4] = r0
 1e079c4:    e3 fd 30 04       	r0 = r4 & ~r3
 1e079c8:    e8 fd 00 00       	r0 = clz(r0)
 1e079cc:    60 fb 20 09       	r0 = 32 - r0
 1e079d0:    fa fd 00 01       	r0 = r1 >> r0
 1e079d4:    01 70             	r1 = 0
 1e079d6:    5e 01             	{pc, r14-r4} = [sp++]
 1e079d8:    c4 fc e0 ff       	r4 = r12 + -32
 1e079dc:    fa fd 40 90       	r9 = r0 >> r4
 1e079e0:    67 fb 40 c9       	r7 = 64 - r12
 1e079e4:    f8 fd 70 a1       	r10 = r1 << r7
 1e079e8:    f8 fd 70 d0       	r13 = r0 << r7
 1e079ec:    e0 fd 90 0a       	r0 = r10 | r9
 1e079f0:    21 0d             	r1 >>= r4
 1e079f2:    f4 07             	r4 = -1
 1e079f4:    59 fb 01 29       	r9 = r2 - 1
 1e079f8:    a0 fb 40 a3       	r10 = r3 + r4 + c
 1e079fc:    0e 70             	r14 = 0
 1e079fe:    1e 18             	goto 60 <__udivmoddi4+0x1D2 : 1e07a3c >
 1e07a00:    c6 d7             	r6 = r0 >> 31
 1e07a02:    df fd 08 61       	r6 <= insert(r1, p:1, l:31)
 1e07a06:    cd d7             	r5 = r1 >> 31
 1e07a08:    df fd 08 5b       	r5 <= insert(r11, p:1, l:31)
 1e07a0c:    90 fb 60 19       	r1 = r9 - r6
 1e07a10:    b0 fb 50 1a       	r1 = r10 - r5 - !c
 1e07a14:    cf df             	r7 = r1 >>> 31
 1e07a16:    e2 fd 20 17       	r1 = r7 & r2
 1e07a1a:    e2 fd 30 47       	r4 = r7 & r3
 1e07a1e:    61 bc             	r1 = r6 - r1
 1e07a20:    b0 fb 40 b5       	r11 = r5 - r4 - !c
 1e07a24:    f0 fd 08 4d       	r4 = r13 << 1
 1e07a28:    f2 fd f8 5d       	r5 = r13 >> 31
 1e07a2c:    e0 fd 40 de       	r13 = r14 | r4
 1e07a30:    2e fd 01 79       	r14 = r7 & 1
 1e07a34:    df fd 08 50       	r5 <= insert(r0, p:1, l:31)
 1e07a38:    fc 8f             	r12 += -1
 1e07a3a:    50 08             	r0 = r5
 1e07a3c:    0c e0 e0 1f       	if (r12 != 0) goto -64 <__udivmoddi4+0x196 : 1e07a00 >
 1e07a40:    f2 fd f8 2d       	r2 = r13 >> 31
 1e07a44:    df fd 08 20       	r2 <= insert(r0, p:1, l:31)
 1e07a48:    f0 fd 08 0d       	r0 = r13 << 1
 1e07a4c:    08 e0 04 00       	if (r8 == 0) goto 8 <__udivmoddi4+0x1EE : 1e07a58 >
 1e07a50:    1b f6 04 80       	[r8 + 4] = r11
 1e07a54:    11 f6 00 80       	[r8 + 0] = r1
 1e07a58:    70 b0             	r0 &= 4294967294
 1e07a5a:    e0 fd e0 00       	r0 = r0 | r14
 1e07a5e:    21 08             	r1 = r2
 1e07a60:    5e 01             	{pc, r14-r4} = [sp++]


__umoddi3:
 1e07a62:    74 01             	[--sp] = {rets, r4}
 1e07a64:    fa 0b             	sp += -12
 1e07a66:    44 a0             	r4 = sp + 4
 1e07a68:    0c 02             	[sp] = r4
 1e07a6a:    bf f3 fe fe       	call -516 <__udivmoddi4 : 1e0786a >
 1e07a6e:    21 02             	r1 = [sp+8]
 1e07a70:    10 02             	r0 = [sp+4]
 1e07a72:    06 0a             	sp += 12
 1e07a74:    54 01             	{pc, r4} = [sp++]


btstack_code_start:
 1e07a76:    00 00             	nop


a2dp_source_media_codec_end:
 1e07a78:    01 00             	nop
 1e07a7a:    00 00             	nop
 1e07a7c:    b8 b0             	r8 ^= 2
 1e07a7e:    e0 01             	[--sp] = {psr}
 1e07a80:    c2 b0             	r2 = r0 + r3
 1e07a82:    e0 01             	[--sp] = {psr}
 1e07a84:    c4 b0             	r4 = r0 + r3
 1e07a86:    e0 01             	[--sp] = {psr}
 1e07a88:    00 00             	nop
 1e07a8a:    00 00             	nop
 1e07a8c:    48 b1             	r8 = r0 + r5
 1e07a8e:    e0 01             	[--sp] = {psr}
 1e07a90:    00 00             	nop
 1e07a92:    00 00             	nop


spp_sdp_record_item:
 1e07a94:    00 00             	nop
 1e07a96:    00 00             	nop
 1e07a98:    04 00             	bkpt
 1e07a9a:    01 00             	nop
 1e07a9c:    58 7b             	r8 = 181
 1e07a9e:    e0 01             	[--sp] = {psr}


sdp_record_item_end:
 1e07aa0:    02 a7             	r2 = sp + 112
 1e07aa2:    e0 01             	[--sp] = {psr}
 1e07aa4:    18 a7             	r8 = sp + 113
 1e07aa6:    e0 01             	[--sp] = {psr}
 1e07aa8:    34 a7             	r4 = sp + 115
 1e07aaa:    e0 01             	[--sp] = {psr}


bt_suspend_a2dp_resumea2dp_release:
 1e07aac:    96 b0             	r6 |= 2
 1e07aae:    e0 01             	[--sp] = {psr}
 1e07ab0:    9a b0             	r10 |= 2
 1e07ab2:    e0 01             	[--sp] = {psr}
 1e07ab4:    9e b0             	r14 |= 2
 1e07ab6:    e0 01             	[--sp] = {psr}


bt_suspend_avctp_resumeavctp_release:
 1e07ab8:    4a b1             	r10 = r0 + r5
 1e07aba:    e0 01             	[--sp] = {psr}
 1e07abc:    4e b1             	r14 = r0 + r5
 1e07abe:    e0 01             	[--sp] = {psr}
 1e07ac0:    52 b1             	r2 &= r0
 1e07ac2:    e0 01             	[--sp] = {psr}


bt_suspend_hfp_resumehfp_release:
 1e07ac4:    56 b1             	r6 &= r0
 1e07ac6:    e0 01             	[--sp] = {psr}
 1e07ac8:    5a b1             	r10 &= r0
 1e07aca:    e0 01             	[--sp] = {psr}
 1e07acc:    5e b1             	r14 &= r0
 1e07ace:    e0 01             	[--sp] = {psr}


bt_suspend_hid_resumehid_release:
 1e07ad0:    62 b1             	r2 = r0 - r5
 1e07ad2:    e0 01             	[--sp] = {psr}
 1e07ad4:    66 b1             	r6 = r0 - r5
 1e07ad6:    e0 01             	[--sp] = {psr}
 1e07ad8:    6a b1             	r10 = r0 - r5
 1e07ada:    e0 01             	[--sp] = {psr}


bt_suspend_spp_resumespp_release:
 1e07adc:    6e b1             	r14 = r0 - r5
 1e07ade:    e0 01             	[--sp] = {psr}
 1e07ae0:    72 b1             	r2 &= 4294967291
 1e07ae2:    e0 01             	[--sp] = {psr}
 1e07ae4:    76 b1             	r6 &= 4294967291
 1e07ae6:    e0 01             	[--sp] = {psr}


bt_suspend_sdp_resumesdp_release:
 1e07ae8:    7a b1             	r10 &= 4294967291
 1e07aea:    e0 01             	[--sp] = {psr}
 1e07aec:    7e b1             	r14 &= 4294967291
 1e07aee:    e0 01             	[--sp] = {psr}
 1e07af0:    82 b1             	r2 = r0 + r6
 1e07af2:    e0 01             	[--sp] = {psr}


bt_suspend_iap_resumeiap_release:
 1e07af4:    86 b1             	r6 = r0 + r6
 1e07af6:    e0 01             	[--sp] = {psr}
 1e07af8:    8a b1             	r10 = r0 + r6
 1e07afa:    e0 01             	[--sp] = {psr}
 1e07afc:    8e b1             	r14 = r0 + r6
 1e07afe:    e0 01             	[--sp] = {psr}


l2cap_signaling_commands_format:
 1e07b00:    53 26             	if (r3 == 0) goto 166 <own_private_linkkey+0xC : 1e07ba8 >
 1e07b02:    e1 01             	[--sp] = {psr, reti}
 1e07b04:    63 03             	r3 = [sp+88]
 1e07b06:    e1 01             	[--sp] = {psr, reti}
 1e07b08:    57 26             	if (r3 == 0) goto 174 <crc_ta+0xC : 1e07bb8 >
 1e07b0a:    e1 01             	[--sp] = {psr, reti}
 1e07b0c:    52 26             	if (r3 == 0) goto 164 <crc_ta+0x6 : 1e07bb2 >
 1e07b0e:    e1 01             	[--sp] = {psr, reti}
 1e07b10:    51 26             	if (r3 == 0) goto 162 <crc_ta+0x8 : 1e07bb4 >
 1e07b12:    e1 01             	[--sp] = {psr, reti}
 1e07b14:    63 03             	r3 = [sp+88]
 1e07b16:    e1 01             	[--sp] = {psr, reti}
 1e07b18:    63 03             	r3 = [sp+88]
 1e07b1a:    e1 01             	[--sp] = {psr, reti}
 1e07b1c:    54 26             	if (r3 == 0) goto 168 <crc_ta+0x1A : 1e07bc6 >
 1e07b1e:    e1 01             	[--sp] = {psr, reti}
 1e07b20:    54 26             	if (r3 == 0) goto 168 <crc_ta+0x1E : 1e07bca >
 1e07b22:    e1 01             	[--sp] = {psr, reti}
 1e07b24:    1f 27             	if (r3 == 0) goto -450 <__udivmoddi4+0xFA : 1e07964 >
 1e07b26:    e1 01             	[--sp] = {psr, reti}
 1e07b28:    52 26             	if (r3 == 0) goto 164 <user_data_cbuf_is_write_able+0x2 : 1e07bce >
 1e07b2a:    e1 01             	[--sp] = {psr, reti}
 1e07b2c:    00 00             	nop
 1e07b2e:    00 00             	nop
 1e07b30:    00 00             	nop
 1e07b32:    00 00             	nop
 1e07b34:    00 00             	nop
 1e07b36:    00 00             	nop
 1e07b38:    00 00             	nop
 1e07b3a:    00 00             	nop
 1e07b3c:    00 00             	nop
 1e07b3e:    00 00             	nop
 1e07b40:    00 00             	nop
 1e07b42:    00 00             	nop
 1e07b44:    57 26             	if (r3 == 0) goto 174 <user_data_cbuf_is_write_able+0x28 : 1e07bf4 >
 1e07b46:    e1 01             	[--sp] = {psr, reti}
 1e07b48:    1f 27             	if (r3 == 0) goto -450 <__udivmoddi4+0x11E : 1e07988 >
 1e07b4a:    e1 01             	[--sp] = {psr, reti}
 1e07b4c:    56 26             	if (r3 == 0) goto 172 <user_data_cbuf_is_write_able+0x2E : 1e07bfa >
 1e07b4e:    e1 01             	[--sp] = {psr, reti}
 1e07b50:    56 26             	if (r3 == 0) goto 172 <user_data_cbuf_is_write_able+0x32 : 1e07bfe >
 1e07b52:    e1 01             	[--sp] = {psr, reti}
 1e07b54:    63 03             	r3 = [sp+88]
 1e07b56:    e1 01             	[--sp] = {psr, reti}


sdp_spp_service_data:
 1e07b58:    36 00             	[--sp] = rets
 1e07b5a:    3f 09             	r15 += r3
 1e07b5c:    00 00             	nop
 1e07b5e:    0a 00             	ssync
 1e07b60:    01 00             	nop
 1e07b62:    04 09             	r4 += r0
 1e07b64:    00 01             	{r3-r0} = [sp++]
 1e07b66:    36 00             	[--sp] = rets
 1e07b68:    03 19             	goto 518 <user_data_att_send+0x124 : 1e07d70 >
 1e07b6a:    11 01             	{rets, r3-r1} = [sp++]
 1e07b6c:    09 00             	csync
 1e07b6e:    04 36             	if (r3 != 0) goto 8 <sdp_spp_service_data+0x20 : 1e07b78 >
 1e07b70:    00 0e             	r0 = r0 * r0
 1e07b72:    36 00             	[--sp] = rets
 1e07b74:    03 19             	goto 518 <att_get_default_conn_handle+0xA : 1e07d7c >
 1e07b76:    01 00             	nop
 1e07b78:    36 00             	[--sp] = rets
 1e07b7a:    05 19             	goto 522 <att_get_default_conn_handle+0x14 : 1e07d86 >
 1e07b7c:    00 03             	r0 = [sp+64]
 1e07b7e:    08 02             	[sp] = r0
 1e07b80:    09 00             	csync
 1e07b82:    09 36             	if (r3 != 0) goto 18 <sdp_spp_service_data+0x3E : 1e07b96 >
 1e07b84:    00 09             	r0 += r0
 1e07b86:    36 00             	[--sp] = rets
 1e07b88:    06 19             	goto 524 <att_send_init+0x2 : 1e07d96 >
 1e07b8a:    11 01             	{rets, r3-r1} = [sp++]
 1e07b8c:    09 01             	{r9-r4} = [sp++]
 1e07b8e:    02 09             	r2 += r0
 1e07b90:    01 00             	nop
 1e07b92:    25 06             	r5 = -30
 1e07b94:    4a 4c             	[r6 + 16] = r2
 1e07b96:    5f 53             	h[r1 + 42] = r7
 1e07b98:    50 50             	r0 = h[r0 + 10] (u)
 1e07b9a:    00 00             	nop


own_private_linkkey:
 1e07b9c:    06 77             	r6 = 112
 1e07b9e:    5f 87             	r15 += 117
 1e07ba0:    91 8d             	r1 += -39
 1e07ba2:    d4 23             	if (r1 == 0) goto -88 <l2cap_signaling_commands_format+0x4C : 1e07b4c >
 1e07ba4:    00 5d             	r0 = h[r6 + 32] (u)
 1e07ba6:    f1 d8             	r1 = r6 >>> 3
 1e07ba8:    cf 0c             	r15 <<= r3
 1e07baa:    14 2b             	if (r5 == 0) goto -472 <__udivmoddi4+0x16A : 1e079d4 >


crc_ta:
 1e07bac:    00 00             	nop
 1e07bae:    21 10             	call 66 <user_data_cbuf_is_write_able+0x26 : 1e07bf2 >
 1e07bb0:    42 20             	if (r0 == 0) goto 132 <user_data_cbuf_is_write_able+0x6A : 1e07c36 >
 1e07bb2:    63 30             	if (r0 != 0) goto 198 <user_data_att_send+0x2E : 1e07c7a >
 1e07bb4:    84 40             	r4 = [r0 + 32]
 1e07bb6:    a5 50             	r5 = h[r0 + 20] (u)
 1e07bb8:    c6 60             	r6 = b[r0 + 12] (u)
 1e07bba:    e7 70             	r7 = 14
 1e07bbc:    08 81             	r8 += 16
 1e07bbe:    29 91             	r9 = r0 + 18
 1e07bc0:    4a a1             	r10 = sp + 20
 1e07bc2:    6b b1             	r11 = r0 - r5
 1e07bc4:    8c c1             	r4 = r1 << 6
 1e07bc6:    ad d1             	r5 = r5 >> 6
 1e07bc8:    ce e1 ef f1       	if (r14 ?? 28) goto 990 <.GJTIE81_1_1_+0x8A : 1e07faa >


user_data_cbuf_is_write_able:
 1e07bcc:    76 01             	[--sp] = {rets, r6-r4}			  ## att_send.c:226:0
 1e07bce:    c5 ff c8 1b 00 00 	r5 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:226:0
 1e07bd4:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:230:9
 1e07bd6:    14 08             	r4 = r1			  ## att_send.c:230:9
 1e07bd8:    0f 24             	if (r2 == 0) goto 30 <user_data_cbuf_is_write_able+0x2C : 1e07bf8 >
 1e07bda:    21 fc c4 00       	r1 = r2 + 196			  ## att_send.c:110:28
 1e07bde:    02 70             	r2 = 0			  ## att_send.c:110:28
 1e07be0:    03 70             	r3 = 0			  ## att_send.c:110:28
 1e07be2:    06 f7 ec 1f       	r6 = h[r1 + -20] (u)			  ## att_send.c:110:28
 1e07be6:    06 f2 09 00       	if (r6 == r0) goto 18 <user_data_cbuf_is_write_able+0x30 : 1e07bfc >			  ## att_send.c:110:13
 1e07bea:    12 80             	r2 += 1			  ## att_send.c:109:23
 1e07bec:    13 80             	r3 += 1			  ## att_send.c:109:43
 1e07bee:    21 80             	r1 += 2			  ## att_send.c:109:23
 1e07bf0:    a3 e0 f7 bf       	ifs (r3 < 10) goto -18 <user_data_cbuf_is_write_able+0x16 : 1e07be2 >			  ## att_send.c:109:23
 1e07bf4:    46 71             	r6 = 20
 1e07bf6:    07 18             	goto 14 <user_data_cbuf_is_write_able+0x3A : 1e07c06 >
 1e07bf8:    05 70             	r5 = 0
 1e07bfa:    26 18             	goto 76 <user_data_cbuf_is_write_able+0x7C : 1e07c48 >
 1e07bfc:    80 04             	r0 = r2.b0 (u)			  ## att_send.c:236:19
 1e07bfe:    46 71             	r6 = 20
 1e07c00:    90 e0 01 80       	if (r0 > 9) goto 2 <user_data_cbuf_is_write_able+0x3A : 1e07c06 >
 1e07c04:    06 52             	r6 = h[r1 + 0] (u)			  ## att_send.c:238:5
 1e07c06:    97 f3 c9 f8       	call 3142034 <local_irq_disable : 106d9c >			  ## att_send.c:244:5
 1e07c0a:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:245:17
 1e07c0c:    71 40             	r1 = [r0 + 28]			  ## att_send.c:245:17
 1e07c0e:    60 40             	r0 = [r0 + 24]			  ## att_send.c:245:17
 1e07c10:    80 f3 81 35       	call 27394 <cbuf_get_data_size : 1e0e716 >			  ## att_send.c:245:59
 1e07c14:    21 b2             	r1 = r1 - r0			  ## att_send.c:245:57
 1e07c16:    05 70             	r5 = 0
 1e07c18:    00 70             	r0 = 0
 1e07c1a:    71 e0 10 30       	if (r1 < 7) goto 32 <user_data_cbuf_is_write_able+0x72 : 1e07c3e >
 1e07c1e:    60 9c             	r0 = r6 + 6			  ## att_send.c:241:46
 1e07c20:    20 04             	r0 = r0.l (u)			  ## att_send.c:248:28
 1e07c22:    01 f2 03 20       	if (r1 >= r0) goto 6 <user_data_cbuf_is_write_able+0x60 : 1e07c2c >			  ## att_send.c:248:16
 1e07c26:    10 fc fa ff       	r0 = r1 + -6			  ## att_send.c:249:27
 1e07c2a:    09 18             	goto 18 <user_data_cbuf_is_write_able+0x72 : 1e07c3e >
 1e07c2c:    d0 fe 00 21       	r2 = r1 % r0 (u)			  ## att_send.c:252:31
 1e07c30:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## att_send.c:251:28
 1e07c34:    80 0f             	r0 = r0 * r6			  ## att_send.c:251:41
 1e07c36:    72 e0 02 30       	if (r2 < 7) goto 4 <user_data_cbuf_is_write_able+0x72 : 1e07c3e >
 1e07c3a:    20 09             	r0 += r2			  ## att_send.c:254:33
 1e07c3c:    a0 8f             	r0 += -6			  ## att_send.c:254:19
 1e07c3e:    40 f2 01 30       	if (r0 < r4) goto 2 <user_data_cbuf_is_write_able+0x78 : 1e07c44 >
 1e07c42:    05 08             	r5 = r0			  ## att_send.c:257:9
 1e07c44:    97 f3 a8 f8       	call 3141968 <local_irq_enable : 106d98 >			  ## att_send.c:262:5
 1e07c48:    50 08             	r0 = r5			  ## att_send.c:264:1
 1e07c4a:    56 01             	{pc, r6-r4} = [sp++]			  ## att_send.c:264:1


user_data_att_send:
 1e07c4c:    7d 01             	[--sp] = {rets, r13-r4}			  ## att_send.c:285:0
 1e07c4e:    fc 0b             	sp += -8			  ## att_send.c:285:0
 1e07c50:    c9 ff c8 1b 00 00 	r9 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:285:0
 1e07c56:    07 f6 00 90       	r7 = [r9 + 0]			  ## att_send.c:290:9
 1e07c5a:    3d 08             	r13 = r3			  ## att_send.c:290:9
 1e07c5c:    2a 08             	r10 = r2
 1e07c5e:    06 08             	r6 = r0
 1e07c60:    19 2e             	if (r7 == 0) goto 50 <user_data_att_send+0x48 : 1e07c94 >
 1e07c62:    96 f5 00 00       	h[sp] = r6			  ## att_send.c:294:27
 1e07c66:    91 f5 02 00       	h[sp+2] = r1			  ## att_send.c:295:27
 1e07c6a:    17 26             	if (r3 == 0) goto 46 <user_data_att_send+0x4E : 1e07c9a >			  ## att_send.c:295:27
 1e07c6c:    d0 02             	r0 = [sp+52]
 1e07c6e:    1d 20             	if (r0 == 0) goto 58 <user_data_att_send+0x5E : 1e07caa >
 1e07c70:    05 c3             	r5 = r0 << 12			  ## att_send.c:309:29
 1e07c72:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:309:29
 1e07c76:    70 fc c4 00       	r0 = r7 + 196			  ## att_send.c:109:5
 1e07c7a:    01 70             	r1 = 0			  ## att_send.c:109:5
 1e07c7c:    02 70             	r2 = 0			  ## att_send.c:109:5
 1e07c7e:    03 f7 ec 0f       	r3 = h[r0 + -20] (u)			  ## att_send.c:110:28
 1e07c82:    63 f2 23 00       	if (r3 == r6) goto 70 <user_data_att_send+0x80 : 1e07ccc >			  ## att_send.c:110:13
 1e07c86:    11 80             	r1 += 1			  ## att_send.c:109:23
 1e07c88:    12 80             	r2 += 1			  ## att_send.c:109:43
 1e07c8a:    20 80             	r0 += 2			  ## att_send.c:109:23
 1e07c8c:    a2 e0 f7 bf       	ifs (r2 < 10) goto -18 <user_data_att_send+0x32 : 1e07c7e >			  ## att_send.c:109:23
 1e07c90:    4b 71             	r11 = 20
 1e07c92:    22 18             	goto 68 <user_data_att_send+0x8C : 1e07cd8 >
 1e07c94:    04 fb 9e ff       	r4 = -98 <bank_code_load_addr+0x1E138A : 1ffff9e >
 1e07c98:    69 18             	goto 210 <user_data_att_send+0x120 : 1e07d6c >
 1e07c9a:    c0 ff 5c 26 e1 01 	r0 = 31532636 <update_target_end+0x242C : 1e1265c >			  ## att_send.c:298:9
 1e07ca0:    80 f3 62 29       	call 21188 <puts : 1e0cf68 >			  ## att_send.c:298:9
 1e07ca4:    04 fb a1 ff       	r4 = -95 <bank_code_load_addr+0x1E138D : 1ffffa1 >
 1e07ca8:    61 18             	goto 194 <user_data_att_send+0x120 : 1e07d6c >
 1e07caa:    70 fc 2c 00       	r0 = r7 + 44			  ## att_send.c:185:5
 1e07cae:    12 92             	r2 = r1 + 1			  ## att_send.c:304:57
 1e07cb0:    01 70             	r1 = 0
 1e07cb2:    a2 04             	r2 = r2.l (u)
 1e07cb4:    03 f7 fe 0f       	r3 = h[r0 + -2] (u)			  ## att_send.c:186:27
 1e07cb8:    23 f2 4f 00       	if (r3 == r2) goto 158 <user_data_att_send+0x10E : 1e07d5a >			  ## att_send.c:186:13
 1e07cbc:    11 80             	r1 += 1			  ## att_send.c:185:48
 1e07cbe:    40 80             	r0 += 4			  ## att_send.c:185:23
 1e07cc0:    01 e2 f8 bf       	ifs (r1 < 32) goto -16 <user_data_att_send+0x68 : 1e07cb4 >			  ## att_send.c:185:23
 1e07cc4:    00 70             	r0 = 0			  ## att_send.c:304:29
 1e07cc6:    90 f5 04 00       	h[sp+4] = r0			  ## att_send.c:304:29
 1e07cca:    4e 18             	goto 156 <user_data_att_send+0x11C : 1e07d68 >			  ## att_send.c:304:29
 1e07ccc:    41 04             	r1 = r1.b0 (u)			  ## att_send.c:317:19
 1e07cce:    4b 71             	r11 = 20			  ## att_send.c:317:19
 1e07cd0:    91 e0 02 80       	if (r1 > 9) goto 4 <user_data_att_send+0x8C : 1e07cd8 >			  ## att_send.c:317:19
 1e07cd4:    0b f7 00 00       	r11 = h[r0 + 0] (u)			  ## att_send.c:318:20
 1e07cd8:    97 f3 60 f8       	call 3141824 <local_irq_disable : 106d9c >			  ## att_send.c:324:5
 1e07cdc:    60 08             	r0 = r6			  ## att_send.c:325:9
 1e07cde:    d1 08             	r1 = r13			  ## att_send.c:325:9
 1e07ce0:    75 17             	call -278 <user_data_cbuf_is_write_able : 1e07bcc >			  ## att_send.c:325:9
 1e07ce2:    2c 20             	if (r0 == 0) goto 88 <user_data_att_send+0xF0 : 1e07d3c >			  ## att_send.c:325:9
 1e07ce4:    0c fb ff 0f       	r12 = 4095 <sys_clock_limit+0x4F : fff >
 1e07ce8:    e6 fd 00 8d       	r8 = r13.l (u)			  ## att_send.c:327:21
 1e07cec:    b4 08             	r4 = r11			  ## att_send.c:329:13
 1e07cee:    48 f2 01 80       	if (r8 > r4) goto 2 <user_data_att_send+0xA8 : 1e07cf4 >			  ## att_send.c:329:13
 1e07cf2:    d4 08             	r4 = r13			  ## att_send.c:329:13
 1e07cf4:    00 f6 00 90       	r0 = [r9 + 0]			  ## att_send.c:273:24
 1e07cf8:    29 d3             	r1 = r5 >> 12			  ## att_send.c:332:32
 1e07cfa:    45 08             	r5 = r4			  ## att_send.c:332:32
 1e07cfc:    d4 fd 60 51       	r5 <= insert(r1, p:12, l:20)			  ## att_send.c:332:32
 1e07d00:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:332:32
 1e07d04:    01 a0             	r1 = sp + 0
 1e07d06:    62 70             	r2 = 6			  ## att_send.c:273:12
 1e07d08:    80 f3 d2 34       	call 27044 <cbuf_write : 1e0e6b0 >			  ## att_send.c:273:12
 1e07d0c:    01 f6 00 90       	r1 = [r9 + 0]			  ## att_send.c:274:25
 1e07d10:    07 08             	r7 = r0			  ## att_send.c:273:12
 1e07d12:    e2 fd c0 64       	r6 = r4 & r12			  ## att_send.c:332:32
 1e07d16:    10 08             	r0 = r1			  ## att_send.c:274:13
 1e07d18:    a1 08             	r1 = r10			  ## att_send.c:274:13
 1e07d1a:    62 08             	r2 = r6			  ## att_send.c:274:13
 1e07d1c:    80 f3 c8 34       	call 27024 <cbuf_write : 1e0e6b0 >			  ## att_send.c:274:13
 1e07d20:    70 09             	r0 += r7			  ## att_send.c:274:10
 1e07d22:    20 04             	r0 = r0.l (u)			  ## att_send.c:276:14
 1e07d24:    62 9c             	r2 = r6 + 6			  ## att_send.c:276:32
 1e07d26:    21 05             	r1 = r4.l (u)
 1e07d28:    02 f2 0b 10       	if (r2 != r0) goto 22 <user_data_att_send+0xF6 : 1e07d42 >
 1e07d2c:    90 fb 40 dd       	r13 = r13 - r4			  ## att_send.c:340:17
 1e07d30:    e6 fd 00 0d       	r0 = r13.l (u)			  ## att_send.c:326:9
 1e07d34:    1a 09             	r10 += r1			  ## att_send.c:341:18
 1e07d36:    d8 31             	if (r0 != 0) goto -80 <user_data_att_send+0x9C : 1e07ce8 >
 1e07d38:    04 70             	r4 = 0
 1e07d3a:    0c 18             	goto 24 <user_data_att_send+0x108 : 1e07d54 >
 1e07d3c:    04 fb 9f ff       	r4 = -97 <bank_code_load_addr+0x1E138B : 1ffff9f >
 1e07d40:    09 18             	goto 18 <user_data_att_send+0x108 : 1e07d54 >
 1e07d42:    c0 ff 63 26 e1 01 	r0 = 31532643 <update_target_end+0x2433 : 1e12663 >			  ## att_send.c:335:17
 1e07d48:    02 fb 9f ff       	r2 = -97 <bank_code_load_addr+0x1E138B : 1ffff9f >			  ## att_send.c:335:17
 1e07d4c:    24 08             	r4 = r2			  ## att_send.c:335:17
 1e07d4e:    83 08             	r3 = r8			  ## att_send.c:335:17
 1e07d50:    80 f3 29 28       	call 20562 <printf : 1e0cda6 >			  ## att_send.c:335:17
 1e07d54:    97 f3 20 f8       	call 3141696 <local_irq_enable : 106d98 >
 1e07d58:    09 18             	goto 18 <user_data_att_send+0x120 : 1e07d6c >
 1e07d5a:    00 50             	r0 = h[r0 + 0] (u)			  ## att_send.c:187:24
 1e07d5c:    05 c3             	r5 = r0 << 12			  ## att_send.c:304:29
 1e07d5e:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:304:29
 1e07d62:    61 ff 0f 09 87 ff 	if ((r0 & 15) != 0) goto -242 <user_data_att_send+0x2A : 1e07c76 >			  ## att_send.c:304:29
 1e07d68:    04 fb a3 ff       	r4 = -93 <bank_code_load_addr+0x1E138F : 1ffffa3 >
 1e07d6c:    40 08             	r0 = r4			  ## att_send.c:349:1
 1e07d6e:    04 0a             	sp += 8			  ## att_send.c:349:1
 1e07d70:    5d 01             	{pc, r13-r4} = [sp++]			  ## att_send.c:349:1


att_get_default_conn_handle:
 1e07d72:    c0 ff c8 1b 00 00 	r0 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:568:0
 1e07d78:    00 40             	r0 = [r0 + 0]			  ## att_send.c:569:9
 1e07d7a:    09 20             	if (r0 == 0) goto 18 <att_get_default_conn_handle+0x1C : 1e07d8e >			  ## att_send.c:569:9
 1e07d7c:    01 fc b0 00       	r1 = r0 + 176			  ## att_send.c:89:13
 1e07d80:    02 70             	r2 = 0			  ## att_send.c:89:13
 1e07d82:    80 f7 02 10       	r0 = h[r1 ++= 2] (u)			  ## att_send.c:89:13
 1e07d86:    05 30             	if (r0 != 0) goto 10 <att_get_default_conn_handle+0x20 : 1e07d92 >			  ## att_send.c:89:13
 1e07d88:    12 80             	r2 += 1			  ## att_send.c:88:43
 1e07d8a:    92 e0 fa df       	ifs (r2 <= 9) goto -12 <att_get_default_conn_handle+0x10 : 1e07d82 >
 1e07d8e:    00 70             	r0 = 0
 1e07d90:    20 00             	rts			  ## att_send.c:574:1
 1e07d92:    20 00             	rts			  ## att_send.c:574:1


att_send_init:
 1e07d94:    7a 01             	[--sp] = {rets, r10-r4}			  ## att_send.c:578:0
 1e07d96:    c8 ff c8 1b 00 00 	r8 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:578:0
 1e07d9c:    c0 f4 00 89       	[r8 + 0] = 0			  ## att_send.c:582:15
 1e07da0:    36 08             	r6 = r3			  ## att_send.c:582:15
 1e07da2:    2a 08             	r10 = r2
 1e07da4:    15 08             	r5 = r1
 1e07da6:    04 08             	r4 = r0
 1e07da8:    55 28             	if (r4 == 0) goto 170 <att_send_init+0xC0 : 1e07e54 >
 1e07daa:    54 2a             	if (r5 == 0) goto 168 <att_send_init+0xC0 : 1e07e54 >
 1e07dac:    60 fc 0c 01       	r0 = r6 + 268			  ## att_send.c:587:44
 1e07db0:    02 f2 08 20       	if (r2 >= r0) goto 16 <att_send_init+0x30 : 1e07dc4 >			  ## att_send.c:587:9
 1e07db4:    c0 ff 84 26 e1 01 	r0 = 31532676 <update_target_end+0x2454 : 1e12684 >			  ## att_send.c:588:9
 1e07dba:    01 fb 0c 01       	r1 = 268 <DRIVER_RAM_TOTAL+0x1A : 10c >			  ## att_send.c:588:9
 1e07dbe:    1a 01             	{rets, r10-r4} = [sp++]			  ## att_send.c:588:9
 1e07dc0:    c0 f3 f1 27       	goto 20450 <printf : 1e0cda6 >			  ## att_send.c:588:9
 1e07dc4:    36 e1 07 80       	if (r6 > 19) goto 14 <att_send_init+0x42 : 1e07dd6 >			  ## att_send.c:592:9
 1e07dc8:    c0 ff b4 26 e1 01 	r0 = 31532724 <update_target_end+0x2484 : 1e126b4 >			  ## att_send.c:593:9
 1e07dce:    41 71             	r1 = 20			  ## att_send.c:593:9
 1e07dd0:    1a 01             	{rets, r10-r4} = [sp++]			  ## att_send.c:593:9
 1e07dd2:    c0 f3 e8 27       	goto 20432 <printf : 1e0cda6 >			  ## att_send.c:593:9
 1e07dd6:    97 f3 e1 f7       	call 3141570 <local_irq_disable : 106d9c >			  ## att_send.c:598:5
 1e07dda:    15 f6 00 80       	[r8 + 0] = r5			  ## att_send.c:600:15
 1e07dde:    01 70             	r1 = 0			  ## att_send.c:603:5
 1e07de0:    42 7e             	r2 = 228			  ## att_send.c:603:5
 1e07de2:    07 70             	r7 = 0			  ## att_send.c:603:5
 1e07de4:    50 08             	r0 = r5			  ## att_send.c:603:5
 1e07de6:    97 f3 83 f8       	call 3141894 <memset : 106ef0 >			  ## att_send.c:603:5
 1e07dea:    50 fc ac 00       	r0 = r5 + 172			  ## att_send.c:603:5
 1e07dee:    09 fc 38 00       	r9 = r0 + 56			  ## att_send.c:601:13
 1e07df2:    19 f6 00 00       	[r0 + 0] = r9			  ## att_send.c:605:27
 1e07df6:    6e 51             	h[r0 + 44] = r6			  ## att_send.c:606:30
 1e07df8:    81 91             	r1 = r0 + 24			  ## att_send.c:608:5
 1e07dfa:    42 71             	r2 = 20			  ## att_send.c:608:5
 1e07dfc:    12 f8 00 17       	h[r1+r7] = r2			  ## att_send.c:609:37
 1e07e00:    27 80             	r7 += 2			  ## att_send.c:608:19
 1e07e02:    47 e1 fb 1f       	if (r7 != 20) goto -10 <att_send_init+0x68 : 1e07dfc >			  ## att_send.c:608:5
 1e07e06:    40 80             	r0 += 4			  ## att_send.c:612:5
 1e07e08:    01 70             	r1 = 0			  ## att_send.c:612:5
 1e07e0a:    07 70             	r7 = 0			  ## att_send.c:612:5
 1e07e0c:    97 f3 70 f8       	call 3141856 <memset : 106ef0 >			  ## att_send.c:612:5
 1e07e10:    17 f9 db 50       	b[r5 + 219] = r7			  ## att_send.c:613:34
 1e07e14:    50 fc 2a 00       	r0 = r5 + 42			  ## att_send.c:132:5
 1e07e18:    01 70             	r1 = 0			  ## att_send.c:132:5
 1e07e1a:    02 78             	r2 = 128			  ## att_send.c:132:5
 1e07e1c:    97 f3 68 f8       	call 3141840 <memset : 106ef0 >			  ## att_send.c:132:5
 1e07e20:    17 f9 da 50       	b[r5 + 218] = r7			  ## att_send.c:619:23
 1e07e24:    80 fb 60 19       	r1 = r9 + r6			  ## att_send.c:615:13
 1e07e28:    a0 fc 1c ff       	r0 = r10 + -228			  ## att_send.c:602:14
 1e07e2c:    a0 b1             	r0 = r0 - r6			  ## att_send.c:616:14
 1e07e2e:    22 04             	r2 = r0.l (u)			  ## att_send.c:620:49
 1e07e30:    50 08             	r0 = r5			  ## att_send.c:620:5
 1e07e32:    80 f3 31 34       	call 26722 <cbuf_init : 1e0e698 >			  ## att_send.c:620:5
 1e07e36:    40 fc ff ff       	r0 = r4 + -1			  ## att_send.c:622:21
 1e07e3a:    20 04             	r0 = r0.l (u)			  ## att_send.c:622:21
 1e07e3c:    c1 ff fe ef 00 00 	r1 = 61438 <UPDATA_BREDR_BASE_BEG+0x49E : effe >			  ## att_send.c:622:21
 1e07e42:    10 f2 05 80       	if (r0 > r1) goto 10 <att_send_init+0xBC : 1e07e50 >			  ## att_send.c:622:21
 1e07e46:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:559:9
 1e07e4a:    02 20             	if (r0 == 0) goto 4 <att_send_init+0xBC : 1e07e50 >			  ## att_send.c:559:9
 1e07e4c:    14 f7 b0 00       	h[r0 + 176] = r4			  ## att_send.c:562:32
 1e07e50:    97 f3 a2 f7       	call 3141444 <local_irq_enable : 106d98 >			  ## att_send.c:627:5
 1e07e54:    5a 01             	{pc, r10-r4} = [sp++]			  ## att_send.c:629:1


stack_run_loop_resume:
 1e07e56:    c0 ff 06 26 e1 01 	r0 = 31532550 <update_target_end+0x23D6 : 1e12606 >			  ## btstack_task.c:53:0
 1e07e5c:    f1 7f             	r1 = 255			  ## btstack_task.c:54:5
 1e07e5e:    02 70             	r2 = 0			  ## btstack_task.c:54:5
 1e07e60:    03 70             	r3 = 0			  ## btstack_task.c:54:5
 1e07e62:    d7 f3 bd f7       	goto 3141498 <os_taskq_post_type : 106de0 >			  ## btstack_task.c:54:5


btstack_linked_list_remove:
 1e07e66:    07 22             	if (r1 == 0) goto 14 <btstack_linked_list_remove+0x10 : 1e07e76 >			  ## btstack_linked_list.c:110:0
 1e07e68:    02 08             	r2 = r0			  ## btstack_linked_list.c:110:0
 1e07e6a:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_remove+0x10 : 1e07e76 >			  ## btstack_linked_list.c:110:0
 1e07e6c:    00 44             	r0 = [r2 + 0]			  ## btstack_linked_list.c:116:17
 1e07e6e:    10 f2 fb 1f       	if (r0 != r1) goto -10 <btstack_linked_list_remove+0x2 : 1e07e68 >			  ## btstack_linked_list.c:116:17
 1e07e72:    00 42             	r0 = [r1 + 0]			  ## btstack_linked_list.c:117:31
 1e07e74:    08 44             	[r2 + 0] = r0			  ## btstack_linked_list.c:117:22
 1e07e76:    20 00             	rts


stack_run_loop_remove:
 1e07e78:    01 08             	r1 = r0			  ## run_loop.c:53:0
 1e07e7a:    c0 ff 84 09 00 00 	r0 = 2436 <stack_run_loop_head : 984 >			  ## run_loop.c:54:5
 1e07e80:    f2 1f             	goto -28 <btstack_linked_list_remove : 1e07e66 >			  ## run_loop.c:54:5


ble_user_cmd_prepare:
 1e07e82:    62 01             	[--sp] = {r3, r2}			  ## btstack_main.c:829:0
 1e07e84:    7a 01             	[--sp] = {rets, r10-r4}			  ## btstack_main.c:829:0
 1e07e86:    f0 0b             	sp += -32			  ## btstack_main.c:829:0
 1e07e88:    17 08             	r7 = r1			  ## btstack_main.c:829:0
 1e07e8a:    05 08             	r5 = r0			  ## btstack_main.c:829:0
 1e07e8c:    c4 ff 28 1c 00 00 	r4 = 7208 <btstack_global_info : 1c28 >			  ## btstack_main.c:829:0
 1e07e92:    00 f9 b4 40       	r0 = b[r4 + 180] (u)			  ## btstack_main.c:834:31
 1e07e96:    16 20             	if (r0 == 0) goto 44 <ble_user_cmd_prepare+0x42 : 1e07ec4 >			  ## btstack_main.c:834:31
 1e07e98:    06 fb 9d ff       	r6 = -99 <bank_code_load_addr+0x1E1389 : 1ffff9d >
 1e07e9c:    57 e0 14 c0       	ifs (r7 > 5) goto 40 <ble_user_cmd_prepare+0x46 : 1e07ec8 >
 1e07ea0:    38 c4             	r0 = r7 << 16			  ## btstack_main.c:843:21
 1e07ea2:    50 ba             	r0 |= r5			  ## btstack_main.c:843:28
 1e07ea4:    28 02             	[sp+8] = r0			  ## btstack_main.c:843:13
 1e07ea6:    97 f3 79 f7       	call 3141362 <local_irq_disable : 106d9c >			  ## btstack_main.c:845:5
 1e07eaa:    a1 48             	r1 = [r4 + 40]			  ## btstack_main.c:847:18
 1e07eac:    90 48             	r0 = [r4 + 36]			  ## btstack_main.c:847:18
 1e07eae:    80 f3 32 34       	call 26724 <cbuf_get_data_size : 1e0e716 >			  ## btstack_main.c:847:18
 1e07eb2:    20 b2             	r0 = r1 - r0			  ## btstack_main.c:847:18
 1e07eb4:    80 d0             	r0 = r0 >> 2			  ## btstack_main.c:847:36
 1e07eb6:    11 9e             	r1 = r7 + 1			  ## btstack_main.c:846:5
 1e07eb8:    01 f2 0b 90       	if (r1 <= r0) goto 22 <ble_user_cmd_prepare+0x50 : 1e07ed2 >			  ## btstack_main.c:847:9
 1e07ebc:    97 f3 6c f7       	call 3141336 <local_irq_enable : 106d98 >			  ## btstack_main.c:848:9
 1e07ec0:    f6 8f             	r6 += -1
 1e07ec2:    02 18             	goto 4 <ble_user_cmd_prepare+0x46 : 1e07ec8 >
 1e07ec4:    06 fb a2 ff       	r6 = -94 <bank_code_load_addr+0x1E138E : 1ffffa2 >
 1e07ec8:    60 08             	r0 = r6			  ## btstack_main.c:947:1
 1e07eca:    10 0a             	sp += 32			  ## btstack_main.c:947:1
 1e07ecc:    1a 01             	{rets, r10-r4} = [sp++]			  ## btstack_main.c:947:1
 1e07ece:    04 0a             	sp += 8			  ## btstack_main.c:947:1
 1e07ed0:    20 00             	rts			  ## btstack_main.c:947:1
 1e07ed2:    00 a4             	r0 = sp + 64
 1e07ed4:    18 02             	[sp+4] = r0			  ## btstack_main.c:852:5
 1e07ed6:    21 e0 0a b0       	ifs (r1 < 2) goto 20 <ble_user_cmd_prepare+0x6C : 1e07eee >			  ## btstack_main.c:852:5
 1e07eda:    80 a0             	r0 = sp + 8
 1e07edc:    40 80             	r0 += 4			  ## btstack_main.c:854:19
 1e07ede:    12 02             	r2 = [sp+4]			  ## btstack_main.c:854:19
 1e07ee0:    43 94             	r3 = r2 + 4			  ## btstack_main.c:854:19
 1e07ee2:    1b 02             	[sp+4] = r3			  ## btstack_main.c:854:19
 1e07ee4:    02 44             	r2 = [r2 + 0]			  ## btstack_main.c:854:19
 1e07ee6:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btstack_main.c:854:17
 1e07eea:    57 f3 f8 ff       	if (--r7 != 0) goto -16 <ble_user_cmd_prepare+0x5C : 1e07ede >			  ## btstack_main.c:854:17
 1e07eee:    50 fc fd ff       	r0 = r5 + -3			  ## btstack_main.c:861:5
 1e07ef2:    06 70             	r6 = 0			  ## btstack_main.c:861:5
 1e07ef4:    b0 e0 0c 80       	if (r0 > 11) goto 24 <.GJTIE81_0_0_+0xA : 1e07f10 >
 1e07ef8:    a0 00             	tbb [r0]


.GJTIS81_0_0_:
 1e07efa:    06     < 6 : 0x6 >
 1e07efb:    06     < 6 : 0x6 >
 1e07efc:    1d     < 29 : 0x1D >
 1e07efd:    1d     < 29 : 0x1D >
 1e07efe:    26     < 38 : 0x26 >
 1e07eff:    1d     < 29 : 0x1D >
 1e07f00:    2f     < 47 : 0x2F >
 1e07f01:    34     < 52 : 0x34 >
 1e07f02:    1d     < 29 : 0x1D >
 1e07f03:    1d     < 29 : 0x1D >
 1e07f04:    1d     < 29 : 0x1D >
 1e07f05:    75     < 117 : 0x75 >
 1e07f06:    30 02             	r0 = [sp+12]			  ## btstack_main.c:913:13
 1e07f08:    16 8a             	r6 += -95
 1e07f0a:    f0 e1 13 d0       	ifs (r0 <= 31) goto 38 <.GJTIE81_1_1_+0x14 : 1e07f34 >
 1e07f0e:    6a 18             	goto 212 <.GJTIE81_1_1_+0xC4 : 1e07fe4 >
 1e07f10:    50 fc e8 ff       	r0 = r5 + -24
 1e07f14:    40 e0 0e 80       	if (r0 > 4) goto 28 <.GJTIE81_1_1_+0x14 : 1e07f34 >
 1e07f18:    a0 00             	tbb [r0]


.GJTIS81_1_1_:
 1e07f1a:    03     < 3 : 0x3 >
 1e07f1b:    2d     < 45 : 0x2D >
 1e07f1c:    52     < 82 : 0x52 >
 1e07f1d:    0d     < 13 : 0xD >
 1e07f1e:    5f     < 95 : 0x5F >
 1e07f1f:    00     < 0 : 0x0 >
 1e07f20:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:899:13
 1e07f24:    82 f5 10 00       	r2 = h[sp+16] (u)			  ## btstack_main.c:899:13
 1e07f28:    31 02             	r1 = [sp+12]			  ## btstack_main.c:899:43
 1e07f2a:    c0 ff f0 ff 00 00 	r0 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## btstack_main.c:899:13
 1e07f30:    31 17             	call -414 <att_send_init : 1e07d94 >			  ## btstack_main.c:899:13
 1e07f32:    58 18             	goto 176 <.GJTIE81_1_1_+0xC4 : 1e07fe4 >			  ## btstack_main.c:899:13
 1e07f34:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:928:9
 1e07f36:    8a c0             	r2 = r1 << 2			  ## btstack_main.c:928:63
 1e07f38:    81 a0             	r1 = sp + 8			  ## btstack_main.c:928:63
 1e07f3a:    80 f3 b9 33       	call 26482 <cbuf_write : 1e0e6b0 >			  ## btstack_main.c:928:9
 1e07f3e:    97 f3 2b f7       	call 3141206 <local_irq_enable : 106d98 >			  ## btstack_main.c:931:5
 1e07f42:    06 70             	r6 = 0			  ## btstack_main.c:931:5
 1e07f44:    51 18             	goto 162 <.GJTIE81_1_1_+0xC8 : 1e07fe8 >			  ## btstack_main.c:931:5
 1e07f46:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:892:13
 1e07f4a:    82 f5 14 00       	r2 = h[sp+20] (u)			  ## btstack_main.c:892:13
 1e07f4e:    41 02             	r1 = [sp+16]			  ## btstack_main.c:892:44
 1e07f50:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:892:13
 1e07f54:    1f 17             	call -450 <att_send_init : 1e07d94 >			  ## btstack_main.c:892:13
 1e07f56:    46 18             	goto 140 <.GJTIE81_1_1_+0xC4 : 1e07fe4 >			  ## btstack_main.c:892:13
 1e07f58:    0c 17             	call -488 <att_get_default_conn_handle : 1e07d72 >			  ## btstack_main.c:878:62
 1e07f5a:    01 70             	r1 = 0			  ## btstack_main.c:878:33
 1e07f5c:    37 16             	call -914 <user_data_cbuf_is_write_able : 1e07bcc >			  ## btstack_main.c:878:33
 1e07f5e:    31 02             	r1 = [sp+12]			  ## btstack_main.c:878:22
 1e07f60:    40 18             	goto 128 <.GJTIE81_1_1_+0xC2 : 1e07fe2 >			  ## btstack_main.c:878:22
 1e07f62:    07 17             	call -498 <att_get_default_conn_handle : 1e07d72 >			  ## btstack_main.c:871:38
 1e07f64:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:871:19
 1e07f68:    42 02             	r2 = [sp+16]			  ## btstack_main.c:871:86
 1e07f6a:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:871:19
 1e07f6e:    c6 f5 18 00       	r6 = b[sp+24] (u)			  ## btstack_main.c:871:19
 1e07f72:    2e 18             	goto 92 <.GJTIE81_1_1_+0xB0 : 1e07fd0 >			  ## btstack_main.c:871:19
 1e07f74:    c8 ff c8 1b 00 00 	r8 = 7112 <att_s_hdl : 1bc8 >
 1e07f7a:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:634:9
 1e07f7e:    32 20             	if (r0 == 0) goto 100 <.GJTIE81_1_1_+0xC4 : 1e07fe4 >			  ## att_send.c:634:9
 1e07f80:    40 02             	r0 = [sp+16]			  ## btstack_main.c:906:42
 1e07f82:    09 f5 14 00       	r9 = [sp+20]			  ## btstack_main.c:906:51
 1e07f86:    0a f5 0c 00       	r10 = [sp+12]			  ## btstack_main.c:906:33
 1e07f8a:    27 90             	r7 = r0 + 2			  ## att_send.c:639:37
 1e07f8c:    09 e0 01 10       	if (r9 != 0) goto 2 <.GJTIE81_1_1_+0x72 : 1e07f92 >
 1e07f90:    07 08             	r7 = r0			  ## att_send.c:638:9
 1e07f92:    97 e0 27 c0       	ifs (r7 > 9) goto 78 <.GJTIE81_1_1_+0xC4 : 1e07fe4 >
 1e07f96:    97 f3 ff f6       	call 3141118 <local_irq_enable : 106d98 >			  ## att_send.c:649:5
 1e07f9a:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:651:5
 1e07f9e:    79 c0             	r1 = r7 << 1			  ## att_send.c:651:5
 1e07fa0:    01 09             	r1 += r0			  ## att_send.c:651:5
 1e07fa2:    42 71             	r2 = 20			  ## att_send.c:651:44
 1e07fa4:    12 f7 c4 10       	h[r1 + 196] = r2			  ## att_send.c:651:44
 1e07fa8:    1a f7 b0 10       	h[r1 + 176] = r10			  ## att_send.c:652:43
 1e07fac:    11 70             	r1 = 1			  ## att_send.c:652:43
 1e07fae:    c1 0d             	r1 <<= r7			  ## att_send.c:652:43
 1e07fb0:    00 fc db 00       	r0 = r0 + 219			  ## att_send.c:652:43
 1e07fb4:    09 e0 30 00       	if (r9 == 0) goto 96 <.GJTIE81_1_1_+0xF8 : 1e08018 >			  ## att_send.c:654:9
 1e07fb8:    02 60             	r2 = b[r0 + 0] (u)			  ## att_send.c:655:38
 1e07fba:    51 b4             	r1 |= r2			  ## att_send.c:655:38
 1e07fbc:    30 18             	goto 96 <.GJTIE81_1_1_+0xFE : 1e0801e >			  ## att_send.c:655:38
 1e07fbe:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:864:19
 1e07fc2:    52 02             	r2 = [sp+20]			  ## btstack_main.c:864:64
 1e07fc4:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:864:19
 1e07fc8:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:864:19
 1e07fcc:    c6 f5 1c 00       	r6 = b[sp+28] (u)			  ## btstack_main.c:864:19
 1e07fd0:    0e 02             	[sp] = r6
 1e07fd2:    3c 16             	call -904 <user_data_att_send : 1e07c4c >
 1e07fd4:    06 08             	r6 = r0
 1e07fd6:    06 18             	goto 12 <.GJTIE81_1_1_+0xC4 : 1e07fe4 >
 1e07fd8:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:885:33
 1e07fdc:    01 70             	r1 = 0			  ## btstack_main.c:885:33
 1e07fde:    f6 15             	call -1044 <user_data_cbuf_is_write_able : 1e07bcc >			  ## btstack_main.c:885:33
 1e07fe0:    41 02             	r1 = [sp+16]			  ## btstack_main.c:885:22
 1e07fe2:    08 42             	[r1 + 0] = r0
 1e07fe4:    97 f3 d8 f6       	call 3141040 <local_irq_enable : 106d98 >			  ## btstack_main.c:931:5
 1e07fe8:    36 17             	call -404 <stack_run_loop_resume : 1e07e56 >			  ## btstack_main.c:935:5
 1e07fea:    e5 e0 6d 1f       	if (r5 != 14) goto -294 <ble_user_cmd_prepare+0x46 : 1e07ec8 >			  ## btstack_main.c:935:5
 1e07fee:    30 02             	r0 = [sp+12]			  ## btstack_main.c:939:24
 1e07ff0:    01 f9 b4 40       	r1 = b[r4 + 180] (u)			  ## btstack_main.c:784:43
 1e07ff4:    69 23             	if (r1 == 0) goto -302 <ble_user_cmd_prepare+0x46 : 1e07ec8 >			  ## btstack_main.c:784:43
 1e07ff6:    20 fd 0f 09       	r0 = r0 & 15			  ## btstack_main.c:788:41
 1e07ffa:    00 fd a0 09       	r0 = r0 | 160			  ## btstack_main.c:788:41
 1e07ffe:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:788:39
 1e08002:    29 17             	call -430 <stack_run_loop_resume : 1e07e56 >			  ## btstack_main.c:789:9
 1e08004:    03 18             	goto 6 <.GJTIE81_1_1_+0xEC : 1e0800c >			  ## btstack_main.c:789:9
 1e08006:    10 70             	r0 = 1			  ## btstack_main.c:791:13
 1e08008:    97 f3 d6 f6       	call 3141036 <os_time_dly : 106db8 >			  ## btstack_main.c:791:13
 1e0800c:    00 f9 b4 40       	r0 = b[r4 + 180] (u)
 1e08010:    fa 31             	if (r0 != 0) goto -12 <.GJTIE81_1_1_+0xE6 : 1e08006 >
 1e08012:    40 08             	r0 = r4			  ## btstack_main.c:794:9
 1e08014:    31 17             	call -414 <stack_run_loop_remove : 1e07e78 >			  ## btstack_main.c:794:9
 1e08016:    58 1f             	goto -336 <ble_user_cmd_prepare+0x46 : 1e07ec8 >			  ## btstack_main.c:794:9
 1e08018:    02 60             	r2 = b[r0 + 0] (u)			  ## att_send.c:657:38
 1e0801a:    e3 fd 10 12       	r1 = r2 & ~r1			  ## att_send.c:657:38
 1e0801e:    09 60             	b[r0 + 0] = r1
 1e08020:    97 f3 bc f6       	call 3140984 <local_irq_disable : 106d9c >			  ## att_send.c:660:5
 1e08024:    df 1f             	goto -66 <.GJTIE81_1_1_+0xC4 : 1e07fe4 >			  ## att_send.c:660:5


att_set_ccc_config:
 1e08026:    74 01             	[--sp] = {rets, r4}			  ## att_send.c:137:0
 1e08028:    c1 ff c8 1b 00 00 	r1 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:142:5
 1e0802e:    01 42             	r1 = [r1 + 0]			  ## att_send.c:142:5
 1e08030:    12 22             	if (r1 == 0) goto 36 <att_set_ccc_config+0x30 : 1e08056 >
 1e08032:    a1 82             	r1 += 42			  ## att_send.c:145:10
 1e08034:    03 70             	r3 = 0
 1e08036:    12 08             	r2 = r1
 1e08038:    04 54             	r4 = h[r2 + 0] (u)			  ## att_send.c:147:32
 1e0803a:    a4 e0 0d 00       	if (r4 == 10) goto 26 <att_set_ccc_config+0x32 : 1e08058 >			  ## att_send.c:147:32
 1e0803e:    13 80             	r3 += 1			  ## att_send.c:146:48
 1e08040:    42 80             	r2 += 4			  ## att_send.c:157:11
 1e08042:    03 e2 f9 bf       	ifs (r3 < 32) goto -14 <att_set_ccc_config+0x12 : 1e08038 >
 1e08046:    07 20             	if (r0 == 0) goto 14 <att_set_ccc_config+0x30 : 1e08056 >
 1e08048:    02 70             	r2 = 0
 1e0804a:    03 52             	r3 = h[r1 + 0] (u)			  ## att_send.c:165:36
 1e0804c:    0a 26             	if (r3 == 0) goto 20 <att_set_ccc_config+0x3C : 1e08062 >
 1e0804e:    12 80             	r2 += 1			  ## att_send.c:164:52
 1e08050:    41 80             	r1 += 4			  ## att_send.c:170:15
 1e08052:    02 e2 fa bf       	ifs (r2 < 32) goto -12 <att_set_ccc_config+0x24 : 1e0804a >
 1e08056:    54 01             	{pc, r4} = [sp++]			  ## att_send.c:173:1
 1e08058:    02 30             	if (r0 != 0) goto 4 <att_set_ccc_config+0x38 : 1e0805e >
 1e0805a:    00 70             	r0 = 0
 1e0805c:    08 54             	h[r2 + 0] = r0			  ## att_send.c:151:28
 1e0805e:    18 54             	h[r2 + 2] = r0
 1e08060:    54 01             	{pc, r4} = [sp++]			  ## att_send.c:173:1
 1e08062:    a2 70             	r2 = 10			  ## att_send.c:166:28
 1e08064:    0a 52             	h[r1 + 0] = r2			  ## att_send.c:166:28
 1e08066:    18 52             	h[r1 + 2] = r0			  ## att_send.c:167:25
 1e08068:    54 01             	{pc, r4} = [sp++]			  ## att_send.c:173:1


att_get_ccc_config:
 1e0806a:    c0 ff c8 1b 00 00 	r0 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:177:0
 1e08070:    00 40             	r0 = [r0 + 0]			  ## att_send.c:180:9
 1e08072:    0a 20             	if (r0 == 0) goto 20 <att_get_ccc_config+0x1E : 1e08088 >			  ## att_send.c:180:9
 1e08074:    c0 82             	r0 += 44			  ## att_send.c:185:5
 1e08076:    01 70             	r1 = 0			  ## att_send.c:185:5
 1e08078:    02 f7 fe 0f       	r2 = h[r0 + -2] (u)			  ## att_send.c:186:27
 1e0807c:    a2 e0 06 00       	if (r2 == 10) goto 12 <att_get_ccc_config+0x22 : 1e0808c >			  ## att_send.c:186:27
 1e08080:    11 80             	r1 += 1			  ## att_send.c:185:48
 1e08082:    40 80             	r0 += 4			  ## att_send.c:185:23
 1e08084:    01 e2 f8 bf       	ifs (r1 < 32) goto -16 <att_get_ccc_config+0xE : 1e08078 >			  ## att_send.c:185:23
 1e08088:    00 70             	r0 = 0
 1e0808a:    20 00             	rts			  ## att_send.c:192:1
 1e0808c:    00 50             	r0 = h[r0 + 0] (u)			  ## att_send.c:187:24
 1e0808e:    20 00             	rts			  ## att_send.c:192:1


little_endian_read_16:
 1e08090:    10 09             	r0 += r1			  ## utils.c:69:0
 1e08092:    11 60             	r1 = b[r0 + 1] (u)			  ## utils.c:70:40
 1e08094:    00 60             	r0 = b[r0 + 0] (u)			  ## utils.c:70:12
 1e08096:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## utils.c:70:37
 1e0809a:    20 04             	r0 = r0.l (u)			  ## utils.c:70:5
 1e0809c:    20 00             	rts			  ## utils.c:70:5


btstack_linked_list_iterator_has_next:
 1e0809e:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:167:0
 1e080a0:    06 22             	if (r1 == 0) goto 12 <btstack_linked_list_iterator_has_next+0x10 : 1e080ae >			  ## btstack_linked_list.c:169:14
 1e080a2:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:172:13
 1e080a4:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:172:19
 1e080a6:    20 40             	r0 = [r0 + 8]			  ## btstack_linked_list.c:172:31
 1e080a8:    01 f2 03 10       	if (r1 != r0) goto 6 <btstack_linked_list_iterator_has_next+0x14 : 1e080b2 >
 1e080ac:    01 18             	goto 2 <btstack_linked_list_iterator_has_next+0x12 : 1e080b0 >
 1e080ae:    81 90             	r1 = r0 + 8			  ## btstack_linked_list.c:170:20
 1e080b0:    01 42             	r1 = [r1 + 0]
 1e080b2:    10 70             	r0 = 1
 1e080b4:    01 32             	if (r1 != 0) goto 2 <btstack_linked_list_iterator_has_next+0x1A : 1e080b8 >
 1e080b6:    00 70             	r0 = 0
 1e080b8:    20 00             	rts			  ## btstack_linked_list.c:178:1


btstack_linked_list_iterator_next:
 1e080ba:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:181:0
 1e080bc:    09 22             	if (r1 == 0) goto 18 <btstack_linked_list_iterator_next+0x16 : 1e080d0 >			  ## btstack_linked_list.c:182:9
 1e080be:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:183:17
 1e080c0:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:183:23
 1e080c2:    22 40             	r2 = [r0 + 8]			  ## btstack_linked_list.c:183:35
 1e080c4:    21 f2 02 10       	if (r1 != r2) goto 4 <btstack_linked_list_iterator_next+0x12 : 1e080cc >			  ## btstack_linked_list.c:183:35
 1e080c8:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:184:22
 1e080ca:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:185:34
 1e080cc:    29 40             	[r0 + 8] = r1
 1e080ce:    03 18             	goto 6 <btstack_linked_list_iterator_next+0x1C : 1e080d6 >
 1e080d0:    c0 f4 01 09       	[r0 + 0] = 1			  ## btstack_linked_list.c:191:29
 1e080d4:    21 40             	r1 = [r0 + 8]			  ## btstack_linked_list.c:191:29
 1e080d6:    10 08             	r0 = r1			  ## btstack_linked_list.c:193:5
 1e080d8:    20 00             	rts			  ## btstack_linked_list.c:193:5


le_hci_connection_for_handle:
 1e080da:    34 00             	[--sp] = rets			  ## hci_vendor.c:1943:0
 1e080dc:    fa 0b             	sp += -12			  ## hci_vendor.c:1943:0
 1e080de:    03 08             	r3 = r0			  ## hci_vendor.c:1943:0
 1e080e0:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:162:14
 1e080e6:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e080e8:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e080ea:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e080ec:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e080ee:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e080f0:    00 a0             	r0 = sp + 0
 1e080f2:    d5 17             	call -86 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## hci_vendor.c:1947:16
 1e080f4:    06 20             	if (r0 == 0) goto 12 <le_hci_connection_for_handle+0x28 : 1e08102 >
 1e080f6:    00 a0             	r0 = sp + 0
 1e080f8:    e0 17             	call -64 <btstack_linked_list_iterator_next : 1e080ba >			  ## hci_vendor.c:1948:65
 1e080fa:    51 50             	r1 = h[r0 + 10] (u)			  ## hci_vendor.c:1949:23
 1e080fc:    31 f2 f8 1f       	if (r1 != r3) goto -16 <le_hci_connection_for_handle+0x16 : 1e080f0 >			  ## hci_vendor.c:1949:23
 1e08100:    01 18             	goto 2 <le_hci_connection_for_handle+0x2A : 1e08104 >			  ## hci_vendor.c:1949:23
 1e08102:    00 70             	r0 = 0
 1e08104:    06 0a             	sp += 12
 1e08106:    30 00             	pc = [sp++]			  ## hci_vendor.c:1956:1


check_le_conn_disconnet_flag:
 1e08108:    34 00             	[--sp] = rets			  ## att_send.c:446:0
 1e0810a:    c0 ff c8 1b 00 00 	r0 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:447:10
 1e08110:    01 40             	r1 = [r0 + 0]			  ## att_send.c:447:10
 1e08112:    10 70             	r0 = 1			  ## att_send.c:447:10
 1e08114:    10 22             	if (r1 == 0) goto 32 <check_le_conn_disconnet_flag+0x2E : 1e08136 >			  ## att_send.c:447:10
 1e08116:    12 fc b0 00       	r2 = r1 + 176			  ## att_send.c:120:13
 1e0811a:    03 70             	r3 = 0			  ## att_send.c:120:13
 1e0811c:    81 f7 02 20       	r1 = h[r2 ++= 2] (u)			  ## att_send.c:120:13
 1e08120:    04 32             	if (r1 != 0) goto 8 <check_le_conn_disconnet_flag+0x22 : 1e0812a >			  ## att_send.c:120:13
 1e08122:    13 80             	r3 += 1			  ## att_send.c:119:35
 1e08124:    93 e0 fa df       	ifs (r3 <= 9) goto -12 <check_le_conn_disconnet_flag+0x14 : 1e0811c >
 1e08128:    30 00             	pc = [sp++]			  ## att_send.c:462:1
 1e0812a:    10 08             	r0 = r1			  ## hci_vendor.c:1212:39
 1e0812c:    d6 17             	call -84 <le_hci_connection_for_handle : 1e080da >			  ## hci_vendor.c:1212:39
 1e0812e:    01 08             	r1 = r0			  ## hci_vendor.c:1212:39
 1e08130:    10 70             	r0 = 1			  ## att_send.c:457:11
 1e08132:    01 22             	if (r1 == 0) goto 2 <check_le_conn_disconnet_flag+0x2E : 1e08136 >			  ## att_send.c:457:11
 1e08134:    00 70             	r0 = 0
 1e08136:    30 00             	pc = [sp++]			  ## att_send.c:462:1


__set_user_ctrl_conn_num:
 1e08138:    74 01             	[--sp] = {rets, r4}			  ## user_interface.c:240:0
 1e0813a:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:241:44
 1e08140:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:241:44
 1e08142:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:241:44
 1e08144:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:241:44
 1e08146:    14 61             	r4 = b[r0 + 17] (u)			  ## user_interface.c:241:44
 1e08148:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:241:44
 1e0814c:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## user_interface.c:241:44
 1e08150:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## user_interface.c:241:44
 1e08154:    31 fd 30 49       	r1 = r4 & 4294967247			  ## user_interface.c:241:44
 1e08158:    0a d6             	r2 = r1 >> 24			  ## user_interface.c:241:44
 1e0815a:    4a 61             	b[r0 + 20] = r2			  ## user_interface.c:241:44
 1e0815c:    0a d4             	r2 = r1 >> 16			  ## user_interface.c:241:44
 1e0815e:    3a 61             	b[r0 + 19] = r2			  ## user_interface.c:241:44
 1e08160:    0a d2             	r2 = r1 >> 8			  ## user_interface.c:241:44
 1e08162:    2a 61             	b[r0 + 18] = r2			  ## user_interface.c:241:44
 1e08164:    11 b2             	r1 |= 16			  ## user_interface.c:241:44
 1e08166:    19 61             	b[r0 + 17] = r1			  ## user_interface.c:241:44
 1e08168:    54 01             	{pc, r4} = [sp++]			  ## user_interface.c:242:1


__set_support_msbc_flag:
 1e0816a:    74 01             	[--sp] = {rets, r4}			  ## user_interface.c:121:0
 1e0816c:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:122:38
 1e08172:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:122:38
 1e08174:    12 61             	r2 = b[r0 + 17] (u)			  ## user_interface.c:122:38
 1e08176:    33 61             	r3 = b[r0 + 19] (u)			  ## user_interface.c:122:38
 1e08178:    24 61             	r4 = b[r0 + 18] (u)			  ## user_interface.c:122:38
 1e0817a:    49 61             	b[r0 + 20] = r1			  ## user_interface.c:122:38
 1e0817c:    1a 61             	b[r0 + 17] = r2			  ## user_interface.c:122:38
 1e0817e:    c8 fd 40 31       	r3 <= insert(r1, p:8, l:8)			  ## user_interface.c:122:38
 1e08182:    c8 fd 40 24       	r2 <= insert(r4, p:8, l:8)			  ## user_interface.c:122:38
 1e08186:    d0 fd 80 23       	r2 <= insert(r3, p:16, l:16)			  ## user_interface.c:122:38
 1e0818a:    11 d4             	r1 = r2 >> 16			  ## user_interface.c:122:38
 1e0818c:    39 61             	b[r0 + 19] = r1			  ## user_interface.c:122:38
 1e0818e:    01 fd 04 2a       	r1 = r2 | 1024			  ## user_interface.c:122:38
 1e08192:    09 d2             	r1 = r1 >> 8			  ## user_interface.c:122:38
 1e08194:    29 61             	b[r0 + 18] = r1			  ## user_interface.c:122:38
 1e08196:    54 01             	{pc, r4} = [sp++]			  ## user_interface.c:123:1


__bt_set_update_battery_time:
 1e08198:    74 01             	[--sp] = {rets, r4}			  ## user_interface.c:245:0
 1e0819a:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:245:0
 1e081a0:    01 70             	r1 = 0			  ## user_interface.c:246:48
 1e081a2:    e9 60             	b[r0 + 14] = r1			  ## user_interface.c:246:48
 1e081a4:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:246:48
 1e081a6:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:246:48
 1e081a8:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:246:48
 1e081aa:    14 61             	r4 = b[r0 + 17] (u)			  ## user_interface.c:246:48
 1e081ac:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:246:48
 1e081b0:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## user_interface.c:246:48
 1e081b4:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## user_interface.c:246:48
 1e081b8:    31 fd 10 4a       	r1 = r4 & 4294963199			  ## user_interface.c:246:48
 1e081bc:    19 61             	b[r0 + 17] = r1			  ## user_interface.c:246:48
 1e081be:    0a d6             	r2 = r1 >> 24			  ## user_interface.c:246:48
 1e081c0:    4a 61             	b[r0 + 20] = r2			  ## user_interface.c:246:48
 1e081c2:    0a d4             	r2 = r1 >> 16			  ## user_interface.c:246:48
 1e081c4:    3a 61             	b[r0 + 19] = r2			  ## user_interface.c:246:48
 1e081c6:    09 d2             	r1 = r1 >> 8			  ## user_interface.c:246:48
 1e081c8:    29 61             	b[r0 + 18] = r1			  ## user_interface.c:246:48
 1e081ca:    54 01             	{pc, r4} = [sp++]			  ## user_interface.c:252:1


__set_page_timeout_value:
 1e081cc:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:151:0
 1e081d2:    01 fb 40 1f       	r1 = 8000 <att_ram_buffer+0x1FC : 1f40 >			  ## user_interface.c:152:38
 1e081d6:    29 50             	h[r0 + 4] = r1			  ## user_interface.c:152:38
 1e081d8:    20 00             	rts			  ## user_interface.c:153:1


__set_super_timeout_value:
 1e081da:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:146:0
 1e081e0:    01 fb 40 1f       	r1 = 8000 <att_ram_buffer+0x1FC : 1f40 >			  ## user_interface.c:147:39
 1e081e4:    39 50             	h[r0 + 6] = r1			  ## user_interface.c:147:39
 1e081e6:    20 00             	rts			  ## user_interface.c:148:1


__set_simple_pair_param:
 1e081e8:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:267:0
 1e081ee:    31 72             	r1 = 35			  ## user_interface.c:270:53
 1e081f0:    49 61             	b[r0 + 20] = r1			  ## user_interface.c:270:53
 1e081f2:    20 00             	rts			  ## user_interface.c:271:1


cal_crc16_private:
 1e081f4:    76 01             	[--sp] = {rets, r6-r4}			  ## btstack_main.c:492:0
 1e081f6:    19 22             	if (r1 == 0) goto 50 <cal_crc16_private+0x36 : 1e0822a >			  ## btstack_main.c:492:0
 1e081f8:    c3 ff ac 7b e0 01 	r3 = 31488940 <crc_ta : 1e07bac >			  ## btstack_main.c:492:0
 1e081fe:    84 f9 01 00       	r4 = b[r0 ++= 1] (u)			  ## btstack_main.c:499:40
 1e08202:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:497:14
 1e08206:    26 d1             	r6 = r4 >> 4			  ## btstack_main.c:499:45
 1e08208:    d5 bc             	r5 ^= r6			  ## btstack_main.c:499:37
 1e0820a:    45 f8 00 35       	r5 = h[r3+r5<<1] (u)			  ## btstack_main.c:499:27
 1e0820e:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:498:24
 1e08210:    d2 ba             	r2 ^= r5			  ## btstack_main.c:499:24
 1e08212:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:500:14
 1e08216:    24 fd 0f 49       	r4 = r4 & 15			  ## btstack_main.c:502:45
 1e0821a:    d4 ba             	r4 ^= r5			  ## btstack_main.c:502:37
 1e0821c:    44 f8 00 34       	r4 = h[r3+r4<<1] (u)			  ## btstack_main.c:502:27
 1e08220:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:501:24
 1e08222:    f1 8f             	r1 += -1			  ## btstack_main.c:504:12
 1e08224:    65 04             	r5 = r1.l (u)			  ## btstack_main.c:496:5
 1e08226:    d2 b8             	r2 ^= r4			  ## btstack_main.c:502:24
 1e08228:    ea 3b             	if (r5 != 0) goto -44 <cal_crc16_private+0xA : 1e081fe >
 1e0822a:    a0 04             	r0 = r2.l (u)			  ## btstack_main.c:506:5
 1e0822c:    56 01             	{pc, r6-r4} = [sp++]			  ## btstack_main.c:506:5


lib_make_ble_address:
 1e0822e:    75 01             	[--sp] = {rets, r5, r4}			  ## btstack_main.c:510:0
 1e08230:    fe 0b             	sp += -4			  ## btstack_main.c:510:0
 1e08232:    04 08             	r4 = r0			  ## btstack_main.c:510:0
 1e08234:    30 98             	r0 = r4 + 3			  ## btstack_main.c:512:13
 1e08236:    c5 ff c0 08 00 00 	r5 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## btstack_main.c:515:15
 1e0823c:    51 fc 70 00       	r1 = r5 + 112			  ## btstack_main.c:515:15
 1e08240:    32 70             	r2 = 3			  ## btstack_main.c:512:5
 1e08242:    97 f3 4f f6       	call 3140766 <memcpy : 106ee4 >			  ## btstack_main.c:512:5
 1e08246:    50 fc 6d 00       	r0 = r5 + 109			  ## btstack_main.c:512:5
 1e0824a:    61 70             	r1 = 6			  ## btstack_main.c:513:15
 1e0824c:    02 70             	r2 = 0			  ## btstack_main.c:513:15
 1e0824e:    d2 17             	call -92 <cal_crc16_private : 1e081f4 >			  ## btstack_main.c:513:15
 1e08250:    02 08             	r2 = r0			  ## btstack_main.c:513:15
 1e08252:    0a 02             	[sp] = r2			  ## btstack_main.c:513:13
 1e08254:    10 d2             	r0 = r2 >> 8			  ## btstack_main.c:514:5
 1e08256:    18 68             	b[r4 + 1] = r0			  ## btstack_main.c:514:5
 1e08258:    0a 68             	b[r4 + 0] = r2			  ## btstack_main.c:514:5
 1e0825a:    05 f9 6f 50       	r5 = b[r5 + 111] (u)			  ## btstack_main.c:515:15
 1e0825e:    00 a0             	r0 = sp + 0			  ## btstack_main.c:515:15
 1e08260:    21 70             	r1 = 2			  ## btstack_main.c:515:32
 1e08262:    c8 17             	call -112 <cal_crc16_private : 1e081f4 >			  ## btstack_main.c:515:32
 1e08264:    50 09             	r0 += r5			  ## btstack_main.c:515:30
 1e08266:    28 68             	b[r4 + 2] = r0			  ## btstack_main.c:516:20
 1e08268:    02 0a             	sp += 4			  ## btstack_main.c:516:20
 1e0826a:    55 01             	{pc, r5, r4} = [sp++]			  ## btstack_main.c:517:1


__change_hci_class_type:
 1e0826c:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:141:0
 1e08272:    c0 f4 00 09       	[r0 + 0] = 0			  ## user_interface.c:142:39
 1e08276:    20 00             	rts			  ## user_interface.c:143:1


btstack_init:
 1e08278:    75 01             	[--sp] = {rets, r5, r4}			  ## btstack_task.c:199:0
 1e0827a:    fe 0b             	sp += -4			  ## btstack_task.c:199:0
 1e0827c:    c0 ff 28 26 e1 01 	r0 = 31532584 <update_target_end+0x23F8 : 1e12628 >			  ## btstack_task.c:200:5
 1e08282:    21 70             	r1 = 2			  ## btstack_task.c:200:5
 1e08284:    12 70             	r2 = 1			  ## btstack_task.c:200:5
 1e08286:    14 70             	r4 = 1			  ## btstack_task.c:200:5
 1e08288:    80 f3 8d 25       	call 19226 <printf : 1e0cda6 >			  ## btstack_task.c:200:5
 1e0828c:    05 70             	r5 = 0			  ## btstack_task.c:200:5
 1e0828e:    c0 ff 3a 26 e1 01 	r0 = 31532602 <update_target_end+0x240A : 1e1263a >			  ## btstack_task.c:201:5
 1e08294:    11 70             	r1 = 1			  ## btstack_task.c:201:5
 1e08296:    12 70             	r2 = 1			  ## btstack_task.c:201:5
 1e08298:    13 70             	r3 = 1			  ## btstack_task.c:201:5
 1e0829a:    0d 02             	[sp] = r5			  ## btstack_task.c:201:5
 1e0829c:    80 f3 83 25       	call 19206 <printf : 1e0cda6 >			  ## btstack_task.c:201:5
 1e082a0:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:201:5
 1e082a6:    0c 60             	b[r0 + 0] = r4			  ## btstack_task.c:201:5
 1e082a8:    80 f3 42 6b       	call 54916 <btctrler_task_init : 1e15930 >			  ## btstack_task.c:210:5
 1e082ac:    03 18             	goto 6 <btstack_init+0x3C : 1e082b4 >			  ## btstack_task.c:210:5
 1e082ae:    20 70             	r0 = 2			  ## btstack_task.c:220:9
 1e082b0:    97 f3 82 f5       	call 3140356 <os_time_dly : 106db8 >			  ## btstack_task.c:220:9
 1e082b4:    80 f3 4c 6b       	call 54936 <btctrler_task_ready : 1e15950 >
 1e082b8:    fa 21             	if (r0 == 0) goto -12 <btstack_init+0x36 : 1e082ae >
 1e082ba:    c0 ff 6c 9e e0 01 	r0 = 31497836 <btstack_task : 1e09e6c >			  ## btstack_task.c:222:12
 1e082c0:    c2 ff 06 26 e1 01 	r2 = 31532550 <update_target_end+0x23D6 : 1e12606 >			  ## btstack_task.c:222:12
 1e082c6:    01 70             	r1 = 0			  ## btstack_task.c:222:12
 1e082c8:    80 f3 3f 34       	call 26750 <task_create : 1e0eb4a >			  ## btstack_task.c:222:12
 1e082cc:    02 0a             	sp += 4			  ## btstack_task.c:222:12
 1e082ce:    55 01             	{pc, r5, r4} = [sp++]			  ## btstack_task.c:222:12


set_remote_test_flag:
 1e082d0:    75 01             	[--sp] = {rets, r5, r4}			  ## user_interface.c:216:0
 1e082d2:    c1 ff 90 09 00 00 	r1 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:216:0
 1e082d8:    43 63             	r3 = b[r1 + 20] (u)			  ## user_interface.c:216:0
 1e082da:    34 63             	r4 = b[r1 + 19] (u)			  ## user_interface.c:216:0
 1e082dc:    25 63             	r5 = b[r1 + 18] (u)			  ## user_interface.c:216:0
 1e082de:    12 63             	r2 = b[r1 + 17] (u)			  ## user_interface.c:216:0
 1e082e0:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## user_interface.c:216:0
 1e082e4:    c8 fd 40 25       	r2 <= insert(r5, p:8, l:8)			  ## user_interface.c:216:0
 1e082e8:    d0 fd 80 24       	r2 <= insert(r4, p:16, l:16)			  ## user_interface.c:216:0
 1e082ec:    07 20             	if (r0 == 0) goto 14 <set_remote_test_flag+0x2C : 1e082fc >			  ## user_interface.c:216:0
 1e082ee:    23 fd 01 09       	r3 = r0 & 1			  ## user_interface.c:221:50
 1e082f2:    30 fd 02 2b       	r0 = r2 & 4294836223			  ## user_interface.c:221:50
 1e082f6:    c1 fd 88 03       	r0 <= insert(r3, p:17, l:1)			  ## user_interface.c:221:50
 1e082fa:    02 18             	goto 4 <set_remote_test_flag+0x30 : 1e08300 >			  ## user_interface.c:221:50
 1e082fc:    30 fd 02 2b       	r0 = r2 & 4294836223			  ## user_interface.c:219:50
 1e08300:    18 63             	b[r1 + 17] = r0
 1e08302:    02 d6             	r2 = r0 >> 24
 1e08304:    4a 63             	b[r1 + 20] = r2
 1e08306:    02 d4             	r2 = r0 >> 16
 1e08308:    3a 63             	b[r1 + 19] = r2
 1e0830a:    00 d2             	r0 = r0 >> 8
 1e0830c:    28 63             	b[r1 + 18] = r0
 1e0830e:    55 01             	{pc, r5, r4} = [sp++]			  ## user_interface.c:223:1


get_remote_test_flag:
 1e08310:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:208:0
 1e08316:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:209:29
 1e08318:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:209:29
 1e0831a:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:209:29
 1e0831c:    10 61             	r0 = b[r0 + 17] (u)			  ## user_interface.c:209:29
 1e0831e:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:209:29
 1e08322:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## user_interface.c:209:29
 1e08326:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## user_interface.c:209:29
 1e0832a:    81 fd 88 00       	r0 = uextra(r0, p:17, l:1)			  ## user_interface.c:214:1
 1e0832e:    20 00             	rts			  ## user_interface.c:214:1


btstack_lowpower_idle_query:
 1e08330:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:274:0
 1e08336:    00 60             	r0 = b[r0 + 0] (u)			  ## btstack_task.c:274:0
 1e08338:    11 70             	r1 = 1			  ## btstack_task.c:274:0
 1e0833a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## btstack_task.c:275:5
 1e0833e:    20 00             	rts			  ## btstack_task.c:275:5


btstack_linked_list_add_tail:
 1e08340:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:97:0
 1e08342:    04 24             	if (r2 == 0) goto 8 <btstack_linked_list_add_tail+0xC : 1e0834c >			  ## btstack_linked_list.c:100:5
 1e08344:    20 08             	r0 = r2
 1e08346:    12 f2 fb 1f       	if (r2 != r1) goto -10 <btstack_linked_list_add_tail : 1e08340 >
 1e0834a:    20 00             	rts			  ## btstack_linked_list.c:107:1
 1e0834c:    c0 f4 00 19       	[r1 + 0] = 0			  ## btstack_linked_list.c:105:16
 1e08350:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:106:14
 1e08352:    20 00             	rts			  ## btstack_linked_list.c:107:1


hci_add_event_handler:
 1e08354:    01 08             	r1 = r0			  ## hci_vendor.c:1895:0
 1e08356:    c0 ff 64 18 00 00 	r0 = 6244 <report_irq_stack_end+0x4 : 1864 >			  ## hci_vendor.c:1896:5
 1e0835c:    f1 1f             	goto -30 <btstack_linked_list_add_tail : 1e08340 >			  ## hci_vendor.c:1896:5


l2cap_register_fixed_channel:
 1e0835e:    c0 ff a8 1a 00 00 	r0 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:2117:0
 1e08364:    c1 ff e2 b3 e0 01 	r1 = 31503330 <att_packet_handler : 1e0b3e2 >			  ## l2cap.c:2122:42
 1e0836a:    09 40             	[r0 + 0] = r1			  ## l2cap.c:2122:42
 1e0836c:    20 00             	rts			  ## l2cap.c:2123:1


hci_event_callback_set:
 1e0836e:    c1 ff 8c 1a 00 00 	r1 = 6796 <hci_event_callback_registration : 1a8c >			  ## hci_vendor.c:1865:0
 1e08374:    c0 ff d4 0f e0 01 	r0 = 31461332 <cbk_packet_handler : 1e00fd4 >			  ## hci_vendor.c:1866:46
 1e0837a:    18 42             	[r1 + 4] = r0			  ## hci_vendor.c:1866:46
 1e0837c:    c0 ff 64 18 00 00 	r0 = 6244 <report_irq_stack_end+0x4 : 1864 >			  ## hci_vendor.c:1866:46
 1e08382:    de 1f             	goto -68 <btstack_linked_list_add_tail : 1e08340 >			  ## hci_vendor.c:1896:5


le_l2cap_register_packet_handler:
 1e08384:    c0 ff 9c 1a 00 00 	r0 = 6812 <le_l2cap_event_packet_handler : 1a9c >			  ## l2cap.c:177:0
 1e0838a:    c1 ff d4 0f e0 01 	r1 = 31461332 <cbk_packet_handler : 1e00fd4 >			  ## l2cap.c:177:0
 1e08390:    09 40             	[r0 + 0] = r1			  ## l2cap.c:177:0
 1e08392:    20 00             	rts			  ## l2cap.c:185:1


ble_vendor_set_default_att_mtu:
 1e08394:    c0 ff 88 09 00 00 	r0 = 2440 <le_att_mtu_size : 988 >			  ## l2cap.c:185:1
 1e0839a:    11 70             	r1 = 1			  ## l2cap.c:185:1
 1e0839c:    09 60             	b[r0 + 0] = r1			  ## l2cap.c:185:1
 1e0839e:    20 00             	rts			  ## l2cap.c:185:1


btstack_task_init:
 1e083a0:    77 01             	[--sp] = {rets, r7-r4}			  ## btstack_task.c:72:0
 1e083a2:    c4 ff 60 18 00 00 	r4 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1541:75
 1e083a8:    01 70             	r1 = 0			  ## hci_vendor.c:1526:5
 1e083aa:    02 fb 2c 02       	r2 = 556 <BTCTLER_CONTROLLER_BSS_SIZE+0x6C : 22c >			  ## hci_vendor.c:1526:5
 1e083ae:    05 70             	r5 = 0			  ## hci_vendor.c:1526:5
 1e083b0:    40 08             	r0 = r4			  ## hci_vendor.c:1526:5
 1e083b2:    97 f3 9d f5       	call 3140410 <memset : 106ef0 >			  ## hci_vendor.c:1526:5
 1e083b6:    80 f3 55 8f       	call 73386 <ll_hci_set_event_mask : 1e1a264 >			  ## hci_vendor.c:1530:5
 1e083ba:    c0 ff 10 0e 00 00 	r0 = 3600 <hci_param : e10 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e083c0:    01 fb ff 3f       	r1 = 16383 <low_power_system_down+0x107 : 3fff >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e083c4:    39 50             	h[r0 + 6] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e083c6:    41 fb c0 1a       	r1 = r1 + 49152			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e083ca:    29 50             	h[r0 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e083cc:    19 50             	h[r0 + 2] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e083ce:    09 50             	h[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e083d0:    80 f3 54 8f       	call 73384 <ll_hci_get_acl_data_len : 1e1a27c >			  ## hci_vendor.c:1533:47
 1e083d4:    41 fc 1a 02       	r1 = r4 + 538			  ## hci_vendor.c:1533:47
 1e083d8:    18 52             	h[r1 + 2] = r0			  ## hci_vendor.c:1533:45
 1e083da:    80 f3 55 8f       	call 73386 <ll_hci_get_acl_total_num : 1e1a288 >			  ## hci_vendor.c:1534:47
 1e083de:    08 62             	b[r1 + 0] = r0			  ## hci_vendor.c:1534:45
 1e083e0:    60 70             	r0 = 6			  ## hci_vendor.c:1534:45
 1e083e2:    28 52             	h[r1 + 4] = r0			  ## hci_vendor.c:1536:69
 1e083e4:    00 fb 80 0c       	r0 = 3200 <BTCTLER_RAM_TOTAL+0x94 : c80 >			  ## hci_vendor.c:1537:69
 1e083e8:    38 52             	h[r1 + 6] = r0			  ## hci_vendor.c:1537:69
 1e083ea:    4d 52             	h[r1 + 8] = r5			  ## hci_vendor.c:1538:68
 1e083ec:    02 fb f4 01       	r2 = 500 <BTCTLER_CONTROLLER_BSS_SIZE+0x34 : 1f4 >			  ## hci_vendor.c:1539:68
 1e083f0:    5a 52             	h[r1 + 10] = r2			  ## hci_vendor.c:1539:68
 1e083f2:    a2 70             	r2 = 10			  ## hci_vendor.c:1540:75
 1e083f4:    6a 52             	h[r1 + 12] = r2			  ## hci_vendor.c:1540:75
 1e083f6:    78 52             	h[r1 + 14] = r0			  ## hci_vendor.c:1541:75
 1e083f8:    c4 ff 04 1c 00 00 	r4 = 7172 <btstack_stack : 1c04 >			  ## hci_vendor.c:1541:75
 1e083fe:    c0 ff cc 1b 00 00 	r0 = 7116 <profile_l2cap_hdl : 1bcc >			  ## btstack_main.c:155:34
 1e08404:    28 48             	[r4 + 8] = r0			  ## btstack_main.c:155:34
 1e08406:    c0 ff 18 1c 00 00 	r0 = 7192 <profile_le_pool_hdl : 1c18 >			  ## btstack_main.c:175:9
 1e0840c:    18 48             	[r4 + 4] = r0			  ## btstack_main.c:172:38
 1e0840e:    3d 40             	[r0 + 12] = r5			  ## btstack_main.c:175:9
 1e08410:    2d 40             	[r0 + 8] = r5			  ## btstack_main.c:175:9
 1e08412:    1d 40             	[r0 + 4] = r5			  ## btstack_main.c:175:9
 1e08414:    0d 40             	[r0 + 0] = r5			  ## btstack_main.c:175:9
 1e08416:    c6 ff 94 1a 00 00 	r6 = 6804 <le_stack_pool : 1a94 >			  ## btstack_main.c:175:9
 1e0841c:    08 4c             	[r6 + 0] = r0			  ## btstack_memory.c:399:19
 1e0841e:    00 fb c8 04       	r0 = 1224 <BTCTLER_CONTROLLER_DATA_SIZE+0xC : 4c8 >			  ## btstack_memory.c:404:45
 1e08422:    80 f3 f6 29       	call 21484 <malloc : 1e0d812 >			  ## btstack_memory.c:404:45
 1e08426:    03 08             	r3 = r0			  ## btstack_memory.c:404:45
 1e08428:    02 36             	if (r3 != 0) goto 4 <btstack_task_init+0x8E : 1e0842e >			  ## btstack_memory.c:404:45
 1e0842a:    8f f3 34 d8       	call 2076776 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0842e:    07 4c             	r7 = [r6 + 0]			  ## btstack_memory.c:406:9
 1e08430:    2b 4e             	[r7 + 8] = r3			  ## btstack_memory.c:406:53
 1e08432:    01 70             	r1 = 0			  ## btstack_memory.c:407:9
 1e08434:    02 fb c8 04       	r2 = 1224 <BTCTLER_CONTROLLER_DATA_SIZE+0xC : 4c8 >			  ## btstack_memory.c:407:9
 1e08438:    30 08             	r0 = r3			  ## btstack_memory.c:407:9
 1e0843a:    97 f3 59 f5       	call 3140274 <memset : 106ef0 >			  ## btstack_memory.c:407:9
 1e0843e:    20 4e             	r0 = [r7 + 8]			  ## btstack_memory.c:409:68
 1e08440:    0d 40             	[r0 + 0] = r5			  ## btstack_memory.c:45:25
 1e08442:    08 4e             	[r7 + 0] = r0			  ## btstack_memory.c:46:25
 1e08444:    00 78             	r0 = 128			  ## btstack_memory.c:415:43
 1e08446:    80 f3 e4 29       	call 21448 <malloc : 1e0d812 >			  ## btstack_memory.c:415:43
 1e0844a:    03 08             	r3 = r0			  ## btstack_memory.c:415:43
 1e0844c:    02 36             	if (r3 != 0) goto 4 <btstack_task_init+0xB2 : 1e08452 >			  ## btstack_memory.c:415:43
 1e0844e:    8f f3 22 d8       	call 2076740 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e08452:    06 4c             	r6 = [r6 + 0]			  ## btstack_memory.c:417:9
 1e08454:    3b 4c             	[r6 + 12] = r3			  ## btstack_memory.c:417:47
 1e08456:    01 70             	r1 = 0			  ## btstack_memory.c:418:9
 1e08458:    02 78             	r2 = 128			  ## btstack_memory.c:418:9
 1e0845a:    30 08             	r0 = r3			  ## btstack_memory.c:418:9
 1e0845c:    97 f3 48 f5       	call 3140240 <memset : 106ef0 >			  ## btstack_memory.c:418:9
 1e08460:    30 4c             	r0 = [r6 + 12]			  ## btstack_memory.c:420:62
 1e08462:    0d 40             	[r0 + 0] = r5			  ## btstack_memory.c:45:25
 1e08464:    18 4c             	[r6 + 4] = r0			  ## btstack_memory.c:46:25
 1e08466:    24 48             	r4 = [r4 + 8]			  ## btstack_main.c:181:26
 1e08468:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:181:26
 1e0846a:    01 70             	r1 = 0			  ## btstack_main.c:181:5
 1e0846c:    c2 72             	r2 = 44			  ## btstack_main.c:181:5
 1e0846e:    97 f3 3f f5       	call 3140222 <memset : 106ef0 >			  ## btstack_main.c:181:5
 1e08472:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:139:17
 1e08478:    0c 40             	[r0 + 0] = r4			  ## l2cap.c:139:17
 1e0847a:    f0 7f             	r0 = 255			  ## l2cap.c:141:52
 1e0847c:    10 f9 34 40       	b[r4 + 52] = r0			  ## l2cap.c:141:52
 1e08480:    00 74             	r0 = 64			  ## l2cap.c:142:52
 1e08482:    b8 59             	h[r4 + 54] = r0			  ## l2cap.c:142:52
 1e08484:    9d 48             	[r4 + 36] = r5			  ## l2cap.c:144:63
 1e08486:    2d 48             	[r4 + 8] = r5			  ## l2cap.c:146:33
 1e08488:    1d 48             	[r4 + 4] = r5			  ## l2cap.c:147:33
 1e0848a:    c0 ff 9e a8 e0 01 	r0 = 31500446 <packet_handler : 1e0a89e >			  ## l2cap.c:149:33
 1e08490:    08 48             	[r4 + 0] = r0			  ## l2cap.c:149:33
 1e08492:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:150:53
 1e08494:    c0 ff 9c 1a 00 00 	r0 = 6812 <le_l2cap_event_packet_handler : 1a9c >			  ## l2cap.c:152:35
 1e0849a:    0d 40             	[r0 + 0] = r5			  ## l2cap.c:152:35
 1e0849c:    c0 ff a0 1a 00 00 	r0 = 6816 <hci_event_callback_registration.1472 : 1aa0 >			  ## l2cap.c:152:35
 1e084a2:    c1 ff e8 a6 e0 01 	r1 = 31500008 <l2cap_hci_event_handler : 1e0a6e8 >			  ## l2cap.c:161:50
 1e084a8:    19 40             	[r0 + 4] = r1			  ## l2cap.c:161:50
 1e084aa:    54 17             	call -344 <hci_add_event_handler : 1e08354 >			  ## l2cap.c:162:9
 1e084ac:    c4 ff 28 1c 00 00 	r4 = 7208 <btstack_global_info : 1c28 >			  ## btstack_main.c:1022:39
 1e084b2:    01 70             	r1 = 0			  ## btstack_main.c:1019:9
 1e084b4:    82 7b             	r2 = 184			  ## btstack_main.c:1019:9
 1e084b6:    40 08             	r0 = r4			  ## btstack_main.c:1019:9
 1e084b8:    97 f3 1a f5       	call 3140148 <memset : 106ef0 >			  ## btstack_main.c:1019:9
 1e084bc:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:1019:9
 1e084be:    41 fc 30 00       	r1 = r4 + 48			  ## btstack_main.c:1020:9
 1e084c2:    02 78             	r2 = 128			  ## btstack_main.c:1020:9
 1e084c4:    80 f3 e8 30       	call 25040 <cbuf_init : 1e0e698 >			  ## btstack_main.c:1020:9
 1e084c8:    c0 ff 04 ad e0 01 	r0 = 31501572 <__ble_thread_loop_handler : 1e0ad04 >			  ## run_loop.c:20:15
 1e084ce:    18 48             	[r4 + 4] = r0			  ## run_loop.c:20:15
 1e084d0:    2d 48             	[r4 + 8] = r5			  ## run_loop.c:21:15
 1e084d2:    c0 ff 84 09 00 00 	r0 = 2436 <stack_run_loop_head : 984 >			  ## run_loop.c:22:5
 1e084d8:    41 08             	r1 = r4			  ## run_loop.c:22:5
 1e084da:    32 17             	call -412 <btstack_linked_list_add_tail : 1e08340 >			  ## run_loop.c:22:5
 1e084dc:    10 70             	r0 = 1			  ## btstack_main.c:1022:39
 1e084de:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:1022:39
 1e084e2:    80 f3 be 16       	call 11644 <att_global_info_init : 1e0b262 >			  ## btstack_main.c:1026:13
 1e084e6:    bf f3 50 e9       	call -11616 <ble_profile_init : 1e0578a >			  ## btstack_main.c:1027:13
 1e084ea:    57 01             	{pc, r7-r4} = [sp++]			  ## btstack_task.c:78:1


get_conn_for_addr:
 1e084ec:    76 01             	[--sp] = {rets, r6-r4}			  ## avctp_user.c:236:0
 1e084ee:    c6 ff 30 1b 00 00 	r6 = 6960 <__user_info+0x70 : 1b30 >			  ## avctp_user.c:236:0
 1e084f4:    05 08             	r5 = r0			  ## avctp_user.c:236:0
 1e084f6:    64 08             	r4 = r6			  ## avctp_user.c:236:0
 1e084f8:    62 70             	r2 = 6			  ## avctp_user.c:239:14
 1e084fa:    50 08             	r0 = r5			  ## avctp_user.c:239:14
 1e084fc:    41 08             	r1 = r4			  ## avctp_user.c:239:14
 1e084fe:    97 f3 f5 f4       	call 3140074 <memcmp : 106eec >			  ## avctp_user.c:239:14
 1e08502:    03 30             	if (r0 != 0) goto 6 <get_conn_for_addr+0x1E : 1e0850a >			  ## avctp_user.c:239:14
 1e08504:    30 48             	r0 = [r4 + 12]			  ## avctp_user.c:240:22
 1e08506:    3d f3 05 00       	if ((r0 & 536870912) != 0) goto 10 <get_conn_for_addr+0x28 : 1e08514 >			  ## avctp_user.c:240:22
 1e0850a:    84 81             	r4 += 24			  ## avctp_user.c:238:5
 1e0850c:    80 9d             	r0 = r6 + 24			  ## avctp_user.c:238:5
 1e0850e:    04 f2 f3 3f       	if (r4 < r0) goto -26 <get_conn_for_addr+0xC : 1e084f8 >			  ## avctp_user.c:238:5
 1e08512:    04 70             	r4 = 0
 1e08514:    40 08             	r0 = r4			  ## avctp_user.c:245:1
 1e08516:    56 01             	{pc, r6-r4} = [sp++]			  ## avctp_user.c:245:1


bt_event_update_to_user:
 1e08518:    76 01             	[--sp] = {rets, r6-r4}			  ## user_interface.c:297:0
 1e0851a:    f4 0b             	sp += -24			  ## user_interface.c:297:0
 1e0851c:    34 08             	r4 = r3			  ## user_interface.c:297:0
 1e0851e:    25 08             	r5 = r2			  ## user_interface.c:297:0
 1e08520:    16 08             	r6 = r1			  ## user_interface.c:297:0
 1e08522:    01 08             	r1 = r0			  ## user_interface.c:297:0
 1e08524:    00 71             	r0 = 16			  ## user_interface.c:300:12
 1e08526:    90 f5 00 00       	h[sp] = r0			  ## user_interface.c:300:12
 1e0852a:    00 a0             	r0 = sp + 0			  ## user_interface.c:300:12
 1e0852c:    05 22             	if (r1 == 0) goto 10 <bt_event_update_to_user+0x20 : 1e08538 >			  ## user_interface.c:300:12
 1e0852e:    80 80             	r0 += 8
 1e08530:    10 80             	r0 += 1			  ## user_interface.c:302:9
 1e08532:    62 70             	r2 = 6			  ## user_interface.c:302:9
 1e08534:    97 f3 d6 f4       	call 3140012 <memcpy : 106ee4 >			  ## user_interface.c:302:9
 1e08538:    1e 02             	[sp+4] = r6			  ## user_interface.c:304:12
 1e0853a:    d5 f5 08 00       	b[sp+8] = r5			  ## user_interface.c:305:18
 1e0853e:    4c 02             	[sp+16] = r4			  ## user_interface.c:306:18
 1e08540:    00 a0             	r0 = sp + 0			  ## user_interface.c:306:18
 1e08542:    80 f3 36 31       	call 25196 <sys_event_notify : 1e0e7b2 >			  ## user_interface.c:307:5
 1e08546:    0c 0a             	sp += 24
 1e08548:    56 01             	{pc, r6-r4} = [sp++]			  ## user_interface.c:309:1


update_bt_current_status:
 1e0854a:    79 01             	[--sp] = {rets, r9-r4}			  ## avctp_user.c:653:0
 1e0854c:    28 08             	r8 = r2			  ## avctp_user.c:653:0
 1e0854e:    14 08             	r4 = r1			  ## avctp_user.c:653:0
 1e08550:    05 08             	r5 = r0			  ## avctp_user.c:653:0
 1e08552:    a6 7a             	r6 = 170			  ## avctp_user.c:653:0
 1e08554:    c9 ff c0 1a 00 00 	r9 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:653:0
 1e0855a:    1d 2a             	if (r5 == 0) goto 58 <update_bt_current_status+0x4C : 1e08596 >			  ## avctp_user.c:653:0
 1e0855c:    c7 17             	call -114 <get_conn_for_addr : 1e084ec >			  ## avctp_user.c:661:25
 1e0855e:    07 08             	r7 = r0			  ## avctp_user.c:661:25
 1e08560:    1a 2e             	if (r7 == 0) goto 52 <update_bt_current_status+0x4C : 1e08596 >
 1e08562:    e4 e0 04 00       	if (r4 == 14) goto 8 <update_bt_current_status+0x24 : 1e0856e >
 1e08566:    b4 e0 02 00       	if (r4 == 11) goto 4 <update_bt_current_status+0x24 : 1e0856e >
 1e0856a:    30 5e             	r0 = h[r7 + 6] (u)			  ## avctp_user.c:672:19
 1e0856c:    06 20             	if (r0 == 0) goto 12 <update_bt_current_status+0x30 : 1e0857a >			  ## avctp_user.c:672:19
 1e0856e:    90 fc b0 00       	r0 = r9 + 176
 1e08572:    62 70             	r2 = 6
 1e08574:    51 08             	r1 = r5
 1e08576:    97 f3 b5 f4       	call 3139946 <memcpy : 106ee4 >
 1e0857a:    00 6f             	r0 = b[r7 + 16] (u)
 1e0857c:    08 e0 09 00       	if (r8 == 0) goto 18 <update_bt_current_status+0x48 : 1e08592 >
 1e08580:    31 4e             	r1 = [r7 + 12]
 1e08582:    21 fd 0f 19       	r1 = r1 & 15			  ## avctp_user.c:680:30
 1e08586:    11 fd 05 19       	r1 = r1 ^ 5			  ## avctp_user.c:680:30
 1e0858a:    01 22             	if (r1 == 0) goto 2 <update_bt_current_status+0x44 : 1e0858e >			  ## avctp_user.c:680:30
 1e0858c:    e8 72             	r8 = 46			  ## avctp_user.c:682:9
 1e0858e:    18 f9 0b 70       	b[r7 + 11] = r8
 1e08592:    81 fd 30 60       	r6 = uextra(r0, p:6, l:1)			  ## avctp_user.c:687:28
 1e08596:    09 28             	if (r4 == 0) goto 18 <update_bt_current_status+0x60 : 1e085aa >
 1e08598:    14 f9 f8 90       	b[r9 + 248] = r4			  ## avctp_user.c:690:37
 1e0859c:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## avctp_user.c:691:9
 1e085a2:    50 08             	r0 = r5			  ## avctp_user.c:691:9
 1e085a4:    42 08             	r2 = r4			  ## avctp_user.c:691:9
 1e085a6:    63 08             	r3 = r6			  ## avctp_user.c:691:9
 1e085a8:    b7 17             	call -146 <bt_event_update_to_user : 1e08518 >			  ## avctp_user.c:691:9
 1e085aa:    59 01             	{pc, r9-r4} = [sp++]			  ## avctp_user.c:694:1


delete_link_key:
 1e085ac:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:350:0
 1e085ae:    f0 0b             	sp += -32			  ## remote_device_db.c:350:0
 1e085b0:    06 06             	r6 = -32			  ## remote_device_db.c:350:0
 1e085b2:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:172:20
 1e085b4:    14 08             	r4 = r1			  ## remote_device_db.c:172:20
 1e085b6:    05 08             	r5 = r0
 1e085b8:    82 00             	call r2			  ## remote_device_db.c:172:10
 1e085ba:    39 20             	if (r0 == 0) goto 114 <delete_link_key+0x82 : 1e0862e >			  ## remote_device_db.c:172:10
 1e085bc:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:177:25
 1e085be:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:177:25
 1e085c0:    01 72             	r1 = 32			  ## remote_device_db.c:177:15
 1e085c2:    42 08             	r2 = r4			  ## remote_device_db.c:177:15
 1e085c4:    83 00             	call r3			  ## remote_device_db.c:177:15
 1e085c6:    00 e2 30 10       	if (r0 != 32) goto 96 <delete_link_key+0x7E : 1e0862a >
 1e085ca:    00 a0             	r0 = sp + 0
 1e085cc:    a8 90             	r8 = r0 + 10
 1e085ce:    07 2a             	if (r5 == 0) goto 14 <delete_link_key+0x32 : 1e085de >			  ## remote_device_db.c:181:13
 1e085d0:    62 70             	r2 = 6			  ## remote_device_db.c:182:18
 1e085d2:    50 08             	r0 = r5			  ## remote_device_db.c:182:18
 1e085d4:    81 08             	r1 = r8			  ## remote_device_db.c:182:18
 1e085d6:    97 f3 89 f4       	call 3139858 <memcmp : 106eec >			  ## remote_device_db.c:182:18
 1e085da:    10 30             	if (r0 != 0) goto 32 <delete_link_key+0x50 : 1e085fc >			  ## remote_device_db.c:182:18
 1e085dc:    17 18             	goto 46 <delete_link_key+0x60 : 1e0860c >			  ## remote_device_db.c:182:18
 1e085de:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:189:23
 1e085e0:    20 70             	r0 = 2			  ## remote_device_db.c:189:13
 1e085e2:    01 72             	r1 = 32			  ## remote_device_db.c:189:13
 1e085e4:    82 00             	call r2			  ## remote_device_db.c:189:13
 1e085e6:    07 a0             	r7 = sp + 0			  ## remote_device_db.c:189:13
 1e085e8:    f1 7f             	r1 = 255			  ## remote_device_db.c:190:13
 1e085ea:    02 72             	r2 = 32			  ## remote_device_db.c:190:13
 1e085ec:    70 08             	r0 = r7			  ## remote_device_db.c:190:13
 1e085ee:    97 f3 7f f4       	call 3139838 <memset : 106ef0 >			  ## remote_device_db.c:190:13
 1e085f2:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:191:23
 1e085f4:    01 72             	r1 = 32			  ## remote_device_db.c:191:13
 1e085f6:    70 08             	r0 = r7			  ## remote_device_db.c:191:13
 1e085f8:    42 08             	r2 = r4			  ## remote_device_db.c:191:13
 1e085fa:    83 00             	call r3			  ## remote_device_db.c:191:13
 1e085fc:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:177:25
 1e085fe:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:177:25
 1e08600:    01 72             	r1 = 32			  ## remote_device_db.c:177:15
 1e08602:    42 08             	r2 = r4			  ## remote_device_db.c:177:15
 1e08604:    83 00             	call r3			  ## remote_device_db.c:177:15
 1e08606:    00 e2 e2 0f       	if (r0 == 32) goto -60 <delete_link_key+0x22 : 1e085ce >
 1e0860a:    0f 18             	goto 30 <delete_link_key+0x7E : 1e0862a >
 1e0860c:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:183:27
 1e0860e:    20 70             	r0 = 2			  ## remote_device_db.c:183:17
 1e08610:    01 72             	r1 = 32			  ## remote_device_db.c:183:17
 1e08612:    82 00             	call r2			  ## remote_device_db.c:183:17
 1e08614:    05 a0             	r5 = sp + 0			  ## remote_device_db.c:183:17
 1e08616:    f1 7f             	r1 = 255			  ## remote_device_db.c:184:17
 1e08618:    02 72             	r2 = 32			  ## remote_device_db.c:184:17
 1e0861a:    50 08             	r0 = r5			  ## remote_device_db.c:184:17
 1e0861c:    97 f3 68 f4       	call 3139792 <memset : 106ef0 >			  ## remote_device_db.c:184:17
 1e08620:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:185:27
 1e08622:    01 72             	r1 = 32			  ## remote_device_db.c:185:17
 1e08624:    50 08             	r0 = r5			  ## remote_device_db.c:185:17
 1e08626:    42 08             	r2 = r4			  ## remote_device_db.c:185:17
 1e08628:    83 00             	call r3			  ## remote_device_db.c:185:17
 1e0862a:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:195:15
 1e0862c:    80 00             	call r0			  ## remote_device_db.c:195:5
 1e0862e:    10 0a             	sp += 32
 1e08630:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:354:1


get_is_in_background_flag:
 1e08632:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## avctp_user.c:2895:0
 1e08638:    01 61             	r1 = b[r0 + 16] (u)			  ## avctp_user.c:2896:74
 1e0863a:    10 70             	r0 = 1			  ## avctp_user.c:2896:50
 1e0863c:    01 32             	if (r1 != 0) goto 2 <get_is_in_background_flag+0xE : 1e08640 >			  ## avctp_user.c:2896:50
 1e0863e:    00 70             	r0 = 0
 1e08640:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2896:50
 1e08646:    01 f9 fb 10       	r1 = b[r1 + 251] (u)			  ## avctp_user.c:2896:50
 1e0864a:    50 b3             	r0 &= r1			  ## avctp_user.c:2896:50
 1e0864c:    20 00             	rts			  ## avctp_user.c:2896:5


le_hci_emit_event:
 1e0864e:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1885:0
 1e08650:    fa 0b             	sp += -12			  ## hci_vendor.c:1885:0
 1e08652:    14 08             	r4 = r1			  ## hci_vendor.c:1885:0
 1e08654:    05 08             	r5 = r0			  ## hci_vendor.c:1885:0
 1e08656:    00 70             	r0 = 0			  ## hci_vendor.c:1885:0
 1e08658:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1885:0
 1e0865e:    12 42             	r2 = [r1 + 4]			  ## btstack_linked_list.c:163:16
 1e08660:    08 02             	[sp] = r0			  ## btstack_linked_list.c:161:25
 1e08662:    40 92             	r0 = r1 + 4			  ## btstack_linked_list.c:161:25
 1e08664:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e08666:    2a 02             	[sp+8] = r2			  ## btstack_linked_list.c:163:14
 1e08668:    00 a0             	r0 = sp + 0			  ## btstack_linked_list.c:163:14
 1e0866a:    0a 18             	goto 20 <le_hci_emit_event+0x32 : 1e08680 >
 1e0866c:    06 a0             	r6 = sp + 0
 1e0866e:    60 08             	r0 = r6			  ## hci_vendor.c:1889:100
 1e08670:    24 15             	call -1464 <btstack_linked_list_iterator_next : 1e080ba >			  ## hci_vendor.c:1889:100
 1e08672:    17 40             	r7 = [r0 + 4]			  ## hci_vendor.c:1890:16
 1e08674:    40 70             	r0 = 4			  ## hci_vendor.c:1890:9
 1e08676:    01 70             	r1 = 0			  ## hci_vendor.c:1890:9
 1e08678:    52 08             	r2 = r5			  ## hci_vendor.c:1890:9
 1e0867a:    43 08             	r3 = r4			  ## hci_vendor.c:1890:9
 1e0867c:    87 00             	call r7			  ## hci_vendor.c:1890:9
 1e0867e:    60 08             	r0 = r6			  ## hci_vendor.c:1888:12
 1e08680:    0e 15             	call -1508 <btstack_linked_list_iterator_has_next : 1e0809e >
 1e08682:    f4 31             	if (r0 != 0) goto -24 <le_hci_emit_event+0x1E : 1e0866c >
 1e08684:    06 0a             	sp += 12
 1e08686:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1892:1


get_database:
 1e08688:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:33:0
 1e0868a:    08 06             	r8 = -32			  ## remote_device_db.c:33:0
 1e0868c:    03 f6 00 80       	r3 = [r8 + 0]			  ## remote_device_db.c:37:20
 1e08690:    25 08             	r5 = r2			  ## remote_device_db.c:37:20
 1e08692:    16 08             	r6 = r1
 1e08694:    04 08             	r4 = r0
 1e08696:    83 00             	call r3			  ## remote_device_db.c:37:10
 1e08698:    20 20             	if (r0 == 0) goto 64 <get_database+0x52 : 1e086da >			  ## remote_device_db.c:37:10
 1e0869a:    a7 98             	r7 = r4 + 10
 1e0869c:    03 f6 08 80       	r3 = [r8 + 8]			  ## remote_device_db.c:42:25
 1e086a0:    01 72             	r1 = 32			  ## remote_device_db.c:42:15
 1e086a2:    40 08             	r0 = r4			  ## remote_device_db.c:42:15
 1e086a4:    52 08             	r2 = r5			  ## remote_device_db.c:42:15
 1e086a6:    83 00             	call r3			  ## remote_device_db.c:42:15
 1e086a8:    00 e2 12 10       	if (r0 != 32) goto 36 <get_database+0x48 : 1e086d0 >
 1e086ac:    62 70             	r2 = 6			  ## remote_device_db.c:47:14
 1e086ae:    60 08             	r0 = r6			  ## remote_device_db.c:47:14
 1e086b0:    71 08             	r1 = r7			  ## remote_device_db.c:47:14
 1e086b2:    97 f3 1b f4       	call 3139638 <memcmp : 106eec >			  ## remote_device_db.c:47:14
 1e086b6:    f2 31             	if (r0 != 0) goto -28 <get_database+0x14 : 1e0869c >			  ## remote_device_db.c:47:14
 1e086b8:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_db.c:48:21
 1e086ba:    85 f9 02 40       	r5 = b[r4 ++= 2] (u)			  ## remote_device_db.c:48:21
 1e086be:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## remote_device_db.c:48:21
 1e086c2:    e1 71             	r1 = 30			  ## remote_device_db.c:48:28
 1e086c4:    40 08             	r0 = r4			  ## remote_device_db.c:48:28
 1e086c6:    97 f3 33 f4       	call 3139686 <chip_crc16 : 106f30 >			  ## remote_device_db.c:48:28
 1e086ca:    14 70             	r4 = 1			  ## remote_device_db.c:48:28
 1e086cc:    05 f2 01 00       	if (r5 == r0) goto 2 <get_database+0x4A : 1e086d2 >
 1e086d0:    04 70             	r4 = 0
 1e086d2:    00 f6 04 80       	r0 = [r8 + 4]			  ## remote_device_db.c:58:15
 1e086d6:    80 00             	call r0			  ## remote_device_db.c:58:5
 1e086d8:    01 18             	goto 2 <get_database+0x54 : 1e086dc >			  ## remote_device_db.c:58:5
 1e086da:    04 70             	r4 = 0
 1e086dc:    40 08             	r0 = r4			  ## remote_device_db.c:61:1
 1e086de:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:61:1


get_link_key:
 1e086e0:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:250:0
 1e086e2:    e8 0b             	sp += -48			  ## remote_device_db.c:250:0
 1e086e4:    25 08             	r5 = r2			  ## remote_device_db.c:250:0
 1e086e6:    14 08             	r4 = r1			  ## remote_device_db.c:250:0
 1e086e8:    06 08             	r6 = r0			  ## remote_device_db.c:250:0
 1e086ea:    12 16             	call -988 <get_remote_test_flag : 1e08310 >			  ## remote_device_db.c:256:9
 1e086ec:    08 20             	if (r0 == 0) goto 16 <get_link_key+0x1E : 1e086fe >			  ## remote_device_db.c:256:9
 1e086ee:    c1 ff 9c 7b e0 01 	r1 = 31488924 <own_private_linkkey : 1e07b9c >			  ## remote_device_db.c:257:9
 1e086f4:    02 71             	r2 = 16			  ## remote_device_db.c:257:9
 1e086f6:    40 08             	r0 = r4			  ## remote_device_db.c:257:9
 1e086f8:    97 f3 f4 f3       	call 3139560 <memcpy : 106ee4 >
 1e086fc:    0a 18             	goto 20 <get_link_key+0x32 : 1e08712 >
 1e086fe:    c0 ff 8d 09 00 00 	r0 = 2445 <temp_link_key_flag : 98d >			  ## remote_device_db.c:265:9
 1e08704:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:265:9
 1e08706:    09 20             	if (r0 == 0) goto 18 <get_link_key+0x3A : 1e0871a >			  ## remote_device_db.c:265:9
 1e08708:    01 70             	r1 = 0			  ## remote_device_db.c:266:9
 1e0870a:    02 71             	r2 = 16			  ## remote_device_db.c:266:9
 1e0870c:    40 08             	r0 = r4			  ## remote_device_db.c:266:9
 1e0870e:    97 f3 ef f3       	call 3139550 <memset : 106ef0 >			  ## remote_device_db.c:266:9
 1e08712:    15 70             	r5 = 1
 1e08714:    50 08             	r0 = r5			  ## remote_device_db.c:302:1
 1e08716:    18 0a             	sp += 48			  ## remote_device_db.c:302:1
 1e08718:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:302:1
 1e0871a:    00 a0             	r0 = sp + 0
 1e0871c:    61 08             	r1 = r6			  ## remote_device_db.c:270:10
 1e0871e:    52 08             	r2 = r5			  ## remote_device_db.c:270:10
 1e08720:    b3 17             	call -154 <get_database : 1e08688 >			  ## remote_device_db.c:270:10
 1e08722:    05 70             	r5 = 0
 1e08724:    f7 21             	if (r0 == 0) goto -18 <get_link_key+0x34 : 1e08714 >
 1e08726:    bd 02             	[sp+44] = r5			  ## remote_device_db.c:280:5
 1e08728:    ad 02             	[sp+40] = r5			  ## remote_device_db.c:280:5
 1e0872a:    9d 02             	[sp+36] = r5			  ## remote_device_db.c:280:5
 1e0872c:    8d 02             	[sp+32] = r5			  ## remote_device_db.c:280:5
 1e0872e:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:280:5
 1e08730:    06 91             	r6 = r0 + 16			  ## remote_device_db.c:281:32
 1e08732:    00 a2             	r0 = sp + 32
 1e08734:    02 71             	r2 = 16			  ## remote_device_db.c:281:10
 1e08736:    61 08             	r1 = r6			  ## remote_device_db.c:281:10
 1e08738:    97 f3 d8 f3       	call 3139504 <memcmp : 106eec >			  ## remote_device_db.c:281:10
 1e0873c:    eb 21             	if (r0 == 0) goto -42 <get_link_key+0x34 : 1e08714 >			  ## remote_device_db.c:281:10
 1e0873e:    02 71             	r2 = 16			  ## remote_device_db.c:286:5
 1e08740:    40 08             	r0 = r4			  ## remote_device_db.c:286:5
 1e08742:    61 08             	r1 = r6			  ## remote_device_db.c:286:5
 1e08744:    d9 1f             	goto -78 <get_link_key+0x18 : 1e086f8 >			  ## remote_device_db.c:286:5


put_database:
 1e08746:    7f 01             	[--sp] = {rets, r15-r4}			  ## remote_device_db.c:65:0
 1e08748:    c2 0b             	sp += -124			  ## remote_device_db.c:65:0
 1e0874a:    06 06             	r6 = -32			  ## remote_device_db.c:65:0
 1e0874c:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:438:20
 1e0874e:    14 08             	r4 = r1			  ## remote_device_db.c:438:20
 1e08750:    0b 08             	r11 = r0			  ## remote_device_db.c:438:20
 1e08752:    82 00             	call r2			  ## remote_device_db.c:438:10
 1e08754:    79 20             	if (r0 == 0) goto 242 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:438:10
 1e08756:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:443:25
 1e08758:    c0 a5             	r0 = sp + 92			  ## remote_device_db.c:443:25
 1e0875a:    01 72             	r1 = 32			  ## remote_device_db.c:443:15
 1e0875c:    42 08             	r2 = r4			  ## remote_device_db.c:443:15
 1e0875e:    83 00             	call r3			  ## remote_device_db.c:443:15
 1e08760:    08 70             	r8 = 0
 1e08762:    00 e2 39 10       	if (r0 != 32) goto 114 <put_database+0x92 : 1e087d8 >
 1e08766:    c0 a5             	r0 = sp + 92
 1e08768:    05 fd 02 09       	r5 = r0 | 2
 1e0876c:    ca ff ff ff 00 00 	r10 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e08772:    1f 18             	goto 62 <put_database+0x6C : 1e087b2 >
 1e08774:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:456:34
 1e08778:    98 f2 06 a0       	ifs (r8 >= r9) goto 12 <put_database+0x42 : 1e08788 >
 1e0877c:    c0 a1             	r0 = sp + 28
 1e0877e:    c1 a5             	r1 = sp + 92
 1e08780:    02 72             	r2 = 32			  ## remote_device_db.c:458:13
 1e08782:    97 f3 af f3       	call 3139422 <memcpy : 106ee4 >			  ## remote_device_db.c:458:13
 1e08786:    98 08             	r8 = r9			  ## remote_device_db.c:458:13
 1e08788:    a9 f2 1f 00       	if (r9 == r10) goto 62 <put_database+0x84 : 1e087ca >
 1e0878c:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:464:18
 1e08790:    e1 71             	r1 = 30			  ## remote_device_db.c:464:25
 1e08792:    50 08             	r0 = r5			  ## remote_device_db.c:464:25
 1e08794:    97 f3 cc f3       	call 3139480 <chip_crc16 : 106f30 >			  ## remote_device_db.c:464:25
 1e08798:    07 f2 17 10       	if (r7 != r0) goto 46 <put_database+0x84 : 1e087ca >			  ## remote_device_db.c:464:25
 1e0879c:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:468:29
 1e087a0:    98 f2 13 a0       	ifs (r8 >= r9) goto 38 <put_database+0x84 : 1e087ca >
 1e087a4:    c0 a1             	r0 = sp + 28
 1e087a6:    c1 a5             	r1 = sp + 92
 1e087a8:    02 72             	r2 = 32			  ## remote_device_db.c:470:13
 1e087aa:    97 f3 9b f3       	call 3139382 <memcpy : 106ee4 >			  ## remote_device_db.c:470:13
 1e087ae:    98 08             	r8 = r9			  ## remote_device_db.c:470:13
 1e087b0:    0c 18             	goto 24 <put_database+0x84 : 1e087ca >
 1e087b2:    80 f5 5e 00       	r0 = h[sp+94] (u)			  ## remote_device_db.c:448:18
 1e087b6:    a0 f2 08 00       	if (r0 == r10) goto 16 <put_database+0x84 : 1e087ca >			  ## remote_device_db.c:448:18
 1e087ba:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:451:18
 1e087be:    e1 71             	r1 = 30			  ## remote_device_db.c:451:25
 1e087c0:    50 08             	r0 = r5			  ## remote_device_db.c:451:25
 1e087c2:    97 f3 b5 f3       	call 3139434 <chip_crc16 : 106f30 >			  ## remote_device_db.c:451:25
 1e087c6:    07 f2 d5 0f       	if (r7 == r0) goto -86 <put_database+0x2E : 1e08774 >			  ## remote_device_db.c:451:25
 1e087ca:    23 4c             	r3 = [r6 + 8]
 1e087cc:    c0 a5             	r0 = sp + 92
 1e087ce:    01 72             	r1 = 32
 1e087d0:    42 08             	r2 = r4
 1e087d2:    83 00             	call r3
 1e087d4:    00 e2 ed 0f       	if (r0 == 32) goto -38 <put_database+0x6C : 1e087b2 >
 1e087d8:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:475:15
 1e087da:    80 00             	call r0			  ## remote_device_db.c:475:5
 1e087dc:    08 e0 34 00       	if (r8 == 0) goto 104 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:475:5
 1e087e0:    b0 fc 0a 00       	r0 = r11 + 10			  ## remote_device_db.c:76:14
 1e087e4:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:76:14
 1e087e6:    a1 80             	r1 += 10			  ## remote_device_db.c:76:14
 1e087e8:    62 70             	r2 = 6			  ## remote_device_db.c:76:14
 1e087ea:    97 f3 7f f3       	call 3139326 <memcmp : 106eec >			  ## remote_device_db.c:76:14
 1e087ee:    2c 30             	if (r0 != 0) goto 88 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:76:14
 1e087f0:    b0 fc 10 00       	r0 = r11 + 16			  ## remote_device_db.c:77:14
 1e087f4:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:77:14
 1e087f6:    01 81             	r1 += 16			  ## remote_device_db.c:77:14
 1e087f8:    02 71             	r2 = 16			  ## remote_device_db.c:77:14
 1e087fa:    97 f3 77 f3       	call 3139310 <memcmp : 106eec >			  ## remote_device_db.c:77:14
 1e087fe:    24 30             	if (r0 != 0) goto 72 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:77:14
 1e08800:    00 f9 06 b0       	r0 = b[r11 + 6] (u)			  ## remote_device_db.c:78:17
 1e08804:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## remote_device_db.c:78:42
 1e08808:    10 f2 1e 10       	if (r0 != r1) goto 60 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:78:42
 1e0880c:    00 f9 07 b0       	r0 = b[r11 + 7] (u)			  ## remote_device_db.c:79:17
 1e08810:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## remote_device_db.c:79:42
 1e08814:    10 f2 18 10       	if (r0 != r1) goto 48 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:79:42
 1e08818:    00 f9 04 b0       	r0 = b[r11 + 4] (u)			  ## remote_device_db.c:80:17
 1e0881c:    c1 f5 20 00       	r1 = b[sp+32] (u)			  ## remote_device_db.c:80:40
 1e08820:    10 f2 12 10       	if (r0 != r1) goto 36 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:80:40
 1e08824:    00 f9 08 b0       	r0 = b[r11 + 8] (u)			  ## remote_device_db.c:81:17
 1e08828:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## remote_device_db.c:81:47
 1e0882c:    10 f2 0c 10       	if (r0 != r1) goto 24 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:81:47
 1e08830:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## remote_device_db.c:82:17
 1e08834:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## remote_device_db.c:82:48
 1e08838:    10 f2 06 10       	if (r0 != r1) goto 12 <put_database+0x102 : 1e08848 >			  ## remote_device_db.c:82:48
 1e0883c:    00 f9 05 b0       	r0 = b[r11 + 5] (u)			  ## remote_device_db.c:83:17
 1e08840:    c1 f5 21 00       	r1 = b[sp+33] (u)			  ## remote_device_db.c:83:55
 1e08844:    10 f2 c7 00       	if (r0 == r1) goto 398 <put_database+0x290 : 1e089d6 >			  ## remote_device_db.c:83:55
 1e08848:    00 4c             	r0 = [r6 + 0]			  ## remote_device_db.c:88:20
 1e0884a:    80 00             	call r0			  ## remote_device_db.c:88:10
 1e0884c:    c4 20             	if (r0 == 0) goto 392 <put_database+0x290 : 1e089d6 >			  ## remote_device_db.c:88:10
 1e0884e:    c0 a3             	r0 = sp + 60
 1e08850:    01 91             	r1 = r0 + 16
 1e08852:    19 02             	[sp+4] = r1
 1e08854:    b1 fc 10 00       	r1 = r11 + 16
 1e08858:    09 02             	[sp] = r1
 1e0885a:    a1 90             	r1 = r0 + 10
 1e0885c:    39 02             	[sp+12] = r1
 1e0885e:    1b f5 10 00       	[sp+16] = r11
 1e08862:    b1 fc 0a 00       	r1 = r11 + 10
 1e08866:    29 02             	[sp+8] = r1
 1e08868:    0d fd 02 09       	r13 = r0 | 2
 1e0886c:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e08872:    05 70             	r5 = 0
 1e08874:    8b 08             	r11 = r8
 1e08876:    0f 70             	r15 = 0
 1e08878:    00 70             	r0 = 0
 1e0887a:    58 02             	[sp+20] = r0
 1e0887c:    09 70             	r9 = 0
 1e0887e:    0c 70             	r12 = 0
 1e08880:    5a 08             	r10 = r5
 1e08882:    be 08             	r14 = r11
 1e08884:    1f f5 18 00       	[sp+24] = r15
 1e08888:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:93:25
 1e0888a:    80 00             	call r0			  ## remote_device_db.c:93:15
 1e0888c:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:95:25
 1e0888e:    07 08             	r7 = r0			  ## remote_device_db.c:93:15
 1e08890:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:93:15
 1e08892:    01 72             	r1 = 32			  ## remote_device_db.c:95:15
 1e08894:    42 08             	r2 = r4			  ## remote_device_db.c:95:15
 1e08896:    83 00             	call r3			  ## remote_device_db.c:95:15
 1e08898:    cf 08             	r15 = r12			  ## remote_device_db.c:95:15
 1e0889a:    17 18             	goto 46 <put_database+0x184 : 1e088ca >			  ## remote_device_db.c:95:15
 1e0889c:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:108:23
 1e0889e:    20 70             	r0 = 2			  ## remote_device_db.c:108:13
 1e088a0:    01 72             	r1 = 32			  ## remote_device_db.c:108:13
 1e088a2:    82 00             	call r2			  ## remote_device_db.c:108:13
 1e088a4:    c5 a3             	r5 = sp + 60			  ## remote_device_db.c:108:13
 1e088a6:    f1 7f             	r1 = 255			  ## remote_device_db.c:109:13
 1e088a8:    02 72             	r2 = 32			  ## remote_device_db.c:109:13
 1e088aa:    50 08             	r0 = r5			  ## remote_device_db.c:109:13
 1e088ac:    97 f3 20 f3       	call 3139136 <memset : 106ef0 >			  ## remote_device_db.c:109:13
 1e088b0:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:110:23
 1e088b2:    01 72             	r1 = 32			  ## remote_device_db.c:110:13
 1e088b4:    50 08             	r0 = r5			  ## remote_device_db.c:110:13
 1e088b6:    42 08             	r2 = r4			  ## remote_device_db.c:110:13
 1e088b8:    83 00             	call r3			  ## remote_device_db.c:110:13
 1e088ba:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:93:25
 1e088bc:    80 00             	call r0			  ## remote_device_db.c:93:15
 1e088be:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:95:25
 1e088c0:    07 08             	r7 = r0			  ## remote_device_db.c:93:15
 1e088c2:    01 72             	r1 = 32			  ## remote_device_db.c:95:15
 1e088c4:    50 08             	r0 = r5			  ## remote_device_db.c:95:15
 1e088c6:    42 08             	r2 = r4			  ## remote_device_db.c:95:15
 1e088c8:    83 00             	call r3			  ## remote_device_db.c:95:15
 1e088ca:    20 04             	r0 = r0.l (u)
 1e088cc:    00 e2 52 10       	if (r0 != 32) goto 164 <put_database+0x22E : 1e08974 >
 1e088d0:    80 f5 3e 00       	r0 = h[sp+62] (u)			  ## remote_device_db.c:100:18
 1e088d4:    80 f2 0f 10       	if (r0 != r8) goto 30 <put_database+0x1B0 : 1e088f6 >			  ## remote_device_db.c:100:18
 1e088d8:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:93:25
 1e088da:    80 00             	call r0			  ## remote_device_db.c:93:15
 1e088dc:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:95:25
 1e088de:    05 08             	r5 = r0			  ## remote_device_db.c:93:15
 1e088e0:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:93:15
 1e088e2:    01 72             	r1 = 32			  ## remote_device_db.c:95:15
 1e088e4:    42 08             	r2 = r4			  ## remote_device_db.c:95:15
 1e088e6:    83 00             	call r3			  ## remote_device_db.c:95:15
 1e088e8:    20 04             	r0 = r0.l (u)			  ## remote_device_db.c:96:13
 1e088ea:    9f b0             	r15 |= 2			  ## remote_device_db.c:102:22
 1e088ec:    5f 02             	[sp+20] = r7			  ## remote_device_db.c:93:15
 1e088ee:    57 08             	r7 = r5			  ## remote_device_db.c:93:15
 1e088f0:    00 e2 ee 0f       	if (r0 == 32) goto -36 <put_database+0x18A : 1e088d0 >			  ## remote_device_db.c:93:15
 1e088f4:    3f 18             	goto 126 <put_database+0x22E : 1e08974 >			  ## remote_device_db.c:93:15
 1e088f6:    85 f5 3c 00       	r5 = h[sp+60] (u)			  ## remote_device_db.c:106:18
 1e088fa:    e1 71             	r1 = 30			  ## remote_device_db.c:106:25
 1e088fc:    d0 08             	r0 = r13			  ## remote_device_db.c:106:25
 1e088fe:    97 f3 17 f3       	call 3139118 <chip_crc16 : 106f30 >			  ## remote_device_db.c:106:25
 1e08902:    05 f2 cb 1f       	if (r5 != r0) goto -106 <put_database+0x156 : 1e0889c >			  ## remote_device_db.c:106:25
 1e08906:    8b f5 3e 00       	r11 = h[sp+62] (u)			  ## remote_device_db.c:113:34
 1e0890a:    0c fd 04 f9       	r12 = r15 | 4			  ## remote_device_db.c:116:22
 1e0890e:    e6 fd 00 0e       	r0 = r14.l (u)			  ## remote_device_db.c:113:27
 1e08912:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1D2 : 1e08918 >			  ## remote_device_db.c:113:27
 1e08916:    fc 08             	r12 = r15			  ## remote_device_db.c:113:13
 1e08918:    7f 08             	r15 = r7			  ## remote_device_db.c:113:13
 1e0891a:    b0 f2 02 80       	if (r0 > r11) goto 4 <put_database+0x1DC : 1e08922 >			  ## remote_device_db.c:113:13
 1e0891e:    0f f5 18 00       	r15 = [sp+24]			  ## remote_device_db.c:113:13
 1e08922:    e6 fd 00 1a       	r1 = r10.l (u)			  ## remote_device_db.c:120:27
 1e08926:    b5 08             	r5 = r11			  ## remote_device_db.c:120:13
 1e08928:    51 f2 01 30       	if (r1 < r5) goto 2 <put_database+0x1E8 : 1e0892e >			  ## remote_device_db.c:120:13
 1e0892c:    a5 08             	r5 = r10			  ## remote_device_db.c:120:13
 1e0892e:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1EE : 1e08934 >
 1e08932:    eb 08             	r11 = r14			  ## remote_device_db.c:113:13
 1e08934:    e6 fd 00 09       	r0 = r9.l (u)			  ## remote_device_db.c:124:23
 1e08938:    5a 08             	r10 = r5			  ## remote_device_db.c:124:23
 1e0893a:    be 08             	r14 = r11			  ## remote_device_db.c:124:23
 1e0893c:    1f f5 18 00       	[sp+24] = r15			  ## remote_device_db.c:124:23
 1e08940:    a3 31             	if (r0 != 0) goto -186 <put_database+0x142 : 1e08888 >			  ## remote_device_db.c:124:23
 1e08942:    62 70             	r2 = 6			  ## remote_device_db.c:124:27
 1e08944:    20 02             	r0 = [sp+8]			  ## remote_device_db.c:124:27
 1e08946:    31 02             	r1 = [sp+12]			  ## remote_device_db.c:124:27
 1e08948:    97 f3 d0 f2       	call 3138976 <memcmp : 106eec >			  ## remote_device_db.c:124:27
 1e0894c:    09 70             	r9 = 0			  ## remote_device_db.c:124:27
 1e0894e:    98 31             	if (r0 != 0) goto -208 <put_database+0x13A : 1e08880 >			  ## remote_device_db.c:124:27
 1e08950:    02 71             	r2 = 16			  ## remote_device_db.c:125:17
 1e08952:    00 02             	r0 = [sp]			  ## remote_device_db.c:125:17
 1e08954:    11 02             	r1 = [sp+4]			  ## remote_device_db.c:125:17
 1e08956:    97 f3 c9 f2       	call 3138962 <memcmp : 106eec >			  ## remote_device_db.c:125:17
 1e0895a:    09 20             	if (r0 == 0) goto 18 <put_database+0x228 : 1e0896e >			  ## remote_device_db.c:125:17
 1e0895c:    40 02             	r0 = [sp+16]
 1e0895e:    f1 7f             	r1 = 255
 1e08960:    69 60             	b[r0 + 6] = r1			  ## remote_device_db.c:126:33
 1e08962:    79 60             	b[r0 + 7] = r1			  ## remote_device_db.c:127:33
 1e08964:    01 70             	r1 = 0			  ## remote_device_db.c:127:33
 1e08966:    59 60             	b[r0 + 5] = r1			  ## remote_device_db.c:128:46
 1e08968:    99 60             	b[r0 + 9] = r1			  ## remote_device_db.c:129:38
 1e0896a:    31 70             	r1 = 3			  ## remote_device_db.c:130:37
 1e0896c:    89 60             	b[r0 + 8] = r1			  ## remote_device_db.c:130:37
 1e0896e:    1c b0             	r12 |= 1			  ## remote_device_db.c:134:22
 1e08970:    79 08             	r9 = r7			  ## remote_device_db.c:134:22
 1e08972:    86 1f             	goto -244 <put_database+0x13A : 1e08880 >			  ## remote_device_db.c:134:22
 1e08974:    a0 fc 01 00       	r0 = r10 + 1			  ## remote_device_db.c:139:35
 1e08978:    22 04             	r2 = r0.l (u)			  ## remote_device_db.c:139:35
 1e0897a:    83 08             	r3 = r8			  ## remote_device_db.c:139:35
 1e0897c:    11 70             	r1 = 1			  ## remote_device_db.c:139:35
 1e0897e:    32 f2 01 00       	if (r2 == r3) goto 2 <put_database+0x23E : 1e08984 >			  ## remote_device_db.c:139:35
 1e08982:    01 08             	r1 = r0			  ## remote_device_db.c:140:9
 1e08984:    45 02             	r5 = [sp+16]
 1e08986:    29 6a             	b[r5 + 2] = r1			  ## remote_device_db.c:139:19
 1e08988:    08 d2             	r0 = r1 >> 8			  ## remote_device_db.c:139:19
 1e0898a:    38 6a             	b[r5 + 3] = r0			  ## remote_device_db.c:139:19
 1e0898c:    20 9a             	r0 = r5 + 2			  ## remote_device_db.c:139:9
 1e0898e:    e1 71             	r1 = 30			  ## remote_device_db.c:143:15
 1e08990:    97 f3 ce f2       	call 3138972 <chip_crc16 : 106f30 >			  ## remote_device_db.c:143:15
 1e08994:    08 6a             	b[r5 + 0] = r0			  ## remote_device_db.c:143:13
 1e08996:    01 d2             	r1 = r0 >> 8			  ## remote_device_db.c:143:13
 1e08998:    e6 fd 00 0f       	r0 = r15.l (u)			  ## remote_device_db.c:146:9
 1e0899c:    19 6a             	b[r5 + 1] = r1			  ## remote_device_db.c:143:13
 1e0899e:    0a 20             	if (r0 == 0) goto 20 <put_database+0x26E : 1e089b4 >			  ## remote_device_db.c:143:13
 1e089a0:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <put_database+0x278 : 1e089be >
 1e089a4:    09 f5 14 00       	r9 = [sp+20]
 1e089a8:    21 f3 09 00       	if ((r0 & 2) != 0) goto 18 <put_database+0x278 : 1e089be >
 1e089ac:    09 f5 18 00       	r9 = [sp+24]
 1e089b0:    22 f3 05 00       	if ((r0 & 4) != 0) goto 10 <put_database+0x278 : 1e089be >
 1e089b4:    60 4c             	r0 = [r6 + 24]
 1e089b6:    80 00             	call r0
 1e089b8:    81 fc e1 ff       	r1 = r8 + -31
 1e089bc:    49 b0             	r9 = r0 + r1
 1e089be:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:159:15
 1e089c0:    e6 fd 00 19       	r1 = r9.l (u)			  ## remote_device_db.c:159:23
 1e089c4:    00 70             	r0 = 0			  ## remote_device_db.c:159:5
 1e089c6:    82 00             	call r2			  ## remote_device_db.c:159:5
 1e089c8:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:160:15
 1e089ca:    01 72             	r1 = 32			  ## remote_device_db.c:160:5
 1e089cc:    50 08             	r0 = r5			  ## remote_device_db.c:160:5
 1e089ce:    42 08             	r2 = r4			  ## remote_device_db.c:160:5
 1e089d0:    83 00             	call r3			  ## remote_device_db.c:160:5
 1e089d2:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:162:15
 1e089d4:    80 00             	call r0			  ## remote_device_db.c:162:5
 1e089d6:    3e 0a             	sp += 124
 1e089d8:    5f 01             	{pc, r15-r4} = [sp++]


put_link_key:
 1e089da:    77 01             	[--sp] = {rets, r7-r4}			  ## remote_device_db.c:305:0
 1e089dc:    f0 0b             	sp += -32			  ## remote_device_db.c:305:0
 1e089de:    24 08             	r4 = r2			  ## remote_device_db.c:305:0
 1e089e0:    15 08             	r5 = r1			  ## remote_device_db.c:305:0
 1e089e2:    06 08             	r6 = r0			  ## remote_device_db.c:305:0
 1e089e4:    95 14             	call -1750 <get_remote_test_flag : 1e08310 >			  ## remote_device_db.c:308:9
 1e089e6:    2a 30             	if (r0 != 0) goto 84 <put_link_key+0x62 : 1e08a3c >			  ## remote_device_db.c:308:9
 1e089e8:    c0 ff 8d 09 00 00 	r0 = 2445 <temp_link_key_flag : 98d >			  ## remote_device_db.c:312:9
 1e089ee:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:312:9
 1e089f0:    25 30             	if (r0 != 0) goto 74 <put_link_key+0x62 : 1e08a3c >			  ## remote_device_db.c:312:9
 1e089f2:    00 a0             	r0 = sp + 0
 1e089f4:    61 08             	r1 = r6			  ## remote_device_db.c:320:10
 1e089f6:    42 08             	r2 = r4			  ## remote_device_db.c:320:10
 1e089f8:    47 16             	call -882 <get_database : 1e08688 >			  ## remote_device_db.c:320:10
 1e089fa:    12 30             	if (r0 != 0) goto 36 <put_link_key+0x46 : 1e08a20 >
 1e089fc:    00 a0             	r0 = sp + 0
 1e089fe:    01 70             	r1 = 0			  ## remote_device_db.c:321:9
 1e08a00:    02 72             	r2 = 32			  ## remote_device_db.c:321:9
 1e08a02:    07 70             	r7 = 0			  ## remote_device_db.c:321:9
 1e08a04:    97 f3 74 f2       	call 3138792 <memset : 106ef0 >			  ## remote_device_db.c:321:9
 1e08a08:    f0 7f             	r0 = 255			  ## remote_device_db.c:322:30
 1e08a0a:    d0 f5 07 00       	b[sp+7] = r0			  ## remote_device_db.c:322:30
 1e08a0e:    d0 f5 06 00       	b[sp+6] = r0			  ## remote_device_db.c:323:31
 1e08a12:    d7 f5 05 00       	b[sp+5] = r7			  ## remote_device_db.c:324:43
 1e08a16:    d7 f5 09 00       	b[sp+9] = r7			  ## remote_device_db.c:325:36
 1e08a1a:    30 70             	r0 = 3			  ## remote_device_db.c:326:35
 1e08a1c:    d0 f5 08 00       	b[sp+8] = r0			  ## remote_device_db.c:326:35
 1e08a20:    07 a0             	r7 = sp + 0
 1e08a22:    a0 9e             	r0 = r7 + 10			  ## remote_device_db.c:328:5
 1e08a24:    62 70             	r2 = 6			  ## remote_device_db.c:328:5
 1e08a26:    61 08             	r1 = r6			  ## remote_device_db.c:328:5
 1e08a28:    97 f3 5c f2       	call 3138744 <memcpy : 106ee4 >			  ## remote_device_db.c:328:5
 1e08a2c:    00 9f             	r0 = r7 + 16			  ## remote_device_db.c:329:5
 1e08a2e:    02 71             	r2 = 16			  ## remote_device_db.c:329:5
 1e08a30:    51 08             	r1 = r5			  ## remote_device_db.c:329:5
 1e08a32:    97 f3 57 f2       	call 3138734 <memcpy : 106ee4 >			  ## remote_device_db.c:329:5
 1e08a36:    70 08             	r0 = r7			  ## remote_device_db.c:336:5
 1e08a38:    41 08             	r1 = r4			  ## remote_device_db.c:336:5
 1e08a3a:    85 16             	call -758 <put_database : 1e08746 >			  ## remote_device_db.c:336:5
 1e08a3c:    10 0a             	sp += 32
 1e08a3e:    57 01             	{pc, r7-r4} = [sp++]			  ## remote_device_db.c:337:1


handle_remote_dev_type:
 1e08a40:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:583:0
 1e08a42:    e8 0b             	sp += -48			  ## remote_device_db.c:583:0
 1e08a44:    14 08             	r4 = r1			  ## remote_device_db.c:583:0
 1e08a46:    05 08             	r5 = r0			  ## remote_device_db.c:583:0
 1e08a48:    06 70             	r6 = 0			  ## remote_device_db.c:583:0
 1e08a4a:    62 14             	call -1852 <get_remote_test_flag : 1e08310 >			  ## remote_device_db.c:586:17
 1e08a4c:    03 20             	if (r0 == 0) goto 6 <handle_remote_dev_type+0x14 : 1e08a54 >			  ## remote_device_db.c:586:17
 1e08a4e:    60 08             	r0 = r6			  ## remote_device_db.c:619:1
 1e08a50:    18 0a             	sp += 48			  ## remote_device_db.c:619:1
 1e08a52:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:619:1
 1e08a54:    00 a1             	r0 = sp + 16
 1e08a56:    02 70             	r2 = 0			  ## remote_device_db.c:590:10
 1e08a58:    51 08             	r1 = r5			  ## remote_device_db.c:590:10
 1e08a5a:    16 16             	call -980 <get_database : 1e08688 >			  ## remote_device_db.c:590:10
 1e08a5c:    07 20             	if (r0 == 0) goto 14 <handle_remote_dev_type+0x2C : 1e08a6c >
 1e08a5e:    c0 f5 14 00       	r0 = b[sp+20] (u)
 1e08a62:    06 08             	r6 = r0
 1e08a64:    01 ff ff 40 22 00 	if (r4 != 255) goto 68 <handle_remote_dev_type+0x6E : 1e08aae >
 1e08a6a:    f1 1f             	goto -30 <handle_remote_dev_type+0xE : 1e08a4e >
 1e08a6c:    00 ff ff 40 ee ff 	if (r4 == 255) goto -36 <handle_remote_dev_type+0xE : 1e08a4e >
 1e08a72:    00 70             	r0 = 0
 1e08a74:    38 02             	[sp+12] = r0			  ## remote_device_db.c:596:13
 1e08a76:    28 02             	[sp+8] = r0			  ## remote_device_db.c:596:13
 1e08a78:    18 02             	[sp+4] = r0			  ## remote_device_db.c:596:13
 1e08a7a:    08 02             	[sp] = r0			  ## remote_device_db.c:596:13
 1e08a7c:    06 a1             	r6 = sp + 16			  ## remote_device_db.c:596:13
 1e08a7e:    01 70             	r1 = 0			  ## remote_device_db.c:597:13
 1e08a80:    02 72             	r2 = 32			  ## remote_device_db.c:597:13
 1e08a82:    60 08             	r0 = r6			  ## remote_device_db.c:597:13
 1e08a84:    97 f3 34 f2       	call 3138664 <memset : 106ef0 >			  ## remote_device_db.c:597:13
 1e08a88:    a0 9c             	r0 = r6 + 10			  ## remote_device_db.c:598:13
 1e08a8a:    62 70             	r2 = 6			  ## remote_device_db.c:598:13
 1e08a8c:    51 08             	r1 = r5			  ## remote_device_db.c:598:13
 1e08a8e:    97 f3 29 f2       	call 3138642 <memcpy : 106ee4 >			  ## remote_device_db.c:598:13
 1e08a92:    f0 7f             	r0 = 255			  ## remote_device_db.c:599:34
 1e08a94:    d0 f5 17 00       	b[sp+23] = r0			  ## remote_device_db.c:599:34
 1e08a98:    d0 f5 16 00       	b[sp+22] = r0			  ## remote_device_db.c:600:35
 1e08a9c:    30 70             	r0 = 3			  ## remote_device_db.c:601:39
 1e08a9e:    d0 f5 18 00       	b[sp+24] = r0			  ## remote_device_db.c:601:39
 1e08aa2:    01 a0             	r1 = sp + 0			  ## remote_device_db.c:601:39
 1e08aa4:    02 70             	r2 = 0			  ## remote_device_db.c:602:13
 1e08aa6:    50 08             	r0 = r5			  ## remote_device_db.c:602:13
 1e08aa8:    98 17             	call -208 <put_link_key : 1e089da >			  ## remote_device_db.c:602:13
 1e08aaa:    c0 f5 14 00       	r0 = b[sp+20] (u)			  ## remote_device_db.c:602:13
 1e08aae:    06 70             	r6 = 0
 1e08ab0:    40 f2 cd 0f       	if (r0 == r4) goto -102 <handle_remote_dev_type+0xE : 1e08a4e >
 1e08ab4:    d4 f5 14 00       	b[sp+20] = r4			  ## remote_device_db.c:614:28
 1e08ab8:    00 a1             	r0 = sp + 16			  ## remote_device_db.c:614:28
 1e08aba:    01 70             	r1 = 0			  ## remote_device_db.c:616:9
 1e08abc:    44 16             	call -888 <put_database : 1e08746 >			  ## remote_device_db.c:616:9
 1e08abe:    c7 1f             	goto -114 <handle_remote_dev_type+0xE : 1e08a4e >


check_l2cap_authentication_flag:
 1e08ac0:    78 01             	[--sp] = {rets, r8-r4}			  ## l2cap.c:229:0
 1e08ac2:    c3 ff 98 1a 00 00 	r3 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:229:0
 1e08ac8:    03 46             	r3 = [r3 + 0]			  ## l2cap.c:229:0
 1e08aca:    28 08             	r8 = r2			  ## l2cap.c:229:0
 1e08acc:    16 08             	r6 = r1			  ## l2cap.c:229:0
 1e08ace:    07 08             	r7 = r0			  ## l2cap.c:229:0
 1e08ad0:    34 fc 2c 00       	r4 = r3 + 44			  ## l2cap.c:229:0
 1e08ad4:    62 70             	r2 = 6			  ## l2cap.c:232:14
 1e08ad6:    41 08             	r1 = r4			  ## l2cap.c:232:14
 1e08ad8:    97 f3 08 f2       	call 3138576 <memcmp : 106eec >			  ## l2cap.c:232:14
 1e08adc:    0f 30             	if (r0 != 0) goto 30 <.GJTIE552_0_0_+0x6 : 1e08afc >			  ## l2cap.c:232:14
 1e08ade:    60 68             	r0 = b[r4 + 6] (u)			  ## l2cap.c:233:71
 1e08ae0:    21 fd 0f 09       	r1 = r0 & 15			  ## l2cap.c:233:71
 1e08ae4:    a1 e0 0a 10       	if (r1 != 10) goto 20 <.GJTIE552_0_0_+0x6 : 1e08afc >			  ## l2cap.c:233:71
 1e08ae8:    61 fc dc ff       	r1 = r6 + -36			  ## l2cap.c:235:17
 1e08aec:    31 e0 33 80       	if (r1 > 3) goto 102 <.GJTIE552_0_0_+0x60 : 1e08b56 >			  ## l2cap.c:235:17
 1e08af0:    a1 00             	tbb [r1]


.GJTIS552_0_0_:
 1e08af2:    02     < 2 : 0x2 >
 1e08af3:    27     < 39 : 0x27 >
 1e08af4:    2e     < 46 : 0x2E >
 1e08af5:    34     < 52 : 0x34 >
 1e08af6:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:242:93
 1e08afa:    2d 18             	goto 90 <.GJTIE552_0_0_+0x60 : 1e08b56 >			  ## l2cap.c:242:93
 1e08afc:    01 fd 02 69       	r1 = r6 | 2			  ## l2cap.c:255:9
 1e08b00:    00 72             	r0 = 32			  ## l2cap.c:255:9
 1e08b02:    61 e2 1c 10       	if (r1 != 38) goto 56 <.GJTIE552_0_0_+0x48 : 1e08b3e >			  ## l2cap.c:255:9
 1e08b06:    65 68             	r5 = b[r4 + 6] (u)
 1e08b08:    21 fd 0f 59       	r1 = r5 & 15			  ## l2cap.c:257:71
 1e08b0c:    a1 e0 17 00       	if (r1 == 10) goto 46 <.GJTIE552_0_0_+0x48 : 1e08b3e >			  ## l2cap.c:257:71
 1e08b10:    62 70             	r2 = 6			  ## l2cap.c:258:17
 1e08b12:    40 08             	r0 = r4			  ## l2cap.c:258:17
 1e08b14:    71 08             	r1 = r7			  ## l2cap.c:258:17
 1e08b16:    97 f3 e5 f1       	call 3138506 <memcpy : 106ee4 >			  ## l2cap.c:258:17
 1e08b1a:    20 fd f0 59       	r0 = r5 & 240			  ## l2cap.c:259:79
 1e08b1e:    00 fd 0a 09       	r0 = r0 | 10			  ## l2cap.c:259:79
 1e08b22:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:259:79
 1e08b24:    46 e2 04 10       	if (r6 != 36) goto 8 <.GJTIE552_0_0_+0x3A : 1e08b30 >			  ## l2cap.c:260:21
 1e08b28:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:262:96
 1e08b2c:    a0 70             	r0 = 10			  ## l2cap.c:263:93
 1e08b2e:    05 18             	goto 10 <.GJTIE552_0_0_+0x44 : 1e08b3a >			  ## l2cap.c:263:93
 1e08b30:    00 72             	r0 = 32			  ## l2cap.c:266:96
 1e08b32:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:266:96
 1e08b34:    a0 70             	r0 = 10			  ## l2cap.c:267:93
 1e08b36:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:267:93
 1e08b3a:    68 68             	b[r4 + 6] = r0
 1e08b3c:    80 08             	r0 = r8
 1e08b3e:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e08b40:    00 70             	r0 = 0
 1e08b42:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:238:90
 1e08b44:    28 58             	h[r4 + 4] = r0			  ## l2cap.c:238:90
 1e08b46:    08 48             	[r4 + 0] = r0			  ## l2cap.c:238:90
 1e08b48:    00 72             	r0 = 32			  ## l2cap.c:239:93
 1e08b4a:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:239:93
 1e08b4c:    04 18             	goto 8 <.GJTIE552_0_0_+0x60 : 1e08b56 >			  ## l2cap.c:239:93
 1e08b4e:    a0 70             	r0 = 10			  ## l2cap.c:245:90
 1e08b50:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:245:90
 1e08b54:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:245:90
 1e08b56:    70 68             	r0 = b[r4 + 7] (u)			  ## l2cap.c:250:78
 1e08b58:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e08b5a:    00 d1             	r0 = r0 >> 4			  ## l2cap.c:248:78
 1e08b5c:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1


remote_dev_company_ioctrl:
 1e08b5e:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:278:0
 1e08b60:    24 08             	r4 = r2			  ## l2cap.c:278:0
 1e08b62:    16 08             	r6 = r1			  ## l2cap.c:278:0
 1e08b64:    05 08             	r5 = r0			  ## l2cap.c:278:0
 1e08b66:    71 72             	r1 = 39			  ## l2cap.c:278:0
 1e08b68:    01 2c             	if (r6 == 0) goto 2 <remote_dev_company_ioctrl+0xE : 1e08b6c >			  ## l2cap.c:278:0
 1e08b6a:    61 72             	r1 = 38			  ## l2cap.c:278:0
 1e08b6c:    a9 17             	call -174 <check_l2cap_authentication_flag : 1e08ac0 >			  ## l2cap.c:285:11
 1e08b6e:    04 2c             	if (r6 == 0) goto 8 <remote_dev_company_ioctrl+0x1A : 1e08b78 >			  ## l2cap.c:285:11
 1e08b70:    03 28             	if (r4 == 0) goto 6 <remote_dev_company_ioctrl+0x1A : 1e08b78 >
 1e08b72:    50 08             	r0 = r5			  ## l2cap.c:287:9
 1e08b74:    41 08             	r1 = r4			  ## l2cap.c:287:9
 1e08b76:    64 17             	call -312 <handle_remote_dev_type : 1e08a40 >			  ## l2cap.c:287:9
 1e08b78:    56 01             	{pc, r6-r4} = [sp++]


connection_address_for_handle:
 1e08b7a:    c0 f3 bb 8e       	goto 73078 <lmp_private_remote_addr_for_handler : 1e1a8f4 >			  ## hci_vendor.c:117:0


hci_disconnect_cmd:
 1e08b7e:    c0 f3 7f 8f       	goto 73470 <lmp_hci_disconnect : 1e1aa80 >			  ## hci_vendor.c:1678:0


hci_get_outgoing_acl_packet_buffer:
 1e08b82:    34 00             	[--sp] = rets			  ## hci_vendor.c:1271:0
 1e08b84:    40 80             	r0 += 4			  ## hci_vendor.c:1272:55
 1e08b86:    80 f3 e2 8f       	call 73668 <lmp_private_get_tx_packet_buffer : 1e1ab4e >			  ## hci_vendor.c:1272:18
 1e08b8a:    30 00             	pc = [sp++]			  ## hci_vendor.c:1274:5


bt_store_16:
 1e08b8c:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:159:0
 1e08b90:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e08b92:    11 80             	r1 += 1			  ## utils.c:160:15
 1e08b94:    61 04             	r1 = r1.l (u)			  ## utils.c:161:5
 1e08b96:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:161:19
 1e08b9a:    20 00             	rts			  ## utils.c:162:1


l2cap_create_signaling_internal:
 1e08b9c:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap_signaling.c:85:0
 1e08b9e:    fe 0b             	sp += -4			  ## l2cap_signaling.c:85:0
 1e08ba0:    76 02             	r6 = [sp+28]			  ## l2cap_signaling.c:85:0
 1e08ba2:    25 08             	r5 = r2			  ## l2cap_signaling.c:85:0
 1e08ba4:    04 08             	r4 = r0			  ## l2cap_signaling.c:85:0
 1e08ba6:    0e 02             	[sp] = r6			  ## l2cap_signaling.c:85:0
 1e08ba8:    02 fd 20 1a       	r2 = r1 | 8192			  ## l2cap_signaling.c:93:39
 1e08bac:    01 70             	r1 = 0			  ## l2cap_signaling.c:93:5
 1e08bae:    ee 17             	call -36 <bt_store_16 : 1e08b8c >			  ## l2cap_signaling.c:93:5
 1e08bb0:    61 70             	r1 = 6			  ## l2cap_signaling.c:95:5
 1e08bb2:    52 08             	r2 = r5			  ## l2cap_signaling.c:95:5
 1e08bb4:    eb 17             	call -42 <bt_store_16 : 1e08b8c >			  ## l2cap_signaling.c:95:5
 1e08bb6:    60 02             	r0 = [sp+24]
 1e08bb8:    99 c0             	r1 = r3 << 2			  ## l2cap_signaling.c:103:50
 1e08bba:    c2 ff 00 7b e0 01 	r2 = 31488768 <l2cap_signaling_commands_format : 1e07b00 >			  ## l2cap_signaling.c:103:14
 1e08bc0:    21 09             	r1 += r2			  ## l2cap_signaling.c:103:50
 1e08bc2:    06 f6 fc 1f       	r6 = [r1 + -4]			  ## l2cap_signaling.c:103:14
 1e08bc6:    8b 68             	b[r4 + 8] = r3			  ## l2cap_signaling.c:97:19
 1e08bc8:    98 68             	b[r4 + 9] = r0			  ## l2cap_signaling.c:99:19
 1e08bca:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e08bce:    2e 20             	if (r0 == 0) goto 92 <l2cap_create_signaling_internal+0x90 : 1e08c2c >
 1e08bd0:    c3 70             	r3 = 12
 1e08bd2:    10 04             	r0 = r0.b0 (s)			  ## l2cap_signaling.c:105:17
 1e08bd4:    01 fc cf ff       	r1 = r0 + -49			  ## l2cap_signaling.c:105:9
 1e08bd8:    21 e0 12 20       	if (r1 >= 2) goto 36 <l2cap_create_signaling_internal+0x64 : 1e08c00 >			  ## l2cap_signaling.c:105:9
 1e08bdc:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:108:20
 1e08bde:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:108:20
 1e08be0:    09 02             	[sp] = r1			  ## l2cap_signaling.c:108:20
 1e08be2:    00 40             	r0 = [r0 + 0]			  ## l2cap_signaling.c:108:20
 1e08be4:    e1 04             	r1 = r3.l (u)			  ## l2cap_signaling.c:110:13
 1e08be6:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:110:31
 1e08bea:    02 f9 ff 6f       	r2 = b[r6 + -1] (u)			  ## l2cap_signaling.c:111:17
 1e08bee:    11 96             	r1 = r3 + 1			  ## l2cap_signaling.c:110:27
 1e08bf0:    22 e3 17 10       	if (r2 != 50) goto 46 <l2cap_create_signaling_internal+0x86 : 1e08c22 >			  ## l2cap_signaling.c:110:27
 1e08bf4:    61 04             	r1 = r1.l (u)			  ## l2cap_signaling.c:112:17
 1e08bf6:    00 d2             	r0 = r0 >> 8			  ## l2cap_signaling.c:112:42
 1e08bf8:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:112:35
 1e08bfc:    23 80             	r3 += 2			  ## l2cap_signaling.c:112:31
 1e08bfe:    12 18             	goto 36 <l2cap_create_signaling_internal+0x88 : 1e08c24 >			  ## l2cap_signaling.c:112:31
 1e08c00:    40 e4 10 10       	if (r0 != 68) goto 32 <l2cap_create_signaling_internal+0x88 : 1e08c24 >
 1e08c04:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:117:20
 1e08c06:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:117:20
 1e08c08:    09 02             	[sp] = r1			  ## l2cap_signaling.c:117:20
 1e08c0a:    01 02             	r1 = [sp]			  ## l2cap_signaling.c:119:20
 1e08c0c:    05 40             	r5 = [r0 + 0]			  ## l2cap_signaling.c:117:20
 1e08c0e:    40 92             	r0 = r1 + 4			  ## l2cap_signaling.c:119:20
 1e08c10:    08 02             	[sp] = r0			  ## l2cap_signaling.c:119:20
 1e08c12:    01 42             	r1 = [r1 + 0]			  ## l2cap_signaling.c:119:20
 1e08c14:    e7 04             	r7 = r3.l (u)			  ## l2cap_signaling.c:122:21
 1e08c16:    c0 b9             	r0 = r4 + r7			  ## l2cap_signaling.c:122:21
 1e08c18:    52 08             	r2 = r5			  ## l2cap_signaling.c:122:13
 1e08c1a:    97 f3 63 f1       	call 3138246 <memcpy : 106ee4 >			  ## l2cap_signaling.c:122:13
 1e08c1e:    c3 bb             	r3 = r5 + r7			  ## l2cap_signaling.c:124:17
 1e08c20:    01 18             	goto 2 <l2cap_create_signaling_internal+0x88 : 1e08c24 >			  ## l2cap_signaling.c:124:17
 1e08c22:    13 08             	r3 = r1
 1e08c24:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e08c28:    d4 31             	if (r0 != 0) goto -88 <l2cap_create_signaling_internal+0x36 : 1e08bd2 >			  ## l2cap_signaling.c:104:12
 1e08c2a:    01 18             	goto 2 <l2cap_create_signaling_internal+0x92 : 1e08c2e >			  ## l2cap_signaling.c:104:12
 1e08c2c:    c3 70             	r3 = 12
 1e08c2e:    30 fc fc ff       	r0 = r3 + -4			  ## l2cap_signaling.c:137:37
 1e08c32:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:137:5
 1e08c34:    21 70             	r1 = 2			  ## l2cap_signaling.c:137:5
 1e08c36:    40 08             	r0 = r4			  ## l2cap_signaling.c:137:5
 1e08c38:    a9 17             	call -174 <bt_store_16 : 1e08b8c >			  ## l2cap_signaling.c:137:5
 1e08c3a:    30 fc f8 ff       	r0 = r3 + -8			  ## l2cap_signaling.c:139:41
 1e08c3e:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:139:5
 1e08c40:    41 70             	r1 = 4			  ## l2cap_signaling.c:139:5
 1e08c42:    40 08             	r0 = r4			  ## l2cap_signaling.c:139:5
 1e08c44:    a3 17             	call -186 <bt_store_16 : 1e08b8c >			  ## l2cap_signaling.c:139:5
 1e08c46:    30 fc f4 ff       	r0 = r3 + -12			  ## l2cap_signaling.c:141:37
 1e08c4a:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:141:5
 1e08c4c:    a1 70             	r1 = 10			  ## l2cap_signaling.c:141:5
 1e08c4e:    40 08             	r0 = r4			  ## l2cap_signaling.c:141:5
 1e08c50:    9d 17             	call -198 <bt_store_16 : 1e08b8c >			  ## l2cap_signaling.c:141:5
 1e08c52:    e0 04             	r0 = r3.l (u)			  ## l2cap_signaling.c:147:5
 1e08c54:    02 0a             	sp += 4			  ## l2cap_signaling.c:147:5
 1e08c56:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap_signaling.c:147:5


bredr_hci_send_acl_packet:
 1e08c58:    c0 f3 85 8f       	goto 73482 <lmp_hci_send_packet : 1e1ab66 >			  ## hci_vendor.c:1278:0


l2cap_send_signaling_packet:
 1e08c5c:    63 01             	[--sp] = {r3}			  ## l2cap.c:500:0
 1e08c5e:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:500:0
 1e08c60:    f8 0b             	sp += -16			  ## l2cap.c:500:0
 1e08c62:    26 08             	r6 = r2			  ## l2cap.c:500:0
 1e08c64:    14 08             	r4 = r1			  ## l2cap.c:500:0
 1e08c66:    05 08             	r5 = r0			  ## l2cap.c:500:0
 1e08c68:    a0 c0             	r0 = r4 << 2			  ## l2cap_signaling.c:159:50
 1e08c6a:    c1 ff 00 7b e0 01 	r1 = 31488768 <l2cap_signaling_commands_format : 1e07b00 >			  ## l2cap_signaling.c:159:14
 1e08c70:    10 09             	r0 += r1			  ## l2cap_signaling.c:159:50
 1e08c72:    01 f6 fc 0f       	r1 = [r0 + -4]			  ## l2cap_signaling.c:159:14
 1e08c76:    40 a2             	r0 = sp + 36
 1e08c78:    28 02             	[sp+8] = r0			  ## l2cap.c:506:5
 1e08c7a:    38 02             	[sp+12] = r0			  ## l2cap.c:506:5
 1e08c7c:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e08c80:    1c 24             	if (r2 == 0) goto 56 <l2cap_send_signaling_packet+0x5E : 1e08cba >
 1e08c82:    80 70             	r0 = 8
 1e08c84:    92 04             	r2 = r2.b0 (s)			  ## l2cap_signaling.c:161:17
 1e08c86:    23 fc cf ff       	r3 = r2 + -49			  ## l2cap_signaling.c:161:9
 1e08c8a:    23 e0 0a 20       	if (r3 >= 2) goto 20 <l2cap_send_signaling_packet+0x46 : 1e08ca2 >			  ## l2cap_signaling.c:161:9
 1e08c8e:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:164:20
 1e08c90:    42 80             	r2 += 4			  ## l2cap_signaling.c:164:20
 1e08c92:    3a 02             	[sp+12] = r2			  ## l2cap_signaling.c:164:20
 1e08c94:    03 f9 ff 1f       	r3 = b[r1 + -1] (u)			  ## l2cap_signaling.c:167:17
 1e08c98:    22 70             	r2 = 2			  ## l2cap_signaling.c:167:17
 1e08c9a:    23 e3 09 00       	if (r3 == 50) goto 18 <l2cap_send_signaling_packet+0x54 : 1e08cb0 >			  ## l2cap_signaling.c:167:17
 1e08c9e:    12 70             	r2 = 1
 1e08ca0:    07 18             	goto 14 <l2cap_send_signaling_packet+0x54 : 1e08cb0 >
 1e08ca2:    42 e4 06 10       	if (r2 != 68) goto 12 <l2cap_send_signaling_packet+0x56 : 1e08cb2 >
 1e08ca6:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:173:20
 1e08ca8:    43 94             	r3 = r2 + 4			  ## l2cap_signaling.c:173:20
 1e08caa:    3b 02             	[sp+12] = r3			  ## l2cap_signaling.c:173:20
 1e08cac:    02 44             	r2 = [r2 + 0]			  ## l2cap_signaling.c:173:20
 1e08cae:    20 04             	r0 = r0.l (u)			  ## l2cap_signaling.c:174:17
 1e08cb0:    20 09             	r0 += r2
 1e08cb2:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e08cb6:    e6 35             	if (r2 != 0) goto -52 <l2cap_send_signaling_packet+0x28 : 1e08c84 >			  ## l2cap_signaling.c:160:12
 1e08cb8:    01 18             	goto 2 <l2cap_send_signaling_packet+0x60 : 1e08cbc >			  ## l2cap_signaling.c:160:12
 1e08cba:    80 70             	r0 = 8
 1e08cbc:    20 04             	r0 = r0.l (u)			  ## l2cap.c:510:18
 1e08cbe:    61 17             	call -318 <hci_get_outgoing_acl_packet_buffer : 1e08b82 >			  ## l2cap.c:510:18
 1e08cc0:    07 08             	r7 = r0			  ## l2cap.c:510:18
 1e08cc2:    02 3e             	if (r7 != 0) goto 4 <l2cap_send_signaling_packet+0x6C : 1e08cc8 >
 1e08cc4:    8f f3 e7 d3       	call 2074574 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e08cc8:    40 a2             	r0 = sp + 36
 1e08cca:    28 02             	[sp+8] = r0			  ## l2cap.c:512:5
 1e08ccc:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:188:12
 1e08cce:    80 05             	r0 = r6.b0 (u)			  ## l2cap_signaling.c:188:72
 1e08cd0:    12 70             	r2 = 1			  ## l2cap_signaling.c:188:12
 1e08cd2:    08 02             	[sp] = r0			  ## l2cap_signaling.c:188:12
 1e08cd4:    70 08             	r0 = r7			  ## l2cap_signaling.c:188:12
 1e08cd6:    51 08             	r1 = r5			  ## l2cap_signaling.c:188:12
 1e08cd8:    43 08             	r3 = r4			  ## l2cap_signaling.c:188:12
 1e08cda:    60 17             	call -320 <l2cap_create_signaling_internal : 1e08b9c >			  ## l2cap_signaling.c:188:12
 1e08cdc:    01 08             	r1 = r0			  ## l2cap_signaling.c:188:12
 1e08cde:    70 08             	r0 = r7			  ## l2cap.c:516:12
 1e08ce0:    bb 17             	call -138 <bredr_hci_send_acl_packet : 1e08c58 >			  ## l2cap.c:516:12
 1e08ce2:    08 0a             	sp += 16			  ## l2cap.c:516:12
 1e08ce4:    17 01             	{rets, r7-r4} = [sp++]			  ## l2cap.c:516:12
 1e08ce6:    02 0a             	sp += 4			  ## l2cap.c:516:12
 1e08ce8:    20 00             	rts			  ## l2cap.c:516:12


hci_number_free_acl_slots_for_connection_type:
 1e08cea:    75 01             	[--sp] = {rets, r5, r4}			  ## hci_vendor.c:1958:0
 1e08cec:    c2 ff 60 18 00 00 	r2 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1958:0
 1e08cf2:    04 44             	r4 = [r2 + 0]			  ## hci_vendor.c:1958:0
 1e08cf4:    01 70             	r1 = 0			  ## hci_vendor.c:1958:0
 1e08cf6:    03 70             	r3 = 0			  ## hci_vendor.c:1958:0
 1e08cf8:    09 28             	if (r4 == 0) goto 18 <hci_number_free_acl_slots_for_connection_type+0x22 : 1e08d0c >			  ## hci_vendor.c:1958:0
 1e08cfa:    35 48             	r5 = [r4 + 12]			  ## hci_vendor.c:1965:25
 1e08cfc:    00 ff ff 50 03 00 	if (r5 == 255) goto 6 <hci_number_free_acl_slots_for_connection_type+0x1E : 1e08d08 >			  ## hci_vendor.c:1965:25
 1e08d02:    05 f9 b6 44       	r5 = b[r4 + 1206] (u)
 1e08d06:    53 09             	r3 += r5			  ## hci_vendor.c:1969:33
 1e08d08:    04 48             	r4 = [r4 + 0]
 1e08d0a:    f7 39             	if (r4 != 0) goto -18 <hci_number_free_acl_slots_for_connection_type+0x10 : 1e08cfa >
 1e08d0c:    02 f9 1a 22       	r2 = b[r2 + 538] (u)			  ## hci_vendor.c:1981:22
 1e08d10:    03 24             	if (r2 == 0) goto 6 <hci_number_free_acl_slots_for_connection_type+0x2E : 1e08d18 >			  ## hci_vendor.c:1981:22
 1e08d12:    e1 b4             	r1 = r2 - r3			  ## hci_vendor.c:1983:63
 1e08d14:    01 e0 08 b0       	ifs (r1 < 0) goto 16 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e08d28 >
 1e08d18:    00 ff fe 00 05 00 	if (r0 == 254) goto 10 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e08d28 >
 1e08d1e:    01 ff ff 00 04 00 	if (r0 != 255) goto 8 <hci_number_free_acl_slots_for_connection_type+0x42 : 1e08d2c >
 1e08d24:    10 70             	r0 = 1
 1e08d26:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2015:1
 1e08d28:    00 70             	r0 = 0
 1e08d2a:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2015:1
 1e08d2c:    10 70             	r0 = 1			  ## hci_vendor.c:2013:9
 1e08d2e:    01 24             	if (r2 == 0) goto 2 <hci_number_free_acl_slots_for_connection_type+0x48 : 1e08d32 >
 1e08d30:    10 08             	r0 = r1			  ## hci_vendor.c:2013:9
 1e08d32:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2015:1


hci_number_free_acl_slots_for_handle:
 1e08d34:    34 00             	[--sp] = rets			  ## hci_vendor.c:2018:0
 1e08d36:    bf f3 d0 f9       	call -3168 <le_hci_connection_for_handle : 1e080da >			  ## hci_vendor.c:2020:39
 1e08d3a:    03 20             	if (r0 == 0) goto 6 <hci_number_free_acl_slots_for_handle+0xE : 1e08d42 >
 1e08d3c:    30 40             	r0 = [r0 + 12]			  ## hci_vendor.c:2024:70
 1e08d3e:    88 01             	{rets} = [sp++]			  ## hci_vendor.c:2024:12
 1e08d40:    d4 1f             	goto -88 <hci_number_free_acl_slots_for_connection_type : 1e08cea >			  ## hci_vendor.c:2024:12
 1e08d42:    00 70             	r0 = 0
 1e08d44:    30 00             	pc = [sp++]			  ## hci_vendor.c:2025:1


hci_can_send_acl_packet_now:
 1e08d46:    34 00             	[--sp] = rets			  ## hci_vendor.c:1781:0
 1e08d48:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1782:22
 1e08d4e:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1782:22
 1e08d52:    01 08             	r1 = r0			  ## hci_vendor.c:1782:22
 1e08d54:    00 70             	r0 = 0
 1e08d56:    07 34             	if (r2 != 0) goto 14 <hci_can_send_acl_packet_now+0x20 : 1e08d66 >
 1e08d58:    10 08             	r0 = r1			  ## hci_vendor.c:2042:12
 1e08d5a:    ec 17             	call -40 <hci_number_free_acl_slots_for_handle : 1e08d34 >			  ## hci_vendor.c:2042:12
 1e08d5c:    01 08             	r1 = r0			  ## hci_vendor.c:2042:12
 1e08d5e:    10 70             	r0 = 1			  ## hci_vendor.c:2042:61
 1e08d60:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_packet_now+0x20 : 1e08d66 >			  ## hci_vendor.c:2042:61
 1e08d64:    00 70             	r0 = 0			  ## hci_vendor.c:2042:61
 1e08d66:    30 00             	pc = [sp++]			  ## hci_vendor.c:1786:1


hci_reserve_packet_buffer:
 1e08d68:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1789:0
 1e08d6e:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1790:22
 1e08d72:    00 70             	r0 = 0			  ## hci_vendor.c:1790:22
 1e08d74:    03 34             	if (r2 != 0) goto 6 <hci_reserve_packet_buffer+0x14 : 1e08d7c >			  ## hci_vendor.c:1790:22
 1e08d76:    10 70             	r0 = 1
 1e08d78:    10 f9 15 12       	b[r1 + 533] = r0			  ## hci_vendor.c:1793:45
 1e08d7c:    20 00             	rts			  ## hci_vendor.c:1795:1


le_hci_send_acl_packet_fragments:
 1e08d7e:    7b 01             	[--sp] = {rets, r11-r4}			  ## hci_vendor.c:1123:0
 1e08d80:    cb ff 60 18 00 00 	r11 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1123:0
 1e08d86:    04 f7 1c b2       	r4 = h[r11 + 540] (u)			  ## hci_vendor.c:1123:0
 1e08d8a:    0a 08             	r10 = r0			  ## hci_vendor.c:1123:0
 1e08d8c:    09 70             	r9 = 0			  ## hci_vendor.c:1123:0
 1e08d8e:    c8 ff ff df 00 00 	r8 = 57343 <_nv_pre_end+0x24FF : dfff >			  ## hci_vendor.c:1123:0
 1e08d94:    05 f7 16 b2       	r5 = h[r11 + 534] (u)			  ## hci_vendor.c:1131:54
 1e08d98:    00 f7 18 b2       	r0 = h[r11 + 536] (u)			  ## hci_vendor.c:1132:46
 1e08d9c:    67 b1             	r7 = r0 - r5			  ## hci_vendor.c:1132:88
 1e08d9e:    46 08             	r6 = r4			  ## hci_vendor.c:1136:13
 1e08da0:    47 f2 01 c0       	ifs (r7 > r4) goto 2 <le_hci_send_acl_packet_fragments+0x28 : 1e08da6 >			  ## hci_vendor.c:1136:13
 1e08da4:    76 08             	r6 = r7			  ## hci_vendor.c:1136:13
 1e08da6:    50 fc fc ff       	r0 = r5 + -4			  ## hci_vendor.c:1131:76
 1e08daa:    23 04             	r3 = r0.l (u)			  ## hci_vendor.c:1131:76
 1e08dac:    0e 26             	if (r3 == 0) goto 28 <le_hci_send_acl_packet_fragments+0x4C : 1e08dca >			  ## hci_vendor.c:1131:76
 1e08dae:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## hci_vendor.c:1143:41
 1e08db2:    01 f9 08 b0       	r1 = b[r11 + 8] (u)			  ## hci_vendor.c:1143:41
 1e08db6:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1144:60
 1e08dba:    00 fd 10 1a       	r0 = r1 | 4096			  ## hci_vendor.c:1144:60
 1e08dbe:    e2 fd 80 20       	r2 = r0 & r8			  ## hci_vendor.c:1145:13
 1e08dc2:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1143:41
 1e08dc6:    31 08             	r1 = r3			  ## hci_vendor.c:1145:13
 1e08dc8:    e1 16             	call -574 <bt_store_16 : 1e08b8c >			  ## hci_vendor.c:1145:13
 1e08dca:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1149:9
 1e08dce:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1149:9
 1e08dd0:    51 fc fe ff       	r1 = r5 + -2			  ## hci_vendor.c:1149:68
 1e08dd4:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1149:9
 1e08dd6:    da 16             	call -588 <bt_store_16 : 1e08b8c >			  ## hci_vendor.c:1149:9
 1e08dd8:    00 f9 b6 a4       	r0 = b[r10 + 1206] (u)			  ## hci_vendor.c:1152:41
 1e08ddc:    10 80             	r0 += 1			  ## hci_vendor.c:1152:41
 1e08dde:    10 f9 b6 a4       	b[r10 + 1206] = r0			  ## hci_vendor.c:1152:41
 1e08de2:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x74 : 1e08df2 >			  ## hci_vendor.c:1155:13
 1e08de6:    00 f7 16 b2       	r0 = h[r11 + 534] (u)			  ## hci_vendor.c:1157:48
 1e08dea:    60 09             	r0 += r6			  ## hci_vendor.c:1157:48
 1e08dec:    10 f7 16 b2       	h[r11 + 534] = r0			  ## hci_vendor.c:1157:48
 1e08df0:    04 18             	goto 8 <le_hci_send_acl_packet_fragments+0x7C : 1e08dfa >			  ## hci_vendor.c:1157:48
 1e08df2:    19 f7 16 b2       	h[r11 + 534] = r9			  ## hci_vendor.c:1160:48
 1e08df6:    19 f7 18 b2       	h[r11 + 536] = r9			  ## hci_vendor.c:1161:55
 1e08dfa:    80 fb b0 03       	r0 = r3 + r11			  ## hci_vendor.c:1165:28
 1e08dfe:    80 80             	r0 += 8			  ## hci_vendor.c:1165:28
 1e08e00:    41 9c             	r1 = r6 + 4			  ## hci_vendor.c:1166:57
 1e08e02:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1168:9
 1e08e04:    80 f3 1b 66       	call 52278 <le_hci_send_acl_packet : 1e15a3e >			  ## hci_vendor.c:1168:9
 1e08e08:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x9A : 1e08e18 >			  ## hci_vendor.c:1171:13
 1e08e0c:    00 f7 0a a0       	r0 = h[r10 + 10] (u)			  ## hci_vendor.c:2042:12
 1e08e10:    91 17             	call -222 <hci_number_free_acl_slots_for_handle : 1e08d34 >			  ## hci_vendor.c:2042:12
 1e08e12:    00 e0 bf cf       	ifs (r0 > 0) goto -130 <le_hci_send_acl_packet_fragments+0x16 : 1e08d94 >			  ## hci_vendor.c:2042:12
 1e08e16:    5b 01             	{pc, r11-r4} = [sp++]			  ## hci_vendor.c:2042:12
 1e08e18:    b0 fc 15 02       	r0 = r11 + 533			  ## hci_vendor.c:1875:45
 1e08e1c:    01 70             	r1 = 0			  ## hci_vendor.c:1875:45
 1e08e1e:    52 70             	r2 = 5			  ## hci_vendor.c:1875:45
 1e08e20:    97 f3 66 f0       	call 3137740 <memset : 106ef0 >			  ## hci_vendor.c:1875:45
 1e08e24:    5b 01             	{pc, r11-r4} = [sp++]


hci_le_send_acl_packet_buffer:
 1e08e26:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1223:0
 1e08e28:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1223:0
 1e08e2e:    01 f9 15 72       	r1 = b[r7 + 533] (u)			  ## hci_vendor.c:1225:23
 1e08e32:    05 08             	r5 = r0			  ## hci_vendor.c:1225:23
 1e08e34:    74 75             	r4 = 87			  ## hci_vendor.c:1225:23
 1e08e36:    1e 22             	if (r1 == 0) goto 60 <hci_le_send_acl_packet_buffer+0x4E : 1e08e74 >			  ## hci_vendor.c:1225:23
 1e08e38:    90 6e             	r0 = b[r7 + 9] (u)			  ## hci_vendor.c:1230:35
 1e08e3a:    81 6e             	r1 = b[r7 + 8] (u)			  ## hci_vendor.c:1230:35
 1e08e3c:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:1230:35
 1e08e3e:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:1230:35
 1e08e42:    e0 fd 10 60       	r6 = r0 | r1			  ## hci_vendor.c:1230:35
 1e08e46:    60 08             	r0 = r6			  ## hci_vendor.c:2042:12
 1e08e48:    75 17             	call -278 <hci_number_free_acl_slots_for_handle : 1e08d34 >			  ## hci_vendor.c:2042:12
 1e08e4a:    00 e0 0c d0       	ifs (r0 <= 0) goto 24 <hci_le_send_acl_packet_buffer+0x40 : 1e08e66 >			  ## hci_vendor.c:2042:12
 1e08e4e:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1238:39
 1e08e50:    bf f3 43 f9       	call -3450 <le_hci_connection_for_handle : 1e080da >			  ## hci_vendor.c:1238:39
 1e08e54:    0c 20             	if (r0 == 0) goto 24 <hci_le_send_acl_packet_buffer+0x48 : 1e08e6e >
 1e08e56:    15 f7 18 72       	h[r7 + 536] = r5			  ## hci_vendor.c:1250:47
 1e08e5a:    41 70             	r1 = 4			  ## hci_vendor.c:1252:40
 1e08e5c:    11 f7 16 72       	h[r7 + 534] = r1			  ## hci_vendor.c:1252:40
 1e08e60:    8e 17             	call -228 <le_hci_send_acl_packet_fragments : 1e08d7e >			  ## hci_vendor.c:1254:12
 1e08e62:    04 70             	r4 = 0
 1e08e64:    07 18             	goto 14 <hci_le_send_acl_packet_buffer+0x4E : 1e08e74 >
 1e08e66:    00 70             	r0 = 0			  ## hci_vendor.c:1875:45
 1e08e68:    10 f9 15 72       	b[r7 + 533] = r0			  ## hci_vendor.c:1875:45
 1e08e6c:    03 18             	goto 6 <hci_le_send_acl_packet_buffer+0x4E : 1e08e74 >			  ## hci_vendor.c:1875:45
 1e08e6e:    04 70             	r4 = 0
 1e08e70:    14 f9 15 72       	b[r7 + 533] = r4			  ## hci_vendor.c:1875:45
 1e08e74:    40 08             	r0 = r4			  ## hci_vendor.c:1255:1
 1e08e76:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1255:1


l2cap_send_le_signaling_packet:
 1e08e78:    63 01             	[--sp] = {r3}			  ## l2cap.c:523:0
 1e08e7a:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:523:0
 1e08e7c:    fa 0b             	sp += -12			  ## l2cap.c:523:0
 1e08e7e:    26 08             	r6 = r2			  ## l2cap.c:523:0
 1e08e80:    14 08             	r4 = r1			  ## l2cap.c:523:0
 1e08e82:    05 08             	r5 = r0			  ## l2cap.c:523:0
 1e08e84:    60 17             	call -320 <hci_can_send_acl_packet_now : 1e08d46 >			  ## l2cap.c:529:10
 1e08e86:    0e 20             	if (r0 == 0) goto 28 <l2cap_send_le_signaling_packet+0x2C : 1e08ea4 >			  ## l2cap.c:529:10
 1e08e88:    6f 17             	call -290 <hci_reserve_packet_buffer : 1e08d68 >			  ## l2cap.c:533:5
 1e08e8a:    c0 a1             	r0 = sp + 28			  ## l2cap.c:533:5
 1e08e8c:    28 02             	[sp+8] = r0			  ## l2cap.c:537:5
 1e08e8e:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:194:12
 1e08e90:    81 05             	r1 = r6.b0 (u)			  ## l2cap_signaling.c:194:72
 1e08e92:    c0 ff 68 18 00 00 	r0 = 6248 <report_irq_stack_end+0x8 : 1868 >			  ## l2cap_signaling.c:194:12
 1e08e98:    52 70             	r2 = 5			  ## l2cap_signaling.c:194:12
 1e08e9a:    09 02             	[sp] = r1			  ## l2cap_signaling.c:194:12
 1e08e9c:    51 08             	r1 = r5			  ## l2cap_signaling.c:194:12
 1e08e9e:    43 08             	r3 = r4			  ## l2cap_signaling.c:194:12
 1e08ea0:    7d 16             	call -774 <l2cap_create_signaling_internal : 1e08b9c >			  ## l2cap_signaling.c:194:12
 1e08ea2:    c1 17             	call -126 <hci_le_send_acl_packet_buffer : 1e08e26 >			  ## l2cap.c:541:5
 1e08ea4:    06 0a             	sp += 12
 1e08ea6:    16 01             	{rets, r6-r4} = [sp++]			  ## l2cap.c:542:1
 1e08ea8:    02 0a             	sp += 4			  ## l2cap.c:542:1
 1e08eaa:    20 00             	rts			  ## l2cap.c:542:1


btstack_memory_l2cap_channel_free:
 1e08eac:    41 70             	r1 = 4			  ## btstack_memory.c:133:0
 1e08eae:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:133:0
 1e08eb0:    05 24             	if (r2 == 0) goto 10 <btstack_memory_l2cap_channel_free+0x10 : 1e08ebc >			  ## btstack_memory.c:133:0
 1e08eb2:    23 08             	r3 = r2			  ## btstack_memory.c:133:0
 1e08eb4:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_l2cap_channel_free+0x14 : 1e08ec0 >			  ## btstack_memory.c:133:0
 1e08eb8:    03 46             	r3 = [r3 + 0]			  ## btstack_memory.c:133:0
 1e08eba:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_l2cap_channel_free+0x8 : 1e08eb4 >			  ## btstack_memory.c:133:0
 1e08ebc:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e08ebe:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e08ec0:    20 00             	rts			  ## btstack_memory.c:135:1


l2cap_dispatch:
 1e08ec2:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:310:0
 1e08ec4:    fe 0b             	sp += -4			  ## l2cap.c:310:0
 1e08ec6:    36 40             	r6 = [r0 + 12]			  ## l2cap.c:311:18
 1e08ec8:    f4 50             	r4 = h[r0 + 30] (u)			  ## l2cap.c:314:94
 1e08eca:    25 08             	r5 = r2			  ## l2cap.c:314:94
 1e08ecc:    03 2c             	if (r6 == 0) goto 6 <l2cap_dispatch+0x12 : 1e08ed4 >			  ## l2cap.c:311:9
 1e08ece:    10 08             	r0 = r1			  ## l2cap.c:312:9
 1e08ed0:    41 08             	r1 = r4			  ## l2cap.c:312:9
 1e08ed2:    09 18             	goto 18 <l2cap_dispatch+0x24 : 1e08ee6 >
 1e08ed4:    c2 ff 98 1a 00 00 	r2 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:314:11
 1e08eda:    02 44             	r2 = [r2 + 0]			  ## l2cap.c:314:11
 1e08edc:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:314:49
 1e08ede:    06 44             	r6 = [r2 + 0]			  ## l2cap.c:314:24
 1e08ee0:    0b 02             	[sp] = r3			  ## l2cap.c:314:9
 1e08ee2:    42 08             	r2 = r4			  ## l2cap.c:314:9
 1e08ee4:    53 08             	r3 = r5			  ## l2cap.c:314:9
 1e08ee6:    86 00             	call r6
 1e08ee8:    02 0a             	sp += 4
 1e08eea:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:316:1


l2cap_emit_channel_opened:
 1e08eec:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:319:0
 1e08eee:    f4 0b             	sp += -24			  ## l2cap.c:319:0
 1e08ef0:    04 08             	r4 = r0			  ## l2cap.c:319:0
 1e08ef2:    00 77             	r0 = 112			  ## l2cap.c:325:14
 1e08ef4:    d0 f5 03 00       	b[sp+3] = r0			  ## l2cap.c:325:14
 1e08ef8:    30 71             	r0 = 19			  ## l2cap.c:325:14
 1e08efa:    d0 f5 04 00       	b[sp+4] = r0			  ## l2cap.c:326:14
 1e08efe:    d1 f5 05 00       	b[sp+5] = r1			  ## l2cap.c:327:14
 1e08f02:    35 a0             	r5 = sp + 3			  ## l2cap.c:327:14
 1e08f04:    30 9a             	r0 = r5 + 3			  ## l2cap.c:328:19
 1e08f06:    61 99             	r1 = r4 + 22			  ## l2cap.c:328:29
 1e08f08:    62 70             	r2 = 6			  ## utils.c:188:5
 1e08f0a:    97 f3 eb ef       	call 3137494 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e08f0e:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:329:37
 1e08f10:    d0 f5 0c 00       	b[sp+12] = r0			  ## utils.c:160:19
 1e08f14:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08f16:    d0 f5 0d 00       	b[sp+13] = r0			  ## utils.c:161:19
 1e08f1a:    e0 58             	r0 = h[r4 + 28] (u)			  ## l2cap.c:330:55
 1e08f1c:    d0 f5 0e 00       	b[sp+14] = r0			  ## utils.c:160:19
 1e08f20:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08f22:    d0 f5 0f 00       	b[sp+15] = r0			  ## utils.c:161:19
 1e08f26:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:331:55
 1e08f28:    d0 f5 10 00       	b[sp+16] = r0			  ## utils.c:160:19
 1e08f2c:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08f2e:    d0 f5 11 00       	b[sp+17] = r0			  ## utils.c:161:19
 1e08f32:    00 59             	r0 = h[r4 + 32] (u)			  ## l2cap.c:332:55
 1e08f34:    d0 f5 12 00       	b[sp+18] = r0			  ## utils.c:160:19
 1e08f38:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08f3a:    d0 f5 13 00       	b[sp+19] = r0			  ## utils.c:161:19
 1e08f3e:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:333:55
 1e08f40:    d0 f5 14 00       	b[sp+20] = r0			  ## utils.c:160:19
 1e08f44:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08f46:    d0 f5 15 00       	b[sp+21] = r0			  ## utils.c:161:19
 1e08f4a:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:334:55
 1e08f4c:    d0 f5 16 00       	b[sp+22] = r0			  ## utils.c:160:19
 1e08f50:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08f52:    d0 f5 17 00       	b[sp+23] = r0			  ## utils.c:161:19
 1e08f56:    41 70             	r1 = 4			  ## l2cap.c:335:5
 1e08f58:    53 71             	r3 = 21			  ## l2cap.c:335:5
 1e08f5a:    40 08             	r0 = r4			  ## l2cap.c:335:5
 1e08f5c:    52 08             	r2 = r5			  ## l2cap.c:335:5
 1e08f5e:    b1 17             	call -158 <l2cap_dispatch : 1e08ec2 >			  ## l2cap.c:335:5
 1e08f60:    0c 0a             	sp += 24			  ## l2cap.c:335:5
 1e08f62:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:336:1


l2cap_emit_credits:
 1e08f64:    34 00             	[--sp] = rets			  ## l2cap.c:367:0
 1e08f66:    fc 0b             	sp += -8			  ## l2cap.c:367:0
 1e08f68:    42 77             	r2 = 116			  ## l2cap.c:372:14
 1e08f6a:    d2 f5 03 00       	b[sp+3] = r2			  ## l2cap.c:372:14
 1e08f6e:    32 70             	r2 = 3			  ## l2cap.c:372:14
 1e08f70:    d2 f5 04 00       	b[sp+4] = r2			  ## l2cap.c:373:14
 1e08f74:    f2 50             	r2 = h[r0 + 30] (u)			  ## l2cap.c:374:54
 1e08f76:    d2 f5 05 00       	b[sp+5] = r2			  ## utils.c:160:19
 1e08f7a:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e08f7c:    d2 f5 06 00       	b[sp+6] = r2			  ## utils.c:161:19
 1e08f80:    d1 f5 07 00       	b[sp+7] = r1			  ## l2cap.c:375:14
 1e08f84:    32 a0             	r2 = sp + 3			  ## l2cap.c:375:14
 1e08f86:    41 70             	r1 = 4			  ## l2cap.c:376:5
 1e08f88:    53 70             	r3 = 5			  ## l2cap.c:376:5
 1e08f8a:    9b 17             	call -202 <l2cap_dispatch : 1e08ec2 >			  ## l2cap.c:376:5
 1e08f8c:    04 0a             	sp += 8
 1e08f8e:    30 00             	pc = [sp++]			  ## l2cap.c:377:1


l2cap_emit_channel_closed:
 1e08f90:    34 00             	[--sp] = rets			  ## l2cap.c:339:0
 1e08f92:    fe 0b             	sp += -4			  ## l2cap.c:339:0
 1e08f94:    11 77             	r1 = 113			  ## l2cap.c:344:14
 1e08f96:    d1 f5 00 00       	b[sp] = r1			  ## l2cap.c:344:14
 1e08f9a:    21 70             	r1 = 2			  ## l2cap.c:344:14
 1e08f9c:    d1 f5 01 00       	b[sp+1] = r1			  ## l2cap.c:345:14
 1e08fa0:    f1 50             	r1 = h[r0 + 30] (u)			  ## l2cap.c:346:54
 1e08fa2:    d1 f5 02 00       	b[sp+2] = r1			  ## utils.c:160:19
 1e08fa6:    09 d2             	r1 = r1 >> 8			  ## utils.c:161:21
 1e08fa8:    d1 f5 03 00       	b[sp+3] = r1			  ## utils.c:161:19
 1e08fac:    02 a0             	r2 = sp + 0			  ## utils.c:161:19
 1e08fae:    41 70             	r1 = 4			  ## l2cap.c:347:5
 1e08fb0:    43 70             	r3 = 4			  ## l2cap.c:347:5
 1e08fb2:    87 17             	call -242 <l2cap_dispatch : 1e08ec2 >			  ## l2cap.c:347:5
 1e08fb4:    02 0a             	sp += 4
 1e08fb6:    30 00             	pc = [sp++]			  ## l2cap.c:348:1


l2cap_finialize_channel_close:
 1e08fb8:    74 01             	[--sp] = {rets, r4}			  ## l2cap.c:2189:0
 1e08fba:    04 08             	r4 = r0			  ## l2cap.c:2189:0
 1e08fbc:    10 70             	r0 = 1			  ## l2cap.c:2190:38
 1e08fbe:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:2190:38
 1e08fc0:    40 08             	r0 = r4			  ## l2cap.c:2191:5
 1e08fc2:    e6 17             	call -52 <l2cap_emit_channel_closed : 1e08f90 >			  ## l2cap.c:2191:5
 1e08fc4:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2193:5
 1e08fca:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:2193:5
 1e08fcc:    80 80             	r0 += 8			  ## l2cap.c:2193:5
 1e08fce:    41 08             	r1 = r4			  ## l2cap.c:2193:5
 1e08fd0:    bf f3 49 f7       	call -4462 <btstack_linked_list_remove : 1e07e66 >			  ## l2cap.c:2193:5
 1e08fd4:    40 08             	r0 = r4			  ## l2cap.c:2207:5
 1e08fd6:    14 01             	{rets, r4} = [sp++]			  ## l2cap.c:2207:5
 1e08fd8:    69 1f             	goto -302 <btstack_memory_l2cap_channel_free : 1e08eac >			  ## l2cap.c:2207:5


btstack_linked_list_iterator_init:
 1e08fda:    c0 f4 00 09       	[r0 + 0] = 0			  ## btstack_linked_list.c:160:0
 1e08fde:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:162:14
 1e08fe0:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:163:16
 1e08fe2:    29 40             	[r0 + 8] = r1			  ## btstack_linked_list.c:163:14
 1e08fe4:    20 00             	rts			  ## btstack_linked_list.c:164:1


hci_connections_get_iterator:
 1e08fe6:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1798:0
 1e08fec:    f6 1f             	goto -20 <btstack_linked_list_iterator_init : 1e08fda >			  ## hci_vendor.c:1799:5


l2cap_run:
 1e08fee:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:617:0
 1e08ff0:    e6 0b             	sp += -52			  ## l2cap.c:617:0
 1e08ff2:    cb ff 98 1a 00 00 	r11 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:617:0
 1e08ff8:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:631:12
 1e08ffc:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:631:42
 1e08ffe:    70 22             	if (r1 == 0) goto 224 <l2cap_run+0xF2 : 1e090e0 >			  ## l2cap.c:631:42
 1e09000:    18 70             	r8 = 1
 1e09002:    0a 70             	r10 = 0
 1e09004:    49 70             	r9 = 4
 1e09006:    17 70             	r7 = 1
 1e09008:    f1 60             	r1 = b[r0 + 15] (u)
 1e0900a:    96 50             	r6 = h[r0 + 18] (u)			  ## l2cap.c:635:73
 1e0900c:    e4 60             	r4 = b[r0 + 14] (u)			  ## l2cap.c:634:71
 1e0900e:    65 50             	r5 = h[r0 + 12] (u)			  ## l2cap.c:633:71
 1e09010:    91 e0 12 d0       	ifs (r1 <= 9) goto 36 <l2cap_run+0x4A : 1e09038 >			  ## l2cap.c:633:71
 1e09014:    a1 e0 1e 00       	if (r1 == 10) goto 60 <l2cap_run+0x66 : 1e09054 >
 1e09018:    41 e1 28 00       	if (r1 == 20) goto 80 <l2cap_run+0x7E : 1e0906c >
 1e0901c:    f1 e1 43 10       	if (r1 != 31) goto 134 <l2cap_run+0xB8 : 1e090a6 >
 1e09020:    50 08             	r0 = r5			  ## l2cap.c:681:22
 1e09022:    91 16             	call -734 <hci_can_send_acl_packet_now : 1e08d46 >			  ## l2cap.c:681:22
 1e09024:    58 20             	if (r0 == 0) goto 176 <l2cap_run+0xE8 : 1e090d6 >			  ## l2cap.c:681:22
 1e09026:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:686:17
 1e0902a:    11 70             	r1 = 1			  ## l2cap.c:686:17
 1e0902c:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:686:17
 1e09030:    50 08             	r0 = r5			  ## l2cap.c:686:17
 1e09032:    42 08             	r2 = r4			  ## l2cap.c:686:17
 1e09034:    63 08             	r3 = r6			  ## l2cap.c:686:17
 1e09036:    28 18             	goto 80 <l2cap_run+0x9A : 1e09088 >			  ## l2cap.c:686:17
 1e09038:    11 e0 28 00       	if (r1 == 1) goto 80 <l2cap_run+0x9E : 1e0908c >
 1e0903c:    21 e0 33 10       	if (r1 != 2) goto 102 <l2cap_run+0xB8 : 1e090a6 >
 1e09040:    18 f5 08 00       	[sp+8] = r8			  ## l2cap.c:641:13
 1e09044:    1e 02             	[sp+4] = r6			  ## l2cap.c:641:13
 1e09046:    31 70             	r1 = 3			  ## l2cap.c:641:13
 1e09048:    03 70             	r3 = 0			  ## l2cap.c:641:13
 1e0904a:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:641:13
 1e0904e:    50 08             	r0 = r5			  ## l2cap.c:641:13
 1e09050:    42 08             	r2 = r4			  ## l2cap.c:641:13
 1e09052:    28 18             	goto 80 <l2cap_run+0xB6 : 1e090a4 >			  ## l2cap.c:641:13
 1e09054:    26 e0 1c 10       	if (r6 != 2) goto 56 <l2cap_run+0xA2 : 1e09090 >			  ## l2cap.c:651:17
 1e09058:    a0 40             	r0 = [r0 + 40]			  ## l2cap.c:652:62
 1e0905a:    78 02             	[sp+28] = r0			  ## l2cap.c:652:21
 1e0905c:    c0 a1             	r0 = sp + 28			  ## l2cap.c:652:21
 1e0905e:    28 02             	[sp+8] = r0			  ## l2cap.c:654:17
 1e09060:    19 f5 04 00       	[sp+4] = r9			  ## l2cap.c:654:17
 1e09064:    b1 70             	r1 = 11			  ## l2cap.c:654:17
 1e09066:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:654:17
 1e0906a:    19 18             	goto 50 <l2cap_run+0xB0 : 1e0909e >			  ## l2cap.c:654:17
 1e0906c:    50 08             	r0 = r5			  ## l2cap.c:669:22
 1e0906e:    6b 16             	call -810 <hci_can_send_acl_packet_now : 1e08d46 >			  ## l2cap.c:669:22
 1e09070:    32 20             	if (r0 == 0) goto 100 <l2cap_run+0xE8 : 1e090d6 >			  ## l2cap.c:669:22
 1e09072:    3e 02             	[sp+12] = r6			  ## l2cap.c:674:17
 1e09074:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:674:17
 1e09078:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:674:17
 1e0907c:    51 71             	r1 = 21			  ## l2cap.c:674:17
 1e0907e:    03 70             	r3 = 0			  ## l2cap.c:674:17
 1e09080:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:674:17
 1e09084:    50 08             	r0 = r5			  ## l2cap.c:674:17
 1e09086:    42 08             	r2 = r4			  ## l2cap.c:674:17
 1e09088:    f7 16             	call -530 <l2cap_send_le_signaling_packet : 1e08e78 >
 1e0908a:    0d 18             	goto 26 <l2cap_run+0xB8 : 1e090a6 >
 1e0908c:    11 70             	r1 = 1			  ## l2cap.c:662:13
 1e0908e:    07 18             	goto 14 <l2cap_run+0xB0 : 1e0909e >			  ## l2cap.c:662:13
 1e09090:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:657:17
 1e09094:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:657:17
 1e09098:    b1 70             	r1 = 11			  ## l2cap.c:657:17
 1e0909a:    18 f5 00 00       	[sp] = r8			  ## l2cap.c:657:17
 1e0909e:    50 08             	r0 = r5
 1e090a0:    42 08             	r2 = r4
 1e090a2:    63 08             	r3 = r6
 1e090a4:    db 15             	call -1098 <l2cap_send_signaling_packet : 1e08c5c >
 1e090a6:    00 f6 00 b0       	r0 = [r11 + 0]
 1e090aa:    91 40             	r1 = [r0 + 36]
 1e090ac:    00 f3 11 70       	if ((r7 & 1) == 0) goto 34 <l2cap_run+0xE4 : 1e090d2 >
 1e090b0:    f1 8f             	r1 += -1			  ## l2cap.c:705:66
 1e090b2:    99 40             	[r0 + 36] = r1			  ## l2cap.c:705:66
 1e090b4:    11 e0 0d b0       	ifs (r1 < 1) goto 26 <l2cap_run+0xE4 : 1e090d2 >			  ## l2cap.c:705:66
 1e090b8:    42 91             	r2 = r0 + 20			  ## l2cap.c:708:21
 1e090ba:    03 70             	r3 = 0			  ## l2cap.c:708:21
 1e090bc:    11 44             	r1 = [r2 + 4]			  ## l2cap.c:708:13
 1e090be:    04 44             	r4 = [r2 + 0]			  ## l2cap.c:708:13
 1e090c0:    11 f6 fc 2f       	[r2 + -4] = r1			  ## l2cap.c:708:13
 1e090c4:    14 f6 f8 2f       	[r2 + -8] = r4			  ## l2cap.c:708:13
 1e090c8:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:707:55
 1e090ca:    13 80             	r3 += 1			  ## l2cap.c:708:128
 1e090cc:    82 80             	r2 += 8			  ## l2cap.c:707:23
 1e090ce:    13 f2 f5 bf       	ifs (r3 < r1) goto -22 <l2cap_run+0xCE : 1e090bc >			  ## l2cap.c:707:23
 1e090d2:    9a 33             	if (r1 != 0) goto -204 <l2cap_run+0x1A : 1e09008 >
 1e090d4:    05 18             	goto 10 <l2cap_run+0xF2 : 1e090e0 >
 1e090d6:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:631:12
 1e090da:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:631:42
 1e090dc:    07 70             	r7 = 0			  ## l2cap.c:631:42
 1e090de:    94 33             	if (r1 != 0) goto -216 <l2cap_run+0x1A : 1e09008 >			  ## l2cap.c:631:42
 1e090e0:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:713:46
 1e090e2:    05 e0 57 01       	if (r5 == 0) goto 686 <.GJTIE585_0_0_+0x270 : 1e09394 >
 1e090e6:    c9 ff 90 09 00 00 	r9 = 2448 <stack_configs_app : 990 >
 1e090ec:    38 70             	r8 = 3
 1e090ee:    16 7e             	r6 = 225
 1e090f0:    1a 70             	r10 = 1
 1e090f2:    0e 70             	r14 = 0
 1e090f4:    7c 70             	r12 = 7
 1e090f6:    9f 70             	r15 = 9
 1e090f8:    54 08             	r4 = r5
 1e090fa:    20 69             	r0 = b[r4 + 18] (u)
 1e090fc:    05 48             	r5 = [r4 + 0]			  ## l2cap.c:716:20
 1e090fe:    e0 8f             	r0 += -2			  ## l2cap.c:720:9
 1e09100:    c0 e0 46 81       	if (r0 > 12) goto 652 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## l2cap.c:720:9
 1e09104:    41 c0             	r1 = r0 << 1
 1e09106:    0d 99             	r13 = r4 + 16			  ## l2cap.c:720:26
 1e09108:    b1 00             	tbh [r1]			  ## l2cap.c:720:26


.GJTIL585_0_0_:
 1e0910a:    0d 00     < 13 : 0xD >
 1e0910c:    43 01     < 323 : 0x143 >
 1e0910e:    43 01     < 323 : 0x143 >
 1e09110:    43 01     < 323 : 0x143 >
 1e09112:    43 01     < 323 : 0x143 >
 1e09114:    51 00     < 81 : 0x51 >
 1e09116:    43 01     < 323 : 0x143 >
 1e09118:    43 01     < 323 : 0x143 >
 1e0911a:    82 00     < 130 : 0x82 >
 1e0911c:    a5 00     < 165 : 0xA5 >
 1e0911e:    b7 00     < 183 : 0xB7 >
 1e09120:    c6 00     < 198 : 0xC6 >
 1e09122:    dd 00     < 221 : 0xDD >
 1e09124:    18 f9 02 d0       	b[r13 + 2] = r8			  ## l2cap.c:725:46
 1e09128:    00 f9 0b d0       	r0 = b[r13 + 11] (u)			  ## l2cap.c:727:13
 1e0912c:    01 f9 0a d0       	r1 = b[r13 + 10] (u)			  ## l2cap.c:727:13
 1e09130:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:727:13
 1e09134:    91 f5 30 00       	h[sp+48] = r1			  ## l2cap.c:727:13
 1e09138:    00 f9 09 d0       	r0 = b[r13 + 9] (u)			  ## l2cap.c:727:13
 1e0913c:    01 f9 08 d0       	r1 = b[r13 + 8] (u)			  ## l2cap.c:727:13
 1e09140:    02 f9 07 d0       	r2 = b[r13 + 7] (u)			  ## l2cap.c:727:13
 1e09144:    03 f9 06 d0       	r3 = b[r13 + 6] (u)			  ## l2cap.c:727:13
 1e09148:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:727:13
 1e0914c:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## l2cap.c:727:13
 1e09150:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## l2cap.c:727:13
 1e09154:    bb 02             	[sp+44] = r3			  ## l2cap.c:727:13
 1e09156:    01 70             	r1 = 0
 1e09158:    00 70             	r0 = 0
 1e0915a:    d1 e0 08 00       	if (r1 == 13) goto 16 <.GJTIE585_0_0_+0x4A : 1e0916e >
 1e0915e:    fa fd 10 26       	r2 = r6 >> r1			  ## hci_vendor.c:1648:38
 1e09162:    20 f3 04 20       	if ((r2 & 1) != 0) goto 8 <.GJTIE585_0_0_+0x4A : 1e0916e >			  ## hci_vendor.c:1648:38
 1e09166:    f8 fd 10 2a       	r2 = r10 << r1			  ## hci_vendor.c:1652:31
 1e0916a:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1652:26
 1e0916c:    50 b4             	r0 |= r2			  ## hci_vendor.c:1652:26
 1e0916e:    11 80             	r1 += 1			  ## hci_vendor.c:1647:26
 1e09170:    01 e1 f3 1f       	if (r1 != 16) goto -26 <.GJTIE585_0_0_+0x36 : 1e0915a >
 1e09174:    01 f9 14 90       	r1 = b[r9 + 20] (u)			  ## hci_vendor.c:1669:29
 1e09178:    02 f9 13 90       	r2 = b[r9 + 19] (u)			  ## hci_vendor.c:1669:29
 1e0917c:    03 f9 12 90       	r3 = b[r9 + 18] (u)			  ## hci_vendor.c:1669:29
 1e09180:    04 f9 11 90       	r4 = b[r9 + 17] (u)			  ## hci_vendor.c:1669:29
 1e09184:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:1669:29
 1e09188:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:1669:29
 1e0918c:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:1669:29
 1e09190:    01 fb aa ff       	r1 = -86 <bank_code_load_addr+0x1E1396 : 1ffffaa >			  ## hci_vendor.c:1669:9
 1e09194:    33 f3 01 40       	if ((r4 & 524288) != 0) goto 2 <.GJTIE585_0_0_+0x76 : 1e0919a >			  ## hci_vendor.c:1669:9
 1e09198:    01 70             	r1 = 0
 1e0919a:    42 04             	r2 = r1.b0 (u)			  ## hci_vendor.c:1672:5
 1e0919c:    01 fb 06 33       	r1 = 13062 <jiffies_half_msec+0x50 : 3306 >			  ## hci_vendor.c:1656:18
 1e091a0:    d0 b2             	r0 ^= r1			  ## hci_vendor.c:1656:18
 1e091a2:    21 04             	r1 = r0.l (u)			  ## hci_vendor.c:1672:5
 1e091a4:    c0 a2             	r0 = sp + 44			  ## hci_vendor.c:1672:5
 1e091a6:    80 f3 0c 8d       	call 72216 <lmp_hci_create_connection : 1e1abc2 >			  ## hci_vendor.c:1672:5
 1e091aa:    f2 18             	goto 484 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## hci_vendor.c:1672:5
 1e091ac:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:786:44
 1e091ae:    23 f3 93 00       	if ((r0 & 8) != 0) goto 294 <.GJTIE585_0_0_+0x1B4 : 1e092d8 >			  ## l2cap.c:786:44
 1e091b2:    02 f3 e1 00       	if ((r0 & 4) == 0) goto 450 <.GJTIE585_0_0_+0x254 : 1e09378 >
 1e091b6:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:610:107
 1e091ba:    10 b2             	r0 |= 16			  ## l2cap.c:605:107
 1e091bc:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e091be:    01 f6 00 b0       	r1 = [r11 + 0]			  ## l2cap.c:123:9
 1e091c2:    12 fc 28 00       	r2 = r1 + 40			  ## l2cap.c:123:9
 1e091c6:    c3 64             	r3 = b[r2 + 12] (u)			  ## l2cap.c:123:39
 1e091c8:    1d 96             	r13 = r3 + 1			  ## l2cap.c:126:55
 1e091ca:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e091cc:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE585_0_0_+0xB0 : 1e091d4 >			  ## l2cap.c:126:55
 1e091d2:    d1 08             	r1 = r13			  ## l2cap.c:123:9
 1e091d4:    c9 64             	b[r2 + 12] = r1
 1e091d6:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:828:57
 1e091d8:    02 64             	r2 = b[r2 + 0] (u)			  ## l2cap.c:829:21
 1e091da:    24 f3 cd 20       	if ((r2 & 16) != 0) goto 410 <.GJTIE585_0_0_+0x254 : 1e09378 >			  ## l2cap.c:829:21
 1e091de:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:843:39
 1e091e2:    20 70             	r0 = 2			  ## l2cap.c:844:39
 1e091e4:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:844:39
 1e091e8:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:845:85
 1e091ea:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e091ee:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e091f0:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e091f4:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:846:126
 1e091f6:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:846:21
 1e091f8:    02 a2             	r2 = sp + 32			  ## l2cap.c:846:21
 1e091fa:    2a 02             	[sp+8] = r2			  ## l2cap.c:846:21
 1e091fc:    42 70             	r2 = 4			  ## l2cap.c:846:21
 1e091fe:    1a 02             	[sp+4] = r2			  ## l2cap.c:846:21
 1e09200:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:846:85
 1e09202:    41 70             	r1 = 4			  ## l2cap.c:846:21
 1e09204:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:846:21
 1e09208:    29 15             	call -1454 <l2cap_send_signaling_packet : 1e08c5c >			  ## l2cap.c:846:21
 1e0920a:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:846:21
 1e0920c:    b5 18             	goto 362 <.GJTIE585_0_0_+0x254 : 1e09378 >			  ## l2cap.c:846:21
 1e0920e:    d0 fc 06 00       	r0 = r13 + 6			  ## l2cap.c:770:49
 1e09212:    31 72             	r1 = 35			  ## l2cap.c:770:17
 1e09214:    02 70             	r2 = 0			  ## l2cap.c:770:17
 1e09216:    54 14             	call -1880 <check_l2cap_authentication_flag : 1e08ac0 >			  ## l2cap.c:770:17
 1e09218:    10 e2 03 10       	if (r0 != 33) goto 6 <.GJTIE585_0_0_+0xFE : 1e09222 >			  ## l2cap.c:770:17
 1e0921c:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## l2cap.c:771:17
 1e09220:    b7 20             	if (r0 == 0) goto 366 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## l2cap.c:771:17
 1e09222:    00 f9 02 d0       	r0 = b[r13 + 2] (u)			  ## l2cap.c:774:48
 1e09226:    50 e0 e9 00       	if (r0 == 5) goto 466 <.GJTIE585_0_0_+0x2D8 : 1e093fc >			  ## l2cap.c:774:48
 1e0922a:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e0922e:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e09232:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e09234:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e09236:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE585_0_0_+0x11A : 1e0923e >			  ## l2cap.c:126:55
 1e0923c:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e0923e:    11 f9 34 00       	b[r0 + 52] = r1
 1e09242:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:778:57
 1e09244:    50 70             	r0 = 5			  ## l2cap.c:779:51
 1e09246:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:779:51
 1e09248:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:780:17
 1e0924a:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:780:83
 1e0924c:    a1 70             	r1 = 10			  ## l2cap.c:780:17
 1e0924e:    23 70             	r3 = 2			  ## l2cap.c:780:17
 1e09250:    05 15             	call -1526 <l2cap_send_signaling_packet : 1e08c5c >			  ## l2cap.c:780:17
 1e09252:    9e 18             	goto 316 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## l2cap.c:780:17
 1e09254:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:736:79
 1e09256:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:736:13
 1e09258:    51 69             	r1 = b[r4 + 21] (u)			  ## l2cap.c:736:127
 1e0925a:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:736:13
 1e0925e:    19 02             	[sp+4] = r1			  ## l2cap.c:736:13
 1e09260:    31 70             	r1 = 3			  ## l2cap.c:736:13
 1e09262:    03 70             	r3 = 0			  ## l2cap.c:736:13
 1e09264:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:736:13
 1e09268:    f9 14             	call -1550 <l2cap_send_signaling_packet : 1e08c5c >			  ## l2cap.c:736:13
 1e0926a:    50 69             	r0 = b[r4 + 21] (u)			  ## l2cap.c:737:44
 1e0926c:    10 e0 4f 10       	if (r0 != 1) goto 158 <.GJTIE585_0_0_+0x1EA : 1e0930e >			  ## l2cap.c:737:17
 1e09270:    f0 70             	r0 = 15			  ## l2cap.c:739:50
 1e09272:    10 f9 02 d0       	b[r13 + 2] = r0			  ## l2cap.c:739:50
 1e09276:    8c 18             	goto 280 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## l2cap.c:739:50
 1e09278:    1c f9 12 40       	b[r4 + 18] = r12			  ## l2cap.c:749:46
 1e0927c:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e0927e:    10 b1             	r0 |= 4			  ## l2cap.c:605:107
 1e09280:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e09282:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:764:121
 1e09284:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:764:79
 1e09286:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:764:13
 1e09288:    04 59             	r4 = h[r4 + 32] (u)			  ## l2cap.c:764:159
 1e0928a:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:764:13
 1e0928e:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:764:13
 1e09292:    31 70             	r1 = 3			  ## l2cap.c:764:13
 1e09294:    14 18             	goto 40 <.GJTIE585_0_0_+0x19A : 1e092be >			  ## l2cap.c:764:13
 1e09296:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e0929a:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e0929e:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e092a0:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e092a2:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE585_0_0_+0x186 : 1e092aa >			  ## l2cap.c:126:55
 1e092a8:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e092aa:    11 f9 34 00       	b[r0 + 52] = r1
 1e092ae:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:864:53
 1e092b0:    1f f9 12 40       	b[r4 + 18] = r15			  ## l2cap.c:865:46
 1e092b4:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:866:122
 1e092b6:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:866:13
 1e092b8:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:866:161
 1e092ba:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:866:81
 1e092bc:    61 70             	r1 = 6			  ## l2cap.c:866:13
 1e092be:    0c 02             	[sp] = r4
 1e092c0:    cd 14             	call -1638 <l2cap_send_signaling_packet : 1e08c5c >
 1e092c2:    66 18             	goto 204 <.GJTIE585_0_0_+0x26C : 1e09390 >
 1e092c4:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:858:124
 1e092c6:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:858:82
 1e092c8:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:858:13
 1e092ca:    07 59             	r7 = h[r4 + 32] (u)			  ## l2cap.c:858:162
 1e092cc:    71 70             	r1 = 7			  ## l2cap.c:858:13
 1e092ce:    0f 02             	[sp] = r7			  ## l2cap.c:858:13
 1e092d0:    c5 14             	call -1654 <l2cap_send_signaling_packet : 1e08c5c >			  ## l2cap.c:858:13
 1e092d2:    40 08             	r0 = r4			  ## l2cap.c:859:13
 1e092d4:    71 16             	call -798 <l2cap_finialize_channel_close : 1e08fb8 >			  ## l2cap.c:859:13
 1e092d6:    5c 18             	goto 184 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## l2cap.c:859:13
 1e092d8:    31 fd 08 09       	r1 = r0 & 4294967287			  ## l2cap.c:610:107
 1e092dc:    22 fd 01 0a       	r2 = r0 & 256			  ## l2cap.c:789:58
 1e092e0:    d3 d0             	r3 = r2 >> 3			  ## l2cap.c:789:21
 1e092e2:    b3 b2             	r3 ^= 32			  ## l2cap.c:789:21
 1e092e4:    51 b6             	r1 |= r3			  ## l2cap.c:789:21
 1e092e6:    89 58             	h[r4 + 16] = r1			  ## l2cap.c:610:42
 1e092e8:    f2 fd 40 d2       	r13 = r2 >> 8			  ## l2cap.c:789:21
 1e092ec:    29 f3 18 10       	if ((r1 & 512) != 0) goto 48 <.GJTIE585_0_0_+0x1FC : 1e09320 >			  ## l2cap.c:789:21
 1e092f0:    26 f3 24 10       	if ((r1 & 64) != 0) goto 72 <.GJTIE585_0_0_+0x218 : 1e0933c >
 1e092f4:    10 04             	r0 = r0.b0 (s)			  ## l2cap.c:803:65
 1e092f6:    00 e0 3c b0       	ifs (r0 < 0) goto 120 <.GJTIE585_0_0_+0x24E : 1e09372 >			  ## l2cap.c:803:65
 1e092fa:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:820:128
 1e092fc:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:820:86
 1e092fe:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:820:21
 1e09300:    1e f5 0c 00       	[sp+12] = r14			  ## l2cap.c:820:21
 1e09304:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:820:21
 1e09308:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:820:21
 1e0930c:    12 18             	goto 36 <.GJTIE585_0_0_+0x20E : 1e09332 >			  ## l2cap.c:820:21
 1e0930e:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:742:17
 1e09312:    80 80             	r0 += 8			  ## l2cap.c:742:17
 1e09314:    41 08             	r1 = r4			  ## l2cap.c:742:17
 1e09316:    bf f3 a6 f5       	call -5300 <btstack_linked_list_remove : 1e07e66 >			  ## l2cap.c:742:17
 1e0931a:    40 08             	r0 = r4			  ## l2cap.c:743:17
 1e0931c:    c7 15             	call -1138 <btstack_memory_l2cap_channel_free : 1e08eac >			  ## l2cap.c:743:17
 1e0931e:    38 18             	goto 112 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## l2cap.c:743:17
 1e09320:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:795:128
 1e09322:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:795:86
 1e09324:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:795:21
 1e09326:    1e f5 0c 00       	[sp+12] = r14			  ## l2cap.c:795:21
 1e0932a:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:795:21
 1e0932e:    18 f5 04 00       	[sp+4] = r8			  ## l2cap.c:795:21
 1e09332:    51 70             	r1 = 5
 1e09334:    1d f5 00 00       	[sp] = r13
 1e09338:    91 14             	call -1758 <l2cap_send_signaling_packet : 1e08c5c >
 1e0933a:    1b 18             	goto 54 <.GJTIE585_0_0_+0x24E : 1e09372 >
 1e0933c:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:798:39
 1e09340:    20 70             	r0 = 2			  ## l2cap.c:799:39
 1e09342:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:799:39
 1e09346:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:800:79
 1e09348:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e0934c:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0934e:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e09352:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:801:128
 1e09354:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:801:86
 1e09356:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:801:21
 1e09358:    01 a2             	r1 = sp + 32			  ## l2cap.c:801:21
 1e0935a:    39 02             	[sp+12] = r1			  ## l2cap.c:801:21
 1e0935c:    41 70             	r1 = 4			  ## l2cap.c:801:21
 1e0935e:    29 02             	[sp+8] = r1			  ## l2cap.c:801:21
 1e09360:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:801:21
 1e09364:    51 70             	r1 = 5			  ## l2cap.c:801:21
 1e09366:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:801:21
 1e0936a:    78 14             	call -1808 <l2cap_send_signaling_packet : 1e08c5c >			  ## l2cap.c:801:21
 1e0936c:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:610:97
 1e0936e:    70 b3             	r0 &= 4294967231			  ## l2cap.c:610:107
 1e09370:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:610:42
 1e09372:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:610:97
 1e09374:    70 b4             	r0 &= 4294967039			  ## l2cap.c:610:107
 1e09376:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:610:42
 1e09378:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:849:17
 1e0937c:    20 e2 08 10       	if (r0 != 34) goto 16 <.GJTIE585_0_0_+0x26C : 1e09390 >			  ## l2cap.c:849:17
 1e09380:    80 70             	r0 = 8			  ## l2cap.c:850:50
 1e09382:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:850:50
 1e09384:    01 70             	r1 = 0			  ## l2cap.c:851:17
 1e09386:    40 08             	r0 = r4			  ## l2cap.c:851:17
 1e09388:    b1 15             	call -1182 <l2cap_emit_channel_opened : 1e08eec >			  ## l2cap.c:851:17
 1e0938a:    11 70             	r1 = 1			  ## l2cap.c:852:17
 1e0938c:    40 08             	r0 = r4			  ## l2cap.c:852:17
 1e0938e:    ea 15             	call -1068 <l2cap_emit_credits : 1e08f64 >			  ## l2cap.c:852:17
 1e09390:    05 e0 b2 1e       	if (r5 != 0) goto -668 <l2cap_run+0x10A : 1e090f8 >
 1e09394:    00 a1             	r0 = sp + 16
 1e09396:    27 16             	call -946 <hci_connections_get_iterator : 1e08fe6 >			  ## l2cap.c:879:9
 1e09398:    bf f3 81 f6       	call -4862 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## l2cap.c:880:16
 1e0939c:    2f 20             	if (r0 == 0) goto 94 <.GJTIE585_0_0_+0x2D8 : 1e093fc >			  ## l2cap.c:880:16
 1e0939e:    05 70             	r5 = 0
 1e093a0:    00 a1             	r0 = sp + 16
 1e093a2:    bf f3 8a f6       	call -4844 <btstack_linked_list_iterator_next : 1e080ba >			  ## l2cap.c:884:71
 1e093a6:    04 08             	r4 = r0			  ## l2cap.c:884:71
 1e093a8:    30 48             	r0 = [r4 + 12]			  ## l2cap.c:886:29
 1e093aa:    10 e0 23 80       	if (r0 > 1) goto 70 <.GJTIE585_0_0_+0x2D0 : 1e093f4 >			  ## l2cap.c:886:29
 1e093ae:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:889:18
 1e093b0:    ca 14             	call -1644 <hci_can_send_acl_packet_now : 1e08d46 >			  ## l2cap.c:889:18
 1e093b2:    20 20             	if (r0 == 0) goto 64 <.GJTIE585_0_0_+0x2D0 : 1e093f4 >			  ## l2cap.c:889:18
 1e093b4:    50 48             	r0 = [r4 + 20]			  ## l2cap.c:892:33
 1e093b6:    40 e0 10 00       	if (r0 == 4) goto 32 <.GJTIE585_0_0_+0x2B6 : 1e093da >			  ## l2cap.c:892:33
 1e093ba:    20 e0 14 00       	if (r0 == 2) goto 40 <.GJTIE585_0_0_+0x2C2 : 1e093e6 >
 1e093be:    10 e0 19 10       	if (r0 != 1) goto 50 <.GJTIE585_0_0_+0x2D0 : 1e093f4 >
 1e093c2:    5d 48             	[r4 + 20] = r5			  ## l2cap.c:894:59
 1e093c4:    d3 58             	r3 = h[r4 + 26] (u)			  ## l2cap.c:896:48
 1e093c6:    82 69             	r2 = b[r4 + 24] (u)			  ## l2cap.c:895:109
 1e093c8:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:895:17
 1e093ca:    e6 58             	r6 = h[r4 + 28] (u)			  ## l2cap.c:896:82
 1e093cc:    f1 58             	r1 = h[r4 + 30] (u)			  ## l2cap.c:896:116
 1e093ce:    04 59             	r4 = h[r4 + 32] (u)			  ## l2cap.c:896:145
 1e093d0:    2c 02             	[sp+8] = r4			  ## l2cap.c:895:17
 1e093d2:    19 02             	[sp+4] = r1			  ## l2cap.c:895:17
 1e093d4:    21 71             	r1 = 18			  ## l2cap.c:895:17
 1e093d6:    0e 02             	[sp] = r6			  ## l2cap.c:895:17
 1e093d8:    0c 18             	goto 24 <.GJTIE585_0_0_+0x2CE : 1e093f2 >			  ## l2cap.c:895:17
 1e093da:    5d 48             	[r4 + 20] = r5			  ## l2cap.c:903:59
 1e093dc:    82 69             	r2 = b[r4 + 24] (u)			  ## l2cap.c:904:110
 1e093de:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:904:17
 1e093e0:    31 71             	r1 = 19			  ## l2cap.c:904:17
 1e093e2:    13 70             	r3 = 1			  ## l2cap.c:904:17
 1e093e4:    06 18             	goto 12 <.GJTIE585_0_0_+0x2CE : 1e093f2 >			  ## l2cap.c:904:17
 1e093e6:    c5 f4 03 49       	[r4 + 20] = 3			  ## l2cap.c:899:59
 1e093ea:    82 69             	r2 = b[r4 + 24] (u)			  ## l2cap.c:900:110
 1e093ec:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:900:17
 1e093ee:    31 71             	r1 = 19			  ## l2cap.c:900:17
 1e093f0:    03 70             	r3 = 0			  ## l2cap.c:900:17
 1e093f2:    42 15             	call -1404 <l2cap_send_le_signaling_packet : 1e08e78 >
 1e093f4:    00 a1             	r0 = sp + 16
 1e093f6:    bf f3 52 f6       	call -4956 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## l2cap.c:880:16
 1e093fa:    d2 31             	if (r0 != 0) goto -92 <.GJTIE585_0_0_+0x27C : 1e093a0 >
 1e093fc:    1a 0a             	sp += 52
 1e093fe:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:913:1


l2cap_register_signaling_response:
 1e09400:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:1365:0
 1e09402:    c4 ff 98 1a 00 00 	r4 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:1367:9
 1e09408:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:1367:9
 1e0940a:    95 48             	r5 = [r4 + 36]			  ## l2cap.c:1367:39
 1e0940c:    25 e0 15 c0       	ifs (r5 > 2) goto 42 <l2cap_register_signaling_response+0x3A : 1e0943a >			  ## l2cap.c:1367:39
 1e09410:    ed c0             	r5 = r5 << 3			  ## l2cap.c:1368:118
 1e09412:    c6 98             	r6 = r4 + 12			  ## l2cap.c:1368:118
 1e09414:    10 f8 00 65       	h[r6+r5] = r0			  ## l2cap.c:1368:125
 1e09418:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1369:89
 1e0941a:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1369:118
 1e0941c:    60 09             	r0 += r6			  ## l2cap.c:1369:118
 1e0941e:    39 60             	b[r0 + 3] = r1			  ## l2cap.c:1369:123
 1e09420:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1370:89
 1e09422:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1370:118
 1e09424:    60 09             	r0 += r6			  ## l2cap.c:1370:118
 1e09426:    2a 60             	b[r0 + 2] = r2			  ## l2cap.c:1370:125
 1e09428:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1371:89
 1e0942a:    41 02             	r1 = [sp+16]			  ## l2cap.c:1371:89
 1e0942c:    c2 c0             	r2 = r0 << 3			  ## l2cap.c:1371:118
 1e0942e:    62 09             	r2 += r6			  ## l2cap.c:1371:118
 1e09430:    2b 54             	h[r2 + 4] = r3			  ## l2cap.c:1371:122
 1e09432:    39 54             	h[r2 + 6] = r1			  ## l2cap.c:1372:123
 1e09434:    10 80             	r0 += 1			  ## l2cap.c:1373:66
 1e09436:    98 48             	[r4 + 36] = r0			  ## l2cap.c:1373:66
 1e09438:    da 15             	call -1100 <l2cap_run : 1e08fee >			  ## l2cap.c:1374:9
 1e0943a:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:1376:1


btstack_memory_l2cap_channel_get:
 1e0943c:    41 70             	r1 = 4			  ## btstack_memory.c:129:0
 1e0943e:    00 42             	r0 = [r1 + 0]			  ## btstack_memory.c:66:23
 1e09440:    03 20             	if (r0 == 0) goto 6 <btstack_memory_l2cap_channel_get+0xC : 1e09448 >
 1e09442:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e09444:    0a 42             	[r1 + 0] = r2			  ## btstack_memory.c:72:23
 1e09446:    20 00             	rts			  ## btstack_memory.c:130:5
 1e09448:    00 70             	r0 = 0
 1e0944a:    20 00             	rts			  ## btstack_memory.c:130:5


btstack_linked_list_add:
 1e0944c:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:83:0
 1e0944e:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_add+0xE : 1e0945a >			  ## btstack_linked_list.c:83:0
 1e09450:    23 08             	r3 = r2			  ## btstack_linked_list.c:83:0
 1e09452:    13 f2 04 00       	if (r3 == r1) goto 8 <btstack_linked_list_add+0x12 : 1e0945e >			  ## btstack_linked_list.c:83:0
 1e09456:    03 46             	r3 = [r3 + 0]			  ## btstack_linked_list.c:83:0
 1e09458:    fc 37             	if (r3 != 0) goto -8 <btstack_linked_list_add+0x6 : 1e09452 >			  ## btstack_linked_list.c:83:0
 1e0945a:    0a 42             	[r1 + 0] = r2			  ## btstack_linked_list.c:92:16
 1e0945c:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:93:11
 1e0945e:    20 00             	rts			  ## btstack_linked_list.c:94:1


l2cap_signaling_handler_channel:
 1e09460:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:1566:0
 1e09462:    fe 0b             	sp += -4			  ## l2cap.c:1566:0
 1e09464:    04 08             	r4 = r0			  ## l2cap.c:1566:0
 1e09466:    00 62             	r0 = b[r1 + 0] (u)			  ## l2cap.c:1568:22
 1e09468:    22 69             	r2 = b[r4 + 18] (u)			  ## l2cap.c:1568:22
 1e0946a:    60 e0 0e 10       	if (r0 != 6) goto 28 <l2cap_signaling_handler_channel+0x2A : 1e0948a >			  ## l2cap.c:1575:9
 1e0946e:    d2 e0 0a 80       	if (r2 > 13) goto 20 <l2cap_signaling_handler_channel+0x26 : 1e09486 >
 1e09472:    10 70             	r0 = 1
 1e09474:    80 0c             	r0 <<= r2
 1e09476:    60 ff 0e 01 05 00 	if ((r0 & 9088) == 0) goto 10 <l2cap_signaling_handler_channel+0x26 : 1e09486 >
 1e0947c:    10 62             	r0 = b[r1 + 1] (u)			  ## l2cap.c:1569:22
 1e0947e:    38 69             	b[r4 + 19] = r0			  ## l2cap.c:1359:46
 1e09480:    e0 70             	r0 = 14			  ## l2cap.c:1360:38
 1e09482:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1360:38
 1e09484:    b4 15             	call -1176 <l2cap_run : 1e08fee >			  ## l2cap.c:1361:5
 1e09486:    02 0a             	sp += 4
 1e09488:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap.c:1709:1
 1e0948a:    b2 8f             	r2 += -5			  ## l2cap.c:1591:5
 1e0948c:    42 e0 fb 8f       	if (r2 > 4) goto -10 <l2cap_signaling_handler_channel+0x26 : 1e09486 >			  ## l2cap.c:1591:5
 1e09490:    c5 ff 98 1a 00 00 	r5 = 6808 <l2cap_stack : 1a98 >
 1e09496:    a2 00             	tbb [r2]


.GJTIS589_0_0_:
 1e09498:    04     < 4 : 0x4 >
 1e09499:    30     < 48 : 0x30 >
 1e0949a:    46     < 70 : 0x46 >
 1e0949b:    03     < 3 : 0x3 >
 1e0949c:    8a     < 138 : 0x8A >
 1e0949d:    00     < 0 : 0x0 >
 1e0949e:    f3 1f             	goto -26 <l2cap_signaling_handler_channel+0x26 : 1e09486 >
 1e094a0:    b0 e0 f1 1f       	if (r0 != 11) goto -30 <l2cap_signaling_handler_channel+0x26 : 1e09486 >
 1e094a4:    60 70             	r0 = 6			  ## l2cap.c:1598:50
 1e094a6:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1598:50
 1e094a8:    30 62             	r0 = b[r1 + 3] (u)			  ## l2cap.c:1531:23
 1e094aa:    22 62             	r2 = b[r1 + 2] (u)			  ## l2cap.c:1531:23
 1e094ac:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## l2cap.c:1531:23
 1e094b0:    40 94             	r0 = r2 + 4			  ## l2cap.c:1531:21
 1e094b2:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1533:18
 1e094b4:    50 e0 17 30       	if (r0 < 5) goto 46 <.GJTIE589_0_0_+0x48 : 1e094e6 >			  ## l2cap.c:1533:18
 1e094b8:    43 70             	r3 = 4
 1e094ba:    42 70             	r2 = 4
 1e094bc:    25 94             	r5 = r2 + 2			  ## l2cap.c:1535:13
 1e094be:    65 05             	r5 = r5.l (u)			  ## l2cap.c:1536:24
 1e094c0:    46 b3             	r6 = r1 + r5			  ## l2cap.c:1536:24
 1e094c2:    17 6c             	r7 = b[r6 + 1] (u)			  ## l2cap.c:1536:24
 1e094c4:    06 6c             	r6 = b[r6 + 0] (u)			  ## l2cap.c:1536:24
 1e094c6:    c8 fd 40 67       	r6 <= insert(r7, p:8, l:8)			  ## l2cap.c:1536:24
 1e094ca:    07 3c             	if (r6 != 0) goto 14 <.GJTIE589_0_0_+0x3C : 1e094da >			  ## l2cap.c:1536:24
 1e094cc:    13 09             	r3 += r1			  ## l2cap.c:1534:24
 1e094ce:    16 66             	r6 = b[r3 + 1] (u)			  ## l2cap.c:1534:24
 1e094d0:    03 66             	r3 = b[r3 + 0] (u)			  ## l2cap.c:1534:24
 1e094d2:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## l2cap.c:1534:24
 1e094d6:    23 e0 8f 00       	if (r3 == 2) goto 286 <.GJTIE589_0_0_+0x15A : 1e095f8 >			  ## l2cap.c:1534:24
 1e094da:    42 80             	r2 += 4			  ## l2cap.c:1533:12
 1e094dc:    25 80             	r5 += 2			  ## l2cap.c:1537:13
 1e094de:    a3 04             	r3 = r2.l (u)			  ## l2cap.c:1533:12
 1e094e0:    52 08             	r2 = r5			  ## l2cap.c:1533:12
 1e094e2:    03 f2 eb 3f       	if (r3 < r0) goto -42 <.GJTIE589_0_0_+0x1E : 1e094bc >			  ## l2cap.c:1533:12
 1e094e6:    e3 58             	r3 = h[r4 + 28] (u)			  ## l2cap.c:1600:123
 1e094e8:    42 69             	r2 = b[r4 + 20] (u)			  ## l2cap.c:1600:82
 1e094ea:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:1600:17
 1e094ec:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:1600:155
 1e094ee:    21 70             	r1 = 2			  ## l2cap.c:1600:17
 1e094f0:    0c 02             	[sp] = r4			  ## l2cap.c:1600:17
 1e094f2:    bf f3 b3 fb       	call -2202 <l2cap_send_signaling_packet : 1e08c5c >			  ## l2cap.c:1600:17
 1e094f6:    c7 1f             	goto -114 <l2cap_signaling_handler_channel+0x26 : 1e09486 >			  ## l2cap.c:1600:17
 1e094f8:    30 e0 c5 1f       	if (r0 != 3) goto -118 <l2cap_signaling_handler_channel+0x26 : 1e09486 >
 1e094fc:    80 62             	r0 = b[r1 + 8] (u)			  ## l2cap.c:1611:22
 1e094fe:    92 62             	r2 = b[r1 + 9] (u)			  ## l2cap.c:1611:22
 1e09500:    03 08             	r3 = r0			  ## l2cap.c:1611:22
 1e09502:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1611:22
 1e09506:    e2 04             	r2 = r3.l (u)			  ## l2cap.c:1611:22
 1e09508:    12 e0 bd 0f       	if (r2 == 1) goto -134 <l2cap_signaling_handler_channel+0x26 : 1e09486 >			  ## l2cap.c:1611:22
 1e0950c:    5f 34             	if (r2 != 0) goto 190 <.GJTIE589_0_0_+0x12E : 1e095cc >
 1e0950e:    50 62             	r0 = b[r1 + 5] (u)			  ## l2cap.c:1617:57
 1e09510:    41 62             	r1 = b[r1 + 4] (u)			  ## l2cap.c:1617:57
 1e09512:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1617:57
 1e09516:    09 59             	h[r4 + 32] = r1			  ## l2cap.c:1617:55
 1e09518:    70 70             	r0 = 7			  ## l2cap.c:1618:50
 1e0951a:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1618:50
 1e0951c:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e0951e:    10 b1             	r0 |= 4			  ## l2cap.c:605:107
 1e09520:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e09522:    b1 1f             	goto -158 <l2cap_signaling_handler_channel+0x26 : 1e09486 >			  ## l2cap.c:605:42
 1e09524:    50 e0 47 00       	if (r0 == 5) goto 142 <.GJTIE589_0_0_+0x118 : 1e095b6 >			  ## l2cap.c:1652:9
 1e09528:    40 e0 85 10       	if (r0 != 4) goto 266 <.GJTIE589_0_0_+0x198 : 1e09636 >
 1e0952c:    82 58             	r2 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e0952e:    00 fd 08 29       	r0 = r2 | 8			  ## l2cap.c:605:107
 1e09532:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e09534:    63 62             	r3 = b[r1 + 6] (u)			  ## l2cap.c:1475:17
 1e09536:    15 62             	r5 = b[r1 + 1] (u)			  ## l2cap.c:1476:48
 1e09538:    3d 69             	b[r4 + 19] = r5			  ## l2cap.c:1476:46
 1e0953a:    00 f3 04 30       	if ((r3 & 1) == 0) goto 8 <.GJTIE589_0_0_+0xA8 : 1e09546 >			  ## l2cap.c:1476:46
 1e0953e:    00 fb 08 01       	r0 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## l2cap.c:605:107
 1e09542:    50 b4             	r0 |= r2			  ## l2cap.c:605:107
 1e09544:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e09546:    32 62             	r2 = b[r1 + 3] (u)			  ## l2cap.c:1485:27
 1e09548:    23 62             	r3 = b[r1 + 2] (u)			  ## l2cap.c:1485:27
 1e0954a:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1485:27
 1e0954e:    42 96             	r2 = r3 + 4			  ## l2cap.c:1485:25
 1e09550:    a2 04             	r2 = r2.l (u)			  ## l2cap.c:1487:22
 1e09552:    92 e0 27 30       	if (r2 < 9) goto 78 <.GJTIE589_0_0_+0x106 : 1e095a4 >			  ## l2cap.c:1487:22
 1e09556:    83 70             	r3 = 8
 1e09558:    85 70             	r5 = 8
 1e0955a:    16 9a             	r6 = r5 + 1			  ## l2cap.c:1492:16
 1e0955c:    07 fa 00 13       	r7 = b[r1+r3] (u)			  ## l2cap.c:1488:30
 1e09560:    a3 05             	r3 = r6.l (u)			  ## l2cap.c:1493:22
 1e09562:    03 fa 00 13       	r3 = b[r1+r3] (u)			  ## l2cap.c:1493:22
 1e09566:    36 fd 80 79       	r6 = r7 & 4294967167			  ## l2cap.c:1489:43
 1e0956a:    25 80             	r5 += 2			  ## l2cap.c:1493:33
 1e0956c:    16 e0 0b 10       	if (r6 != 1) goto 22 <.GJTIE589_0_0_+0xE8 : 1e09586 >			  ## l2cap.c:1493:33
 1e09570:    23 e0 09 10       	if (r3 != 2) goto 18 <.GJTIE589_0_0_+0xE8 : 1e09586 >
 1e09574:    66 05             	r6 = r5.l (u)			  ## l2cap.c:1496:57
 1e09576:    16 09             	r6 += r1			  ## l2cap.c:1496:57
 1e09578:    17 6c             	r7 = b[r6 + 1] (u)			  ## l2cap.c:1496:57
 1e0957a:    06 6c             	r6 = b[r6 + 0] (u)			  ## l2cap.c:1496:57
 1e0957c:    d8 fd 40 67       	r6 <= insert(r7, p:8, l:24)			  ## l2cap.c:1496:57
 1e09580:    2e 59             	h[r4 + 36] = r6			  ## l2cap.c:1496:55
 1e09582:    06 74             	r6 = 64
 1e09584:    09 18             	goto 18 <.GJTIE589_0_0_+0xFA : 1e09598 >
 1e09586:    d7 05             	r7 = r7.b0 (s)			  ## l2cap.c:1488:30
 1e09588:    07 e0 08 b0       	ifs (r7 < 0) goto 16 <.GJTIE589_0_0_+0xFE : 1e0959c >			  ## l2cap.c:1488:30
 1e0958c:    f6 8f             	r6 += -1			  ## l2cap.c:1519:55
 1e0958e:    87 05             	r7 = r6.b0 (u)			  ## l2cap.c:1519:55
 1e09590:    06 fb 00 02       	r6 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## l2cap.c:1519:55
 1e09594:    67 e0 02 30       	if (r7 < 6) goto 4 <.GJTIE589_0_0_+0xFE : 1e0959c >			  ## l2cap.c:1519:55
 1e09598:    50 bc             	r0 |= r6			  ## l2cap.c:605:107
 1e0959a:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e0959c:    35 09             	r5 += r3			  ## l2cap.c:1523:17
 1e0959e:    63 05             	r3 = r5.l (u)			  ## l2cap.c:1487:16
 1e095a0:    23 f2 db 3f       	if (r3 < r2) goto -74 <.GJTIE589_0_0_+0xBC : 1e0955a >			  ## l2cap.c:1487:16
 1e095a4:    28 f3 47 00       	if ((r0 & 256) != 0) goto 142 <.GJTIE589_0_0_+0x198 : 1e09636 >
 1e095a8:    10 b0             	r0 |= 1			  ## l2cap.c:605:107
 1e095aa:    44 18             	goto 136 <.GJTIE589_0_0_+0x196 : 1e09634 >			  ## l2cap.c:605:107
 1e095ac:    70 e0 6b 1f       	if (r0 != 7) goto -298 <l2cap_signaling_handler_channel+0x26 : 1e09486 >
 1e095b0:    40 08             	r0 = r4			  ## l2cap.c:1690:13
 1e095b2:    02 15             	call -1532 <l2cap_finialize_channel_close : 1e08fb8 >			  ## l2cap.c:1690:13
 1e095b4:    68 1f             	goto -304 <l2cap_signaling_handler_channel+0x26 : 1e09486 >
 1e095b6:    90 62             	r0 = b[r1 + 9] (u)			  ## l2cap.c:1664:22
 1e095b8:    81 62             	r1 = b[r1 + 8] (u)			  ## l2cap.c:1664:22
 1e095ba:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1664:22
 1e095be:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1664:22
 1e095c0:    10 e0 12 00       	if (r0 == 1) goto 36 <.GJTIE589_0_0_+0x14A : 1e095e8 >			  ## l2cap.c:1665:17
 1e095c4:    16 30             	if (r0 != 0) goto 44 <.GJTIE589_0_0_+0x154 : 1e095f2 >
 1e095c6:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e095c8:    90 b0             	r0 |= 2			  ## l2cap.c:605:107
 1e095ca:    34 18             	goto 104 <.GJTIE589_0_0_+0x196 : 1e09634 >			  ## l2cap.c:605:107
 1e095cc:    11 70             	r1 = 1			  ## l2cap.c:1628:50
 1e095ce:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1628:50
 1e095d0:    30 86             	r0 += 99			  ## l2cap.c:1631:96
 1e095d2:    01 04             	r1 = r0.b0 (u)			  ## l2cap.c:1631:17
 1e095d4:    40 08             	r0 = r4			  ## l2cap.c:1631:17
 1e095d6:    8a 14             	call -1772 <l2cap_emit_channel_opened : 1e08eec >			  ## l2cap.c:1631:17
 1e095d8:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1639:17
 1e095da:    80 80             	r0 += 8			  ## l2cap.c:1639:17
 1e095dc:    41 08             	r1 = r4			  ## l2cap.c:1639:17
 1e095de:    bf f3 42 f4       	call -6012 <btstack_linked_list_remove : 1e07e66 >			  ## l2cap.c:1639:17
 1e095e2:    40 08             	r0 = r4			  ## l2cap.c:1640:17
 1e095e4:    63 14             	call -1850 <btstack_memory_l2cap_channel_free : 1e08eac >			  ## l2cap.c:1640:17
 1e095e6:    4f 1f             	goto -354 <l2cap_signaling_handler_channel+0x26 : 1e09486 >			  ## l2cap.c:1640:17
 1e095e8:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1667:40
 1e095ea:    00 f9 28 00       	r0 = b[r0 + 40] (u)			  ## l2cap.c:1667:24
 1e095ee:    24 f3 18 00       	if ((r0 & 16) != 0) goto 48 <.GJTIE589_0_0_+0x184 : 1e09622 >			  ## l2cap.c:1667:24
 1e095f2:    d0 70             	r0 = 13			  ## l2cap.c:1673:50
 1e095f4:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1673:50
 1e095f6:    1f 18             	goto 62 <.GJTIE589_0_0_+0x198 : 1e09636 >			  ## l2cap.c:1673:50
 1e095f8:    40 94             	r0 = r2 + 4			  ## l2cap.c:1539:66
 1e095fa:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1539:66
 1e095fc:    10 09             	r0 += r1			  ## l2cap.c:1539:66
 1e095fe:    01 60             	r1 = b[r0 + 0] (u)			  ## l2cap.c:1539:66
 1e09600:    12 60             	r2 = b[r0 + 1] (u)			  ## l2cap.c:1539:66
 1e09602:    23 60             	r3 = b[r0 + 2] (u)			  ## l2cap.c:1539:66
 1e09604:    30 60             	r0 = b[r0 + 3] (u)			  ## l2cap.c:1539:66
 1e09606:    15 08             	r5 = r1			  ## l2cap.c:1539:66
 1e09608:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## l2cap.c:1539:66
 1e0960c:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## l2cap.c:1539:66
 1e09610:    c8 fd c0 50       	r5 <= insert(r0, p:24, l:8)			  ## l2cap.c:1539:66
 1e09614:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:1539:64
 1e09616:    24 f3 66 1f       	if ((r1 & 16) != 0) goto -308 <.GJTIE589_0_0_+0x48 : 1e094e6 >			  ## l2cap.c:1539:64
 1e0961a:    00 70             	r0 = 0			  ## l2cap.c:1543:57
 1e0961c:    10 f9 26 40       	b[r4 + 38] = r0			  ## l2cap.c:1543:57
 1e09620:    62 1f             	goto -316 <.GJTIE589_0_0_+0x48 : 1e094e6 >			  ## l2cap.c:1543:57
 1e09622:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:610:97
 1e09624:    01 70             	r1 = 0			  ## l2cap.c:1669:57
 1e09626:    11 f9 26 40       	b[r4 + 38] = r1			  ## l2cap.c:1669:57
 1e0962a:    71 70             	r1 = 7			  ## l2cap.c:1670:50
 1e0962c:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1670:50
 1e0962e:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:610:107
 1e09632:    10 b1             	r0 |= 4			  ## l2cap.c:605:107
 1e09634:    88 58             	h[r4 + 16] = r0
 1e09636:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:1555:37
 1e09638:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:1679:13
 1e0963c:    20 e2 23 1f       	if (r0 != 34) goto -442 <l2cap_signaling_handler_channel+0x26 : 1e09486 >			  ## l2cap.c:1679:13
 1e09640:    80 70             	r0 = 8			  ## l2cap.c:1681:46
 1e09642:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1681:46
 1e09644:    01 70             	r1 = 0			  ## l2cap.c:1682:13
 1e09646:    40 08             	r0 = r4			  ## l2cap.c:1682:13
 1e09648:    51 14             	call -1886 <l2cap_emit_channel_opened : 1e08eec >			  ## l2cap.c:1682:13
 1e0964a:    11 70             	r1 = 1			  ## l2cap.c:1683:13
 1e0964c:    40 08             	r0 = r4			  ## l2cap.c:1683:13
 1e0964e:    8a 14             	call -1772 <l2cap_emit_credits : 1e08f64 >			  ## l2cap.c:1683:13
 1e09650:    1a 1f             	goto -460 <l2cap_signaling_handler_channel+0x26 : 1e09486 >			  ## l2cap.c:1683:13


l2cap_get_channel_for_local_cid:
 1e09652:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:465:0
 1e09654:    05 08             	r5 = r0			  ## l2cap.c:465:0
 1e09656:    97 f3 a1 eb       	call 3135298 <local_irq_disable : 106d9c >			  ## l2cap.c:468:5
 1e0965a:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:469:33
 1e09660:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:469:33
 1e09662:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:469:33
 1e09664:    05 28             	if (r4 == 0) goto 10 <l2cap_get_channel_for_local_cid+0x1E : 1e09670 >
 1e09666:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:471:40
 1e09668:    50 f2 06 00       	if (r0 == r5) goto 12 <l2cap_get_channel_for_local_cid+0x26 : 1e09678 >			  ## l2cap.c:471:40
 1e0966c:    04 48             	r4 = [r4 + 0]
 1e0966e:    fb 39             	if (r4 != 0) goto -10 <l2cap_get_channel_for_local_cid+0x14 : 1e09666 >
 1e09670:    97 f3 92 eb       	call 3135268 <local_irq_enable : 106d98 >			  ## l2cap.c:477:5
 1e09674:    04 70             	r4 = 0			  ## l2cap.c:477:5
 1e09676:    02 18             	goto 4 <l2cap_get_channel_for_local_cid+0x2A : 1e0967c >
 1e09678:    97 f3 8e eb       	call 3135260 <local_irq_enable : 106d98 >			  ## l2cap.c:472:13
 1e0967c:    40 08             	r0 = r4			  ## l2cap.c:479:1
 1e0967e:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:479:1


l2cap_packet_handler:
 1e09680:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:2007:0
 1e09682:    e2 0b             	sp += -60			  ## l2cap.c:2007:0
 1e09684:    29 08             	r9 = r2			  ## l2cap.c:2007:0
 1e09686:    1f 08             	r15 = r1			  ## l2cap.c:2007:0
 1e09688:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2007:0
 1e0968e:    20 e0 28 00       	if (r0 == 2) goto 80 <.GJTIE591_1_1_+0x1C : 1e096e2 >			  ## l2cap.c:2008:5
 1e09692:    40 e0 9a 12       	if (r0 != 4) goto 1332 <.GJTIE591_0_0_+0x4AC : 1e09bca >
 1e09696:    00 62             	r0 = b[r1 + 0] (u)
 1e09698:    01 fc fd ff       	r1 = r0 + -3			  ## l2cap.c:1166:5
 1e0969c:    01 e1 42 81       	if (r1 > 16) goto 644 <.GJTIE591_0_0_+0x206 : 1e09924 >
 1e096a0:    48 c0             	r0 = r1 << 1
 1e096a2:    b0 00             	tbh [r0]


.GJTIL591_1_1_:
 1e096a4:    b6 01     < 438 : 0x1B6 >
 1e096a6:    7c 02     < 636 : 0x27C >
 1e096a8:    fe 01     < 510 : 0x1FE >
 1e096aa:    11 00     < 17 : 0x11 >
 1e096ac:    7c 02     < 636 : 0x27C >
 1e096ae:    11 00     < 17 : 0x11 >
 1e096b0:    7c 02     < 636 : 0x27C >
 1e096b2:    7c 02     < 636 : 0x27C >
 1e096b4:    7c 02     < 636 : 0x27C >
 1e096b6:    7c 02     < 636 : 0x27C >
 1e096b8:    7c 02     < 636 : 0x27C >
 1e096ba:    7a 02     < 634 : 0x27A >
 1e096bc:    7a 02     < 634 : 0x27A >
 1e096be:    7c 02     < 636 : 0x27C >
 1e096c0:    7c 02     < 636 : 0x27C >
 1e096c2:    7c 02     < 636 : 0x27C >
 1e096c4:    54 02     < 596 : 0x254 >
 1e096c6:    02 f9 04 f0       	r2 = b[r15 + 4] (u)
 1e096ca:    00 f9 03 f0       	r0 = b[r15 + 3] (u)
 1e096ce:    01 f9 02 f0       	r1 = b[r15 + 2] (u)
 1e096d2:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)
 1e096d6:    20 04             	r0 = r0.l (u)
 1e096d8:    01 e0 55 02       	if (r1 == 0) goto 1194 <.GJTIE591_0_0_+0x468 : 1e09b86 >
 1e096dc:    bf f3 4f fa       	call -2914 <hci_disconnect_cmd : 1e08b7e >
 1e096e0:    5b 1a             	goto 1206 <.GJTIE591_0_0_+0x47A : 1e09b98 >
 1e096e2:    70 62             	r0 = b[r1 + 7] (u)			  ## l2cap.c:1937:22
 1e096e4:    61 62             	r1 = b[r1 + 6] (u)			  ## l2cap.c:1937:22
 1e096e6:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1937:22
 1e096ea:    60 04             	r0 = r1.l (u)
 1e096ec:    01 fc ff ff       	r1 = r0 + -1			  ## l2cap.c:1944:5
 1e096f0:    51 e0 38 81       	if (r1 > 5) goto 624 <.GJTIE591_0_0_+0x246 : 1e09964 >			  ## l2cap.c:1944:5
 1e096f4:    03 f9 01 f0       	r3 = b[r15 + 1] (u)			  ## l2cap.c:1938:31
 1e096f8:    02 f9 00 f0       	r2 = b[r15 + 0] (u)			  ## l2cap.c:1938:31
 1e096fc:    1b c2             	r3 = r3 << 8			  ## l2cap.c:1938:31
 1e096fe:    23 fd 0f 3a       	r3 = r3 & 3840			  ## l2cap.c:1938:31
 1e09702:    e0 fd 20 43       	r4 = r3 | r2			  ## l2cap.c:1938:31
 1e09706:    4c 02             	[sp+16] = r4			  ## l2cap.c:1938:31
 1e09708:    4d c0             	r5 = r1 << 1			  ## l2cap.c:1938:31
 1e0970a:    c4 ff a8 1a 00 00 	r4 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:1938:31
 1e09710:    b5 00             	tbh [r5]			  ## l2cap.c:1938:31


.GJTIL591_0_0_:
 1e09712:    06 00     < 6 : 0x6 >
 1e09714:    29 01     < 297 : 0x129 >
 1e09716:    29 01     < 297 : 0x129 >
 1e09718:    35 01     < 309 : 0x135 >
 1e0971a:    42 01     < 322 : 0x142 >
 1e0971c:    73 01     < 371 : 0x173 >
 1e0971e:    99 e0 52 32       	if (r9 < 9) goto 1188 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >
 1e09722:    c0 a2             	r0 = sp + 44
 1e09724:    20 80             	r0 += 2
 1e09726:    38 02             	[sp+12] = r0
 1e09728:    84 70             	r4 = 8
 1e0972a:    0e 70             	r14 = 0
 1e0972c:    40 02             	r0 = [sp+16]
 1e0972e:    27 04             	r7 = r0.l (u)
 1e09730:    c8 ff 30 1b 00 00 	r8 = 6960 <__user_info+0x70 : 1b30 >
 1e09736:    dc 18             	goto 440 <.GJTIE591_0_0_+0x1D2 : 1e098f0 >
 1e09738:    a1 e0 37 00       	if (r1 == 10) goto 110 <.GJTIE591_0_0_+0x8C : 1e097aa >			  ## l2cap.c:1727:5
 1e0973c:    21 e0 3e 10       	if (r1 != 2) goto 124 <.GJTIE591_0_0_+0x9E : 1e097bc >
 1e09740:    60 6c             	r0 = b[r6 + 6] (u)			  ## l2cap.c:1730:26
 1e09742:    71 6c             	r1 = b[r6 + 7] (u)			  ## l2cap.c:1730:26
 1e09744:    52 6c             	r2 = b[r6 + 5] (u)			  ## l2cap.c:1729:26
 1e09746:    0a f9 04 60       	r10 = b[r6 + 4] (u)			  ## l2cap.c:1729:26
 1e0974a:    0b c2             	r3 = r1 << 8			  ## l2cap.c:1730:26
 1e0974c:    f0 fd 40 c2       	r12 = r2 << 8			  ## l2cap.c:1729:26
 1e09750:    81 08             	r1 = r8			  ## l2cap.c:1729:26
 1e09752:    32 42             	r2 = [r1 + 12]			  ## avctp_user.c:2719:19
 1e09754:    1d f3 02 20       	if ((r2 & 536870912) == 0) goto 4 <.GJTIE591_0_0_+0x3E : 1e0975c >			  ## avctp_user.c:2719:19
 1e09758:    1e f9 11 10       	b[r1 + 17] = r14			  ## avctp_user.c:2720:29
 1e0975c:    81 81             	r1 += 24			  ## avctp_user.c:2718:5
 1e0975e:    82 fc 18 00       	r2 = r8 + 24			  ## avctp_user.c:2718:5
 1e09762:    21 f2 f6 3f       	if (r1 < r2) goto -20 <.GJTIE591_0_0_+0x34 : 1e09752 >			  ## avctp_user.c:2718:5
 1e09766:    c1 ff 98 1a 00 00 	r1 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2215:33
 1e0976c:    0b f6 00 10       	r11 = [r1 + 0]			  ## l2cap.c:2215:33
 1e09770:    0d f6 04 b0       	r13 = [r11 + 4]			  ## l2cap.c:2215:33
 1e09774:    e0 fd 00 23       	r2 = r3 | r0			  ## l2cap.c:1730:26
 1e09778:    0d e0 0c 00       	if (r13 == 0) goto 24 <.GJTIE591_0_0_+0x76 : 1e09794 >			  ## l2cap.c:1730:26
 1e0977c:    e0 fd a0 cc       	r12 = r12 | r10			  ## l2cap.c:1729:26
 1e09780:    00 f7 04 d0       	r0 = h[r13 + 4] (u)			  ## l2cap.c:2217:22
 1e09784:    e6 fd 00 1c       	r1 = r12.l (u)			  ## l2cap.c:2217:26
 1e09788:    10 f2 2f 00       	if (r0 == r1) goto 94 <.GJTIE591_0_0_+0xCC : 1e097ea >			  ## l2cap.c:2217:26
 1e0978c:    0d f6 00 d0       	r13 = [r13 + 0]
 1e09790:    0d e0 f6 1f       	if (r13 != 0) goto -20 <.GJTIE591_0_0_+0x62 : 1e09780 >
 1e09794:    a3 04             	r3 = r2.l (u)			  ## l2cap.c:1388:9
 1e09796:    21 70             	r1 = 2			  ## l2cap.c:1388:9
 1e09798:    20 70             	r0 = 2			  ## l2cap.c:1388:9
 1e0979a:    08 02             	[sp] = r0
 1e0979c:    70 08             	r0 = r7
 1e0979e:    52 08             	r2 = r5
 1e097a0:    2f 16             	call -930 <l2cap_register_signaling_response : 1e09400 >
 1e097a2:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >
 1e097a8:    b3 18             	goto 358 <.GJTIE591_0_0_+0x1F2 : 1e09910 >
 1e097aa:    50 6c             	r0 = b[r6 + 5] (u)			  ## l2cap.c:1746:28
 1e097ac:    41 6c             	r1 = b[r6 + 4] (u)			  ## l2cap.c:1746:28
 1e097ae:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1746:28
 1e097b2:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1747:13
 1e097b4:    a1 70             	r1 = 10			  ## l2cap.c:1747:13
 1e097b6:    03 70             	r3 = 0			  ## l2cap.c:1747:13
 1e097b8:    08 02             	[sp] = r0			  ## l2cap.c:1747:13
 1e097ba:    a7 18             	goto 334 <.GJTIE591_0_0_+0x1EC : 1e0990a >			  ## l2cap.c:1747:13
 1e097bc:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1762:37
 1e097c0:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:1762:37
 1e097c2:    a6 20             	if (r0 == 0) goto 332 <.GJTIE591_0_0_+0x1F2 : 1e09910 >
 1e097c4:    53 6c             	r3 = b[r6 + 5] (u)			  ## l2cap.c:1757:16
 1e097c6:    42 6c             	r2 = b[r6 + 4] (u)			  ## l2cap.c:1757:16
 1e097c8:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## l2cap.c:1757:16
 1e097cc:    23 50             	r3 = h[r0 + 4] (u)			  ## l2cap.c:1764:26
 1e097ce:    73 f2 09 10       	if (r3 != r7) goto 18 <.GJTIE591_0_0_+0xC6 : 1e097e4 >			  ## l2cap.c:1764:26
 1e097d2:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE591_0_0_+0xC0 : 1e097de >
 1e097d6:    f3 50             	r3 = h[r0 + 30] (u)			  ## l2cap.c:1773:25
 1e097d8:    23 f2 04 10       	if (r3 != r2) goto 8 <.GJTIE591_0_0_+0xC6 : 1e097e4 >			  ## l2cap.c:1773:25
 1e097dc:    81 18             	goto 258 <.GJTIE591_0_0_+0x1C2 : 1e098e0 >			  ## l2cap.c:1773:25
 1e097de:    43 61             	r3 = b[r0 + 20] (u)			  ## l2cap.c:1767:52
 1e097e0:    53 f2 7e 00       	if (r3 == r5) goto 252 <.GJTIE591_0_0_+0x1C2 : 1e098e0 >			  ## l2cap.c:1767:52
 1e097e4:    00 40             	r0 = [r0 + 0]
 1e097e6:    f2 31             	if (r0 != 0) goto -28 <.GJTIE591_0_0_+0xAE : 1e097cc >
 1e097e8:    93 18             	goto 294 <.GJTIE591_0_0_+0x1F2 : 1e09910 >
 1e097ea:    2a 02             	[sp+8] = r2
 1e097ec:    70 08             	r0 = r7			  ## l2cap.c:1392:27
 1e097ee:    bf f3 c4 f9       	call -3192 <connection_address_for_handle : 1e08b7a >			  ## l2cap.c:1392:27
 1e097f2:    03 08             	r3 = r0			  ## l2cap.c:1392:27
 1e097f4:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >
 1e097fa:    8a 26             	if (r3 == 0) goto 276 <.GJTIE591_0_0_+0x1F2 : 1e09910 >
 1e097fc:    1f 16             	call -962 <btstack_memory_l2cap_channel_get : 1e0943c >			  ## l2cap.c:1400:35
 1e097fe:    0a 08             	r10 = r0			  ## l2cap.c:1400:35
 1e09800:    72 20             	if (r0 == 0) goto 228 <.GJTIE591_0_0_+0x1C8 : 1e098e6 >			  ## l2cap.c:1400:35
 1e09802:    60 81             	r0 += 22			  ## l2cap.c:1408:5
 1e09804:    62 70             	r2 = 6			  ## l2cap.c:1408:5
 1e09806:    18 02             	[sp+4] = r0			  ## l2cap.c:1408:5
 1e09808:    31 08             	r1 = r3			  ## l2cap.c:1408:5
 1e0980a:    97 f3 6b eb       	call 3135190 <memcpy : 106ee4 >			  ## l2cap.c:1408:5
 1e0980e:    1c f7 1c a0       	h[r10 + 28] = r12			  ## l2cap.c:1409:36
 1e09812:    40 02             	r0 = [sp+16]			  ## l2cap.c:1410:21
 1e09814:    10 f7 04 a0       	h[r10 + 4] = r0			  ## l2cap.c:1410:21
 1e09818:    00 f6 08 d0       	r0 = [r13 + 8]			  ## l2cap.c:1411:36
 1e0981c:    10 f6 08 a0       	[r10 + 8] = r0			  ## l2cap.c:1411:25
 1e09820:    00 f6 0c d0       	r0 = [r13 + 12]			  ## l2cap.c:1412:40
 1e09824:    10 f6 0c a0       	[r10 + 12] = r0			  ## l2cap.c:1412:29
 1e09828:    00 f7 36 b0       	r0 = h[r11 + 54] (u)			  ## l2cap.c:133:59
 1e0982c:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e0982e:    11 f7 36 b0       	h[r11 + 54] = r1			  ## l2cap.c:133:59
 1e09832:    10 f7 1e a0       	h[r10 + 30] = r0			  ## l2cap.c:1413:43
 1e09836:    20 02             	r0 = [sp+8]			  ## l2cap.c:1414:43
 1e09838:    10 f7 20 a0       	h[r10 + 32] = r0			  ## l2cap.c:1414:43
 1e0983c:    00 f7 06 d0       	r0 = h[r13 + 6] (u)			  ## l2cap.c:1415:54
 1e09840:    10 f7 22 a0       	h[r10 + 34] = r0			  ## l2cap.c:1415:43
 1e09844:    01 fb 9c 02       	r1 = 668 <_MASK_MEM_SIZE+0x8 : 29c >			  ## l2cap.c:1416:43
 1e09848:    11 f7 24 a0       	h[r10 + 36] = r1			  ## l2cap.c:1416:43
 1e0984c:    15 f9 13 a0       	b[r10 + 19] = r5			  ## l2cap.c:1417:46
 1e09850:    01 f9 28 b0       	r1 = b[r11 + 40] (u)			  ## l2cap.c:1419:39
 1e09854:    89 d0             	r1 = r1 >> 2			  ## l2cap.c:1419:9
 1e09856:    21 fd 04 19       	r1 = r1 & 4			  ## l2cap.c:1419:9
 1e0985a:    11 f9 26 a0       	b[r10 + 38] = r1			  ## l2cap.c:1419:9
 1e0985e:    03 ff 9d 02 04 00 	if (r0 < 669) goto 8 <.GJTIE591_0_0_+0x14E : 1e0986c >			  ## l2cap.c:1419:9
 1e09864:    00 fb 9c 02       	r0 = 668 <_MASK_MEM_SIZE+0x8 : 29c >			  ## l2cap.c:1426:46
 1e09868:    10 f7 22 a0       	h[r10 + 34] = r0			  ## l2cap.c:1426:46
 1e0986c:    40 70             	r0 = 4			  ## l2cap.c:1430:38
 1e0986e:    10 f9 12 a0       	b[r10 + 18] = r0			  ## l2cap.c:1430:38
 1e09872:    1e f7 10 a0       	h[r10 + 16] = r14			  ## l2cap.c:1431:42
 1e09876:    b0 fc 08 00       	r0 = r11 + 8			  ## l2cap.c:1434:5
 1e0987a:    a1 08             	r1 = r10			  ## l2cap.c:1434:5
 1e0987c:    e7 15             	call -1074 <btstack_linked_list_add : 1e0944c >			  ## l2cap.c:1434:5
 1e0987e:    20 77             	r0 = 114			  ## l2cap.c:356:14
 1e09880:    d0 f5 2c 00       	b[sp+44] = r0			  ## l2cap.c:356:14
 1e09884:    e0 70             	r0 = 14			  ## l2cap.c:357:14
 1e09886:    d0 f5 2d 00       	b[sp+45] = r0			  ## l2cap.c:357:14
 1e0988a:    62 70             	r2 = 6			  ## utils.c:188:5
 1e0988c:    30 02             	r0 = [sp+12]			  ## utils.c:188:5
 1e0988e:    11 02             	r1 = [sp+4]			  ## utils.c:188:5
 1e09890:    97 f3 28 eb       	call 3135056 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e09894:    00 f7 04 a0       	r0 = h[r10 + 4] (u)			  ## l2cap.c:359:37
 1e09898:    d0 f5 34 00       	b[sp+52] = r0			  ## utils.c:160:19
 1e0989c:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0989e:    d0 f5 35 00       	b[sp+53] = r0			  ## utils.c:161:19
 1e098a2:    00 f7 1c a0       	r0 = h[r10 + 28] (u)			  ## l2cap.c:360:55
 1e098a6:    d0 f5 36 00       	b[sp+54] = r0			  ## utils.c:160:19
 1e098aa:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e098ac:    d0 f5 37 00       	b[sp+55] = r0			  ## utils.c:161:19
 1e098b0:    00 f7 1e a0       	r0 = h[r10 + 30] (u)			  ## l2cap.c:361:55
 1e098b4:    d0 f5 38 00       	b[sp+56] = r0			  ## utils.c:160:19
 1e098b8:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e098ba:    d0 f5 39 00       	b[sp+57] = r0			  ## utils.c:161:19
 1e098be:    00 f7 20 a0       	r0 = h[r10 + 32] (u)			  ## l2cap.c:362:55
 1e098c2:    d0 f5 3a 00       	b[sp+58] = r0			  ## utils.c:160:19
 1e098c6:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e098c8:    d0 f5 3b 00       	b[sp+59] = r0			  ## utils.c:161:19
 1e098cc:    c2 a2             	r2 = sp + 44			  ## utils.c:161:19
 1e098ce:    41 70             	r1 = 4			  ## l2cap.c:363:5
 1e098d0:    03 71             	r3 = 16			  ## l2cap.c:363:5
 1e098d2:    a0 08             	r0 = r10			  ## l2cap.c:363:5
 1e098d4:    bf f3 f5 fa       	call -2582 <l2cap_dispatch : 1e08ec2 >			  ## l2cap.c:363:5
 1e098d8:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:363:5
 1e098de:    18 18             	goto 48 <.GJTIE591_0_0_+0x1F2 : 1e09910 >			  ## l2cap.c:363:5
 1e098e0:    61 08             	r1 = r6
 1e098e2:    be 15             	call -1156 <l2cap_signaling_handler_channel : 1e09460 >
 1e098e4:    15 18             	goto 42 <.GJTIE591_0_0_+0x1F2 : 1e09910 >
 1e098e6:    20 02             	r0 = [sp+8]			  ## l2cap.c:1403:9
 1e098e8:    23 04             	r3 = r0.l (u)			  ## l2cap.c:1403:9
 1e098ea:    21 70             	r1 = 2			  ## l2cap.c:1403:9
 1e098ec:    40 70             	r0 = 4			  ## l2cap.c:1403:9
 1e098ee:    55 1f             	goto -342 <.GJTIE591_0_0_+0x7C : 1e0979a >			  ## l2cap.c:1403:9
 1e098f0:    80 fb 40 6f       	r6 = r15 + r4			  ## l2cap.c:1950:55
 1e098f4:    01 6c             	r1 = b[r6 + 0] (u)			  ## l2cap.c:1717:17
 1e098f6:    15 6c             	r5 = b[r6 + 1] (u)			  ## l2cap.c:1718:17
 1e098f8:    04 22             	if (r1 == 0) goto 8 <.GJTIE591_0_0_+0x1E4 : 1e09902 >			  ## l2cap.c:1718:17
 1e098fa:    91 e0 02 00       	if (r1 == 9) goto 4 <.GJTIE591_0_0_+0x1E4 : 1e09902 >
 1e098fe:    c1 e0 1b 3f       	if (r1 < 12) goto -458 <.GJTIE591_0_0_+0x1A : 1e09738 >
 1e09902:    11 70             	r1 = 1			  ## l2cap.c:1722:9
 1e09904:    03 70             	r3 = 0			  ## l2cap.c:1722:9
 1e09906:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:1722:9
 1e0990a:    70 08             	r0 = r7
 1e0990c:    52 08             	r2 = r5
 1e0990e:    78 15             	call -1296 <l2cap_register_signaling_response : 1e09400 >
 1e09910:    30 6c             	r0 = b[r6 + 3] (u)			  ## l2cap.c:1953:69
 1e09912:    21 6c             	r1 = b[r6 + 2] (u)			  ## l2cap.c:1953:69
 1e09914:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1953:69
 1e09918:    40 b8             	r0 = r4 + r1			  ## l2cap.c:1953:67
 1e0991a:    40 80             	r0 += 4			  ## l2cap.c:1953:28
 1e0991c:    24 04             	r4 = r0.l (u)			  ## l2cap.c:1948:16
 1e0991e:    94 f2 e7 3f       	if (r4 < r9) goto -50 <.GJTIE591_0_0_+0x1D2 : 1e098f0 >			  ## l2cap.c:1948:16
 1e09922:    51 19             	goto 674 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1948:16
 1e09924:    80 e1 22 01       	if (r0 == 24) goto 580 <.GJTIE591_0_0_+0x44E : 1e09b6c >
 1e09928:    30 e7 38 11       	if (r0 != 115) goto 624 <.GJTIE591_0_0_+0x47E : 1e09b9c >
 1e0992c:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1330:37
 1e09930:    02 f9 03 f0       	r2 = b[r15 + 3] (u)			  ## l2cap.c:1325:18
 1e09934:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1325:18
 1e09938:    21 42             	r1 = [r1 + 8]			  ## l2cap.c:1325:18
 1e0993a:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)			  ## l2cap.c:1325:18
 1e0993e:    0d 22             	if (r1 == 0) goto 26 <.GJTIE591_0_0_+0x23C : 1e0995a >			  ## l2cap.c:1325:18
 1e09940:    02 70             	r2 = 0
 1e09942:    23 04             	r3 = r0.l (u)
 1e09944:    24 52             	r4 = h[r1 + 4] (u)			  ## l2cap.c:1332:27
 1e09946:    34 f2 04 10       	if (r4 != r3) goto 8 <.GJTIE591_0_0_+0x234 : 1e09952 >			  ## l2cap.c:1332:27
 1e0994a:    e4 52             	r4 = h[r1 + 28] (u)			  ## l2cap.c:1332:76
 1e0994c:    14 e0 01 00       	if (r4 == 1) goto 2 <.GJTIE591_0_0_+0x234 : 1e09952 >
 1e09950:    12 70             	r2 = 1
 1e09952:    01 42             	r1 = [r1 + 0]
 1e09954:    f7 33             	if (r1 != 0) goto -18 <.GJTIE591_0_0_+0x226 : 1e09944 >
 1e09956:    02 e0 21 11       	if (r2 != 0) goto 578 <.GJTIE591_0_0_+0x47E : 1e09b9c >
 1e0995a:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1339:9
 1e0995c:    31 71             	r1 = 19			  ## l2cap.c:1339:9
 1e0995e:    bf f3 0e f9       	call -3556 <hci_disconnect_cmd : 1e08b7e >			  ## l2cap.c:1339:9
 1e09962:    1c 19             	goto 568 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1339:9
 1e09964:    76 16             	call -788 <l2cap_get_channel_for_local_cid : 1e09652 >			  ## l2cap.c:1995:36
 1e09966:    00 e0 2e 01       	if (r0 == 0) goto 604 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >
 1e0996a:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:1997:57
 1e0996e:    91 fc f8 ff       	r1 = r9 + -8			  ## l2cap.c:1997:93
 1e09972:    63 04             	r3 = r1.l (u)			  ## l2cap.c:1997:13
 1e09974:    61 70             	r1 = 6			  ## l2cap.c:1997:13
 1e09976:    bf f3 a4 fa       	call -2744 <l2cap_dispatch : 1e08ec2 >			  ## l2cap.c:1997:13
 1e0997a:    25 19             	goto 586 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >
 1e0997c:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:1977:90
 1e0997e:    04 e0 22 01       	if (r4 == 0) goto 580 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1977:90
 1e09982:    40 02             	r0 = [sp+16]			  ## l2cap.c:1978:17
 1e09984:    21 04             	r1 = r0.l (u)			  ## l2cap.c:1978:17
 1e09986:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:1978:128
 1e0998a:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:1978:164
 1e0998e:    23 04             	r3 = r0.l (u)			  ## l2cap.c:1978:17
 1e09990:    80 70             	r0 = 8			  ## l2cap.c:1978:17
 1e09992:    84 00             	call r4			  ## l2cap.c:1978:17
 1e09994:    18 19             	goto 560 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1978:17
 1e09996:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## l2cap.c:1963:28
 1e0999a:    01 f9 0a f0       	r1 = b[r15 + 10] (u)			  ## l2cap.c:1963:28
 1e0999e:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:1963:28
 1e099a2:    c0 92             	r0 = r1 + 12			  ## l2cap.c:1964:43
 1e099a4:    90 f2 0f 81       	if (r0 > r9) goto 542 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1964:43
 1e099a8:    05 f9 09 f0       	r5 = b[r15 + 9] (u)			  ## l2cap.c:1962:31
 1e099ac:    07 f9 08 f0       	r7 = b[r15 + 8] (u)			  ## l2cap.c:1819:22
 1e099b0:    f6 fc 08 00       	r6 = r15 + 8			  ## l2cap.c:1967:76
 1e099b4:    21 70             	r1 = 2			  ## l2cap.c:1820:22
 1e099b6:    60 08             	r0 = r6			  ## l2cap.c:1820:22
 1e099b8:    bf f3 6a f3       	call -6444 <little_endian_read_16 : 1e08090 >			  ## l2cap.c:1820:22
 1e099bc:    77 e0 03 01       	if (r7 == 7) goto 518 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1820:22
 1e099c0:    c4 ff 9c 1a 00 00 	r4 = 6812 <le_l2cap_event_packet_handler : 1a9c >
 1e099c6:    37 e1 f4 00       	if (r7 == 19) goto 488 <.GJTIE591_0_0_+0x494 : 1e09bb2 >
 1e099ca:    27 e1 f4 10       	if (r7 != 18) goto 488 <.GJTIE591_0_0_+0x498 : 1e09bb6 >
 1e099ce:    80 e0 f2 30       	if (r0 < 8) goto 484 <.GJTIE591_0_0_+0x498 : 1e09bb6 >
 1e099d2:    40 02             	r0 = [sp+16]			  ## l2cap.c:1831:22
 1e099d4:    27 04             	r7 = r0.l (u)			  ## l2cap.c:1831:22
 1e099d6:    70 08             	r0 = r7			  ## l2cap.c:1831:22
 1e099d8:    bf f3 7f f3       	call -6402 <le_hci_connection_for_handle : 1e080da >			  ## l2cap.c:1831:22
 1e099dc:    02 08             	r2 = r0			  ## l2cap.c:1831:22
 1e099de:    02 e0 6e 01       	if (r2 == 0) goto 732 <.GJTIE591_0_0_+0x5A0 : 1e09cbe >
 1e099e2:    00 65             	r0 = b[r2 + 16] (u)			  ## l2cap.c:1833:29
 1e099e4:    00 e0 32 01       	if (r0 == 0) goto 612 <.GJTIE591_0_0_+0x52E : 1e09c4c >			  ## l2cap.c:1833:17
 1e099e8:    02 f9 11 f0       	r2 = b[r15 + 17] (u)			  ## l2cap.c:1837:17
 1e099ec:    00 70             	r0 = 0
 1e099ee:    f1 71             	r1 = 31			  ## l2cap.c:1837:17
 1e099f0:    03 70             	r3 = 0			  ## l2cap.c:1837:17
 1e099f2:    08 02             	[sp] = r0			  ## l2cap.c:1837:17
 1e099f4:    70 08             	r0 = r7			  ## l2cap.c:1837:17
 1e099f6:    e6 18             	goto 460 <.GJTIE591_0_0_+0x4A6 : 1e09bc4 >			  ## l2cap.c:1837:17
 1e099f8:    24 48             	r4 = [r4 + 8]			  ## l2cap.c:1985:97
 1e099fa:    e5 28             	if (r4 == 0) goto 458 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1985:97
 1e099fc:    40 02             	r0 = [sp+16]			  ## l2cap.c:1986:17
 1e099fe:    21 04             	r1 = r0.l (u)			  ## l2cap.c:1986:17
 1e09a00:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:1986:134
 1e09a04:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:1986:170
 1e09a08:    23 04             	r3 = r0.l (u)			  ## l2cap.c:1986:17
 1e09a0a:    90 70             	r0 = 9			  ## l2cap.c:1986:17
 1e09a0c:    84 00             	call r4			  ## l2cap.c:1986:17
 1e09a0e:    db 18             	goto 438 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1986:17
 1e09a10:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e09a14:    01 f9 09 f0       	r1 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e09a18:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e09a1c:    91 f5 20 00       	h[sp+32] = r1			  ## utils.c:188:5
 1e09a20:    00 f9 08 f0       	r0 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e09a24:    01 f9 07 f0       	r1 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e09a28:    02 f9 06 f0       	r2 = b[r15 + 6] (u)			  ## utils.c:188:5
 1e09a2c:    03 f9 05 f0       	r3 = b[r15 + 5] (u)			  ## utils.c:188:5
 1e09a30:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e09a34:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e09a38:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e09a3c:    7b 02             	[sp+28] = r3			  ## utils.c:188:5
 1e09a3e:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e09a42:    90 b0             	r0 |= 2			  ## l2cap.c:1214:42
 1e09a44:    20 e0 aa 00       	if (r0 == 2) goto 340 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1214:42
 1e09a48:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1217:13
 1e09a4c:    c0 20             	if (r0 == 0) goto 384 <.GJTIE591_0_0_+0x4B0 : 1e09bce >			  ## l2cap.c:1217:13
 1e09a4e:    c0 a1             	r0 = sp + 28
 1e09a50:    51 72             	r1 = 37			  ## l2cap.c:1225:13
 1e09a52:    02 70             	r2 = 0			  ## l2cap.c:1225:13
 1e09a54:    bf f3 34 f8       	call -3992 <check_l2cap_authentication_flag : 1e08ac0 >			  ## l2cap.c:1225:13
 1e09a58:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1076:44
 1e09a5c:    20 42             	r0 = [r1 + 8]			  ## l2cap.c:1077:16
 1e09a5e:    9e 20             	if (r0 == 0) goto 316 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1077:16
 1e09a60:    05 f9 02 f0       	r5 = b[r15 + 2] (u)			  ## l2cap.c:1227:62
 1e09a64:    84 92             	r4 = r1 + 8			  ## l2cap.c:1076:57
 1e09a66:    46 08             	r6 = r4			  ## l2cap.c:1076:57
 1e09a68:    67 08             	r7 = r6
 1e09a6a:    06 08             	r6 = r0
 1e09a6c:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1079:15
 1e09a6e:    c1 a1             	r1 = sp + 28			  ## l2cap.c:1079:15
 1e09a70:    62 70             	r2 = 6			  ## l2cap.c:1079:15
 1e09a72:    97 f3 3b ea       	call 3134582 <memcmp : 106eec >			  ## l2cap.c:1079:15
 1e09a76:    10 30             	if (r0 != 0) goto 32 <.GJTIE591_0_0_+0x37A : 1e09a98 >			  ## l2cap.c:1079:13
 1e09a78:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1080:34
 1e09a7a:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1080:22
 1e09a7c:    20 6d             	r0 = b[r6 + 18] (u)			  ## l2cap.c:1081:44
 1e09a7e:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1081:90
 1e09a80:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE591_0_0_+0x374 : 1e09a92 >			  ## l2cap.c:1081:90
 1e09a84:    60 08             	r0 = r6			  ## l2cap.c:1083:17
 1e09a86:    51 08             	r1 = r5			  ## l2cap.c:1083:17
 1e09a88:    bf f3 30 fa       	call -2976 <l2cap_emit_channel_opened : 1e08eec >			  ## l2cap.c:1083:17
 1e09a8c:    60 08             	r0 = r6			  ## l2cap.c:1086:17
 1e09a8e:    bf f3 0d fa       	call -3046 <btstack_memory_l2cap_channel_free : 1e08eac >			  ## l2cap.c:1086:17
 1e09a92:    06 48             	r6 = [r4 + 0]			  ## l2cap.c:1077:16
 1e09a94:    eb 3d             	if (r6 != 0) goto -42 <.GJTIE591_0_0_+0x34E : 1e09a6c >
 1e09a96:    82 18             	goto 260 <.GJTIE591_0_0_+0x47E : 1e09b9c >
 1e09a98:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1077:16
 1e09a9a:    64 08             	r4 = r6			  ## l2cap.c:1077:16
 1e09a9c:    e5 31             	if (r0 != 0) goto -54 <.GJTIE591_0_0_+0x34A : 1e09a68 >			  ## l2cap.c:1077:16
 1e09a9e:    7e 18             	goto 252 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1077:16
 1e09aa0:    72 e0 7c 30       	if (r2 < 7) goto 248 <.GJTIE591_0_0_+0x47E : 1e09b9c >
 1e09aa4:    00 f9 06 f0       	r0 = b[r15 + 6] (u)			  ## l2cap.c:1253:21
 1e09aa8:    90 b0             	r0 |= 2			  ## l2cap.c:1261:13
 1e09aaa:    00 04             	r0 = r0.b0 (u)			  ## l2cap.c:1261:13
 1e09aac:    20 e0 76 00       	if (r0 == 2) goto 236 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1261:13
 1e09ab0:    00 f9 0c f0       	r0 = b[r15 + 12] (u)			  ## utils.c:188:5
 1e09ab4:    02 f9 0b f0       	r2 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e09ab8:    01 f9 04 f0       	r1 = b[r15 + 4] (u)			  ## l2cap.c:1276:18
 1e09abc:    04 f9 03 f0       	r4 = b[r15 + 3] (u)			  ## l2cap.c:1276:18
 1e09ac0:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e09ac4:    92 f5 18 00       	h[sp+24] = r2			  ## utils.c:188:5
 1e09ac8:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e09acc:    03 f9 09 f0       	r3 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e09ad0:    05 f9 08 f0       	r5 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e09ad4:    06 f9 07 f0       	r6 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e09ad8:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e09adc:    02 f6 00 a0       	r2 = [r10 + 0]			  ## l2cap.c:1279:33
 1e09ae0:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## utils.c:188:5
 1e09ae4:    d0 fd 80 63       	r6 <= insert(r3, p:16, l:16)			  ## utils.c:188:5
 1e09ae8:    5e 02             	[sp+20] = r6			  ## utils.c:188:5
 1e09aea:    20 44             	r0 = [r2 + 8]			  ## l2cap.c:1280:20
 1e09aec:    29 20             	if (r0 == 0) goto 82 <.GJTIE591_0_0_+0x422 : 1e09b40 >			  ## l2cap.c:1280:20
 1e09aee:    86 94             	r6 = r2 + 8			  ## l2cap.c:1279:46
 1e09af0:    c8 fd 40 41       	r4 <= insert(r1, p:8, l:8)			  ## l2cap.c:1276:18
 1e09af4:    65 08             	r5 = r6			  ## l2cap.c:1276:18
 1e09af6:    57 08             	r7 = r5
 1e09af8:    05 08             	r5 = r0
 1e09afa:    61 9b             	r1 = r5 + 22			  ## l2cap.c:1286:17
 1e09afc:    40 a1             	r0 = sp + 20			  ## l2cap.c:1286:17
 1e09afe:    62 70             	r2 = 6			  ## l2cap.c:1286:17
 1e09b00:    97 f3 f4 e9       	call 3134440 <memcmp : 106eec >			  ## l2cap.c:1286:17
 1e09b04:    1a 30             	if (r0 != 0) goto 52 <.GJTIE591_0_0_+0x41C : 1e09b3a >			  ## l2cap.c:1286:17
 1e09b06:    20 5a             	r0 = h[r5 + 4] (u)			  ## l2cap.c:1287:21
 1e09b08:    02 20             	if (r0 == 0) goto 4 <.GJTIE591_0_0_+0x3F0 : 1e09b0e >			  ## l2cap.c:1287:21
 1e09b0a:    40 f2 16 10       	if (r0 != r4) goto 44 <.GJTIE591_0_0_+0x41C : 1e09b3a >
 1e09b0e:    00 4e             	r0 = [r7 + 0]			  ## l2cap.c:1290:36
 1e09b10:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:1290:42
 1e09b12:    01 9b             	r1 = r5 + 16			  ## l2cap.c:1286:17
 1e09b14:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1290:30
 1e09b16:    20 62             	r0 = b[r1 + 2] (u)			  ## l2cap.c:1291:53
 1e09b18:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1291:80
 1e09b1a:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE591_0_0_+0x408 : 1e09b26 >			  ## l2cap.c:1291:80
 1e09b1e:    50 08             	r0 = r5			  ## l2cap.c:1295:25
 1e09b20:    bf f3 36 fa       	call -2964 <l2cap_emit_channel_closed : 1e08f90 >			  ## l2cap.c:1295:25
 1e09b24:    04 18             	goto 8 <.GJTIE591_0_0_+0x410 : 1e09b2e >			  ## l2cap.c:1295:25
 1e09b26:    01 75             	r1 = 80			  ## l2cap.c:1293:25
 1e09b28:    50 08             	r0 = r5			  ## l2cap.c:1293:25
 1e09b2a:    bf f3 df f9       	call -3138 <l2cap_emit_channel_opened : 1e08eec >			  ## l2cap.c:1293:25
 1e09b2e:    50 08             	r0 = r5			  ## l2cap.c:1297:21
 1e09b30:    bf f3 bc f9       	call -3208 <btstack_memory_l2cap_channel_free : 1e08eac >			  ## l2cap.c:1297:21
 1e09b34:    05 4c             	r5 = [r6 + 0]			  ## l2cap.c:1280:20
 1e09b36:    e1 3b             	if (r5 != 0) goto -62 <.GJTIE591_0_0_+0x3DC : 1e09afa >			  ## l2cap.c:1280:20
 1e09b38:    03 18             	goto 6 <.GJTIE591_0_0_+0x422 : 1e09b40 >			  ## l2cap.c:1280:20
 1e09b3a:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1280:20
 1e09b3c:    56 08             	r6 = r5			  ## l2cap.c:1280:20
 1e09b3e:    db 31             	if (r0 != 0) goto -74 <.GJTIE591_0_0_+0x3D8 : 1e09af6 >			  ## l2cap.c:1280:20
 1e09b40:    40 a1             	r0 = sp + 20
 1e09b42:    51 72             	r1 = 37			  ## l2cap.c:1307:9
 1e09b44:    02 70             	r2 = 0			  ## l2cap.c:1307:9
 1e09b46:    bf f3 bb f7       	call -4234 <check_l2cap_authentication_flag : 1e08ac0 >			  ## l2cap.c:1307:9
 1e09b4a:    28 18             	goto 80 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1307:9
 1e09b4c:    bf f3 4f fa       	call -2914 <l2cap_run : 1e08fee >			  ## l2cap.c:1312:9
 1e09b50:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:384:33
 1e09b54:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:384:33
 1e09b56:    22 2a             	if (r5 == 0) goto 68 <.GJTIE591_0_0_+0x47E : 1e09b9c >
 1e09b58:    20 6b             	r0 = b[r5 + 18] (u)			  ## l2cap.c:389:44
 1e09b5a:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE591_0_0_+0x448 : 1e09b66 >			  ## l2cap.c:389:44
 1e09b5e:    11 70             	r1 = 1			  ## l2cap.c:393:17
 1e09b60:    50 08             	r0 = r5			  ## l2cap.c:393:17
 1e09b62:    bf f3 ff f9       	call -3074 <l2cap_emit_credits : 1e08f64 >			  ## l2cap.c:393:17
 1e09b66:    05 4a             	r5 = [r5 + 0]
 1e09b68:    f7 3b             	if (r5 != 0) goto -18 <.GJTIE591_0_0_+0x43A : 1e09b58 >
 1e09b6a:    18 18             	goto 48 <.GJTIE591_0_0_+0x47E : 1e09b9c >
 1e09b6c:    f5 fc 02 00       	r5 = r15 + 2			  ## l2cap.c:1342:55
 1e09b70:    71 72             	r1 = 39			  ## l2cap.c:1342:22
 1e09b72:    02 70             	r2 = 0			  ## l2cap.c:1342:22
 1e09b74:    50 08             	r0 = r5			  ## l2cap.c:1342:22
 1e09b76:    bf f3 a3 f7       	call -4282 <check_l2cap_authentication_flag : 1e08ac0 >			  ## l2cap.c:1342:22
 1e09b7a:    01 08             	r1 = r0			  ## l2cap.c:1342:22
 1e09b7c:    0f 22             	if (r1 == 0) goto 30 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1342:22
 1e09b7e:    50 08             	r0 = r5			  ## l2cap.c:1345:13
 1e09b80:    bf f3 5e f7       	call -4420 <handle_remote_dev_type : 1e08a40 >			  ## l2cap.c:1345:13
 1e09b84:    0b 18             	goto 22 <.GJTIE591_0_0_+0x47E : 1e09b9c >			  ## l2cap.c:1345:13
 1e09b86:    bf f3 f8 f7       	call -4112 <connection_address_for_handle : 1e08b7a >
 1e09b8a:    08 20             	if (r0 == 0) goto 16 <.GJTIE591_0_0_+0x47E : 1e09b9c >
 1e09b8c:    41 72             	r1 = 36
 1e09b8e:    22 72             	r2 = 34
 1e09b90:    bf f3 96 f7       	call -4308 <check_l2cap_authentication_flag : 1e08ac0 >
 1e09b94:    bf f3 5f f1       	call -7490 <stack_run_loop_resume : 1e07e56 >
 1e09b98:    bf f3 29 fa       	call -2990 <l2cap_run : 1e08fee >
 1e09b9c:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1354:5
 1e09ba0:    04 40             	r4 = [r0 + 0]			  ## l2cap.c:1354:18
 1e09ba2:    00 70             	r0 = 0			  ## l2cap.c:1354:5
 1e09ba4:    41 70             	r1 = 4			  ## l2cap.c:1354:5
 1e09ba6:    02 70             	r2 = 0			  ## l2cap.c:1354:5
 1e09ba8:    19 f5 00 00       	[sp] = r9			  ## l2cap.c:1354:5
 1e09bac:    f3 08             	r3 = r15			  ## l2cap.c:1354:5
 1e09bae:    84 00             	call r4			  ## l2cap.c:1354:5
 1e09bb0:    0c 18             	goto 24 <.GJTIE591_0_0_+0x4AC : 1e09bca >			  ## l2cap.c:1354:5
 1e09bb2:    20 e0 2e 20       	if (r0 >= 2) goto 92 <.GJTIE591_0_0_+0x4F4 : 1e09c12 >
 1e09bb6:    02 70             	r2 = 0			  ## l2cap.c:1969:17
 1e09bb8:    40 02             	r0 = [sp+16]			  ## l2cap.c:1969:17
 1e09bba:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1969:17
 1e09bbc:    f1 71             	r1 = 31			  ## l2cap.c:1969:17
 1e09bbe:    03 70             	r3 = 0			  ## l2cap.c:1969:17
 1e09bc0:    0a 02             	[sp] = r2			  ## l2cap.c:1969:17
 1e09bc2:    52 08             	r2 = r5			  ## l2cap.c:1969:17
 1e09bc4:    1d 14             	call -1990 <l2cap_register_signaling_response : 1e09400 >
 1e09bc6:    bf f3 12 fa       	call -3036 <l2cap_run : 1e08fee >			  ## l2cap.c:2003:5
 1e09bca:    1e 0a             	sp += 60
 1e09bcc:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:2018:1
 1e09bce:    04 f6 00 a0       	r4 = [r10 + 0]			  ## l2cap.c:1097:33
 1e09bd2:    26 48             	r6 = [r4 + 8]			  ## l2cap.c:1097:33
 1e09bd4:    e1 2d             	if (r6 == 0) goto -62 <.GJTIE591_0_0_+0x47A : 1e09b98 >
 1e09bd6:    00 f9 04 f0       	r0 = b[r15 + 4] (u)			  ## l2cap.c:1218:22
 1e09bda:    07 f9 03 f0       	r7 = b[r15 + 3] (u)			  ## l2cap.c:1218:22
 1e09bde:    f5 fc 05 00       	r5 = r15 + 5			  ## l2cap.c:1212:32
 1e09be2:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## l2cap.c:1218:22
 1e09be6:    a8 70             	r8 = 10			  ## l2cap.c:1218:22
 1e09be8:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1099:15
 1e09bea:    62 70             	r2 = 6			  ## l2cap.c:1099:15
 1e09bec:    51 08             	r1 = r5			  ## l2cap.c:1099:15
 1e09bee:    97 f3 7d e9       	call 3134202 <memcmp : 106eec >			  ## l2cap.c:1099:15
 1e09bf2:    0c 30             	if (r0 != 0) goto 24 <.GJTIE591_0_0_+0x4EE : 1e09c0c >			  ## l2cap.c:1099:15
 1e09bf4:    00 9d             	r0 = r6 + 16			  ## l2cap.c:1099:15
 1e09bf6:    20 60             	r0 = b[r0 + 2] (u)			  ## l2cap.c:1100:44
 1e09bf8:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1100:90
 1e09bfa:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE591_0_0_+0x4EE : 1e09c0c >			  ## l2cap.c:1100:90
 1e09bfe:    18 f9 12 60       	b[r6 + 18] = r8			  ## l2cap.c:1102:50
 1e09c02:    2f 5c             	h[r6 + 4] = r7			  ## l2cap.c:1103:33
 1e09c04:    b0 59             	r0 = h[r4 + 54] (u)			  ## l2cap.c:133:59
 1e09c06:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e09c08:    b9 59             	h[r4 + 54] = r1			  ## l2cap.c:133:59
 1e09c0a:    f8 5c             	h[r6 + 30] = r0			  ## l2cap.c:1104:54
 1e09c0c:    06 4c             	r6 = [r6 + 0]
 1e09c0e:    ec 3d             	if (r6 != 0) goto -40 <.GJTIE591_0_0_+0x4CA : 1e09be8 >
 1e09c10:    c3 1f             	goto -122 <.GJTIE591_0_0_+0x47A : 1e09b98 >
 1e09c12:    41 70             	r1 = 4			  ## l2cap.c:1916:18
 1e09c14:    45 70             	r5 = 4			  ## l2cap.c:1916:18
 1e09c16:    60 08             	r0 = r6			  ## l2cap.c:1916:18
 1e09c18:    bf f3 3a f2       	call -7052 <little_endian_read_16 : 1e08090 >			  ## l2cap.c:1916:18
 1e09c1c:    71 77             	r1 = 119			  ## l2cap.c:1788:14
 1e09c1e:    d1 f5 1c 00       	b[sp+28] = r1			  ## l2cap.c:1788:14
 1e09c22:    d5 f5 1d 00       	b[sp+29] = r5			  ## l2cap.c:1789:14
 1e09c26:    d2 f5 1e 00       	b[sp+30] = r2			  ## utils.c:83:19
 1e09c2a:    19 d2             	r1 = r3 >> 8			  ## utils.c:84:21
 1e09c2c:    02 48             	r2 = [r4 + 0]			  ## l2cap.c:1798:10
 1e09c2e:    d1 f5 1f 00       	b[sp+31] = r1			  ## utils.c:84:19
 1e09c32:    d0 f5 20 00       	b[sp+32] = r0			  ## utils.c:83:19
 1e09c36:    00 d2             	r0 = r0 >> 8			  ## utils.c:84:21
 1e09c38:    d0 f5 21 00       	b[sp+33] = r0			  ## utils.c:84:19
 1e09c3c:    c4 25             	if (r2 == 0) goto -120 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## utils.c:84:19
 1e09c3e:    c2 a1             	r2 = sp + 28
 1e09c40:    40 70             	r0 = 4			  ## l2cap.c:1801:5
 1e09c42:    01 70             	r1 = 0			  ## l2cap.c:1801:5
 1e09c44:    63 70             	r3 = 6			  ## l2cap.c:1801:5
 1e09c46:    bf f3 c5 b9       	call -35958 <cbk_packet_handler : 1e00fd4 >			  ## l2cap.c:1801:5
 1e09c4a:    bd 1f             	goto -134 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1801:5
 1e09c4c:    c0 ff 7e 1a 00 00 	r0 = 6782 <report_bss_size+0x6A : 1a7e >			  ## hci_vendor.c:2184:27
 1e09c52:    51 50             	r1 = h[r0 + 10] (u)			  ## hci_vendor.c:2184:27
 1e09c54:    49 02             	[sp+16] = r1			  ## hci_vendor.c:2184:27
 1e09c56:    0b f7 08 00       	r11 = h[r0 + 8] (u)			  ## hci_vendor.c:2184:27
 1e09c5a:    0c f7 06 00       	r12 = h[r0 + 6] (u)			  ## hci_vendor.c:2184:27
 1e09c5e:    0d f7 04 00       	r13 = h[r0 + 4] (u)			  ## hci_vendor.c:2184:27
 1e09c62:    0e f7 02 00       	r14 = h[r0 + 2] (u)			  ## hci_vendor.c:2184:27
 1e09c66:    0a f7 00 00       	r10 = h[r0 + 0] (u)			  ## hci_vendor.c:2184:27
 1e09c6a:    41 70             	r1 = 4			  ## l2cap.c:1843:45
 1e09c6c:    49 70             	r9 = 4			  ## l2cap.c:1843:45
 1e09c6e:    60 08             	r0 = r6			  ## l2cap.c:1843:45
 1e09c70:    bf f3 0e f2       	call -7140 <little_endian_read_16 : 1e08090 >			  ## l2cap.c:1843:45
 1e09c74:    08 08             	r8 = r0			  ## l2cap.c:1843:45
 1e09c76:    61 70             	r1 = 6			  ## l2cap.c:1844:45
 1e09c78:    60 08             	r0 = r6			  ## l2cap.c:1844:45
 1e09c7a:    bf f3 09 f2       	call -7150 <little_endian_read_16 : 1e08090 >			  ## l2cap.c:1844:45
 1e09c7e:    07 08             	r7 = r0			  ## l2cap.c:1844:45
 1e09c80:    81 70             	r1 = 8			  ## l2cap.c:1845:40
 1e09c82:    60 08             	r0 = r6			  ## l2cap.c:1845:40
 1e09c84:    bf f3 04 f2       	call -7160 <little_endian_read_16 : 1e08090 >			  ## l2cap.c:1845:40
 1e09c88:    03 08             	r3 = r0			  ## l2cap.c:1845:40
 1e09c8a:    a1 70             	r1 = 10			  ## l2cap.c:1846:47
 1e09c8c:    60 08             	r0 = r6			  ## l2cap.c:1846:47
 1e09c8e:    bf f3 ff f1       	call -7170 <little_endian_read_16 : 1e08090 >			  ## l2cap.c:1846:47
 1e09c92:    a8 f2 11 30       	if (r8 < r10) goto 34 <.GJTIE591_0_0_+0x59A : 1e09cb8 >
 1e09c96:    e7 f2 0f 80       	if (r7 > r14) goto 30 <.GJTIE591_0_0_+0x59A : 1e09cb8 >
 1e09c9a:    d3 f2 0d 30       	if (r3 < r13) goto 26 <.GJTIE591_0_0_+0x59A : 1e09cb8 >
 1e09c9e:    c3 f2 0b 80       	if (r3 > r12) goto 22 <.GJTIE591_0_0_+0x59A : 1e09cb8 >
 1e09ca2:    b0 f2 09 30       	if (r0 < r11) goto 18 <.GJTIE591_0_0_+0x59A : 1e09cb8 >
 1e09ca6:    41 02             	r1 = [sp+16]
 1e09ca8:    10 f2 06 80       	if (r0 > r1) goto 12 <.GJTIE591_0_0_+0x59A : 1e09cb8 >
 1e09cac:    18 f7 1a 20       	h[r2 + 26] = r8			  ## l2cap.c:1885:50
 1e09cb0:    ef 54             	h[r2 + 28] = r7			  ## l2cap.c:1886:50
 1e09cb2:    fb 54             	h[r2 + 30] = r3			  ## l2cap.c:1887:45
 1e09cb4:    08 55             	h[r2 + 32] = r0			  ## l2cap.c:1888:52
 1e09cb6:    29 70             	r9 = 2			  ## l2cap.c:1888:52
 1e09cb8:    19 f6 14 20       	[r2 + 20] = r9			  ## l2cap.c:1890:59
 1e09cbc:    8d 65             	b[r2 + 24] = r5			  ## l2cap.c:1892:56
 1e09cbe:    00 48             	r0 = [r4 + 0]			  ## l2cap.c:1899:14
 1e09cc0:    82 21             	if (r0 == 0) goto -252 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1899:14
 1e09cc2:    60 77             	r0 = 118			  ## l2cap.c:1903:18
 1e09cc4:    d0 f5 22 00       	b[sp+34] = r0			  ## l2cap.c:1903:18
 1e09cc8:    80 70             	r0 = 8			  ## l2cap.c:1903:18
 1e09cca:    d0 f5 23 00       	b[sp+35] = r0			  ## l2cap.c:1904:18
 1e09cce:    00 f9 0e f0       	r0 = b[r15 + 14] (u)			  ## l2cap.c:1905:9
 1e09cd2:    01 f9 12 f0       	r1 = b[r15 + 18] (u)			  ## l2cap.c:1905:9
 1e09cd6:    02 f9 0c f0       	r2 = b[r15 + 12] (u)			  ## l2cap.c:1905:9
 1e09cda:    03 f9 0d f0       	r3 = b[r15 + 13] (u)			  ## l2cap.c:1905:9
 1e09cde:    04 f9 13 f0       	r4 = b[r15 + 19] (u)			  ## l2cap.c:1905:9
 1e09ce2:    05 f9 11 f0       	r5 = b[r15 + 17] (u)			  ## l2cap.c:1905:9
 1e09ce6:    06 f9 10 f0       	r6 = b[r15 + 16] (u)			  ## l2cap.c:1905:9
 1e09cea:    07 f9 0f f0       	r7 = b[r15 + 15] (u)			  ## l2cap.c:1905:9
 1e09cee:    d4 f5 2b 00       	b[sp+43] = r4			  ## l2cap.c:1905:9
 1e09cf2:    d5 f5 29 00       	b[sp+41] = r5			  ## l2cap.c:1905:9
 1e09cf6:    d6 f5 28 00       	b[sp+40] = r6			  ## l2cap.c:1905:9
 1e09cfa:    d7 f5 27 00       	b[sp+39] = r7			  ## l2cap.c:1905:9
 1e09cfe:    d3 f5 25 00       	b[sp+37] = r3			  ## l2cap.c:1905:9
 1e09d02:    d2 f5 24 00       	b[sp+36] = r2			  ## l2cap.c:1905:9
 1e09d06:    c8 fd 40 14       	r1 <= insert(r4, p:8, l:8)			  ## l2cap.c:1905:9
 1e09d0a:    d0 fd 80 61       	r6 <= insert(r1, p:16, l:16)			  ## l2cap.c:1905:9
 1e09d0e:    31 d4             	r1 = r6 >> 16			  ## l2cap.c:1905:9
 1e09d10:    d1 f5 2a 00       	b[sp+42] = r1			  ## l2cap.c:1905:9
 1e09d14:    c8 fd 40 07       	r0 <= insert(r7, p:8, l:8)			  ## l2cap.c:1905:9
 1e09d18:    d0 fd 80 20       	r2 <= insert(r0, p:16, l:16)			  ## l2cap.c:1905:9
 1e09d1c:    10 d4             	r0 = r2 >> 16			  ## l2cap.c:1905:9
 1e09d1e:    d0 f5 26 00       	b[sp+38] = r0			  ## l2cap.c:1905:9
 1e09d22:    22 a2             	r2 = sp + 34			  ## l2cap.c:1905:9
 1e09d24:    40 70             	r0 = 4			  ## l2cap.c:1908:9
 1e09d26:    01 70             	r1 = 0			  ## l2cap.c:1908:9
 1e09d28:    a3 70             	r3 = 10			  ## l2cap.c:1908:9
 1e09d2a:    bf f3 53 b9       	call -36186 <cbk_packet_handler : 1e00fd4 >			  ## l2cap.c:1908:9
 1e09d2e:    4b 1f             	goto -362 <.GJTIE591_0_0_+0x4A8 : 1e09bc6 >			  ## l2cap.c:1908:9


btstack_memory_le_hci_connection_free:
 1e09d30:    c1 ff 94 1a 00 00 	r1 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:226:0
 1e09d36:    01 42             	r1 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e09d38:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e09d3a:    05 24             	if (r2 == 0) goto 10 <btstack_memory_le_hci_connection_free+0x16 : 1e09d46 >
 1e09d3c:    23 08             	r3 = r2
 1e09d3e:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_le_hci_connection_free+0x1A : 1e09d4a >
 1e09d42:    03 46             	r3 = [r3 + 0]
 1e09d44:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_le_hci_connection_free+0xE : 1e09d3e >
 1e09d46:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e09d48:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e09d4a:    20 00             	rts			  ## btstack_memory.c:228:1


le_hci_connection_for_bd_addr_and_type:
 1e09d4c:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_vendor.c:308:0
 1e09d4e:    fa 0b             	sp += -12			  ## hci_vendor.c:308:0
 1e09d50:    14 08             	r4 = r1			  ## hci_vendor.c:308:0
 1e09d52:    05 08             	r5 = r0			  ## hci_vendor.c:308:0
 1e09d54:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:162:14
 1e09d5a:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e09d5c:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e09d5e:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e09d60:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e09d62:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e09d64:    00 a0             	r0 = sp + 0
 1e09d66:    bf f3 9a f1       	call -7372 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## hci_vendor.c:311:12
 1e09d6a:    0e 20             	if (r0 == 0) goto 28 <le_hci_connection_for_bd_addr_and_type+0x3C : 1e09d88 >
 1e09d6c:    00 a0             	r0 = sp + 0
 1e09d6e:    bf f3 a4 f1       	call -7352 <btstack_linked_list_iterator_next : 1e080ba >			  ## hci_vendor.c:312:67
 1e09d72:    06 08             	r6 = r0			  ## hci_vendor.c:312:67
 1e09d74:    30 4c             	r0 = [r6 + 12]			  ## hci_vendor.c:313:25
 1e09d76:    40 f2 f5 1f       	if (r0 != r4) goto -22 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e09d64 >			  ## hci_vendor.c:313:25
 1e09d7a:    41 9c             	r1 = r6 + 4			  ## hci_vendor.c:316:38
 1e09d7c:    62 70             	r2 = 6			  ## hci_vendor.c:316:13
 1e09d7e:    50 08             	r0 = r5			  ## hci_vendor.c:316:13
 1e09d80:    97 f3 b4 e8       	call 3133800 <memcmp : 106eec >			  ## hci_vendor.c:316:13
 1e09d84:    ef 31             	if (r0 != 0) goto -34 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e09d64 >			  ## hci_vendor.c:316:13
 1e09d86:    01 18             	goto 2 <le_hci_connection_for_bd_addr_and_type+0x3E : 1e09d8a >			  ## hci_vendor.c:316:13
 1e09d88:    06 70             	r6 = 0
 1e09d8a:    60 08             	r0 = r6			  ## hci_vendor.c:322:1
 1e09d8c:    06 0a             	sp += 12			  ## hci_vendor.c:322:1
 1e09d8e:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_vendor.c:322:1


le_create_connection_for_bd_addr_and_type:
 1e09d90:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:283:0
 1e09d92:    c2 ff 94 1a 00 00 	r2 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:223:29
 1e09d98:    02 44             	r2 = [r2 + 0]			  ## btstack_memory.c:223:29
 1e09d9a:    04 44             	r4 = [r2 + 0]			  ## btstack_memory.c:66:23
 1e09d9c:    15 08             	r5 = r1
 1e09d9e:    06 08             	r6 = r0
 1e09da0:    20 28             	if (r4 == 0) goto 64 <le_create_connection_for_bd_addr_and_type+0x52 : 1e09de2 >
 1e09da2:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:72:31
 1e09da4:    08 44             	[r2 + 0] = r0			  ## btstack_memory.c:72:23
 1e09da6:    01 70             	r1 = 0			  ## hci_vendor.c:290:5
 1e09da8:    02 fb c8 04       	r2 = 1224 <BTCTLER_CONTROLLER_DATA_SIZE+0xC : 4c8 >			  ## hci_vendor.c:290:5
 1e09dac:    07 70             	r7 = 0			  ## hci_vendor.c:290:5
 1e09dae:    40 08             	r0 = r4			  ## hci_vendor.c:290:5
 1e09db0:    97 f3 9e e8       	call 3133756 <memset : 106ef0 >			  ## hci_vendor.c:290:5
 1e09db4:    40 98             	r0 = r4 + 4			  ## hci_vendor.c:291:5
 1e09db6:    62 70             	r2 = 6			  ## hci_vendor.c:291:5
 1e09db8:    61 08             	r1 = r6			  ## hci_vendor.c:291:5
 1e09dba:    97 f3 93 e8       	call 3133734 <memcpy : 106ee4 >			  ## hci_vendor.c:291:5
 1e09dbe:    3d 48             	[r4 + 12] = r5			  ## hci_vendor.c:292:24
 1e09dc0:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## hci_vendor.c:293:22
 1e09dc6:    58 58             	h[r4 + 10] = r0			  ## hci_vendor.c:293:22
 1e09dc8:    5f 48             	[r4 + 20] = r7			  ## hci_vendor.c:298:41
 1e09dca:    40 fc b0 04       	r0 = r4 + 1200			  ## hci_vendor.c:298:41
 1e09dce:    6f 60             	b[r0 + 6] = r7			  ## hci_vendor.c:296:33
 1e09dd0:    2f 50             	h[r0 + 4] = r7			  ## hci_vendor.c:296:33
 1e09dd2:    1f 50             	h[r0 + 2] = r7			  ## hci_vendor.c:296:33
 1e09dd4:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:300:5
 1e09dda:    41 08             	r1 = r4			  ## hci_vendor.c:300:5
 1e09ddc:    bf f3 36 fb       	call -2452 <btstack_linked_list_add : 1e0944c >			  ## hci_vendor.c:300:5
 1e09de0:    01 18             	goto 2 <le_create_connection_for_bd_addr_and_type+0x54 : 1e09de4 >			  ## hci_vendor.c:300:5
 1e09de2:    04 70             	r4 = 0
 1e09de4:    40 08             	r0 = r4			  ## hci_vendor.c:302:1
 1e09de6:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:302:1


hci_run_for_acl_data_send:
 1e09de8:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:2046:0
 1e09dea:    fa 0b             	sp += -12			  ## hci_vendor.c:2046:0
 1e09dec:    c6 ff 60 18 00 00 	r6 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:2046:0
 1e09df2:    00 f7 18 62       	r0 = h[r6 + 536] (u)			  ## hci_vendor.c:2053:22
 1e09df6:    21 20             	if (r0 == 0) goto 66 <hci_run_for_acl_data_send+0x52 : 1e09e3a >			  ## hci_vendor.c:2053:22
 1e09df8:    90 6c             	r0 = b[r6 + 9] (u)			  ## hci_vendor.c:2054:39
 1e09dfa:    81 6c             	r1 = b[r6 + 8] (u)			  ## hci_vendor.c:2054:39
 1e09dfc:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:2054:39
 1e09dfe:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:2054:39
 1e09e02:    e0 fd 10 40       	r4 = r0 | r1			  ## hci_vendor.c:2054:39
 1e09e06:    40 08             	r0 = r4			  ## hci_vendor.c:2042:12
 1e09e08:    bf f3 94 f7       	call -4312 <hci_number_free_acl_slots_for_handle : 1e08d34 >			  ## hci_vendor.c:2042:12
 1e09e0c:    10 e0 15 b0       	ifs (r0 < 1) goto 42 <hci_run_for_acl_data_send+0x52 : 1e09e3a >			  ## hci_vendor.c:2042:12
 1e09e10:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:2056:47
 1e09e12:    50 08             	r0 = r5			  ## hci_vendor.c:2056:47
 1e09e14:    bf f3 61 f1       	call -7486 <le_hci_connection_for_handle : 1e080da >			  ## hci_vendor.c:2056:47
 1e09e18:    04 08             	r4 = r0			  ## hci_vendor.c:2056:47
 1e09e1a:    09 28             	if (r4 == 0) goto 18 <hci_run_for_acl_data_send+0x46 : 1e09e2e >			  ## hci_vendor.c:2057:17
 1e09e1c:    50 08             	r0 = r5			  ## hci_vendor.c:2042:12
 1e09e1e:    bf f3 89 f7       	call -4334 <hci_number_free_acl_slots_for_handle : 1e08d34 >			  ## hci_vendor.c:2042:12
 1e09e22:    00 e0 0a d0       	ifs (r0 <= 0) goto 20 <hci_run_for_acl_data_send+0x52 : 1e09e3a >			  ## hci_vendor.c:2042:12
 1e09e26:    40 08             	r0 = r4			  ## hci_vendor.c:2059:21
 1e09e28:    bf f3 a9 f7       	call -4270 <le_hci_send_acl_packet_fragments : 1e08d7e >			  ## hci_vendor.c:2059:21
 1e09e2c:    1d 18             	goto 58 <hci_run_for_acl_data_send+0x80 : 1e09e68 >			  ## hci_vendor.c:2059:21
 1e09e2e:    60 fc 15 02       	r0 = r6 + 533			  ## hci_vendor.c:2065:52
 1e09e32:    01 70             	r1 = 0			  ## hci_vendor.c:2065:52
 1e09e34:    52 70             	r2 = 5			  ## hci_vendor.c:2065:52
 1e09e36:    97 f3 5b e8       	call 3133622 <memset : 106ef0 >			  ## hci_vendor.c:2065:52
 1e09e3a:    04 4c             	r4 = [r6 + 0]
 1e09e3c:    15 28             	if (r4 == 0) goto 42 <hci_run_for_acl_data_send+0x80 : 1e09e68 >
 1e09e3e:    05 70             	r5 = 0
 1e09e40:    c6 ff ff ff 00 00 	r6 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e09e46:    50 48             	r0 = [r4 + 20]			  ## hci_vendor.c:2074:25
 1e09e48:    30 e0 0c 10       	if (r0 != 3) goto 24 <hci_run_for_acl_data_send+0x7C : 1e09e64 >			  ## hci_vendor.c:2074:25
 1e09e4c:    5d 48             	[r4 + 20] = r5			  ## hci_vendor.c:2075:55
 1e09e4e:    d1 58             	r1 = h[r4 + 26] (u)			  ## hci_vendor.c:2094:13
 1e09e50:    dd 58             	h[r4 + 26] = r5			  ## hci_vendor.c:2078:46
 1e09e52:    f3 58             	r3 = h[r4 + 30] (u)			  ## hci_vendor.c:2094:13
 1e09e54:    e2 58             	r2 = h[r4 + 28] (u)			  ## hci_vendor.c:2094:13
 1e09e56:    50 58             	r0 = h[r4 + 10] (u)			  ## hci_vendor.c:2094:13
 1e09e58:    07 59             	r7 = h[r4 + 32] (u)			  ## hci_vendor.c:2094:13
 1e09e5a:    2e 02             	[sp+8] = r6			  ## hci_vendor.c:2094:13
 1e09e5c:    1d 02             	[sp+4] = r5			  ## hci_vendor.c:2094:13
 1e09e5e:    0f 02             	[sp] = r7			  ## hci_vendor.c:2094:13
 1e09e60:    80 f3 36 82       	call 66668 <ll_hci_connection_update : 1e1a2d0 >			  ## hci_vendor.c:2094:13
 1e09e64:    04 48             	r4 = [r4 + 0]
 1e09e66:    ef 39             	if (r4 != 0) goto -34 <hci_run_for_acl_data_send+0x5E : 1e09e46 >
 1e09e68:    06 0a             	sp += 12
 1e09e6a:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:2106:1


btstack_task:
 1e09e6c:    70 0b             	sp += -288			  ## btstack_task.c:81:0
 1e09e6e:    bf f3 97 f2       	call -6866 <btstack_task_init : 1e083a0 >			  ## btstack_task.c:85:5
 1e09e72:    00 70             	r0 = 0			  ## btstack_task.c:89:5
 1e09e74:    31 70             	r1 = 3			  ## btstack_task.c:89:5
 1e09e76:    b2 72             	r2 = 43			  ## btstack_task.c:89:5
 1e09e78:    0a 70             	r10 = 0			  ## btstack_task.c:89:5
 1e09e7a:    bf f3 66 f3       	call -6452 <update_bt_current_status : 1e0854a >			  ## btstack_task.c:89:5
 1e09e7e:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:89:5
 1e09e84:    1a f9 00 00       	b[r0 + 0] = r10			  ## btstack_task.c:89:5
 1e09e88:    c0 a1             	r0 = sp + 28			  ## btstack_task.c:89:5
 1e09e8a:    cb 90             	r11 = r0 + 12
 1e09e8c:    51 ac             	r1 = sp + 197
 1e09e8e:    c1 80             	r1 += 12
 1e09e90:    69 02             	[sp+24] = r1
 1e09e92:    e1 aa             	r1 = sp + 174
 1e09e94:    41 80             	r1 += 4
 1e09e96:    19 02             	[sp+4] = r1
 1e09e98:    6c 90             	r12 = r0 + 6
 1e09e9a:    7d 90             	r13 = r0 + 7
 1e09e9c:    b1 90             	r1 = r0 + 11
 1e09e9e:    09 02             	[sp] = r1
 1e09ea0:    9e 90             	r14 = r0 + 9
 1e09ea2:    4f 90             	r15 = r0 + 4
 1e09ea4:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e09eaa:    1b f5 14 00       	[sp+20] = r11
 1e09eae:    1c f5 10 00       	[sp+16] = r12
 1e09eb2:    1d f5 0c 00       	[sp+12] = r13
 1e09eb6:    1e f5 08 00       	[sp+8] = r14
 1e09eba:    c1 a1             	r1 = sp + 28
 1e09ebc:    00 70             	r0 = 0			  ## btstack_task.c:98:15
 1e09ebe:    02 72             	r2 = 32			  ## btstack_task.c:98:15
 1e09ec0:    97 f3 86 e7       	call 3133196 <os_taskq_pend : 106dd0 >			  ## btstack_task.c:98:15
 1e09ec4:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btstack_task+0x4E : 1e09eba >			  ## btstack_task.c:100:13
 1e09ec8:    70 02             	r0 = [sp+28]			  ## btstack_task.c:104:17
 1e09eca:    90 09             	r0 += r9			  ## btstack_task.c:104:9
 1e09ecc:    50 e0 64 83       	if (r0 > 5) goto 1736 <.GJTIE602_2_2_+0x542 : 1e0a598 >			  ## btstack_task.c:104:9
 1e09ed0:    41 c0             	r1 = r0 << 1
 1e09ed2:    b1 00             	tbh [r1]


.GJTIL602_0_0_:
 1e09ed4:    06 00     < 6 : 0x6 >
 1e09ed6:    5d 00     < 93 : 0x5D >
 1e09ed8:    62 03     < 866 : 0x362 >
 1e09eda:    76 00     < 118 : 0x76 >
 1e09edc:    62 03     < 866 : 0x362 >
 1e09ede:    7d 00     < 125 : 0x7D >
 1e09ee0:    c1 f5 20 00       	r1 = b[sp+32] (u)
 1e09ee4:    10 fc fd ff       	r0 = r1 + -3			  ## hci_vendor.c:391:5
 1e09ee8:    05 70             	r5 = 0			  ## hci_vendor.c:391:5
 1e09eea:    50 e1 a0 80       	if (r0 > 21) goto 320 <.GJTIE602_1_1_+0x110 : 1e0a02e >			  ## hci_vendor.c:391:5
 1e09eee:    41 c0             	r1 = r0 << 1
 1e09ef0:    b1 00             	tbh [r1]


.GJTIL602_1_1_:
 1e09ef2:    16 00     < 22 : 0x16 >
 1e09ef4:    f8 00     < 248 : 0xF8 >
 1e09ef6:    09 01     < 265 : 0x109 >
 1e09ef8:    2f 01     < 303 : 0x12F >
 1e09efa:    40 03     < 832 : 0x340 >
 1e09efc:    5b 01     < 347 : 0x15B >
 1e09efe:    40 03     < 832 : 0x340 >
 1e09f00:    40 03     < 832 : 0x340 >
 1e09f02:    40 03     < 832 : 0x340 >
 1e09f04:    40 03     < 832 : 0x340 >
 1e09f06:    40 03     < 832 : 0x340 >
 1e09f08:    9e 02     < 670 : 0x29E >
 1e09f0a:    40 03     < 832 : 0x340 >
 1e09f0c:    40 03     < 832 : 0x340 >
 1e09f0e:    40 03     < 832 : 0x340 >
 1e09f10:    40 03     < 832 : 0x340 >
 1e09f12:    62 01     < 354 : 0x162 >
 1e09f14:    88 01     < 392 : 0x188 >
 1e09f16:    40 03     < 832 : 0x340 >
 1e09f18:    9a 01     < 410 : 0x19A >
 1e09f1a:    c2 01     < 450 : 0x1C2 >
 1e09f1c:    fb 01     < 507 : 0x1FB >
 1e09f1e:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:602:14
 1e09f22:    50 e0 04 03       	if (r0 == 5) goto 1544 <.GJTIE602_2_2_+0x4D8 : 1e0a52e >			  ## hci_vendor.c:602:13
 1e09f26:    00 e0 24 13       	if (r0 != 0) goto 1608 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e09f2a:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:603:17
 1e09f2e:    10 e0 20 13       	if (r0 != 1) goto 1600 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:603:17
 1e09f32:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e09f38:    03 08             	r3 = r0
 1e09f3a:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e09f3c:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e09f3e:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e09f40:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e09f42:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09f46:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09f4a:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e09f4e:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e09f50:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e09f52:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e09f54:    24 fd 01 09       	r4 = r0 & 1			  ## hci_vendor.c:160:12
 1e09f58:    01 af             	r1 = sp + 240			  ## hci_vendor.c:160:12
 1e09f5a:    e0 08             	r0 = r14			  ## remote_device_db.c:344:9
 1e09f5c:    42 08             	r2 = r4			  ## remote_device_db.c:344:9
 1e09f5e:    bf f3 bf f3       	call -6274 <get_link_key : 1e086e0 >			  ## remote_device_db.c:344:9
 1e09f62:    05 20             	if (r0 == 0) goto 10 <.GJTIE602_1_1_+0x50 : 1e09f6e >			  ## remote_device_db.c:344:9
 1e09f64:    01 af             	r1 = sp + 240
 1e09f66:    e0 08             	r0 = r14			  ## remote_device_db.c:345:9
 1e09f68:    42 08             	r2 = r4			  ## remote_device_db.c:345:9
 1e09f6a:    bf f3 36 f5       	call -5524 <put_link_key : 1e089da >			  ## remote_device_db.c:345:9
 1e09f6e:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:605:21
 1e09f74:    30 61             	r0 = b[r0 + 19] (u)			  ## hci_vendor.c:605:21
 1e09f76:    23 f3 fc 02       	if ((r0 & 8) != 0) goto 1528 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:605:21
 1e09f7a:    f1 7f             	r1 = 255			  ## hci_vendor.c:608:32
 1e09f7c:    e0 08             	r0 = r14			  ## hci_vendor.c:608:32
 1e09f7e:    bf f3 5f f5       	call -5442 <handle_remote_dev_type : 1e08a40 >			  ## hci_vendor.c:608:32
 1e09f82:    02 08             	r2 = r0			  ## hci_vendor.c:608:32
 1e09f84:    11 70             	r1 = 1			  ## hci_vendor.c:609:21
 1e09f86:    e0 08             	r0 = r14			  ## hci_vendor.c:609:21
 1e09f88:    bf f3 e9 f5       	call -5166 <remote_dev_company_ioctrl : 1e08b5e >			  ## hci_vendor.c:609:21
 1e09f8c:    f2 1a             	goto 1508 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:609:21
 1e09f8e:    84 02             	r4 = [sp+32]			  ## btstack_task.c:109:35
 1e09f90:    16 68             	r6 = b[r4 + 1] (u)			  ## hci_vendor.c:1106:22
 1e09f92:    00 68             	r0 = b[r4 + 0] (u)			  ## hci_vendor.c:1106:22
 1e09f94:    31 c2             	r1 = r6 << 8			  ## hci_vendor.c:1106:22
 1e09f96:    21 fd 0f 1a       	r1 = r1 & 3840			  ## hci_vendor.c:1106:22
 1e09f9a:    50 b2             	r0 |= r1			  ## hci_vendor.c:1106:22
 1e09f9c:    00 e5 28 20       	if (r0 >= 80) goto 80 <.GJTIE602_1_1_+0xD2 : 1e09ff0 >			  ## hci_vendor.c:1106:22
 1e09fa0:    08 f5 24 00       	r8 = [sp+36]			  ## btstack_task.c:109:43
 1e09fa4:    37 68             	r7 = b[r4 + 3] (u)			  ## hci_vendor.c:966:22
 1e09fa6:    25 68             	r5 = b[r4 + 2] (u)			  ## hci_vendor.c:966:22
 1e09fa8:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:118:48
 1e09faa:    80 f3 a3 84       	call 67910 <lmp_private_remote_addr_for_handler : 1e1a8f4 >			  ## hci_vendor.c:118:12
 1e09fae:    00 e0 f3 02       	if (r0 == 0) goto 1510 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e09fb2:    82 fd 20 06       	r0 = uextra(r6, p:4, l:2)			  ## hci_vendor.c:974:5
 1e09fb6:    20 e0 73 00       	if (r0 == 2) goto 230 <.GJTIE602_2_2_+0x4A : 1e0a0a0 >			  ## hci_vendor.c:974:5
 1e09fba:    10 e0 77 00       	if (r0 == 1) goto 238 <.GJTIE602_2_2_+0x56 : 1e0a0ac >
 1e09fbe:    ec 1a             	goto 1496 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e09fc0:    80 02             	r0 = [sp+32]			  ## btstack_task.c:112:35
 1e09fc2:    97 f3 23 e7       	call 3132998 <os_sem_post : 106e0c >			  ## btstack_task.c:112:13
 1e09fc6:    40 71             	r0 = 20			  ## btstack_task.c:113:13
 1e09fc8:    97 f3 f6 e6       	call 3132908 <os_time_dly : 106db8 >			  ## btstack_task.c:113:13
 1e09fcc:    e5 1a             	goto 1482 <.GJTIE602_2_2_+0x542 : 1e0a598 >			  ## btstack_task.c:113:13
 1e09fce:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:403:33
 1e09fd4:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:403:33
 1e09fd6:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:403:33
 1e09fd8:    04 e0 de 02       	if (r4 == 0) goto 1468 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e09fdc:    20 69             	r0 = b[r4 + 18] (u)			  ## l2cap.c:407:44
 1e09fde:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE602_1_1_+0xCC : 1e09fea >			  ## l2cap.c:407:44
 1e09fe2:    01 70             	r1 = 0			  ## l2cap.c:410:13
 1e09fe4:    40 08             	r0 = r4			  ## l2cap.c:410:13
 1e09fe6:    bf f3 bd f7       	call -4230 <l2cap_emit_credits : 1e08f64 >			  ## l2cap.c:410:13
 1e09fea:    04 48             	r4 = [r4 + 0]
 1e09fec:    f7 39             	if (r4 != 0) goto -18 <.GJTIE602_1_1_+0xBE : 1e09fdc >
 1e09fee:    d4 1a             	goto 1448 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e09ff0:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1007:33
 1e09ff2:    bf f3 72 f0       	call -7964 <le_hci_connection_for_handle : 1e080da >			  ## hci_vendor.c:1007:33
 1e09ff6:    31 68             	r1 = b[r4 + 3] (u)			  ## hci_vendor.c:1009:22
 1e09ff8:    26 68             	r6 = b[r4 + 2] (u)			  ## hci_vendor.c:1009:22
 1e09ffa:    08 08             	r8 = r0			  ## hci_vendor.c:1007:33
 1e09ffc:    14 20             	if (r0 == 0) goto 40 <.GJTIE602_1_1_+0x108 : 1e0a026 >
 1e09ffe:    10 68             	r0 = b[r4 + 1] (u)			  ## hci_vendor.c:1008:21
 1e0a000:    d8 fd 40 61       	r6 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:1009:22
 1e0a004:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## hci_vendor.c:1016:5
 1e0a008:    85 fc b2 04       	r5 = r8 + 1202			  ## hci_vendor.c:1016:5
 1e0a00c:    20 e0 52 00       	if (r0 == 2) goto 164 <.GJTIE602_2_2_+0x5E : 1e0a0b4 >			  ## hci_vendor.c:1016:5
 1e0a010:    10 e0 09 10       	if (r0 != 1) goto 18 <.GJTIE602_1_1_+0x108 : 1e0a026 >
 1e0a014:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1020:13
 1e0a016:    07 20             	if (r0 == 0) goto 14 <.GJTIE602_1_1_+0x108 : 1e0a026 >			  ## hci_vendor.c:1020:13
 1e0a018:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1024:43
 1e0a01a:    81 b0             	r1 = r0 + r2			  ## hci_vendor.c:1024:41
 1e0a01c:    03 ff 12 12 25 02 	if (r1 < 530) goto 1098 <.GJTIE602_2_2_+0x416 : 1e0a46c >			  ## hci_vendor.c:1024:13
 1e0a022:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1025:41
 1e0a026:    40 08             	r0 = r4
 1e0a028:    80 f3 6a 81       	call 66260 <ll_hci_private_free_dma_rx : 1e1a300 >
 1e0a02c:    b5 1a             	goto 1386 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e0a02e:    10 fc cf ff       	r0 = r1 + -49
 1e0a032:    d0 e0 9e 82       	if (r0 > 13) goto 1340 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e0a036:    41 c0             	r1 = r0 << 1
 1e0a038:    b1 00             	tbh [r1]


.GJTIL602_2_2_:
 1e0a03a:    0e 00     < 14 : 0xE >
 1e0a03c:    9c 02     < 668 : 0x29C >
 1e0a03e:    6f 01     < 367 : 0x16F >
 1e0a040:    71 01     < 369 : 0x171 >
 1e0a042:    9c 02     < 668 : 0x29C >
 1e0a044:    74 01     < 372 : 0x174 >
 1e0a046:    9c 02     < 668 : 0x29C >
 1e0a048:    9c 02     < 668 : 0x29C >
 1e0a04a:    9c 02     < 668 : 0x29C >
 1e0a04c:    9c 02     < 668 : 0x29C >
 1e0a04e:    81 01     < 385 : 0x181 >
 1e0a050:    9c 02     < 668 : 0x29C >
 1e0a052:    9c 02     < 668 : 0x29C >
 1e0a054:    8b 01     < 395 : 0x18B >
 1e0a056:    00 70             	r0 = 0			  ## hci_vendor.c:464:9
 1e0a058:    12 73             	r2 = 49			  ## hci_vendor.c:464:9
 1e0a05a:    03 70             	r3 = 0			  ## hci_vendor.c:464:9
 1e0a05c:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:464:9
 1e0a062:    bf f3 59 f2       	call -6990 <bt_event_update_to_user : 1e08518 >			  ## hci_vendor.c:464:9
 1e0a066:    03 18             	goto 6 <.GJTIE602_2_2_+0x18 : 1e0a06e >			  ## hci_vendor.c:464:9
 1e0a068:    30 70             	r0 = 3			  ## hci_vendor.c:467:13
 1e0a06a:    97 f3 a5 e6       	call 3132746 <os_time_dly : 106db8 >			  ## hci_vendor.c:467:13
 1e0a06e:    bf f3 e0 f2       	call -6720 <get_is_in_background_flag : 1e08632 >
 1e0a072:    fa 31             	if (r0 != 0) goto -12 <.GJTIE602_2_2_+0x12 : 1e0a068 >
 1e0a074:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a07a:    03 08             	r3 = r0
 1e0a07c:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:473:71
 1e0a07e:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:473:71
 1e0a080:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:473:71
 1e0a082:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:473:71
 1e0a084:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:473:71
 1e0a088:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:473:71
 1e0a08c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:473:71
 1e0a090:    82 fd c0 03       	r0 = uextra(r3, p:24, l:2)			  ## hci_vendor.c:473:9
 1e0a094:    82 fd d0 13       	r1 = uextra(r3, p:26, l:2)			  ## hci_vendor.c:473:9
 1e0a098:    1a d7             	r2 = r3 >> 28			  ## hci_vendor.c:474:110
 1e0a09a:    80 f3 29 85       	call 68178 <lmp_hci_io_capability_request_reply : 1e1aaf0 >			  ## hci_vendor.c:473:9
 1e0a09e:    69 1a             	goto 1234 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:473:9
 1e0a0a0:    e6 fd 00 08       	r0 = r8.l (u)
 1e0a0a4:    c8 fd 40 57       	r5 <= insert(r7, p:8, l:8)			  ## hci_vendor.c:966:22
 1e0a0a8:    50 e0 c8 81       	if (r0 > 5) goto 912 <.GJTIE602_2_2_+0x3E6 : 1e0a43c >			  ## hci_vendor.c:966:22
 1e0a0ac:    40 08             	r0 = r4
 1e0a0ae:    80 f3 ab 85       	call 68438 <lmp_hci_private_free_acl_packet : 1e1ac08 >
 1e0a0b2:    68 1a             	goto 1232 <.GJTIE602_2_2_+0x52E : 1e0a584 >
 1e0a0b4:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1057:19
 1e0a0b6:    02 20             	if (r0 == 0) goto 4 <.GJTIE602_2_2_+0x66 : 1e0a0bc >			  ## hci_vendor.c:1057:19
 1e0a0b8:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1058:41
 1e0a0bc:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:1062:33
 1e0a0be:    47 68             	r7 = b[r4 + 4] (u)			  ## hci_vendor.c:1062:33
 1e0a0c0:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1062:33
 1e0a0c4:    e0 05             	r0 = r7.l (u)			  ## hci_vendor.c:1066:27
 1e0a0c6:    49 90             	r9 = r0 + 4			  ## hci_vendor.c:1066:40
 1e0a0c8:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1066:13
 1e0a0ca:    90 f2 c8 21       	if (r0 >= r9) goto 912 <.GJTIE602_2_2_+0x408 : 1e0a45e >			  ## hci_vendor.c:1066:13
 1e0a0ce:    03 ff 0e 02 10 02 	if (r0 < 526) goto 1056 <.GJTIE602_2_2_+0x49E : 1e0a4f4 >			  ## hci_vendor.c:1081:17
 1e0a0d4:    40 08             	r0 = r4			  ## hci_vendor.c:1082:17
 1e0a0d6:    80 f3 13 81       	call 66086 <ll_hci_private_free_dma_rx : 1e1a300 >			  ## hci_vendor.c:1082:17
 1e0a0da:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >			  ## hci_vendor.c:1082:17
 1e0a0e0:    5b 1a             	goto 1206 <.GJTIE602_2_2_+0x542 : 1e0a598 >			  ## hci_vendor.c:1082:17
 1e0a0e2:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:553:14
 1e0a0e6:    0a 20             	if (r0 == 0) goto 20 <.GJTIE602_2_2_+0xA6 : 1e0a0fc >			  ## hci_vendor.c:553:14
 1e0a0e8:    20 e0 69 02       	if (r0 == 2) goto 1234 <.GJTIE602_2_2_+0x568 : 1e0a5be >
 1e0a0ec:    10 e0 6a 12       	if (r0 != 1) goto 1236 <.GJTIE602_2_2_+0x56E : 1e0a5c4 >
 1e0a0f0:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:560:17
 1e0a0f6:    30 61             	r0 = b[r0 + 19] (u)			  ## hci_vendor.c:560:17
 1e0a0f8:    23 f3 9f 02       	if ((r0 & 8) != 0) goto 1342 <.GJTIE602_2_2_+0x5E4 : 1e0a63a >			  ## hci_vendor.c:560:17
 1e0a0fc:    10 70             	r0 = 1
 1e0a0fe:    80 f3 1a 85       	call 68148 <lmp_hci_accept_connection_request : 1e1ab36 >
 1e0a102:    37 1a             	goto 1134 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e0a104:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## hci_vendor.c:768:18
 1e0a108:    c5 f5 23 00       	r5 = b[sp+35] (u)			  ## hci_vendor.c:768:18
 1e0a10c:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:768:18
 1e0a110:    d8 fd 40 51       	r5 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:768:18
 1e0a114:    64 05             	r4 = r5.l (u)			  ## hci_vendor.c:768:18
 1e0a116:    f4 e4 c1 81       	if (r4 > 79) goto 898 <.GJTIE602_2_2_+0x446 : 1e0a49c >			  ## hci_vendor.c:771:13
 1e0a11a:    c1 f5 26 00       	r1 = b[sp+38] (u)			  ## hci_vendor.c:766:21
 1e0a11e:    c2 f5 25 00       	r2 = b[sp+37] (u)			  ## hci_vendor.c:765:21
 1e0a122:    00 e0 26 12       	if (r0 != 0) goto 1100 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:765:21
 1e0a126:    d0 76             	r0 = 109			  ## hci_vendor.c:215:14
 1e0a128:    d0 f5 ae 00       	b[sp+174] = r0			  ## hci_vendor.c:215:14
 1e0a12c:    80 70             	r0 = 8			  ## hci_vendor.c:216:14
 1e0a12e:    d0 f5 af 00       	b[sp+175] = r0			  ## hci_vendor.c:216:14
 1e0a132:    d2 f5 b0 00       	b[sp+176] = r2			  ## hci_vendor.c:217:14
 1e0a136:    d1 f5 b1 00       	b[sp+177] = r1			  ## hci_vendor.c:218:14
 1e0a13a:    62 70             	r2 = 6			  ## utils.c:188:5
 1e0a13c:    10 02             	r0 = [sp+4]			  ## utils.c:188:5
 1e0a13e:    01 02             	r1 = [sp]			  ## utils.c:188:5
 1e0a140:    97 f3 d0 e6       	call 3132832 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e0a144:    e1 aa             	r1 = sp + 174			  ## utils.c:188:5
 1e0a146:    40 70             	r0 = 4			  ## hci_vendor.c:220:5
 1e0a148:    a2 70             	r2 = 10			  ## hci_vendor.c:220:5
 1e0a14a:    bf f3 99 fa       	call -2766 <l2cap_packet_handler : 1e09680 >			  ## hci_vendor.c:220:5
 1e0a14e:    11 1a             	goto 1058 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:220:5
 1e0a150:    c0 f5 24 00       	r0 = b[sp+36] (u)
 1e0a154:    c4 f5 23 00       	r4 = b[sp+35] (u)
 1e0a158:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:435:13
 1e0a15c:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:435:13
 1e0a160:    01 e0 df 01       	if (r1 == 0) goto 958 <.GJTIE602_2_2_+0x4CC : 1e0a522 >			  ## hci_vendor.c:435:13
 1e0a164:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:439:56
 1e0a166:    50 08             	r0 = r5			  ## hci_vendor.c:439:20
 1e0a168:    80 f3 c4 83       	call 67464 <lmp_private_remote_addr_for_handler : 1e1a8f4 >			  ## hci_vendor.c:439:20
 1e0a16c:    c1 ff 90 09 00 00 	r1 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:439:20
 1e0a172:    16 08             	r6 = r1			  ## hci_vendor.c:439:20
 1e0a174:    41 6d             	r1 = b[r6 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a176:    32 6d             	r2 = b[r6 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a178:    23 6d             	r3 = b[r6 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a17a:    16 6d             	r6 = b[r6 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a17c:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a180:    c8 fd 40 63       	r6 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a184:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a188:    b1 d1             	r1 = r6 >> 6			  ## hci_vendor.c:160:69
 1e0a18a:    f2 d4             	r2 = r6 >> 19			  ## hci_vendor.c:160:32
 1e0a18c:    51 b4             	r1 |= r2			  ## hci_vendor.c:160:47
 1e0a18e:    21 fd 01 19       	r1 = r1 & 1			  ## hci_vendor.c:442:17
 1e0a192:    bf f3 0b f2       	call -7146 <delete_link_key : 1e085ac >			  ## hci_vendor.c:442:17
 1e0a196:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:445:17
 1e0a19a:    60 e0 e6 01       	if (r0 == 6) goto 972 <.GJTIE602_2_2_+0x514 : 1e0a56a >			  ## hci_vendor.c:445:17
 1e0a19e:    51 70             	r1 = 5			  ## hci_vendor.c:448:17
 1e0a1a0:    50 08             	r0 = r5			  ## hci_vendor.c:448:17
 1e0a1a2:    80 f3 6d 84       	call 67802 <lmp_hci_disconnect : 1e1aa80 >			  ## hci_vendor.c:448:17
 1e0a1a6:    e1 19             	goto 962 <.GJTIE602_2_2_+0x514 : 1e0a56a >			  ## hci_vendor.c:448:17
 1e0a1a8:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:454:18
 1e0a1ac:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:454:18
 1e0a1b0:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:454:18
 1e0a1b4:    da 19             	goto 948 <.GJTIE602_2_2_+0x514 : 1e0a56a >			  ## hci_vendor.c:454:18
 1e0a1b6:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:521:29
 1e0a1ba:    00 e0 da 01       	if (r0 == 0) goto 948 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:521:29
 1e0a1be:    35 70             	r5 = 3
 1e0a1c0:    06 70             	r6 = 0
 1e0a1c2:    f0 08             	r0 = r15			  ## hci_vendor.c:522:26
 1e0a1c4:    51 08             	r1 = r5			  ## hci_vendor.c:522:26
 1e0a1c6:    bf f3 63 ef       	call -8506 <little_endian_read_16 : 1e08090 >			  ## hci_vendor.c:522:26
 1e0a1ca:    04 08             	r4 = r0			  ## hci_vendor.c:522:26
 1e0a1cc:    04 e5 13 30       	if (r4 < 80) goto 38 <.GJTIE602_2_2_+0x1A0 : 1e0a1f6 >			  ## hci_vendor.c:522:26
 1e0a1d0:    21 9a             	r1 = r5 + 2			  ## hci_vendor.c:528:24
 1e0a1d2:    f0 08             	r0 = r15			  ## hci_vendor.c:529:40
 1e0a1d4:    bf f3 5c ef       	call -8520 <little_endian_read_16 : 1e08090 >			  ## hci_vendor.c:529:40
 1e0a1d8:    07 08             	r7 = r0			  ## hci_vendor.c:529:40
 1e0a1da:    45 80             	r5 += 4			  ## hci_vendor.c:530:24
 1e0a1dc:    40 08             	r0 = r4			  ## hci_vendor.c:532:45
 1e0a1de:    bf f3 7c ef       	call -8456 <le_hci_connection_for_handle : 1e080da >			  ## hci_vendor.c:532:45
 1e0a1e2:    09 20             	if (r0 == 0) goto 18 <.GJTIE602_2_2_+0x1A0 : 1e0a1f6 >
 1e0a1e4:    03 f9 b6 04       	r3 = b[r0 + 1206] (u)			  ## hci_vendor.c:537:21
 1e0a1e8:    e2 b7             	r2 = r3 - r7			  ## hci_vendor.c:539:48
 1e0a1ea:    01 70             	r1 = 0			  ## hci_vendor.c:537:21
 1e0a1ec:    73 f2 01 30       	if (r3 < r7) goto 2 <.GJTIE602_2_2_+0x19C : 1e0a1f2 >			  ## hci_vendor.c:537:21
 1e0a1f0:    21 08             	r1 = r2			  ## hci_vendor.c:537:21
 1e0a1f2:    11 f9 b6 04       	b[r0 + 1206] = r1			  ## hci_vendor.c:539:48
 1e0a1f6:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:521:29
 1e0a1fa:    16 80             	r6 += 1			  ## hci_vendor.c:521:41
 1e0a1fc:    06 f2 e1 bf       	ifs (r6 < r0) goto -62 <.GJTIE602_2_2_+0x16C : 1e0a1c2 >
 1e0a200:    b4 19             	goto 872 <.GJTIE602_2_2_+0x514 : 1e0a56a >
 1e0a202:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:415:18
 1e0a206:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:415:18
 1e0a20a:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:415:18
 1e0a20e:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:416:52
 1e0a210:    80 f3 70 83       	call 67296 <lmp_private_remote_addr_for_handler : 1e1a8f4 >			  ## hci_vendor.c:416:16
 1e0a214:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## hci_vendor.c:417:13
 1e0a218:    01 e0 a0 01       	if (r1 == 0) goto 832 <.GJTIE602_2_2_+0x506 : 1e0a55c >			  ## hci_vendor.c:417:13
 1e0a21c:    21 e0 a5 11       	if (r1 != 2) goto 842 <.GJTIE602_2_2_+0x514 : 1e0a56a >
 1e0a220:    02 72             	r2 = 32			  ## hci_vendor.c:421:13
 1e0a222:    23 70             	r3 = 2			  ## hci_vendor.c:421:13
 1e0a224:    9d 19             	goto 826 <.GJTIE602_2_2_+0x50A : 1e0a560 >			  ## hci_vendor.c:421:13
 1e0a226:    00 70             	r0 = 0			  ## hci_vendor.c:705:9
 1e0a228:    62 71             	r2 = 22			  ## hci_vendor.c:705:9
 1e0a22a:    03 70             	r3 = 0			  ## hci_vendor.c:705:9
 1e0a22c:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:705:9
 1e0a232:    bf f3 71 f1       	call -7454 <bt_event_update_to_user : 1e08518 >			  ## hci_vendor.c:705:9
 1e0a236:    03 18             	goto 6 <.GJTIE602_2_2_+0x1E8 : 1e0a23e >			  ## hci_vendor.c:705:9
 1e0a238:    30 70             	r0 = 3			  ## hci_vendor.c:708:13
 1e0a23a:    97 f3 bd e5       	call 3132282 <os_time_dly : 106db8 >			  ## hci_vendor.c:708:13
 1e0a23e:    bf f3 f8 f1       	call -7184 <get_is_in_background_flag : 1e08632 >
 1e0a242:    fa 31             	if (r0 != 0) goto -12 <.GJTIE602_2_2_+0x1E2 : 1e0a238 >
 1e0a244:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a24a:    03 08             	r3 = r0
 1e0a24c:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a24e:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a250:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a252:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a254:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a258:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a25c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a260:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0a262:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e0a264:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e0a266:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:713:9
 1e0a26a:    c0 08             	r0 = r12			  ## hci_vendor.c:713:9
 1e0a26c:    bf f3 9e f1       	call -7364 <delete_link_key : 1e085ac >			  ## hci_vendor.c:713:9
 1e0a270:    80 f3 6b 84       	call 67798 <lmp_hci_pin_code_request_reply : 1e1ab4a >			  ## hci_vendor.c:722:13
 1e0a274:    7e 19             	goto 764 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:722:13
 1e0a276:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a27c:    04 08             	r4 = r0
 1e0a27e:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a280:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a282:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a284:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a286:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a28a:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a28e:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a292:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0a294:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e0a296:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e0a298:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:678:32
 1e0a29c:    e1 a9             	r1 = sp + 158			  ## hci_vendor.c:678:32
 1e0a29e:    c0 08             	r0 = r12			  ## hci_vendor.c:678:32
 1e0a2a0:    bf f3 1e f2       	call -7108 <get_link_key : 1e086e0 >			  ## hci_vendor.c:678:32
 1e0a2a4:    41 69             	r1 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a2a6:    32 69             	r2 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a2a8:    23 69             	r3 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a2aa:    14 69             	r4 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a2ac:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a2b0:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a2b4:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a2b8:    a1 d1             	r1 = r4 >> 6			  ## hci_vendor.c:160:69
 1e0a2ba:    e2 d4             	r2 = r4 >> 19			  ## hci_vendor.c:160:32
 1e0a2bc:    51 b4             	r1 |= r2			  ## hci_vendor.c:160:47
 1e0a2be:    22 fd 01 19       	r2 = r1 & 1			  ## remote_device_db.c:217:10
 1e0a2c2:    04 08             	r4 = r0			  ## hci_vendor.c:678:32
 1e0a2c4:    e0 fb 00 01       	r0 = sp + 256
 1e0a2c8:    c1 08             	r1 = r12			  ## remote_device_db.c:217:10
 1e0a2ca:    bf f3 dd f1       	call -7238 <get_database : 1e08688 >			  ## remote_device_db.c:217:10
 1e0a2ce:    31 70             	r1 = 3			  ## hci_vendor.c:680:62
 1e0a2d0:    02 20             	if (r0 == 0) goto 4 <.GJTIE602_2_2_+0x280 : 1e0a2d6 >			  ## hci_vendor.c:680:62
 1e0a2d2:    c1 f5 08 01       	r1 = b[sp+264] (u)			  ## hci_vendor.c:680:62
 1e0a2d6:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:680:60
 1e0a2dc:    69 50             	h[r0 + 12] = r1			  ## hci_vendor.c:680:60
 1e0a2de:    04 e0 23 01       	if (r4 == 0) goto 582 <.GJTIE602_2_2_+0x4D2 : 1e0a528 >			  ## hci_vendor.c:684:17
 1e0a2e2:    80 f3 2e 84       	call 67676 <lmp_hci_link_key_request_reply : 1e1ab42 >			  ## hci_vendor.c:687:17
 1e0a2e6:    58 19             	goto 688 <.GJTIE602_2_2_+0x542 : 1e0a598 >			  ## hci_vendor.c:687:17
 1e0a2e8:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a2ee:    03 08             	r3 = r0
 1e0a2f0:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a2f2:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a2f4:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a2f6:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a2f8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a2fc:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a300:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a304:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0a306:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e0a308:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e0a30a:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:698:9
 1e0a30e:    c0 08             	r0 = r12			  ## hci_vendor.c:698:9
 1e0a310:    b1 08             	r1 = r11			  ## hci_vendor.c:698:9
 1e0a312:    bf f3 62 f3       	call -6460 <put_link_key : 1e089da >			  ## hci_vendor.c:698:9
 1e0a316:    2d 19             	goto 602 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:698:9
 1e0a318:    32 73             	r2 = 51			  ## hci_vendor.c:481:9
 1e0a31a:    01 18             	goto 2 <.GJTIE602_2_2_+0x2C8 : 1e0a31e >			  ## hci_vendor.c:481:9
 1e0a31c:    42 73             	r2 = 52			  ## hci_vendor.c:487:9
 1e0a31e:    03 70             	r3 = 0
 1e0a320:    10 18             	goto 32 <.GJTIE602_2_2_+0x2EC : 1e0a342 >
 1e0a322:    11 70             	r1 = 1			  ## hci_vendor.c:123:12
 1e0a324:    d0 08             	r0 = r13			  ## hci_vendor.c:123:12
 1e0a326:    80 f3 e5 83       	call 67530 <lmp_private_handler_for_remote_addr : 1e1aaf4 >			  ## hci_vendor.c:123:12
 1e0a32a:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:500:13
 1e0a32e:    04 08             	r4 = r0			  ## hci_vendor.c:123:12
 1e0a330:    01 e0 1b 01       	if (r1 == 0) goto 566 <.GJTIE602_2_2_+0x514 : 1e0a56a >			  ## hci_vendor.c:123:12
 1e0a334:    51 70             	r1 = 5			  ## hci_vendor.c:501:13
 1e0a336:    80 f3 a3 83       	call 67398 <lmp_hci_disconnect : 1e1aa80 >			  ## hci_vendor.c:501:13
 1e0a33a:    17 19             	goto 558 <.GJTIE602_2_2_+0x514 : 1e0a56a >			  ## hci_vendor.c:501:13
 1e0a33c:    c3 f5 23 00       	r3 = b[sp+35] (u)			  ## hci_vendor.c:493:80
 1e0a340:    b2 73             	r2 = 59			  ## hci_vendor.c:493:9
 1e0a342:    c0 08             	r0 = r12
 1e0a344:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e0a34a:    bf f3 e5 f0       	call -7734 <bt_event_update_to_user : 1e08518 >
 1e0a34e:    11 19             	goto 546 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e0a350:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:818:21
 1e0a354:    10 e0 39 01       	if (r0 == 1) goto 626 <.GJTIE602_2_2_+0x574 : 1e0a5ca >			  ## hci_vendor.c:818:13
 1e0a358:    a0 e0 5b 01       	if (r0 == 10) goto 694 <.GJTIE602_2_2_+0x5BC : 1e0a612 >
 1e0a35c:    20 e0 67 10       	if (r0 != 2) goto 206 <.GJTIE602_2_2_+0x3D8 : 1e0a42e >
 1e0a360:    c7 f5 23 00       	r7 = b[sp+35] (u)			  ## hci_vendor.c:329:23
 1e0a364:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:825:56
 1e0a368:    28 90             	r8 = r0 + 2			  ## hci_vendor.c:825:66
 1e0a36a:    54 2e             	if (r7 == 0) goto 168 <.GJTIE602_2_2_+0x3BE : 1e0a414 >
 1e0a36c:    e6 fd 00 08       	r0 = r8.l (u)
 1e0a370:    50 e0 50 30       	if (r0 < 5) goto 160 <.GJTIE602_2_2_+0x3BE : 1e0a414 >
 1e0a374:    4e 70             	r14 = 4
 1e0a376:    19 70             	r9 = 1
 1e0a378:    80 fb e0 1f       	r1 = r15 + r14
 1e0a37c:    80 62             	r0 = b[r1 + 8] (u)			  ## hci_vendor.c:336:43
 1e0a37e:    22 7e             	r2 = 226			  ## hci_vendor.c:339:22
 1e0a380:    d2 f5 c5 00       	b[sp+197] = r2			  ## hci_vendor.c:339:22
 1e0a384:    04 08             	r4 = r0			  ## utils.c:232:12
 1e0a386:    f0 e1 01 30       	if (r0 < 31) goto 2 <.GJTIE602_2_2_+0x336 : 1e0a38c >			  ## utils.c:232:12
 1e0a38a:    f4 71             	r4 = 31
 1e0a38c:    a2 98             	r2 = r4 + 10			  ## hci_vendor.c:337:33
 1e0a38e:    d2 f5 c6 00       	b[sp+198] = r2			  ## hci_vendor.c:340:22
 1e0a392:    22 62             	r2 = b[r1 + 2] (u)			  ## hci_vendor.c:341:9
 1e0a394:    63 62             	r3 = b[r1 + 6] (u)			  ## hci_vendor.c:341:9
 1e0a396:    06 62             	r6 = b[r1 + 0] (u)			  ## hci_vendor.c:341:9
 1e0a398:    0c f9 01 10       	r12 = b[r1 + 1] (u)			  ## hci_vendor.c:341:9
 1e0a39c:    0b f9 07 10       	r11 = b[r1 + 7] (u)			  ## hci_vendor.c:341:9
 1e0a3a0:    0a f9 05 10       	r10 = b[r1 + 5] (u)			  ## hci_vendor.c:341:9
 1e0a3a4:    0d f9 04 10       	r13 = b[r1 + 4] (u)			  ## hci_vendor.c:341:9
 1e0a3a8:    31 62             	r1 = b[r1 + 3] (u)			  ## hci_vendor.c:341:9
 1e0a3aa:    db f5 ce 00       	b[sp+206] = r11			  ## hci_vendor.c:341:9
 1e0a3ae:    da f5 cc 00       	b[sp+204] = r10			  ## hci_vendor.c:341:9
 1e0a3b2:    dd f5 cb 00       	b[sp+203] = r13			  ## hci_vendor.c:341:9
 1e0a3b6:    d1 f5 ca 00       	b[sp+202] = r1			  ## hci_vendor.c:341:9
 1e0a3ba:    dc f5 c8 00       	b[sp+200] = r12			  ## hci_vendor.c:341:9
 1e0a3be:    d6 f5 c7 00       	b[sp+199] = r6			  ## hci_vendor.c:341:9
 1e0a3c2:    c8 fd 40 3b       	r3 <= insert(r11, p:8, l:8)			  ## hci_vendor.c:341:9
 1e0a3c6:    d0 fd 80 d3       	r13 <= insert(r3, p:16, l:16)			  ## hci_vendor.c:341:9
 1e0a3ca:    f2 fd 80 3d       	r3 = r13 >> 16			  ## hci_vendor.c:341:9
 1e0a3ce:    d3 f5 cd 00       	b[sp+205] = r3			  ## hci_vendor.c:341:9
 1e0a3d2:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:341:9
 1e0a3d6:    e1 fc 09 00       	r1 = r14 + 9			  ## hci_vendor.c:344:38
 1e0a3da:    43 b8             	r3 = r4 + r1			  ## hci_vendor.c:344:42
 1e0a3dc:    03 fa 00 f3       	r3 = b[r15+r3] (u)			  ## hci_vendor.c:344:24
 1e0a3e0:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:341:9
 1e0a3e4:    32 d4             	r2 = r6 >> 16			  ## hci_vendor.c:341:9
 1e0a3e6:    d2 f5 c9 00       	b[sp+201] = r2			  ## hci_vendor.c:341:9
 1e0a3ea:    d3 f5 cf 00       	b[sp+207] = r3			  ## hci_vendor.c:344:22
 1e0a3ee:    d0 f5 d0 00       	b[sp+208] = r0			  ## hci_vendor.c:345:22
 1e0a3f2:    f1 09             	r1 += r15			  ## hci_vendor.c:346:30
 1e0a3f4:    60 02             	r0 = [sp+24]			  ## hci_vendor.c:346:9
 1e0a3f6:    42 08             	r2 = r4			  ## hci_vendor.c:346:9
 1e0a3f8:    97 f3 74 e5       	call 3132136 <memcpy : 106ee4 >			  ## hci_vendor.c:346:9
 1e0a3fc:    c1 98             	r1 = r4 + 12			  ## hci_vendor.c:347:13
 1e0a3fe:    50 ac             	r0 = sp + 197
 1e0a400:    bf f3 25 f1       	call -7606 <le_hci_emit_event : 1e0864e >			  ## hci_vendor.c:349:9
 1e0a404:    80 fb 40 0e       	r0 = r14 + r4			  ## hci_vendor.c:348:31
 1e0a408:    ae 90             	r14 = r0 + 10			  ## hci_vendor.c:348:16
 1e0a40a:    79 f2 03 a0       	ifs (r9 >= r7) goto 6 <.GJTIE602_2_2_+0x3BE : 1e0a414 >
 1e0a40e:    19 80             	r9 += 1			  ## hci_vendor.c:335:33
 1e0a410:    8e f2 b2 bf       	ifs (r14 < r8) goto -156 <.GJTIE602_2_2_+0x322 : 1e0a378 >			  ## hci_vendor.c:335:33
 1e0a414:    0a 70             	r10 = 0
 1e0a416:    0b f5 14 00       	r11 = [sp+20]
 1e0a41a:    0c f5 10 00       	r12 = [sp+16]
 1e0a41e:    0d f5 0c 00       	r13 = [sp+12]
 1e0a422:    0e f5 08 00       	r14 = [sp+8]
 1e0a426:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e0a42c:    a2 18             	goto 324 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e0a42e:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e0a432:    11 90             	r1 = r0 + 1
 1e0a434:    f0 08             	r0 = r15
 1e0a436:    bf f3 0a f1       	call -7660 <le_hci_emit_event : 1e0864e >
 1e0a43a:    ae 18             	goto 348 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e0a43c:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:985:24
 1e0a43e:    41 68             	r1 = b[r4 + 4] (u)			  ## hci_vendor.c:985:24
 1e0a440:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:985:24
 1e0a444:    40 92             	r0 = r1 + 4			  ## hci_vendor.c:988:40
 1e0a446:    05 f2 9d 30       	if (r5 < r0) goto 314 <.GJTIE602_2_2_+0x52E : 1e0a584 >			  ## hci_vendor.c:988:40
 1e0a44a:    40 9a             	r0 = r5 + 4			  ## hci_vendor.c:989:74
 1e0a44c:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:989:13
 1e0a44e:    20 70             	r0 = 2			  ## hci_vendor.c:989:13
 1e0a450:    41 08             	r1 = r4			  ## hci_vendor.c:989:13
 1e0a452:    bf f3 15 f9       	call -3542 <l2cap_packet_handler : 1e09680 >			  ## hci_vendor.c:989:13
 1e0a456:    40 08             	r0 = r4			  ## hci_vendor.c:990:13
 1e0a458:    80 f3 e2 83       	call 67524 <lmp_hci_private_try_free_acl_packet : 1e1ac20 >			  ## hci_vendor.c:990:13
 1e0a45c:    93 18             	goto 294 <.GJTIE602_2_2_+0x52E : 1e0a584 >			  ## hci_vendor.c:990:13
 1e0a45e:    40 9c             	r0 = r6 + 4			  ## hci_vendor.c:1078:74
 1e0a460:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1078:13
 1e0a462:    20 70             	r0 = 2			  ## hci_vendor.c:1078:13
 1e0a464:    41 08             	r1 = r4			  ## hci_vendor.c:1078:13
 1e0a466:    bf f3 0b f9       	call -3562 <l2cap_packet_handler : 1e09680 >			  ## hci_vendor.c:1078:13
 1e0a46a:    54 18             	goto 168 <.GJTIE602_2_2_+0x4BE : 1e0a514 >			  ## hci_vendor.c:1078:13
 1e0a46c:    80 09             	r0 += r8			  ## hci_vendor.c:1033:17
 1e0a46e:    00 fc a0 02       	r0 = r0 + 672			  ## hci_vendor.c:1033:17
 1e0a472:    41 98             	r1 = r4 + 4			  ## hci_vendor.c:1033:79
 1e0a474:    97 f3 36 e5       	call 3132012 <memcpy : 106ee4 >			  ## hci_vendor.c:1033:9
 1e0a478:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1034:37
 1e0a47a:    60 09             	r0 += r6			  ## hci_vendor.c:1034:37
 1e0a47c:    08 5a             	h[r5 + 0] = r0			  ## hci_vendor.c:1034:37
 1e0a47e:    11 5a             	r1 = h[r5 + 2] (u)			  ## hci_vendor.c:1037:44
 1e0a480:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1037:13
 1e0a482:    80 92             	r0 = r1 + 8			  ## hci_vendor.c:1037:79
 1e0a484:    02 f2 49 30       	if (r2 < r0) goto 146 <.GJTIE602_2_2_+0x4C4 : 1e0a51a >			  ## hci_vendor.c:1037:79
 1e0a488:    81 fc a0 02       	r1 = r8 + 672			  ## hci_vendor.c:1046:56
 1e0a48c:    20 70             	r0 = 2			  ## hci_vendor.c:1046:13
 1e0a48e:    bf f3 f7 f8       	call -3602 <l2cap_packet_handler : 1e09680 >			  ## hci_vendor.c:1046:13
 1e0a492:    1a f7 02 50       	h[r5 + 2] = r10			  ## hci_vendor.c:1048:44
 1e0a496:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1049:41
 1e0a49a:    3f 18             	goto 126 <.GJTIE602_2_2_+0x4C4 : 1e0a51a >			  ## hci_vendor.c:1049:41
 1e0a49c:    76 30             	if (r0 != 0) goto 236 <.GJTIE602_2_2_+0x534 : 1e0a58a >
 1e0a49e:    c5 ff 60 18 00 00 	r5 = 6240 <report_irq_stack_end : 1860 >
 1e0a4a4:    00 f7 18 52       	r0 = h[r5 + 536] (u)			  ## hci_vendor.c:792:34
 1e0a4a8:    06 20             	if (r0 == 0) goto 12 <.GJTIE602_2_2_+0x460 : 1e0a4b6 >			  ## hci_vendor.c:792:34
 1e0a4aa:    50 fc 15 02       	r0 = r5 + 533			  ## hci_vendor.c:794:56
 1e0a4ae:    01 70             	r1 = 0			  ## hci_vendor.c:794:56
 1e0a4b0:    52 70             	r2 = 5			  ## hci_vendor.c:794:56
 1e0a4b2:    97 f3 1d e5       	call 3131962 <memset : 106ef0 >			  ## hci_vendor.c:794:56
 1e0a4b6:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:798:43
 1e0a4ba:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:798:53
 1e0a4bc:    f0 08             	r0 = r15			  ## hci_vendor.c:798:17
 1e0a4be:    bf f3 c6 f0       	call -7796 <le_hci_emit_event : 1e0864e >			  ## hci_vendor.c:798:17
 1e0a4c2:    00 4a             	r0 = [r5 + 0]			  ## btstack_linked_list.c:163:16
 1e0a4c4:    1a f5 b8 00       	[sp+184] = r10			  ## btstack_linked_list.c:161:25
 1e0a4c8:    15 f5 bc 00       	[sp+188] = r5			  ## btstack_linked_list.c:162:14
 1e0a4cc:    10 f5 c0 00       	[sp+192] = r0			  ## btstack_linked_list.c:163:14
 1e0a4d0:    0c 18             	goto 24 <.GJTIE602_2_2_+0x494 : 1e0a4ea >			  ## btstack_linked_list.c:163:14
 1e0a4d2:    80 ab             	r0 = sp + 184
 1e0a4d4:    bf f3 f1 ed       	call -9246 <btstack_linked_list_iterator_next : 1e080ba >			  ## hci_vendor.c:274:61
 1e0a4d8:    01 08             	r1 = r0			  ## hci_vendor.c:274:61
 1e0a4da:    50 52             	r0 = h[r1 + 10] (u)			  ## hci_vendor.c:275:19
 1e0a4dc:    40 f2 05 10       	if (r0 != r4) goto 10 <.GJTIE602_2_2_+0x494 : 1e0a4ea >			  ## hci_vendor.c:275:19
 1e0a4e0:    50 08             	r0 = r5			  ## hci_vendor.c:276:13
 1e0a4e2:    bf f3 c0 ec       	call -9856 <btstack_linked_list_remove : 1e07e66 >			  ## hci_vendor.c:276:13
 1e0a4e6:    10 08             	r0 = r1			  ## hci_vendor.c:277:13
 1e0a4e8:    23 14             	call -1978 <btstack_memory_le_hci_connection_free : 1e09d30 >			  ## hci_vendor.c:277:13
 1e0a4ea:    80 ab             	r0 = sp + 184
 1e0a4ec:    bf f3 d7 ed       	call -9298 <btstack_linked_list_iterator_has_next : 1e0809e >
 1e0a4f0:    f0 31             	if (r0 != 0) goto -32 <.GJTIE602_2_2_+0x47C : 1e0a4d2 >
 1e0a4f2:    52 18             	goto 164 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e0a4f4:    88 fc a0 02       	r8 = r8 + 672			  ## hci_vendor.c:1087:21
 1e0a4f8:    46 90             	r6 = r0 + 4			  ## hci_vendor.c:1087:75
 1e0a4fa:    80 08             	r0 = r8			  ## hci_vendor.c:1087:13
 1e0a4fc:    41 08             	r1 = r4			  ## hci_vendor.c:1087:13
 1e0a4fe:    62 08             	r2 = r6			  ## hci_vendor.c:1087:13
 1e0a500:    97 f3 f0 e4       	call 3131872 <memcpy : 106ee4 >			  ## hci_vendor.c:1087:13
 1e0a504:    0e 5a             	h[r5 + 0] = r6			  ## hci_vendor.c:1088:44
 1e0a506:    1f 5a             	h[r5 + 2] = r7			  ## hci_vendor.c:1089:44
 1e0a508:    e6 fd 00 29       	r2 = r9.l (u)			  ## hci_vendor.c:1090:13
 1e0a50c:    21 70             	r1 = 2			  ## hci_vendor.c:1090:13
 1e0a50e:    80 08             	r0 = r8			  ## hci_vendor.c:1090:13
 1e0a510:    bf f3 3c f3       	call -6536 <bt_store_16 : 1e08b8c >			  ## hci_vendor.c:1090:13
 1e0a514:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e0a51a:    40 08             	r0 = r4
 1e0a51c:    80 f3 f0 7e       	call 64992 <ll_hci_private_free_dma_rx : 1e1a300 >
 1e0a520:    3a 18             	goto 116 <.GJTIE602_2_2_+0x540 : 1e0a596 >
 1e0a522:    80 f3 0b 82       	call 66582 <lmp_hci_set_connection_encryption : 1e1a93c >			  ## hci_vendor.c:436:13
 1e0a526:    25 18             	goto 74 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:436:13
 1e0a528:    80 f3 0d 83       	call 67098 <lmp_hci_link_key_request_negative_reply : 1e1ab46 >			  ## hci_vendor.c:689:17
 1e0a52c:    35 18             	goto 106 <.GJTIE602_2_2_+0x542 : 1e0a598 >			  ## hci_vendor.c:689:17
 1e0a52e:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a534:    03 08             	r3 = r0
 1e0a536:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a538:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a53a:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a53c:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a53e:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a542:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a546:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a54a:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0a54c:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e0a54e:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e0a550:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:630:17
 1e0a554:    e0 08             	r0 = r14			  ## hci_vendor.c:630:17
 1e0a556:    bf f3 29 f0       	call -8110 <delete_link_key : 1e085ac >			  ## hci_vendor.c:630:17
 1e0a55a:    0b 18             	goto 22 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:630:17
 1e0a55c:    02 72             	r2 = 32			  ## hci_vendor.c:428:13
 1e0a55e:    03 70             	r3 = 0			  ## hci_vendor.c:428:13
 1e0a560:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e0a566:    bf f3 d7 ef       	call -8274 <bt_event_update_to_user : 1e08518 >
 1e0a56a:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:944:16
 1e0a56c:    45 08             	r5 = r4			  ## hci_vendor.c:944:16
 1e0a56e:    f0 e4 0c 80       	if (r0 > 79) goto 24 <.GJTIE602_2_2_+0x534 : 1e0a58a >			  ## hci_vendor.c:944:16
 1e0a572:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:945:56
 1e0a576:    12 90             	r2 = r0 + 1			  ## hci_vendor.c:945:66
 1e0a578:    40 70             	r0 = 4			  ## hci_vendor.c:945:9
 1e0a57a:    f1 08             	r1 = r15			  ## hci_vendor.c:945:9
 1e0a57c:    bf f3 80 f8       	call -3840 <l2cap_packet_handler : 1e09680 >			  ## hci_vendor.c:945:9
 1e0a580:    60 05             	r0 = r5.l (u)			  ## hci_vendor.c:957:18
 1e0a582:    0a 20             	if (r0 == 0) goto 20 <.GJTIE602_2_2_+0x542 : 1e0a598 >			  ## hci_vendor.c:957:18
 1e0a584:    80 f3 3e 83       	call 67196 <lmp_hci_host_num_of_completed_packets : 1e1ac04 >
 1e0a588:    07 18             	goto 14 <.GJTIE602_2_2_+0x542 : 1e0a598 >
 1e0a58a:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:950:39
 1e0a58e:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:950:49
 1e0a590:    f0 08             	r0 = r15			  ## hci_vendor.c:950:13
 1e0a592:    bf f3 5c f0       	call -8008 <le_hci_emit_event : 1e0864e >			  ## hci_vendor.c:950:13
 1e0a596:    28 14             	call -1968 <hci_run_for_acl_data_send : 1e09de8 >
 1e0a598:    c0 ff 84 09 00 00 	r0 = 2436 <stack_run_loop_head : 984 >
 1e0a59e:    04 40             	r4 = [r0 + 0]
 1e0a5a0:    06 28             	if (r4 == 0) goto 12 <.GJTIE602_2_2_+0x558 : 1e0a5ae >
 1e0a5a2:    11 48             	r1 = [r4 + 4]			  ## run_loop.c:37:16
 1e0a5a4:    02 22             	if (r1 == 0) goto 4 <.GJTIE602_2_2_+0x554 : 1e0a5aa >			  ## run_loop.c:37:16
 1e0a5a6:    40 08             	r0 = r4			  ## run_loop.c:38:13
 1e0a5a8:    81 00             	call r1			  ## run_loop.c:38:13
 1e0a5aa:    04 48             	r4 = [r4 + 0]
 1e0a5ac:    fa 39             	if (r4 != 0) goto -12 <.GJTIE602_2_2_+0x54C : 1e0a5a2 >
 1e0a5ae:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## btstack_task.c:137:13
 1e0a5b4:    00 e0 81 0c       	if (r0 == 0) goto -1790 <btstack_task+0x4E : 1e09eba >			  ## btstack_task.c:137:13
 1e0a5b8:    8f f3 22 ad       	call 2054724 <umoddi3.bc : 0 >			  ## btstack_task.c:138:13
 1e0a5bc:    7e 1c             	goto -1796 <btstack_task+0x4E : 1e09eba >			  ## btstack_task.c:138:13
 1e0a5be:    80 f3 bc 82       	call 66936 <lmp_hci_accept_sco_connection_request : 1e1ab3a >			  ## hci_vendor.c:568:13
 1e0a5c2:    d7 1f             	goto -82 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:568:13
 1e0a5c4:    80 f3 bb 82       	call 66934 <lmp_hci_reject_connection_request : 1e1ab3e >			  ## hci_vendor.c:572:13
 1e0a5c8:    d4 1f             	goto -88 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:572:13
 1e0a5ca:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:868:29
 1e0a5ce:    b0 08             	r0 = r11			  ## hci_vendor.c:870:24
 1e0a5d0:    41 08             	r1 = r4			  ## hci_vendor.c:870:24
 1e0a5d2:    bf f3 bb fb       	call -2186 <le_hci_connection_for_bd_addr_and_type : 1e09d4c >			  ## hci_vendor.c:870:24
 1e0a5d6:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## hci_vendor.c:877:21
 1e0a5da:    02 08             	r2 = r0			  ## hci_vendor.c:870:24
 1e0a5dc:    24 32             	if (r1 != 0) goto 72 <.GJTIE602_2_2_+0x5D0 : 1e0a626 >
 1e0a5de:    06 34             	if (r2 != 0) goto 12 <.GJTIE602_2_2_+0x596 : 1e0a5ec >
 1e0a5e0:    b0 08             	r0 = r11			  ## hci_vendor.c:905:28
 1e0a5e2:    41 08             	r1 = r4			  ## hci_vendor.c:905:28
 1e0a5e4:    bf f3 d4 fb       	call -2136 <le_create_connection_for_bd_addr_and_type : 1e09d90 >			  ## hci_vendor.c:905:28
 1e0a5e8:    02 08             	r2 = r0			  ## hci_vendor.c:905:28
 1e0a5ea:    c3 25             	if (r2 == 0) goto -122 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e0a5ec:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## hci_vendor.c:913:31
 1e0a5f0:    08 65             	b[r2 + 16] = r0			  ## hci_vendor.c:913:29
 1e0a5f2:    41 70             	r1 = 4			  ## hci_vendor.c:914:36
 1e0a5f4:    f0 08             	r0 = r15			  ## hci_vendor.c:914:36
 1e0a5f6:    bf f3 4b ed       	call -9578 <little_endian_read_16 : 1e08090 >			  ## hci_vendor.c:914:36
 1e0a5fa:    04 08             	r4 = r0			  ## hci_vendor.c:914:36
 1e0a5fc:    5c 54             	h[r2 + 10] = r4			  ## hci_vendor.c:914:34
 1e0a5fe:    25 fc b6 04       	r5 = r2 + 1206			  ## hci_vendor.c:914:34
 1e0a602:    e0 9a             	r0 = r5 + 14			  ## hci_vendor.c:917:50
 1e0a604:    71 9a             	r1 = r5 + 7			  ## hci_vendor.c:917:68
 1e0a606:    80 f3 45 7e       	call 64650 <hci_ll_get_device_address : 1e1a294 >			  ## hci_vendor.c:917:17
 1e0a60a:    10 9a             	r0 = r5 + 1			  ## hci_vendor.c:918:39
 1e0a60c:    80 f3 1b 7e       	call 64566 <le_controller_get_mac : 1e1a246 >			  ## hci_vendor.c:918:17
 1e0a610:    ac 1f             	goto -168 <.GJTIE602_2_2_+0x514 : 1e0a56a >			  ## hci_vendor.c:918:17
 1e0a612:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:833:29
 1e0a616:    b0 08             	r0 = r11			  ## hci_vendor.c:835:24
 1e0a618:    41 08             	r1 = r4			  ## hci_vendor.c:835:24
 1e0a61a:    bf f3 97 fb       	call -2258 <le_hci_connection_for_bd_addr_and_type : 1e09d4c >			  ## hci_vendor.c:835:24
 1e0a61e:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## btstack_event.h:3699:16
 1e0a622:    02 08             	r2 = r0			  ## hci_vendor.c:835:24
 1e0a624:    0e 22             	if (r1 == 0) goto 28 <.GJTIE602_2_2_+0x5EC : 1e0a642 >			  ## hci_vendor.c:838:21
 1e0a626:    02 24             	if (r2 == 0) goto 4 <.GJTIE602_2_2_+0x5D6 : 1e0a62c >
 1e0a628:    bf f3 82 fb       	call -2300 <btstack_memory_le_hci_connection_free : 1e09d30 >
 1e0a62c:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e0a630:    11 90             	r1 = r0 + 1
 1e0a632:    f0 08             	r0 = r15
 1e0a634:    bf f3 0b f0       	call -8170 <le_hci_emit_event : 1e0864e >
 1e0a638:    9c 1f             	goto -200 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e0a63a:    a0 7a             	r0 = 170			  ## hci_vendor.c:561:17
 1e0a63c:    80 f3 7b 82       	call 66806 <lmp_hci_accept_connection_request : 1e1ab36 >			  ## hci_vendor.c:561:17
 1e0a640:    98 1f             	goto -208 <.GJTIE602_2_2_+0x51C : 1e0a572 >			  ## hci_vendor.c:561:17
 1e0a642:    06 34             	if (r2 != 0) goto 12 <.GJTIE602_2_2_+0x5FA : 1e0a650 >
 1e0a644:    b0 08             	r0 = r11			  ## hci_vendor.c:849:28
 1e0a646:    41 08             	r1 = r4			  ## hci_vendor.c:849:28
 1e0a648:    bf f3 a2 fb       	call -2236 <le_create_connection_for_bd_addr_and_type : 1e09d90 >			  ## hci_vendor.c:849:28
 1e0a64c:    02 08             	r2 = r0			  ## hci_vendor.c:849:28
 1e0a64e:    91 25             	if (r2 == 0) goto -222 <.GJTIE602_2_2_+0x51C : 1e0a572 >
 1e0a650:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## btstack_event.h:3719:16
 1e0a654:    08 65             	b[r2 + 16] = r0			  ## hci_vendor.c:856:29
 1e0a656:    41 70             	r1 = 4			  ## btstack_event.h:3709:16
 1e0a658:    f0 08             	r0 = r15			  ## btstack_event.h:3709:16
 1e0a65a:    bf f3 19 ed       	call -9678 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3709:16
 1e0a65e:    04 08             	r4 = r0			  ## btstack_event.h:3709:16
 1e0a660:    5c 54             	h[r2 + 10] = r4			  ## hci_vendor.c:857:34
 1e0a662:    83 1f             	goto -250 <.GJTIE602_2_2_+0x514 : 1e0a56a >			  ## hci_vendor.c:857:34


hci_can_send_acl_le_packet_now:
 1e0a664:    34 00             	[--sp] = rets			  ## hci_vendor.c:2033:0
 1e0a666:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:2034:22
 1e0a66c:    01 f9 15 02       	r1 = b[r0 + 533] (u)			  ## hci_vendor.c:2034:22
 1e0a670:    00 70             	r0 = 0			  ## hci_vendor.c:2034:22
 1e0a672:    07 32             	if (r1 != 0) goto 14 <hci_can_send_acl_le_packet_now+0x1E : 1e0a682 >			  ## hci_vendor.c:2034:22
 1e0a674:    bf f3 39 f3       	call -6542 <hci_number_free_acl_slots_for_connection_type : 1e08cea >			  ## hci_vendor.c:2029:12
 1e0a678:    01 08             	r1 = r0			  ## hci_vendor.c:2029:12
 1e0a67a:    10 70             	r0 = 1			  ## hci_vendor.c:2029:72
 1e0a67c:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_le_packet_now+0x1E : 1e0a682 >			  ## hci_vendor.c:2029:72
 1e0a680:    00 70             	r0 = 0			  ## hci_vendor.c:2029:72
 1e0a682:    30 00             	pc = [sp++]			  ## hci_vendor.c:2038:1


l2cap_notify_channel_can_send:
 1e0a684:    79 01             	[--sp] = {rets, r9-r4}			  ## l2cap.c:428:0
 1e0a686:    fe 0b             	sp += -4			  ## l2cap.c:428:0
 1e0a688:    c4 ff ac 1a 00 00 	r4 = 6828 <l2cap_fixed_channels+0x4 : 1aac >			  ## l2cap.c:428:0
 1e0a68e:    05 70             	r5 = 0			  ## l2cap.c:428:0
 1e0a690:    88 77             	r8 = 120			  ## l2cap.c:428:0
 1e0a692:    29 70             	r9 = 2			  ## l2cap.c:428:0
 1e0a694:    06 70             	r6 = 0			  ## l2cap.c:428:0
 1e0a696:    07 f6 fc 4f       	r7 = [r4 + -4]			  ## l2cap.c:431:38
 1e0a69a:    20 2e             	if (r7 == 0) goto 64 <l2cap_notify_channel_can_send+0x58 : 1e0a6dc >
 1e0a69c:    00 68             	r0 = b[r4 + 0] (u)			  ## l2cap.c:434:38
 1e0a69e:    1e 20             	if (r0 == 0) goto 60 <l2cap_notify_channel_can_send+0x58 : 1e0a6dc >			  ## l2cap.c:434:38
 1e0a6a0:    26 e0 20 00       	if (r6 == 2) goto 64 <l2cap_notify_channel_can_send+0x60 : 1e0a6e4 >
 1e0a6a4:    df 17             	call -66 <hci_can_send_acl_le_packet_now : 1e0a664 >			  ## l2cap.c:439:24
 1e0a6a6:    1a 20             	if (r0 == 0) goto 52 <l2cap_notify_channel_can_send+0x58 : 1e0a6dc >
 1e0a6a8:    0d 68             	b[r4 + 0] = r5			  ## l2cap.c:446:58
 1e0a6aa:    06 2c             	if (r6 == 0) goto 12 <l2cap_notify_channel_can_send+0x34 : 1e0a6b8 >			  ## l2cap.c:446:58
 1e0a6ac:    26 e0 06 00       	if (r6 == 2) goto 12 <l2cap_notify_channel_can_send+0x38 : 1e0a6bc >
 1e0a6b0:    16 e0 06 10       	if (r6 != 1) goto 12 <l2cap_notify_channel_can_send+0x3C : 1e0a6c0 >
 1e0a6b4:    60 70             	r0 = 6
 1e0a6b6:    05 18             	goto 10 <l2cap_notify_channel_can_send+0x3E : 1e0a6c2 >
 1e0a6b8:    40 70             	r0 = 4
 1e0a6ba:    03 18             	goto 6 <l2cap_notify_channel_can_send+0x3E : 1e0a6c2 >
 1e0a6bc:    20 70             	r0 = 2
 1e0a6be:    01 18             	goto 2 <l2cap_notify_channel_can_send+0x3E : 1e0a6c2 >
 1e0a6c0:    00 70             	r0 = 0
 1e0a6c2:    d8 f5 00 00       	b[sp] = r8			  ## l2cap.c:191:14
 1e0a6c6:    d9 f5 01 00       	b[sp+1] = r9			  ## l2cap.c:192:14
 1e0a6ca:    d0 f5 02 00       	b[sp+2] = r0			  ## utils.c:160:19
 1e0a6ce:    d5 f5 03 00       	b[sp+3] = r5			  ## utils.c:161:19
 1e0a6d2:    21 04             	r1 = r0.l (u)			  ## l2cap.c:195:5
 1e0a6d4:    02 a0             	r2 = sp + 0			  ## l2cap.c:195:5
 1e0a6d6:    40 70             	r0 = 4			  ## l2cap.c:195:5
 1e0a6d8:    43 70             	r3 = 4			  ## l2cap.c:195:5
 1e0a6da:    87 00             	call r7			  ## l2cap.c:195:5
 1e0a6dc:    16 80             	r6 += 1			  ## l2cap.c:430:54
 1e0a6de:    84 80             	r4 += 8			  ## l2cap.c:430:19
 1e0a6e0:    36 e0 d9 1f       	if (r6 != 3) goto -78 <l2cap_notify_channel_can_send+0x12 : 1e0a696 >			  ## l2cap.c:430:19
 1e0a6e4:    02 0a             	sp += 4
 1e0a6e6:    59 01             	{pc, r9-r4} = [sp++]			  ## l2cap.c:449:1


l2cap_hci_event_handler:
 1e0a6e8:    34 00             	[--sp] = rets			  ## l2cap.c:1114:0
 1e0a6ea:    00 64             	r0 = b[r2 + 0] (u)			  ## btstack_event.h:40:16
 1e0a6ec:    f0 e0 06 00       	if (r0 == 15) goto 12 <l2cap_hci_event_handler+0x14 : 1e0a6fc >			  ## l2cap.c:1116:5
 1e0a6f0:    30 e1 06 10       	if (r0 != 19) goto 12 <l2cap_hci_event_handler+0x18 : 1e0a700 >
 1e0a6f4:    bf f3 7b f4       	call -5898 <l2cap_run : 1e08fee >			  ## l2cap.c:1120:9
 1e0a6f8:    88 01             	{rets} = [sp++]			  ## l2cap.c:1122:9
 1e0a6fa:    c4 1f             	goto -120 <l2cap_notify_channel_can_send : 1e0a684 >			  ## l2cap.c:1122:9
 1e0a6fc:    bf f3 77 f4       	call -5906 <l2cap_run : 1e08fee >			  ## l2cap.c:1127:9
 1e0a700:    30 00             	pc = [sp++]			  ## l2cap.c:1150:1


user_cmd_loop_suspend:
 1e0a702:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2918:0
 1e0a708:    00 f7 fa 10       	r0 = h[r1 + 250] (u)			  ## avctp_user.c:2919:35
 1e0a70c:    02 fd 01 0a       	r2 = r0 | 256			  ## avctp_user.c:2919:35
 1e0a710:    00 70             	r0 = 0			  ## avctp_user.c:2920:5
 1e0a712:    12 f7 fa 10       	h[r1 + 250] = r2			  ## avctp_user.c:2919:35
 1e0a716:    20 00             	rts			  ## avctp_user.c:2920:5


user_cmd_loop_resume:
 1e0a718:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2923:0
 1e0a71e:    00 f7 fa 10       	r0 = h[r1 + 250] (u)			  ## avctp_user.c:2924:35
 1e0a722:    32 fd 01 0a       	r2 = r0 & 4294967039			  ## avctp_user.c:2924:35
 1e0a726:    00 70             	r0 = 0			  ## avctp_user.c:2925:5
 1e0a728:    12 f7 fa 10       	h[r1 + 250] = r2			  ## avctp_user.c:2924:35
 1e0a72c:    20 00             	rts			  ## avctp_user.c:2925:5


btstack_run_loop_remove_timer:
 1e0a72e:    20 04             	r0 = r0.l (u)			  ## btstack_sys_timer.c:169:0
 1e0a730:    c0 f3 a7 0c       	goto 6478 <sys_timer_del : 1e0c082 >			  ## btstack_sys_timer.c:174:5


user_cmd_loop_release:
 1e0a734:    75 01             	[--sp] = {rets, r5, r4}			  ## avctp_user.c:2900:0
 1e0a736:    c5 ff c0 1a 00 00 	r5 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2900:0
 1e0a73c:    00 f9 fa 50       	r0 = b[r5 + 250] (u)			  ## avctp_user.c:2902:9
 1e0a740:    04 70             	r4 = 0			  ## avctp_user.c:2902:9
 1e0a742:    26 f3 1a 00       	if ((r0 & 64) != 0) goto 52 <user_cmd_loop_release+0x46 : 1e0a77a >			  ## avctp_user.c:2902:9
 1e0a746:    50 fc 70 00       	r0 = r5 + 112
 1e0a74a:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:2906:20
 1e0a74c:    1d f3 02 10       	if ((r1 & 536870912) == 0) goto 4 <user_cmd_loop_release+0x20 : 1e0a754 >			  ## avctp_user.c:2906:20
 1e0a750:    31 50             	r1 = h[r0 + 6] (u)			  ## avctp_user.c:2906:38
 1e0a752:    12 32             	if (r1 != 0) goto 36 <user_cmd_loop_release+0x44 : 1e0a778 >			  ## avctp_user.c:2906:38
 1e0a754:    80 81             	r0 += 24			  ## avctp_user.c:2905:5
 1e0a756:    51 fc 88 00       	r1 = r5 + 136			  ## avctp_user.c:2905:5
 1e0a75a:    10 f2 f6 3f       	if (r0 < r1) goto -20 <user_cmd_loop_release+0x16 : 1e0a74a >			  ## avctp_user.c:2905:5
 1e0a75e:    50 fc 64 00       	r0 = r5 + 100			  ## avctp_user.c:2910:5
 1e0a762:    bf f3 89 eb       	call -10478 <stack_run_loop_remove : 1e07e78 >			  ## avctp_user.c:2910:5
 1e0a766:    00 f6 a0 50       	r0 = [r5 + 160]			  ## avctp_user.c:2910:5
 1e0a76a:    e1 17             	call -62 <btstack_run_loop_remove_timer : 1e0a72e >			  ## avctp_user.c:2911:5
 1e0a76c:    00 f7 fa 50       	r0 = h[r5 + 250] (u)			  ## avctp_user.c:2912:30
 1e0a770:    10 b3             	r0 |= 64			  ## avctp_user.c:2912:30
 1e0a772:    10 f7 fa 50       	h[r5 + 250] = r0			  ## avctp_user.c:2912:30
 1e0a776:    01 18             	goto 2 <user_cmd_loop_release+0x46 : 1e0a77a >			  ## avctp_user.c:2912:30
 1e0a778:    14 70             	r4 = 1
 1e0a77a:    40 08             	r0 = r4			  ## avctp_user.c:2914:1
 1e0a77c:    55 01             	{pc, r5, r4} = [sp++]			  ## avctp_user.c:2914:1


user_client_gatt_event:
 1e0a77e:    20 00             	rts			  ## client_user.c:320:0


update_connectiong_mac_addr:
 1e0a780:    c1 ff bc 1b 00 00 	r1 = 7100 <__user_info+0xFC : 1bbc >			  ## avctp_user.c:1195:0
 1e0a786:    c2 f4 00 19       	[r1 + 8] = 0			  ## avctp_user.c:1198:25
 1e0a78a:    03 08             	r3 = r0			  ## avctp_user.c:1198:25
 1e0a78c:    60 70             	r0 = 6
 1e0a78e:    68 62             	b[r1 + 6] = r0			  ## avctp_user.c:1199:29
 1e0a790:    62 70             	r2 = 6			  ## avctp_user.c:1200:5
 1e0a792:    10 08             	r0 = r1			  ## avctp_user.c:1200:5
 1e0a794:    31 08             	r1 = r3			  ## avctp_user.c:1200:5
 1e0a796:    d7 f3 a5 e3       	goto 3131210 <memcpy : 106ee4 >			  ## avctp_user.c:1200:5


aec_sco_connection_start:
 1e0a79a:    77 01             	[--sp] = {rets, r7-r4}			  ## bt_audio.c:121:0
 1e0a79c:    c6 ff 90 09 00 00 	r6 = 2448 <stack_configs_app : 990 >			  ## bt_audio.c:121:0
 1e0a7a2:    43 6d             	r3 = b[r6 + 20] (u)			  ## bt_audio.c:123:29
 1e0a7a4:    34 6d             	r4 = b[r6 + 19] (u)			  ## bt_audio.c:123:29
 1e0a7a6:    25 6d             	r5 = b[r6 + 18] (u)			  ## bt_audio.c:123:29
 1e0a7a8:    17 6d             	r7 = b[r6 + 17] (u)			  ## bt_audio.c:123:29
 1e0a7aa:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## bt_audio.c:123:29
 1e0a7ae:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## bt_audio.c:123:29
 1e0a7b2:    d0 fd 80 74       	r7 <= insert(r4, p:16, l:16)			  ## bt_audio.c:123:29
 1e0a7b6:    23 08             	r3 = r2
 1e0a7b8:    15 08             	r5 = r1
 1e0a7ba:    04 08             	r4 = r0
 1e0a7bc:    2e f3 2f 70       	if ((r7 & 16384) != 0) goto 94 <aec_sco_connection_start+0x84 : 1e0a81e >
 1e0a7c0:    2d f3 22 70       	if ((r7 & 8192) != 0) goto 68 <aec_sco_connection_start+0x6E : 1e0a808 >			  ## bt_audio.c:126:9
 1e0a7c4:    20 6d             	r0 = b[r6 + 18] (u)			  ## bt_audio.c:127:50
 1e0a7c6:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:127:50
 1e0a7c8:    12 6d             	r2 = b[r6 + 17] (u)			  ## bt_audio.c:127:50
 1e0a7ca:    47 6d             	r7 = b[r6 + 20] (u)			  ## bt_audio.c:127:50
 1e0a7cc:    4f 6d             	b[r6 + 20] = r7			  ## bt_audio.c:127:50
 1e0a7ce:    1a 6d             	b[r6 + 17] = r2			  ## bt_audio.c:127:50
 1e0a7d0:    c8 fd 40 17       	r1 <= insert(r7, p:8, l:8)			  ## bt_audio.c:127:50
 1e0a7d4:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)			  ## bt_audio.c:127:50
 1e0a7d8:    d0 fd 80 21       	r2 <= insert(r1, p:16, l:16)			  ## bt_audio.c:127:50
 1e0a7dc:    10 d4             	r0 = r2 >> 16			  ## bt_audio.c:127:50
 1e0a7de:    38 6d             	b[r6 + 19] = r0			  ## bt_audio.c:127:50
 1e0a7e0:    00 fd 40 2a       	r0 = r2 | 16384			  ## bt_audio.c:127:50
 1e0a7e4:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:127:50
 1e0a7e6:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:127:50
 1e0a7e8:    90 9d             	r0 = r6 + 25			  ## bt_audio.c:128:9
 1e0a7ea:    62 70             	r2 = 6			  ## bt_audio.c:128:9
 1e0a7ec:    31 08             	r1 = r3			  ## bt_audio.c:128:9
 1e0a7ee:    97 f3 79 e3       	call 3131122 <memcpy : 106ee4 >			  ## bt_audio.c:128:9
 1e0a7f2:    d0 fd 80 45       	r4 <= insert(r5, p:16, l:16)			  ## bt_audio.c:134:107
 1e0a7f6:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:134:9
 1e0a7fc:    00 70             	r0 = 0			  ## bt_audio.c:134:9
 1e0a7fe:    92 71             	r2 = 25			  ## bt_audio.c:134:9
 1e0a800:    43 08             	r3 = r4			  ## bt_audio.c:134:9
 1e0a802:    17 01             	{rets, r7-r4} = [sp++]			  ## bt_audio.c:134:9
 1e0a804:    ff f3 88 ee       	goto -8944 <bt_event_update_to_user : 1e08518 >			  ## bt_audio.c:134:9
 1e0a808:    c1 ff 80 b0 e0 01 	r1 = 31502464 <send_sco_disconn : 1e0b080 >			  ## bt_audio.c:142:29
 1e0a80e:    00 70             	r0 = 0			  ## bt_audio.c:142:29
 1e0a810:    42 76             	r2 = 100			  ## bt_audio.c:142:29
 1e0a812:    80 f3 c6 0d       	call 7052 <sys_timeout_add : 1e0c3a2 >			  ## bt_audio.c:142:29
 1e0a816:    c1 ff b0 09 00 00 	r1 = 2480 <disable_sco_timer : 9b0 >			  ## bt_audio.c:142:27
 1e0a81c:    08 52             	h[r1 + 0] = r0			  ## bt_audio.c:142:27
 1e0a81e:    57 01             	{pc, r7-r4} = [sp++]			  ## bt_audio.c:145:1


free_conn_for_addr:
 1e0a820:    77 01             	[--sp] = {rets, r7-r4}			  ## avctp_user.c:307:0
 1e0a822:    16 08             	r6 = r1			  ## avctp_user.c:307:0
 1e0a824:    05 08             	r5 = r0			  ## avctp_user.c:307:0
 1e0a826:    bf f3 61 ee       	call -9022 <get_conn_for_addr : 1e084ec >			  ## avctp_user.c:308:25
 1e0a82a:    04 08             	r4 = r0			  ## avctp_user.c:308:25
 1e0a82c:    c7 ff c0 1a 00 00 	r7 = 6848 <__user_info : 1ac0 >
 1e0a832:    0d 2c             	if (r6 == 0) goto 26 <free_conn_for_addr+0x2E : 1e0a84e >
 1e0a834:    0c 28             	if (r4 == 0) goto 24 <free_conn_for_addr+0x2E : 1e0a84e >
 1e0a836:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:313:23
 1e0a838:    26 f3 03 00       	if ((r0 & 64) != 0) goto 6 <free_conn_for_addr+0x22 : 1e0a842 >			  ## avctp_user.c:313:23
 1e0a83c:    70 fc 89 00       	r0 = r7 + 137			  ## avctp_user.c:316:17
 1e0a840:    02 18             	goto 4 <free_conn_for_addr+0x26 : 1e0a846 >			  ## avctp_user.c:316:17
 1e0a842:    70 fc f2 00       	r0 = r7 + 242			  ## avctp_user.c:314:17
 1e0a846:    62 70             	r2 = 6
 1e0a848:    51 08             	r1 = r5
 1e0a84a:    97 f3 4b e3       	call 3131030 <memcpy : 106ee4 >
 1e0a84e:    15 28             	if (r4 == 0) goto 42 <free_conn_for_addr+0x5A : 1e0a87a >
 1e0a850:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:323:22
 1e0a852:    31 48             	r1 = [r4 + 12]			  ## avctp_user.c:323:22
 1e0a854:    08 69             	b[r4 + 16] = r0			  ## avctp_user.c:323:22
 1e0a856:    30 fd 20 1c       	r0 = r1 & 3758096383			  ## avctp_user.c:323:22
 1e0a85a:    38 48             	[r4 + 12] = r0			  ## avctp_user.c:323:22
 1e0a85c:    00 f7 fa 70       	r0 = h[r7 + 250] (u)			  ## avctp_user.c:324:37
 1e0a860:    31 fd 07 09       	r1 = r0 & 4294967288			  ## avctp_user.c:324:37
 1e0a864:    70 80             	r0 += 7			  ## avctp_user.c:324:37
 1e0a866:    20 fd 07 09       	r0 = r0 & 7			  ## avctp_user.c:324:37
 1e0a86a:    50 b2             	r0 |= r1			  ## avctp_user.c:324:37
 1e0a86c:    10 f7 fa 70       	h[r7 + 250] = r0			  ## avctp_user.c:324:37
 1e0a870:    01 70             	r1 = 0			  ## avctp_user.c:328:9
 1e0a872:    82 71             	r2 = 24			  ## avctp_user.c:328:9
 1e0a874:    40 08             	r0 = r4			  ## avctp_user.c:328:9
 1e0a876:    97 f3 3b e3       	call 3130998 <memset : 106ef0 >			  ## avctp_user.c:328:9
 1e0a87a:    70 fc 70 00       	r0 = r7 + 112
 1e0a87e:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:332:19
 1e0a880:    3d f3 06 10       	if ((r1 & 536870912) != 0) goto 12 <free_conn_for_addr+0x70 : 1e0a890 >			  ## avctp_user.c:332:19
 1e0a884:    80 81             	r0 += 24			  ## avctp_user.c:330:5
 1e0a886:    71 fc 88 00       	r1 = r7 + 136			  ## avctp_user.c:330:5
 1e0a88a:    10 f2 f8 3f       	if (r0 < r1) goto -16 <free_conn_for_addr+0x5E : 1e0a87e >			  ## avctp_user.c:330:5
 1e0a88e:    57 01             	{pc, r7-r4} = [sp++]
 1e0a890:    21 50             	r1 = h[r0 + 4] (u)			  ## avctp_user.c:334:13
 1e0a892:    11 f7 b4 70       	h[r7 + 180] = r1			  ## avctp_user.c:334:13
 1e0a896:    00 40             	r0 = [r0 + 0]			  ## avctp_user.c:334:13
 1e0a898:    10 f6 b0 70       	[r7 + 176] = r0			  ## avctp_user.c:334:13
 1e0a89c:    57 01             	{pc, r7-r4} = [sp++]			  ## avctp_user.c:334:13


packet_handler:
 1e0a89e:    79 01             	[--sp] = {rets, r9-r4}			  ## btstack_main.c:188:0
 1e0a8a0:    fc 0b             	sp += -8			  ## btstack_main.c:188:0
 1e0a8a2:    34 08             	r4 = r3			  ## btstack_main.c:188:0
 1e0a8a4:    41 e0 3e 11       	if (r1 != 4) goto 636 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## btstack_main.c:188:0
 1e0a8a8:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_main.c:188:0
 1e0a8aa:    c0 e6 23 c0       	ifs (r0 > 108) goto 70 <packet_handler+0x56 : 1e0a8f4 >			  ## btstack_main.c:194:9
 1e0a8ae:    c6 ff 90 09 00 00 	r6 = 2448 <stack_configs_app : 990 >
 1e0a8b4:    30 e0 30 00       	if (r0 == 3) goto 96 <.GJTIE614_0_0_+0x6 : 1e0a918 >
 1e0a8b8:    50 e0 49 00       	if (r0 == 5) goto 146 <.GJTIE614_0_0_+0x3C : 1e0a94e >
 1e0a8bc:    c0 e2 32 11       	if (r0 != 44) goto 612 <.GJTIE614_0_0_+0x212 : 1e0ab24 >
 1e0a8c0:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:271:13
 1e0a8c2:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:271:13
 1e0a8c4:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:271:13
 1e0a8c8:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:271:13
 1e0a8cc:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:271:13
 1e0a8ce:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:271:13
 1e0a8d0:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:271:13
 1e0a8d2:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:271:13
 1e0a8d4:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:271:13
 1e0a8d8:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:271:13
 1e0a8dc:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:271:13
 1e0a8e0:    0b 02             	[sp] = r3			  ## btstack_main.c:271:13
 1e0a8e2:    11 69             	r1 = b[r4 + 17] (u)			  ## btstack_main.c:272:50
 1e0a8e4:    02 69             	r2 = b[r4 + 16] (u)			  ## btstack_main.c:272:50
 1e0a8e6:    20 69             	r0 = b[r4 + 18] (u)			  ## btstack_main.c:272:13
 1e0a8e8:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## btstack_main.c:272:50
 1e0a8ec:    a1 04             	r1 = r2.l (u)			  ## btstack_main.c:272:13
 1e0a8ee:    02 a0             	r2 = sp + 0			  ## btstack_main.c:272:13
 1e0a8f0:    54 17             	call -344 <aec_sco_connection_start : 1e0a79a >			  ## btstack_main.c:272:13
 1e0a8f2:    18 19             	goto 560 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## btstack_main.c:272:13
 1e0a8f4:    01 fc 0a ff       	r1 = r0 + -246
 1e0a8f8:    81 e0 4b 80       	if (r1 > 8) goto 150 <.GJTIE614_0_0_+0x80 : 1e0a992 >
 1e0a8fc:    48 c0             	r0 = r1 << 1
 1e0a8fe:    b0 00             	tbh [r0]


.GJTIL614_0_0_:
 1e0a900:    09 00     < 9 : 0x9 >
 1e0a902:    66 00     < 102 : 0x66 >
 1e0a904:    12 01     < 274 : 0x112 >
 1e0a906:    69 00     < 105 : 0x69 >
 1e0a908:    12 01     < 274 : 0x112 >
 1e0a90a:    12 01     < 274 : 0x112 >
 1e0a90c:    12 01     < 274 : 0x112 >
 1e0a90e:    12 01     < 274 : 0x112 >
 1e0a910:    6f 00     < 111 : 0x6F >
 1e0a912:    00 70             	r0 = 0			  ## btstack_main.c:340:13
 1e0a914:    31 73             	r1 = 51			  ## btstack_main.c:340:13
 1e0a916:    5f 18             	goto 190 <.GJTIE614_0_0_+0xC4 : 1e0a9d6 >			  ## btstack_main.c:340:13
 1e0a918:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:197:13
 1e0a91a:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:197:13
 1e0a91c:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:197:13
 1e0a920:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:197:13
 1e0a924:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:197:13
 1e0a926:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:197:13
 1e0a928:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:197:13
 1e0a92a:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:197:13
 1e0a92c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:197:13
 1e0a930:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:197:13
 1e0a934:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:197:13
 1e0a938:    0b 02             	[sp] = r3			  ## btstack_main.c:197:13
 1e0a93a:    21 68             	r1 = b[r4 + 2] (u)			  ## btstack_main.c:198:17
 1e0a93c:    b0 68             	r0 = b[r4 + 11] (u)			  ## btstack_main.c:198:17
 1e0a93e:    5a 22             	if (r1 == 0) goto 180 <.GJTIE614_0_0_+0xE2 : 1e0a9f4 >			  ## btstack_main.c:198:17
 1e0a940:    10 e0 f0 10       	if (r0 != 1) goto 480 <.GJTIE614_0_0_+0x212 : 1e0ab24 >
 1e0a944:    05 a0             	r5 = sp + 0
 1e0a946:    01 70             	r1 = 0			  ## btstack_main.c:217:21
 1e0a948:    50 08             	r0 = r5			  ## btstack_main.c:217:21
 1e0a94a:    6a 17             	call -300 <free_conn_for_addr : 1e0a820 >			  ## btstack_main.c:217:21
 1e0a94c:    e3 18             	goto 454 <.GJTIE614_0_0_+0x202 : 1e0ab14 >			  ## btstack_main.c:217:21
 1e0a94e:    c0 68             	r0 = b[r4 + 12] (u)			  ## utils.c:188:5
 1e0a950:    b1 68             	r1 = b[r4 + 11] (u)			  ## utils.c:188:5
 1e0a952:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e0a956:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e0a95a:    a0 68             	r0 = b[r4 + 10] (u)			  ## utils.c:188:5
 1e0a95c:    91 68             	r1 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e0a95e:    82 68             	r2 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e0a960:    73 68             	r3 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e0a962:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e0a966:    95 02             	r5 = [sp+36]			  ## utils.c:188:5
 1e0a968:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e0a96c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e0a970:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e0a972:    00 a0             	r0 = sp + 0			  ## utils.c:188:5
 1e0a974:    05 17             	call -502 <update_connectiong_mac_addr : 1e0a780 >			  ## btstack_main.c:245:13
 1e0a976:    75 e0 d5 30       	if (r5 < 7) goto 426 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## btstack_main.c:245:13
 1e0a97a:    60 68             	r0 = b[r4 + 6] (u)			  ## btstack_main.c:247:21
 1e0a97c:    47 20             	if (r0 == 0) goto 142 <.GJTIE614_0_0_+0xFA : 1e0aa0c >			  ## btstack_main.c:247:21
 1e0a97e:    20 e0 45 00       	if (r0 == 2) goto 138 <.GJTIE614_0_0_+0xFA : 1e0aa0c >
 1e0a982:    10 e0 cf 10       	if (r0 != 1) goto 414 <.GJTIE614_0_0_+0x212 : 1e0ab24 >
 1e0a986:    05 a0             	r5 = sp + 0
 1e0a988:    11 70             	r1 = 1			  ## btstack_main.c:249:21
 1e0a98a:    50 08             	r0 = r5			  ## btstack_main.c:249:21
 1e0a98c:    49 17             	call -366 <free_conn_for_addr : 1e0a820 >			  ## btstack_main.c:249:21
 1e0a98e:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:253:105
 1e0a990:    c2 18             	goto 388 <.GJTIE614_0_0_+0x204 : 1e0ab16 >			  ## btstack_main.c:253:105
 1e0a992:    d0 e6 c7 10       	if (r0 != 109) goto 398 <.GJTIE614_0_0_+0x212 : 1e0ab24 >
 1e0a996:    90 68             	r0 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e0a998:    81 68             	r1 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e0a99a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e0a99e:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e0a9a2:    70 68             	r0 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e0a9a4:    61 68             	r1 = b[r4 + 6] (u)			  ## utils.c:188:5
 1e0a9a6:    52 68             	r2 = b[r4 + 5] (u)			  ## utils.c:188:5
 1e0a9a8:    43 68             	r3 = b[r4 + 4] (u)			  ## utils.c:188:5
 1e0a9aa:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e0a9ae:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e0a9b2:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e0a9b6:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e0a9b8:    30 68             	r0 = b[r4 + 3] (u)			  ## btstack_main.c:285:18
 1e0a9ba:    10 e0 b3 10       	if (r0 != 1) goto 358 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## btstack_main.c:285:18
 1e0a9be:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:290:101
 1e0a9c0:    00 a0             	r0 = sp + 0			  ## btstack_main.c:290:101
 1e0a9c2:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:290:21
 1e0a9c8:    d2 76             	r2 = 109			  ## btstack_main.c:290:21
 1e0a9ca:    aa 18             	goto 340 <.GJTIE614_0_0_+0x20E : 1e0ab20 >			  ## btstack_main.c:290:21
 1e0a9cc:    00 70             	r0 = 0			  ## btstack_main.c:336:13
 1e0a9ce:    81 70             	r1 = 8			  ## btstack_main.c:336:13
 1e0a9d0:    02 18             	goto 4 <.GJTIE614_0_0_+0xC4 : 1e0a9d6 >			  ## btstack_main.c:336:13
 1e0a9d2:    20 98             	r0 = r4 + 2			  ## btstack_main.c:331:39
 1e0a9d4:    51 70             	r1 = 5			  ## btstack_main.c:331:13
 1e0a9d6:    02 70             	r2 = 0
 1e0a9d8:    bf f3 b7 ed       	call -9362 <update_bt_current_status : 1e0854a >
 1e0a9dc:    a3 18             	goto 326 <.GJTIE614_0_0_+0x212 : 1e0ab24 >
 1e0a9de:    20 68             	r0 = b[r4 + 2] (u)			  ## btstack_main.c:297:17
 1e0a9e0:    42 20             	if (r0 == 0) goto 132 <.GJTIE614_0_0_+0x154 : 1e0aa66 >			  ## btstack_main.c:297:17
 1e0a9e2:    bf f3 75 ec       	call -10006 <set_remote_test_flag : 1e082d0 >			  ## btstack_main.c:298:17
 1e0a9e6:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:300:97
 1e0a9e8:    02 68             	r2 = b[r4 + 0] (u)			  ## btstack_main.c:300:17
 1e0a9ea:    00 a0             	r0 = sp + 0			  ## btstack_main.c:300:17
 1e0a9ec:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:300:17
 1e0a9f2:    96 18             	goto 300 <.GJTIE614_0_0_+0x20E : 1e0ab20 >			  ## btstack_main.c:300:17
 1e0a9f4:    10 e0 41 10       	if (r0 != 1) goto 130 <.GJTIE614_0_0_+0x168 : 1e0aa7a >			  ## btstack_main.c:199:21
 1e0a9f8:    40 68             	r0 = b[r4 + 4] (u)			  ## btstack_main.c:201:62
 1e0a9fa:    37 68             	r7 = b[r4 + 3] (u)			  ## btstack_main.c:201:62
 1e0a9fc:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## btstack_main.c:201:62
 1e0aa00:    00 a0             	r0 = sp + 0			  ## btstack_main.c:201:62
 1e0aa02:    bf f3 73 ed       	call -9498 <get_conn_for_addr : 1e084ec >			  ## avctp_user.c:267:12
 1e0aa06:    41 20             	if (r0 == 0) goto 130 <.GJTIE614_0_0_+0x178 : 1e0aa8a >
 1e0aa08:    3f 50             	h[r0 + 6] = r7			  ## avctp_user.c:270:34
 1e0aa0a:    81 18             	goto 258 <.GJTIE614_0_0_+0x1FC : 1e0ab0e >			  ## avctp_user.c:270:34
 1e0aa0c:    40 6d             	r0 = b[r6 + 20] (u)			  ## bt_audio.c:148:30
 1e0aa0e:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:148:30
 1e0aa10:    22 6d             	r2 = b[r6 + 18] (u)			  ## bt_audio.c:148:30
 1e0aa12:    13 6d             	r3 = b[r6 + 17] (u)			  ## bt_audio.c:148:30
 1e0aa14:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:148:30
 1e0aa18:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:148:30
 1e0aa1c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## bt_audio.c:148:30
 1e0aa20:    0e f3 80 30       	if ((r3 & 16384) == 0) goto 256 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## bt_audio.c:148:30
 1e0aa24:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:156:5
 1e0aa2a:    00 70             	r0 = 0			  ## bt_audio.c:156:5
 1e0aa2c:    92 71             	r2 = 25			  ## bt_audio.c:156:5
 1e0aa2e:    f3 7f             	r3 = 255			  ## bt_audio.c:156:5
 1e0aa30:    bf f3 72 ed       	call -9500 <bt_event_update_to_user : 1e08518 >			  ## bt_audio.c:156:5
 1e0aa34:    40 6d             	r0 = b[r6 + 20] (u)			  ## bt_audio.c:157:46
 1e0aa36:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:157:46
 1e0aa38:    22 6d             	r2 = b[r6 + 18] (u)			  ## bt_audio.c:157:46
 1e0aa3a:    13 6d             	r3 = b[r6 + 17] (u)			  ## bt_audio.c:157:46
 1e0aa3c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:157:46
 1e0aa40:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:157:46
 1e0aa44:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## bt_audio.c:157:46
 1e0aa48:    30 fd 40 3a       	r0 = r3 & 4294950911			  ## bt_audio.c:157:46
 1e0aa4c:    18 6d             	b[r6 + 17] = r0			  ## bt_audio.c:157:46
 1e0aa4e:    01 d6             	r1 = r0 >> 24			  ## bt_audio.c:157:46
 1e0aa50:    49 6d             	b[r6 + 20] = r1			  ## bt_audio.c:157:46
 1e0aa52:    01 d4             	r1 = r0 >> 16			  ## bt_audio.c:157:46
 1e0aa54:    39 6d             	b[r6 + 19] = r1			  ## bt_audio.c:157:46
 1e0aa56:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:157:46
 1e0aa58:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:157:46
 1e0aa5a:    90 9d             	r0 = r6 + 25			  ## bt_audio.c:157:46
 1e0aa5c:    01 70             	r1 = 0			  ## bt_audio.c:158:5
 1e0aa5e:    62 70             	r2 = 6			  ## bt_audio.c:158:5
 1e0aa60:    97 f3 46 e2       	call 3130508 <memset : 106ef0 >			  ## bt_audio.c:158:5
 1e0aa64:    5f 18             	goto 190 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## bt_audio.c:158:5
 1e0aa66:    bf f3 53 ec       	call -10074 <get_remote_test_flag : 1e08310 >			  ## btstack_main.c:311:24
 1e0aa6a:    5c 20             	if (r0 == 0) goto 184 <.GJTIE614_0_0_+0x212 : 1e0ab24 >
 1e0aa6c:    00 a0             	r0 = sp + 0
 1e0aa6e:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:312:17
 1e0aa74:    e2 7f             	r2 = 254			  ## btstack_main.c:312:17
 1e0aa76:    03 70             	r3 = 0			  ## btstack_main.c:312:17
 1e0aa78:    53 18             	goto 166 <.GJTIE614_0_0_+0x20E : 1e0ab20 >			  ## btstack_main.c:312:17
 1e0aa7a:    90 b0             	r0 |= 2			  ## btstack_main.c:211:58
 1e0aa7c:    20 e0 52 10       	if (r0 != 2) goto 164 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## btstack_main.c:211:58
 1e0aa80:    02 a0             	r2 = sp + 0
 1e0aa82:    20 70             	r0 = 2			  ## btstack_main.c:213:21
 1e0aa84:    e1 71             	r1 = 30			  ## btstack_main.c:213:21
 1e0aa86:    89 16             	call -750 <aec_sco_connection_start : 1e0a79a >			  ## btstack_main.c:213:21
 1e0aa88:    4d 18             	goto 154 <.GJTIE614_0_0_+0x212 : 1e0ab24 >			  ## btstack_main.c:213:21
 1e0aa8a:    c0 ff c0 1a 00 00 	r0 = 6848 <__user_info : 1ac0 >
 1e0aa90:    05 fc 70 00       	r5 = r0 + 112
 1e0aa94:    31 4a             	r1 = [r5 + 12]			  ## avctp_user.c:274:20
 1e0aa96:    1d f3 06 10       	if ((r1 & 536870912) == 0) goto 12 <.GJTIE614_0_0_+0x194 : 1e0aaa6 >			  ## avctp_user.c:274:20
 1e0aa9a:    85 81             	r5 += 24			  ## avctp_user.c:273:5
 1e0aa9c:    01 fc 88 00       	r1 = r0 + 136			  ## avctp_user.c:273:5
 1e0aaa0:    15 f2 f8 3f       	if (r5 < r1) goto -16 <.GJTIE614_0_0_+0x182 : 1e0aa94 >			  ## avctp_user.c:273:5
 1e0aaa4:    34 18             	goto 104 <.GJTIE614_0_0_+0x1FC : 1e0ab0e >			  ## avctp_user.c:273:5
 1e0aaa6:    02 6b             	r2 = b[r5 + 16] (u)			  ## avctp_user.c:274:20
 1e0aaa8:    0a 6b             	b[r5 + 16] = r2			  ## avctp_user.c:275:26
 1e0aaaa:    91 be             	r1 |= 536870912			  ## avctp_user.c:275:26
 1e0aaac:    39 4a             	[r5 + 12] = r1			  ## avctp_user.c:275:26
 1e0aaae:    01 f7 fa 00       	r1 = h[r0 + 250] (u)			  ## avctp_user.c:276:41
 1e0aab2:    32 fd 07 19       	r2 = r1 & 4294967288			  ## avctp_user.c:276:41
 1e0aab6:    11 80             	r1 += 1			  ## avctp_user.c:276:41
 1e0aab8:    21 fd 07 19       	r1 = r1 & 7			  ## avctp_user.c:276:41
 1e0aabc:    51 b4             	r1 |= r2			  ## avctp_user.c:276:41
 1e0aabe:    11 f7 fa 00       	h[r0 + 250] = r1			  ## avctp_user.c:276:41
 1e0aac2:    08 f6 0c 50       	r8 = [r5 + 12]			  ## avctp_user.c:277:30
 1e0aac6:    09 f9 10 50       	r9 = b[r5 + 16] (u)			  ## avctp_user.c:277:30
 1e0aaca:    01 a0             	r1 = sp + 0			  ## avctp_user.c:277:30
 1e0aacc:    62 70             	r2 = 6			  ## avctp_user.c:280:13
 1e0aace:    50 08             	r0 = r5			  ## avctp_user.c:280:13
 1e0aad0:    97 f3 08 e2       	call 3130384 <memcpy : 106ee4 >			  ## avctp_user.c:280:13
 1e0aad4:    00 70             	r0 = 0			  ## avctp_user.c:280:13
 1e0aad6:    a8 6a             	b[r5 + 10] = r0			  ## avctp_user.c:281:46
 1e0aad8:    3f 5a             	h[r5 + 6] = r7			  ## avctp_user.c:282:38
 1e0aada:    20 fd 87 99       	r0 = r9 & 135			  ## avctp_user.c:285:29
 1e0aade:    08 6b             	b[r5 + 16] = r0			  ## avctp_user.c:285:29
 1e0aae0:    c0 ff f0 0f f0 ff 	r0 = 4293922800 <bank_code_load_addr+0xE23DC : 1f00ff0 >			  ## avctp_user.c:285:29
 1e0aae6:    e2 fd 80 00       	r0 = r0 & r8			  ## avctp_user.c:285:29
 1e0aaea:    00 fd 05 09       	r0 = r0 | 5			  ## avctp_user.c:285:29
 1e0aaee:    38 4a             	[r5 + 12] = r0			  ## avctp_user.c:285:29
 1e0aaf0:    40 6d             	r0 = b[r6 + 20] (u)			  ## avctp_user.c:286:53
 1e0aaf2:    21 6d             	r1 = b[r6 + 18] (u)			  ## avctp_user.c:286:53
 1e0aaf4:    12 6d             	r2 = b[r6 + 17] (u)			  ## avctp_user.c:286:53
 1e0aaf6:    33 6d             	r3 = b[r6 + 19] (u)			  ## avctp_user.c:286:53
 1e0aaf8:    48 6d             	b[r6 + 20] = r0			  ## avctp_user.c:286:53
 1e0aafa:    29 6d             	b[r6 + 18] = r1			  ## avctp_user.c:286:53
 1e0aafc:    1a 6d             	b[r6 + 17] = r2			  ## avctp_user.c:286:53
 1e0aafe:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## avctp_user.c:286:53
 1e0ab02:    d0 fd 80 23       	r2 <= insert(r3, p:16, l:16)			  ## avctp_user.c:286:53
 1e0ab06:    00 fd 20 2b       	r0 = r2 | 2097152			  ## avctp_user.c:286:53
 1e0ab0a:    00 d4             	r0 = r0 >> 16			  ## avctp_user.c:286:53
 1e0ab0c:    38 6d             	b[r6 + 19] = r0			  ## avctp_user.c:286:53
 1e0ab0e:    05 a0             	r5 = sp + 0
 1e0ab10:    50 08             	r0 = r5			  ## btstack_main.c:204:21
 1e0ab12:    36 16             	call -916 <update_connectiong_mac_addr : 1e0a780 >			  ## btstack_main.c:204:21
 1e0ab14:    23 68             	r3 = b[r4 + 2] (u)
 1e0ab16:    02 68             	r2 = b[r4 + 0] (u)
 1e0ab18:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e0ab1e:    50 08             	r0 = r5
 1e0ab20:    bf f3 fa ec       	call -9740 <bt_event_update_to_user : 1e08518 >
 1e0ab24:    04 0a             	sp += 8
 1e0ab26:    59 01             	{pc, r9-r4} = [sp++]			  ## btstack_main.c:344:1


att_send_set_mtu_size:
 1e0ab28:    77 01             	[--sp] = {rets, r7-r4}			  ## att_send.c:526:0
 1e0ab2a:    c5 ff c8 1b 00 00 	r5 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:526:0
 1e0ab30:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:527:5
 1e0ab32:    14 08             	r4 = r1			  ## att_send.c:527:5
 1e0ab34:    1f 24             	if (r2 == 0) goto 62 <att_send_set_mtu_size+0x4C : 1e0ab74 >
 1e0ab36:    22 fc b0 00       	r2 = r2 + 176			  ## att_send.c:110:28
 1e0ab3a:    01 70             	r1 = 0			  ## att_send.c:110:28
 1e0ab3c:    06 70             	r6 = 0			  ## att_send.c:110:28
 1e0ab3e:    03 70             	r3 = 0			  ## att_send.c:110:28
 1e0ab40:    07 f8 00 26       	r7 = h[r2+r6] (u)			  ## att_send.c:110:28
 1e0ab44:    07 f2 06 00       	if (r7 == r0) goto 12 <att_send_set_mtu_size+0x2C : 1e0ab54 >			  ## att_send.c:110:13
 1e0ab48:    11 80             	r1 += 1			  ## att_send.c:109:23
 1e0ab4a:    13 80             	r3 += 1			  ## att_send.c:109:43
 1e0ab4c:    26 80             	r6 += 2			  ## att_send.c:109:23
 1e0ab4e:    a3 e0 f7 bf       	ifs (r3 < 10) goto -18 <att_send_set_mtu_size+0x18 : 1e0ab40 >			  ## att_send.c:109:23
 1e0ab52:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:546:1
 1e0ab54:    40 04             	r0 = r1.b0 (u)			  ## att_send.c:532:19
 1e0ab56:    a0 e0 0d 80       	if (r0 > 10) goto 26 <att_send_set_mtu_size+0x4C : 1e0ab74 >
 1e0ab5a:    97 f3 1f e1       	call 3129918 <local_irq_disable : 106d9c >			  ## att_send.c:536:5
 1e0ab5e:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:538:20
 1e0ab60:    01 f7 d8 00       	r1 = h[r0 + 216] (u)			  ## att_send.c:538:28
 1e0ab64:    60 09             	r0 += r6			  ## att_send.c:538:28
 1e0ab66:    41 f2 01 80       	if (r1 > r4) goto 2 <att_send_set_mtu_size+0x44 : 1e0ab6c >			  ## att_send.c:538:28
 1e0ab6a:    14 08             	r4 = r1			  ## att_send.c:540:5
 1e0ab6c:    14 f7 c4 00       	h[r0 + 196] = r4
 1e0ab70:    97 f3 12 e1       	call 3129892 <local_irq_enable : 106d98 >			  ## att_send.c:544:5
 1e0ab74:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:546:1


l2cap_request_can_send_fix_channel_now_event:
 1e0ab76:    c0 ff a8 1a 00 00 	r0 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:2126:0
 1e0ab7c:    11 70             	r1 = 1			  ## l2cap.c:2133:58
 1e0ab7e:    49 60             	b[r0 + 4] = r1			  ## l2cap.c:2133:58
 1e0ab80:    81 1d             	goto -1278 <l2cap_notify_channel_can_send : 1e0a684 >			  ## l2cap.c:2134:5


l2cap_can_send_fixed_channel_packet_now:
 1e0ab82:    ff f3 e0 f0       	goto -7744 <hci_can_send_acl_packet_now : 1e08d46 >			  ## l2cap.c:2138:0


l2cap_reserve_packet_buffer:
 1e0ab86:    ff f3 ef f0       	goto -7714 <hci_reserve_packet_buffer : 1e08d68 >			  ## l2cap.c:2054:0


little_endian_store_16:
 1e0ab8a:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:82:0
 1e0ab8e:    12 d2             	r2 = r2 >> 8			  ## utils.c:84:21
 1e0ab90:    11 80             	r1 += 1			  ## utils.c:83:15
 1e0ab92:    61 04             	r1 = r1.l (u)			  ## utils.c:84:5
 1e0ab94:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:84:19
 1e0ab98:    20 00             	rts			  ## utils.c:85:1


l2cap_send_prepared_connectionless:
 1e0ab9a:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:2077:0
 1e0ab9c:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## l2cap.c:2077:0
 1e0aba2:    02 f9 15 72       	r2 = b[r7 + 533] (u)			  ## hci_vendor.c:1881:25
 1e0aba6:    14 08             	r4 = r1			  ## hci_vendor.c:1881:25
 1e0aba8:    05 08             	r5 = r0			  ## hci_vendor.c:1881:25
 1e0abaa:    76 75             	r6 = 87			  ## hci_vendor.c:1881:25
 1e0abac:    17 24             	if (r2 == 0) goto 46 <l2cap_send_prepared_connectionless+0x42 : 1e0abdc >			  ## hci_vendor.c:1881:25
 1e0abae:    bf f3 c1 f0       	call -7806 <hci_number_free_acl_slots_for_handle : 1e08d34 >			  ## hci_vendor.c:2042:12
 1e0abb2:    10 e0 13 b0       	ifs (r0 < 1) goto 38 <l2cap_send_prepared_connectionless+0x42 : 1e0abdc >			  ## hci_vendor.c:2042:12
 1e0abb6:    80 9e             	r0 = r7 + 8			  ## l2cap.c:2066:5
 1e0abb8:    01 70             	r1 = 0			  ## l2cap.c:2066:5
 1e0abba:    03 70             	r3 = 0			  ## l2cap.c:2066:5
 1e0abbc:    52 08             	r2 = r5			  ## l2cap.c:2066:5
 1e0abbe:    e5 17             	call -54 <little_endian_store_16 : 1e0ab8a >			  ## l2cap.c:2066:5
 1e0abc0:    41 98             	r1 = r4 + 4			  ## l2cap.c:2068:48
 1e0abc2:    62 04             	r2 = r1.l (u)			  ## l2cap.c:2068:5
 1e0abc4:    21 70             	r1 = 2			  ## l2cap.c:2068:5
 1e0abc6:    e1 17             	call -62 <little_endian_store_16 : 1e0ab8a >			  ## l2cap.c:2068:5
 1e0abc8:    41 70             	r1 = 4			  ## l2cap.c:2070:5
 1e0abca:    45 70             	r5 = 4			  ## l2cap.c:2070:5
 1e0abcc:    42 08             	r2 = r4			  ## l2cap.c:2070:5
 1e0abce:    dd 17             	call -70 <little_endian_store_16 : 1e0ab8a >			  ## l2cap.c:2070:5
 1e0abd0:    ed 6e             	b[r7 + 14] = r5			  ## utils.c:83:19
 1e0abd2:    fb 6e             	b[r7 + 15] = r3			  ## utils.c:84:19
 1e0abd4:    80 98             	r0 = r4 + 8			  ## l2cap.c:2095:58
 1e0abd6:    bf f3 26 f1       	call -7604 <hci_le_send_acl_packet_buffer : 1e08e26 >			  ## l2cap.c:2095:12
 1e0abda:    06 08             	r6 = r0			  ## l2cap.c:2095:12
 1e0abdc:    60 08             	r0 = r6			  ## l2cap.c:2096:1
 1e0abde:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap.c:2096:1


btstack_set_timer:
 1e0abe0:    74 01             	[--sp] = {rets, r4}			  ## btstack_sys_timer.c:106:0
 1e0abe2:    04 08             	r4 = r0			  ## btstack_sys_timer.c:106:0
 1e0abe4:    22 48             	r2 = [r4 + 8]			  ## btstack_sys_timer.c:142:41
 1e0abe6:    20 fd 0f 19       	r0 = r1 & 15			  ## btstack_sys_timer.c:71:9
 1e0abea:    31 fd 0f 2b       	r1 = r2 & 4293984255			  ## btstack_sys_timer.c:143:20
 1e0abee:    c4 fd 80 10       	r1 <= insert(r0, p:16, l:4)			  ## btstack_sys_timer.c:143:20
 1e0abf2:    29 48             	[r4 + 8] = r1			  ## btstack_sys_timer.c:143:20
 1e0abf4:    a2 04             	r2 = r2.l (u)			  ## btstack_sys_timer.c:144:55
 1e0abf6:    30 e0 06 00       	if (r0 == 3) goto 12 <btstack_set_timer+0x26 : 1e0ac06 >			  ## btstack_sys_timer.c:71:9
 1e0abfa:    20 e0 09 00       	if (r0 == 2) goto 18 <btstack_set_timer+0x30 : 1e0ac10 >
 1e0abfe:    10 e0 06 10       	if (r0 != 1) goto 12 <btstack_set_timer+0x2E : 1e0ac0e >
 1e0ac02:    a2 70             	r2 = 10
 1e0ac04:    05 18             	goto 10 <btstack_set_timer+0x30 : 1e0ac10 >
 1e0ac06:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## btstack_sys_timer.c:77:25
 1e0ac0a:    12 0e             	r2 = r2 * r0			  ## btstack_sys_timer.c:77:25
 1e0ac0c:    01 18             	goto 2 <btstack_set_timer+0x30 : 1e0ac10 >
 1e0ac0e:    02 70             	r2 = 0
 1e0ac10:    31 48             	r1 = [r4 + 12]			  ## btstack_sys_timer.c:145:59
 1e0ac12:    40 08             	r0 = r4			  ## btstack_sys_timer.c:145:19
 1e0ac14:    80 f3 c1 0b       	call 6018 <sys_timer_add : 1e0c39a >			  ## btstack_sys_timer.c:145:19
 1e0ac18:    18 48             	[r4 + 4] = r0			  ## btstack_sys_timer.c:145:17
 1e0ac1a:    54 01             	{pc, r4} = [sp++]			  ## btstack_sys_timer.c:148:1


btstack_memory_gatt_client_get:
 1e0ac1c:    c0 ff 94 1a 00 00 	r0 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:244:0
 1e0ac22:    01 40             	r1 = [r0 + 0]			  ## btstack_memory.c:245:38
 1e0ac24:    10 42             	r0 = [r1 + 4]			  ## btstack_memory.c:66:23
 1e0ac26:    03 20             	if (r0 == 0) goto 6 <btstack_memory_gatt_client_get+0x12 : 1e0ac2e >
 1e0ac28:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e0ac2a:    1a 42             	[r1 + 4] = r2			  ## btstack_memory.c:72:23
 1e0ac2c:    20 00             	rts			  ## btstack_memory.c:245:5
 1e0ac2e:    00 70             	r0 = 0
 1e0ac30:    20 00             	rts			  ## btstack_memory.c:245:5


l2cap_max_le_mtu:
 1e0ac32:    c0 ff 88 09 00 00 	r0 = 2440 <le_att_mtu_size : 988 >			  ## l2cap.c:934:0
 1e0ac38:    01 60             	r1 = b[r0 + 0] (u)			  ## l2cap.c:934:0
 1e0ac3a:    80 7c             	r0 = 200			  ## l2cap.c:934:0
 1e0ac3c:    02 32             	if (r1 != 0) goto 4 <l2cap_max_le_mtu+0x10 : 1e0ac42 >			  ## l2cap.c:934:0
 1e0ac3e:    00 fb 05 02       	r0 = 517 <BTCTLER_CONTROLLER_BSS_SIZE+0x45 : 205 >			  ## l2cap.c:934:0
 1e0ac42:    20 00             	rts			  ## l2cap.c:936:5


reverse_128:
 1e0ac44:    f2 70             	r2 = 15			  ## utils.c:144:0
 1e0ac46:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0ac4a:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0ac4e:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0ac50:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_128+0x2 : 1e0ac46 >			  ## utils.c:123:5
 1e0ac54:    20 00             	rts			  ## utils.c:146:1


att_operation_cmd_send:
 1e0ac56:    79 01             	[--sp] = {rets, r9-r4}			  ## att_send.c:354:0
 1e0ac58:    c8 ff c8 1b 00 00 	r8 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:354:0
 1e0ac5e:    04 f6 00 80       	r4 = [r8 + 0]			  ## att_send.c:354:0
 1e0ac62:    09 f5 1c 00       	r9 = [sp+28]			  ## att_send.c:354:0
 1e0ac66:    47 fc b0 00       	r7 = r4 + 176			  ## att_send.c:109:5
 1e0ac6a:    04 70             	r4 = 0			  ## att_send.c:109:5
 1e0ac6c:    06 70             	r6 = 0			  ## att_send.c:109:5
 1e0ac6e:    85 f7 02 70       	r5 = h[r7 ++= 2] (u)			  ## att_send.c:110:28
 1e0ac72:    05 f2 07 00       	if (r5 == r0) goto 14 <att_operation_cmd_send+0x2E : 1e0ac84 >			  ## att_send.c:110:13
 1e0ac76:    16 80             	r6 += 1			  ## att_send.c:109:43
 1e0ac78:    14 80             	r4 += 1			  ## att_send.c:109:23
 1e0ac7a:    a6 e0 f8 bf       	ifs (r6 < 10) goto -16 <att_operation_cmd_send+0x18 : 1e0ac6e >			  ## att_send.c:109:23
 1e0ac7e:    07 70             	r7 = 0
 1e0ac80:    04 70             	r4 = 0
 1e0ac82:    3a 18             	goto 116 <.GJTIE662_0_0_+0x5C : 1e0acf8 >
 1e0ac84:    05 05             	r5 = r4.b0 (u)			  ## att_send.c:358:43
 1e0ac86:    07 70             	r7 = 0			  ## att_send.c:358:43
 1e0ac88:    04 70             	r4 = 0			  ## att_send.c:358:43
 1e0ac8a:    a5 e0 35 80       	if (r5 > 10) goto 106 <.GJTIE662_0_0_+0x5C : 1e0acf8 >			  ## att_send.c:358:43
 1e0ac8e:    f1 8f             	r1 += -1			  ## att_send.c:366:5
 1e0ac90:    51 e0 0a 80       	if (r1 > 5) goto 20 <.GJTIE662_0_0_+0xC : 1e0aca8 >			  ## att_send.c:366:5
 1e0ac94:    a1 00             	tbb [r1]


.GJTIS662_0_0_:
 1e0ac96:    03     < 3 : 0x3 >
 1e0ac97:    0a     < 10 : 0xA >
 1e0ac98:    10     < 16 : 0x10 >
 1e0ac99:    14     < 20 : 0x14 >
 1e0ac9a:    18     < 24 : 0x18 >
 1e0ac9b:    1d     < 29 : 0x1D >
 1e0ac9c:    21 08             	r1 = r2			  ## att_send.c:368:19
 1e0ac9e:    32 08             	r2 = r3			  ## att_send.c:368:19
 1e0aca0:    93 08             	r3 = r9			  ## att_send.c:368:19
 1e0aca2:    80 f3 20 03       	call 1600 <att_server_notify : 1e0b2e6 >			  ## att_send.c:368:19
 1e0aca6:    18 18             	goto 48 <.GJTIE662_0_0_+0x3C : 1e0acd8 >
 1e0aca8:    27 18             	goto 78 <.GJTIE662_0_0_+0x5C : 1e0acf8 >
 1e0acaa:    21 08             	r1 = r2			  ## att_send.c:372:19
 1e0acac:    32 08             	r2 = r3			  ## att_send.c:372:19
 1e0acae:    93 08             	r3 = r9			  ## att_send.c:372:19
 1e0acb0:    80 f3 45 03       	call 1674 <att_server_indicate : 1e0b33e >			  ## att_send.c:372:19
 1e0acb4:    11 18             	goto 34 <.GJTIE662_0_0_+0x3C : 1e0acd8 >
 1e0acb6:    21 08             	r1 = r2			  ## att_send.c:384:19
 1e0acb8:    80 f3 46 09       	call 4748 <gatt_client_read_value_of_characteristic_using_value_handle : 1e0bf48 >			  ## att_send.c:384:19
 1e0acbc:    0d 18             	goto 26 <.GJTIE662_0_0_+0x3C : 1e0acd8 >
 1e0acbe:    21 08             	r1 = r2			  ## att_send.c:388:19
 1e0acc0:    80 f3 57 09       	call 4782 <gatt_client_read_long_value_of_characteristic_using_value_handle : 1e0bf72 >			  ## att_send.c:388:19
 1e0acc4:    09 18             	goto 18 <.GJTIE662_0_0_+0x3C : 1e0acd8 >
 1e0acc6:    21 08             	r1 = r2			  ## att_send.c:380:19
 1e0acc8:    92 08             	r2 = r9			  ## att_send.c:380:19
 1e0acca:    80 f3 25 09       	call 4682 <gatt_client_write_value_of_characteristic : 1e0bf18 >			  ## att_send.c:380:19
 1e0acce:    04 18             	goto 8 <.GJTIE662_0_0_+0x3C : 1e0acd8 >
 1e0acd0:    21 08             	r1 = r2			  ## att_send.c:376:19
 1e0acd2:    92 08             	r2 = r9			  ## att_send.c:376:19
 1e0acd4:    80 f3 13 06       	call 3110 <gatt_client_write_value_of_characteristic_without_response : 1e0b8fe >			  ## att_send.c:376:19
 1e0acd8:    01 fc 70 ff       	r1 = r0 + -144			  ## att_send.c:398:5
 1e0acdc:    17 70             	r7 = 1			  ## att_send.c:398:5
 1e0acde:    51 e0 06 80       	if (r1 > 5) goto 12 <.GJTIE662_0_0_+0x52 : 1e0acee >			  ## att_send.c:398:5
 1e0ace2:    12 70             	r2 = 1
 1e0ace4:    f8 fd 10 12       	r1 = r2 << r1
 1e0ace8:    61 ff 31 19 04 00 	if ((r1 & 49) != 0) goto 8 <.GJTIE662_0_0_+0x5A : 1e0acf6 >
 1e0acee:    70 e5 02 00       	if (r0 == 87) goto 4 <.GJTIE662_0_0_+0x5A : 1e0acf6 >
 1e0acf2:    c5 21             	if (r0 == 0) goto -118 <att_operation_cmd_send+0x28 : 1e0ac7e >
 1e0acf4:    01 18             	goto 2 <.GJTIE662_0_0_+0x5C : 1e0acf8 >
 1e0acf6:    74 75             	r4 = 87
 1e0acf8:    00 f6 00 80       	r0 = [r8 + 0]
 1e0acfc:    17 f9 da 00       	b[r0 + 218] = r7
 1e0ad00:    40 08             	r0 = r4			  ## att_send.c:424:1
 1e0ad02:    59 01             	{pc, r9-r4} = [sp++]			  ## att_send.c:424:1


__ble_thread_loop_handler:
 1e0ad04:    7e 01             	[--sp] = {rets, r14-r4}			  ## btstack_main.c:752:0
 1e0ad06:    e6 0b             	sp += -52			  ## btstack_main.c:752:0
 1e0ad08:    c6 ff 28 1c 00 00 	r6 = 7208 <btstack_global_info : 1c28 >			  ## btstack_main.c:752:0
 1e0ad0e:    90 4c             	r0 = [r6 + 36]			  ## btstack_main.c:752:0
 1e0ad10:    80 f3 01 1d       	call 14850 <cbuf_get_data_size : 1e0e716 >			  ## btstack_main.c:552:12
 1e0ad14:    00 e0 05 01       	if (r0 == 0) goto 522 <.GJTIE665_1_1_+0x66 : 1e0af22 >			  ## btstack_main.c:552:12
 1e0ad18:    1c 70             	r12 = 1
 1e0ad1a:    0b 70             	r11 = 0
 1e0ad1c:    c8 ff c0 32 e1 01 	r8 = 31535808 <gpio_out_regs+0x208 : 1e132c0 >
 1e0ad22:    c9 ff 8c 09 00 00 	r9 = 2444 <gap_request_connection_parameter_update.le_con_param_update_identifier : 98c >
 1e0ad28:    ca ff 68 0f 00 00 	r10 = 3944 <config_hci_ll_param.0 : f68 >
 1e0ad2e:    c5 9c             	r5 = r6 + 12			  ## btstack_main.c:553:9
 1e0ad30:    01 a2             	r1 = sp + 32			  ## btstack_main.c:553:9
 1e0ad32:    42 70             	r2 = 4			  ## btstack_main.c:553:9
 1e0ad34:    50 08             	r0 = r5			  ## btstack_main.c:553:9
 1e0ad36:    80 f3 ef 1c       	call 14814 <cbuf_read : 1e0e718 >			  ## btstack_main.c:553:9
 1e0ad3a:    80 f5 22 00       	r0 = h[sp+34] (u)			  ## btstack_main.c:554:13
 1e0ad3e:    05 20             	if (r0 == 0) goto 10 <__ble_thread_loop_handler+0x46 : 1e0ad4a >			  ## btstack_main.c:554:13
 1e0ad40:    82 c0             	r2 = r0 << 2			  ## btstack_main.c:555:68
 1e0ad42:    c1 a0             	r1 = sp + 12			  ## btstack_main.c:555:68
 1e0ad44:    50 08             	r0 = r5			  ## btstack_main.c:555:13
 1e0ad46:    80 f3 e7 1c       	call 14798 <cbuf_read : 1e0e718 >			  ## btstack_main.c:555:13
 1e0ad4a:    80 f5 20 00       	r0 = h[sp+32] (u)
 1e0ad4e:    01 fc ff ff       	r1 = r0 + -1			  ## btstack_main.c:561:9
 1e0ad52:    a1 e1 22 80       	if (r1 > 26) goto 68 <.GJTIE665_0_0_+0xA : 1e0ad9a >			  ## btstack_main.c:561:9
 1e0ad56:    48 c0             	r0 = r1 << 1
 1e0ad58:    b0 00             	tbh [r0]


.GJTIL665_0_0_:
 1e0ad5a:    1b 00     < 27 : 0x1B >
 1e0ad5c:    32 00     < 50 : 0x32 >
 1e0ad5e:    40 00     < 64 : 0x40 >
 1e0ad60:    46 00     < 70 : 0x46 >
 1e0ad62:    4c 00     < 76 : 0x4C >
 1e0ad64:    52 00     < 82 : 0x52 >
 1e0ad66:    e0 00     < 224 : 0xE0 >
 1e0ad68:    56 00     < 86 : 0x56 >
 1e0ad6a:    e0 00     < 224 : 0xE0 >
 1e0ad6c:    e0 00     < 224 : 0xE0 >
 1e0ad6e:    5c 00     < 92 : 0x5C >
 1e0ad70:    7f 00     < 127 : 0x7F >
 1e0ad72:    e0 00     < 224 : 0xE0 >
 1e0ad74:    e0 00     < 224 : 0xE0 >
 1e0ad76:    85 00     < 133 : 0x85 >
 1e0ad78:    8a 00     < 138 : 0x8A >
 1e0ad7a:    8d 00     < 141 : 0x8D >
 1e0ad7c:    9c 00     < 156 : 0x9C >
 1e0ad7e:    a3 00     < 163 : 0xA3 >
 1e0ad80:    e0 00     < 224 : 0xE0 >
 1e0ad82:    aa 00     < 170 : 0xAA >
 1e0ad84:    b8 00     < 184 : 0xB8 >
 1e0ad86:    bf 00     < 191 : 0xBF >
 1e0ad88:    e0 00     < 224 : 0xE0 >
 1e0ad8a:    e0 00     < 224 : 0xE0 >
 1e0ad8c:    e0 00     < 224 : 0xE0 >
 1e0ad8e:    c2 00     < 194 : 0xC2 >
 1e0ad90:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:563:13
 1e0ad94:    80 f3 b7 7a       	call 62830 <ll_hci_adv_enable : 1e1a306 >			  ## btstack_main.c:563:13
 1e0ad98:    c0 18             	goto 384 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:563:13
 1e0ad9a:    01 ff 82 00 bd 00 	if (r0 != 130) goto 378 <.GJTIE665_1_1_+0x5E : 1e0af1a >
 1e0ada0:    40 02             	r0 = [sp+16]			  ## btstack_main.c:668:68
 1e0ada2:    23 50             	r3 = h[r0 + 4] (u)			  ## btstack_main.c:669:17
 1e0ada4:    12 50             	r2 = h[r0 + 2] (u)			  ## btstack_main.c:669:17
 1e0ada6:    01 50             	r1 = h[r0 + 0] (u)			  ## btstack_main.c:669:17
 1e0ada8:    34 50             	r4 = h[r0 + 6] (u)			  ## btstack_main.c:669:17
 1e0adaa:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:669:17
 1e0adae:    1c f5 08 00       	[sp+8] = r12			  ## btstack_main.c:669:17
 1e0adb2:    1c f5 04 00       	[sp+4] = r12			  ## btstack_main.c:669:17
 1e0adb6:    0c 02             	[sp] = r4			  ## btstack_main.c:669:17
 1e0adb8:    80 f3 8a 7a       	call 62740 <ll_hci_connection_update : 1e1a2d0 >			  ## btstack_main.c:669:17
 1e0adbc:    ae 18             	goto 348 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:669:17
 1e0adbe:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:527:5
 1e0adc2:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:527:5
 1e0adc6:    c1 f5 14 00       	r1 = b[sp+20] (u)			  ## btstack_main.c:527:5
 1e0adca:    9b f5 28 00       	h[sp+40] = r11			  ## btstack_main.c:526:5
 1e0adce:    1b f5 24 00       	[sp+36] = r11			  ## btstack_main.c:526:5
 1e0add2:    19 02             	[sp+4] = r1			  ## btstack_main.c:527:5
 1e0add4:    41 a2             	r1 = sp + 36			  ## btstack_main.c:527:5
 1e0add6:    03 70             	r3 = 0			  ## btstack_main.c:527:5
 1e0add8:    57 18             	goto 174 <.GJTIE665_0_0_+0xF8 : 1e0ae88 >			  ## btstack_main.c:527:5
 1e0adda:    41 02             	r1 = [sp+16]			  ## btstack_main.c:575:53
 1e0addc:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:575:13
 1e0ade0:    80 f3 d2 7a       	call 62884 <ll_hci_adv_set_data : 1e1a388 >			  ## btstack_main.c:575:13
 1e0ade4:    9a 18             	goto 308 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:575:13
 1e0ade6:    41 02             	r1 = [sp+16]			  ## btstack_main.c:579:67
 1e0ade8:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:579:13
 1e0adec:    80 f3 f7 7a       	call 62958 <ll_hci_adv_scan_response_set_data : 1e1a3de >			  ## btstack_main.c:579:13
 1e0adf0:    94 18             	goto 296 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:579:13
 1e0adf2:    30 02             	r0 = [sp+12]			  ## btstack_main.c:622:21
 1e0adf4:    92 20             	if (r0 == 0) goto 292 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:622:21
 1e0adf6:    20 04             	r0 = r0.l (u)			  ## btstack_main.c:623:21
 1e0adf8:    80 f3 a7 7b       	call 63310 <ll_hci_disconnect : 1e1a54a >			  ## btstack_main.c:623:21
 1e0adfc:    8e 18             	goto 284 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:623:21
 1e0adfe:    30 02             	r0 = [sp+12]			  ## btstack_main.c:605:63
 1e0ae00:    10 f6 b0 60       	[r6 + 176] = r0			  ## btstack_main.c:605:53
 1e0ae04:    8a 18             	goto 276 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:605:53
 1e0ae06:    bf f3 b4 e7       	call -12440 <att_get_default_conn_handle : 1e07d72 >			  ## btstack_main.c:610:39
 1e0ae0a:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:610:17
 1e0ae0e:    8c 16             	call -744 <att_send_set_mtu_size : 1e0ab28 >			  ## btstack_main.c:610:17
 1e0ae10:    84 18             	goto 264 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:610:17
 1e0ae12:    40 02             	r0 = [sp+16]			  ## btstack_main.c:676:68
 1e0ae14:    0d f7 06 00       	r13 = h[r0 + 6] (u)			  ## btstack_main.c:678:94
 1e0ae18:    0e f7 04 00       	r14 = h[r0 + 4] (u)			  ## btstack_main.c:678:71
 1e0ae1c:    14 50             	r4 = h[r0 + 2] (u)			  ## btstack_main.c:677:113
 1e0ae1e:    07 50             	r7 = h[r0 + 0] (u)			  ## btstack_main.c:677:85
 1e0ae20:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## l2cap.c:2027:39
 1e0ae24:    bf f3 59 e9       	call -11598 <le_hci_connection_for_handle : 1e080da >			  ## l2cap.c:2027:39
 1e0ae28:    05 08             	r5 = r0			  ## l2cap.c:2027:39
 1e0ae2a:    77 2a             	if (r5 == 0) goto 238 <.GJTIE665_1_1_+0x5E : 1e0af1a >
 1e0ae2c:    80 08             	r0 = r8			  ## l2cap.c:2031:5
 1e0ae2e:    80 f3 9b 10       	call 8502 <puts : 1e0cf68 >			  ## l2cap.c:2031:5
 1e0ae32:    df 5a             	h[r5 + 26] = r7			  ## l2cap.c:2032:38
 1e0ae34:    ec 5a             	h[r5 + 28] = r4			  ## l2cap.c:2033:38
 1e0ae36:    1e f7 1e 50       	h[r5 + 30] = r14			  ## l2cap.c:2034:33
 1e0ae3a:    1d f7 20 50       	h[r5 + 32] = r13			  ## l2cap.c:2035:40
 1e0ae3e:    1c f6 14 50       	[r5 + 20] = r12			  ## l2cap.c:2036:47
 1e0ae42:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## l2cap.c:2037:50
 1e0ae46:    88 6b             	b[r5 + 24] = r0			  ## l2cap.c:2037:48
 1e0ae48:    bf f3 d1 f0       	call -7774 <l2cap_run : 1e08fee >			  ## l2cap.c:2038:5
 1e0ae4c:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## l2cap.c:2040:39
 1e0ae50:    10 80             	r0 += 1			  ## l2cap.c:2040:39
 1e0ae52:    10 f9 00 90       	b[r9 + 0] = r0			  ## l2cap.c:2041:40
 1e0ae56:    61 18             	goto 194 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## l2cap.c:2041:40
 1e0ae58:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:588:17
 1e0ae5c:    11 70             	r1 = 1			  ## btstack_main.c:588:17
 1e0ae5e:    80 f3 64 7b       	call 63176 <ll_hci_scan_enable : 1e1a52a >			  ## btstack_main.c:588:17
 1e0ae62:    5b 18             	goto 182 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:588:17
 1e0ae64:    30 02             	r0 = [sp+12]			  ## btstack_main.c:630:64
 1e0ae66:    61 90             	r1 = r0 + 6			  ## btstack_main.c:632:79
 1e0ae68:    80 f3 7e 7b       	call 63228 <ll_hci_create_conn : 1e1a568 >			  ## btstack_main.c:632:17
 1e0ae6c:    56 18             	goto 172 <.GJTIE665_1_1_+0x5E : 1e0af1a >
 1e0ae6e:    80 f3 d7 7b       	call 63406 <ll_hci_create_conn_cancel : 1e1a620 >			  ## btstack_main.c:638:17
 1e0ae72:    53 18             	goto 166 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:638:17
 1e0ae74:    61 02             	r1 = [sp+24]			  ## btstack_main.c:571:72
 1e0ae76:    83 f9 01 10       	r3 = b[r1 ++= 1] (u)			  ## btstack_main.c:536:5
 1e0ae7a:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:536:5
 1e0ae7e:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:536:5
 1e0ae82:    c4 f5 14 00       	r4 = b[sp+20] (u)			  ## btstack_main.c:536:5
 1e0ae86:    1c 02             	[sp+4] = r4			  ## btstack_main.c:536:5
 1e0ae88:    09 02             	[sp] = r1
 1e0ae8a:    01 08             	r1 = r0
 1e0ae8c:    80 f3 44 7a       	call 62600 <ll_hci_adv_set_params : 1e1a318 >
 1e0ae90:    44 18             	goto 136 <.GJTIE665_1_1_+0x5E : 1e0af1a >
 1e0ae92:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:645:17
 1e0ae96:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:645:17
 1e0ae9a:    80 f3 c9 7b       	call 63378 <ll_hci_vendor_send_key_num : 1e1a630 >			  ## btstack_main.c:645:17
 1e0ae9e:    3d 18             	goto 122 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:645:17
 1e0aea0:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:650:17
 1e0aea4:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:650:17
 1e0aea8:    80 f3 d2 7b       	call 63396 <ll_vendor_latency_hold_cnt : 1e1a650 >			  ## btstack_main.c:650:17
 1e0aeac:    36 18             	goto 108 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:650:17
 1e0aeae:    30 02             	r0 = [sp+12]			  ## btstack_main.c:583:37
 1e0aeb0:    30 e0 33 80       	if (r0 > 3) goto 102 <.GJTIE665_1_1_+0x5E : 1e0af1a >
 1e0aeb4:    41 02             	r1 = [sp+16]			  ## btstack_main.c:583:46
 1e0aeb6:    a0 00             	tbb [r0]


.GJTIS665_1_1_:
 1e0aeb8:    02     < 2 : 0x2 >
 1e0aeb9:    19     < 25 : 0x19 >
 1e0aeba:    21     < 33 : 0x21 >
 1e0aebb:    29     < 41 : 0x29 >
 1e0aebc:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:807:42
 1e0aec0:    21 fd 03 19       	r1 = r1 & 3			  ## btstack_main.c:807:42
 1e0aec4:    30 fd 03 09       	r0 = r0 & 4294967292			  ## btstack_main.c:807:42
 1e0aec8:    25 18             	goto 74 <.GJTIE665_1_1_+0x58 : 1e0af14 >			  ## btstack_main.c:807:42
 1e0aeca:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:594:17
 1e0aece:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:594:17
 1e0aed2:    80 f3 2a 7b       	call 63060 <ll_hci_scan_enable : 1e1a52a >			  ## btstack_main.c:594:17
 1e0aed6:    21 18             	goto 66 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:594:17
 1e0aed8:    80 f3 f8 01       	call 1008 <att_server_send_request : 1e0b2cc >			  ## btstack_main.c:662:17
 1e0aedc:    1e 18             	goto 60 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:662:17
 1e0aede:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:616:17
 1e0aee2:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:616:17
 1e0aee6:    20 16             	call -960 <att_send_set_mtu_size : 1e0ab28 >			  ## btstack_main.c:616:17
 1e0aee8:    18 18             	goto 48 <.GJTIE665_1_1_+0x5E : 1e0af1a >			  ## btstack_main.c:616:17
 1e0aeea:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:811:43
 1e0aeee:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## btstack_main.c:811:43
 1e0aef2:    89 c0             	r1 = r1 << 2			  ## btstack_main.c:811:43
 1e0aef4:    21 fd 0c 19       	r1 = r1 & 12			  ## btstack_main.c:811:43
 1e0aef8:    0d 18             	goto 26 <.GJTIE665_1_1_+0x58 : 1e0af14 >			  ## btstack_main.c:811:43
 1e0aefa:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:815:44
 1e0aefe:    30 fd 30 09       	r0 = r0 & 4294967247			  ## btstack_main.c:815:44
 1e0af02:    09 c1             	r1 = r1 << 4			  ## btstack_main.c:815:44
 1e0af04:    21 fd 30 19       	r1 = r1 & 48			  ## btstack_main.c:815:44
 1e0af08:    05 18             	goto 10 <.GJTIE665_1_1_+0x58 : 1e0af14 >			  ## btstack_main.c:815:44
 1e0af0a:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:819:49
 1e0af0e:    89 c1             	r1 = r1 << 6			  ## btstack_main.c:819:49
 1e0af10:    20 fd 3f 09       	r0 = r0 & 63			  ## btstack_main.c:819:49
 1e0af14:    50 b2             	r0 |= r1
 1e0af16:    10 f9 00 a0       	b[r10 + 0] = r0
 1e0af1a:    90 4c             	r0 = [r6 + 36]
 1e0af1c:    80 f3 fb 1b       	call 14326 <cbuf_get_data_size : 1e0e716 >			  ## btstack_main.c:552:12
 1e0af20:    06 31             	if (r0 != 0) goto -500 <__ble_thread_loop_handler+0x2A : 1e0ad2e >			  ## btstack_main.c:552:12
 1e0af22:    c5 ff c8 1b 00 00 	r5 = 7112 <att_s_hdl : 1bc8 >
 1e0af28:    04 4a             	r4 = [r5 + 0]			  ## att_send.c:506:5
 1e0af2a:    5f 28             	if (r4 == 0) goto 190 <.GJTIE665_1_1_+0x12E : 1e0afea >			  ## att_send.c:506:5
 1e0af2c:    00 f9 da 40       	r0 = b[r4 + 218] (u)			  ## att_send.c:509:17
 1e0af30:    0d 20             	if (r0 == 0) goto 26 <.GJTIE665_1_1_+0x90 : 1e0af4c >			  ## att_send.c:509:17
 1e0af32:    03 f6 ac 40       	r3 = [r4 + 172]			  ## att_send.c:510:149
 1e0af36:    32 59             	r2 = h[r4 + 38] (u)			  ## att_send.c:510:9
 1e0af38:    20 59             	r0 = h[r4 + 36] (u)			  ## att_send.c:510:9
 1e0af3a:    41 59             	r1 = h[r4 + 40] (u)			  ## att_send.c:510:93
 1e0af3c:    34 fd f0 1a       	r4 = r1 & 4294905855			  ## att_send.c:510:9
 1e0af40:    09 d3             	r1 = r1 >> 12			  ## att_send.c:510:93
 1e0af42:    0c 02             	[sp] = r4			  ## att_send.c:510:9
 1e0af44:    88 16             	call -752 <att_operation_cmd_send : 1e0ac56 >			  ## att_send.c:510:9
 1e0af46:    04 4a             	r4 = [r5 + 0]
 1e0af48:    11 70             	r1 = 1
 1e0af4a:    01 18             	goto 2 <.GJTIE665_1_1_+0x92 : 1e0af4e >
 1e0af4c:    01 70             	r1 = 0
 1e0af4e:    60 48             	r0 = [r4 + 24]
 1e0af50:    80 f3 e1 1b       	call 14274 <cbuf_get_data_size : 1e0e716 >			  ## att_send.c:514:9
 1e0af54:    2e 20             	if (r0 == 0) goto 92 <.GJTIE665_1_1_+0xF6 : 1e0afb2 >			  ## att_send.c:514:9
 1e0af56:    08 fb ff 0f       	r8 = 4095 <sys_clock_limit+0x4F : fff >
 1e0af5a:    00 f9 da 40       	r0 = b[r4 + 218] (u)			  ## att_send.c:473:21
 1e0af5e:    2a 30             	if (r0 != 0) goto 84 <.GJTIE665_1_1_+0xF8 : 1e0afb4 >			  ## att_send.c:473:21
 1e0af60:    60 48             	r0 = [r4 + 24]
 1e0af62:    80 f3 d8 1b       	call 14256 <cbuf_get_data_size : 1e0e716 >			  ## att_send.c:478:18
 1e0af66:    26 20             	if (r0 == 0) goto 76 <.GJTIE665_1_1_+0xF8 : 1e0afb4 >			  ## att_send.c:478:18
 1e0af68:    c1 a2             	r1 = sp + 44
 1e0af6a:    62 70             	r2 = 6			  ## att_send.c:482:9
 1e0af6c:    40 08             	r0 = r4			  ## att_send.c:482:9
 1e0af6e:    80 f3 d3 1b       	call 14246 <cbuf_read : 1e0e718 >			  ## att_send.c:482:9
 1e0af72:    87 f5 30 00       	r7 = h[sp+48] (u)			  ## att_send.c:483:23
 1e0af76:    34 fd f0 7a       	r4 = r7 & 4294905855			  ## att_send.c:483:23
 1e0af7a:    87 f0 06 00       	if ((r7 & r8) == 0) goto 12 <.GJTIE665_1_1_+0xCE : 1e0af8a >			  ## att_send.c:483:23
 1e0af7e:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:484:24
 1e0af80:    01 f6 ac 00       	r1 = [r0 + 172]			  ## att_send.c:484:56
 1e0af84:    42 08             	r2 = r4			  ## att_send.c:484:13
 1e0af86:    80 f3 c7 1b       	call 14222 <cbuf_read : 1e0e718 >			  ## att_send.c:484:13
 1e0af8a:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:487:109
 1e0af8c:    03 f6 ac 00       	r3 = [r0 + 172]			  ## att_send.c:487:117
 1e0af90:    82 f5 2e 00       	r2 = h[sp+46] (u)			  ## att_send.c:487:19
 1e0af94:    80 f5 2c 00       	r0 = h[sp+44] (u)			  ## att_send.c:487:19
 1e0af98:    39 d3             	r1 = r7 >> 12			  ## att_send.c:487:75
 1e0af9a:    0c 02             	[sp] = r4			  ## att_send.c:487:19
 1e0af9c:    5c 16             	call -840 <att_operation_cmd_send : 1e0ac56 >			  ## att_send.c:487:19
 1e0af9e:    04 4a             	r4 = [r5 + 0]			  ## att_send.c:487:19
 1e0afa0:    70 e5 db 1f       	if (r0 != 87) goto -74 <.GJTIE665_1_1_+0x9E : 1e0af5a >
 1e0afa4:    40 fc 24 00       	r0 = r4 + 36			  ## att_send.c:491:29
 1e0afa8:    c1 a2             	r1 = sp + 44
 1e0afaa:    62 70             	r2 = 6			  ## att_send.c:491:13
 1e0afac:    97 f3 9a df       	call 3129140 <memcpy : 106ee4 >			  ## att_send.c:491:13
 1e0afb0:    01 18             	goto 2 <.GJTIE665_1_1_+0xF8 : 1e0afb4 >
 1e0afb2:    1b 22             	if (r1 == 0) goto 54 <.GJTIE665_1_1_+0x12E : 1e0afea >
 1e0afb4:    1a 28             	if (r4 == 0) goto 52 <.GJTIE665_1_1_+0x12E : 1e0afea >
 1e0afb6:    40 fc b0 00       	r0 = r4 + 176			  ## att_send.c:120:13
 1e0afba:    01 70             	r1 = 0			  ## att_send.c:120:13
 1e0afbc:    82 f7 02 00       	r2 = h[r0 ++= 2] (u)			  ## att_send.c:120:13
 1e0afc0:    04 34             	if (r2 != 0) goto 8 <.GJTIE665_1_1_+0x10E : 1e0afca >			  ## att_send.c:120:13
 1e0afc2:    11 80             	r1 += 1			  ## att_send.c:119:35
 1e0afc4:    91 e0 fa df       	ifs (r1 <= 9) goto -12 <.GJTIE665_1_1_+0x100 : 1e0afbc >
 1e0afc8:    10 18             	goto 32 <.GJTIE665_1_1_+0x12E : 1e0afea >
 1e0afca:    00 f9 b5 60       	r0 = b[r6 + 181] (u)			  ## btstack_main.c:1046:33
 1e0afce:    20 fd 07 09       	r0 = r0 & 7			  ## att_send.c:202:9
 1e0afd2:    20 e0 06 00       	if (r0 == 2) goto 12 <.GJTIE665_1_1_+0x126 : 1e0afe2 >			  ## att_send.c:202:9
 1e0afd6:    10 e0 06 00       	if (r0 == 1) goto 12 <.GJTIE665_1_1_+0x12A : 1e0afe6 >
 1e0afda:    07 30             	if (r0 != 0) goto 14 <.GJTIE665_1_1_+0x12E : 1e0afea >
 1e0afdc:    80 f3 f8 01       	call 1008 <att_server_request_can_send_now_event : 1e0b3d0 >			  ## att_send.c:205:13
 1e0afe0:    04 18             	goto 8 <.GJTIE665_1_1_+0x12E : 1e0afea >			  ## att_send.c:205:13
 1e0afe2:    80 f3 f5 01       	call 1002 <att_server_request_can_send_now_event : 1e0b3d0 >			  ## att_send.c:213:13
 1e0afe6:    80 f3 d9 07       	call 4018 <gatt_client_request_can_send_now_event : 1e0bf9c >
 1e0afea:    00 f6 b0 60       	r0 = [r6 + 176]			  ## btstack_main.c:760:30
 1e0afee:    01 20             	if (r0 == 0) goto 2 <.GJTIE665_1_1_+0x136 : 1e0aff2 >			  ## btstack_main.c:760:30
 1e0aff0:    80 00             	call r0			  ## btstack_main.c:761:9
 1e0aff2:    00 f9 b4 60       	r0 = b[r6 + 180] (u)			  ## btstack_main.c:764:31
 1e0aff6:    20 fd f0 09       	r0 = r0 & 240			  ## btstack_main.c:764:40
 1e0affa:    01 ff a0 00 29 00 	if (r0 != 160) goto 82 <.GJTIE665_1_1_+0x196 : 1e0b052 >			  ## btstack_main.c:764:40
 1e0b000:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:60:12
 1e0b006:    00 40             	r0 = [r0 + 0]			  ## btstack_linked_list.c:60:12
 1e0b008:    04 20             	if (r0 == 0) goto 8 <.GJTIE665_1_1_+0x156 : 1e0b012 >			  ## btstack_linked_list.c:60:12
 1e0b00a:    70 75             	r0 = 87			  ## btstack_main.c:774:13
 1e0b00c:    80 f3 49 10       	call 8338 <putchar : 1e0d0a2 >			  ## btstack_main.c:774:13
 1e0b010:    20 18             	goto 64 <.GJTIE665_1_1_+0x196 : 1e0b052 >			  ## btstack_main.c:774:13
 1e0b012:    c0 ff 04 1c 00 00 	r0 = 7172 <btstack_stack : 1c04 >			  ## btstack_main.c:766:50
 1e0b018:    11 40             	r1 = [r0 + 4]			  ## btstack_main.c:766:50
 1e0b01a:    c4 ff 94 1a 00 00 	r4 = 6804 <le_stack_pool : 1a94 >
 1e0b020:    09 48             	[r4 + 0] = r1			  ## btstack_memory.c:438:19
 1e0b022:    20 42             	r0 = [r1 + 8]			  ## btstack_memory.c:444:9
 1e0b024:    05 20             	if (r0 == 0) goto 10 <.GJTIE665_1_1_+0x174 : 1e0b030 >			  ## btstack_memory.c:444:9
 1e0b026:    80 f3 f9 13       	call 10226 <free : 1e0d81c >			  ## btstack_memory.c:445:9
 1e0b02a:    01 48             	r1 = [r4 + 0]			  ## btstack_memory.c:446:9
 1e0b02c:    c2 f4 00 19       	[r1 + 8] = 0			  ## btstack_memory.c:446:53
 1e0b030:    30 42             	r0 = [r1 + 12]			  ## btstack_memory.c:451:9
 1e0b032:    05 20             	if (r0 == 0) goto 10 <.GJTIE665_1_1_+0x182 : 1e0b03e >			  ## btstack_memory.c:451:9
 1e0b034:    80 f3 f2 13       	call 10212 <free : 1e0d81c >			  ## btstack_memory.c:452:9
 1e0b038:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:453:9
 1e0b03a:    c3 f4 00 09       	[r0 + 12] = 0			  ## btstack_memory.c:453:47
 1e0b03e:    00 f9 b4 60       	r0 = b[r6 + 180] (u)			  ## btstack_main.c:767:38
 1e0b042:    60 ff 0f 09 02 00 	if ((r0 & 15) == 0) goto 4 <.GJTIE665_1_1_+0x190 : 1e0b04c >			  ## btstack_main.c:767:38
 1e0b048:    80 f3 03 79       	call 61958 <ll_hci_destory : 1e1a252 >			  ## btstack_main.c:769:17
 1e0b04c:    00 70             	r0 = 0			  ## btstack_main.c:771:43
 1e0b04e:    10 f9 b4 60       	b[r6 + 180] = r0			  ## btstack_main.c:771:43
 1e0b052:    1a 0a             	sp += 52
 1e0b054:    5e 01             	{pc, r14-r4} = [sp++]			  ## btstack_main.c:778:1


reverse_bd_addr:
 1e0b056:    52 70             	r2 = 5			  ## utils.c:153:0
 1e0b058:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0b05c:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0b060:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0b062:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_bd_addr+0x2 : 1e0b058 >			  ## utils.c:123:5
 1e0b066:    20 00             	rts			  ## utils.c:155:1


l2cap_release_packet_buffer:
 1e0b068:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## l2cap.c:2059:0
 1e0b06e:    01 70             	r1 = 0			  ## hci_vendor.c:1875:45
 1e0b070:    11 f9 15 02       	b[r0 + 533] = r1			  ## hci_vendor.c:1875:45
 1e0b074:    20 00             	rts			  ## l2cap.c:2061:1


btstack_linked_list_empty:
 1e0b076:    01 08             	r1 = r0			  ## btstack_linked_list.c:59:0
 1e0b078:    10 70             	r0 = 1			  ## btstack_linked_list.c:60:18
 1e0b07a:    01 22             	if (r1 == 0) goto 2 <btstack_linked_list_empty+0x8 : 1e0b07e >			  ## btstack_linked_list.c:60:18
 1e0b07c:    00 70             	r0 = 0			  ## btstack_linked_list.c:60:18
 1e0b07e:    20 00             	rts			  ## btstack_linked_list.c:60:5


send_sco_disconn:
 1e0b080:    74 01             	[--sp] = {rets, r4}			  ## bt_audio.c:111:0
 1e0b082:    c4 ff b0 09 00 00 	r4 = 2480 <disable_sco_timer : 9b0 >			  ## bt_audio.c:111:0
 1e0b088:    00 58             	r0 = h[r4 + 0] (u)			  ## bt_audio.c:113:9
 1e0b08a:    04 20             	if (r0 == 0) goto 8 <send_sco_disconn+0x14 : 1e0b094 >
 1e0b08c:    80 f3 e6 08       	call 4556 <sys_timeout_del : 1e0c25c >			  ## bt_audio.c:115:9
 1e0b090:    00 70             	r0 = 0			  ## bt_audio.c:116:27
 1e0b092:    08 58             	h[r4 + 0] = r0			  ## bt_audio.c:116:27
 1e0b094:    54 01             	{pc, r4} = [sp++]			  ## bt_audio.c:118:1


a2dp_suspend:
 1e0b096:    00 70             	r0 = 0			  ## a2dp.c:1417:0
 1e0b098:    20 00             	rts			  ## a2dp.c:1422:1


a2dp_resume:
 1e0b09a:    00 70             	r0 = 0			  ## a2dp.c:1424:0
 1e0b09c:    20 00             	rts			  ## a2dp.c:1429:1


a2dp_release:
 1e0b09e:    00 70             	r0 = 0			  ## a2dp.c:1402:0
 1e0b0a0:    20 00             	rts			  ## a2dp.c:1415:1


__sink_media_close:
 1e0b0a2:    74 01             	[--sp] = {rets, r4}			  ## a2dp_sink.c:49:0
 1e0b0a4:    04 08             	r4 = r0			  ## a2dp_sink.c:49:0
 1e0b0a6:    50 49             	r0 = [r4 + 84]			  ## a2dp_sink.c:52:17
 1e0b0a8:    06 20             	if (r0 == 0) goto 12 <__sink_media_close+0x14 : 1e0b0b6 >			  ## a2dp_sink.c:52:17
 1e0b0aa:    51 40             	r1 = [r0 + 20]			  ## a2dp_sink.c:60:40
 1e0b0ac:    02 22             	if (r1 == 0) goto 4 <__sink_media_close+0x10 : 1e0b0b2 >			  ## a2dp_sink.c:60:40
 1e0b0ae:    40 08             	r0 = r4			  ## a2dp_sink.c:61:9
 1e0b0b0:    81 00             	call r1			  ## a2dp_sink.c:61:9
 1e0b0b2:    d5 f4 00 49       	[r4 + 84] = 0			  ## a2dp_sink.c:63:18
 1e0b0b6:    54 01             	{pc, r4} = [sp++]			  ## a2dp_sink.c:73:1


__sink_channel_open:
 1e0b0b8:    34 00             	[--sp] = rets			  ## a2dp_sink.c:77:0
 1e0b0ba:    01 22             	if (r1 == 0) goto 2 <__sink_channel_open+0x6 : 1e0b0be >			  ## a2dp_sink.c:77:0
 1e0b0bc:    f2 17             	call -28 <__sink_media_close : 1e0b0a2 >			  ## a2dp_sink.c:80:9
 1e0b0be:    00 70             	r0 = 0			  ## a2dp_sink.c:82:5
 1e0b0c0:    30 00             	pc = [sp++]			  ## a2dp_sink.c:82:5


__sink_event_credits:
 1e0b0c2:    20 00             	rts			  ## a2dp_sink.c:86:0


__sink_media_packet:
 1e0b0c4:    78 01             	[--sp] = {rets, r8-r4}			  ## a2dp_sink.c:110:0
 1e0b0c6:    24 08             	r4 = r2			  ## a2dp_sink.c:110:0
 1e0b0c8:    15 08             	r5 = r1			  ## a2dp_sink.c:110:0
 1e0b0ca:    06 08             	r6 = r0			  ## a2dp_sink.c:110:0
 1e0b0cc:    c4 e0 32 30       	if (r4 < 12) goto 100 <__sink_media_packet+0x70 : 1e0b134 >			  ## a2dp_sink.c:110:0
 1e0b0d0:    01 f7 4a 60       	r1 = h[r6 + 74] (u)			  ## a2dp_sink.c:120:32
 1e0b0d4:    10 70             	r0 = 1			  ## a2dp_sink.c:120:32
 1e0b0d6:    01 32             	if (r1 != 0) goto 2 <__sink_media_packet+0x16 : 1e0b0da >			  ## a2dp_sink.c:120:32
 1e0b0d8:    00 70             	r0 = 0			  ## a2dp_sink.c:120:9
 1e0b0da:    11 6a             	r1 = b[r5 + 1] (u)			  ## a2dp_sink.c:118:43
 1e0b0dc:    02 6a             	r2 = b[r5 + 0] (u)			  ## a2dp_sink.c:118:43
 1e0b0de:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## a2dp_sink.c:118:43
 1e0b0e2:    91 c0             	r1 = r2 << 2			  ## a2dp_sink.c:118:46
 1e0b0e4:    21 fd 3c 19       	r1 = r1 & 60			  ## a2dp_sink.c:118:46
 1e0b0e8:    c1 80             	r1 += 12			  ## a2dp_sink.c:118:33
 1e0b0ea:    11 b0             	r1 |= 1			  ## a2dp_sink.c:118:50
 1e0b0ec:    08 b2             	r8 = r1 + r0			  ## a2dp_sink.c:120:9
 1e0b0ee:    84 f2 21 30       	if (r4 < r8) goto 66 <__sink_media_packet+0x70 : 1e0b134 >
 1e0b0f2:    50 4d             	r0 = [r6 + 84]			  ## a2dp_sink.c:129:17
 1e0b0f4:    08 20             	if (r0 == 0) goto 16 <__sink_media_packet+0x42 : 1e0b106 >			  ## a2dp_sink.c:129:17
 1e0b0f6:    32 40             	r2 = [r0 + 12]			  ## a2dp_sink.c:156:19
 1e0b0f8:    80 fb 80 05       	r0 = r5 + r8			  ## a2dp_sink.c:156:32
 1e0b0fc:    90 fb 80 14       	r1 = r4 - r8			  ## a2dp_sink.c:156:47
 1e0b100:    61 04             	r1 = r1.l (u)			  ## a2dp_sink.c:156:5
 1e0b102:    18 01             	{rets, r8-r4} = [sp++]			  ## a2dp_sink.c:156:5
 1e0b104:    92 00             	goto r2			  ## a2dp_sink.c:156:5
 1e0b106:    c0 ff 78 7a e0 01 	r0 = 31488632 <a2dp_source_media_codec_end : 1e07a78 >
 1e0b10c:    c7 ff 78 7a e0 01 	r7 = 31488632 <a2dp_source_media_codec_end : 1e07a78 >
 1e0b112:    07 f2 0d 20       	if (r7 >= r0) goto 26 <__sink_media_packet+0x6C : 1e0b130 >
 1e0b116:    01 f9 5d 60       	r1 = b[r6 + 93] (u)			  ## a2dp_sink.c:132:43
 1e0b11a:    02 4e             	r2 = [r7 + 0]			  ## a2dp_sink.c:36:20
 1e0b11c:    12 f2 04 00       	if (r2 == r1) goto 8 <__sink_media_packet+0x64 : 1e0b128 >			  ## a2dp_sink.c:36:20
 1e0b120:    87 81             	r7 += 24			  ## a2dp_sink.c:35:5
 1e0b122:    07 f2 fa 3f       	if (r7 < r0) goto -12 <__sink_media_packet+0x56 : 1e0b11a >
 1e0b126:    04 18             	goto 8 <__sink_media_packet+0x6C : 1e0b130 >
 1e0b128:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:37:24
 1e0b12a:    00 70             	r0 = 0			  ## a2dp_sink.c:37:17
 1e0b12c:    81 00             	call r1			  ## a2dp_sink.c:37:17
 1e0b12e:    03 20             	if (r0 == 0) goto 6 <__sink_media_packet+0x72 : 1e0b136 >			  ## a2dp_sink.c:37:17
 1e0b130:    d5 f4 00 69       	[r6 + 84] = 0			  ## a2dp_sink.c:132:22
 1e0b134:    58 01             	{pc, r8-r4} = [sp++]			  ## a2dp_sink.c:158:1
 1e0b136:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:40:20
 1e0b138:    10 70             	r0 = 1			  ## a2dp_sink.c:40:13
 1e0b13a:    81 00             	call r1			  ## a2dp_sink.c:40:13
 1e0b13c:    5f 4d             	[r6 + 84] = r7			  ## a2dp_sink.c:132:22
 1e0b13e:    21 4e             	r1 = [r7 + 8]			  ## a2dp_sink.c:136:23
 1e0b140:    60 08             	r0 = r6			  ## a2dp_sink.c:136:9
 1e0b142:    81 00             	call r1			  ## a2dp_sink.c:136:9
 1e0b144:    50 4d             	r0 = [r6 + 84]			  ## a2dp_sink.c:136:9
 1e0b146:    d7 1f             	goto -82 <__sink_media_packet+0x32 : 1e0b0f6 >			  ## a2dp_sink.c:136:9


__sink_media_suspend:
 1e0b148:    ac 1f             	goto -168 <__sink_media_close : 1e0b0a2 >			  ## a2dp_sink.c:162:0


avctp_suspend:
 1e0b14a:    00 70             	r0 = 0			  ## avctp.c:1282:0
 1e0b14c:    20 00             	rts			  ## avctp.c:1297:1


avctp_resume:
 1e0b14e:    00 70             	r0 = 0			  ## avctp.c:1278:0
 1e0b150:    20 00             	rts			  ## avctp.c:1279:5


avctp_release:
 1e0b152:    00 70             	r0 = 0			  ## avctp.c:1260:0
 1e0b154:    20 00             	rts			  ## avctp.c:1276:1


hfp_suspend:
 1e0b156:    00 70             	r0 = 0			  ## hfp_profile.c:2013:0
 1e0b158:    20 00             	rts			  ## hfp_profile.c:2019:1


hfp_resume:
 1e0b15a:    00 70             	r0 = 0			  ## hfp_profile.c:2005:0
 1e0b15c:    20 00             	rts			  ## hfp_profile.c:2011:1


hfp_release:
 1e0b15e:    00 70             	r0 = 0			  ## hfp_profile.c:1988:0
 1e0b160:    20 00             	rts			  ## hfp_profile.c:2002:1


hid_suspend:
 1e0b162:    00 70             	r0 = 0			  ## hid.c:807:0
 1e0b164:    20 00             	rts			  ## hid.c:813:1


hid_resume:
 1e0b166:    00 70             	r0 = 0			  ## hid.c:798:0
 1e0b168:    20 00             	rts			  ## hid.c:804:1


hid_release:
 1e0b16a:    00 70             	r0 = 0			  ## hid.c:781:0
 1e0b16c:    20 00             	rts			  ## hid.c:795:1


spp_suspend:
 1e0b16e:    00 70             	r0 = 0			  ## spp_profile.c:342:0
 1e0b170:    20 00             	rts			  ## spp_profile.c:343:5


spp_resume:
 1e0b172:    00 70             	r0 = 0			  ## spp_profile.c:338:0
 1e0b174:    20 00             	rts			  ## spp_profile.c:339:5


spp_release:
 1e0b176:    00 70             	r0 = 0			  ## spp_profile.c:323:0
 1e0b178:    20 00             	rts			  ## spp_profile.c:335:1


sdp_suspend:
 1e0b17a:    00 70             	r0 = 0			  ## sdp.c:961:0
 1e0b17c:    20 00             	rts			  ## sdp.c:962:5


sdp_resume:
 1e0b17e:    00 70             	r0 = 0			  ## sdp.c:957:0
 1e0b180:    20 00             	rts			  ## sdp.c:958:5


sdp_release:
 1e0b182:    00 70             	r0 = 0			  ## sdp.c:933:0
 1e0b184:    20 00             	rts			  ## sdp.c:954:1


iap_suspend:
 1e0b186:    00 70             	r0 = 0			  ## iap_profile.c:374:0
 1e0b188:    20 00             	rts			  ## iap_profile.c:375:5


iap_resume:
 1e0b18a:    00 70             	r0 = 0			  ## iap_profile.c:370:0
 1e0b18c:    20 00             	rts			  ## iap_profile.c:371:5


iap_release:
 1e0b18e:    00 70             	r0 = 0			  ## iap_profile.c:354:0
 1e0b190:    20 00             	rts			  ## iap_profile.c:367:1


hci_packet_handler:
 1e0b192:    7b 01             	[--sp] = {rets, r11-r4}			  ## btstack_task.c:147:0
 1e0b194:    fc 0b             	sp += -8			  ## btstack_task.c:147:0
 1e0b196:    24 08             	r4 = r2			  ## btstack_task.c:147:0
 1e0b198:    15 08             	r5 = r1			  ## btstack_task.c:147:0
 1e0b19a:    06 08             	r6 = r0			  ## btstack_task.c:147:0
 1e0b19c:    30 98             	r0 = r4 + 3			  ## btstack_task.c:147:0
 1e0b19e:    f2 fd 10 80       	r8 = r0 >> 2			  ## btstack_task.c:147:0
 1e0b1a2:    c7 ff 06 26 e1 01 	r7 = 31532550 <update_target_end+0x23D6 : 1e12606 >			  ## btstack_task.c:147:0
 1e0b1a8:    c9 ff 02 00 40 00 	r9 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## btstack_task.c:147:0
 1e0b1ae:    ca ff 0e 26 e1 01 	r10 = 31532558 <update_target_end+0x23DE : 1e1260e >			  ## btstack_task.c:147:0
 1e0b1b4:    9b fc ff ff       	r11 = r9 + -1			  ## btstack_task.c:147:0
 1e0b1b8:    24 18             	goto 72 <hci_packet_handler+0x70 : 1e0b202 >			  ## btstack_task.c:147:0
 1e0b1ba:    70 08             	r0 = r7			  ## btstack_task.c:153:19
 1e0b1bc:    b1 08             	r1 = r11			  ## btstack_task.c:153:19
 1e0b1be:    82 08             	r2 = r8			  ## btstack_task.c:153:19
 1e0b1c0:    53 08             	r3 = r5			  ## btstack_task.c:153:19
 1e0b1c2:    06 18             	goto 12 <hci_packet_handler+0x3E : 1e0b1d0 >			  ## btstack_task.c:153:19
 1e0b1c4:    0d 02             	[sp] = r5			  ## btstack_task.c:157:20
 1e0b1c6:    1c 02             	[sp+4] = r4			  ## btstack_task.c:158:20
 1e0b1c8:    03 a0             	r3 = sp + 0			  ## btstack_task.c:158:20
 1e0b1ca:    22 70             	r2 = 2			  ## btstack_task.c:159:19
 1e0b1cc:    70 08             	r0 = r7			  ## btstack_task.c:159:19
 1e0b1ce:    91 08             	r1 = r9			  ## btstack_task.c:159:19
 1e0b1d0:    97 f3 06 de       	call 3128332 <os_taskq_post_type : 106de0 >
 1e0b1d4:    50 e1 19 10       	if (r0 != 21) goto 50 <hci_packet_handler+0x78 : 1e0b20a >
 1e0b1d8:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0b1dc:    02 04             	r2 = r0.b0 (u)			  ## cpu.h:73:17
 1e0b1de:    a0 08             	r0 = r10			  ## btstack_task.c:168:9
 1e0b1e0:    61 08             	r1 = r6			  ## btstack_task.c:168:9
 1e0b1e2:    80 f3 e0 0d       	call 7104 <printf : 1e0cda6 >			  ## btstack_task.c:168:9
 1e0b1e6:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0b1ea:    61 ff ff 09 0d 00 	if ((r0 & 255) != 0) goto 26 <hci_packet_handler+0x78 : 1e0b20a >
 1e0b1f0:    8f f3 46 c0       	call 2064524 <report_data_code_begin : 3280 >			  ## btstack_task.c:172:21
 1e0b1f4:    71 08             	r1 = r7			  ## btstack_task.c:172:14
 1e0b1f6:    97 f3 7d de       	call 3128570 <strcmp : 106ef4 >			  ## btstack_task.c:172:14
 1e0b1fa:    07 20             	if (r0 == 0) goto 14 <hci_packet_handler+0x78 : 1e0b20a >			  ## btstack_task.c:172:14
 1e0b1fc:    20 70             	r0 = 2			  ## btstack_task.c:176:9
 1e0b1fe:    97 f3 db dd       	call 3128246 <os_time_dly : 106db8 >			  ## btstack_task.c:176:9
 1e0b202:    26 e0 df 0f       	if (r6 == 2) goto -66 <hci_packet_handler+0x32 : 1e0b1c4 >			  ## btstack_task.c:151:9
 1e0b206:    46 e0 d8 0f       	if (r6 == 4) goto -80 <hci_packet_handler+0x28 : 1e0b1ba >
 1e0b20a:    04 0a             	sp += 8
 1e0b20c:    5b 01             	{pc, r11-r4} = [sp++]


sm_encryption_key_size:
 1e0b20e:    34 00             	[--sp] = rets			  ## sm.c:4529:0
 1e0b210:    bf f3 63 e7       	call -12602 <le_hci_connection_for_handle : 1e080da >			  ## sm.c:4520:36
 1e0b214:    01 08             	r1 = r0			  ## sm.c:4520:36
 1e0b216:    13 fc 24 00       	r3 = r1 + 36			  ## sm.c:4524:22
 1e0b21a:    00 70             	r0 = 0			  ## sm.c:4524:22
 1e0b21c:    02 70             	r2 = 0			  ## sm.c:4521:9
 1e0b21e:    01 22             	if (r1 == 0) goto 2 <sm_encryption_key_size+0x14 : 1e0b222 >			  ## sm.c:4521:9
 1e0b220:    32 08             	r2 = r3			  ## sm.c:4521:9
 1e0b222:    03 22             	if (r1 == 0) goto 6 <sm_encryption_key_size+0x1C : 1e0b22a >
 1e0b224:    41 65             	r1 = b[r2 + 20] (u)			  ## sm.c:4534:19
 1e0b226:    01 22             	if (r1 == 0) goto 2 <sm_encryption_key_size+0x1C : 1e0b22a >			  ## sm.c:4534:19
 1e0b228:    60 65             	r0 = b[r2 + 22] (u)			  ## sm.c:4537:12
 1e0b22a:    30 00             	pc = [sp++]			  ## sm.c:4538:1


sm_authenticated:
 1e0b22c:    34 00             	[--sp] = rets			  ## sm.c:4541:0
 1e0b22e:    bf f3 54 e7       	call -12632 <le_hci_connection_for_handle : 1e080da >			  ## sm.c:4520:36
 1e0b232:    01 08             	r1 = r0			  ## sm.c:4520:36
 1e0b234:    13 fc 24 00       	r3 = r1 + 36			  ## sm.c:4524:22
 1e0b238:    00 70             	r0 = 0			  ## sm.c:4524:22
 1e0b23a:    02 70             	r2 = 0			  ## sm.c:4521:9
 1e0b23c:    01 22             	if (r1 == 0) goto 2 <sm_authenticated+0x14 : 1e0b240 >			  ## sm.c:4521:9
 1e0b23e:    32 08             	r2 = r3			  ## sm.c:4521:9
 1e0b240:    03 22             	if (r1 == 0) goto 6 <sm_authenticated+0x1C : 1e0b248 >
 1e0b242:    41 65             	r1 = b[r2 + 20] (u)			  ## sm.c:4546:19
 1e0b244:    01 22             	if (r1 == 0) goto 2 <sm_authenticated+0x1C : 1e0b248 >			  ## sm.c:4546:19
 1e0b246:    50 65             	r0 = b[r2 + 21] (u)			  ## sm.c:4549:12
 1e0b248:    30 00             	pc = [sp++]			  ## sm.c:4550:1


search_ios_ancs_server:
 1e0b24a:    06 01             	{r6-r4} = [sp++]
 1e0b24c:    00 ff ff 00 28 d0 	if (r0 == 255) goto -24496 <board_init+0xCE : 1e052a2 >
 1e0b252:    00 2d             	if (r6 == 0) goto -512 <.GJTIE665_1_1_+0x198 : 1e0b054 >
 1e0b254:    12 1e             	goto -988 <.GJTIE665_0_0_+0xEA : 1e0ae7a >
 1e0b256:    4b 0f             	r3 = r1 * r5
 1e0b258:    a4 99             	r4 = r4 + 26
 1e0b25a:    4e ce             	r6 = r1 <<< 25
 1e0b25c:    b5 31             	if (r0 != 0) goto -150 <hci_packet_handler+0x36 : 1e0b1c8 >
 1e0b25e:    f4 05             	r4 = r7.l (s)
 1e0b260:    79 00             	sti r9


att_global_info_init:
 1e0b262:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:75:0
 1e0b268:    01 70             	r1 = 0			  ## att_dispatch.c:76:5
 1e0b26a:    c2 73             	r2 = 60			  ## att_dispatch.c:76:5
 1e0b26c:    d7 f3 40 de       	goto 3128448 <memset : 106ef0 >			  ## att_dispatch.c:76:5


att_server_init:
 1e0b270:    34 00             	[--sp] = rets			  ## att_server.c:650:0
 1e0b272:    c3 ff e0 1c 00 00 	r3 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:297:32
 1e0b278:    c0 ff 64 b4 e0 01 	r0 = 31503460 <att_event_packet_handler : 1e0b464 >			  ## att_server.c:657:54
 1e0b27e:    98 46             	[r3 + 36] = r0			  ## att_server.c:657:54
 1e0b280:    30 fc 20 00       	r0 = r3 + 32			  ## att_server.c:657:54
 1e0b284:    bf f3 66 e8       	call -12084 <hci_add_event_handler : 1e08354 >			  ## att_server.c:658:5
 1e0b288:    c0 ff 14 b6 e0 01 	r0 = 31503892 <att_packet_handler.1779 : 1e0b614 >			  ## att_dispatch.c:145:32
 1e0b28e:    18 46             	[r3 + 4] = r0			  ## att_dispatch.c:145:32
 1e0b290:    bf f3 65 e8       	call -12086 <l2cap_register_fixed_channel : 1e0835e >			  ## att_dispatch.c:146:5
 1e0b294:    c0 ff 00 2a e1 01 	r0 = 31533568 <profile_data : 1e12a00 >			  ## att_db.c:287:20
 1e0b29a:    38 46             	[r3 + 12] = r0			  ## att_db.c:287:20
 1e0b29c:    c0 ff f8 0a e0 01 	r0 = 31460088 <att_read_callback : 1e00af8 >			  ## att_db.c:292:31
 1e0b2a2:    48 46             	[r3 + 16] = r0			  ## att_db.c:292:31
 1e0b2a4:    c0 ff 64 0c e0 01 	r0 = 31460452 <att_write_callback : 1e00c64 >			  ## att_db.c:297:32
 1e0b2aa:    58 46             	[r3 + 20] = r0			  ## att_db.c:297:32
 1e0b2ac:    30 00             	pc = [sp++]			  ## att_server.c:673:1


att_server_register_packet_handler:
 1e0b2ae:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:690:0
 1e0b2b4:    c1 ff d4 0f e0 01 	r1 = 31461332 <cbk_packet_handler : 1e00fd4 >			  ## att_server.c:692:39
 1e0b2ba:    c9 40             	[r0 + 48] = r1			  ## att_server.c:692:39
 1e0b2bc:    20 00             	rts			  ## att_server.c:694:1


att_dispatch_server_request_can_send_now_event:
 1e0b2be:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:186:0
 1e0b2c4:    11 70             	r1 = 1			  ## att_dispatch.c:187:45
 1e0b2c6:    99 60             	b[r0 + 9] = r1			  ## att_dispatch.c:187:45
 1e0b2c8:    ff f3 55 fc       	goto -1878 <l2cap_request_can_send_fix_channel_now_event : 1e0ab76 >			  ## att_dispatch.c:188:5


att_server_send_request:
 1e0b2cc:    f8 1f             	goto -16 <att_dispatch_server_request_can_send_now_event : 1e0b2be >			  ## att_server.c:785:0


att_server_for_handle:
 1e0b2ce:    34 00             	[--sp] = rets			  ## att_server.c:83:0
 1e0b2d0:    bf f3 03 e7       	call -12794 <le_hci_connection_for_handle : 1e080da >			  ## att_server.c:88:43
 1e0b2d4:    01 08             	r1 = r0			  ## att_server.c:88:43
 1e0b2d6:    12 fc 5c 00       	r2 = r1 + 92			  ## att_server.c:92:29
 1e0b2da:    00 70             	r0 = 0			  ## att_server.c:92:29
 1e0b2dc:    01 22             	if (r1 == 0) goto 2 <att_server_for_handle+0x12 : 1e0b2e0 >			  ## att_server.c:92:29
 1e0b2de:    20 08             	r0 = r2			  ## att_server.c:89:9
 1e0b2e0:    30 00             	pc = [sp++]			  ## att_server.c:93:1


att_dispatch_server_can_send_now:
 1e0b2e2:    ff f3 4e fc       	goto -1892 <l2cap_can_send_fixed_channel_packet_now : 1e0ab82 >			  ## att_dispatch.c:163:0


att_server_notify:
 1e0b2e6:    78 01             	[--sp] = {rets, r8-r4}			  ## att_server.c:729:0
 1e0b2e8:    36 08             	r6 = r3			  ## att_server.c:729:0
 1e0b2ea:    28 08             	r8 = r2			  ## att_server.c:729:0
 1e0b2ec:    17 08             	r7 = r1			  ## att_server.c:729:0
 1e0b2ee:    04 08             	r4 = r0			  ## att_server.c:729:0
 1e0b2f0:    ee 17             	call -36 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:734:32
 1e0b2f2:    05 08             	r5 = r0			  ## att_server.c:734:32
 1e0b2f4:    20 2a             	if (r5 == 0) goto 64 <att_server_notify+0x50 : 1e0b336 >
 1e0b2f6:    40 08             	r0 = r4			  ## att_server.c:739:10
 1e0b2f8:    f4 17             	call -24 <att_dispatch_server_can_send_now : 1e0b2e2 >			  ## att_server.c:739:10
 1e0b2fa:    1f 20             	if (r0 == 0) goto 62 <att_server_notify+0x54 : 1e0b33a >			  ## att_server.c:739:10
 1e0b2fc:    bf f3 43 fc       	call -1914 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## att_server.c:743:5
 1e0b300:    c3 ff 60 18 00 00 	r3 = 6240 <report_irq_stack_end : 1860 >			  ## att_db.c:1251:5
 1e0b306:    b0 71             	r0 = 27			  ## att_db.c:1263:24
 1e0b308:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1263:24
 1e0b30a:    00 97             	r0 = r3 + 16			  ## att_db.c:1263:24
 1e0b30c:    11 70             	r1 = 1			  ## att_db.c:1247:5
 1e0b30e:    72 08             	r2 = r7			  ## att_db.c:1247:5
 1e0b310:    bf f3 3b fc       	call -1930 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:1247:5
 1e0b314:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1248:21
 1e0b316:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1248:41
 1e0b31a:    46 f2 01 c0       	ifs (r6 > r4) goto 2 <att_server_notify+0x3A : 1e0b320 >
 1e0b31e:    64 08             	r4 = r6			  ## att_db.c:1248:9
 1e0b320:    22 05             	r2 = r4.l (u)			  ## att_db.c:1251:40
 1e0b322:    30 97             	r0 = r3 + 19			  ## att_db.c:1251:5
 1e0b324:    81 08             	r1 = r8			  ## att_db.c:1251:5
 1e0b326:    97 f3 dd dd       	call 3128250 <memcpy : 106ee4 >			  ## att_db.c:1251:5
 1e0b32a:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:746:12
 1e0b32c:    31 98             	r1 = r4 + 3			  ## att_db.c:1252:22
 1e0b32e:    61 04             	r1 = r1.l (u)			  ## att_server.c:746:12
 1e0b330:    18 01             	{rets, r8-r4} = [sp++]			  ## att_server.c:746:12
 1e0b332:    ff f3 32 fc       	goto -1948 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## att_server.c:746:12
 1e0b336:    20 70             	r0 = 2
 1e0b338:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:747:1
 1e0b33a:    70 75             	r0 = 87
 1e0b33c:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:747:1


att_server_indicate:
 1e0b33e:    79 01             	[--sp] = {rets, r9-r4}			  ## att_server.c:750:0
 1e0b340:    39 08             	r9 = r3			  ## att_server.c:750:0
 1e0b342:    28 08             	r8 = r2			  ## att_server.c:750:0
 1e0b344:    14 08             	r4 = r1			  ## att_server.c:750:0
 1e0b346:    07 08             	r7 = r0			  ## att_server.c:750:0
 1e0b348:    c2 17             	call -124 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:755:32
 1e0b34a:    05 08             	r5 = r0			  ## att_server.c:755:32
 1e0b34c:    33 2a             	if (r5 == 0) goto 102 <att_server_indicate+0x76 : 1e0b3b4 >
 1e0b34e:    50 4a             	r0 = [r5 + 20]			  ## att_server.c:760:21
 1e0b350:    06 79             	r6 = 144			  ## att_server.c:760:21
 1e0b352:    31 30             	if (r0 != 0) goto 98 <att_server_indicate+0x78 : 1e0b3b6 >			  ## att_server.c:760:21
 1e0b354:    70 08             	r0 = r7			  ## att_server.c:763:10
 1e0b356:    c5 17             	call -118 <att_dispatch_server_can_send_now : 1e0b2e2 >			  ## att_server.c:763:10
 1e0b358:    30 20             	if (r0 == 0) goto 96 <att_server_indicate+0x7C : 1e0b3ba >			  ## att_server.c:763:10
 1e0b35a:    5c 4a             	[r5 + 20] = r4			  ## att_server.c:768:41
 1e0b35c:    06 70             	r6 = 0			  ## att_server.c:768:41
 1e0b35e:    7e 4a             	[r5 + 28] = r6			  ## att_server.c:770:5
 1e0b360:    6e 4a             	[r5 + 24] = r6			  ## att_server.c:770:5
 1e0b362:    00 fb 30 75       	r0 = 30000 <nvbss_size+0x2B0 : 7530 >			  ## att_server.c:771:57
 1e0b366:    88 4a             	[r5 + 32] = r0			  ## att_server.c:771:57
 1e0b368:    c0 ff 58 b8 e0 01 	r0 = 31504472 <att_handle_value_indication_timeout : 1e0b858 >			  ## att_server.c:772:48
 1e0b36e:    98 4a             	[r5 + 36] = r0			  ## att_server.c:772:48
 1e0b370:    ad 4a             	[r5 + 40] = r5			  ## att_server.c:773:48
 1e0b372:    80 9b             	r0 = r5 + 24			  ## att_server.c:770:25
 1e0b374:    21 78             	r1 = 130			  ## att_server.c:774:5
 1e0b376:    bf f3 33 fc       	call -1946 <btstack_set_timer : 1e0abe0 >			  ## att_server.c:774:5
 1e0b37a:    bf f3 04 fc       	call -2040 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## att_server.c:776:5
 1e0b37e:    c3 ff 60 18 00 00 	r3 = 6240 <report_irq_stack_end : 1860 >			  ## att_db.c:1251:5
 1e0b384:    d0 71             	r0 = 29			  ## att_db.c:1275:24
 1e0b386:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1275:24
 1e0b388:    00 97             	r0 = r3 + 16			  ## att_db.c:1275:24
 1e0b38a:    11 70             	r1 = 1			  ## att_db.c:1247:5
 1e0b38c:    42 08             	r2 = r4			  ## att_db.c:1247:5
 1e0b38e:    bf f3 fc fb       	call -2056 <little_endian_store_16 : 1e0ab8a >			  ## att_db.c:1247:5
 1e0b392:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1248:21
 1e0b394:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1248:41
 1e0b398:    49 f2 01 c0       	ifs (r9 > r4) goto 2 <att_server_indicate+0x60 : 1e0b39e >
 1e0b39c:    94 08             	r4 = r9			  ## att_db.c:1248:9
 1e0b39e:    22 05             	r2 = r4.l (u)			  ## att_db.c:1251:40
 1e0b3a0:    30 97             	r0 = r3 + 19			  ## att_db.c:1251:5
 1e0b3a2:    81 08             	r1 = r8			  ## att_db.c:1251:5
 1e0b3a4:    97 f3 9e dd       	call 3128124 <memcpy : 106ee4 >			  ## att_db.c:1251:5
 1e0b3a8:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:779:5
 1e0b3aa:    31 98             	r1 = r4 + 3			  ## att_db.c:1252:22
 1e0b3ac:    61 04             	r1 = r1.l (u)			  ## att_server.c:779:5
 1e0b3ae:    bf f3 f4 fb       	call -2072 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## att_server.c:779:5
 1e0b3b2:    01 18             	goto 2 <att_server_indicate+0x78 : 1e0b3b6 >			  ## att_server.c:779:5
 1e0b3b4:    26 70             	r6 = 2
 1e0b3b6:    60 08             	r0 = r6			  ## att_server.c:781:1
 1e0b3b8:    59 01             	{pc, r9-r4} = [sp++]			  ## att_server.c:781:1
 1e0b3ba:    76 75             	r6 = 87
 1e0b3bc:    fc 1f             	goto -8 <att_server_indicate+0x78 : 1e0b3b6 >


att_dispatch_client_can_send_now:
 1e0b3be:    ff f3 e0 fb       	goto -2112 <l2cap_can_send_fixed_channel_packet_now : 1e0ab82 >			  ## att_dispatch.c:154:0


att_dispatch_client_request_can_send_now_event:
 1e0b3c2:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:174:0
 1e0b3c8:    11 70             	r1 = 1			  ## att_dispatch.c:175:45
 1e0b3ca:    89 60             	b[r0 + 8] = r1			  ## att_dispatch.c:175:45
 1e0b3cc:    ff f3 d3 fb       	goto -2138 <l2cap_request_can_send_fix_channel_now_event : 1e0ab76 >			  ## att_dispatch.c:176:5


att_server_request_can_send_now_event:
 1e0b3d0:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:705:0
 1e0b3d6:    01 f9 38 00       	r1 = b[r0 + 56] (u)			  ## att_server.c:708:42
 1e0b3da:    11 b0             	r1 |= 1			  ## att_server.c:708:42
 1e0b3dc:    11 f9 38 00       	b[r0 + 56] = r1			  ## att_server.c:708:42
 1e0b3e0:    6e 1f             	goto -292 <att_dispatch_server_request_can_send_now_event : 1e0b2be >			  ## att_server.c:709:9


att_packet_handler:
 1e0b3e2:    79 01             	[--sp] = {rets, r9-r4}			  ## att_dispatch.c:80:0
 1e0b3e4:    39 08             	r9 = r3			  ## att_dispatch.c:80:0
 1e0b3e6:    25 08             	r5 = r2			  ## att_dispatch.c:80:0
 1e0b3e8:    16 08             	r6 = r1			  ## att_dispatch.c:80:0
 1e0b3ea:    c7 ff e0 1c 00 00 	r7 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:80:0
 1e0b3f0:    40 e0 0a 00       	if (r0 == 4) goto 20 <att_packet_handler+0x26 : 1e0b408 >			  ## att_dispatch.c:81:5
 1e0b3f4:    80 e0 2d 10       	if (r0 != 8) goto 90 <att_packet_handler+0x70 : 1e0b452 >
 1e0b3f8:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:84:13
 1e0b3fa:    20 f3 23 00       	if ((r0 & 1) != 0) goto 70 <att_packet_handler+0x62 : 1e0b444 >
 1e0b3fe:    14 4e             	r4 = [r7 + 4]			  ## att_dispatch.c:96:26
 1e0b400:    25 38             	if (r4 != 0) goto 74 <att_packet_handler+0x6A : 1e0b44c >			  ## att_dispatch.c:96:26
 1e0b402:    04 4e             	r4 = [r7 + 0]			  ## att_dispatch.c:98:30
 1e0b404:    23 38             	if (r4 != 0) goto 70 <att_packet_handler+0x6A : 1e0b44c >			  ## att_dispatch.c:98:30
 1e0b406:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1
 1e0b408:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:108:13
 1e0b40a:    80 e7 22 10       	if (r0 != 120) goto 68 <att_packet_handler+0x70 : 1e0b452 >
 1e0b40e:    08 f6 04 70       	r8 = [r7 + 4]			  ## att_dispatch.c:111:21
 1e0b412:    08 e0 09 00       	if (r8 == 0) goto 18 <att_packet_handler+0x46 : 1e0b428 >			  ## att_dispatch.c:111:21
 1e0b416:    90 6e             	r0 = b[r7 + 9] (u)			  ## att_dispatch.c:111:40
 1e0b418:    07 20             	if (r0 == 0) goto 14 <att_packet_handler+0x46 : 1e0b428 >			  ## att_dispatch.c:111:40
 1e0b41a:    00 70             	r0 = 0
 1e0b41c:    98 6e             	b[r7 + 9] = r0			  ## att_dispatch.c:112:53
 1e0b41e:    40 70             	r0 = 4			  ## att_dispatch.c:113:13
 1e0b420:    88 00             	call r8			  ## att_dispatch.c:113:13
 1e0b422:    bf f3 1f f9       	call -3522 <hci_can_send_acl_le_packet_now : 1e0a664 >			  ## att_dispatch.c:115:18
 1e0b426:    15 20             	if (r0 == 0) goto 42 <att_packet_handler+0x70 : 1e0b452 >			  ## att_dispatch.c:115:18
 1e0b428:    08 f6 00 70       	r8 = [r7 + 0]
 1e0b42c:    08 e0 11 00       	if (r8 == 0) goto 34 <att_packet_handler+0x70 : 1e0b452 >
 1e0b430:    80 6e             	r0 = b[r7 + 8] (u)
 1e0b432:    0f 20             	if (r0 == 0) goto 30 <att_packet_handler+0x70 : 1e0b452 >
 1e0b434:    00 70             	r0 = 0			  ## att_dispatch.c:120:53
 1e0b436:    88 6e             	b[r7 + 8] = r0			  ## att_dispatch.c:120:53
 1e0b438:    40 70             	r0 = 4			  ## att_dispatch.c:121:13
 1e0b43a:    61 08             	r1 = r6			  ## att_dispatch.c:121:13
 1e0b43c:    52 08             	r2 = r5			  ## att_dispatch.c:121:13
 1e0b43e:    93 08             	r3 = r9			  ## att_dispatch.c:121:13
 1e0b440:    88 00             	call r8			  ## att_dispatch.c:121:13
 1e0b442:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1
 1e0b444:    04 4e             	r4 = [r7 + 0]			  ## att_dispatch.c:86:17
 1e0b446:    02 38             	if (r4 != 0) goto 4 <att_packet_handler+0x6A : 1e0b44c >			  ## att_dispatch.c:86:17
 1e0b448:    14 4e             	r4 = [r7 + 4]			  ## att_dispatch.c:87:17
 1e0b44a:    03 28             	if (r4 == 0) goto 6 <att_packet_handler+0x70 : 1e0b452 >			  ## att_dispatch.c:87:17
 1e0b44c:    80 70             	r0 = 8
 1e0b44e:    84 00             	call r4
 1e0b450:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1
 1e0b452:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1


att_run_for_context:
 1e0b454:    34 00             	[--sp] = rets			  ## att_server.c:442:0
 1e0b456:    01 40             	r1 = [r0 + 0]			  ## att_server.c:443:25
 1e0b458:    11 e0 03 10       	if (r1 != 1) goto 6 <att_run_for_context+0xE : 1e0b462 >			  ## att_server.c:443:25
 1e0b45c:    c0 f4 03 09       	[r0 + 0] = 3			  ## att_server.c:489:27
 1e0b460:    2e 17             	call -420 <att_dispatch_server_request_can_send_now_event : 1e0b2be >			  ## att_server.c:490:9
 1e0b462:    30 00             	pc = [sp++]			  ## att_server.c:496:1


att_event_packet_handler:
 1e0b464:    76 01             	[--sp] = {rets, r6-r4}			  ## att_server.c:176:0
 1e0b466:    24 08             	r4 = r2			  ## att_server.c:176:0
 1e0b468:    40 e0 91 10       	if (r0 != 4) goto 290 <.GJTIE671_0_0_+0xDA : 1e0b58e >			  ## att_server.c:176:0
 1e0b46c:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:176:0
 1e0b46e:    d0 e3 19 c0       	ifs (r0 > 61) goto 50 <att_event_packet_handler+0x40 : 1e0b4a4 >			  ## att_server.c:191:9
 1e0b472:    50 e0 28 00       	if (r0 == 5) goto 80 <.GJTIE671_0_0_+0x12 : 1e0b4c6 >
 1e0b476:    80 e0 02 00       	if (r0 == 8) goto 4 <att_event_packet_handler+0x1A : 1e0b47e >
 1e0b47a:    00 e3 88 10       	if (r0 != 48) goto 272 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b47e:    31 70             	r1 = 3			  ## att_server.c:227:26
 1e0b480:    40 08             	r0 = r4			  ## att_server.c:227:26
 1e0b482:    bf f3 05 e6       	call -13302 <little_endian_read_16 : 1e08090 >			  ## att_server.c:227:26
 1e0b486:    04 08             	r4 = r0			  ## att_server.c:227:26
 1e0b488:    22 17             	call -444 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:228:26
 1e0b48a:    05 08             	r5 = r0			  ## att_server.c:228:26
 1e0b48c:    80 2a             	if (r5 == 0) goto 256 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b48e:    40 08             	r0 = r4			  ## att_server.c:232:58
 1e0b490:    bf f3 bd fe       	call -646 <sm_encryption_key_size : 1e0b20e >			  ## att_server.c:232:58
 1e0b494:    10 f9 32 50       	b[r5 + 50] = r0			  ## att_server.c:232:56
 1e0b498:    40 08             	r0 = r4			  ## att_server.c:233:52
 1e0b49a:    bf f3 c7 fe       	call -626 <sm_authenticated : 1e0b22c >			  ## att_server.c:233:52
 1e0b49e:    10 f9 33 50       	b[r5 + 51] = r0			  ## att_server.c:233:50
 1e0b4a2:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0b4a4:    01 fc 28 ff       	r1 = r0 + -216
 1e0b4a8:    41 e0 1d 80       	if (r1 > 4) goto 58 <.GJTIE671_0_0_+0x32 : 1e0b4e6 >
 1e0b4ac:    a1 00             	tbb [r1]


.GJTIS671_0_0_:
 1e0b4ae:    03     < 3 : 0x3 >
 1e0b4af:    49     < 73 : 0x49 >
 1e0b4b0:    55     < 85 : 0x55 >
 1e0b4b1:    70     < 112 : 0x70 >
 1e0b4b2:    66     < 102 : 0x66 >
 1e0b4b3:    00     < 0 : 0x0 >
 1e0b4b4:    21 70             	r1 = 2			  ## btstack_event.h:2856:16
 1e0b4b6:    40 08             	r0 = r4			  ## btstack_event.h:2856:16
 1e0b4b8:    bf f3 ea e5       	call -13356 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:2856:16
 1e0b4bc:    08 17             	call -496 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:252:26
 1e0b4be:    67 20             	if (r0 == 0) goto 206 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b4c0:    c4 f4 01 09       	[r0 + 16] = 1			  ## att_server.c:257:42
 1e0b4c4:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0b4c6:    c0 ff e6 26 e1 01 	r0 = 31532774 <update_target_end+0x24B6 : 1e126e6 >			  ## att_server.c:238:13
 1e0b4cc:    80 f3 4c 0d       	call 6808 <puts : 1e0cf68 >			  ## att_server.c:238:13
 1e0b4d0:    31 70             	r1 = 3			  ## btstack_event.h:324:16
 1e0b4d2:    40 08             	r0 = r4			  ## btstack_event.h:324:16
 1e0b4d4:    bf f3 dc e5       	call -13384 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:324:16
 1e0b4d8:    fa 16             	call -524 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:240:26
 1e0b4da:    59 20             	if (r0 == 0) goto 178 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b4dc:    01 70             	r1 = 0
 1e0b4de:    69 51             	h[r0 + 44] = r1			  ## att_server.c:245:47
 1e0b4e0:    59 40             	[r0 + 20] = r1			  ## att_server.c:246:49
 1e0b4e2:    09 40             	[r0 + 0] = r1			  ## att_server.c:247:31
 1e0b4e4:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0b4e6:    e0 e3 52 10       	if (r0 != 62) goto 164 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b4ea:    20 68             	r0 = b[r4 + 2] (u)			  ## att_server.c:194:21
 1e0b4ec:    10 e0 4f 10       	if (r0 != 1) goto 158 <.GJTIE671_0_0_+0xDA : 1e0b58e >			  ## att_server.c:194:21
 1e0b4f0:    41 70             	r1 = 4			  ## att_server.c:196:30
 1e0b4f2:    40 08             	r0 = r4			  ## att_server.c:196:30
 1e0b4f4:    bf f3 cc e5       	call -13416 <little_endian_read_16 : 1e08090 >			  ## att_server.c:196:30
 1e0b4f8:    06 08             	r6 = r0			  ## att_server.c:196:30
 1e0b4fa:    e9 16             	call -558 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:197:30
 1e0b4fc:    05 08             	r5 = r0			  ## att_server.c:197:30
 1e0b4fe:    47 2a             	if (r5 == 0) goto 142 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b500:    70 68             	r0 = b[r4 + 7] (u)			  ## att_server.c:202:46
 1e0b502:    48 6a             	b[r5 + 4] = r0			  ## att_server.c:202:44
 1e0b504:    80 98             	r0 = r4 + 8			  ## att_server.c:203:34
 1e0b506:    51 9a             	r1 = r5 + 5			  ## att_server.c:203:45
 1e0b508:    bf f3 a5 fd       	call -1206 <reverse_bd_addr : 1e0b056 >			  ## att_server.c:203:17
 1e0b50c:    6e 5b             	h[r5 + 44] = r6			  ## att_server.c:204:51
 1e0b50e:    02 70             	r2 = 0			  ## att_server.c:204:51
 1e0b510:    0a 4a             	[r5 + 0] = r2			  ## att_server.c:206:35
 1e0b512:    70 71             	r0 = 23			  ## att_server.c:207:44
 1e0b514:    78 5b             	h[r5 + 46] = r0			  ## att_server.c:207:44
 1e0b516:    bf f3 8c fb       	call -2280 <l2cap_max_le_mtu : 1e0ac32 >			  ## att_server.c:208:50
 1e0b51a:    03 ff 05 02 02 00 	if (r0 < 517) goto 4 <.GJTIE671_0_0_+0x70 : 1e0b524 >			  ## att_server.c:208:50
 1e0b520:    00 fb 05 02       	r0 = 517 <BTCTLER_CONTROLLER_BSS_SIZE+0x45 : 205 >			  ## att_server.c:209:21
 1e0b524:    88 5b             	h[r5 + 48] = r0			  ## att_server.c:208:48
 1e0b526:    50 fc 30 00       	r0 = r5 + 48			  ## att_server.c:208:48
 1e0b52a:    2a 60             	b[r0 + 2] = r2			  ## att_server.c:212:60
 1e0b52c:    3a 60             	b[r0 + 3] = r2			  ## att_server.c:213:54
 1e0b52e:    4a 60             	b[r0 + 4] = r2			  ## att_server.c:214:51
 1e0b530:    c3 f4 ff 5f       	[r5 + 12] = 4294967295			  ## att_server.c:215:51
 1e0b534:    00 f9 3d 52       	r0 = b[r5 + 573] (u)			  ## att_server.c:216:44
 1e0b538:    70 b0             	r0 &= 4294967294			  ## att_server.c:216:44
 1e0b53a:    10 f9 3d 52       	b[r5 + 573] = r0			  ## att_server.c:216:44
 1e0b53e:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0b540:    21 70             	r1 = 2			  ## btstack_event.h:2889:16
 1e0b542:    40 08             	r0 = r4			  ## btstack_event.h:2889:16
 1e0b544:    bf f3 a4 e5       	call -13496 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:2889:16
 1e0b548:    c2 16             	call -636 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:272:26
 1e0b54a:    21 20             	if (r0 == 0) goto 66 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b54c:    c4 f4 00 09       	[r0 + 16] = 0			  ## att_server.c:277:42
 1e0b550:    c3 f4 ff 0f       	[r0 + 12] = 4294967295			  ## att_server.c:278:47
 1e0b554:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:279:13
 1e0b556:    7e 1f             	goto -260 <att_run_for_context : 1e0b454 >			  ## att_server.c:279:13
 1e0b558:    21 70             	r1 = 2			  ## btstack_event.h:2922:16
 1e0b55a:    40 08             	r0 = r4			  ## btstack_event.h:2922:16
 1e0b55c:    bf f3 98 e5       	call -13520 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:2922:16
 1e0b560:    b6 16             	call -660 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:261:26
 1e0b562:    02 08             	r2 = r0			  ## att_server.c:261:26
 1e0b564:    14 24             	if (r2 == 0) goto 40 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b566:    c4 f4 00 29       	[r2 + 16] = 0			  ## att_server.c:265:42
 1e0b56a:    21 71             	r1 = 18			  ## btstack_event.h:2972:16
 1e0b56c:    40 08             	r0 = r4			  ## btstack_event.h:2972:16
 1e0b56e:    bf f3 8f e5       	call -13538 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:2972:16
 1e0b572:    38 44             	[r2 + 12] = r0			  ## att_server.c:266:47
 1e0b574:    20 08             	r0 = r2			  ## att_server.c:268:13
 1e0b576:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:268:13
 1e0b578:    6d 1f             	goto -294 <att_run_for_context : 1e0b454 >			  ## att_server.c:268:13
 1e0b57a:    21 70             	r1 = 2			  ## btstack_event.h:3018:16
 1e0b57c:    40 08             	r0 = r4			  ## btstack_event.h:3018:16
 1e0b57e:    bf f3 87 e5       	call -13554 <little_endian_read_16 : 1e08090 >			  ## btstack_event.h:3018:16
 1e0b582:    a5 16             	call -694 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:283:26
 1e0b584:    04 20             	if (r0 == 0) goto 8 <.GJTIE671_0_0_+0xDA : 1e0b58e >
 1e0b586:    b1 68             	r1 = b[r4 + 11] (u)			  ## btstack_event.h:3048:16
 1e0b588:    11 f9 34 00       	b[r0 + 52] = r1			  ## att_server.c:287:47
 1e0b58c:    98 16             	call -720 <att_dispatch_server_request_can_send_now_event : 1e0b2be >			  ## att_server.c:288:13
 1e0b58e:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1


att_emit_mtu_event:
 1e0b590:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:133:0
 1e0b592:    fc 0b             	sp += -8			  ## att_server.c:133:0
 1e0b594:    c5 ff e0 1c 00 00 	r5 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:133:0
 1e0b59a:    c4 4a             	r4 = [r5 + 48]			  ## att_server.c:134:18
 1e0b59c:    13 08             	r3 = r1			  ## att_server.c:134:18
 1e0b59e:    02 08             	r2 = r0
 1e0b5a0:    15 28             	if (r4 == 0) goto 42 <att_emit_mtu_event+0x3C : 1e0b5cc >
 1e0b5a2:    50 7b             	r0 = 181			  ## att_server.c:140:18
 1e0b5a4:    d0 f5 02 00       	b[sp+2] = r0			  ## att_server.c:140:18
 1e0b5a8:    40 70             	r0 = 4			  ## att_server.c:140:18
 1e0b5aa:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:141:18
 1e0b5ae:    24 a0             	r4 = sp + 2			  ## att_server.c:141:18
 1e0b5b0:    21 70             	r1 = 2			  ## att_server.c:142:5
 1e0b5b2:    40 08             	r0 = r4			  ## att_server.c:142:5
 1e0b5b4:    bf f3 e9 fa       	call -2606 <little_endian_store_16 : 1e0ab8a >			  ## att_server.c:142:5
 1e0b5b8:    41 70             	r1 = 4			  ## att_server.c:144:5
 1e0b5ba:    32 08             	r2 = r3			  ## att_server.c:144:5
 1e0b5bc:    bf f3 e5 fa       	call -2614 <little_endian_store_16 : 1e0ab8a >			  ## att_server.c:144:5
 1e0b5c0:    c5 4a             	r5 = [r5 + 48]			  ## att_server.c:145:13
 1e0b5c2:    40 70             	r0 = 4			  ## att_server.c:145:5
 1e0b5c4:    01 70             	r1 = 0			  ## att_server.c:145:5
 1e0b5c6:    63 70             	r3 = 6			  ## att_server.c:145:5
 1e0b5c8:    42 08             	r2 = r4			  ## att_server.c:145:5
 1e0b5ca:    85 00             	call r5			  ## att_server.c:145:5
 1e0b5cc:    04 0a             	sp += 8
 1e0b5ce:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:146:1


att_handle_value_indication_notify_client:
 1e0b5d0:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:116:0
 1e0b5d2:    fc 0b             	sp += -8			  ## att_server.c:116:0
 1e0b5d4:    c5 ff e0 1c 00 00 	r5 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:116:0
 1e0b5da:    c4 4a             	r4 = [r5 + 48]			  ## att_server.c:117:18
 1e0b5dc:    23 08             	r3 = r2			  ## att_server.c:117:18
 1e0b5de:    12 08             	r2 = r1
 1e0b5e0:    17 28             	if (r4 == 0) goto 46 <att_handle_value_indication_notify_client+0x40 : 1e0b610 >
 1e0b5e2:    61 7b             	r1 = 182			  ## att_server.c:123:18
 1e0b5e4:    d1 f5 01 00       	b[sp+1] = r1			  ## att_server.c:123:18
 1e0b5e8:    51 70             	r1 = 5			  ## att_server.c:123:18
 1e0b5ea:    d1 f5 02 00       	b[sp+2] = r1			  ## att_server.c:124:18
 1e0b5ee:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:125:18
 1e0b5f2:    14 a0             	r4 = sp + 1			  ## att_server.c:125:18
 1e0b5f4:    31 70             	r1 = 3			  ## att_server.c:126:5
 1e0b5f6:    40 08             	r0 = r4			  ## att_server.c:126:5
 1e0b5f8:    bf f3 c7 fa       	call -2674 <little_endian_store_16 : 1e0ab8a >			  ## att_server.c:126:5
 1e0b5fc:    51 70             	r1 = 5			  ## att_server.c:128:5
 1e0b5fe:    32 08             	r2 = r3			  ## att_server.c:128:5
 1e0b600:    bf f3 c3 fa       	call -2682 <little_endian_store_16 : 1e0ab8a >			  ## att_server.c:128:5
 1e0b604:    c5 4a             	r5 = [r5 + 48]			  ## att_server.c:129:13
 1e0b606:    40 70             	r0 = 4			  ## att_server.c:129:5
 1e0b608:    01 70             	r1 = 0			  ## att_server.c:129:5
 1e0b60a:    73 70             	r3 = 7			  ## att_server.c:129:5
 1e0b60c:    42 08             	r2 = r4			  ## att_server.c:129:5
 1e0b60e:    85 00             	call r5			  ## att_server.c:129:5
 1e0b610:    04 0a             	sp += 8
 1e0b612:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:130:1


att_packet_handler.1779:
 1e0b614:    7c 01             	[--sp] = {rets, r12-r4}			  ## att_server.c:562:0
 1e0b616:    f8 0b             	sp += -16			  ## att_server.c:562:0
 1e0b618:    35 08             	r5 = r3			  ## att_server.c:562:0
 1e0b61a:    24 08             	r4 = r2			  ## att_server.c:562:0
 1e0b61c:    80 e0 bd 00       	if (r0 == 8) goto 378 <att_packet_handler.1779+0x186 : 1e0b79a >			  ## att_server.c:566:5
 1e0b620:    40 e0 18 11       	if (r0 != 4) goto 560 <att_packet_handler.1779+0x240 : 1e0b854 >
 1e0b624:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:569:13
 1e0b626:    80 e7 15 11       	if (r0 != 120) goto 554 <att_packet_handler.1779+0x240 : 1e0b854 >
 1e0b62a:    00 a0             	r0 = sp + 0
 1e0b62c:    bf f3 db ec       	call -9802 <hci_connections_get_iterator : 1e08fe6 >			  ## att_server.c:507:5
 1e0b630:    bf f3 35 e5       	call -13718 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## att_server.c:508:12
 1e0b634:    cc ff e0 1c 00 00 	r12 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:508:12
 1e0b63a:    92 20             	if (r0 == 0) goto 292 <att_packet_handler.1779+0x14C : 1e0b760 >			  ## att_server.c:508:12
 1e0b63c:    cb ff 60 18 00 00 	r11 = 6240 <report_irq_stack_end : 1860 >
 1e0b642:    09 70             	r9 = 0
 1e0b644:    c8 ff 4a b2 e0 01 	r8 = 31502922 <search_ios_ancs_server : 1e0b24a >
 1e0b64a:    2a 70             	r10 = 2
 1e0b64c:    00 a0             	r0 = sp + 0
 1e0b64e:    bf f3 34 e5       	call -13720 <btstack_linked_list_iterator_next : 1e080ba >			  ## att_server.c:509:67
 1e0b652:    05 08             	r5 = r0			  ## att_server.c:509:67
 1e0b654:    00 f9 99 52       	r0 = b[r5 + 665] (u)			  ## att_server.c:511:25
 1e0b658:    20 f3 7e 00       	if ((r0 & 1) != 0) goto 252 <att_packet_handler.1779+0x144 : 1e0b758 >			  ## att_server.c:511:25
 1e0b65c:    54 fc 5c 00       	r4 = r5 + 92
 1e0b660:    01 48             	r1 = [r4 + 0]			  ## att_server.c:515:25
 1e0b662:    57 fc 98 02       	r7 = r5 + 664			  ## att_server.c:515:25
 1e0b666:    31 e0 1d 10       	if (r1 != 3) goto 58 <att_packet_handler.1779+0x90 : 1e0b6a4 >			  ## att_server.c:515:13
 1e0b66a:    bf f3 8c fa       	call -2792 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## att_server.c:391:5
 1e0b66e:    b2 59             	r2 = h[r4 + 54] (u)			  ## att_server.c:393:37
 1e0b670:    40 fc 2c 00       	r0 = r4 + 44			  ## att_server.c:393:69
 1e0b674:    46 fc 38 00       	r6 = r4 + 56			  ## att_server.c:393:81
 1e0b678:    b3 fc 10 00       	r3 = r11 + 16			  ## att_server.c:393:37
 1e0b67c:    61 08             	r1 = r6			  ## att_server.c:393:37
 1e0b67e:    bf f3 2e d3       	call -22948 <att_handle_request : 1e05cde >			  ## att_server.c:393:37
 1e0b682:    01 08             	r1 = r0			  ## att_server.c:393:37
 1e0b684:    41 e0 2a 30       	if (r1 < 4) goto 84 <att_packet_handler.1779+0xC8 : 1e0b6dc >			  ## att_server.c:397:9
 1e0b688:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:397:13
 1e0b68c:    10 e0 35 10       	if (r0 != 1) goto 106 <att_packet_handler.1779+0xE6 : 1e0b6fa >			  ## att_server.c:397:13
 1e0b690:    00 f9 14 b0       	r0 = b[r11 + 20] (u)			  ## att_server.c:398:9
 1e0b694:    80 e0 31 10       	if (r0 != 8) goto 98 <att_packet_handler.1779+0xE6 : 1e0b6fa >			  ## att_server.c:398:9
 1e0b698:    00 f9 8f 50       	r0 = b[r5 + 143] (u)			  ## att_server.c:399:36
 1e0b69c:    2e 20             	if (r0 == 0) goto 92 <att_packet_handler.1779+0xE6 : 1e0b6fa >			  ## att_server.c:399:36
 1e0b69e:    bf f3 e3 fc       	call -1594 <l2cap_release_packet_buffer : 1e0b068 >			  ## att_server.c:403:13
 1e0b6a2:    5a 18             	goto 180 <att_packet_handler.1779+0x144 : 1e0b758 >			  ## att_server.c:403:13
 1e0b6a4:    25 f3 58 00       	if ((r0 & 32) != 0) goto 176 <att_packet_handler.1779+0x144 : 1e0b758 >
 1e0b6a8:    21 f3 3d 00       	if ((r0 & 2) != 0) goto 122 <att_packet_handler.1779+0x112 : 1e0b726 >
 1e0b6ac:    20 fd 1c 09       	r0 = r0 & 28			  ## att_server.c:529:36
 1e0b6b0:    40 e0 52 10       	if (r0 != 4) goto 164 <att_packet_handler.1779+0x144 : 1e0b758 >			  ## att_server.c:529:36
 1e0b6b4:    bf f3 67 fa       	call -2866 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## att_server.c:368:10
 1e0b6b8:    4e 20             	if (r0 == 0) goto 156 <att_packet_handler.1779+0x142 : 1e0b756 >			  ## att_server.c:368:10
 1e0b6ba:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:373:5
 1e0b6be:    72 71             	r2 = 23			  ## att_server.c:373:5
 1e0b6c0:    81 08             	r1 = r8			  ## att_server.c:373:5
 1e0b6c2:    97 f3 0f dc       	call 3127326 <memcpy : 106ee4 >			  ## att_server.c:373:5
 1e0b6c6:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:375:9
 1e0b6c8:    71 71             	r1 = 23			  ## att_server.c:375:9
 1e0b6ca:    bf f3 66 fa       	call -2868 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## att_server.c:375:9
 1e0b6ce:    3b 30             	if (r0 != 0) goto 118 <att_packet_handler.1779+0x132 : 1e0b746 >			  ## att_server.c:375:9
 1e0b6d0:    10 6e             	r0 = b[r7 + 1] (u)			  ## att_server.c:380:34
 1e0b6d2:    20 fd c3 09       	r0 = r0 & 195			  ## att_server.c:380:34
 1e0b6d6:    00 fd 28 09       	r0 = r0 | 40			  ## att_server.c:531:46
 1e0b6da:    3c 18             	goto 120 <att_packet_handler.1779+0x140 : 1e0b754 >			  ## att_server.c:531:46
 1e0b6dc:    19 f6 00 40       	[r4 + 0] = r9			  ## att_server.c:416:23
 1e0b6e0:    0e 32             	if (r1 != 0) goto 28 <att_packet_handler.1779+0xEA : 1e0b6fe >			  ## att_server.c:416:23
 1e0b6e2:    bf f3 c1 fc       	call -1662 <l2cap_release_packet_buffer : 1e0b068 >			  ## att_server.c:419:9
 1e0b6e6:    00 6c             	r0 = b[r6 + 0] (u)			  ## att_server.c:422:13
 1e0b6e8:    30 e0 36 10       	if (r0 != 3) goto 108 <att_packet_handler.1779+0x144 : 1e0b758 >			  ## att_server.c:422:13
 1e0b6ec:    10 6e             	r0 = b[r7 + 1] (u)			  ## att_server.c:423:38
 1e0b6ee:    f0 b2             	r0 &= 4294967263			  ## att_server.c:423:38
 1e0b6f0:    18 6e             	b[r7 + 1] = r0			  ## att_server.c:423:38
 1e0b6f2:    71 59             	r1 = h[r4 + 46] (u)			  ## att_server.c:425:13
 1e0b6f4:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:425:13
 1e0b6f6:    4c 17             	call -360 <att_emit_mtu_event : 1e0b590 >			  ## att_server.c:425:13
 1e0b6f8:    2f 18             	goto 94 <att_packet_handler.1779+0x144 : 1e0b758 >			  ## att_server.c:425:13
 1e0b6fa:    19 f6 00 40       	[r4 + 0] = r9			  ## att_server.c:416:23
 1e0b6fe:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:430:5
 1e0b700:    bf f3 4b fa       	call -2922 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## att_server.c:430:5
 1e0b704:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:434:9
 1e0b708:    30 e0 03 10       	if (r0 != 3) goto 6 <att_packet_handler.1779+0xFE : 1e0b712 >			  ## att_server.c:434:9
 1e0b70c:    71 59             	r1 = h[r4 + 46] (u)			  ## att_server.c:436:9
 1e0b70e:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:436:9
 1e0b710:    3f 17             	call -386 <att_emit_mtu_event : 1e0b590 >			  ## att_server.c:436:9
 1e0b712:    00 f9 38 c0       	r0 = b[r12 + 56] (u)			  ## att_server.c:519:34
 1e0b716:    20 f3 3e 00       	if ((r0 & 1) != 0) goto 124 <att_packet_handler.1779+0x182 : 1e0b796 >			  ## att_server.c:519:34
 1e0b71a:    00 f6 34 c0       	r0 = [r12 + 52]
 1e0b71e:    bf f3 aa fc       	call -1708 <btstack_linked_list_empty : 1e0b076 >			  ## att_server.c:519:63
 1e0b722:    1a 30             	if (r0 != 0) goto 52 <att_packet_handler.1779+0x144 : 1e0b758 >			  ## att_server.c:519:63
 1e0b724:    38 18             	goto 112 <att_packet_handler.1779+0x182 : 1e0b796 >			  ## att_server.c:519:63
 1e0b726:    bf f3 2e fa       	call -2980 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## att_server.c:329:10
 1e0b72a:    15 20             	if (r0 == 0) goto 42 <att_packet_handler.1779+0x142 : 1e0b756 >			  ## att_server.c:329:10
 1e0b72c:    1a f9 10 b0       	b[r11 + 16] = r10			  ## att_server.c:333:16
 1e0b730:    82 59             	r2 = h[r4 + 48] (u)			  ## att_server.c:334:5
 1e0b732:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:333:16
 1e0b736:    11 70             	r1 = 1			  ## att_server.c:334:5
 1e0b738:    bf f3 27 fa       	call -2994 <little_endian_store_16 : 1e0ab8a >			  ## att_server.c:334:5
 1e0b73c:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:335:9
 1e0b73e:    31 70             	r1 = 3			  ## att_server.c:335:9
 1e0b740:    bf f3 2b fa       	call -2986 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## att_server.c:335:9
 1e0b744:    03 20             	if (r0 == 0) goto 6 <att_packet_handler.1779+0x138 : 1e0b74c >			  ## att_server.c:335:9
 1e0b746:    bf f3 8f fc       	call -1762 <l2cap_release_packet_buffer : 1e0b068 >
 1e0b74a:    05 18             	goto 10 <att_packet_handler.1779+0x142 : 1e0b756 >
 1e0b74c:    10 6e             	r0 = b[r7 + 1] (u)			  ## att_server.c:340:34
 1e0b74e:    20 fd dd 09       	r0 = r0 & 221			  ## att_server.c:340:34
 1e0b752:    90 b2             	r0 |= 32			  ## att_server.c:526:46
 1e0b754:    18 6e             	b[r7 + 1] = r0
 1e0b756:    b3 15             	call -1178 <att_dispatch_server_request_can_send_now_event : 1e0b2be >
 1e0b758:    00 a0             	r0 = sp + 0
 1e0b75a:    bf f3 a0 e4       	call -14016 <btstack_linked_list_iterator_has_next : 1e0809e >			  ## att_server.c:508:12
 1e0b75e:    76 31             	if (r0 != 0) goto -276 <att_packet_handler.1779+0x38 : 1e0b64c >
 1e0b760:    03 f6 34 c0       	r3 = [r12 + 52]
 1e0b764:    30 08             	r0 = r3			  ## att_server.c:538:13
 1e0b766:    bf f3 86 fc       	call -1780 <btstack_linked_list_empty : 1e0b076 >			  ## att_server.c:538:13
 1e0b76a:    45 30             	if (r0 != 0) goto 138 <att_packet_handler.1779+0x1E2 : 1e0b7f6 >			  ## att_server.c:538:13
 1e0b76c:    44 56             	r4 = h[r3 + 8] (u)			  ## att_server.c:546:14
 1e0b76e:    c0 fc 34 00       	r0 = r12 + 52			  ## att_server.c:542:9
 1e0b772:    31 08             	r1 = r3			  ## att_server.c:542:9
 1e0b774:    bf f3 77 e3       	call -14610 <btstack_linked_list_remove : 1e07e66 >			  ## att_server.c:542:9
 1e0b778:    20 46             	r0 = [r3 + 8]			  ## att_server.c:543:34
 1e0b77a:    11 46             	r1 = [r3 + 4]			  ## att_server.c:543:17
 1e0b77c:    81 00             	call r1			  ## att_server.c:543:9
 1e0b77e:    40 08             	r0 = r4			  ## att_server.c:546:14
 1e0b780:    b0 15             	call -1184 <att_dispatch_server_can_send_now : 1e0b2e2 >			  ## att_server.c:546:14
 1e0b782:    ee 31             	if (r0 != 0) goto -36 <att_packet_handler.1779+0x14C : 1e0b760 >			  ## att_server.c:546:14
 1e0b784:    00 f6 34 c0       	r0 = [r12 + 52]
 1e0b788:    bf f3 75 fc       	call -1814 <btstack_linked_list_empty : 1e0b076 >			  ## att_server.c:547:18
 1e0b78c:    04 20             	if (r0 == 0) goto 8 <att_packet_handler.1779+0x182 : 1e0b796 >			  ## att_server.c:547:18
 1e0b78e:    00 f9 38 c0       	r0 = b[r12 + 56] (u)			  ## att_server.c:547:77
 1e0b792:    00 f3 5f 00       	if ((r0 & 1) == 0) goto 190 <att_packet_handler.1779+0x240 : 1e0b854 >			  ## att_server.c:547:77
 1e0b796:    93 15             	call -1242 <att_dispatch_server_request_can_send_now_event : 1e0b2be >
 1e0b798:    5d 18             	goto 186 <att_packet_handler.1779+0x240 : 1e0b854 >
 1e0b79a:    10 08             	r0 = r1			  ## att_server.c:577:22
 1e0b79c:    98 15             	call -1232 <att_server_for_handle : 1e0b2ce >			  ## att_server.c:577:22
 1e0b79e:    06 08             	r6 = r0			  ## att_server.c:577:22
 1e0b7a0:    59 2c             	if (r6 == 0) goto 178 <att_packet_handler.1779+0x240 : 1e0b854 >
 1e0b7a2:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:584:13
 1e0b7a4:    20 e5 3a 00       	if (r0 == 82) goto 116 <att_packet_handler.1779+0x208 : 1e0b81c >			  ## att_server.c:584:56
 1e0b7a8:    e0 e1 0b 10       	if (r0 != 30) goto 22 <att_packet_handler.1779+0x1AE : 1e0b7c2 >
 1e0b7ac:    51 4c             	r1 = [r6 + 20]			  ## att_server.c:584:71
 1e0b7ae:    09 22             	if (r1 == 0) goto 18 <att_packet_handler.1779+0x1AE : 1e0b7c2 >			  ## att_server.c:584:71
 1e0b7b0:    70 4c             	r0 = [r6 + 28]
 1e0b7b2:    bf f3 bc f7       	call -4232 <btstack_run_loop_remove_timer : 1e0a72e >			  ## att_server.c:160:5
 1e0b7b6:    a2 5c             	r2 = h[r6 + 20] (u)			  ## att_server.c:588:13
 1e0b7b8:    00 70             	r0 = 0			  ## att_server.c:588:13
 1e0b7ba:    58 4c             	[r6 + 20] = r0			  ## att_server.c:587:49
 1e0b7bc:    61 5d             	r1 = h[r6 + 44] (u)			  ## att_server.c:588:13
 1e0b7be:    08 17             	call -496 <att_handle_value_indication_notify_client : 1e0b5d0 >			  ## att_server.c:588:13
 1e0b7c0:    49 18             	goto 146 <att_packet_handler.1779+0x240 : 1e0b854 >			  ## att_server.c:588:13
 1e0b7c2:    08 ff 05 52 46 00 	if (r5 > 517) goto 140 <att_packet_handler.1779+0x240 : 1e0b854 >
 1e0b7c8:    01 4c             	r1 = [r6 + 0]			  ## att_server.c:607:25
 1e0b7ca:    44 32             	if (r1 != 0) goto 136 <att_packet_handler.1779+0x240 : 1e0b854 >			  ## att_server.c:607:25
 1e0b7cc:    61 fc 3c 02       	r1 = r6 + 572
 1e0b7d0:    12 62             	r2 = b[r1 + 1] (u)			  ## att_server.c:612:30
 1e0b7d2:    23 fd 1c 29       	r3 = r2 & 28			  ## att_server.c:612:30
 1e0b7d6:    83 e0 32 10       	if (r3 != 8) goto 100 <att_packet_handler.1779+0x22A : 1e0b83e >			  ## att_server.c:612:30
 1e0b7da:    10 e0 27 00       	if (r0 == 1) goto 78 <att_packet_handler.1779+0x218 : 1e0b82c >			  ## att_server.c:613:13
 1e0b7de:    70 e0 2e 10       	if (r0 != 7) goto 92 <att_packet_handler.1779+0x22A : 1e0b83e >
 1e0b7e2:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:617:46
 1e0b7e6:    00 fd 14 09       	r0 = r0 | 20			  ## att_server.c:617:46
 1e0b7ea:    18 62             	b[r1 + 1] = r0			  ## att_server.c:618:42
 1e0b7ec:    12 42             	r2 = [r1 + 4]			  ## att_server.c:619:33
 1e0b7ee:    27 24             	if (r2 == 0) goto 78 <att_packet_handler.1779+0x22A : 1e0b83e >			  ## att_server.c:619:33
 1e0b7f0:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:620:21
 1e0b7f2:    21 70             	r1 = 2			  ## att_server.c:620:21
 1e0b7f4:    23 18             	goto 70 <att_packet_handler.1779+0x228 : 1e0b83c >			  ## att_server.c:620:21
 1e0b7f6:    00 f9 38 c0       	r0 = b[r12 + 56] (u)			  ## att_server.c:554:17
 1e0b7fa:    00 f3 2b 00       	if ((r0 & 1) == 0) goto 86 <att_packet_handler.1779+0x240 : 1e0b854 >			  ## att_server.c:554:17
 1e0b7fe:    70 b0             	r0 &= 4294967294			  ## att_server.c:555:42
 1e0b800:    10 f9 38 c0       	b[r12 + 56] = r0			  ## att_server.c:555:42
 1e0b804:    04 f6 30 c0       	r4 = [r12 + 48]			  ## att_server.c:150:18
 1e0b808:    25 28             	if (r4 == 0) goto 74 <att_packet_handler.1779+0x240 : 1e0b854 >			  ## att_server.c:150:18
 1e0b80a:    70 7b             	r0 = 183			  ## att_server.c:154:13
 1e0b80c:    90 f5 0e 00       	h[sp+14] = r0			  ## att_server.c:154:13
 1e0b810:    e2 a0             	r2 = sp + 14			  ## att_server.c:154:13
 1e0b812:    40 70             	r0 = 4			  ## att_server.c:155:5
 1e0b814:    01 70             	r1 = 0			  ## att_server.c:155:5
 1e0b816:    23 70             	r3 = 2			  ## att_server.c:155:5
 1e0b818:    84 00             	call r4			  ## att_server.c:155:5
 1e0b81a:    1c 18             	goto 56 <att_packet_handler.1779+0x240 : 1e0b854 >			  ## att_server.c:155:5
 1e0b81c:    60 fc 2c 00       	r0 = r6 + 44			  ## att_server.c:596:45
 1e0b820:    03 70             	r3 = 0			  ## att_server.c:596:13
 1e0b822:    41 08             	r1 = r4			  ## att_server.c:596:13
 1e0b824:    52 08             	r2 = r5			  ## att_server.c:596:13
 1e0b826:    bf f3 5a d2       	call -23372 <att_handle_request : 1e05cde >			  ## att_server.c:596:13
 1e0b82a:    14 18             	goto 40 <att_packet_handler.1779+0x240 : 1e0b854 >			  ## att_server.c:596:13
 1e0b82c:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:627:46
 1e0b830:    10 b2             	r0 |= 16			  ## att_server.c:627:46
 1e0b832:    18 62             	b[r1 + 1] = r0			  ## att_server.c:628:42
 1e0b834:    12 42             	r2 = [r1 + 4]			  ## att_server.c:629:33
 1e0b836:    03 24             	if (r2 == 0) goto 6 <att_packet_handler.1779+0x22A : 1e0b83e >			  ## att_server.c:629:33
 1e0b838:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:630:21
 1e0b83a:    11 70             	r1 = 1			  ## att_server.c:630:21
 1e0b83c:    82 00             	call r2
 1e0b83e:    c0 f4 01 69       	[r6 + 0] = 1			  ## att_server.c:640:27
 1e0b842:    bd 5d             	h[r6 + 54] = r5			  ## att_server.c:641:34
 1e0b844:    60 fc 38 00       	r0 = r6 + 56			  ## att_server.c:642:9
 1e0b848:    41 08             	r1 = r4			  ## att_server.c:642:9
 1e0b84a:    52 08             	r2 = r5			  ## att_server.c:642:9
 1e0b84c:    97 f3 4a db       	call 3126932 <memcpy : 106ee4 >			  ## att_server.c:642:9
 1e0b850:    60 08             	r0 = r6			  ## att_server.c:644:9
 1e0b852:    00 16             	call -1024 <att_run_for_context : 1e0b454 >			  ## att_server.c:644:9
 1e0b854:    08 0a             	sp += 16
 1e0b856:    5c 01             	{pc, r12-r4} = [sp++]			  ## att_server.c:647:1


att_handle_value_indication_timeout:
 1e0b858:    34 00             	[--sp] = rets			  ## att_server.c:164:0
 1e0b85a:    40 40             	r0 = [r0 + 16]			  ## att_server.c:165:52
 1e0b85c:    04 20             	if (r0 == 0) goto 8 <att_handle_value_indication_timeout+0xE : 1e0b866 >
 1e0b85e:    61 51             	r1 = h[r0 + 44] (u)			  ## att_server.c:172:5
 1e0b860:    a2 50             	r2 = h[r0 + 20] (u)			  ## att_server.c:172:5
 1e0b862:    10 79             	r0 = 145			  ## att_server.c:172:5
 1e0b864:    b5 16             	call -662 <att_handle_value_indication_notify_client : 1e0b5d0 >			  ## att_server.c:172:5
 1e0b866:    30 00             	pc = [sp++]			  ## att_server.c:173:1


provide_context_for_conn_handle:
 1e0b868:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:217:0
 1e0b86a:    c5 ff 1c 1d 00 00 	r5 = 7452 <gatt_client_global_info : 1d1c >			  ## gatt_client.c:217:0
 1e0b870:    04 4a             	r4 = [r5 + 0]			  ## gatt_client.c:217:0
 1e0b872:    06 08             	r6 = r0			  ## gatt_client.c:217:0
 1e0b874:    05 28             	if (r4 == 0) goto 10 <provide_context_for_conn_handle+0x18 : 1e0b880 >			  ## gatt_client.c:217:0
 1e0b876:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:206:25
 1e0b878:    60 f2 1a 00       	if (r0 == r6) goto 52 <provide_context_for_conn_handle+0x48 : 1e0b8b0 >			  ## gatt_client.c:206:25
 1e0b87c:    04 48             	r4 = [r4 + 0]
 1e0b87e:    fb 39             	if (r4 != 0) goto -10 <provide_context_for_conn_handle+0xE : 1e0b876 >
 1e0b880:    bf f3 cc f9       	call -3176 <btstack_memory_gatt_client_get : 1e0ac1c >			  ## gatt_client.c:223:15
 1e0b884:    04 08             	r4 = r0			  ## gatt_client.c:223:15
 1e0b886:    13 28             	if (r4 == 0) goto 38 <provide_context_for_conn_handle+0x46 : 1e0b8ae >			  ## gatt_client.c:223:15
 1e0b888:    01 70             	r1 = 0			  ## gatt_client.c:228:5
 1e0b88a:    02 78             	r2 = 128			  ## gatt_client.c:228:5
 1e0b88c:    07 70             	r7 = 0			  ## gatt_client.c:228:5
 1e0b88e:    97 f3 2f db       	call 3126878 <memset : 106ef0 >			  ## gatt_client.c:228:5
 1e0b892:    6e 58             	h[r4 + 12] = r6			  ## gatt_client.c:229:25
 1e0b894:    70 71             	r0 = 23			  ## gatt_client.c:230:18
 1e0b896:    b8 58             	h[r4 + 22] = r0			  ## gatt_client.c:230:18
 1e0b898:    6f 48             	[r4 + 24] = r7			  ## gatt_client.c:231:24
 1e0b89a:    1f 48             	[r4 + 4] = r7			  ## gatt_client.c:232:32
 1e0b89c:    50 08             	r0 = r5			  ## gatt_client.c:233:5
 1e0b89e:    41 08             	r1 = r4			  ## gatt_client.c:233:5
 1e0b8a0:    bf f3 d4 ed       	call -9304 <btstack_linked_list_add : 1e0944c >			  ## gatt_client.c:233:5
 1e0b8a4:    40 6b             	r0 = b[r5 + 20] (u)			  ## gatt_client.c:236:17
 1e0b8a6:    04 20             	if (r0 == 0) goto 8 <provide_context_for_conn_handle+0x48 : 1e0b8b0 >			  ## gatt_client.c:236:17
 1e0b8a8:    c6 f4 02 49       	[r4 + 24] = 2			  ## gatt_client.c:237:28
 1e0b8ac:    01 18             	goto 2 <provide_context_for_conn_handle+0x48 : 1e0b8b0 >			  ## gatt_client.c:237:28
 1e0b8ae:    04 70             	r4 = 0
 1e0b8b0:    40 08             	r0 = r4			  ## gatt_client.c:240:1
 1e0b8b2:    57 01             	{pc, r7-r4} = [sp++]			  ## gatt_client.c:240:1


peripheral_mtu:
 1e0b8b4:    34 00             	[--sp] = rets			  ## gatt_client.c:146:0
 1e0b8b6:    02 08             	r2 = r0			  ## gatt_client.c:146:0
 1e0b8b8:    a3 04             	r3 = r2.l (u)			  ## gatt_client.c:146:0
 1e0b8ba:    bf f3 ba f9       	call -3212 <l2cap_max_le_mtu : 1e0ac32 >			  ## gatt_client.c:147:27
 1e0b8be:    30 f2 01 30       	if (r0 < r3) goto 2 <peripheral_mtu+0x10 : 1e0b8c4 >			  ## gatt_client.c:147:27
 1e0b8c2:    20 08             	r0 = r2			  ## gatt_client.c:147:9
 1e0b8c4:    20 04             	r0 = r0.l (u)			  ## gatt_client.c:152:1
 1e0b8c6:    30 00             	pc = [sp++]			  ## gatt_client.c:152:1


att_write_request:
 1e0b8c8:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:406:0
 1e0b8ca:    34 08             	r4 = r3			  ## gatt_client.c:406:0
 1e0b8cc:    23 08             	r3 = r2			  ## gatt_client.c:406:0
 1e0b8ce:    15 08             	r5 = r1			  ## gatt_client.c:406:0
 1e0b8d0:    06 08             	r6 = r0			  ## gatt_client.c:406:0
 1e0b8d2:    bf f3 58 f9       	call -3408 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:407:5
 1e0b8d6:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:411:5
 1e0b8dc:    0e 6f             	b[r7 + 16] = r6			  ## gatt_client.c:409:16
 1e0b8de:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:409:16
 1e0b8e0:    11 70             	r1 = 1			  ## gatt_client.c:410:5
 1e0b8e2:    32 08             	r2 = r3			  ## gatt_client.c:410:5
 1e0b8e4:    bf f3 51 f9       	call -3422 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:410:5
 1e0b8e8:    51 02             	r1 = [sp+20]
 1e0b8ea:    30 9f             	r0 = r7 + 19			  ## gatt_client.c:411:5
 1e0b8ec:    42 08             	r2 = r4			  ## gatt_client.c:411:5
 1e0b8ee:    97 f3 f9 da       	call 3126770 <memcpy : 106ee4 >			  ## gatt_client.c:411:5
 1e0b8f2:    30 98             	r0 = r4 + 3			  ## gatt_client.c:413:91
 1e0b8f4:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:413:5
 1e0b8f6:    50 08             	r0 = r5			  ## gatt_client.c:413:5
 1e0b8f8:    17 01             	{rets, r7-r4} = [sp++]			  ## gatt_client.c:413:5
 1e0b8fa:    ff f3 4e f9       	goto -3428 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:413:5


gatt_client_write_value_of_characteristic_without_response:
 1e0b8fe:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:2053:0
 1e0b900:    fe 0b             	sp += -4			  ## gatt_client.c:2053:0
 1e0b902:    35 08             	r5 = r3			  ## gatt_client.c:2053:0
 1e0b904:    24 08             	r4 = r2			  ## gatt_client.c:2053:0
 1e0b906:    16 08             	r6 = r1			  ## gatt_client.c:2053:0
 1e0b908:    af 17             	call -162 <provide_context_for_conn_handle : 1e0b868 >			  ## gatt_client.c:2054:33
 1e0b90a:    07 08             	r7 = r0			  ## gatt_client.c:2054:33
 1e0b90c:    16 2e             	if (r7 == 0) goto 44 <gatt_client_write_value_of_characteristic_without_response+0x3C : 1e0b93a >
 1e0b90e:    11 4e             	r1 = [r7 + 4]			  ## gatt_client.c:254:21
 1e0b910:    50 79             	r0 = 149			  ## gatt_client.c:254:21
 1e0b912:    14 32             	if (r1 != 0) goto 40 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0b93c >			  ## gatt_client.c:254:21
 1e0b914:    b0 5e             	r0 = h[r7 + 22] (u)			  ## gatt_client.c:2067:24
 1e0b916:    ce 17             	call -100 <peripheral_mtu : 1e0b8b4 >			  ## gatt_client.c:2067:24
 1e0b918:    01 fc fd ff       	r1 = r0 + -3			  ## gatt_client.c:2067:51
 1e0b91c:    70 79             	r0 = 151			  ## gatt_client.c:2067:51
 1e0b91e:    14 f2 0d c0       	ifs (r4 > r1) goto 26 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0b93c >			  ## gatt_client.c:2067:51
 1e0b922:    60 5e             	r0 = h[r7 + 12] (u)			  ## gatt_client.c:2070:10
 1e0b924:    bf f3 4b fd       	call -1386 <att_dispatch_client_can_send_now : 1e0b3be >			  ## gatt_client.c:2070:10
 1e0b928:    0b 20             	if (r0 == 0) goto 22 <gatt_client_write_value_of_characteristic_without_response+0x42 : 1e0b940 >			  ## gatt_client.c:2070:10
 1e0b92a:    61 5e             	r1 = h[r7 + 12] (u)			  ## gatt_client.c:2074:5
 1e0b92c:    20 75             	r0 = 82			  ## gatt_client.c:2074:5
 1e0b92e:    0d 02             	[sp] = r5			  ## gatt_client.c:2074:5
 1e0b930:    62 08             	r2 = r6			  ## gatt_client.c:2074:5
 1e0b932:    43 08             	r3 = r4			  ## gatt_client.c:2074:5
 1e0b934:    c9 17             	call -110 <att_write_request : 1e0b8c8 >			  ## gatt_client.c:2074:5
 1e0b936:    00 70             	r0 = 0			  ## gatt_client.c:2074:5
 1e0b938:    01 18             	goto 2 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0b93c >			  ## gatt_client.c:2074:5
 1e0b93a:    60 75             	r0 = 86
 1e0b93c:    02 0a             	sp += 4
 1e0b93e:    57 01             	{pc, r7-r4} = [sp++]			  ## gatt_client.c:2076:1
 1e0b940:    40 79             	r0 = 148
 1e0b942:    fc 1f             	goto -8 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0b93c >


gatt_client_timeout_stop:
 1e0b944:    90 41             	r0 = [r0 + 100]			  ## gatt_client.c:183:0
 1e0b946:    ff f3 f2 f6       	goto -4636 <btstack_run_loop_remove_timer : 1e0a72e >			  ## gatt_client.c:185:5


provide_context_for_conn_handle_and_start_timer:
 1e0b94a:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:243:0
 1e0b94c:    8d 17             	call -230 <provide_context_for_conn_handle : 1e0b868 >			  ## gatt_client.c:244:30
 1e0b94e:    04 08             	r4 = r0			  ## gatt_client.c:244:30
 1e0b950:    11 28             	if (r4 == 0) goto 34 <provide_context_for_conn_handle_and_start_timer+0x2A : 1e0b974 >
 1e0b952:    f8 17             	call -16 <gatt_client_timeout_stop : 1e0b944 >			  ## gatt_client.c:191:5
 1e0b954:    00 70             	r0 = 0			  ## gatt_client.c:193:5
 1e0b956:    98 49             	[r4 + 100] = r0			  ## gatt_client.c:193:5
 1e0b958:    88 49             	[r4 + 96] = r0			  ## gatt_client.c:193:5
 1e0b95a:    da f4 1e 49       	[r4 + 104] = 30			  ## gatt_client.c:194:45
 1e0b95e:    c0 ff f2 bf e0 01 	r0 = 31506418 <gatt_client_timeout_handler : 1e0bff2 >			  ## gatt_client.c:195:36
 1e0b964:    b8 49             	[r4 + 108] = r0			  ## gatt_client.c:195:36
 1e0b966:    cc 49             	[r4 + 112] = r4			  ## gatt_client.c:196:36
 1e0b968:    40 fc 60 00       	r0 = r4 + 96			  ## gatt_client.c:193:25
 1e0b96c:    31 78             	r1 = 131			  ## gatt_client.c:197:5
 1e0b96e:    bf f3 37 f9       	call -3474 <btstack_set_timer : 1e0abe0 >			  ## gatt_client.c:197:5
 1e0b972:    01 18             	goto 2 <provide_context_for_conn_handle_and_start_timer+0x2C : 1e0b976 >			  ## gatt_client.c:197:5
 1e0b974:    04 70             	r4 = 0
 1e0b976:    40 08             	r0 = r4			  ## gatt_client.c:250:1
 1e0b978:    54 01             	{pc, r4} = [sp++]			  ## gatt_client.c:250:1


emit_gatt_complete_event:
 1e0b97a:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:659:0
 1e0b97c:    fc 0b             	sp += -8			  ## gatt_client.c:659:0
 1e0b97e:    03 08             	r3 = r0			  ## gatt_client.c:659:0
 1e0b980:    00 7a             	r0 = 160			  ## gatt_client.c:662:15
 1e0b982:    d0 f5 03 00       	b[sp+3] = r0			  ## gatt_client.c:662:15
 1e0b986:    30 70             	r0 = 3			  ## gatt_client.c:663:15
 1e0b988:    d0 f5 04 00       	b[sp+4] = r0			  ## gatt_client.c:663:15
 1e0b98c:    62 56             	r2 = h[r3 + 12] (u)			  ## gatt_client.c:664:5
 1e0b98e:    14 08             	r4 = r1			  ## gatt_client.c:664:5
 1e0b990:    30 a0             	r0 = sp + 3
 1e0b992:    21 70             	r1 = 2			  ## gatt_client.c:664:5
 1e0b994:    bf f3 f9 f8       	call -3598 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:664:5
 1e0b998:    d4 f5 07 00       	b[sp+7] = r4			  ## gatt_client.c:665:15
 1e0b99c:    24 46             	r4 = [r3 + 8]			  ## gatt_client.c:666:32
 1e0b99e:    05 28             	if (r4 == 0) goto 10 <emit_gatt_complete_event+0x30 : 1e0b9aa >
 1e0b9a0:    32 a0             	r2 = sp + 3
 1e0b9a2:    40 70             	r0 = 4			  ## gatt_client.c:624:5
 1e0b9a4:    01 70             	r1 = 0			  ## gatt_client.c:624:5
 1e0b9a6:    53 70             	r3 = 5			  ## gatt_client.c:624:5
 1e0b9a8:    84 00             	call r4			  ## gatt_client.c:624:5
 1e0b9aa:    04 0a             	sp += 8
 1e0b9ac:    54 01             	{pc, r4} = [sp++]			  ## gatt_client.c:667:1


att_read_by_type_or_group_request_for_uuid16:
 1e0b9ae:    76 01             	[--sp] = {rets, r6-r4}			  ## gatt_client.c:328:0
 1e0b9b0:    24 08             	r4 = r2			  ## gatt_client.c:328:0
 1e0b9b2:    15 08             	r5 = r1			  ## gatt_client.c:328:0
 1e0b9b4:    06 08             	r6 = r0			  ## gatt_client.c:328:0
 1e0b9b6:    bf f3 e6 f8       	call -3636 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:329:5
 1e0b9ba:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:331:16
 1e0b9c0:    0e 61             	b[r0 + 16] = r6			  ## gatt_client.c:331:16
 1e0b9c2:    00 81             	r0 += 16			  ## gatt_client.c:331:16
 1e0b9c4:    11 70             	r1 = 1			  ## gatt_client.c:332:5
 1e0b9c6:    32 08             	r2 = r3			  ## gatt_client.c:332:5
 1e0b9c8:    bf f3 df f8       	call -3650 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:332:5
 1e0b9cc:    42 02             	r2 = [sp+16]
 1e0b9ce:    31 70             	r1 = 3			  ## gatt_client.c:333:5
 1e0b9d0:    bf f3 db f8       	call -3658 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:333:5
 1e0b9d4:    51 70             	r1 = 5			  ## gatt_client.c:334:5
 1e0b9d6:    52 08             	r2 = r5			  ## gatt_client.c:334:5
 1e0b9d8:    bf f3 d7 f8       	call -3666 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:334:5
 1e0b9dc:    71 70             	r1 = 7			  ## gatt_client.c:336:5
 1e0b9de:    40 08             	r0 = r4			  ## gatt_client.c:336:5
 1e0b9e0:    16 01             	{rets, r6-r4} = [sp++]			  ## gatt_client.c:336:5
 1e0b9e2:    ff f3 da f8       	goto -3660 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:336:5


att_find_by_type_value_request:
 1e0b9e6:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:300:0
 1e0b9e8:    25 08             	r5 = r2			  ## gatt_client.c:300:0
 1e0b9ea:    16 08             	r6 = r1			  ## gatt_client.c:300:0
 1e0b9ec:    04 08             	r4 = r0			  ## gatt_client.c:300:0
 1e0b9ee:    bf f3 ca f8       	call -3692 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:301:5
 1e0b9f2:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:308:5
 1e0b9f8:    60 70             	r0 = 6			  ## gatt_client.c:304:16
 1e0b9fa:    08 6f             	b[r7 + 16] = r0			  ## gatt_client.c:304:16
 1e0b9fc:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:304:16
 1e0b9fe:    11 70             	r1 = 1			  ## gatt_client.c:305:5
 1e0ba00:    62 08             	r2 = r6			  ## gatt_client.c:305:5
 1e0ba02:    bf f3 c2 f8       	call -3708 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:305:5
 1e0ba06:    31 70             	r1 = 3			  ## gatt_client.c:306:5
 1e0ba08:    52 08             	r2 = r5			  ## gatt_client.c:306:5
 1e0ba0a:    bf f3 be f8       	call -3716 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:306:5
 1e0ba0e:    51 70             	r1 = 5			  ## gatt_client.c:307:5
 1e0ba10:    02 fb 00 28       	r2 = 10240 <lrc.7+0xC : 2800 >			  ## gatt_client.c:307:5
 1e0ba14:    bf f3 b9 f8       	call -3726 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:307:5
 1e0ba18:    55 02             	r5 = [sp+20]			  ## gatt_client.c:307:5
 1e0ba1a:    70 9f             	r0 = r7 + 23			  ## gatt_client.c:308:5
 1e0ba1c:    31 08             	r1 = r3			  ## gatt_client.c:308:5
 1e0ba1e:    52 08             	r2 = r5			  ## gatt_client.c:308:5
 1e0ba20:    97 f3 60 da       	call 3126464 <memcpy : 106ee4 >			  ## gatt_client.c:308:5
 1e0ba24:    70 9a             	r0 = r5 + 7			  ## gatt_client.c:310:91
 1e0ba26:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:310:5
 1e0ba28:    40 08             	r0 = r4			  ## gatt_client.c:310:5
 1e0ba2a:    17 01             	{rets, r7-r4} = [sp++]			  ## gatt_client.c:310:5
 1e0ba2c:    ff f3 b5 f8       	goto -3734 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:310:5


att_read_by_type_or_group_request_for_uuid128:
 1e0ba30:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:341:0
 1e0ba32:    24 08             	r4 = r2			  ## gatt_client.c:341:0
 1e0ba34:    15 08             	r5 = r1			  ## gatt_client.c:341:0
 1e0ba36:    06 08             	r6 = r0			  ## gatt_client.c:341:0
 1e0ba38:    bf f3 a5 f8       	call -3766 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:342:5
 1e0ba3c:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:347:5
 1e0ba42:    80 70             	r0 = 8			  ## gatt_client.c:344:16
 1e0ba44:    08 6f             	b[r7 + 16] = r0			  ## gatt_client.c:344:16
 1e0ba46:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:344:16
 1e0ba48:    11 70             	r1 = 1			  ## gatt_client.c:345:5
 1e0ba4a:    42 08             	r2 = r4			  ## gatt_client.c:345:5
 1e0ba4c:    bf f3 9d f8       	call -3782 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:345:5
 1e0ba50:    31 70             	r1 = 3			  ## gatt_client.c:346:5
 1e0ba52:    32 08             	r2 = r3			  ## gatt_client.c:346:5
 1e0ba54:    bf f3 99 f8       	call -3790 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:346:5
 1e0ba58:    51 9f             	r1 = r7 + 21			  ## gatt_client.c:347:5
 1e0ba5a:    60 08             	r0 = r6			  ## gatt_client.c:347:5
 1e0ba5c:    bf f3 f2 f8       	call -3612 <reverse_128 : 1e0ac44 >			  ## gatt_client.c:347:5
 1e0ba60:    51 71             	r1 = 21			  ## gatt_client.c:349:5
 1e0ba62:    50 08             	r0 = r5			  ## gatt_client.c:349:5
 1e0ba64:    17 01             	{rets, r7-r4} = [sp++]			  ## gatt_client.c:349:5
 1e0ba66:    ff f3 98 f8       	goto -3792 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:349:5


send_gatt_characteristic_request:
 1e0ba6a:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:511:0
 1e0ba6c:    fe 0b             	sp += -4			  ## gatt_client.c:511:0
 1e0ba6e:    01 f9 50 00       	r1 = b[r0 + 80] (u)			  ## gatt_client.c:512:21
 1e0ba72:    09 22             	if (r1 == 0) goto 18 <send_gatt_characteristic_request+0x1C : 1e0ba86 >			  ## gatt_client.c:512:21
 1e0ba74:    84 51             	r4 = h[r0 + 48] (u)			  ## gatt_client.c:516:174
 1e0ba76:    73 51             	r3 = h[r0 + 46] (u)			  ## gatt_client.c:516:142
 1e0ba78:    e1 50             	r1 = h[r0 + 28] (u)			  ## gatt_client.c:515:25
 1e0ba7a:    62 50             	r2 = h[r0 + 12] (u)			  ## gatt_client.c:516:118
 1e0ba7c:    21 22             	if (r1 == 0) goto 66 <send_gatt_characteristic_request+0x56 : 1e0bac0 >			  ## gatt_client.c:516:118
 1e0ba7e:    80 70             	r0 = 8			  ## gatt_client.c:518:13
 1e0ba80:    0c 02             	[sp] = r4			  ## gatt_client.c:518:13
 1e0ba82:    95 17             	call -214 <att_read_by_type_or_group_request_for_uuid16 : 1e0b9ae >			  ## gatt_client.c:518:13
 1e0ba84:    22 18             	goto 68 <send_gatt_characteristic_request+0x60 : 1e0baca >			  ## gatt_client.c:518:13
 1e0ba86:    63 50             	r3 = h[r0 + 12] (u)			  ## gatt_client.c:323:5
 1e0ba88:    84 51             	r4 = h[r0 + 48] (u)			  ## gatt_client.c:320:5
 1e0ba8a:    75 51             	r5 = h[r0 + 46] (u)			  ## gatt_client.c:319:5
 1e0ba8c:    bf f3 7b f8       	call -3850 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:316:5
 1e0ba90:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:318:16
 1e0ba96:    81 70             	r1 = 8			  ## gatt_client.c:318:16
 1e0ba98:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:318:16
 1e0ba9a:    00 81             	r0 += 16			  ## gatt_client.c:318:16
 1e0ba9c:    11 70             	r1 = 1			  ## gatt_client.c:319:5
 1e0ba9e:    52 08             	r2 = r5			  ## gatt_client.c:319:5
 1e0baa0:    bf f3 74 e8       	call -12056 <bt_store_16 : 1e08b8c >			  ## gatt_client.c:319:5
 1e0baa4:    31 70             	r1 = 3			  ## gatt_client.c:320:5
 1e0baa6:    42 08             	r2 = r4			  ## gatt_client.c:320:5
 1e0baa8:    bf f3 70 e8       	call -12064 <bt_store_16 : 1e08b8c >			  ## gatt_client.c:320:5
 1e0baac:    51 70             	r1 = 5			  ## gatt_client.c:321:5
 1e0baae:    02 fb 03 28       	r2 = 10243 <lrc.7+0xF : 2803 >			  ## gatt_client.c:321:5
 1e0bab2:    bf f3 6b e8       	call -12074 <bt_store_16 : 1e08b8c >			  ## gatt_client.c:321:5
 1e0bab6:    71 70             	r1 = 7			  ## gatt_client.c:323:5
 1e0bab8:    30 08             	r0 = r3			  ## gatt_client.c:323:5
 1e0baba:    bf f3 6e f8       	call -3876 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:323:5
 1e0babe:    05 18             	goto 10 <send_gatt_characteristic_request+0x60 : 1e0baca >			  ## gatt_client.c:323:5
 1e0bac0:    e0 81             	r0 += 30			  ## gatt_client.c:516:85
 1e0bac2:    21 08             	r1 = r2			  ## gatt_client.c:516:13
 1e0bac4:    32 08             	r2 = r3			  ## gatt_client.c:516:13
 1e0bac6:    43 08             	r3 = r4			  ## gatt_client.c:516:13
 1e0bac8:    b3 17             	call -154 <att_read_by_type_or_group_request_for_uuid128 : 1e0ba30 >			  ## gatt_client.c:516:13
 1e0baca:    02 0a             	sp += 4
 1e0bacc:    55 01             	{pc, r5, r4} = [sp++]			  ## gatt_client.c:522:1


att_read_request:
 1e0bace:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:354:0
 1e0bad0:    13 08             	r3 = r1			  ## gatt_client.c:354:0
 1e0bad2:    04 08             	r4 = r0			  ## gatt_client.c:354:0
 1e0bad4:    bf f3 57 f8       	call -3922 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:355:5
 1e0bad8:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:357:16
 1e0bade:    a1 70             	r1 = 10			  ## gatt_client.c:357:16
 1e0bae0:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:357:16
 1e0bae2:    00 81             	r0 += 16			  ## gatt_client.c:357:16
 1e0bae4:    11 70             	r1 = 1			  ## gatt_client.c:358:5
 1e0bae6:    32 08             	r2 = r3			  ## gatt_client.c:358:5
 1e0bae8:    bf f3 4f f8       	call -3938 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:358:5
 1e0baec:    31 70             	r1 = 3			  ## gatt_client.c:360:5
 1e0baee:    40 08             	r0 = r4			  ## gatt_client.c:360:5
 1e0baf0:    14 01             	{rets, r4} = [sp++]			  ## gatt_client.c:360:5
 1e0baf2:    ff f3 52 f8       	goto -3932 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:360:5


send_gatt_read_blob_request:
 1e0baf6:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:544:0
 1e0baf8:    23 08             	r3 = r2			  ## gatt_client.c:544:0
 1e0bafa:    14 08             	r4 = r1			  ## gatt_client.c:544:0
 1e0bafc:    05 08             	r5 = r0			  ## gatt_client.c:544:0
 1e0bafe:    bf f3 42 f8       	call -3964 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:366:5
 1e0bb02:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:368:16
 1e0bb08:    c1 70             	r1 = 12			  ## gatt_client.c:368:16
 1e0bb0a:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:368:16
 1e0bb0c:    00 81             	r0 += 16			  ## gatt_client.c:368:16
 1e0bb0e:    22 05             	r2 = r4.l (u)			  ## gatt_client.c:369:5
 1e0bb10:    11 70             	r1 = 1			  ## gatt_client.c:369:5
 1e0bb12:    bf f3 3a f8       	call -3980 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:369:5
 1e0bb16:    e2 04             	r2 = r3.l (u)			  ## gatt_client.c:370:5
 1e0bb18:    31 70             	r1 = 3			  ## gatt_client.c:370:5
 1e0bb1a:    bf f3 36 f8       	call -3988 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:370:5
 1e0bb1e:    60 05             	r0 = r5.l (u)			  ## gatt_client.c:372:5
 1e0bb20:    51 70             	r1 = 5			  ## gatt_client.c:372:5
 1e0bb22:    15 01             	{rets, r5, r4} = [sp++]			  ## gatt_client.c:372:5
 1e0bb24:    ff f3 39 f8       	goto -3982 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:372:5


send_gatt_prepare_write_request:
 1e0bb28:    78 01             	[--sp] = {rets, r8-r4}			  ## gatt_client.c:564:0
 1e0bb2a:    07 08             	r7 = r0			  ## gatt_client.c:564:0
 1e0bb2c:    e5 5f             	r5 = h[r7 + 60] (u)			  ## gatt_client.c:565:124
 1e0bb2e:    d6 5f             	r6 = h[r7 + 58] (u)			  ## gatt_client.c:565:94
 1e0bb30:    08 f7 0c 70       	r8 = h[r7 + 12] (u)			  ## gatt_client.c:565:70
 1e0bb34:    b0 5e             	r0 = h[r7 + 22] (u)			  ## gatt_client.c:466:32
 1e0bb36:    be 16             	call -644 <peripheral_mtu : 1e0b8b4 >			  ## gatt_client.c:466:32
 1e0bb38:    f1 5f             	r1 = h[r7 + 62] (u)			  ## gatt_client.c:467:53
 1e0bb3a:    04 70             	r4 = 0			  ## gatt_client.c:467:53
 1e0bb3c:    51 f2 07 90       	if (r1 <= r5) goto 14 <send_gatt_prepare_write_request+0x26 : 1e0bb4e >			  ## gatt_client.c:467:53
 1e0bb40:    b0 8f             	r0 += -5			  ## gatt_client.c:466:59
 1e0bb42:    64 b3             	r4 = r1 - r5			  ## gatt_client.c:470:57
 1e0bb44:    21 05             	r1 = r4.l (u)			  ## gatt_client.c:470:57
 1e0bb46:    22 04             	r2 = r0.l (u)			  ## gatt_client.c:471:25
 1e0bb48:    12 f2 01 80       	if (r2 > r1) goto 2 <send_gatt_prepare_write_request+0x26 : 1e0bb4e >			  ## gatt_client.c:471:25
 1e0bb4c:    04 08             	r4 = r0			  ## gatt_client.c:472:9
 1e0bb4e:    03 4f             	r3 = [r7 + 64]			  ## gatt_client.c:565:185
 1e0bb50:    bf f3 19 f8       	call -4046 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:429:5
 1e0bb54:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:434:5
 1e0bb5a:    60 71             	r0 = 22			  ## gatt_client.c:431:16
 1e0bb5c:    08 6f             	b[r7 + 16] = r0			  ## gatt_client.c:431:16
 1e0bb5e:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:431:16
 1e0bb60:    11 70             	r1 = 1			  ## gatt_client.c:432:5
 1e0bb62:    62 08             	r2 = r6			  ## gatt_client.c:432:5
 1e0bb64:    bf f3 11 f8       	call -4062 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:432:5
 1e0bb68:    31 70             	r1 = 3			  ## gatt_client.c:433:5
 1e0bb6a:    52 08             	r2 = r5			  ## gatt_client.c:433:5
 1e0bb6c:    bf f3 0d f8       	call -4070 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:433:5
 1e0bb70:    41 b7             	r1 = r3 + r5			  ## gatt_client.c:434:26
 1e0bb72:    50 9f             	r0 = r7 + 21			  ## gatt_client.c:434:5
 1e0bb74:    22 05             	r2 = r4.l (u)			  ## gatt_client.c:434:47
 1e0bb76:    97 f3 b5 d9       	call 3126122 <memcpy : 106ee4 >			  ## gatt_client.c:434:5
 1e0bb7a:    50 98             	r0 = r4 + 5			  ## gatt_client.c:436:91
 1e0bb7c:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:436:5
 1e0bb7e:    80 08             	r0 = r8			  ## gatt_client.c:436:5
 1e0bb80:    18 01             	{rets, r8-r4} = [sp++]			  ## gatt_client.c:436:5
 1e0bb82:    ff f3 0a f8       	goto -4076 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:436:5


att_execute_write_request:
 1e0bb86:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:418:0
 1e0bb88:    13 08             	r3 = r1			  ## gatt_client.c:418:0
 1e0bb8a:    04 08             	r4 = r0			  ## gatt_client.c:418:0
 1e0bb8c:    bf f3 fb f7       	call -4106 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:419:5
 1e0bb90:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:422:16
 1e0bb96:    81 71             	r1 = 24			  ## gatt_client.c:421:16
 1e0bb98:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:421:16
 1e0bb9a:    1b 61             	b[r0 + 17] = r3			  ## gatt_client.c:422:16
 1e0bb9c:    21 70             	r1 = 2			  ## gatt_client.c:423:5
 1e0bb9e:    40 08             	r0 = r4			  ## gatt_client.c:423:5
 1e0bba0:    14 01             	{rets, r4} = [sp++]			  ## gatt_client.c:423:5
 1e0bba2:    ff f3 fa f7       	goto -4108 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:423:5


gatt_client_run:
 1e0bba6:    79 01             	[--sp] = {rets, r9-r4}			  ## gatt_client.c:1035:0
 1e0bba8:    f4 0b             	sp += -24			  ## gatt_client.c:1035:0
 1e0bbaa:    c0 ff 1c 1d 00 00 	r0 = 7452 <gatt_client_global_info : 1d1c >			  ## gatt_client.c:1035:0
 1e0bbb0:    04 40             	r4 = [r0 + 0]			  ## gatt_client.c:1035:0
 1e0bbb2:    04 e0 0b 01       	if (r4 == 0) goto 534 <.GJTIE658_1_1_+0x108 : 1e0bdcc >			  ## gatt_client.c:1035:0
 1e0bbb6:    c9 ff 60 18 00 00 	r9 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:1035:0
 1e0bbbc:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:1045:14
 1e0bbbe:    bf f3 fe fb       	call -2052 <att_dispatch_client_can_send_now : 1e0b3be >			  ## gatt_client.c:1045:14
 1e0bbc2:    b5 20             	if (r0 == 0) goto 362 <.GJTIE658_1_1_+0x6A : 1e0bd2e >			  ## gatt_client.c:1045:14
 1e0bbc4:    60 48             	r0 = [r4 + 24]			  ## gatt_client.c:1052:29
 1e0bbc6:    30 e0 e2 00       	if (r0 == 3) goto 452 <.GJTIE658_1_1_+0xCA : 1e0bd8e >			  ## gatt_client.c:1052:9
 1e0bbca:    10 e0 ff 00       	if (r0 == 1) goto 510 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0bbce:    e9 20             	if (r0 == 0) goto 466 <.GJTIE658_1_1_+0xDE : 1e0bda2 >
 1e0bbd0:    d0 49             	r0 = [r4 + 116]			  ## gatt_client.c:1072:29
 1e0bbd2:    10 e0 af 00       	if (r0 == 1) goto 350 <.GJTIE658_1_1_+0x70 : 1e0bd34 >			  ## gatt_client.c:1072:29
 1e0bbd6:    45 fc 44 00       	r5 = r4 + 68
 1e0bbda:    d0 6a             	r0 = b[r5 + 13] (u)			  ## gatt_client.c:1083:25
 1e0bbdc:    c6 30             	if (r0 != 0) goto 396 <.GJTIE658_1_1_+0xA6 : 1e0bd6a >			  ## gatt_client.c:1083:25
 1e0bbde:    10 48             	r0 = [r4 + 4]			  ## gatt_client.c:1090:29
 1e0bbe0:    06 fc ff ff       	r6 = r0 + -1			  ## gatt_client.c:1090:9
 1e0bbe4:    06 e3 a0 80       	if (r6 > 48) goto 320 <.GJTIE658_1_1_+0x64 : 1e0bd28 >			  ## gatt_client.c:1090:9
 1e0bbe8:    77 c0             	r7 = r6 << 1
 1e0bbea:    b7 00             	tbh [r7]


.GJTIL658_0_0_:
 1e0bbec:    f2 00     < 242 : 0xF2 >
 1e0bbee:    9e 00     < 158 : 0x9E >
 1e0bbf0:    fb 00     < 251 : 0xFB >
 1e0bbf2:    9e 00     < 158 : 0x9E >
 1e0bbf4:    0b 01     < 267 : 0x10B >
 1e0bbf6:    9e 00     < 158 : 0x9E >
 1e0bbf8:    0e 01     < 270 : 0x10E >
 1e0bbfa:    9e 00     < 158 : 0x9E >
 1e0bbfc:    13 01     < 275 : 0x113 >
 1e0bbfe:    9e 00     < 158 : 0x9E >
 1e0bc00:    29 01     < 297 : 0x129 >
 1e0bc02:    9e 00     < 158 : 0x9E >
 1e0bc04:    32 01     < 306 : 0x132 >
 1e0bc06:    9e 00     < 158 : 0x9E >
 1e0bc08:    36 01     < 310 : 0x136 >
 1e0bc0a:    9e 00     < 158 : 0x9E >
 1e0bc0c:    39 01     < 313 : 0x139 >
 1e0bc0e:    9e 00     < 158 : 0x9E >
 1e0bc10:    6c 00     < 108 : 0x6C >
 1e0bc12:    9e 00     < 158 : 0x9E >
 1e0bc14:    77 00     < 119 : 0x77 >
 1e0bc16:    9e 00     < 158 : 0x9E >
 1e0bc18:    31 00     < 49 : 0x31 >
 1e0bc1a:    9e 00     < 158 : 0x9E >
 1e0bc1c:    3c 01     < 316 : 0x13C >
 1e0bc1e:    9e 00     < 158 : 0x9E >
 1e0bc20:    3f 01     < 319 : 0x13F >
 1e0bc22:    9e 00     < 158 : 0x9E >
 1e0bc24:    42 01     < 322 : 0x142 >
 1e0bc26:    9e 00     < 158 : 0x9E >
 1e0bc28:    45 01     < 325 : 0x145 >
 1e0bc2a:    9e 00     < 158 : 0x9E >
 1e0bc2c:    48 01     < 328 : 0x148 >
 1e0bc2e:    9e 00     < 158 : 0x9E >
 1e0bc30:    4e 01     < 334 : 0x14E >
 1e0bc32:    9e 00     < 158 : 0x9E >
 1e0bc34:    59 01     < 345 : 0x159 >
 1e0bc36:    9e 00     < 158 : 0x9E >
 1e0bc38:    61 01     < 353 : 0x161 >
 1e0bc3a:    9e 00     < 158 : 0x9E >
 1e0bc3c:    67 01     < 359 : 0x167 >
 1e0bc3e:    9e 00     < 158 : 0x9E >
 1e0bc40:    31 00     < 49 : 0x31 >
 1e0bc42:    9e 00     < 158 : 0x9E >
 1e0bc44:    6e 01     < 366 : 0x16E >
 1e0bc46:    9e 00     < 158 : 0x9E >
 1e0bc48:    71 01     < 369 : 0x171 >
 1e0bc4a:    9e 00     < 158 : 0x9E >
 1e0bc4c:    77 01     < 375 : 0x177 >
 1e0bc4e:    08 f7 3e 40       	r8 = h[r4 + 62] (u)			  ## gatt_client.c:1093:17
 1e0bc52:    b0 58             	r0 = h[r4 + 22] (u)			  ## gatt_client.c:1093:49
 1e0bc54:    2f 16             	call -930 <peripheral_mtu : 1e0b8b4 >			  ## gatt_client.c:1093:49
 1e0bc56:    d0 8f             	r0 += -3			  ## gatt_client.c:1093:76
 1e0bc58:    08 f2 91 c0       	ifs (r8 > r0) goto 290 <.GJTIE658_1_1_+0xBA : 1e0bd7e >			  ## gatt_client.c:1093:76
 1e0bc5c:    06 e3 64 80       	if (r6 > 48) goto 200 <.GJTIE658_1_1_+0x64 : 1e0bd28 >
 1e0bc60:    b7 00             	tbh [r7]


.GJTIL658_1_1_:
 1e0bc62:    b7 00     < 183 : 0xB7 >
 1e0bc64:    63 00     < 99 : 0x63 >
 1e0bc66:    c0 00     < 192 : 0xC0 >
 1e0bc68:    63 00     < 99 : 0x63 >
 1e0bc6a:    d0 00     < 208 : 0xD0 >
 1e0bc6c:    63 00     < 99 : 0x63 >
 1e0bc6e:    d3 00     < 211 : 0xD3 >
 1e0bc70:    63 00     < 99 : 0x63 >
 1e0bc72:    d8 00     < 216 : 0xD8 >
 1e0bc74:    63 00     < 99 : 0x63 >
 1e0bc76:    ee 00     < 238 : 0xEE >
 1e0bc78:    63 00     < 99 : 0x63 >
 1e0bc7a:    f7 00     < 247 : 0xF7 >
 1e0bc7c:    63 00     < 99 : 0x63 >
 1e0bc7e:    fb 00     < 251 : 0xFB >
 1e0bc80:    63 00     < 99 : 0x63 >
 1e0bc82:    fe 00     < 254 : 0xFE >
 1e0bc84:    63 00     < 99 : 0x63 >
 1e0bc86:    31 00     < 49 : 0x31 >
 1e0bc88:    63 00     < 99 : 0x63 >
 1e0bc8a:    3c 00     < 60 : 0x3C >
 1e0bc8c:    63 00     < 99 : 0x63 >
 1e0bc8e:    4e 01     < 334 : 0x14E >
 1e0bc90:    63 00     < 99 : 0x63 >
 1e0bc92:    01 01     < 257 : 0x101 >
 1e0bc94:    63 00     < 99 : 0x63 >
 1e0bc96:    04 01     < 260 : 0x104 >
 1e0bc98:    63 00     < 99 : 0x63 >
 1e0bc9a:    07 01     < 263 : 0x107 >
 1e0bc9c:    63 00     < 99 : 0x63 >
 1e0bc9e:    0a 01     < 266 : 0x10A >
 1e0bca0:    63 00     < 99 : 0x63 >
 1e0bca2:    0d 01     < 269 : 0x10D >
 1e0bca4:    63 00     < 99 : 0x63 >
 1e0bca6:    13 01     < 275 : 0x113 >
 1e0bca8:    63 00     < 99 : 0x63 >
 1e0bcaa:    1e 01     < 286 : 0x11E >
 1e0bcac:    63 00     < 99 : 0x63 >
 1e0bcae:    26 01     < 294 : 0x126 >
 1e0bcb0:    63 00     < 99 : 0x63 >
 1e0bcb2:    2c 01     < 300 : 0x12C >
 1e0bcb4:    63 00     < 99 : 0x63 >
 1e0bcb6:    51 01     < 337 : 0x151 >
 1e0bcb8:    63 00     < 99 : 0x63 >
 1e0bcba:    33 01     < 307 : 0x133 >
 1e0bcbc:    63 00     < 99 : 0x63 >
 1e0bcbe:    36 01     < 310 : 0x136 >
 1e0bcc0:    63 00     < 99 : 0x63 >
 1e0bcc2:    3c 01     < 316 : 0x13C >
 1e0bcc4:    c1 f4 14 49       	[r4 + 4] = 20			  ## gatt_client.c:1152:43
 1e0bcc8:    85 59             	r5 = h[r4 + 48] (u)			  ## gatt_client.c:539:170
 1e0bcca:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:539:138
 1e0bccc:    e1 58             	r1 = h[r4 + 28] (u)			  ## gatt_client.c:536:21
 1e0bcce:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:539:114
 1e0bcd0:    20 22             	if (r1 == 0) goto 64 <.GJTIE658_1_1_+0x4E : 1e0bd12 >			  ## gatt_client.c:536:9
 1e0bcd2:    80 70             	r0 = 8			  ## gatt_client.c:537:9
 1e0bcd4:    0d 02             	[sp] = r5			  ## gatt_client.c:537:9
 1e0bcd6:    6b 16             	call -810 <att_read_by_type_or_group_request_for_uuid16 : 1e0b9ae >			  ## gatt_client.c:537:9
 1e0bcd8:    27 18             	goto 78 <.GJTIE658_1_1_+0x64 : 1e0bd28 >			  ## gatt_client.c:537:9
 1e0bcda:    c1 f4 16 49       	[r4 + 4] = 22			  ## gatt_client.c:1157:43
 1e0bcde:    27 49             	r7 = [r4 + 72]			  ## gatt_client.c:550:107
 1e0bce0:    06 5a             	r6 = h[r5 + 0] (u)			  ## gatt_client.c:550:67
 1e0bce2:    08 f7 0c 40       	r8 = h[r4 + 12] (u)			  ## gatt_client.c:550:43
 1e0bce6:    bf f3 4e f7       	call -4452 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:377:5
 1e0bcea:    e0 70             	r0 = 14			  ## gatt_client.c:379:16
 1e0bcec:    10 f9 10 90       	b[r9 + 16] = r0			  ## gatt_client.c:379:16
 1e0bcf0:    16 2c             	if (r6 == 0) goto 44 <.GJTIE658_1_1_+0x5A : 1e0bd1e >
 1e0bcf2:    13 70             	r3 = 1
 1e0bcf4:    65 08             	r5 = r6
 1e0bcf6:    82 f7 02 70       	r2 = h[r7 ++= 2] (u)			  ## gatt_client.c:383:9
 1e0bcfa:    90 fc 10 00       	r0 = r9 + 16			  ## gatt_client.c:383:9
 1e0bcfe:    e1 04             	r1 = r3.l (u)			  ## gatt_client.c:383:9
 1e0bd00:    bf f3 43 f7       	call -4474 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:383:9
 1e0bd04:    23 80             	r3 += 2			  ## gatt_client.c:382:19
 1e0bd06:    55 f3 f6 ff       	if (--r5 != 0) goto -20 <.GJTIE658_1_1_+0x32 : 1e0bcf6 >			  ## gatt_client.c:382:5
 1e0bd0a:    10 70             	r0 = 1			  ## gatt_client.c:383:49
 1e0bd0c:    d0 fd 08 06       	r0 <= insert(r6, p:1, l:16)			  ## gatt_client.c:383:49
 1e0bd10:    07 18             	goto 14 <.GJTIE658_1_1_+0x5C : 1e0bd20 >			  ## gatt_client.c:383:49
 1e0bd12:    e0 99             	r0 = r4 + 30			  ## gatt_client.c:539:81
 1e0bd14:    21 08             	r1 = r2			  ## gatt_client.c:539:9
 1e0bd16:    32 08             	r2 = r3			  ## gatt_client.c:539:9
 1e0bd18:    53 08             	r3 = r5			  ## gatt_client.c:539:9
 1e0bd1a:    8a 16             	call -748 <att_read_by_type_or_group_request_for_uuid128 : 1e0ba30 >			  ## gatt_client.c:539:9
 1e0bd1c:    05 18             	goto 10 <.GJTIE658_1_1_+0x64 : 1e0bd28 >			  ## gatt_client.c:539:9
 1e0bd1e:    10 70             	r0 = 1
 1e0bd20:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:386:5
 1e0bd22:    80 08             	r0 = r8			  ## gatt_client.c:386:5
 1e0bd24:    bf f3 39 f7       	call -4494 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:386:5
 1e0bd28:    04 48             	r4 = [r4 + 0]
 1e0bd2a:    48 39             	if (r4 != 0) goto -368 <gatt_client_run+0x16 : 1e0bbbc >
 1e0bd2c:    4f 18             	goto 158 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0bd2e:    bf f3 48 fb       	call -2416 <att_dispatch_client_request_can_send_now_event : 1e0b3c2 >			  ## gatt_client.c:1046:13
 1e0bd32:    4c 18             	goto 152 <.GJTIE658_1_1_+0x108 : 1e0bdcc >			  ## gatt_client.c:1046:13
 1e0bd34:    05 f9 7f 40       	r5 = b[r4 + 127] (u)			  ## gatt_client.c:1074:115
 1e0bd38:    08 f7 0c 40       	r8 = h[r4 + 12] (u)			  ## gatt_client.c:1074:59
 1e0bd3c:    bf f3 23 f7       	call -4538 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:1021:9
 1e0bd40:    45 20             	if (r0 == 0) goto 138 <.GJTIE658_1_1_+0x108 : 1e0bdcc >			  ## gatt_client.c:1021:9
 1e0bd42:    47 fc 78 00       	r7 = r4 + 120			  ## gatt_client.c:1074:83
 1e0bd46:    70 08             	r0 = r7			  ## gatt_client.c:1025:9
 1e0bd48:    51 08             	r1 = r5			  ## gatt_client.c:1025:9
 1e0bd4a:    80 f3 59 09       	call 4786 <put_buf : 1e0d000 >			  ## gatt_client.c:1025:9
 1e0bd4e:    90 fc 10 00       	r0 = r9 + 16			  ## gatt_client.c:1027:9
 1e0bd52:    71 08             	r1 = r7			  ## gatt_client.c:1027:9
 1e0bd54:    52 08             	r2 = r5			  ## gatt_client.c:1027:9
 1e0bd56:    97 f3 c5 d8       	call 3125642 <memcpy : 106ee4 >			  ## gatt_client.c:1027:9
 1e0bd5a:    80 08             	r0 = r8			  ## gatt_client.c:1028:15
 1e0bd5c:    51 08             	r1 = r5			  ## gatt_client.c:1028:15
 1e0bd5e:    bf f3 1c f7       	call -4552 <l2cap_send_prepared_connectionless : 1e0ab9a >			  ## gatt_client.c:1028:15
 1e0bd62:    34 30             	if (r0 != 0) goto 104 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0bd64:    dd f4 00 49       	[r4 + 116] = 0			  ## gatt_client.c:1075:39
 1e0bd68:    31 18             	goto 98 <.GJTIE658_1_1_+0x108 : 1e0bdcc >			  ## gatt_client.c:1075:39
 1e0bd6a:    00 70             	r0 = 0			  ## gatt_client.c:1084:43
 1e0bd6c:    d8 6a             	b[r5 + 13] = r0			  ## gatt_client.c:1084:43
 1e0bd6e:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:283:5
 1e0bd70:    bf f3 09 f7       	call -4590 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:280:5
 1e0bd74:    e0 71             	r0 = 30			  ## gatt_client.c:282:16
 1e0bd76:    10 f9 10 90       	b[r9 + 16] = r0			  ## gatt_client.c:282:16
 1e0bd7a:    11 70             	r1 = 1			  ## gatt_client.c:283:5
 1e0bd7c:    24 18             	goto 72 <.GJTIE658_1_1_+0x102 : 1e0bdc6 >			  ## gatt_client.c:283:5
 1e0bd7e:    c1 f4 00 49       	[r4 + 4] = 0			  ## gatt_client.c:615:35
 1e0bd82:    40 08             	r0 = r4			  ## gatt_client.c:616:5
 1e0bd84:    df 15             	call -1090 <gatt_client_timeout_stop : 1e0b944 >			  ## gatt_client.c:616:5
 1e0bd86:    d1 70             	r1 = 13			  ## gatt_client.c:1098:13
 1e0bd88:    40 08             	r0 = r4			  ## gatt_client.c:1098:13
 1e0bd8a:    f7 15             	call -1042 <emit_gatt_complete_event : 1e0b97a >			  ## gatt_client.c:1098:13
 1e0bd8c:    1f 18             	goto 62 <.GJTIE658_1_1_+0x108 : 1e0bdcc >			  ## gatt_client.c:1098:13
 1e0bd8e:    c6 f4 02 49       	[r4 + 24] = 2			  ## gatt_client.c:1064:35
 1e0bd92:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:459:5
 1e0bd94:    bf f3 4d f7       	call -4454 <l2cap_max_le_mtu : 1e0ac32 >			  ## gatt_client.c:453:20
 1e0bd98:    04 08             	r4 = r0			  ## gatt_client.c:453:20
 1e0bd9a:    bf f3 f4 f6       	call -4632 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:455:5
 1e0bd9e:    30 70             	r0 = 3			  ## gatt_client.c:455:5
 1e0bda0:    09 18             	goto 18 <.GJTIE658_1_1_+0xF0 : 1e0bdb4 >			  ## gatt_client.c:455:5
 1e0bda2:    10 70             	r0 = 1
 1e0bda4:    68 48             	[r4 + 24] = r0			  ## gatt_client.c:1054:35
 1e0bda6:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:447:5
 1e0bda8:    bf f3 43 f7       	call -4474 <l2cap_max_le_mtu : 1e0ac32 >			  ## gatt_client.c:441:20
 1e0bdac:    04 08             	r4 = r0			  ## gatt_client.c:441:20
 1e0bdae:    bf f3 ea f6       	call -4652 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:443:5
 1e0bdb2:    20 70             	r0 = 2			  ## gatt_client.c:445:16
 1e0bdb4:    10 f9 10 90       	b[r9 + 16] = r0
 1e0bdb8:    90 fc 10 00       	r0 = r9 + 16
 1e0bdbc:    11 70             	r1 = 1
 1e0bdbe:    42 08             	r2 = r4
 1e0bdc0:    bf f3 e3 f6       	call -4666 <little_endian_store_16 : 1e0ab8a >
 1e0bdc4:    31 70             	r1 = 3
 1e0bdc6:    30 08             	r0 = r3
 1e0bdc8:    bf f3 e7 f6       	call -4658 <l2cap_send_prepared_connectionless : 1e0ab9a >
 1e0bdcc:    0c 0a             	sp += 24
 1e0bdce:    59 01             	{pc, r9-r4} = [sp++]			  ## gatt_client.c:1261:1
 1e0bdd0:    c1 f4 02 49       	[r4 + 4] = 2			  ## gatt_client.c:1107:43
 1e0bdd4:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:479:5
 1e0bdd6:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:479:5
 1e0bdd8:    84 59             	r4 = h[r4 + 48] (u)			  ## gatt_client.c:479:5
 1e0bdda:    00 71             	r0 = 16			  ## gatt_client.c:479:5
 1e0bddc:    01 fb 00 28       	r1 = 10240 <lrc.7+0xC : 2800 >			  ## gatt_client.c:479:5
 1e0bde0:    5b 18             	goto 182 <.GJTIE658_1_1_+0x1D4 : 1e0be98 >			  ## gatt_client.c:479:5
 1e0bde2:    c1 f4 04 49       	[r4 + 4] = 4			  ## gatt_client.c:1112:43
 1e0bde6:    e2 58             	r2 = h[r4 + 28] (u)			  ## gatt_client.c:484:21
 1e0bde8:    7d 24             	if (r2 == 0) goto 250 <.GJTIE658_1_1_+0x220 : 1e0bee4 >			  ## gatt_client.c:484:9
 1e0bdea:    63 a1             	r3 = sp + 22
 1e0bdec:    01 70             	r1 = 0			  ## gatt_client.c:486:9
 1e0bdee:    30 08             	r0 = r3			  ## gatt_client.c:486:9
 1e0bdf0:    bf f3 cb f6       	call -4714 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:486:9
 1e0bdf4:    82 59             	r2 = h[r4 + 48] (u)			  ## gatt_client.c:487:9
 1e0bdf6:    71 59             	r1 = h[r4 + 46] (u)			  ## gatt_client.c:487:9
 1e0bdf8:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:487:9
 1e0bdfa:    24 70             	r4 = 2			  ## gatt_client.c:487:9
 1e0bdfc:    0c 02             	[sp] = r4			  ## gatt_client.c:487:9
 1e0bdfe:    f3 15             	call -1050 <att_find_by_type_value_request : 1e0b9e6 >			  ## gatt_client.c:487:9
 1e0be00:    e5 1f             	goto -54 <.GJTIE658_1_1_+0x108 : 1e0bdcc >			  ## gatt_client.c:487:9
 1e0be02:    c1 f4 06 49       	[r4 + 4] = 6			  ## gatt_client.c:1117:43
 1e0be06:    02 18             	goto 4 <.GJTIE658_1_1_+0x148 : 1e0be0c >			  ## gatt_client.c:1117:43
 1e0be08:    c1 f4 08 49       	[r4 + 4] = 8			  ## gatt_client.c:1122:43
 1e0be0c:    40 08             	r0 = r4
 1e0be0e:    2d 16             	call -934 <send_gatt_characteristic_request : 1e0ba6a >
 1e0be10:    dd 1f             	goto -70 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0be12:    c1 f4 08 49       	[r4 + 4] = 8			  ## gatt_client.c:1127:43
 1e0be16:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:295:5
 1e0be18:    85 59             	r5 = h[r4 + 48] (u)			  ## gatt_client.c:293:5
 1e0be1a:    74 59             	r4 = h[r4 + 46] (u)			  ## gatt_client.c:292:5
 1e0be1c:    bf f3 b3 f6       	call -4762 <l2cap_reserve_packet_buffer : 1e0ab86 >			  ## gatt_client.c:289:5
 1e0be20:    40 70             	r0 = 4			  ## gatt_client.c:289:5
 1e0be22:    10 f9 10 90       	b[r9 + 16] = r0			  ## gatt_client.c:291:16
 1e0be26:    90 fc 10 00       	r0 = r9 + 16			  ## gatt_client.c:291:16
 1e0be2a:    11 70             	r1 = 1			  ## gatt_client.c:292:5
 1e0be2c:    42 08             	r2 = r4			  ## gatt_client.c:292:5
 1e0be2e:    bf f3 ac f6       	call -4776 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:292:5
 1e0be32:    31 70             	r1 = 3			  ## gatt_client.c:293:5
 1e0be34:    52 08             	r2 = r5			  ## gatt_client.c:293:5
 1e0be36:    bf f3 a8 f6       	call -4784 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:293:5
 1e0be3a:    51 70             	r1 = 5			  ## gatt_client.c:295:5
 1e0be3c:    c4 1f             	goto -120 <.GJTIE658_1_1_+0x102 : 1e0bdc6 >			  ## gatt_client.c:295:5
 1e0be3e:    c1 f4 0c 49       	[r4 + 4] = 12			  ## gatt_client.c:1132:43
 1e0be42:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:507:5
 1e0be44:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:507:5
 1e0be46:    84 59             	r4 = h[r4 + 48] (u)			  ## gatt_client.c:507:5
 1e0be48:    80 70             	r0 = 8			  ## gatt_client.c:507:5
 1e0be4a:    01 fb 02 28       	r1 = 10242 <lrc.7+0xE : 2802 >			  ## gatt_client.c:507:5
 1e0be4e:    24 18             	goto 72 <.GJTIE658_1_1_+0x1D4 : 1e0be98 >			  ## gatt_client.c:507:5
 1e0be50:    c1 f4 0e 49       	[r4 + 4] = 14			  ## gatt_client.c:1137:43
 1e0be54:    91 59             	r1 = h[r4 + 50] (u)			  ## gatt_client.c:502:5
 1e0be56:    2e 18             	goto 92 <.GJTIE658_1_1_+0x1F0 : 1e0beb4 >			  ## gatt_client.c:502:5
 1e0be58:    c1 f4 10 49       	[r4 + 4] = 16			  ## gatt_client.c:1142:43
 1e0be5c:    2a 18             	goto 84 <.GJTIE658_1_1_+0x1EE : 1e0beb2 >			  ## gatt_client.c:1142:43
 1e0be5e:    c1 f4 12 49       	[r4 + 4] = 18			  ## gatt_client.c:1147:43
 1e0be62:    2d 18             	goto 90 <.GJTIE658_1_1_+0x1FA : 1e0bebe >			  ## gatt_client.c:1147:43
 1e0be64:    c1 f4 1a 49       	[r4 + 4] = 26			  ## gatt_client.c:1167:43
 1e0be68:    3a 18             	goto 116 <.GJTIE658_1_1_+0x21A : 1e0bede >			  ## gatt_client.c:1167:43
 1e0be6a:    c1 f4 1c 49       	[r4 + 4] = 28			  ## gatt_client.c:1177:43
 1e0be6e:    37 18             	goto 110 <.GJTIE658_1_1_+0x21A : 1e0bede >			  ## gatt_client.c:1177:43
 1e0be70:    c1 f4 1e 49       	[r4 + 4] = 30			  ## gatt_client.c:1182:43
 1e0be74:    2e 18             	goto 92 <.GJTIE658_1_1_+0x20E : 1e0bed2 >			  ## gatt_client.c:1182:43
 1e0be76:    c1 f4 20 49       	[r4 + 4] = 32			  ## gatt_client.c:1187:43
 1e0be7a:    02 18             	goto 4 <.GJTIE658_1_1_+0x1BC : 1e0be80 >			  ## gatt_client.c:1187:43
 1e0be7c:    c1 f4 22 49       	[r4 + 4] = 34			  ## gatt_client.c:1192:43
 1e0be80:    60 58             	r0 = h[r4 + 12] (u)
 1e0be82:    01 70             	r1 = 0
 1e0be84:    80 16             	call -768 <att_execute_write_request : 1e0bb86 >
 1e0be86:    a2 1f             	goto -188 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0be88:    c1 f4 24 49       	[r4 + 4] = 36			  ## gatt_client.c:1197:43
 1e0be8c:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:580:5
 1e0be8e:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:580:5
 1e0be90:    84 59             	r4 = h[r4 + 48] (u)			  ## gatt_client.c:580:5
 1e0be92:    80 70             	r0 = 8			  ## gatt_client.c:580:5
 1e0be94:    01 fb 02 29       	r1 = 10498 <adc_queue+0x6E : 2902 >			  ## gatt_client.c:580:5
 1e0be98:    0c 02             	[sp] = r4
 1e0be9a:    89 15             	call -1262 <att_read_by_type_or_group_request_for_uuid16 : 1e0b9ae >
 1e0be9c:    97 1f             	goto -210 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0be9e:    c1 f4 26 49       	[r4 + 4] = 38			  ## gatt_client.c:1217:43
 1e0bea2:    42 5a             	r2 = h[r5 + 8] (u)			  ## gatt_client.c:560:5
 1e0bea4:    61 58             	r1 = h[r4 + 12] (u)			  ## gatt_client.c:560:5
 1e0bea6:    e4 84             	r4 += 78			  ## gatt_client.c:560:125
 1e0bea8:    20 71             	r0 = 18			  ## gatt_client.c:560:5
 1e0beaa:    23 70             	r3 = 2			  ## gatt_client.c:560:5
 1e0beac:    32 18             	goto 100 <.GJTIE658_1_1_+0x24E : 1e0bf12 >			  ## gatt_client.c:560:5
 1e0beae:    c1 f4 28 49       	[r4 + 4] = 40			  ## gatt_client.c:1202:43
 1e0beb2:    d1 59             	r1 = h[r4 + 58] (u)
 1e0beb4:    60 58             	r0 = h[r4 + 12] (u)
 1e0beb6:    0b 16             	call -1002 <att_read_request : 1e0bace >
 1e0beb8:    89 1f             	goto -238 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0beba:    c1 f4 2a 49       	[r4 + 4] = 42			  ## gatt_client.c:1207:43
 1e0bebe:    e2 59             	r2 = h[r4 + 60] (u)
 1e0bec0:    d1 59             	r1 = h[r4 + 58] (u)
 1e0bec2:    60 58             	r0 = h[r4 + 12] (u)
 1e0bec4:    18 16             	call -976 <send_gatt_read_blob_request : 1e0baf6 >
 1e0bec6:    82 1f             	goto -252 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0bec8:    c1 f4 2e 49       	[r4 + 4] = 46			  ## gatt_client.c:1222:43
 1e0becc:    08 18             	goto 16 <.GJTIE658_1_1_+0x21A : 1e0bede >			  ## gatt_client.c:1222:43
 1e0bece:    c1 f4 30 49       	[r4 + 4] = 48			  ## gatt_client.c:1227:43
 1e0bed2:    60 58             	r0 = h[r4 + 12] (u)
 1e0bed4:    11 70             	r1 = 1
 1e0bed6:    57 16             	call -850 <att_execute_write_request : 1e0bb86 >
 1e0bed8:    79 1f             	goto -270 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0beda:    c1 f4 32 49       	[r4 + 4] = 50			  ## gatt_client.c:1172:43
 1e0bede:    40 08             	r0 = r4
 1e0bee0:    23 16             	call -954 <send_gatt_prepare_write_request : 1e0bb28 >
 1e0bee2:    74 1f             	goto -280 <.GJTIE658_1_1_+0x108 : 1e0bdcc >
 1e0bee4:    e0 99             	r0 = r4 + 30			  ## gatt_client.c:491:17
 1e0bee6:    65 a0             	r5 = sp + 6			  ## gatt_client.c:491:17
 1e0bee8:    51 08             	r1 = r5			  ## gatt_client.c:491:5
 1e0beea:    bf f3 ab f6       	call -4778 <reverse_128 : 1e0ac44 >			  ## gatt_client.c:491:5
 1e0beee:    82 59             	r2 = h[r4 + 48] (u)			  ## gatt_client.c:492:5
 1e0bef0:    71 59             	r1 = h[r4 + 46] (u)			  ## gatt_client.c:492:5
 1e0bef2:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:492:5
 1e0bef4:    03 71             	r3 = 16			  ## gatt_client.c:492:5
 1e0bef6:    0b 02             	[sp] = r3			  ## gatt_client.c:492:5
 1e0bef8:    53 08             	r3 = r5			  ## gatt_client.c:492:5
 1e0befa:    75 15             	call -1302 <att_find_by_type_value_request : 1e0b9e6 >			  ## gatt_client.c:492:5
 1e0befc:    67 1f             	goto -306 <.GJTIE658_1_1_+0x108 : 1e0bdcc >			  ## gatt_client.c:492:5
 1e0befe:    c1 f4 18 49       	[r4 + 4] = 24			  ## gatt_client.c:1162:43
 1e0bf02:    02 18             	goto 4 <.GJTIE658_1_1_+0x244 : 1e0bf08 >			  ## gatt_client.c:1162:43
 1e0bf04:    c1 f4 2c 49       	[r4 + 4] = 44			  ## gatt_client.c:1212:43
 1e0bf08:    f3 59             	r3 = h[r4 + 62] (u)
 1e0bf0a:    d2 59             	r2 = h[r4 + 58] (u)
 1e0bf0c:    61 58             	r1 = h[r4 + 12] (u)
 1e0bf0e:    04 49             	r4 = [r4 + 64]
 1e0bf10:    20 71             	r0 = 18
 1e0bf12:    0c 02             	[sp] = r4
 1e0bf14:    d9 14             	call -1614 <att_write_request : 1e0b8c8 >
 1e0bf16:    5a 1f             	goto -332 <.GJTIE658_1_1_+0x108 : 1e0bdcc >


gatt_client_write_value_of_characteristic:
 1e0bf18:    76 01             	[--sp] = {rets, r6-r4}			  ## gatt_client.c:2079:0
 1e0bf1a:    34 08             	r4 = r3			  ## gatt_client.c:2079:0
 1e0bf1c:    25 08             	r5 = r2			  ## gatt_client.c:2079:0
 1e0bf1e:    16 08             	r6 = r1			  ## gatt_client.c:2079:0
 1e0bf20:    14 15             	call -1496 <provide_context_for_conn_handle_and_start_timer : 1e0b94a >			  ## gatt_client.c:2084:33
 1e0bf22:    0f 20             	if (r0 == 0) goto 30 <gatt_client_write_value_of_characteristic+0x2A : 1e0bf42 >
 1e0bf24:    12 40             	r2 = [r0 + 4]			  ## gatt_client.c:254:21
 1e0bf26:    51 79             	r1 = 149			  ## gatt_client.c:254:21
 1e0bf28:    0d 34             	if (r2 != 0) goto 26 <gatt_client_write_value_of_characteristic+0x2C : 1e0bf44 >			  ## gatt_client.c:254:21
 1e0bf2a:    c1 ff 7e a7 e0 01 	r1 = 31500158 <user_client_gatt_event : 1e0a77e >			  ## gatt_client.c:2093:26
 1e0bf30:    29 40             	[r0 + 8] = r1			  ## gatt_client.c:2093:26
 1e0bf32:    de 51             	h[r0 + 58] = r6			  ## gatt_client.c:2094:34
 1e0bf34:    fd 51             	h[r0 + 62] = r5			  ## gatt_client.c:2095:34
 1e0bf36:    0c 41             	[r0 + 64] = r4			  ## gatt_client.c:2096:33
 1e0bf38:    c1 f4 17 09       	[r0 + 4] = 23			  ## gatt_client.c:2097:35
 1e0bf3c:    34 16             	call -920 <gatt_client_run : 1e0bba6 >			  ## gatt_client.c:2098:5
 1e0bf3e:    01 70             	r1 = 0
 1e0bf40:    01 18             	goto 2 <gatt_client_write_value_of_characteristic+0x2C : 1e0bf44 >
 1e0bf42:    61 75             	r1 = 86
 1e0bf44:    10 08             	r0 = r1			  ## gatt_client.c:2100:1
 1e0bf46:    56 01             	{pc, r6-r4} = [sp++]			  ## gatt_client.c:2100:1


gatt_client_read_value_of_characteristic_using_value_handle:
 1e0bf48:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:1926:0
 1e0bf4a:    14 08             	r4 = r1			  ## gatt_client.c:1926:0
 1e0bf4c:    fe 14             	call -1540 <provide_context_for_conn_handle_and_start_timer : 1e0b94a >			  ## gatt_client.c:1931:33
 1e0bf4e:    0e 20             	if (r0 == 0) goto 28 <gatt_client_read_value_of_characteristic_using_value_handle+0x24 : 1e0bf6c >
 1e0bf50:    11 40             	r1 = [r0 + 4]			  ## gatt_client.c:254:21
 1e0bf52:    55 79             	r5 = 149			  ## gatt_client.c:254:21
 1e0bf54:    0c 32             	if (r1 != 0) goto 24 <gatt_client_read_value_of_characteristic_using_value_handle+0x26 : 1e0bf6e >			  ## gatt_client.c:254:21
 1e0bf56:    c1 ff 7e a7 e0 01 	r1 = 31500158 <user_client_gatt_event : 1e0a77e >			  ## gatt_client.c:1940:26
 1e0bf5c:    29 40             	[r0 + 8] = r1			  ## gatt_client.c:1940:26
 1e0bf5e:    dc 51             	h[r0 + 58] = r4			  ## gatt_client.c:1941:34
 1e0bf60:    05 70             	r5 = 0			  ## gatt_client.c:1941:34
 1e0bf62:    ed 51             	h[r0 + 60] = r5			  ## gatt_client.c:1942:34
 1e0bf64:    c1 f4 0f 09       	[r0 + 4] = 15			  ## gatt_client.c:1943:35
 1e0bf68:    1e 16             	call -964 <gatt_client_run : 1e0bba6 >			  ## gatt_client.c:1944:5
 1e0bf6a:    01 18             	goto 2 <gatt_client_read_value_of_characteristic_using_value_handle+0x26 : 1e0bf6e >
 1e0bf6c:    65 75             	r5 = 86
 1e0bf6e:    50 08             	r0 = r5			  ## gatt_client.c:1946:1
 1e0bf70:    55 01             	{pc, r5, r4} = [sp++]			  ## gatt_client.c:1946:1


gatt_client_read_long_value_of_characteristic_using_value_handle:
 1e0bf72:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:2024:0
 1e0bf74:    14 08             	r4 = r1			  ## gatt_client.c:2024:0
 1e0bf76:    e9 14             	call -1582 <provide_context_for_conn_handle_and_start_timer : 1e0b94a >			  ## gatt_client.c:2006:33
 1e0bf78:    0e 20             	if (r0 == 0) goto 28 <gatt_client_read_long_value_of_characteristic_using_value_handle+0x24 : 1e0bf96 >
 1e0bf7a:    11 40             	r1 = [r0 + 4]			  ## gatt_client.c:254:21
 1e0bf7c:    55 79             	r5 = 149			  ## gatt_client.c:254:21
 1e0bf7e:    0c 32             	if (r1 != 0) goto 24 <gatt_client_read_long_value_of_characteristic_using_value_handle+0x26 : 1e0bf98 >			  ## gatt_client.c:254:21
 1e0bf80:    c1 ff 7e a7 e0 01 	r1 = 31500158 <user_client_gatt_event : 1e0a77e >			  ## gatt_client.c:2015:26
 1e0bf86:    29 40             	[r0 + 8] = r1			  ## gatt_client.c:2015:26
 1e0bf88:    dc 51             	h[r0 + 58] = r4			  ## gatt_client.c:2016:34
 1e0bf8a:    05 70             	r5 = 0			  ## gatt_client.c:2016:34
 1e0bf8c:    ed 51             	h[r0 + 60] = r5			  ## gatt_client.c:2017:34
 1e0bf8e:    c1 f4 11 09       	[r0 + 4] = 17			  ## gatt_client.c:2018:35
 1e0bf92:    09 16             	call -1006 <gatt_client_run : 1e0bba6 >			  ## gatt_client.c:2019:5
 1e0bf94:    01 18             	goto 2 <gatt_client_read_long_value_of_characteristic_using_value_handle+0x26 : 1e0bf98 >
 1e0bf96:    65 75             	r5 = 86
 1e0bf98:    50 08             	r0 = r5			  ## gatt_client.c:2025:5
 1e0bf9a:    55 01             	{pc, r5, r4} = [sp++]			  ## gatt_client.c:2025:5


gatt_client_request_can_send_now_event:
 1e0bf9c:    ff f3 11 fa       	goto -3038 <att_dispatch_client_request_can_send_now_event : 1e0b3c2 >			  ## gatt_client.c:139:0


gatt_client_sync_mtu:
 1e0bfa0:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:2493:0
 1e0bfa2:    fc 0b             	sp += -8			  ## gatt_client.c:2493:0
 1e0bfa4:    c5 ff 1c 1d 00 00 	r5 = 7452 <gatt_client_global_info : 1d1c >			  ## gatt_client.c:2493:0
 1e0bfaa:    04 4a             	r4 = [r5 + 0]			  ## gatt_client.c:2493:0
 1e0bfac:    13 08             	r3 = r1			  ## gatt_client.c:2493:0
 1e0bfae:    02 08             	r2 = r0			  ## gatt_client.c:2493:0
 1e0bfb0:    1e 28             	if (r4 == 0) goto 60 <gatt_client_sync_mtu+0x4E : 1e0bfee >			  ## gatt_client.c:2493:0
 1e0bfb2:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:206:25
 1e0bfb4:    20 f2 03 00       	if (r0 == r2) goto 6 <gatt_client_sync_mtu+0x1E : 1e0bfbe >			  ## gatt_client.c:206:25
 1e0bfb8:    04 48             	r4 = [r4 + 0]
 1e0bfba:    fb 39             	if (r4 != 0) goto -10 <gatt_client_sync_mtu+0x12 : 1e0bfb2 >
 1e0bfbc:    18 18             	goto 48 <gatt_client_sync_mtu+0x4E : 1e0bfee >
 1e0bfbe:    bb 58             	h[r4 + 22] = r3			  ## gatt_client.c:2504:21
 1e0bfc0:    40 4a             	r0 = [r5 + 16]			  ## gatt_client.c:111:18
 1e0bfc2:    15 20             	if (r0 == 0) goto 42 <gatt_client_sync_mtu+0x4E : 1e0bfee >			  ## gatt_client.c:111:18
 1e0bfc4:    50 7b             	r0 = 181			  ## gatt_client.c:116:18
 1e0bfc6:    d0 f5 02 00       	b[sp+2] = r0			  ## gatt_client.c:116:18
 1e0bfca:    40 70             	r0 = 4			  ## gatt_client.c:116:18
 1e0bfcc:    d0 f5 03 00       	b[sp+3] = r0			  ## gatt_client.c:117:18
 1e0bfd0:    24 a0             	r4 = sp + 2			  ## gatt_client.c:117:18
 1e0bfd2:    21 70             	r1 = 2			  ## gatt_client.c:118:5
 1e0bfd4:    40 08             	r0 = r4			  ## gatt_client.c:118:5
 1e0bfd6:    bf f3 d8 f5       	call -5200 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:118:5
 1e0bfda:    41 70             	r1 = 4			  ## gatt_client.c:120:5
 1e0bfdc:    32 08             	r2 = r3			  ## gatt_client.c:120:5
 1e0bfde:    bf f3 d4 f5       	call -5208 <little_endian_store_16 : 1e0ab8a >			  ## gatt_client.c:120:5
 1e0bfe2:    45 4a             	r5 = [r5 + 16]			  ## gatt_client.c:121:15
 1e0bfe4:    40 70             	r0 = 4			  ## gatt_client.c:121:5
 1e0bfe6:    01 70             	r1 = 0			  ## gatt_client.c:121:5
 1e0bfe8:    63 70             	r3 = 6			  ## gatt_client.c:121:5
 1e0bfea:    42 08             	r2 = r4			  ## gatt_client.c:121:5
 1e0bfec:    85 00             	call r5			  ## gatt_client.c:121:5
 1e0bfee:    04 0a             	sp += 8
 1e0bff0:    55 01             	{pc, r5, r4} = [sp++]


gatt_client_timeout_handler:
 1e0bff2:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:173:0
 1e0bff4:    44 40             	r4 = [r0 + 16]			  ## gatt_client.c:174:57
 1e0bff6:    09 28             	if (r4 == 0) goto 18 <gatt_client_timeout_handler+0x18 : 1e0c00a >
 1e0bff8:    10 48             	r0 = [r4 + 4]			  ## gatt_client.c:254:21
 1e0bffa:    07 20             	if (r0 == 0) goto 14 <gatt_client_timeout_handler+0x18 : 1e0c00a >
 1e0bffc:    c1 f4 00 49       	[r4 + 4] = 0			  ## gatt_client.c:615:35
 1e0c000:    40 08             	r0 = r4			  ## gatt_client.c:616:5
 1e0c002:    a0 14             	call -1728 <gatt_client_timeout_stop : 1e0b944 >			  ## gatt_client.c:616:5
 1e0c004:    f1 77             	r1 = 127			  ## gatt_client.c:1269:5
 1e0c006:    40 08             	r0 = r4			  ## gatt_client.c:1269:5
 1e0c008:    b8 14             	call -1680 <emit_gatt_complete_event : 1e0b97a >			  ## gatt_client.c:1269:5
 1e0c00a:    54 01             	{pc, r4} = [sp++]			  ## gatt_client.c:180:1


system_text_start:
 1e0c00c:    86 1c             	goto -1780 <gatt_client_write_value_of_characteristic_without_response+0x1C : 1e0b91a >
 1e0c00e:    e1 01             	[--sp] = {psr, reti}
 1e0c010:    e0 29             	if (r4 == 0) goto -64 <gatt_client_sync_mtu+0x32 : 1e0bfd2 >
 1e0c012:    e1 01             	[--sp] = {psr, reti}
 1e0c014:    4a 08             	r10 = r4
 1e0c016:    00 00             	nop


system_code_begin:
 1e0c018:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:443:0
 1e0c01a:    04 08             	r4 = r0			  ## timer.c:443:0
 1e0c01c:    97 f3 be d6       	call 3124604 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c020:    c0 ff b4 08 00 00 	r0 = 2228 <timer_head : 8b4 >			  ## spinlock.h:77:5
 1e0c026:    05 40             	r5 = [r0 + 0]			  ## spinlock.h:77:5
 1e0c028:    05 f2 19 00       	if (r5 == r0) goto 50 <system_code_begin+0x46 : 1e0c05e >
 1e0c02c:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:450:16
 1e0c02e:    41 f2 04 00       	if (r1 == r4) goto 8 <system_code_begin+0x22 : 1e0c03a >			  ## timer.c:450:16
 1e0c032:    05 4a             	r5 = [r5 + 0]
 1e0c034:    05 f2 fa 1f       	if (r5 != r0) goto -12 <system_code_begin+0x14 : 1e0c02c >
 1e0c038:    12 18             	goto 36 <system_code_begin+0x46 : 1e0c05e >
 1e0c03a:    97 f3 ad d6       	call 3124570 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c03e:    09 18             	goto 18 <system_code_begin+0x3A : 1e0c052 >
 1e0c040:    8f f3 1e b9       	call 2060860 <report_data_code_begin : 3280 >			  ## timer.c:453:29
 1e0c044:    41 4a             	r1 = [r5 + 16]			  ## timer.c:453:51
 1e0c046:    97 f3 55 d7       	call 3124906 <strcmp : 106ef4 >			  ## timer.c:453:22
 1e0c04a:    05 20             	if (r0 == 0) goto 10 <system_code_begin+0x3E : 1e0c056 >			  ## timer.c:453:22
 1e0c04c:    10 70             	r0 = 1			  ## timer.c:456:17
 1e0c04e:    97 f3 b3 d6       	call 3124582 <os_time_dly : 106db8 >			  ## timer.c:456:17
 1e0c052:    e0 6b             	r0 = b[r5 + 30] (u)
 1e0c054:    f5 31             	if (r0 != 0) goto -22 <system_code_begin+0x28 : 1e0c040 >
 1e0c056:    97 f3 a1 d6       	call 3124546 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c05a:    06 f4 01 5c       	[r5 + 24] |= 16777216			  ## timer.c:459:20
 1e0c05e:    97 f3 9b d6       	call 3124534 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c062:    8f f3 0d b9       	call 2060826 <report_data_code_begin : 3280 >			  ## timer.c:466:12
 1e0c066:    03 30             	if (r0 != 0) goto 6 <system_code_begin+0x56 : 1e0c06e >
 1e0c068:    c0 ff 30 25 e1 01 	r0 = 31532336 <update_target_end+0x2300 : 1e12530 >			  ## timer.c:467:9
 1e0c06e:    01 fd 30 4b       	r1 = r4 | 3145728			  ## timer.c:470:40
 1e0c072:    97 f3 c3 d6       	call 3124614 <os_taskq_del_type : 106dfc >			  ## timer.c:470:5
 1e0c076:    c0 ff c8 26 00 00 	r0 = 9928 <sys_timer_sem : 26c8 >			  ## timer.c:472:5
 1e0c07c:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:472:5
 1e0c07e:    d7 f3 c5 d6       	goto 3124618 <os_sem_post : 106e0c >			  ## timer.c:472:5


sys_timer_del:
 1e0c082:    ca 1f             	goto -108 <system_code_begin : 1e0c018 >			  ## timer.c:476:0


usr_timer_del:
 1e0c084:    75 01             	[--sp] = {rets, r5, r4}			  ## usr_timer.c:210:0
 1e0c086:    04 08             	r4 = r0			  ## usr_timer.c:210:0
 1e0c088:    97 f3 88 d6       	call 3124496 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c08c:    00 70             	r0 = 0
 1e0c08e:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >
 1e0c094:    c2 c0             	r2 = r0 << 3			  ## usr_timer.c:217:35
 1e0c096:    43 b4             	r3 = r2 + r1			  ## usr_timer.c:217:35
 1e0c098:    02 f6 94 31       	r2 = [r3 + 404]			  ## usr_timer.c:217:35
 1e0c09c:    33 fc 94 01       	r3 = r3 + 404			  ## usr_timer.c:217:35
 1e0c0a0:    32 f2 09 00       	if (r2 == r3) goto 18 <usr_timer_del+0x32 : 1e0c0b6 >
 1e0c0a4:    e5 54             	r5 = h[r2 + 28] (u)			  ## usr_timer.c:220:20
 1e0c0a6:    45 f2 04 00       	if (r5 == r4) goto 8 <usr_timer_del+0x2E : 1e0c0b2 >			  ## usr_timer.c:220:20
 1e0c0aa:    02 44             	r2 = [r2 + 0]
 1e0c0ac:    32 f2 fa 1f       	if (r2 != r3) goto -12 <usr_timer_del+0x20 : 1e0c0a4 >
 1e0c0b0:    02 18             	goto 4 <usr_timer_del+0x32 : 1e0c0b6 >
 1e0c0b2:    06 f4 01 2c       	[r2 + 24] |= 16777216			  ## usr_timer.c:222:24
 1e0c0b6:    10 80             	r0 += 1			  ## usr_timer.c:215:46
 1e0c0b8:    20 e0 ec 1f       	if (r0 != 2) goto -40 <usr_timer_del+0x10 : 1e0c094 >
 1e0c0bc:    15 01             	{rets, r5, r4} = [sp++]			  ## spinlock.h:88:5
 1e0c0be:    d7 f3 6b d6       	goto 3124438 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


__get_min_precesion:
 1e0c0c2:    77 01             	[--sp] = {rets, r7-r4}			  ## usr_timer.c:109:0
 1e0c0c4:    04 fb e8 03       	r4 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## usr_timer.c:109:0
 1e0c0c8:    05 70             	r5 = 0			  ## usr_timer.c:109:0
 1e0c0ca:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## usr_timer.c:109:0
 1e0c0d0:    81 bb             	r1 = r5 + r6			  ## list.h:124:18
 1e0c0d2:    00 f6 94 11       	r0 = [r1 + 404]			  ## list.h:124:18
 1e0c0d6:    11 fc 94 01       	r1 = r1 + 404			  ## list.h:124:18
 1e0c0da:    01 f2 0b 00       	if (r1 == r0) goto 22 <__get_min_precesion+0x32 : 1e0c0f4 >			  ## list.h:124:18
 1e0c0de:    57 40             	r7 = [r0 + 20]			  ## usr_timer.c:124:23
 1e0c0e0:    8f f3 19 b9       	call 2060850 <jiffies_msec : 3316 >			  ## usr_timer.c:124:33
 1e0c0e4:    20 be             	r0 = r7 - r0			  ## usr_timer.c:124:31
 1e0c0e6:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x2A : 1e0c0ec >
 1e0c0ea:    10 70             	r0 = 1			  ## usr_timer.c:125:13
 1e0c0ec:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x30 : 1e0c0f2 >
 1e0c0f0:    40 08             	r0 = r4			  ## usr_timer.c:128:13
 1e0c0f2:    04 08             	r4 = r0
 1e0c0f4:    85 80             	r5 += 8			  ## usr_timer.c:113:23
 1e0c0f6:    05 e1 eb 1f       	if (r5 != 16) goto -42 <__get_min_precesion+0xE : 1e0c0d0 >			  ## usr_timer.c:113:23
 1e0c0fa:    c5 ff b4 08 00 00 	r5 = 2228 <timer_head : 8b4 >
 1e0c100:    06 4a             	r6 = [r5 + 0]
 1e0c102:    56 f2 11 00       	if (r6 == r5) goto 34 <__get_min_precesion+0x66 : 1e0c128 >
 1e0c106:    b0 6d             	r0 = b[r6 + 27] (u)			  ## usr_timer.c:134:13
 1e0c108:    20 f3 0b 00       	if ((r0 & 1) != 0) goto 22 <__get_min_precesion+0x60 : 1e0c122 >			  ## usr_timer.c:134:13
 1e0c10c:    57 4c             	r7 = [r6 + 20]			  ## usr_timer.c:137:23
 1e0c10e:    8f f3 02 b9       	call 2060804 <jiffies_msec : 3316 >			  ## usr_timer.c:137:33
 1e0c112:    20 be             	r0 = r7 - r0			  ## usr_timer.c:137:31
 1e0c114:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x58 : 1e0c11a >
 1e0c118:    10 70             	r0 = 1			  ## usr_timer.c:138:13
 1e0c11a:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x5E : 1e0c120 >
 1e0c11e:    40 08             	r0 = r4			  ## usr_timer.c:141:13
 1e0c120:    04 08             	r4 = r0
 1e0c122:    06 4c             	r6 = [r6 + 0]
 1e0c124:    56 f2 ef 1f       	if (r6 != r5) goto -34 <__get_min_precesion+0x44 : 1e0c106 >
 1e0c128:    40 08             	r0 = r4			  ## usr_timer.c:148:5
 1e0c12a:    57 01             	{pc, r7-r4} = [sp++]			  ## usr_timer.c:148:5


__precesion_sort:
 1e0c12c:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:92:0
 1e0c12e:    02 42             	r2 = [r1 + 0]			  ## usr_timer.c:92:0
 1e0c130:    12 f2 0b 00       	if (r2 == r1) goto 22 <__precesion_sort+0x1E : 1e0c14a >			  ## usr_timer.c:92:0
 1e0c134:    63 40             	r3 = [r0 + 24]			  ## usr_timer.c:92:0
 1e0c136:    33 fd ff 3c       	r3 = r3 & 16777215			  ## usr_timer.c:92:0
 1e0c13a:    64 44             	r4 = [r2 + 24]			  ## usr_timer.c:98:26
 1e0c13c:    34 fd ff 4c       	r4 = r4 & 16777215			  ## usr_timer.c:98:26
 1e0c140:    43 f2 06 30       	if (r3 < r4) goto 12 <__precesion_sort+0x24 : 1e0c150 >			  ## usr_timer.c:98:26
 1e0c144:    02 44             	r2 = [r2 + 0]
 1e0c146:    12 f2 f8 1f       	if (r2 != r1) goto -16 <__precesion_sort+0xE : 1e0c13a >
 1e0c14a:    13 42             	r3 = [r1 + 4]			  ## list.h:154:28
 1e0c14c:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e0c14e:    03 18             	goto 6 <__precesion_sort+0x2A : 1e0c156 >			  ## list.h:137:16
 1e0c150:    13 44             	r3 = [r2 + 4]			  ## list.h:154:28
 1e0c152:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e0c154:    21 08             	r1 = r2			  ## list.h:137:16
 1e0c156:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0c158:    1b 40             	[r0 + 4] = r3			  ## list.h:139:16
 1e0c15a:    08 46             	[r3 + 0] = r0			  ## list.h:140:16
 1e0c15c:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:106:1


__usr_timer_add:
 1e0c15e:    79 01             	[--sp] = {rets, r9-r4}			  ## usr_timer.c:169:0
 1e0c160:    37 08             	r7 = r3			  ## usr_timer.c:169:0
 1e0c162:    28 08             	r8 = r2			  ## usr_timer.c:169:0
 1e0c164:    16 08             	r6 = r1			  ## usr_timer.c:169:0
 1e0c166:    04 08             	r4 = r0			  ## usr_timer.c:169:0
 1e0c168:    97 f3 18 d6       	call 3124272 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c16c:    09 f5 1c 00       	r9 = [sp+28]
 1e0c170:    00 70             	r0 = 0
 1e0c172:    c5 ff 78 21 00 00 	r5 = 8568 <timer_pool : 2178 >
 1e0c178:    f1 6b             	r1 = b[r5 + 31] (u)			  ## usr_timer.c:40:27
 1e0c17a:    0d 22             	if (r1 == 0) goto 26 <__usr_timer_add+0x38 : 1e0c196 >			  ## usr_timer.c:40:13
 1e0c17c:    10 80             	r0 += 1			  ## usr_timer.c:39:50
 1e0c17e:    05 82             	r5 += 32			  ## usr_timer.c:39:23
 1e0c180:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__usr_timer_add+0x1A : 1e0c178 >			  ## usr_timer.c:39:23
 1e0c184:    97 f3 08 d6       	call 3124240 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c188:    00 72             	r0 = 32			  ## usr_timer.c:56:29
 1e0c18a:    80 f3 42 0b       	call 5764 <malloc : 1e0d812 >			  ## usr_timer.c:56:29
 1e0c18e:    05 08             	r5 = r0			  ## usr_timer.c:56:29
 1e0c190:    06 3a             	if (r5 != 0) goto 12 <__usr_timer_add+0x40 : 1e0c19e >
 1e0c192:    06 70             	r6 = 0
 1e0c194:    56 18             	goto 172 <__usr_timer_add+0xE4 : 1e0c242 >
 1e0c196:    10 70             	r0 = 1			  ## usr_timer.c:41:32
 1e0c198:    f8 6b             	b[r5 + 31] = r0			  ## usr_timer.c:41:32
 1e0c19a:    97 f3 fd d5       	call 3124218 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c19e:    3c 4a             	[r5 + 12] = r4			  ## usr_timer.c:62:13
 1e0c1a0:    2e 4a             	[r5 + 8] = r6			  ## usr_timer.c:63:13
 1e0c1a2:    60 4a             	r0 = [r5 + 24]			  ## usr_timer.c:64:13
 1e0c1a4:    06 70             	r6 = 0			  ## usr_timer.c:64:13
 1e0c1a6:    ee 6b             	b[r5 + 30] = r6			  ## usr_timer.c:66:16
 1e0c1a8:    31 fd ff 8c       	r1 = r8 & 16777215			  ## usr_timer.c:64:13
 1e0c1ac:    7a c6             	r2 = r7 << 25			  ## usr_timer.c:67:16
 1e0c1ae:    22 fd 02 2c       	r2 = r2 & 33554432			  ## usr_timer.c:67:16
 1e0c1b2:    51 b4             	r1 |= r2			  ## usr_timer.c:64:13
 1e0c1b4:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## usr_timer.c:64:13
 1e0c1b8:    50 b2             	r0 |= r1			  ## usr_timer.c:67:16
 1e0c1ba:    68 4a             	[r5 + 24] = r0			  ## usr_timer.c:67:16
 1e0c1bc:    8f f3 ab b8       	call 2060630 <jiffies_msec : 3316 >			  ## usr_timer.c:68:18
 1e0c1c0:    80 09             	r0 += r8			  ## usr_timer.c:68:33
 1e0c1c2:    58 4a             	[r5 + 20] = r0			  ## usr_timer.c:68:16
 1e0c1c4:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## usr_timer.c:68:16
 1e0c1ca:    00 f7 46 40       	r0 = h[r4 + 70] (u)			  ## usr_timer.c:69:13
 1e0c1ce:    10 80             	r0 += 1			  ## usr_timer.c:69:13
 1e0c1d0:    10 f7 46 40       	h[r4 + 70] = r0			  ## usr_timer.c:69:13
 1e0c1d4:    21 04             	r1 = r0.l (u)			  ## usr_timer.c:70:9
 1e0c1d6:    e8 5a             	h[r5 + 28] = r0			  ## usr_timer.c:69:11
 1e0c1d8:    02 22             	if (r1 == 0) goto 4 <__usr_timer_add+0x80 : 1e0c1de >			  ## usr_timer.c:69:11
 1e0c1da:    05 3a             	if (r5 != 0) goto 10 <__usr_timer_add+0x88 : 1e0c1e6 >
 1e0c1dc:    32 18             	goto 100 <__usr_timer_add+0xE4 : 1e0c242 >
 1e0c1de:    10 70             	r0 = 1			  ## usr_timer.c:71:15
 1e0c1e0:    e8 5a             	h[r5 + 28] = r0			  ## usr_timer.c:71:15
 1e0c1e2:    10 f7 46 40       	h[r4 + 70] = r0			  ## usr_timer.c:72:19
 1e0c1e6:    97 f3 d9 d5       	call 3124146 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c1ea:    e0 5a             	r0 = h[r5 + 28] (u)			  ## spinlock.h:77:5
 1e0c1ec:    01 70             	r1 = 0
 1e0c1ee:    ca c0             	r2 = r1 << 3			  ## usr_timer.c:19:9
 1e0c1f0:    03 b5             	r3 = r2 + r4			  ## usr_timer.c:19:9
 1e0c1f2:    02 f6 94 31       	r2 = [r3 + 404]			  ## usr_timer.c:19:9
 1e0c1f6:    33 fc 94 01       	r3 = r3 + 404			  ## usr_timer.c:19:9
 1e0c1fa:    32 f2 07 00       	if (r2 == r3) goto 14 <__usr_timer_add+0xAE : 1e0c20c >			  ## usr_timer.c:19:9
 1e0c1fe:    e6 54             	r6 = h[r2 + 28] (u)			  ## usr_timer.c:20:29
 1e0c200:    27 04             	r7 = r0.l (u)			  ## usr_timer.c:20:23
 1e0c202:    67 f2 0a 00       	if (r7 == r6) goto 20 <__usr_timer_add+0xBC : 1e0c21a >
 1e0c206:    02 44             	r2 = [r2 + 0]
 1e0c208:    32 f2 f9 1f       	if (r2 != r3) goto -14 <__usr_timer_add+0xA0 : 1e0c1fe >
 1e0c20c:    26 04             	r6 = r0.l (u)			  ## usr_timer.c:25:13
 1e0c20e:    11 80             	r1 += 1			  ## usr_timer.c:18:46
 1e0c210:    03 2c             	if (r6 == 0) goto 6 <__usr_timer_add+0xBA : 1e0c218 >
 1e0c212:    11 e0 ec df       	ifs (r1 <= 1) goto -40 <__usr_timer_add+0x90 : 1e0c1ee >
 1e0c216:    04 18             	goto 8 <__usr_timer_add+0xC2 : 1e0c220 >
 1e0c218:    00 70             	r0 = 0
 1e0c21a:    10 80             	r0 += 1
 1e0c21c:    e8 5a             	h[r5 + 28] = r0
 1e0c21e:    e6 1f             	goto -52 <__usr_timer_add+0x8E : 1e0c1ec >
 1e0c220:    f0 fd 18 09       	r0 = r9 << 3			  ## usr_timer.c:179:31
 1e0c224:    40 09             	r0 += r4			  ## usr_timer.c:179:31
 1e0c226:    04 fc 94 01       	r4 = r0 + 404			  ## usr_timer.c:179:31
 1e0c22a:    4b 17             	call -362 <__get_min_precesion : 1e0c0c2 >			  ## usr_timer.c:185:20
 1e0c22c:    07 08             	r7 = r0			  ## usr_timer.c:185:20
 1e0c22e:    50 08             	r0 = r5			  ## usr_timer.c:187:5
 1e0c230:    41 08             	r1 = r4			  ## usr_timer.c:187:5
 1e0c232:    7c 17             	call -264 <__precesion_sort : 1e0c12c >			  ## usr_timer.c:187:5
 1e0c234:    87 f2 03 90       	if (r7 <= r8) goto 6 <__usr_timer_add+0xE0 : 1e0c23e >			  ## usr_timer.c:187:5
 1e0c238:    80 08             	r0 = r8			  ## usr_timer.c:191:9
 1e0c23a:    bf f3 f6 a2       	call -47636 <timer1_run : 1e0082a >			  ## usr_timer.c:191:9
 1e0c23e:    97 f3 ab d5       	call 3124054 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c242:    60 08             	r0 = r6			  ## usr_timer.c:199:1
 1e0c244:    59 01             	{pc, r9-r4} = [sp++]			  ## usr_timer.c:199:1


usr_timer_add:
 1e0c246:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:202:0
 1e0c248:    fe 0b             	sp += -4			  ## usr_timer.c:202:0
 1e0c24a:    34 08             	r4 = r3			  ## usr_timer.c:202:0
 1e0c24c:    28 fb 00 33       	r3 = rets			  ## usr_timer.c:204:5
 1e0c250:    03 70             	r3 = 0			  ## usr_timer.c:206:12
 1e0c252:    0c 02             	[sp] = r4			  ## usr_timer.c:206:12
 1e0c254:    84 17             	call -248 <__usr_timer_add : 1e0c15e >			  ## usr_timer.c:206:12
 1e0c256:    20 04             	r0 = r0.l (u)			  ## usr_timer.c:206:5
 1e0c258:    02 0a             	sp += 4			  ## usr_timer.c:206:5
 1e0c25a:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:206:5


sys_timeout_del:
 1e0c25c:    dd 1e             	goto -582 <system_code_begin : 1e0c018 >			  ## timer.c:481:0


usr_timeout_del:
 1e0c25e:    12 1f             	goto -476 <usr_timer_del : 1e0c084 >			  ## usr_timer.c:240:0


sys_timer_modify:
 1e0c260:    77 01             	[--sp] = {rets, r7-r4}			  ## timer.c:290:0
 1e0c262:    14 08             	r4 = r1			  ## timer.c:290:0
 1e0c264:    06 08             	r6 = r0			  ## timer.c:290:0
 1e0c266:    97 f3 99 d5       	call 3124018 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c26a:    2b 17             	call -426 <__get_min_precesion : 1e0c0c2 >			  ## timer.c:295:20
 1e0c26c:    c1 ff b4 08 00 00 	r1 = 2228 <timer_head : 8b4 >			  ## timer.c:295:20
 1e0c272:    07 42             	r7 = [r1 + 0]			  ## timer.c:295:20
 1e0c274:    05 08             	r5 = r0			  ## timer.c:295:20
 1e0c276:    17 f2 10 00       	if (r7 == r1) goto 32 <sys_timer_modify+0x3A : 1e0c29a >
 1e0c27a:    e0 5e             	r0 = h[r7 + 28] (u)			  ## timer.c:298:16
 1e0c27c:    60 f2 04 00       	if (r0 == r6) goto 8 <sys_timer_modify+0x28 : 1e0c288 >			  ## timer.c:298:16
 1e0c280:    07 4e             	r7 = [r7 + 0]
 1e0c282:    17 f2 fa 1f       	if (r7 != r1) goto -12 <sys_timer_modify+0x1A : 1e0c27a >
 1e0c286:    09 18             	goto 18 <sys_timer_modify+0x3A : 1e0c29a >
 1e0c288:    b0 6f             	r0 = b[r7 + 27] (u)			  ## timer.c:299:21
 1e0c28a:    41 08             	r1 = r4			  ## timer.c:299:21
 1e0c28c:    c8 fd c0 10       	r1 <= insert(r0, p:24, l:8)			  ## timer.c:299:21
 1e0c290:    69 4e             	[r7 + 24] = r1			  ## timer.c:299:21
 1e0c292:    8f f3 40 b8       	call 2060416 <jiffies_msec : 3316 >			  ## timer.c:300:26
 1e0c296:    40 09             	r0 += r4			  ## timer.c:300:41
 1e0c298:    58 4e             	[r7 + 20] = r0			  ## timer.c:300:24
 1e0c29a:    45 f2 03 90       	if (r5 <= r4) goto 6 <sys_timer_modify+0x44 : 1e0c2a4 >
 1e0c29e:    40 08             	r0 = r4			  ## timer.c:306:9
 1e0c2a0:    bf f3 c3 a2       	call -47738 <timer1_run : 1e0082a >			  ## timer.c:306:9
 1e0c2a4:    97 f3 78 d5       	call 3123952 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c2a8:    c0 ff c8 26 00 00 	r0 = 9928 <sys_timer_sem : 26c8 >			  ## timer.c:311:5
 1e0c2ae:    17 01             	{rets, r7-r4} = [sp++]			  ## timer.c:311:5
 1e0c2b0:    d7 f3 ac d5       	goto 3124056 <os_sem_post : 106e0c >			  ## timer.c:311:5


__sys_timer_add:
 1e0c2b4:    78 01             	[--sp] = {rets, r8-r4}			  ## timer.c:239:0
 1e0c2b6:    36 08             	r6 = r3			  ## timer.c:239:0
 1e0c2b8:    28 08             	r8 = r2			  ## timer.c:239:0
 1e0c2ba:    17 08             	r7 = r1			  ## timer.c:239:0
 1e0c2bc:    04 08             	r4 = r0			  ## timer.c:239:0
 1e0c2be:    97 f3 6d d5       	call 3123930 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c2c2:    00 70             	r0 = 0
 1e0c2c4:    c5 ff 78 21 00 00 	r5 = 8568 <timer_pool : 2178 >
 1e0c2ca:    f1 6b             	r1 = b[r5 + 31] (u)			  ## timer.c:192:27
 1e0c2cc:    0d 22             	if (r1 == 0) goto 26 <__sys_timer_add+0x34 : 1e0c2e8 >			  ## timer.c:192:13
 1e0c2ce:    10 80             	r0 += 1			  ## timer.c:191:50
 1e0c2d0:    05 82             	r5 += 32			  ## timer.c:191:23
 1e0c2d2:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__sys_timer_add+0x16 : 1e0c2ca >			  ## timer.c:191:23
 1e0c2d6:    97 f3 5f d5       	call 3123902 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c2da:    00 72             	r0 = 32			  ## timer.c:209:29
 1e0c2dc:    80 f3 99 0a       	call 5426 <malloc : 1e0d812 >			  ## timer.c:209:29
 1e0c2e0:    05 08             	r5 = r0			  ## timer.c:209:29
 1e0c2e2:    06 3a             	if (r5 != 0) goto 12 <__sys_timer_add+0x3C : 1e0c2f0 >
 1e0c2e4:    04 70             	r4 = 0
 1e0c2e6:    57 18             	goto 174 <__sys_timer_add+0xE2 : 1e0c396 >
 1e0c2e8:    10 70             	r0 = 1			  ## timer.c:193:32
 1e0c2ea:    f8 6b             	b[r5 + 31] = r0			  ## timer.c:193:32
 1e0c2ec:    97 f3 54 d5       	call 3123880 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c2f0:    3c 4a             	[r5 + 12] = r4			  ## timer.c:215:13
 1e0c2f2:    2f 4a             	[r5 + 8] = r7			  ## timer.c:216:13
 1e0c2f4:    60 4a             	r0 = [r5 + 24]			  ## timer.c:217:13
 1e0c2f6:    01 70             	r1 = 0			  ## timer.c:217:13
 1e0c2f8:    e9 6b             	b[r5 + 30] = r1			  ## timer.c:219:16
 1e0c2fa:    31 fd ff 8c       	r1 = r8 & 16777215			  ## timer.c:217:13
 1e0c2fe:    72 c6             	r2 = r6 << 25			  ## timer.c:220:16
 1e0c300:    22 fd 02 2c       	r2 = r2 & 33554432			  ## timer.c:220:16
 1e0c304:    51 b4             	r1 |= r2			  ## timer.c:217:13
 1e0c306:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## timer.c:217:13
 1e0c30a:    50 b2             	r0 |= r1			  ## timer.c:220:16
 1e0c30c:    68 4a             	[r5 + 24] = r0			  ## timer.c:220:16
 1e0c30e:    8f f3 02 b8       	call 2060292 <jiffies_msec : 3316 >			  ## timer.c:221:18
 1e0c312:    80 09             	r0 += r8			  ## timer.c:221:33
 1e0c314:    58 4a             	[r5 + 20] = r0			  ## timer.c:221:16
 1e0c316:    8f f3 b3 b7       	call 2060134 <report_data_code_begin : 3280 >			  ## timer.c:222:16
 1e0c31a:    03 30             	if (r0 != 0) goto 6 <__sys_timer_add+0x6E : 1e0c322 >			  ## timer.c:222:16
 1e0c31c:    c0 ff 30 25 e1 01 	r0 = 31532336 <update_target_end+0x2300 : 1e12530 >			  ## timer.c:226:9
 1e0c322:    48 4a             	[r5 + 16] = r0			  ## timer.c:222:14
 1e0c324:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:222:14
 1e0c32a:    01 f7 46 00       	r1 = h[r0 + 70] (u)			  ## timer.c:229:13
 1e0c32e:    11 80             	r1 += 1			  ## timer.c:229:13
 1e0c330:    11 f7 46 00       	h[r0 + 70] = r1			  ## timer.c:229:13
 1e0c334:    62 04             	r2 = r1.l (u)			  ## timer.c:230:9
 1e0c336:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:229:11
 1e0c338:    04 34             	if (r2 != 0) goto 8 <__sys_timer_add+0x8E : 1e0c342 >			  ## timer.c:229:11
 1e0c33a:    11 70             	r1 = 1			  ## timer.c:231:15
 1e0c33c:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:231:15
 1e0c33e:    11 f7 46 00       	h[r0 + 70] = r1			  ## timer.c:232:19
 1e0c342:    97 f3 2b d5       	call 3123798 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c346:    bd 16             	call -646 <__get_min_precesion : 1e0c0c2 >			  ## timer.c:249:20
 1e0c348:    e4 5a             	r4 = h[r5 + 28] (u)			  ## timer.c:249:20
 1e0c34a:    c1 ff b4 08 00 00 	r1 = 2228 <timer_head : 8b4 >
 1e0c350:    02 42             	r2 = [r1 + 0]
 1e0c352:    03 18             	goto 6 <__sys_timer_add+0xA6 : 1e0c35a >
 1e0c354:    43 08             	r3 = r4
 1e0c356:    14 96             	r4 = r3 + 1
 1e0c358:    ec 5a             	h[r5 + 28] = r4
 1e0c35a:    12 f2 08 00       	if (r2 == r1) goto 16 <__sys_timer_add+0xBA : 1e0c36e >
 1e0c35e:    23 08             	r3 = r2
 1e0c360:    e6 56             	r6 = h[r3 + 28] (u)			  ## timer.c:67:25
 1e0c362:    27 05             	r7 = r4.l (u)			  ## timer.c:67:19
 1e0c364:    67 f2 f6 0f       	if (r7 == r6) goto -20 <__sys_timer_add+0xA0 : 1e0c354 >
 1e0c368:    03 46             	r3 = [r3 + 0]
 1e0c36a:    13 f2 f9 1f       	if (r3 != r1) goto -14 <__sys_timer_add+0xAC : 1e0c360 >
 1e0c36e:    26 05             	r6 = r4.l (u)			  ## timer.c:72:9
 1e0c370:    03 70             	r3 = 0			  ## timer.c:72:9
 1e0c372:    f1 2d             	if (r6 == 0) goto -30 <__sys_timer_add+0xA2 : 1e0c356 >			  ## timer.c:72:9
 1e0c374:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e0c376:    1d 42             	[r1 + 4] = r5			  ## list.h:137:16
 1e0c378:    09 4a             	[r5 + 0] = r1			  ## list.h:138:16
 1e0c37a:    1a 4a             	[r5 + 4] = r2			  ## list.h:139:16
 1e0c37c:    0d 44             	[r2 + 0] = r5			  ## list.h:140:16
 1e0c37e:    80 f2 03 90       	if (r0 <= r8) goto 6 <__sys_timer_add+0xD4 : 1e0c388 >			  ## list.h:140:16
 1e0c382:    80 08             	r0 = r8			  ## timer.c:256:9
 1e0c384:    bf f3 51 a2       	call -47966 <timer1_run : 1e0082a >			  ## timer.c:256:9
 1e0c388:    97 f3 06 d5       	call 3123724 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c38c:    c0 ff c8 26 00 00 	r0 = 9928 <sys_timer_sem : 26c8 >			  ## timer.c:261:5
 1e0c392:    97 f3 3b d5       	call 3123830 <os_sem_post : 106e0c >			  ## timer.c:261:5
 1e0c396:    20 05             	r0 = r4.l (u)			  ## timer.c:266:1
 1e0c398:    58 01             	{pc, r8-r4} = [sp++]			  ## timer.c:266:1


sys_timer_add:
 1e0c39a:    28 fb 00 33       	r3 = rets			  ## timer.c:269:0
 1e0c39e:    03 70             	r3 = 0			  ## timer.c:274:12
 1e0c3a0:    89 1f             	goto -238 <__sys_timer_add : 1e0c2b4 >			  ## timer.c:274:12


sys_timeout_add:
 1e0c3a2:    32 e0 01 80       	if (r2 > 3) goto 2 <sys_timeout_add+0x6 : 1e0c3a8 >			  ## timer.c:278:0
 1e0c3a6:    32 70             	r2 = 3			  ## timer.c:283:6
 1e0c3a8:    28 fb 00 33       	r3 = rets			  ## timer.c:280:5
 1e0c3ac:    13 70             	r3 = 1			  ## timer.c:286:12
 1e0c3ae:    82 1f             	goto -252 <__sys_timer_add : 1e0c2b4 >			  ## timer.c:286:12


usr_timeout_add:
 1e0c3b0:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:232:0
 1e0c3b2:    fe 0b             	sp += -4			  ## usr_timer.c:232:0
 1e0c3b4:    12 08             	r2 = r1			  ## usr_timer.c:232:0
 1e0c3b6:    01 08             	r1 = r0			  ## usr_timer.c:232:0
 1e0c3b8:    28 fb 00 03       	r0 = rets			  ## usr_timer.c:234:5
 1e0c3bc:    14 70             	r4 = 1			  ## usr_timer.c:236:12
 1e0c3be:    00 70             	r0 = 0			  ## usr_timer.c:236:12
 1e0c3c0:    13 70             	r3 = 1			  ## usr_timer.c:236:12
 1e0c3c2:    0c 02             	[sp] = r4			  ## usr_timer.c:236:12
 1e0c3c4:    cc 16             	call -616 <__usr_timer_add : 1e0c15e >			  ## usr_timer.c:236:12
 1e0c3c6:    20 04             	r0 = r0.l (u)			  ## usr_timer.c:236:5
 1e0c3c8:    02 0a             	sp += 4			  ## usr_timer.c:236:5
 1e0c3ca:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:236:5


__usr_timer_del:
 1e0c3cc:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:79:0
 1e0c3ce:    04 08             	r4 = r0			  ## usr_timer.c:79:0
 1e0c3d0:    97 f3 e4 d4       	call 3123656 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c3d4:    01 48             	r1 = [r4 + 0]			  ## list.h:165:36
 1e0c3d6:    12 48             	r2 = [r4 + 4]			  ## list.h:165:23
 1e0c3d8:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0c3da:    c0 ff 78 21 00 00 	r0 = 8568 <timer_pool : 2178 >			  ## list.h:159:16
 1e0c3e0:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0c3e2:    04 f2 09 30       	if (r4 < r0) goto 18 <__usr_timer_del+0x2C : 1e0c3f8 >
 1e0c3e6:    00 fc 40 01       	r0 = r0 + 320
 1e0c3ea:    04 f2 05 20       	if (r4 >= r0) goto 10 <__usr_timer_del+0x2C : 1e0c3f8 >
 1e0c3ee:    00 70             	r0 = 0			  ## timer.c:83:21
 1e0c3f0:    f8 69             	b[r4 + 31] = r0			  ## timer.c:83:21
 1e0c3f2:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e0c3f4:    d7 f3 d0 d4       	goto 3123616 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c3f8:    97 f3 ce d4       	call 3123612 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c3fc:    40 08             	r0 = r4			  ## usr_timer.c:85:9
 1e0c3fe:    14 01             	{rets, r4} = [sp++]			  ## usr_timer.c:85:9
 1e0c400:    c0 f3 0c 0a       	goto 5144 <free : 1e0d81c >			  ## usr_timer.c:85:9


usr_timer_schedule:
 1e0c404:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:299:0
 1e0c406:    97 f3 c9 d4       	call 3123602 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c40a:    05 70             	r5 = 0
 1e0c40c:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >
 1e0c412:    cb ff 01 00 00 40 	r11 = 1073741825 <umoddi3.bc+0x1 : 1 >
 1e0c418:    c9 ff 0a 00 00 b0 	r9 = 2952790026 <report_overlay_size+0x6 : a >
 1e0c41e:    ca ff f6 ff ff 4f 	r10 = 1342177270 <bank_code_load_addr+0x1E13E2 : 1fffff6 >
 1e0c424:    e8 c0             	r0 = r5 << 3			  ## usr_timer.c:307:35
 1e0c426:    80 09             	r0 += r8			  ## usr_timer.c:307:35
 1e0c428:    07 f6 94 01       	r7 = [r0 + 404]			  ## usr_timer.c:309:9
 1e0c42c:    06 fc 94 01       	r6 = r0 + 404			  ## usr_timer.c:307:35
 1e0c430:    67 f2 37 00       	if (r7 == r6) goto 110 <usr_timer_schedule+0x9E : 1e0c4a2 >
 1e0c434:    74 08             	r4 = r7
 1e0c436:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:310:17
 1e0c438:    07 48             	r7 = [r4 + 0]			  ## usr_timer.c:310:17
 1e0c43a:    20 f3 2a 00       	if ((r0 & 1) != 0) goto 84 <usr_timer_schedule+0x8E : 1e0c492 >
 1e0c43e:    8f f3 3a b7       	call 2059892 <jiffies_half_msec : 32b6 >			  ## usr_timer.c:315:29
 1e0c442:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:316:32
 1e0c444:    10 80             	r0 += 1			  ## usr_timer.c:315:49
 1e0c446:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:315:54
 1e0c448:    01 f2 09 90       	if (r1 <= r0) goto 18 <usr_timer_schedule+0x5A : 1e0c45e >
 1e0c44c:    22 b2             	r2 = r1 - r0			  ## usr_timer.c:316:56
 1e0c44e:    b2 f2 06 30       	if (r2 < r11) goto 12 <usr_timer_schedule+0x5A : 1e0c45e >			  ## usr_timer.c:316:56
 1e0c452:    80 fb 90 21       	r2 = r1 + r9			  ## usr_timer.c:318:36
 1e0c456:    a1 f2 01 80       	if (r1 > r10) goto 2 <usr_timer_schedule+0x58 : 1e0c45c >			  ## usr_timer.c:318:36
 1e0c45a:    02 08             	r2 = r0			  ## usr_timer.c:317:25
 1e0c45c:    5a 48             	[r4 + 20] = r2
 1e0c45e:    8f f3 2a b7       	call 2059860 <jiffies_half_msec : 32b6 >			  ## usr_timer.c:323:22
 1e0c462:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:323:22
 1e0c464:    10 80             	r0 += 1			  ## usr_timer.c:323:22
 1e0c466:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:323:22
 1e0c468:    10 f2 19 b0       	ifs (r0 < r1) goto 50 <usr_timer_schedule+0x9A : 1e0c49e >			  ## usr_timer.c:323:22
 1e0c46c:    97 f3 94 d4       	call 3123496 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c470:    21 48             	r1 = [r4 + 8]			  ## usr_timer.c:328:28
 1e0c472:    02 22             	if (r1 == 0) goto 4 <usr_timer_schedule+0x74 : 1e0c478 >			  ## usr_timer.c:328:28
 1e0c474:    30 48             	r0 = [r4 + 12]			  ## usr_timer.c:329:36
 1e0c476:    81 00             	call r1			  ## usr_timer.c:329:25
 1e0c478:    97 f3 90 d4       	call 3123488 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c47c:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:332:25
 1e0c47e:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <usr_timer_schedule+0x8E : 1e0c492 >			  ## usr_timer.c:332:25
 1e0c482:    8f f3 48 b7       	call 2059920 <jiffies_msec : 3316 >			  ## usr_timer.c:337:38
 1e0c486:    61 48             	r1 = [r4 + 24]			  ## usr_timer.c:337:59
 1e0c488:    31 fd ff 1c       	r1 = r1 & 16777215			  ## usr_timer.c:337:59
 1e0c48c:    10 09             	r0 += r1			  ## usr_timer.c:337:53
 1e0c48e:    58 48             	[r4 + 20] = r0			  ## usr_timer.c:337:36
 1e0c490:    06 18             	goto 12 <usr_timer_schedule+0x9A : 1e0c49e >			  ## usr_timer.c:337:36
 1e0c492:    97 f3 81 d4       	call 3123458 <local_irq_enable : 106d98 >
 1e0c496:    40 08             	r0 = r4
 1e0c498:    99 17             	call -206 <__usr_timer_del : 1e0c3cc >
 1e0c49a:    97 f3 7f d4       	call 3123454 <local_irq_disable : 106d9c >
 1e0c49e:    67 f2 c9 1f       	if (r7 != r6) goto -110 <usr_timer_schedule+0x30 : 1e0c434 >
 1e0c4a2:    15 80             	r5 += 1			  ## usr_timer.c:305:46
 1e0c4a4:    25 e0 be 1f       	if (r5 != 2) goto -132 <usr_timer_schedule+0x20 : 1e0c424 >
 1e0c4a8:    0c 16             	call -1000 <__get_min_precesion : 1e0c0c2 >			  ## usr_timer.c:344:16
 1e0c4aa:    bf f3 be a1       	call -48260 <timer1_run : 1e0082a >			  ## usr_timer.c:344:5
 1e0c4ae:    97 f3 73 d4       	call 3123430 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c4b2:    c0 ff c8 26 00 00 	r0 = 9928 <sys_timer_sem : 26c8 >			  ## usr_timer.c:348:5
 1e0c4b8:    1b 01             	{rets, r11-r4} = [sp++]			  ## usr_timer.c:348:5
 1e0c4ba:    d7 f3 a7 d4       	goto 3123534 <os_sem_post : 106e0c >			  ## usr_timer.c:348:5


usr_timer_modify:
 1e0c4be:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:245:0
 1e0c4c0:    1a 08             	r10 = r1			  ## usr_timer.c:245:0
 1e0c4c2:    05 08             	r5 = r0			  ## usr_timer.c:245:0
 1e0c4c4:    97 f3 6a d4       	call 3123412 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c4c8:    39 fd ff ac       	r9 = r10 & 16777215
 1e0c4cc:    04 70             	r4 = 0
 1e0c4ce:    f9 15             	call -1038 <__get_min_precesion : 1e0c0c2 >			  ## usr_timer.c:250:20
 1e0c4d0:    08 08             	r8 = r0			  ## usr_timer.c:250:20
 1e0c4d2:    cb ff c0 23 00 00 	r11 = 9152 <cur_ch : 23c0 >
 1e0c4d8:    e0 c0             	r0 = r4 << 3			  ## usr_timer.c:254:35
 1e0c4da:    b0 09             	r0 += r11			  ## usr_timer.c:254:35
 1e0c4dc:    06 f6 94 01       	r6 = [r0 + 404]			  ## usr_timer.c:254:35
 1e0c4e0:    07 fc 94 01       	r7 = r0 + 404			  ## usr_timer.c:254:35
 1e0c4e4:    76 f2 18 00       	if (r6 == r7) goto 48 <usr_timer_modify+0x5A : 1e0c518 >
 1e0c4e8:    e0 5c             	r0 = h[r6 + 28] (u)			  ## usr_timer.c:257:20
 1e0c4ea:    50 f2 04 00       	if (r0 == r5) goto 8 <usr_timer_modify+0x38 : 1e0c4f6 >			  ## usr_timer.c:257:20
 1e0c4ee:    06 4c             	r6 = [r6 + 0]
 1e0c4f0:    76 f2 fa 1f       	if (r6 != r7) goto -12 <usr_timer_modify+0x2A : 1e0c4e8 >
 1e0c4f4:    11 18             	goto 34 <usr_timer_modify+0x5A : 1e0c518 >
 1e0c4f6:    60 4c             	r0 = [r6 + 24]			  ## usr_timer.c:258:25
 1e0c4f8:    20 fd ff 0c       	r0 = r0 & 4278190080			  ## usr_timer.c:258:25
 1e0c4fc:    e0 fd 90 00       	r0 = r0 | r9			  ## usr_timer.c:258:25
 1e0c500:    68 4c             	[r6 + 24] = r0			  ## usr_timer.c:258:25
 1e0c502:    8f f3 08 b7       	call 2059792 <jiffies_msec : 3316 >			  ## usr_timer.c:259:30
 1e0c506:    a0 09             	r0 += r10			  ## usr_timer.c:259:45
 1e0c508:    58 4c             	[r6 + 20] = r0			  ## usr_timer.c:259:28
 1e0c50a:    00 4c             	r0 = [r6 + 0]			  ## list.h:165:36
 1e0c50c:    11 4c             	r1 = [r6 + 4]			  ## list.h:165:23
 1e0c50e:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0c510:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0c512:    60 08             	r0 = r6			  ## usr_timer.c:261:17
 1e0c514:    71 08             	r1 = r7			  ## usr_timer.c:261:17
 1e0c516:    0a 16             	call -1004 <__precesion_sort : 1e0c12c >			  ## usr_timer.c:261:17
 1e0c518:    14 80             	r4 += 1			  ## usr_timer.c:252:46
 1e0c51a:    24 e0 dd 1f       	if (r4 != 2) goto -70 <usr_timer_modify+0x1A : 1e0c4d8 >
 1e0c51e:    a8 f2 03 90       	if (r8 <= r10) goto 6 <usr_timer_modify+0x6A : 1e0c528 >
 1e0c522:    a0 08             	r0 = r10			  ## usr_timer.c:268:9
 1e0c524:    bf f3 81 a1       	call -48382 <timer1_run : 1e0082a >			  ## usr_timer.c:268:9
 1e0c528:    1b 01             	{rets, r11-r4} = [sp++]			  ## spinlock.h:88:5
 1e0c52a:    d7 f3 35 d4       	goto 3123306 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_timer_init:
 1e0c52e:    34 00             	[--sp] = rets			  ## timer.c:527:0
 1e0c530:    c0 ff c8 26 00 00 	r0 = 9928 <sys_timer_sem : 26c8 >			  ## timer.c:530:5
 1e0c536:    01 70             	r1 = 0			  ## timer.c:530:5
 1e0c538:    97 f3 62 d4       	call 3123396 <os_sem_create : 106e00 >			  ## timer.c:530:5
 1e0c53c:    c0 ff b4 c5 e0 01 	r0 = 31507892 <sys_timer_task : 1e0c5b4 >			  ## timer.c:532:5
 1e0c542:    c2 ff 27 25 e1 01 	r2 = 31532327 <update_target_end+0x22F7 : 1e12527 >			  ## timer.c:532:5
 1e0c548:    01 70             	r1 = 0			  ## timer.c:532:5
 1e0c54a:    80 f3 fe 12       	call 9724 <task_create : 1e0eb4a >			  ## timer.c:532:5
 1e0c54e:    c0 ff 54 25 00 00 	r0 = 9556 <usr_timer_head : 2554 >			  ## timer.c:532:5
 1e0c554:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e0c556:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e0c558:    81 90             	r1 = r0 + 8			  ## list.h:188:16
 1e0c55a:    29 40             	[r0 + 8] = r1			  ## list.h:188:16
 1e0c55c:    39 40             	[r0 + 12] = r1			  ## list.h:189:16
 1e0c55e:    88 01             	{rets} = [sp++]			  ## usr_timer.c:361:5
 1e0c560:    ff f3 bf be       	goto -33410 <timer1_init : 1e042e2 >			  ## usr_timer.c:361:5


usr_systimer_callback:
 1e0c564:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## usr_timer.c:282:0
 1e0c56a:    01 f6 9c 01       	r1 = [r0 + 412]			  ## list.h:124:18
 1e0c56e:    02 fc 9c 01       	r2 = r0 + 412			  ## list.h:124:18
 1e0c572:    10 70             	r0 = 1			  ## list.h:124:23
 1e0c574:    21 f2 01 00       	if (r1 == r2) goto 2 <usr_systimer_callback+0x16 : 1e0c57a >			  ## list.h:124:23
 1e0c578:    00 70             	r0 = 0			  ## list.h:124:23
 1e0c57a:    20 00             	rts			  ## usr_timer.c:295:5


__timer_del:
 1e0c57c:    74 01             	[--sp] = {rets, r4}			  ## timer.c:90:0
 1e0c57e:    04 08             	r4 = r0			  ## timer.c:90:0
 1e0c580:    97 f3 0c d4       	call 3123224 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c584:    01 48             	r1 = [r4 + 0]			  ## list.h:165:36
 1e0c586:    12 48             	r2 = [r4 + 4]			  ## list.h:165:23
 1e0c588:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0c58a:    c0 ff 78 21 00 00 	r0 = 8568 <timer_pool : 2178 >			  ## list.h:159:16
 1e0c590:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0c592:    04 f2 09 30       	if (r4 < r0) goto 18 <__timer_del+0x2C : 1e0c5a8 >
 1e0c596:    00 fc 40 01       	r0 = r0 + 320
 1e0c59a:    04 f2 05 20       	if (r4 >= r0) goto 10 <__timer_del+0x2C : 1e0c5a8 >
 1e0c59e:    00 70             	r0 = 0			  ## timer.c:83:21
 1e0c5a0:    f8 69             	b[r4 + 31] = r0			  ## timer.c:83:21
 1e0c5a2:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e0c5a4:    d7 f3 f8 d3       	goto 3123184 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c5a8:    97 f3 f6 d3       	call 3123180 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c5ac:    40 08             	r0 = r4			  ## timer.c:99:9
 1e0c5ae:    14 01             	{rets, r4} = [sp++]			  ## timer.c:99:9
 1e0c5b0:    c0 f3 34 09       	goto 4712 <free : 1e0d81c >			  ## timer.c:99:9


sys_timer_task:
 1e0c5b4:    f8 0b             	sp += -16			  ## timer.c:496:0
 1e0c5b6:    c7 ff b4 08 00 00 	r7 = 2228 <timer_head : 8b4 >			  ## timer.c:496:0
 1e0c5bc:    c8 ff c8 26 00 00 	r8 = 9928 <sys_timer_sem : 26c8 >			  ## timer.c:496:0
 1e0c5c2:    0e 70             	r14 = 0			  ## timer.c:496:0
 1e0c5c4:    a9 70             	r9 = 10			  ## timer.c:496:0
 1e0c5c6:    cd ff 01 00 00 40 	r13 = 1073741825 <umoddi3.bc+0x1 : 1 >			  ## timer.c:496:0
 1e0c5cc:    4b fb b0 9c       	r11 = r9 + 2952790016			  ## timer.c:496:0
 1e0c5d0:    cc ff f6 ff ff 4f 	r12 = 1342177270 <bank_code_load_addr+0x1E13E2 : 1fffff6 >			  ## timer.c:496:0
 1e0c5d6:    1f 70             	r15 = 1			  ## timer.c:496:0
 1e0c5d8:    ca ff 30 25 e1 01 	r10 = 31532336 <update_target_end+0x2300 : 1e12530 >			  ## timer.c:496:0
 1e0c5de:    c4 ff 78 21 00 00 	r4 = 8568 <timer_pool : 2178 >			  ## timer.c:496:0
 1e0c5e4:    97 f3 da d3       	call 3123124 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c5e8:    06 4e             	r6 = [r7 + 0]			  ## timer.c:113:5
 1e0c5ea:    76 f2 66 00       	if (r6 == r7) goto 204 <sys_timer_task+0x106 : 1e0c6ba >
 1e0c5ee:    65 08             	r5 = r6
 1e0c5f0:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:114:13
 1e0c5f2:    06 4a             	r6 = [r5 + 0]			  ## timer.c:114:13
 1e0c5f4:    20 f3 2d 00       	if ((r0 & 1) != 0) goto 90 <sys_timer_task+0x9E : 1e0c652 >
 1e0c5f8:    8f f3 5d b6       	call 2059450 <jiffies_half_msec : 32b6 >			  ## timer.c:126:21
 1e0c5fc:    51 4a             	r1 = [r5 + 20]			  ## timer.c:127:24
 1e0c5fe:    10 80             	r0 += 1			  ## timer.c:126:41
 1e0c600:    40 d0             	r0 = r0 >> 1			  ## timer.c:126:46
 1e0c602:    22 b2             	r2 = r1 - r0			  ## timer.c:127:48
 1e0c604:    01 f2 09 90       	if (r1 <= r0) goto 18 <sys_timer_task+0x66 : 1e0c61a >			  ## timer.c:127:48
 1e0c608:    d2 f2 07 30       	if (r2 < r13) goto 14 <sys_timer_task+0x66 : 1e0c61a >
 1e0c60c:    80 fb b0 21       	r2 = r1 + r11			  ## timer.c:129:28
 1e0c610:    c1 f2 01 80       	if (r1 > r12) goto 2 <sys_timer_task+0x62 : 1e0c616 >			  ## timer.c:129:28
 1e0c614:    02 08             	r2 = r0			  ## timer.c:128:17
 1e0c616:    5a 4a             	[r5 + 20] = r2
 1e0c618:    21 08             	r1 = r2			  ## timer.c:134:13
 1e0c61a:    10 f2 4b b0       	ifs (r0 < r1) goto 150 <sys_timer_task+0x100 : 1e0c6b4 >
 1e0c61e:    1f f9 1e 50       	b[r5 + 30] = r15			  ## timer.c:138:20
 1e0c622:    97 f3 b9 d3       	call 3123058 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c626:    20 4a             	r0 = [r5 + 8]			  ## timer.c:142:26
 1e0c628:    08 02             	[sp] = r0			  ## timer.c:142:16
 1e0c62a:    1f f5 04 00       	[sp+4] = r15			  ## timer.c:143:16
 1e0c62e:    30 4a             	r0 = [r5 + 12]			  ## timer.c:144:26
 1e0c630:    28 02             	[sp+8] = r0			  ## timer.c:144:16
 1e0c632:    40 4a             	r0 = [r5 + 16]			  ## timer.c:145:45
 1e0c634:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:145:65
 1e0c636:    01 fd 30 1b       	r1 = r1 | 3145728			  ## timer.c:145:63
 1e0c63a:    03 a0             	r3 = sp + 0			  ## timer.c:145:63
 1e0c63c:    32 70             	r2 = 3			  ## timer.c:145:15
 1e0c63e:    97 f3 cf d3       	call 3123102 <os_taskq_post_type : 106de0 >			  ## timer.c:145:15
 1e0c642:    1e f9 1e 50       	b[r5 + 30] = r14			  ## timer.c:147:20
 1e0c646:    d0 e0 16 c0       	ifs (r0 > 13) goto 44 <sys_timer_task+0xC2 : 1e0c676 >			  ## timer.c:150:13
 1e0c64a:    25 20             	if (r0 == 0) goto 74 <sys_timer_task+0xE2 : 1e0c696 >
 1e0c64c:    40 e0 18 00       	if (r0 == 4) goto 48 <sys_timer_task+0xCC : 1e0c680 >
 1e0c650:    2d 18             	goto 90 <sys_timer_task+0xF8 : 1e0c6ac >
 1e0c652:    10 4a             	r0 = [r5 + 4]			  ## list.h:165:23
 1e0c654:    18 4c             	[r6 + 4] = r0			  ## list.h:159:16
 1e0c656:    0e 40             	[r0 + 0] = r6			  ## list.h:160:16
 1e0c658:    45 f2 07 30       	if (r5 < r4) goto 14 <sys_timer_task+0xB6 : 1e0c66a >			  ## list.h:160:16
 1e0c65c:    40 fc 40 01       	r0 = r4 + 320
 1e0c660:    05 f2 03 20       	if (r5 >= r0) goto 6 <sys_timer_task+0xB6 : 1e0c66a >
 1e0c664:    1e f9 1f 50       	b[r5 + 31] = r14			  ## timer.c:83:21
 1e0c668:    25 18             	goto 74 <sys_timer_task+0x100 : 1e0c6b4 >
 1e0c66a:    97 f3 95 d3       	call 3122986 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c66e:    50 08             	r0 = r5			  ## timer.c:119:17
 1e0c670:    80 f3 d4 08       	call 4520 <free : 1e0d81c >			  ## timer.c:119:17
 1e0c674:    1d 18             	goto 58 <sys_timer_task+0xFC : 1e0c6b0 >			  ## timer.c:119:17
 1e0c676:    e0 e0 03 00       	if (r0 == 14) goto 6 <sys_timer_task+0xCC : 1e0c680 >
 1e0c67a:    50 e1 19 00       	if (r0 == 21) goto 50 <sys_timer_task+0xFC : 1e0c6b0 >
 1e0c67e:    16 18             	goto 44 <sys_timer_task+0xF8 : 1e0c6ac >
 1e0c680:    1a f6 10 50       	[r5 + 16] = r10			  ## timer.c:160:22
 1e0c684:    e0 5a             	r0 = h[r5 + 28] (u)			  ## timer.c:161:63
 1e0c686:    01 fd 30 0b       	r1 = r0 | 3145728			  ## timer.c:161:61
 1e0c68a:    03 a0             	r3 = sp + 0			  ## timer.c:161:61
 1e0c68c:    32 70             	r2 = 3			  ## timer.c:161:13
 1e0c68e:    a0 08             	r0 = r10			  ## timer.c:161:13
 1e0c690:    97 f3 a6 d3       	call 3123020 <os_taskq_post_type : 106de0 >			  ## timer.c:161:13
 1e0c694:    0d 18             	goto 26 <sys_timer_task+0xFC : 1e0c6b0 >			  ## timer.c:161:13
 1e0c696:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:151:17
 1e0c698:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <sys_timer_task+0xF8 : 1e0c6ac >			  ## timer.c:151:17
 1e0c69c:    8f f3 3b b6       	call 2059382 <jiffies_msec : 3316 >			  ## timer.c:155:30
 1e0c6a0:    61 4a             	r1 = [r5 + 24]			  ## timer.c:155:50
 1e0c6a2:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:155:50
 1e0c6a6:    10 09             	r0 += r1			  ## timer.c:155:45
 1e0c6a8:    58 4a             	[r5 + 20] = r0			  ## timer.c:155:28
 1e0c6aa:    02 18             	goto 4 <sys_timer_task+0xFC : 1e0c6b0 >			  ## timer.c:155:28
 1e0c6ac:    50 08             	r0 = r5
 1e0c6ae:    66 17             	call -308 <__timer_del : 1e0c57c >
 1e0c6b0:    97 f3 74 d3       	call 3122920 <local_irq_disable : 106d9c >
 1e0c6b4:    76 f2 9b 1f       	if (r6 != r7) goto -202 <sys_timer_task+0x3A : 1e0c5ee >
 1e0c6b8:    06 4e             	r6 = [r7 + 0]
 1e0c6ba:    76 f2 0a 00       	if (r6 == r7) goto 20 <sys_timer_task+0x11E : 1e0c6d2 >
 1e0c6be:    f0 07             	r0 = -1
 1e0c6c0:    55 4c             	r5 = [r6 + 20]			  ## timer.c:172:33
 1e0c6c2:    50 f2 01 80       	if (r0 > r5) goto 2 <sys_timer_task+0x114 : 1e0c6c8 >			  ## timer.c:172:33
 1e0c6c6:    05 08             	r5 = r0			  ## timer.c:172:19
 1e0c6c8:    06 4c             	r6 = [r6 + 0]
 1e0c6ca:    50 08             	r0 = r5
 1e0c6cc:    76 f2 f8 1f       	if (r6 != r7) goto -16 <sys_timer_task+0x10C : 1e0c6c0 >
 1e0c6d0:    01 18             	goto 2 <sys_timer_task+0x120 : 1e0c6d4 >
 1e0c6d2:    f5 07             	r5 = -1
 1e0c6d4:    f6 14             	call -1556 <__get_min_precesion : 1e0c0c2 >			  ## timer.c:175:16
 1e0c6d6:    bf f3 a8 a0       	call -48816 <timer1_run : 1e0082a >			  ## timer.c:175:5
 1e0c6da:    97 f3 5d d3       	call 3122874 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c6de:    f5 ef 08 00       	if (r5 == -1) goto 16 <sys_timer_task+0x13E : 1e0c6f2 >			  ## timer.c:508:13
 1e0c6e2:    8f f3 18 b6       	call 2059312 <jiffies_msec : 3316 >			  ## timer.c:509:32
 1e0c6e6:    20 ba             	r0 = r5 - r0			  ## timer.c:509:30
 1e0c6e8:    a0 e0 05 30       	if (r0 < 10) goto 10 <sys_timer_task+0x142 : 1e0c6f6 >			  ## timer.c:511:17
 1e0c6ec:    c0 fe 90 10       	r1 = r0 / r9 (u)			  ## timer.c:509:48
 1e0c6f0:    03 18             	goto 6 <sys_timer_task+0x144 : 1e0c6f8 >			  ## timer.c:509:48
 1e0c6f2:    01 70             	r1 = 0			  ## timer.c:519:13
 1e0c6f4:    01 18             	goto 2 <sys_timer_task+0x144 : 1e0c6f8 >			  ## timer.c:519:13
 1e0c6f6:    21 70             	r1 = 2			  ## timer.c:515:17
 1e0c6f8:    80 08             	r0 = r8
 1e0c6fa:    97 f3 85 d3       	call 3122954 <os_sem_pend : 106e08 >
 1e0c6fe:    72 1f             	goto -284 <sys_timer_task+0x30 : 1e0c5e4 >


sys_timer_re_run:
 1e0c700:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:317:0
 1e0c702:    04 08             	r4 = r0			  ## timer.c:317:0
 1e0c704:    97 f3 4a d3       	call 3122836 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c708:    c0 ff b4 08 00 00 	r0 = 2228 <timer_head : 8b4 >			  ## spinlock.h:77:5
 1e0c70e:    05 40             	r5 = [r0 + 0]			  ## spinlock.h:77:5
 1e0c710:    05 f2 0e 00       	if (r5 == r0) goto 28 <sys_timer_re_run+0x30 : 1e0c730 >
 1e0c714:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:323:16
 1e0c716:    41 f2 04 00       	if (r1 == r4) goto 8 <sys_timer_re_run+0x22 : 1e0c722 >			  ## timer.c:323:16
 1e0c71a:    05 4a             	r5 = [r5 + 0]
 1e0c71c:    05 f2 fa 1f       	if (r5 != r0) goto -12 <sys_timer_re_run+0x14 : 1e0c714 >
 1e0c720:    07 18             	goto 14 <sys_timer_re_run+0x30 : 1e0c730 >
 1e0c722:    8f f3 f8 b5       	call 2059248 <jiffies_msec : 3316 >			  ## timer.c:324:26
 1e0c726:    61 4a             	r1 = [r5 + 24]			  ## timer.c:324:46
 1e0c728:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:324:46
 1e0c72c:    10 09             	r0 += r1			  ## timer.c:324:41
 1e0c72e:    58 4a             	[r5 + 20] = r0			  ## timer.c:324:24
 1e0c730:    97 f3 32 d3       	call 3122788 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c734:    c0 ff c8 26 00 00 	r0 = 9928 <sys_timer_sem : 26c8 >			  ## timer.c:331:5
 1e0c73a:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:331:5
 1e0c73c:    d7 f3 66 d3       	goto 3122892 <os_sem_post : 106e0c >			  ## timer.c:331:5


sys_timer_set_user_data:
 1e0c740:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:335:0
 1e0c742:    14 08             	r4 = r1			  ## timer.c:335:0
 1e0c744:    05 08             	r5 = r0			  ## timer.c:335:0
 1e0c746:    97 f3 29 d3       	call 3122770 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c74a:    c0 ff b4 08 00 00 	r0 = 2228 <timer_head : 8b4 >			  ## spinlock.h:77:5
 1e0c750:    01 40             	r1 = [r0 + 0]			  ## spinlock.h:77:5
 1e0c752:    01 f2 07 00       	if (r1 == r0) goto 14 <sys_timer_set_user_data+0x24 : 1e0c764 >
 1e0c756:    e2 52             	r2 = h[r1 + 28] (u)			  ## timer.c:341:16
 1e0c758:    52 f2 01 10       	if (r2 != r5) goto 2 <sys_timer_set_user_data+0x1E : 1e0c75e >			  ## timer.c:341:16
 1e0c75c:    3c 42             	[r1 + 12] = r4			  ## timer.c:342:21
 1e0c75e:    01 42             	r1 = [r1 + 0]
 1e0c760:    01 f2 f9 1f       	if (r1 != r0) goto -14 <sys_timer_set_user_data+0x16 : 1e0c756 >
 1e0c764:    15 01             	{rets, r5, r4} = [sp++]			  ## spinlock.h:88:5
 1e0c766:    d7 f3 17 d3       	goto 3122734 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


log_output_lock:
 1e0c76a:    77 01             	[--sp] = {rets, r7-r4}			  ## log.c:206:0
 1e0c76c:    c5 ff 78 26 00 00 	r5 = 9848 <log_mutex : 2678 >			  ## log.c:206:0
 1e0c772:    01 70             	r1 = 0			  ## log.c:209:11
 1e0c774:    04 70             	r4 = 0			  ## log.c:209:11
 1e0c776:    50 08             	r0 = r5			  ## log.c:209:11
 1e0c778:    97 f3 54 d3       	call 3122856 <os_mutex_pend : 106e24 >			  ## log.c:209:11
 1e0c77c:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## log.c:209:11
 1e0c782:    01 f6 00 71       	r1 = [r7 + 256]			  ## log.c:211:9
 1e0c786:    06 08             	r6 = r0			  ## log.c:209:11
 1e0c788:    12 22             	if (r1 == 0) goto 36 <log_output_lock+0x44 : 1e0c7ae >
 1e0c78a:    97 f3 07 d3       	call 3122702 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c78e:    00 f9 08 71       	r0 = b[r7 + 264] (u)			  ## spinlock.h:77:5
 1e0c792:    08 20             	if (r0 == 0) goto 16 <log_output_lock+0x3A : 1e0c7a4 >			  ## log.c:216:9
 1e0c794:    97 f3 00 d3       	call 3122688 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c798:    04 07             	r4 = -16			  ## spinlock.h:88:5
 1e0c79a:    09 3c             	if (r6 != 0) goto 18 <log_output_lock+0x44 : 1e0c7ae >			  ## spinlock.h:88:5
 1e0c79c:    50 08             	r0 = r5			  ## log.c:219:13
 1e0c79e:    97 f3 43 d3       	call 3122822 <os_mutex_post : 106e28 >			  ## log.c:219:13
 1e0c7a2:    05 18             	goto 10 <log_output_lock+0x44 : 1e0c7ae >			  ## log.c:219:13
 1e0c7a4:    10 70             	r0 = 1
 1e0c7a6:    10 f9 08 71       	b[r7 + 264] = r0
 1e0c7aa:    97 f3 f5 d2       	call 3122666 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c7ae:    40 08             	r0 = r4			  ## log.c:231:1
 1e0c7b0:    57 01             	{pc, r7-r4} = [sp++]			  ## log.c:231:1


skip_atoi:
 1e0c7b2:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:18:0
 1e0c7b4:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:20:12
 1e0c7b6:    81 f9 01 20       	r1 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0c7ba:    01 8d             	r1 += -48			  ## printf-stdarg.c:20:12
 1e0c7bc:    43 04             	r3 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0c7be:    01 70             	r1 = 0			  ## printf-stdarg.c:20:12
 1e0c7c0:    93 e0 0f 80       	if (r3 > 9) goto 30 <skip_atoi+0x30 : 1e0c7e2 >			  ## printf-stdarg.c:20:12
 1e0c7c4:    a3 70             	r3 = 10
 1e0c7c6:    0a 40             	[r0 + 0] = r2			  ## printf-stdarg.c:21:29
 1e0c7c8:    24 f9 ff 2f       	r4 = b[r2 + -1] (s)			  ## printf-stdarg.c:21:22
 1e0c7cc:    85 f9 01 20       	r5 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0c7d0:    80 fe 30 41       	r4 += r1 * r3			  ## printf-stdarg.c:21:20
 1e0c7d4:    51 fc d0 ff       	r1 = r5 + -48			  ## printf-stdarg.c:20:12
 1e0c7d8:    45 04             	r5 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0c7da:    41 fc d0 ff       	r1 = r4 + -48			  ## printf-stdarg.c:21:33
 1e0c7de:    a5 e0 f2 3f       	if (r5 < 10) goto -28 <skip_atoi+0x14 : 1e0c7c6 >
 1e0c7e2:    10 08             	r0 = r1			  ## printf-stdarg.c:23:5
 1e0c7e4:    55 01             	{pc, r5, r4} = [sp++]			  ## printf-stdarg.c:23:5


log_putbyte:
 1e0c7e6:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## log.c:404:0
 1e0c7ec:    02 f6 8c 10       	r2 = [r1 + 140]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:213:10
 1e0c7f0:    1c 24             	if (r2 == 0) goto 56 <log_putbyte+0x44 : 1e0c82a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:213:10
 1e0c7f2:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:213:38
 1e0c7f4:    00 f3 19 30       	if ((r3 & 1) == 0) goto 50 <log_putbyte+0x44 : 1e0c82a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:213:38
 1e0c7f8:    d0 e0 17 00       	if (r0 == 13) goto 46 <log_putbyte+0x44 : 1e0c82a >
 1e0c7fc:    a0 e0 0b 10       	if (r0 != 10) goto 22 <log_putbyte+0x30 : 1e0c816 >
 1e0c800:    c3 f4 0d 29       	[r2 + 12] = 13			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:217:20
 1e0c804:    08 00             	csync			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:218:9
 1e0c806:    02 f6 8c 10       	r2 = [r1 + 140]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:218:9
 1e0c80a:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:219:24
 1e0c80c:    f3 04             	r3 = r3.l (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:219:40
 1e0c80e:    f3 ef fc cf       	ifs (r3 > -1) goto -8 <log_putbyte+0x24 : 1e0c80a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:219:9
 1e0c812:    00 f4 20 2a       	[r2 + 0] |= 8192			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:220:21
 1e0c816:    38 44             	[r2 + 12] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:222:16
 1e0c818:    08 00             	csync			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:223:5
 1e0c81a:    02 f6 8c 10       	r2 = [r1 + 140]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:223:5
 1e0c81e:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:224:20
 1e0c820:    f3 04             	r3 = r3.l (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:224:36
 1e0c822:    f3 ef fc cf       	ifs (r3 > -1) goto -8 <log_putbyte+0x38 : 1e0c81e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:224:5
 1e0c826:    00 f4 20 2a       	[r2 + 0] |= 8192			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/uart.c:225:17
 1e0c82a:    10 f9 22 10       	b[r1 + 34] = r0			  ## log.c:406:18
 1e0c82e:    20 00             	rts			  ## log.c:407:1


printchar:
 1e0c830:    74 01             	[--sp] = {rets, r4}			  ## printf-stdarg.c:29:0
 1e0c832:    0a 20             	if (r0 == 0) goto 20 <printchar+0x18 : 1e0c848 >			  ## printf-stdarg.c:30:9
 1e0c834:    04 40             	r4 = [r0 + 0]
 1e0c836:    03 22             	if (r1 == 0) goto 6 <printchar+0xE : 1e0c83e >
 1e0c838:    03 70             	r3 = 0
 1e0c83a:    14 f2 08 20       	if (r4 >= r1) goto 16 <printchar+0x1E : 1e0c84e >
 1e0c83e:    0a 68             	b[r4 + 0] = r2			  ## printf-stdarg.c:34:15
 1e0c840:    01 40             	r1 = [r0 + 0]			  ## printf-stdarg.c:35:9
 1e0c842:    11 80             	r1 += 1			  ## printf-stdarg.c:35:9
 1e0c844:    09 40             	[r0 + 0] = r1			  ## printf-stdarg.c:35:9
 1e0c846:    02 18             	goto 4 <printchar+0x1C : 1e0c84c >			  ## printf-stdarg.c:35:9
 1e0c848:    90 04             	r0 = r2.b0 (s)			  ## printf-stdarg.c:38:9
 1e0c84a:    cd 17             	call -102 <log_putbyte : 1e0c7e6 >			  ## printf-stdarg.c:38:9
 1e0c84c:    13 70             	r3 = 1
 1e0c84e:    30 08             	r0 = r3			  ## printf-stdarg.c:45:1
 1e0c850:    54 01             	{pc, r4} = [sp++]			  ## printf-stdarg.c:45:1


prints:
 1e0c852:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:57:0
 1e0c854:    34 08             	r4 = r3			  ## printf-stdarg.c:57:0
 1e0c856:    27 08             	r7 = r2			  ## printf-stdarg.c:57:0
 1e0c858:    19 08             	r9 = r1			  ## printf-stdarg.c:57:0
 1e0c85a:    0a 08             	r10 = r0			  ## printf-stdarg.c:57:0
 1e0c85c:    14 e0 24 b0       	ifs (r4 < 1) goto 72 <prints+0x56 : 1e0c8a8 >			  ## printf-stdarg.c:57:0
 1e0c860:    71 08             	r1 = r7			  ## printf-stdarg.c:63:28
 1e0c862:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## printf-stdarg.c:63:28
 1e0c866:    05 70             	r5 = 0			  ## printf-stdarg.c:63:28
 1e0c868:    00 70             	r0 = 0			  ## printf-stdarg.c:63:28
 1e0c86a:    04 24             	if (r2 == 0) goto 8 <prints+0x22 : 1e0c874 >			  ## printf-stdarg.c:63:28
 1e0c86c:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## printf-stdarg.c:63:28
 1e0c870:    10 80             	r0 += 1			  ## printf-stdarg.c:64:13
 1e0c872:    fc 35             	if (r2 != 0) goto -8 <prints+0x1A : 1e0c86c >
 1e0c874:    82 02             	r2 = [sp+32]
 1e0c876:    26 b8             	r6 = r4 - r0			  ## printf-stdarg.c:69:19
 1e0c878:    61 08             	r1 = r6			  ## printf-stdarg.c:66:13
 1e0c87a:    40 f2 01 b0       	ifs (r0 < r4) goto 2 <prints+0x2E : 1e0c880 >			  ## printf-stdarg.c:66:13
 1e0c87e:    01 70             	r1 = 0			  ## printf-stdarg.c:66:13
 1e0c880:    d0 c0             	r0 = r2 << 3			  ## printf-stdarg.c:71:13
 1e0c882:    20 fd 10 09       	r0 = r0 & 16			  ## printf-stdarg.c:71:13
 1e0c886:    08 fd 20 09       	r8 = r0 | 32			  ## printf-stdarg.c:71:13
 1e0c88a:    20 f3 10 20       	if ((r2 & 1) != 0) goto 32 <prints+0x5C : 1e0c8ae >
 1e0c88e:    11 e0 0e b0       	ifs (r1 < 1) goto 28 <prints+0x5C : 1e0c8ae >
 1e0c892:    a0 08             	r0 = r10			  ## printf-stdarg.c:77:17
 1e0c894:    91 08             	r1 = r9			  ## printf-stdarg.c:77:17
 1e0c896:    82 08             	r2 = r8			  ## printf-stdarg.c:77:17
 1e0c898:    cb 17             	call -106 <printchar : 1e0c830 >			  ## printf-stdarg.c:77:17
 1e0c89a:    04 20             	if (r0 == 0) goto 8 <prints+0x52 : 1e0c8a4 >			  ## printf-stdarg.c:77:17
 1e0c89c:    f6 8f             	r6 += -1			  ## printf-stdarg.c:76:27
 1e0c89e:    15 80             	r5 += 1			  ## printf-stdarg.c:80:13
 1e0c8a0:    06 e0 f7 cf       	ifs (r6 > 0) goto -18 <prints+0x40 : 1e0c892 >
 1e0c8a4:    64 08             	r4 = r6
 1e0c8a6:    04 18             	goto 8 <prints+0x5E : 1e0c8b0 >
 1e0c8a8:    05 70             	r5 = 0
 1e0c8aa:    08 72             	r8 = 32
 1e0c8ac:    01 18             	goto 2 <prints+0x5E : 1e0c8b0 >
 1e0c8ae:    14 08             	r4 = r1
 1e0c8b0:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0c8b4:    09 20             	if (r0 == 0) goto 18 <prints+0x76 : 1e0c8c8 >
 1e0c8b6:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:84:33
 1e0c8b8:    a0 08             	r0 = r10			  ## printf-stdarg.c:84:13
 1e0c8ba:    91 08             	r1 = r9			  ## printf-stdarg.c:84:13
 1e0c8bc:    b9 17             	call -142 <printchar : 1e0c830 >			  ## printf-stdarg.c:84:13
 1e0c8be:    04 20             	if (r0 == 0) goto 8 <prints+0x76 : 1e0c8c8 >			  ## printf-stdarg.c:84:13
 1e0c8c0:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0c8c4:    15 80             	r5 += 1			  ## printf-stdarg.c:87:9
 1e0c8c6:    f7 31             	if (r0 != 0) goto -18 <prints+0x64 : 1e0c8b6 >
 1e0c8c8:    14 e0 09 b0       	ifs (r4 < 1) goto 18 <prints+0x8C : 1e0c8de >
 1e0c8cc:    a0 08             	r0 = r10			  ## printf-stdarg.c:90:13
 1e0c8ce:    91 08             	r1 = r9			  ## printf-stdarg.c:90:13
 1e0c8d0:    82 08             	r2 = r8			  ## printf-stdarg.c:90:13
 1e0c8d2:    ae 17             	call -164 <printchar : 1e0c830 >			  ## printf-stdarg.c:90:13
 1e0c8d4:    04 20             	if (r0 == 0) goto 8 <prints+0x8C : 1e0c8de >			  ## printf-stdarg.c:90:13
 1e0c8d6:    f4 8f             	r4 += -1			  ## printf-stdarg.c:89:23
 1e0c8d8:    15 80             	r5 += 1			  ## printf-stdarg.c:93:9
 1e0c8da:    04 e0 f7 cf       	ifs (r4 > 0) goto -18 <prints+0x7A : 1e0c8cc >
 1e0c8de:    50 08             	r0 = r5			  ## printf-stdarg.c:96:5
 1e0c8e0:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:96:5


printi:
 1e0c8e2:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:103:0
 1e0c8e4:    f8 0b             	sp += -16			  ## printf-stdarg.c:103:0
 1e0c8e6:    0a f5 38 00       	r10 = [sp+56]			  ## printf-stdarg.c:103:0
 1e0c8ea:    d4 02             	r4 = [sp+52]			  ## printf-stdarg.c:103:0
 1e0c8ec:    18 08             	r8 = r1			  ## printf-stdarg.c:103:0
 1e0c8ee:    09 08             	r9 = r0			  ## printf-stdarg.c:103:0
 1e0c8f0:    37 24             	if (r2 == 0) goto 110 <printi+0x7E : 1e0c960 >			  ## printf-stdarg.c:103:0
 1e0c8f2:    c5 02             	r5 = [sp+48]			  ## printf-stdarg.c:103:0
 1e0c8f4:    00 70             	r0 = 0			  ## printf-stdarg.c:103:0
 1e0c8f6:    d0 f5 0f 00       	b[sp+15] = r0			  ## printf-stdarg.c:121:8
 1e0c8fa:    10 70             	r0 = 1			  ## printf-stdarg.c:121:8
 1e0c8fc:    11 70             	r1 = 1			  ## printf-stdarg.c:115:9
 1e0c8fe:    01 3a             	if (r5 != 0) goto 2 <printi+0x20 : 1e0c902 >			  ## printf-stdarg.c:115:9
 1e0c900:    01 70             	r1 = 0			  ## printf-stdarg.c:115:9
 1e0c902:    a3 e0 01 00       	if (r3 == 10) goto 2 <printi+0x26 : 1e0c908 >
 1e0c906:    00 70             	r0 = 0			  ## printf-stdarg.c:115:17
 1e0c908:    50 b3             	r0 &= r1			  ## printf-stdarg.c:115:12
 1e0c90a:    61 fb 00 29       	r1 = 0 - r2			  ## printf-stdarg.c:117:13
 1e0c90e:    d6 d7             	r6 = r2 >> 31			  ## printf-stdarg.c:115:28
 1e0c910:    06 f1 01 00       	if ((r6 & r0) != 0) goto 2 <printi+0x34 : 1e0c916 >			  ## printf-stdarg.c:115:28
 1e0c914:    21 08             	r1 = r2
 1e0c916:    50 bd             	r0 &= r6			  ## printf-stdarg.c:115:12
 1e0c918:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:115:12
 1e0c91a:    b7 94             	r7 = r2 + 11			  ## printf-stdarg.c:120:35
 1e0c91c:    13 22             	if (r1 == 0) goto 38 <printi+0x62 : 1e0c944 >
 1e0c91e:    f2 02             	r2 = [sp+60]
 1e0c920:    25 fc c6 00       	r5 = r2 + 198
 1e0c924:    16 08             	r6 = r1
 1e0c926:    d0 fe 30 16       	r1 = r6 % r3 (u)			  ## printf-stdarg.c:124:15
 1e0c92a:    52 08             	r2 = r5			  ## printf-stdarg.c:125:13
 1e0c92c:    91 e0 01 c0       	ifs (r1 > 9) goto 2 <printi+0x50 : 1e0c932 >
 1e0c930:    02 70             	r2 = 0
 1e0c932:    21 09             	r1 += r2			  ## printf-stdarg.c:125:13
 1e0c934:    01 83             	r1 += 48			  ## printf-stdarg.c:128:18
 1e0c936:    11 f9 ff 7f       	b[r7 + -1] = r1			  ## printf-stdarg.c:128:14
 1e0c93a:    c0 fe 30 16       	r1 = r6 / r3 (u)			  ## printf-stdarg.c:129:11
 1e0c93e:    f7 8f             	r7 += -1			  ## printf-stdarg.c:128:10
 1e0c940:    36 f2 f0 2f       	if (r6 >= r3) goto -32 <printi+0x42 : 1e0c924 >
 1e0c944:    06 70             	r6 = 0
 1e0c946:    1d 20             	if (r0 == 0) goto 58 <printi+0xA0 : 1e0c982 >
 1e0c948:    18 28             	if (r4 == 0) goto 48 <printi+0x98 : 1e0c97a >
 1e0c94a:    01 f3 16 a0       	if ((r10 & 2) == 0) goto 44 <printi+0x98 : 1e0c97a >
 1e0c94e:    d2 72             	r2 = 45			  ## printf-stdarg.c:134:17
 1e0c950:    90 08             	r0 = r9			  ## printf-stdarg.c:134:17
 1e0c952:    81 08             	r1 = r8			  ## printf-stdarg.c:134:17
 1e0c954:    6d 17             	call -294 <printchar : 1e0c830 >			  ## printf-stdarg.c:134:17
 1e0c956:    16 70             	r6 = 1			  ## printf-stdarg.c:134:17
 1e0c958:    01 30             	if (r0 != 0) goto 2 <printi+0x7A : 1e0c95c >
 1e0c95a:    06 70             	r6 = 0			  ## printf-stdarg.c:134:17
 1e0c95c:    a4 b9             	r4 = r4 - r6			  ## printf-stdarg.c:134:17
 1e0c95e:    11 18             	goto 34 <printi+0xA0 : 1e0c982 >
 1e0c960:    00 73             	r0 = 48			  ## printf-stdarg.c:110:22
 1e0c962:    d0 f5 04 00       	b[sp+4] = r0			  ## printf-stdarg.c:110:22
 1e0c966:    00 70             	r0 = 0			  ## printf-stdarg.c:110:22
 1e0c968:    d0 f5 05 00       	b[sp+5] = r0			  ## printf-stdarg.c:111:22
 1e0c96c:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:111:22
 1e0c96e:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:112:16
 1e0c972:    90 08             	r0 = r9			  ## printf-stdarg.c:112:16
 1e0c974:    43 08             	r3 = r4			  ## printf-stdarg.c:112:16
 1e0c976:    6d 17             	call -294 <prints : 1e0c852 >			  ## printf-stdarg.c:112:16
 1e0c978:    0c 18             	goto 24 <printi+0xB0 : 1e0c992 >			  ## printf-stdarg.c:112:16
 1e0c97a:    d0 72             	r0 = 45			  ## printf-stdarg.c:139:18
 1e0c97c:    10 f9 ff 7f       	b[r7 + -1] = r0			  ## printf-stdarg.c:139:18
 1e0c980:    f7 8f             	r7 += -1			  ## printf-stdarg.c:139:14
 1e0c982:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:143:17
 1e0c986:    90 08             	r0 = r9			  ## printf-stdarg.c:143:17
 1e0c988:    81 08             	r1 = r8			  ## printf-stdarg.c:143:17
 1e0c98a:    72 08             	r2 = r7			  ## printf-stdarg.c:143:17
 1e0c98c:    43 08             	r3 = r4			  ## printf-stdarg.c:143:17
 1e0c98e:    61 17             	call -318 <prints : 1e0c852 >			  ## printf-stdarg.c:143:17
 1e0c990:    60 09             	r0 += r6			  ## printf-stdarg.c:143:15
 1e0c992:    08 0a             	sp += 16
 1e0c994:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:144:1


print:
 1e0c996:    7d 01             	[--sp] = {rets, r13-r4}			  ## printf-stdarg.c:147:0
 1e0c998:    f2 0b             	sp += -28			  ## printf-stdarg.c:147:0
 1e0c99a:    1d 08             	r13 = r1			  ## printf-stdarg.c:147:0
 1e0c99c:    04 08             	r4 = r0			  ## printf-stdarg.c:147:0
 1e0c99e:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:147:0
 1e0c9a0:    5b 02             	[sp+20] = r3			  ## printf-stdarg.c:147:0
 1e0c9a2:    08 70             	r8 = 0			  ## printf-stdarg.c:147:0
 1e0c9a4:    19 74             	r9 = 65			  ## printf-stdarg.c:147:0
 1e0c9a6:    1a 76             	r10 = 97			  ## printf-stdarg.c:147:0
 1e0c9a8:    1b 70             	r11 = 1			  ## printf-stdarg.c:147:0
 1e0c9aa:    cc ff f3 24 e1 01 	r12 = 31532275 <update_target_end+0x22C3 : 1e124f3 >			  ## printf-stdarg.c:147:0
 1e0c9b0:    06 70             	r6 = 0			  ## printf-stdarg.c:147:0
 1e0c9b2:    07 19             	goto 526 <.GJTIE26_0_0_+0x154 : 1e0cbc2 >			  ## printf-stdarg.c:147:0
 1e0c9b4:    11 94             	r1 = r2 + 1			  ## printf-stdarg.c:154:13
 1e0c9b6:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:154:13
 1e0c9b8:    13 64             	r3 = b[r2 + 1] (u)			  ## printf-stdarg.c:156:17
 1e0c9ba:    53 e2 06 00       	if (r3 == 37) goto 12 <print+0x34 : 1e0c9ca >
 1e0c9be:    d3 e2 0b 00       	if (r3 == 45) goto 22 <print+0x42 : 1e0c9d8 >
 1e0c9c2:    03 e0 02 01       	if (r3 == 0) goto 516 <.GJTIE26_0_0_+0x15C : 1e0cbca >
 1e0c9c6:    05 70             	r5 = 0
 1e0c9c8:    0b 18             	goto 22 <print+0x4A : 1e0c9e0 >
 1e0c9ca:    50 72             	r0 = 37
 1e0c9cc:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:276:39
 1e0c9ce:    40 08             	r0 = r4			  ## printf-stdarg.c:276:19
 1e0c9d0:    d1 08             	r1 = r13			  ## printf-stdarg.c:276:19
 1e0c9d2:    2e 17             	call -420 <printchar : 1e0c830 >			  ## printf-stdarg.c:276:19
 1e0c9d4:    06 09             	r6 += r0
 1e0c9d6:    4b 18             	goto 150 <.GJTIE26_0_0_ : 1e0ca6e >
 1e0c9d8:    21 94             	r1 = r2 + 2			  ## printf-stdarg.c:163:17
 1e0c9da:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:163:17
 1e0c9dc:    23 64             	r3 = b[r2 + 2] (u)
 1e0c9de:    15 70             	r5 = 1
 1e0c9e0:    03 e3 09 10       	if (r3 != 48) goto 18 <print+0x60 : 1e0c9f6 >
 1e0c9e4:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:167:17
 1e0c9e6:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:167:17
 1e0c9e8:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## printf-stdarg.c:166:20
 1e0c9ec:    95 b0             	r5 |= 2			  ## printf-stdarg.c:168:21
 1e0c9ee:    03 e3 fa 0f       	if (r3 == 48) goto -12 <print+0x50 : 1e0c9e6 >			  ## printf-stdarg.c:166:13
 1e0c9f2:    01 fc ff ff       	r1 = r0 + -1			  ## printf-stdarg.c:148:18
 1e0c9f6:    30 fc d0 ff       	r0 = r3 + -48			  ## printf-stdarg.c:172:17
 1e0c9fa:    00 04             	r0 = r0.b0 (u)			  ## printf-stdarg.c:172:17
 1e0c9fc:    f7 07             	r7 = -1			  ## printf-stdarg.c:172:17
 1e0c9fe:    90 e0 05 80       	if (r0 > 9) goto 10 <print+0x76 : 1e0ca0c >			  ## printf-stdarg.c:172:17
 1e0ca02:    80 a1             	r0 = sp + 24
 1e0ca04:    d6 16             	call -596 <skip_atoi : 1e0c7b2 >			  ## printf-stdarg.c:173:25
 1e0ca06:    61 02             	r1 = [sp+24]
 1e0ca08:    03 62             	r3 = b[r1 + 0] (u)
 1e0ca0a:    07 08             	r7 = r0			  ## printf-stdarg.c:173:25
 1e0ca0c:    e3 e2 0c 10       	if (r3 != 46) goto 24 <print+0x92 : 1e0ca28 >
 1e0ca10:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:178:17
 1e0ca12:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:178:17
 1e0ca14:    12 62             	r2 = b[r1 + 1] (u)			  ## printf-stdarg.c:179:21
 1e0ca16:    23 fc d0 ff       	r3 = r2 + -48			  ## printf-stdarg.c:179:21
 1e0ca1a:    c3 04             	r3 = r3.b0 (u)			  ## printf-stdarg.c:179:21
 1e0ca1c:    93 e0 32 80       	if (r3 > 9) goto 100 <.GJTIE26_0_0_+0x16 : 1e0ca84 >			  ## printf-stdarg.c:179:21
 1e0ca20:    80 a1             	r0 = sp + 24
 1e0ca22:    c7 16             	call -626 <skip_atoi : 1e0c7b2 >			  ## printf-stdarg.c:180:33
 1e0ca24:    60 02             	r0 = [sp+24]
 1e0ca26:    01 18             	goto 2 <print+0x94 : 1e0ca2a >
 1e0ca28:    10 08             	r0 = r1			  ## printf-stdarg.c:250:18
 1e0ca2a:    01 60             	r1 = b[r0 + 0] (u)
 1e0ca2c:    31 e6 15 c0       	ifs (r1 > 99) goto 42 <print+0xC4 : 1e0ca5a >			  ## printf-stdarg.c:193:17
 1e0ca30:    c1 e4 30 00       	if (r1 == 76) goto 96 <.GJTIE26_0_0_+0x26 : 1e0ca94 >
 1e0ca34:    81 e5 43 00       	if (r1 == 88) goto 134 <.GJTIE26_0_0_+0x50 : 1e0cabe >
 1e0ca38:    31 e6 19 10       	if (r1 != 99) goto 50 <.GJTIE26_0_0_ : 1e0ca6e >
 1e0ca3c:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:252:32
 1e0ca3e:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:252:32
 1e0ca40:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:252:32
 1e0ca42:    00 40             	r0 = [r0 + 0]			  ## printf-stdarg.c:252:32
 1e0ca44:    d0 f5 12 00       	b[sp+18] = r0			  ## printf-stdarg.c:252:24
 1e0ca48:    d8 f5 13 00       	b[sp+19] = r8			  ## printf-stdarg.c:253:24
 1e0ca4c:    22 a1             	r2 = sp + 18			  ## printf-stdarg.c:253:24
 1e0ca4e:    0d 02             	[sp] = r5			  ## printf-stdarg.c:254:23
 1e0ca50:    40 08             	r0 = r4
 1e0ca52:    d1 08             	r1 = r13
 1e0ca54:    73 08             	r3 = r7
 1e0ca56:    fd 16             	call -518 <prints : 1e0c852 >
 1e0ca58:    bd 1f             	goto -134 <print+0x3E : 1e0c9d4 >
 1e0ca5a:    12 fc 90 ff       	r2 = r1 + -112
 1e0ca5e:    82 e0 3d 80       	if (r2 > 8) goto 122 <.GJTIE26_0_0_+0x6E : 1e0cadc >
 1e0ca62:    a2 00             	tbb [r2]


.GJTIS26_0_0_:
 1e0ca64:    09     < 9 : 0x9 >
 1e0ca65:    05     < 5 : 0x5 >
 1e0ca66:    05     < 5 : 0x5 >
 1e0ca67:    59     < 89 : 0x59 >
 1e0ca68:    05     < 5 : 0x5 >
 1e0ca69:    61     < 97 : 0x61 >
 1e0ca6a:    05     < 5 : 0x5 >
 1e0ca6b:    05     < 5 : 0x5 >
 1e0ca6c:    09     < 9 : 0x9 >
 1e0ca6d:    00     < 0 : 0x0 >
 1e0ca6e:    60 02             	r0 = [sp+24]			  ## printf-stdarg.c:152:26
 1e0ca70:    12 90             	r2 = r0 + 1			  ## printf-stdarg.c:152:26
 1e0ca72:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:152:26
 1e0ca74:    a6 18             	goto 332 <.GJTIE26_0_0_+0x154 : 1e0cbc2 >			  ## printf-stdarg.c:152:26
 1e0ca76:    50 02             	r0 = [sp+20]
 1e0ca78:    41 90             	r1 = r0 + 4
 1e0ca7a:    59 02             	[sp+20] = r1
 1e0ca7c:    02 40             	r2 = [r0 + 0]
 1e0ca7e:    1a f5 0c 00       	[sp+12] = r10
 1e0ca82:    23 18             	goto 70 <.GJTIE26_0_0_+0x5C : 1e0caca >
 1e0ca84:    a2 e2 d1 1f       	if (r2 != 42) goto -94 <print+0x94 : 1e0ca2a >
 1e0ca88:    52 02             	r2 = [sp+20]			  ## printf-stdarg.c:183:33
 1e0ca8a:    20 92             	r0 = r1 + 2			  ## printf-stdarg.c:182:21
 1e0ca8c:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:182:21
 1e0ca8e:    41 94             	r1 = r2 + 4			  ## printf-stdarg.c:183:33
 1e0ca90:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:183:33
 1e0ca92:    cb 1f             	goto -106 <print+0x94 : 1e0ca2a >			  ## printf-stdarg.c:183:33
 1e0ca94:    10 60             	r0 = b[r0 + 1] (u)			  ## printf-stdarg.c:230:39
 1e0ca96:    80 e5 ea 1f       	if (r0 != 88) goto -44 <.GJTIE26_0_0_ : 1e0ca6e >
 1e0ca9a:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:231:40
 1e0ca9c:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:231:40
 1e0ca9e:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:231:40
 1e0caa0:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:231:40
 1e0caa2:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:231:23
 1e0caa6:    2d 02             	[sp+8] = r5
 1e0caa8:    1f 02             	[sp+4] = r7
 1e0caaa:    03 71             	r3 = 16
 1e0caac:    18 f5 00 00       	[sp] = r8
 1e0cab0:    40 08             	r0 = r4
 1e0cab2:    d1 08             	r1 = r13
 1e0cab4:    16 17             	call -468 <printi : 1e0c8e2 >
 1e0cab6:    61 02             	r1 = [sp+24]
 1e0cab8:    11 80             	r1 += 1
 1e0caba:    69 02             	[sp+24] = r1
 1e0cabc:    8b 1f             	goto -234 <print+0x3E : 1e0c9d4 >
 1e0cabe:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:227:40
 1e0cac0:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:227:40
 1e0cac2:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:227:40
 1e0cac4:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:227:40
 1e0cac6:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:227:23
 1e0caca:    2d 02             	[sp+8] = r5
 1e0cacc:    1f 02             	[sp+4] = r7
 1e0cace:    03 71             	r3 = 16
 1e0cad0:    18 f5 00 00       	[sp] = r8
 1e0cad4:    40 08             	r0 = r4
 1e0cad6:    d1 08             	r1 = r13
 1e0cad8:    04 17             	call -504 <printi : 1e0c8e2 >
 1e0cada:    7c 1f             	goto -264 <print+0x3E : 1e0c9d4 >
 1e0cadc:    41 e6 2d 00       	if (r1 == 100) goto 90 <.GJTIE26_0_0_+0xCC : 1e0cb3a >
 1e0cae0:    c1 e6 c5 1f       	if (r1 != 108) goto -118 <.GJTIE26_0_0_ : 1e0ca6e >
 1e0cae4:    11 60             	r1 = b[r0 + 1] (u)
 1e0cae6:    41 e7 34 c0       	ifs (r1 > 116) goto 104 <.GJTIE26_0_0_+0xE4 : 1e0cb52 >
 1e0caea:    41 e6 3d 00       	if (r1 == 100) goto 122 <.GJTIE26_0_0_+0xFA : 1e0cb68 >
 1e0caee:    c1 e6 be 1f       	if (r1 != 108) goto -132 <.GJTIE26_0_0_ : 1e0ca6e >
 1e0caf2:    21 60             	r1 = b[r0 + 2] (u)			  ## printf-stdarg.c:207:67
 1e0caf4:    41 e6 4e 10       	if (r1 != 100) goto 156 <.GJTIE26_0_0_+0x126 : 1e0cb94 >			  ## printf-stdarg.c:207:67
 1e0caf8:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0cafa:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:208:40
 1e0cafc:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:208:40
 1e0cafe:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0cb00:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:208:40
 1e0cb02:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:208:40
 1e0cb04:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:208:40
 1e0cb06:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:208:23
 1e0cb0a:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:208:23
 1e0cb0c:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:208:23
 1e0cb0e:    a3 70             	r3 = 10			  ## printf-stdarg.c:208:23
 1e0cb10:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:208:23
 1e0cb14:    50 18             	goto 160 <.GJTIE26_0_0_+0x148 : 1e0cbb6 >			  ## printf-stdarg.c:208:23
 1e0cb16:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:194:44
 1e0cb18:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:194:44
 1e0cb1a:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:194:44
 1e0cb1c:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:194:44
 1e0cb1e:    0d 02             	[sp] = r5			  ## printf-stdarg.c:195:23
 1e0cb20:    97 35             	if (r2 != 0) goto -210 <print+0xBA : 1e0ca50 >			  ## printf-stdarg.c:195:23
 1e0cb22:    c2 08             	r2 = r12			  ## printf-stdarg.c:195:40
 1e0cb24:    95 1f             	goto -214 <print+0xBA : 1e0ca50 >
 1e0cb26:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:236:40
 1e0cb28:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:236:40
 1e0cb2a:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:236:40
 1e0cb2c:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:236:40
 1e0cb2e:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:236:23
 1e0cb32:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:236:23
 1e0cb34:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:236:23
 1e0cb36:    a3 70             	r3 = 10			  ## printf-stdarg.c:236:23
 1e0cb38:    cb 1f             	goto -106 <.GJTIE26_0_0_+0x62 : 1e0cad0 >			  ## printf-stdarg.c:236:23
 1e0cb3a:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:199:40
 1e0cb3c:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:199:40
 1e0cb3e:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:199:40
 1e0cb40:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:199:40
 1e0cb42:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:199:23
 1e0cb46:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:199:23
 1e0cb48:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:199:23
 1e0cb4a:    a3 70             	r3 = 10			  ## printf-stdarg.c:199:23
 1e0cb4c:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:199:23
 1e0cb50:    c1 1f             	goto -126 <.GJTIE26_0_0_+0x66 : 1e0cad4 >			  ## printf-stdarg.c:199:23
 1e0cb52:    51 e7 15 00       	if (r1 == 117) goto 42 <.GJTIE26_0_0_+0x112 : 1e0cb80 >
 1e0cb56:    81 e7 8a 1f       	if (r1 != 120) goto -236 <.GJTIE26_0_0_ : 1e0ca6e >
 1e0cb5a:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:222:40
 1e0cb5c:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:222:40
 1e0cb5e:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:222:40
 1e0cb60:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:222:40
 1e0cb62:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:222:23
 1e0cb66:    9f 1f             	goto -194 <.GJTIE26_0_0_+0x38 : 1e0caa6 >			  ## printf-stdarg.c:222:23
 1e0cb68:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:203:40
 1e0cb6a:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:203:40
 1e0cb6c:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:203:40
 1e0cb6e:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:203:40
 1e0cb70:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:203:23
 1e0cb74:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:203:23
 1e0cb76:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:203:23
 1e0cb78:    a3 70             	r3 = 10			  ## printf-stdarg.c:203:23
 1e0cb7a:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:203:23
 1e0cb7e:    98 1f             	goto -208 <.GJTIE26_0_0_+0x42 : 1e0cab0 >			  ## printf-stdarg.c:203:23
 1e0cb80:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:240:40
 1e0cb82:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:240:40
 1e0cb84:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:240:40
 1e0cb86:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:240:40
 1e0cb88:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:240:23
 1e0cb8c:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:240:23
 1e0cb8e:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:240:23
 1e0cb90:    a3 70             	r3 = 10			  ## printf-stdarg.c:240:23
 1e0cb92:    8c 1f             	goto -232 <.GJTIE26_0_0_+0x3E : 1e0caac >			  ## printf-stdarg.c:240:23
 1e0cb94:    20 60             	r0 = b[r0 + 2] (u)			  ## printf-stdarg.c:244:67
 1e0cb96:    50 e7 6a 1f       	if (r0 != 117) goto -300 <.GJTIE26_0_0_ : 1e0ca6e >
 1e0cb9a:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0cb9c:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:245:40
 1e0cb9e:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:245:40
 1e0cba0:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0cba2:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:245:40
 1e0cba4:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:245:40
 1e0cba6:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:245:40
 1e0cba8:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:245:23
 1e0cbac:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:245:23
 1e0cbae:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:245:23
 1e0cbb0:    a3 70             	r3 = 10			  ## printf-stdarg.c:245:23
 1e0cbb2:    18 f5 00 00       	[sp] = r8			  ## printf-stdarg.c:245:23
 1e0cbb6:    40 08             	r0 = r4
 1e0cbb8:    d1 08             	r1 = r13
 1e0cbba:    93 16             	call -730 <printi : 1e0c8e2 >
 1e0cbbc:    61 02             	r1 = [sp+24]
 1e0cbbe:    21 80             	r1 += 2
 1e0cbc0:    7c 1f             	goto -264 <.GJTIE26_0_0_+0x4C : 1e0caba >
 1e0cbc2:    00 64             	r0 = b[r2 + 0] (u)			  ## printf-stdarg.c:152:12
 1e0cbc4:    50 e2 f6 0e       	if (r0 == 37) goto -532 <print+0x1E : 1e0c9b4 >			  ## printf-stdarg.c:152:5
 1e0cbc8:    01 31             	if (r0 != 0) goto -510 <print+0x36 : 1e0c9cc >
 1e0cbca:    03 28             	if (r4 == 0) goto 6 <.GJTIE26_0_0_+0x164 : 1e0cbd2 >
 1e0cbcc:    00 48             	r0 = [r4 + 0]			  ## printf-stdarg.c:280:10
 1e0cbce:    01 70             	r1 = 0			  ## printf-stdarg.c:280:15
 1e0cbd0:    09 60             	b[r0 + 0] = r1			  ## printf-stdarg.c:280:15
 1e0cbd2:    60 08             	r0 = r6			  ## printf-stdarg.c:283:5
 1e0cbd4:    0e 0a             	sp += 28			  ## printf-stdarg.c:283:5
 1e0cbd6:    5d 01             	{pc, r13-r4} = [sp++]			  ## printf-stdarg.c:283:5


sprintf:
 1e0cbd8:    62 01             	[--sp] = {r3, r2}			  ## printf-stdarg.c:405:0
 1e0cbda:    34 00             	[--sp] = rets			  ## printf-stdarg.c:405:0
 1e0cbdc:    fc 0b             	sp += -8			  ## printf-stdarg.c:405:0
 1e0cbde:    18 02             	[sp+4] = r0			  ## printf-stdarg.c:405:0
 1e0cbe0:    c3 a0             	r3 = sp + 12			  ## printf-stdarg.c:405:0
 1e0cbe2:    0b 02             	[sp] = r3			  ## printf-stdarg.c:408:5
 1e0cbe4:    40 a0             	r0 = sp + 4			  ## printf-stdarg.c:408:5
 1e0cbe6:    c2 ff fa 24 e1 01 	r2 = 31532282 <update_target_end+0x22CA : 1e124fa >			  ## printf-stdarg.c:410:12
 1e0cbec:    01 70             	r1 = 0			  ## printf-stdarg.c:410:12
 1e0cbee:    d3 16             	call -602 <print : 1e0c996 >			  ## printf-stdarg.c:410:12
 1e0cbf0:    04 0a             	sp += 8
 1e0cbf2:    88 01             	{rets} = [sp++]
 1e0cbf4:    04 0a             	sp += 8
 1e0cbf6:    20 00             	rts


log_print_time:
 1e0cbf8:    79 01             	[--sp] = {rets, r9-r4}			  ## log.c:187:0
 1e0cbfa:    f0 0b             	sp += -32			  ## log.c:187:0
 1e0cbfc:    8f f3 8b b3       	call 2058006 <jiffies_msec : 3316 >			  ## log.c:151:24
 1e0cc00:    c9 ff c0 23 00 00 	r9 = 9152 <cur_ch : 23c0 >			  ## log.c:151:24
 1e0cc06:    01 f6 04 91       	r1 = [r9 + 260]			  ## log.c:153:48
 1e0cc0a:    65 b0             	r5 = r0 - r1			  ## log.c:153:46
 1e0cc0c:    c8 ff 74 21 00 00 	r8 = 8564 <cur_time.6 : 2174 >
 1e0cc12:    c1 ff 70 21 00 00 	r1 = 8560 <cur_time.4 : 2170 >
 1e0cc18:    c2 ff 72 21 00 00 	r2 = 8562 <cur_time.5 : 2172 >
 1e0cc1e:    05 e0 03 b0       	ifs (r5 < 0) goto 6 <log_print_time+0x30 : 1e0cc28 >			  ## log.c:155:9
 1e0cc22:    06 f9 00 80       	r6 = b[r8 + 0] (u)
 1e0cc26:    08 18             	goto 16 <log_print_time+0x40 : 1e0cc38 >
 1e0cc28:    06 70             	r6 = 0
 1e0cc2a:    16 f6 04 91       	[r9 + 260] = r6			  ## log.c:156:22
 1e0cc2e:    0e 62             	b[r1 + 0] = r6			  ## log.c:157:23
 1e0cc30:    0e 64             	b[r2 + 0] = r6			  ## log.c:158:22
 1e0cc32:    16 f9 00 80       	b[r8 + 0] = r6			  ## log.c:159:22
 1e0cc36:    05 08             	r5 = r0			  ## log.c:159:22
 1e0cc38:    0b ff e8 53 1e 00 	ifs (r5 < 1000) goto 60 <log_print_time+0x82 : 1e0cc7a >
 1e0cc3e:    16 80             	r6 += 1			  ## log.c:166:17
 1e0cc40:    83 05             	r3 = r6.b0 (u)			  ## log.c:166:17
 1e0cc42:    55 fc 18 fc       	r5 = r5 + -1000			  ## log.c:165:18
 1e0cc46:    c3 e3 10 30       	if (r3 < 60) goto 32 <log_print_time+0x72 : 1e0cc6a >
 1e0cc4a:    03 64             	r3 = b[r2 + 0] (u)			  ## log.c:168:21
 1e0cc4c:    13 80             	r3 += 1			  ## log.c:168:21
 1e0cc4e:    0b 64             	b[r2 + 0] = r3			  ## log.c:168:21
 1e0cc50:    c3 04             	r3 = r3.b0 (u)			  ## log.c:168:21
 1e0cc52:    06 70             	r6 = 0			  ## log.c:168:21
 1e0cc54:    c3 e3 09 30       	if (r3 < 60) goto 18 <log_print_time+0x72 : 1e0cc6a >			  ## log.c:168:21
 1e0cc58:    03 62             	r3 = b[r1 + 0] (u)			  ## log.c:170:25
 1e0cc5a:    0e 64             	b[r2 + 0] = r6			  ## log.c:169:34
 1e0cc5c:    13 80             	r3 += 1			  ## log.c:170:25
 1e0cc5e:    c4 04             	r4 = r3.b0 (u)			  ## log.c:170:25
 1e0cc60:    07 70             	r7 = 0			  ## log.c:170:25
 1e0cc62:    24 e6 01 80       	if (r4 > 98) goto 2 <log_print_time+0x70 : 1e0cc68 >			  ## log.c:170:25
 1e0cc66:    37 08             	r7 = r3			  ## log.c:170:25
 1e0cc68:    0f 62             	b[r1 + 0] = r7			  ## log.c:171:39
 1e0cc6a:    0c ff e7 53 e7 ff 	ifs (r5 > 999) goto -50 <log_print_time+0x46 : 1e0cc3e >
 1e0cc70:    16 f9 00 80       	b[r8 + 0] = r6			  ## log.c:166:17
 1e0cc74:    60 b1             	r0 = r0 - r5			  ## log.c:177:22
 1e0cc76:    10 f6 04 91       	[r9 + 260] = r0			  ## log.c:177:22
 1e0cc7a:    03 64             	r3 = b[r2 + 0] (u)			  ## log.c:180:59
 1e0cc7c:    02 62             	r2 = b[r1 + 0] (u)			  ## log.c:180:44
 1e0cc7e:    1d 02             	[sp+4] = r5			  ## log.c:180:5
 1e0cc80:    81 05             	r1 = r6.b0 (u)			  ## log.c:181:13
 1e0cc82:    80 a0             	r0 = sp + 8			  ## log.c:181:13
 1e0cc84:    09 02             	[sp] = r1			  ## log.c:180:5
 1e0cc86:    a8 17             	call -176 <sprintf : 1e0cbd8 >			  ## log.c:180:5
 1e0cc88:    00 f9 22 90       	r0 = b[r9 + 34] (u)			  ## log.c:196:9
 1e0cc8c:    a0 e0 02 00       	if (r0 == 10) goto 4 <log_print_time+0x9C : 1e0cc94 >			  ## log.c:196:9
 1e0cc90:    a0 70             	r0 = 10			  ## log.c:197:9
 1e0cc92:    a9 15             	call -1198 <log_putbyte : 1e0c7e6 >			  ## log.c:197:9
 1e0cc94:    04 70             	r4 = 0
 1e0cc96:    80 a0             	r0 = sp + 8
 1e0cc98:    20 fa 00 04       	r0 = b[r0+r4] (s)			  ## log.c:200:9
 1e0cc9c:    a4 15             	call -1208 <log_putbyte : 1e0c7e6 >			  ## log.c:200:9
 1e0cc9e:    14 80             	r4 += 1			  ## log.c:199:30
 1e0cca0:    e4 e0 f9 1f       	if (r4 != 14) goto -14 <log_print_time+0x9E : 1e0cc96 >			  ## log.c:199:5
 1e0cca4:    10 0a             	sp += 32
 1e0cca6:    59 01             	{pc, r9-r4} = [sp++]			  ## log.c:202:1


logbuf_output:
 1e0cca8:    76 01             	[--sp] = {rets, r6-r4}			  ## log.c:26:0
 1e0ccaa:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## log.c:26:0
 1e0ccb0:    00 f6 00 41       	r0 = [r4 + 256]			  ## log.c:29:9
 1e0ccb4:    3b 20             	if (r0 == 0) goto 118 <logbuf_output+0x84 : 1e0cd2c >			  ## log.c:29:9
 1e0ccb6:    80 f3 aa 03       	call 1876 <lbuf_pop : 1e0d40e >			  ## log.c:33:36
 1e0ccba:    10 f6 fc 40       	[r4 + 252] = r0			  ## log.c:33:17
 1e0ccbe:    36 20             	if (r0 == 0) goto 108 <logbuf_output+0x84 : 1e0cd2c >			  ## log.c:33:17
 1e0ccc0:    05 70             	r5 = 0
 1e0ccc2:    01 50             	r1 = h[r0 + 0] (u)			  ## log.c:37:34
 1e0ccc4:    12 22             	if (r1 == 0) goto 36 <logbuf_output+0x42 : 1e0ccea >			  ## log.c:37:34
 1e0ccc6:    06 70             	r6 = 0
 1e0ccc8:    81 b1             	r1 = r0 + r6			  ## log.c:38:17
 1e0ccca:    42 62             	r2 = b[r1 + 4] (u)			  ## log.c:38:17
 1e0cccc:    d2 e0 03 00       	if (r2 == 13) goto 6 <logbuf_output+0x2E : 1e0ccd6 >			  ## log.c:38:17
 1e0ccd0:    42 62             	r2 = b[r1 + 4] (u)			  ## log.c:38:44
 1e0ccd2:    a2 e0 0b 10       	if (r2 != 10) goto 22 <logbuf_output+0x44 : 1e0ccec >			  ## log.c:38:44
 1e0ccd6:    20 f9 04 10       	r0 = b[r1 + 4] (s)			  ## log.c:39:17
 1e0ccda:    85 15             	call -1270 <log_putbyte : 1e0c7e6 >			  ## log.c:39:17
 1e0ccdc:    00 f6 fc 40       	r0 = [r4 + 252]			  ## log.c:37:25
 1e0cce0:    01 50             	r1 = h[r0 + 0] (u)			  ## log.c:37:25
 1e0cce2:    16 80             	r6 += 1			  ## log.c:37:40
 1e0cce4:    16 f2 f0 bf       	ifs (r6 < r1) goto -32 <logbuf_output+0x20 : 1e0ccc8 >
 1e0cce8:    01 18             	goto 2 <logbuf_output+0x44 : 1e0ccec >
 1e0ccea:    06 70             	r6 = 0
 1e0ccec:    01 50             	r1 = h[r0 + 0] (u)			  ## log.c:45:17
 1e0ccee:    16 f2 06 a0       	ifs (r6 >= r1) goto 12 <logbuf_output+0x56 : 1e0ccfe >			  ## log.c:45:17
 1e0ccf2:    01 50             	r1 = h[r0 + 0] (u)			  ## log.c:45:42
 1e0ccf4:    21 e0 03 30       	if (r1 < 2) goto 6 <logbuf_output+0x56 : 1e0ccfe >			  ## log.c:45:42
 1e0ccf8:    7f 17             	call -258 <log_print_time : 1e0cbf8 >			  ## log.c:46:13
 1e0ccfa:    00 f6 fc 40       	r0 = [r4 + 252]			  ## log.c:46:13
 1e0ccfe:    01 50             	r1 = h[r0 + 0] (u)			  ## log.c:48:20
 1e0cd00:    16 f2 0a a0       	ifs (r6 >= r1) goto 20 <logbuf_output+0x70 : 1e0cd18 >			  ## log.c:48:20
 1e0cd04:    60 09             	r0 += r6			  ## log.c:49:25
 1e0cd06:    20 f9 04 00       	r0 = b[r0 + 4] (s)			  ## log.c:49:13
 1e0cd0a:    6d 15             	call -1318 <log_putbyte : 1e0c7e6 >			  ## log.c:49:13
 1e0cd0c:    00 f6 fc 40       	r0 = [r4 + 252]			  ## log.c:48:20
 1e0cd10:    01 50             	r1 = h[r0 + 0] (u)			  ## log.c:48:20
 1e0cd12:    16 80             	r6 += 1			  ## log.c:48:35
 1e0cd14:    16 f2 f6 bf       	ifs (r6 < r1) goto -20 <logbuf_output+0x5C : 1e0cd04 >
 1e0cd18:    80 f3 15 02       	call 1066 <lbuf_free : 1e0d146 >			  ## log.c:52:9
 1e0cd1c:    46 fc fc 00       	r6 = r4 + 252			  ## log.c:52:9
 1e0cd20:    0d 4c             	[r6 + 0] = r5			  ## log.c:53:17
 1e0cd22:    10 4c             	r0 = [r6 + 4]			  ## log.c:33:45
 1e0cd24:    80 f3 73 03       	call 1766 <lbuf_pop : 1e0d40e >			  ## log.c:33:36
 1e0cd28:    08 4c             	[r6 + 0] = r0			  ## log.c:33:17
 1e0cd2a:    cb 31             	if (r0 != 0) goto -106 <logbuf_output+0x1A : 1e0ccc2 >			  ## log.c:33:17
 1e0cd2c:    56 01             	{pc, r6-r4} = [sp++]			  ## log.c:56:1


log_output_end:
 1e0cd2e:    74 01             	[--sp] = {rets, r4}			  ## log.c:363:0
 1e0cd30:    04 08             	r4 = r0			  ## log.c:363:0
 1e0cd32:    0b 28             	if (r4 == 0) goto 22 <log_output_end+0x1C : 1e0cd4a >			  ## log.c:363:0
 1e0cd34:    00 58             	r0 = h[r4 + 0] (u)			  ## log.c:365:17
 1e0cd36:    11 58             	r1 = h[r4 + 2] (u)			  ## log.c:365:27
 1e0cd38:    10 f2 04 20       	if (r0 >= r1) goto 8 <log_output_end+0x16 : 1e0cd44 >			  ## log.c:365:27
 1e0cd3c:    41 90             	r1 = r0 + 4			  ## log.c:366:42
 1e0cd3e:    40 08             	r0 = r4			  ## log.c:366:13
 1e0cd40:    80 f3 87 02       	call 1294 <lbuf_realloc : 1e0d252 >			  ## log.c:366:13
 1e0cd44:    40 08             	r0 = r4			  ## log.c:368:9
 1e0cd46:    80 f3 e7 02       	call 1486 <lbuf_push : 1e0d318 >			  ## log.c:368:9
 1e0cd4a:    0f 15             	call -1506 <log_output_lock : 1e0c76a >			  ## log.c:370:9
 1e0cd4c:    0c 30             	if (r0 != 0) goto 24 <log_output_end+0x38 : 1e0cd66 >			  ## log.c:370:9
 1e0cd4e:    ac 17             	call -168 <logbuf_output : 1e0cca8 >			  ## log.c:235:5
 1e0cd50:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## log.c:235:5
 1e0cd56:    01 70             	r1 = 0			  ## log.c:235:5
 1e0cd58:    11 f9 08 01       	b[r0 + 264] = r1			  ## log.c:235:5
 1e0cd5c:    c0 ff 78 26 00 00 	r0 = 9848 <log_mutex : 2678 >			  ## log.c:237:5
 1e0cd62:    97 f3 61 d0       	call 3121346 <os_mutex_post : 106e28 >			  ## log.c:237:5
 1e0cd66:    54 01             	{pc, r4} = [sp++]			  ## log.c:374:1


log_output_unlock:
 1e0cd68:    34 00             	[--sp] = rets			  ## log.c:234:0
 1e0cd6a:    9e 17             	call -196 <logbuf_output : 1e0cca8 >			  ## log.c:235:5
 1e0cd6c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## log.c:235:5
 1e0cd72:    01 70             	r1 = 0			  ## log.c:235:5
 1e0cd74:    11 f9 08 01       	b[r0 + 264] = r1			  ## log.c:235:5
 1e0cd78:    c0 ff 78 26 00 00 	r0 = 9848 <log_mutex : 2678 >			  ## log.c:237:5
 1e0cd7e:    88 01             	{rets} = [sp++]			  ## log.c:237:5
 1e0cd80:    d7 f3 52 d0       	goto 3121316 <os_mutex_post : 106e28 >			  ## log.c:237:5


log_output_start:
 1e0cd84:    74 01             	[--sp] = {rets, r4}			  ## log.c:345:0
 1e0cd86:    c4 7f             	r4 = 252			  ## log.c:348:9
 1e0cd88:    01 20             	if (r0 == 0) goto 2 <log_output_start+0x8 : 1e0cd8c >
 1e0cd8a:    04 08             	r4 = r0			  ## log.c:348:9
 1e0cd8c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## log.c:352:38
 1e0cd92:    00 f6 00 01       	r0 = [r0 + 256]			  ## log.c:352:38
 1e0cd96:    41 98             	r1 = r4 + 4			  ## log.c:352:70
 1e0cd98:    80 f3 6d 03       	call 1754 <lbuf_alloc : 1e0d476 >			  ## log.c:352:27
 1e0cd9c:    03 20             	if (r0 == 0) goto 6 <log_output_start+0x20 : 1e0cda4 >			  ## log.c:352:27
 1e0cd9e:    01 70             	r1 = 0			  ## log.c:354:17
 1e0cda0:    09 50             	h[r0 + 0] = r1			  ## log.c:354:17
 1e0cda2:    1c 50             	h[r0 + 2] = r4			  ## log.c:355:21
 1e0cda4:    54 01             	{pc, r4} = [sp++]			  ## log.c:358:5


printf:
 1e0cda6:    61 01             	[--sp] = {r3-r1}			  ## printf-stdarg.c:331:0
 1e0cda8:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:331:0
 1e0cdaa:    fc 0b             	sp += -8			  ## printf-stdarg.c:331:0
 1e0cdac:    04 08             	r4 = r0			  ## printf-stdarg.c:331:0
 1e0cdae:    40 a1             	r0 = sp + 20			  ## printf-stdarg.c:331:0
 1e0cdb0:    18 02             	[sp+4] = r0			  ## printf-stdarg.c:335:5
 1e0cdb2:    db 14             	call -1610 <log_output_lock : 1e0c76a >			  ## printf-stdarg.c:338:9
 1e0cdb4:    14 20             	if (r0 == 0) goto 40 <printf+0x38 : 1e0cdde >			  ## printf-stdarg.c:338:9
 1e0cdb6:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## printf-stdarg.c:339:29
 1e0cdba:    e4 17             	call -56 <log_output_start : 1e0cd84 >			  ## printf-stdarg.c:339:29
 1e0cdbc:    05 08             	r5 = r0			  ## printf-stdarg.c:339:29
 1e0cdbe:    1c 2a             	if (r5 == 0) goto 56 <printf+0x52 : 1e0cdf8 >
 1e0cdc0:    13 02             	r3 = [sp+4]			  ## printf-stdarg.c:345:46
 1e0cdc2:    40 9a             	r0 = r5 + 4			  ## printf-stdarg.c:343:19
 1e0cdc4:    08 02             	[sp] = r0			  ## printf-stdarg.c:343:15
 1e0cdc6:    51 fc 03 01       	r1 = r5 + 259			  ## printf-stdarg.c:345:31
 1e0cdca:    00 a0             	r0 = sp + 0			  ## printf-stdarg.c:345:31
 1e0cdcc:    42 08             	r2 = r4			  ## printf-stdarg.c:345:19
 1e0cdce:    e3 15             	call -1082 <print : 1e0c996 >			  ## printf-stdarg.c:345:19
 1e0cdd0:    08 5a             	h[r5 + 0] = r0			  ## printf-stdarg.c:345:17
 1e0cdd2:    50 08             	r0 = r5			  ## printf-stdarg.c:347:9
 1e0cdd4:    ac 17             	call -168 <log_output_end : 1e0cd2e >			  ## printf-stdarg.c:347:9
 1e0cdd6:    10 18             	goto 32 <printf+0x52 : 1e0cdf8 >			  ## printf-stdarg.c:347:9
 1e0cdd8:    10 04             	r0 = r0.b0 (s)			  ## printf-stdarg.c:352:13
 1e0cdda:    05 15             	call -1526 <log_putbyte : 1e0c7e6 >			  ## printf-stdarg.c:352:13
 1e0cddc:    14 80             	r4 += 1			  ## printf-stdarg.c:353:19
 1e0cdde:    00 68             	r0 = b[r4 + 0] (u)			  ## printf-stdarg.c:351:16
 1e0cde0:    a0 e0 fa 0f       	if (r0 == 10) goto -12 <printf+0x32 : 1e0cdd8 >			  ## printf-stdarg.c:351:16
 1e0cde4:    d0 e0 f8 0f       	if (r0 == 13) goto -16 <printf+0x32 : 1e0cdd8 >
 1e0cde8:    06 20             	if (r0 == 0) goto 12 <printf+0x50 : 1e0cdf6 >
 1e0cdea:    06 17             	call -500 <log_print_time : 1e0cbf8 >			  ## printf-stdarg.c:356:13
 1e0cdec:    13 02             	r3 = [sp+4]			  ## printf-stdarg.c:357:42
 1e0cdee:    00 70             	r0 = 0			  ## printf-stdarg.c:357:19
 1e0cdf0:    01 70             	r1 = 0			  ## printf-stdarg.c:357:19
 1e0cdf2:    42 08             	r2 = r4			  ## printf-stdarg.c:357:19
 1e0cdf4:    d0 15             	call -1120 <print : 1e0c996 >			  ## printf-stdarg.c:357:19
 1e0cdf6:    b8 17             	call -144 <log_output_unlock : 1e0cd68 >			  ## printf-stdarg.c:360:9
 1e0cdf8:    04 0a             	sp += 8
 1e0cdfa:    15 01             	{rets, r5, r4} = [sp++]
 1e0cdfc:    06 0a             	sp += 12
 1e0cdfe:    20 00             	rts


log_print:
 1e0ce00:    63 01             	[--sp] = {r3}			  ## log.c:241:0
 1e0ce02:    78 01             	[--sp] = {rets, r8-r4}			  ## log.c:241:0
 1e0ce04:    fc 0b             	sp += -8			  ## log.c:241:0
 1e0ce06:    26 08             	r6 = r2			  ## log.c:241:0
 1e0ce08:    04 08             	r4 = r0			  ## log.c:241:0
 1e0ce0a:    04 e0 a0 b0       	ifs (r4 < 0) goto 320 <log_print+0x14E : 1e0cf4e >			  ## log.c:241:0
 1e0ce0e:    00 a2             	r0 = sp + 32			  ## log.c:241:0
 1e0ce10:    08 02             	[sp] = r0			  ## log.c:252:5
 1e0ce12:    ab 14             	call -1706 <log_output_lock : 1e0c76a >			  ## log.c:254:9
 1e0ce14:    c8 ff 64 30 e1 01 	r8 = 31535204 <log_str : 1e13064 >
 1e0ce1a:    1c 20             	if (r0 == 0) goto 56 <log_print+0x54 : 1e0ce54 >
 1e0ce1c:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## log.c:256:14
 1e0ce20:    b1 17             	call -158 <log_output_start : 1e0cd84 >			  ## log.c:256:14
 1e0ce22:    05 08             	r5 = r0			  ## log.c:256:14
 1e0ce24:    94 2a             	if (r5 == 0) goto 296 <log_print+0x14E : 1e0cf4e >
 1e0ce26:    00 70             	r0 = 0
 1e0ce28:    0a 18             	goto 20 <log_print+0x3E : 1e0ce3e >
 1e0ce2a:    02 5a             	r2 = h[r5 + 0] (u)			  ## log.c:379:13
 1e0ce2c:    13 5a             	r3 = h[r5 + 2] (u)			  ## log.c:379:23
 1e0ce2e:    32 f2 05 20       	if (r2 >= r3) goto 10 <log_print+0x3C : 1e0ce3c >			  ## log.c:379:23
 1e0ce32:    13 94             	r3 = r2 + 1			  ## log.c:380:24
 1e0ce34:    57 08             	r7 = r5			  ## log.c:380:24
 1e0ce36:    93 f8 00 72       	h[r7 ++= r2] = r3			  ## log.c:380:24
 1e0ce3a:    49 6e             	b[r7 + 4] = r1			  ## log.c:380:28
 1e0ce3c:    10 80             	r0 += 1			  ## log.c:264:20
 1e0ce3e:    01 fa 00 60       	r1 = b[r6+r0] (u)			  ## log.c:261:16
 1e0ce42:    a1 e0 f2 0f       	if (r1 == 10) goto -28 <log_print+0x2A : 1e0ce2a >			  ## log.c:261:16
 1e0ce46:    d1 e0 f0 0f       	if (r1 == 13) goto -32 <log_print+0x2A : 1e0ce2a >
 1e0ce4a:    2e 32             	if (r1 != 0) goto 92 <log_print+0xA8 : 1e0cea8 >
 1e0ce4c:    50 08             	r0 = r5			  ## log.c:268:13
 1e0ce4e:    80 f3 7a 01       	call 756 <lbuf_free : 1e0d146 >			  ## log.c:268:13
 1e0ce52:    7d 18             	goto 250 <log_print+0x14E : 1e0cf4e >			  ## log.c:268:13
 1e0ce54:    07 70             	r7 = 0
 1e0ce56:    03 18             	goto 6 <log_print+0x5E : 1e0ce5e >
 1e0ce58:    10 04             	r0 = r0.b0 (s)			  ## log.c:300:13
 1e0ce5a:    c5 14             	call -1654 <log_putbyte : 1e0c7e6 >			  ## log.c:300:13
 1e0ce5c:    17 80             	r7 += 1			  ## log.c:302:20
 1e0ce5e:    00 fa 00 67       	r0 = b[r6+r7] (u)			  ## log.c:299:16
 1e0ce62:    a0 e0 f9 0f       	if (r0 == 10) goto -14 <log_print+0x58 : 1e0ce58 >			  ## log.c:299:16
 1e0ce66:    d0 e0 f7 0f       	if (r0 == 13) goto -18 <log_print+0x58 : 1e0ce58 >
 1e0ce6a:    65 20             	if (r0 == 0) goto 202 <log_print+0x136 : 1e0cf36 >
 1e0ce6c:    c5 bd             	r5 = r6 + r7			  ## log.c:305:17
 1e0ce6e:    34 e0 5c b0       	ifs (r4 < 3) goto 184 <log_print+0x12A : 1e0cf2a >			  ## log.c:305:17
 1e0ce72:    07 e0 06 c0       	ifs (r7 > 0) goto 12 <log_print+0x82 : 1e0ce82 >
 1e0ce76:    66 fb 01 79       	r6 = 1 - r7			  ## log.c:305:17
 1e0ce7a:    a0 70             	r0 = 10			  ## log.c:307:21
 1e0ce7c:    b4 14             	call -1688 <log_putbyte : 1e0c7e6 >			  ## log.c:307:21
 1e0ce7e:    56 f3 fd ff       	if (--r6 != 0) goto -6 <log_print+0x7C : 1e0ce7c >			  ## log.c:307:21
 1e0ce82:    a0 c0             	r0 = r4 << 2			  ## log.c:315:38
 1e0ce84:    80 09             	r0 += r8			  ## log.c:315:38
 1e0ce86:    04 f6 f4 0f       	r4 = [r0 + -12]			  ## log.c:315:24
 1e0ce8a:    b6 16             	call -660 <log_print_time : 1e0cbf8 >			  ## log.c:311:13
 1e0ce8c:    02 18             	goto 4 <log_print+0x92 : 1e0ce92 >			  ## log.c:311:13
 1e0ce8e:    10 04             	r0 = r0.b0 (s)			  ## log.c:318:21
 1e0ce90:    aa 14             	call -1708 <log_putbyte : 1e0c7e6 >			  ## log.c:318:21
 1e0ce92:    80 f9 01 40       	r0 = b[r4 ++= 1] (u)
 1e0ce96:    fb 31             	if (r0 != 0) goto -10 <log_print+0x8E : 1e0ce8e >
 1e0ce98:    03 02             	r3 = [sp]			  ## log.c:323:36
 1e0ce9a:    00 70             	r0 = 0			  ## log.c:323:13
 1e0ce9c:    01 70             	r1 = 0			  ## log.c:323:13
 1e0ce9e:    52 08             	r2 = r5			  ## log.c:323:13
 1e0cea0:    7a 15             	call -1292 <print : 1e0c996 >			  ## log.c:323:13
 1e0cea2:    a0 70             	r0 = 10			  ## log.c:326:17
 1e0cea4:    a0 14             	call -1728 <log_putbyte : 1e0c7e6 >			  ## log.c:326:17
 1e0cea6:    47 18             	goto 142 <log_print+0x136 : 1e0cf36 >			  ## log.c:326:17
 1e0cea8:    02 bc             	r2 = r6 + r0			  ## log.c:272:13
 1e0ceaa:    34 e0 23 b0       	ifs (r4 < 3) goto 70 <log_print+0xF4 : 1e0cef4 >			  ## log.c:272:13
 1e0ceae:    00 e0 0e c0       	ifs (r0 > 0) goto 28 <log_print+0xCE : 1e0cece >
 1e0ceb2:    11 5a             	r1 = h[r5 + 2] (u)
 1e0ceb4:    03 5a             	r3 = h[r5 + 0] (u)
 1e0ceb6:    60 fb 01 09       	r0 = 1 - r0			  ## log.c:272:13
 1e0ceba:    a6 70             	r6 = 10
 1e0cebc:    e7 04             	r7 = r3.l (u)			  ## log.c:379:17
 1e0cebe:    17 f2 04 20       	if (r7 >= r1) goto 8 <log_print+0xCA : 1e0ceca >			  ## log.c:379:17
 1e0cec2:    13 80             	r3 += 1			  ## log.c:380:24
 1e0cec4:    0b 5a             	h[r5 + 0] = r3			  ## log.c:380:24
 1e0cec6:    57 09             	r7 += r5			  ## log.c:380:9
 1e0cec8:    4e 6e             	b[r7 + 4] = r6			  ## log.c:380:28
 1e0ceca:    50 f3 f7 ff       	if (--r0 != 0) goto -18 <log_print+0xBC : 1e0cebc >
 1e0cece:    a0 c0             	r0 = r4 << 2			  ## log.c:277:34
 1e0ced0:    80 09             	r0 += r8			  ## log.c:277:34
 1e0ced2:    00 f6 f4 0f       	r0 = [r0 + -12]			  ## log.c:277:20
 1e0ced6:    86 f9 01 00       	r6 = b[r0 ++= 1] (u)			  ## log.c:279:20
 1e0ceda:    0c 2c             	if (r6 == 0) goto 24 <log_print+0xF4 : 1e0cef4 >
 1e0cedc:    11 5a             	r1 = h[r5 + 2] (u)
 1e0cede:    03 5a             	r3 = h[r5 + 0] (u)
 1e0cee0:    e7 04             	r7 = r3.l (u)			  ## log.c:379:17
 1e0cee2:    17 f2 04 20       	if (r7 >= r1) goto 8 <log_print+0xEE : 1e0ceee >			  ## log.c:379:17
 1e0cee6:    13 80             	r3 += 1			  ## log.c:380:24
 1e0cee8:    0b 5a             	h[r5 + 0] = r3			  ## log.c:380:24
 1e0ceea:    57 09             	r7 += r5			  ## log.c:380:9
 1e0ceec:    4e 6e             	b[r7 + 4] = r6			  ## log.c:380:28
 1e0ceee:    86 f9 01 00       	r6 = b[r0 ++= 1] (u)			  ## log.c:279:20
 1e0cef2:    f6 3d             	if (r6 != 0) goto -20 <log_print+0xE0 : 1e0cee0 >			  ## log.c:279:20
 1e0cef4:    00 5a             	r0 = h[r5 + 0] (u)			  ## log.c:285:14
 1e0cef6:    46 9a             	r6 = r5 + 4			  ## log.c:285:14
 1e0cef8:    60 09             	r0 += r6			  ## log.c:285:14
 1e0cefa:    18 02             	[sp+4] = r0			  ## log.c:285:11
 1e0cefc:    10 5a             	r0 = h[r5 + 2] (u)			  ## log.c:287:29
 1e0cefe:    03 02             	r3 = [sp]			  ## log.c:287:50
 1e0cf00:    01 bc             	r1 = r6 + r0			  ## log.c:287:27
 1e0cf02:    40 a0             	r0 = sp + 4			  ## log.c:287:27
 1e0cf04:    48 15             	call -1392 <print : 1e0c996 >			  ## log.c:287:9
 1e0cf06:    34 e0 0a b0       	ifs (r4 < 3) goto 20 <log_print+0x11E : 1e0cf1e >
 1e0cf0a:    10 02             	r0 = [sp+4]			  ## log.c:290:15
 1e0cf0c:    11 90             	r1 = r0 + 1			  ## log.c:290:15
 1e0cf0e:    19 02             	[sp+4] = r1			  ## log.c:290:15
 1e0cf10:    d1 70             	r1 = 13			  ## log.c:290:18
 1e0cf12:    09 60             	b[r0 + 0] = r1			  ## log.c:290:18
 1e0cf14:    10 02             	r0 = [sp+4]			  ## log.c:291:15
 1e0cf16:    11 90             	r1 = r0 + 1			  ## log.c:291:15
 1e0cf18:    19 02             	[sp+4] = r1			  ## log.c:291:15
 1e0cf1a:    a1 70             	r1 = 10			  ## log.c:291:18
 1e0cf1c:    09 60             	b[r0 + 0] = r1			  ## log.c:291:18
 1e0cf1e:    10 02             	r0 = [sp+4]			  ## log.c:293:19
 1e0cf20:    a0 b1             	r0 = r0 - r6			  ## log.c:293:21
 1e0cf22:    08 5a             	h[r5 + 0] = r0			  ## log.c:293:17
 1e0cf24:    50 08             	r0 = r5			  ## log.c:295:9
 1e0cf26:    03 17             	call -506 <log_output_end : 1e0cd2e >			  ## log.c:295:9
 1e0cf28:    12 18             	goto 36 <log_print+0x14E : 1e0cf4e >			  ## log.c:295:9
 1e0cf2a:    66 16             	call -820 <log_print_time : 1e0cbf8 >			  ## log.c:311:13
 1e0cf2c:    03 02             	r3 = [sp]			  ## log.c:323:36
 1e0cf2e:    00 70             	r0 = 0			  ## log.c:323:13
 1e0cf30:    01 70             	r1 = 0			  ## log.c:323:13
 1e0cf32:    52 08             	r2 = r5			  ## log.c:323:13
 1e0cf34:    30 15             	call -1440 <print : 1e0c996 >			  ## log.c:323:13
 1e0cf36:    b8 16             	call -656 <logbuf_output : 1e0cca8 >			  ## log.c:235:5
 1e0cf38:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## log.c:235:5
 1e0cf3e:    01 70             	r1 = 0			  ## log.c:235:5
 1e0cf40:    11 f9 08 01       	b[r0 + 264] = r1			  ## log.c:235:5
 1e0cf44:    c0 ff 78 26 00 00 	r0 = 9848 <log_mutex : 2678 >			  ## log.c:237:5
 1e0cf4a:    97 f3 6d cf       	call 3120858 <os_mutex_post : 106e28 >			  ## log.c:237:5
 1e0cf4e:    04 0a             	sp += 8
 1e0cf50:    18 01             	{rets, r8-r4} = [sp++]			  ## log.c:335:1
 1e0cf52:    02 0a             	sp += 4			  ## log.c:335:1
 1e0cf54:    20 00             	rts			  ## log.c:335:1


log_putchar:
 1e0cf56:    02 50             	r2 = h[r0 + 0] (u)			  ## log.c:378:0
 1e0cf58:    13 50             	r3 = h[r0 + 2] (u)			  ## log.c:379:23
 1e0cf5a:    32 f2 04 20       	if (r2 >= r3) goto 8 <log_putchar+0x10 : 1e0cf66 >			  ## log.c:379:23
 1e0cf5e:    13 94             	r3 = r2 + 1			  ## log.c:380:24
 1e0cf60:    93 f8 00 02       	h[r0 ++= r2] = r3			  ## log.c:380:24
 1e0cf64:    49 60             	b[r0 + 4] = r1			  ## log.c:380:28
 1e0cf66:    20 00             	rts			  ## log.c:382:1


puts:
 1e0cf68:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:289:0
 1e0cf6a:    04 08             	r4 = r0			  ## printf-stdarg.c:289:0
 1e0cf6c:    bf f3 fd fb       	call -2054 <log_output_lock : 1e0c76a >			  ## printf-stdarg.c:291:9
 1e0cf70:    0b 20             	if (r0 == 0) goto 22 <puts+0x20 : 1e0cf88 >			  ## printf-stdarg.c:291:9
 1e0cf72:    40 08             	r0 = r4			  ## printf-stdarg.c:292:46
 1e0cf74:    97 f3 c2 cf       	call 3121028 <strlen : 106efc >			  ## printf-stdarg.c:292:46
 1e0cf78:    20 80             	r0 += 2			  ## printf-stdarg.c:292:58
 1e0cf7a:    04 17             	call -504 <log_output_start : 1e0cd84 >			  ## printf-stdarg.c:292:29
 1e0cf7c:    05 08             	r5 = r0			  ## printf-stdarg.c:292:29
 1e0cf7e:    19 3a             	if (r5 != 0) goto 50 <puts+0x4A : 1e0cfb2 >
 1e0cf80:    55 01             	{pc, r5, r4} = [sp++]
 1e0cf82:    10 04             	r0 = r0.b0 (s)			  ## printf-stdarg.c:305:13
 1e0cf84:    30 14             	call -1952 <log_putbyte : 1e0c7e6 >			  ## printf-stdarg.c:305:13
 1e0cf86:    14 80             	r4 += 1			  ## printf-stdarg.c:306:16
 1e0cf88:    00 68             	r0 = b[r4 + 0] (u)			  ## printf-stdarg.c:304:16
 1e0cf8a:    a0 e0 fa 0f       	if (r0 == 10) goto -12 <puts+0x1A : 1e0cf82 >			  ## printf-stdarg.c:304:16
 1e0cf8e:    d0 e0 f8 0f       	if (r0 == 13) goto -16 <puts+0x1A : 1e0cf82 >
 1e0cf92:    0a 20             	if (r0 == 0) goto 20 <puts+0x40 : 1e0cfa8 >
 1e0cf94:    31 16             	call -926 <log_print_time : 1e0cbf8 >			  ## printf-stdarg.c:309:13
 1e0cf96:    00 68             	r0 = b[r4 + 0] (u)			  ## printf-stdarg.c:309:13
 1e0cf98:    07 20             	if (r0 == 0) goto 14 <puts+0x40 : 1e0cfa8 >			  ## printf-stdarg.c:309:13
 1e0cf9a:    15 70             	r5 = 1
 1e0cf9c:    10 04             	r0 = r0.b0 (s)			  ## printf-stdarg.c:312:13
 1e0cf9e:    23 14             	call -1978 <log_putbyte : 1e0c7e6 >			  ## printf-stdarg.c:312:13
 1e0cfa0:    00 fa 00 45       	r0 = b[r4+r5] (u)			  ## printf-stdarg.c:311:16
 1e0cfa4:    15 80             	r5 += 1			  ## printf-stdarg.c:311:9
 1e0cfa6:    fa 31             	if (r0 != 0) goto -12 <puts+0x34 : 1e0cf9c >			  ## printf-stdarg.c:311:9
 1e0cfa8:    df 16             	call -578 <log_output_unlock : 1e0cd68 >			  ## printf-stdarg.c:315:9
 1e0cfaa:    55 01             	{pc, r5, r4} = [sp++]
 1e0cfac:    11 04             	r1 = r0.b0 (s)			  ## printf-stdarg.c:297:13
 1e0cfae:    50 08             	r0 = r5			  ## printf-stdarg.c:297:13
 1e0cfb0:    d2 17             	call -92 <log_putchar : 1e0cf56 >			  ## printf-stdarg.c:297:13
 1e0cfb2:    80 f9 01 40       	r0 = b[r4 ++= 1] (u)
 1e0cfb6:    fa 31             	if (r0 != 0) goto -12 <puts+0x44 : 1e0cfac >
 1e0cfb8:    50 08             	r0 = r5			  ## printf-stdarg.c:300:9
 1e0cfba:    15 01             	{rets, r5, r4} = [sp++]			  ## printf-stdarg.c:300:9
 1e0cfbc:    b8 1e             	goto -656 <log_output_end : 1e0cd2e >			  ## printf-stdarg.c:300:9


log_put_u4hex:
 1e0cfbe:    13 50             	r3 = h[r0 + 2] (u)			  ## log.c:386:0
 1e0cfc0:    02 50             	r2 = h[r0 + 0] (u)			  ## log.c:379:13
 1e0cfc2:    21 fd 0f 19       	r1 = r1 & 15			  ## log.c:387:15
 1e0cfc6:    a1 e0 07 30       	if (r1 < 10) goto 14 <log_put_u4hex+0x1A : 1e0cfd8 >			  ## log.c:389:9
 1e0cfca:    32 f2 0d 20       	if (r2 >= r3) goto 26 <log_put_u4hex+0x2A : 1e0cfe8 >
 1e0cfce:    13 94             	r3 = r2 + 1			  ## log.c:380:24
 1e0cfd0:    93 f8 00 02       	h[r0 ++= r2] = r3			  ## log.c:380:24
 1e0cfd4:    71 83             	r1 += 55			  ## log.c:390:34
 1e0cfd6:    07 18             	goto 14 <log_put_u4hex+0x28 : 1e0cfe6 >			  ## log.c:390:34
 1e0cfd8:    32 f2 06 20       	if (r2 >= r3) goto 12 <log_put_u4hex+0x2A : 1e0cfe8 >
 1e0cfdc:    13 94             	r3 = r2 + 1			  ## log.c:380:24
 1e0cfde:    93 f8 00 02       	h[r0 ++= r2] = r3			  ## log.c:380:24
 1e0cfe2:    01 fd 30 19       	r1 = r1 | 48			  ## log.c:392:29
 1e0cfe6:    49 60             	b[r0 + 4] = r1
 1e0cfe8:    20 00             	rts			  ## log.c:394:1


put_u4hex:
 1e0cfea:    20 fd 0f 09       	r0 = r0 & 15			  ## puthex.c:33:0
 1e0cfee:    a0 e0 03 30       	if (r0 < 10) goto 6 <put_u4hex+0xE : 1e0cff8 >			  ## puthex.c:37:9
 1e0cff2:    70 83             	r0 += 55			  ## puthex.c:38:30
 1e0cff4:    10 04             	r0 = r0.b0 (s)			  ## puthex.c:38:9
 1e0cff6:    02 18             	goto 4 <put_u4hex+0x12 : 1e0cffc >			  ## puthex.c:38:9
 1e0cff8:    00 fd 30 09       	r0 = r0 | 48			  ## puthex.c:40:25
 1e0cffc:    ff f3 f3 fb       	goto -2074 <log_putbyte : 1e0c7e6 >


put_buf:
 1e0d000:    79 01             	[--sp] = {rets, r9-r4}			  ## puthex.c:123:0
 1e0d002:    14 08             	r4 = r1			  ## puthex.c:123:0
 1e0d004:    08 08             	r8 = r0			  ## puthex.c:123:0
 1e0d006:    bf f3 b0 fb       	call -2208 <log_output_lock : 1e0c76a >			  ## puthex.c:127:9
 1e0d00a:    30 20             	if (r0 == 0) goto 96 <put_buf+0x6C : 1e0d06c >			  ## puthex.c:127:9
 1e0d00c:    00 71             	r0 = 16			  ## puthex.c:128:45
 1e0d00e:    e0 fe 00 04       	r0 = r4 / r0 (s)			  ## puthex.c:128:45
 1e0d012:    40 c0             	r0 = r0 << 1			  ## puthex.c:128:50
 1e0d014:    31 70             	r1 = 3			  ## puthex.c:128:35
 1e0d016:    80 fe 10 04       	r0 += r4 * r1			  ## puthex.c:128:39
 1e0d01a:    a0 80             	r0 += 10			  ## puthex.c:128:54
 1e0d01c:    b3 16             	call -666 <log_output_start : 1e0cd84 >			  ## puthex.c:128:14
 1e0d01e:    06 08             	r6 = r0			  ## puthex.c:128:14
 1e0d020:    24 2c             	if (r6 == 0) goto 72 <put_buf+0x6A : 1e0d06a >
 1e0d022:    14 e0 1d b0       	ifs (r4 < 1) goto 58 <put_buf+0x60 : 1e0d060 >
 1e0d026:    05 70             	r5 = 0
 1e0d028:    09 72             	r9 = 32
 1e0d02a:    61 ff 0f 59 03 00 	if ((r5 & 15) != 0) goto 6 <put_buf+0x36 : 1e0d036 >
 1e0d030:    a1 70             	r1 = 10			  ## puthex.c:135:17
 1e0d032:    60 08             	r0 = r6			  ## puthex.c:135:17
 1e0d034:    90 17             	call -224 <log_putchar : 1e0cf56 >			  ## puthex.c:135:17
 1e0d036:    07 fa 00 85       	r7 = b[r8+r5] (u)			  ## puthex.c:137:31
 1e0d03a:    39 d1             	r1 = r7 >> 4			  ## log.c:398:27
 1e0d03c:    60 08             	r0 = r6			  ## log.c:398:5
 1e0d03e:    bf 17             	call -130 <log_put_u4hex : 1e0cfbe >			  ## log.c:398:5
 1e0d040:    60 08             	r0 = r6			  ## log.c:399:5
 1e0d042:    71 08             	r1 = r7			  ## log.c:399:5
 1e0d044:    bc 17             	call -136 <log_put_u4hex : 1e0cfbe >			  ## log.c:399:5
 1e0d046:    00 5c             	r0 = h[r6 + 0] (u)			  ## log.c:379:13
 1e0d048:    11 5c             	r1 = h[r6 + 2] (u)			  ## log.c:379:23
 1e0d04a:    10 f2 06 20       	if (r0 >= r1) goto 12 <put_buf+0x5A : 1e0d05a >			  ## log.c:379:23
 1e0d04e:    11 90             	r1 = r0 + 1			  ## log.c:380:24
 1e0d050:    62 08             	r2 = r6			  ## log.c:380:24
 1e0d052:    91 f8 00 20       	h[r2 ++= r0] = r1			  ## log.c:380:24
 1e0d056:    19 f9 04 20       	b[r2 + 4] = r9			  ## log.c:380:28
 1e0d05a:    15 80             	r5 += 1			  ## puthex.c:133:35
 1e0d05c:    54 f2 e5 1f       	if (r4 != r5) goto -54 <put_buf+0x2A : 1e0d02a >
 1e0d060:    a1 70             	r1 = 10			  ## puthex.c:139:9
 1e0d062:    60 08             	r0 = r6			  ## puthex.c:139:9
 1e0d064:    78 17             	call -272 <log_putchar : 1e0cf56 >			  ## puthex.c:139:9
 1e0d066:    60 08             	r0 = r6			  ## puthex.c:141:9
 1e0d068:    62 16             	call -828 <log_output_end : 1e0cd2e >			  ## puthex.c:141:9
 1e0d06a:    59 01             	{pc, r9-r4} = [sp++]			  ## puthex.c:165:1
 1e0d06c:    14 e0 13 b0       	ifs (r4 < 1) goto 38 <put_buf+0x96 : 1e0d096 >
 1e0d070:    05 70             	r5 = 0
 1e0d072:    61 ff 0f 59 03 00 	if ((r5 & 15) != 0) goto 6 <put_buf+0x7E : 1e0d07e >
 1e0d078:    a0 70             	r0 = 10			  ## puthex.c:147:17
 1e0d07a:    bf f3 b4 fb       	call -2200 <log_putbyte : 1e0c7e6 >			  ## puthex.c:147:17
 1e0d07e:    06 fa 00 85       	r6 = b[r8+r5] (u)			  ## puthex.c:149:23
 1e0d082:    30 d1             	r0 = r6 >> 4			  ## puthex.c:93:19
 1e0d084:    b2 17             	call -156 <put_u4hex : 1e0cfea >			  ## puthex.c:93:5
 1e0d086:    60 08             	r0 = r6			  ## puthex.c:94:5
 1e0d088:    b0 17             	call -160 <put_u4hex : 1e0cfea >			  ## puthex.c:94:5
 1e0d08a:    00 72             	r0 = 32			  ## puthex.c:96:5
 1e0d08c:    bf f3 ab fb       	call -2218 <log_putbyte : 1e0c7e6 >			  ## puthex.c:96:5
 1e0d090:    15 80             	r5 += 1			  ## puthex.c:145:35
 1e0d092:    54 f2 ee 1f       	if (r4 != r5) goto -36 <put_buf+0x72 : 1e0d072 >
 1e0d096:    a0 70             	r0 = 10			  ## puthex.c:151:9
 1e0d098:    bf f3 a5 fb       	call -2230 <log_putbyte : 1e0c7e6 >			  ## puthex.c:151:9
 1e0d09c:    19 01             	{rets, r9-r4} = [sp++]			  ## puthex.c:153:9
 1e0d09e:    64 1e             	goto -824 <log_output_unlock : 1e0cd68 >			  ## puthex.c:153:9


printf_buf:
 1e0d0a0:    af 1f             	goto -162 <put_buf : 1e0d000 >			  ## puthex.c:168:0


putchar:
 1e0d0a2:    75 01             	[--sp] = {rets, r5, r4}			  ## puthex.c:10:0
 1e0d0a4:    04 08             	r4 = r0			  ## puthex.c:10:0
 1e0d0a6:    bf f3 60 fb       	call -2368 <log_output_lock : 1e0c76a >			  ## puthex.c:12:9
 1e0d0aa:    09 20             	if (r0 == 0) goto 18 <putchar+0x1C : 1e0d0be >			  ## puthex.c:12:9
 1e0d0ac:    10 70             	r0 = 1			  ## puthex.c:13:29
 1e0d0ae:    6a 16             	call -812 <log_output_start : 1e0cd84 >			  ## puthex.c:13:29
 1e0d0b0:    05 08             	r5 = r0			  ## puthex.c:13:29
 1e0d0b2:    09 2a             	if (r5 == 0) goto 18 <putchar+0x24 : 1e0d0c6 >
 1e0d0b4:    11 05             	r1 = r4.b0 (s)			  ## puthex.c:15:13
 1e0d0b6:    4f 17             	call -354 <log_putchar : 1e0cf56 >			  ## puthex.c:15:13
 1e0d0b8:    50 08             	r0 = r5			  ## puthex.c:16:13
 1e0d0ba:    39 16             	call -910 <log_output_end : 1e0cd2e >			  ## puthex.c:16:13
 1e0d0bc:    04 18             	goto 8 <putchar+0x24 : 1e0d0c6 >			  ## puthex.c:16:13
 1e0d0be:    10 05             	r0 = r4.b0 (s)			  ## puthex.c:19:9
 1e0d0c0:    bf f3 91 fb       	call -2270 <log_putbyte : 1e0c7e6 >			  ## puthex.c:19:9
 1e0d0c4:    51 16             	call -862 <log_output_unlock : 1e0cd68 >			  ## puthex.c:20:9
 1e0d0c6:    40 08             	r0 = r4			  ## puthex.c:29:5
 1e0d0c8:    55 01             	{pc, r5, r4} = [sp++]			  ## puthex.c:29:5


log_early_init:
 1e0d0ca:    34 00             	[--sp] = rets			  ## log.c:412:0
 1e0d0cc:    c0 ff 78 26 00 00 	r0 = 9848 <log_mutex : 2678 >			  ## log.c:413:5
 1e0d0d2:    97 f3 a3 ce       	call 3120454 <os_mutex_create : 106e1c >			  ## log.c:413:5
 1e0d0d6:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >			  ## log.c:414:37
 1e0d0da:    80 f3 9a 03       	call 1844 <malloc : 1e0d812 >			  ## log.c:414:37
 1e0d0de:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## log.c:414:14
 1e0d0e4:    10 f6 00 11       	[r1 + 256] = r0			  ## log.c:414:14
 1e0d0e8:    01 fb 00 04       	r1 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >			  ## log.c:416:5
 1e0d0ec:    88 01             	{rets} = [sp++]			  ## log.c:416:5
 1e0d0ee:    c0 f3 40 02       	goto 1152 <lbuf_init : 1e0d572 >			  ## log.c:416:5


assert_printf:
 1e0d0f2:    04 08             	r4 = r0			  ## printf-stdarg.c:372:0
 1e0d0f4:    61 01             	[--sp] = {r3-r1}			  ## printf-stdarg.c:372:0
 1e0d0f6:    fe 0b             	sp += -4			  ## printf-stdarg.c:372:0
 1e0d0f8:    43 a0             	r3 = sp + 4			  ## printf-stdarg.c:372:0
 1e0d0fa:    0b 02             	[sp] = r3			  ## printf-stdarg.c:376:5
 1e0d0fc:    00 70             	r0 = 0			  ## printf-stdarg.c:378:11
 1e0d0fe:    01 70             	r1 = 0			  ## printf-stdarg.c:378:11
 1e0d100:    42 08             	r2 = r4			  ## printf-stdarg.c:378:11
 1e0d102:    49 14             	call -1902 <print : 1e0c996 >			  ## printf-stdarg.c:378:11
 1e0d104:    97 f3 4a ce       	call 3120276 <local_irq_disable : 106d9c >			  ## printf-stdarg.c:382:5
 1e0d108:    ff 1f             	goto -2 <assert_printf+0x16 : 1e0d108 >			  ## printf-stdarg.c:383:5


snprintf:
 1e0d10a:    63 01             	[--sp] = {r3}			  ## printf-stdarg.c:389:0
 1e0d10c:    34 00             	[--sp] = rets			  ## printf-stdarg.c:389:0
 1e0d10e:    fc 0b             	sp += -8			  ## printf-stdarg.c:389:0
 1e0d110:    c3 a0             	r3 = sp + 12			  ## printf-stdarg.c:389:0
 1e0d112:    0b 02             	[sp] = r3			  ## printf-stdarg.c:392:5
 1e0d114:    18 02             	[sp+4] = r0
 1e0d116:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0d118:    40 a0             	r0 = sp + 4
 1e0d11a:    3d 14             	call -1926 <print : 1e0c996 >			  ## printf-stdarg.c:399:12
 1e0d11c:    04 0a             	sp += 8
 1e0d11e:    88 01             	{rets} = [sp++]			  ## printf-stdarg.c:394:5
 1e0d120:    02 0a             	sp += 4			  ## printf-stdarg.c:394:5
 1e0d122:    20 00             	rts			  ## printf-stdarg.c:394:5


vsnprintf:
 1e0d124:    34 00             	[--sp] = rets			  ## printf-stdarg.c:398:0
 1e0d126:    fe 0b             	sp += -4			  ## printf-stdarg.c:398:0
 1e0d128:    08 02             	[sp] = r0			  ## printf-stdarg.c:398:0
 1e0d12a:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0d12c:    00 a0             	r0 = sp + 0
 1e0d12e:    33 14             	call -1946 <print : 1e0c996 >			  ## printf-stdarg.c:399:12
 1e0d130:    02 0a             	sp += 4
 1e0d132:    30 00             	pc = [sp++]			  ## printf-stdarg.c:399:5


vprintf:
 1e0d134:    34 00             	[--sp] = rets			  ## printf-stdarg.c:414:0
 1e0d136:    13 08             	r3 = r1			  ## printf-stdarg.c:414:0
 1e0d138:    02 08             	r2 = r0			  ## printf-stdarg.c:414:0
 1e0d13a:    00 70             	r0 = 0			  ## printf-stdarg.c:417:12
 1e0d13c:    01 70             	r1 = 0			  ## printf-stdarg.c:417:12
 1e0d13e:    2b 14             	call -1962 <print : 1e0c996 >			  ## printf-stdarg.c:417:12
 1e0d140:    30 00             	pc = [sp++]			  ## printf-stdarg.c:419:5


perror:
 1e0d142:    00 70             	r0 = 0			  ## printf-stdarg.c:423:0
 1e0d144:    20 00             	rts			  ## printf-stdarg.c:424:5


lbuf_free:
 1e0d146:    78 01             	[--sp] = {rets, r8-r4}			  ## lbuf.c:465:0
 1e0d148:    28 fb 00 13       	r1 = rets			  ## lbuf.c:475:5
 1e0d14c:    3a 20             	if (r0 == 0) goto 116 <lbuf_free+0x7C : 1e0d1c2 >
 1e0d14e:    07 fc e4 ff       	r7 = r0 + -28
 1e0d152:    70 5e             	r0 = h[r7 + 14] (u)			  ## lbuf.c:482:48
 1e0d154:    01 4e             	r1 = [r7 + 0]
 1e0d156:    c2 ff 78 56 34 12 	r2 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >
 1e0d15c:    26 be             	r6 = r7 - r0			  ## lbuf.c:482:46
 1e0d15e:    21 f2 05 10       	if (r1 != r2) goto 10 <lbuf_free+0x26 : 1e0d16c >			  ## lbuf.c:482:46
 1e0d162:    50 4e             	r0 = [r7 + 20]			  ## lbuf.c:484:5
 1e0d164:    41 fb 11 2f       	r1 = r2 + 286331153			  ## lbuf.c:484:5
 1e0d168:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free+0x2A : 1e0d170 >			  ## lbuf.c:484:5
 1e0d16c:    8f f3 93 b1       	call 2056998 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d170:    00 4c             	r0 = [r6 + 0]
 1e0d172:    c1 ff 21 43 65 87 	r1 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0d178:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_free+0x40 : 1e0d186 >
 1e0d17c:    a0 4c             	r0 = [r6 + 40]			  ## lbuf.c:484:5
 1e0d17e:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:484:5
 1e0d182:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free+0x44 : 1e0d18a >			  ## lbuf.c:484:5
 1e0d186:    8f f3 86 b1       	call 2056972 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d18a:    08 f7 0c 70       	r8 = h[r7 + 12] (u)			  ## lbuf.c:488:22
 1e0d18e:    d4 5c             	r4 = h[r6 + 26] (u)			  ## lbuf.c:486:14
 1e0d190:    85 6d             	r5 = b[r6 + 24] (u)			  ## lbuf.c:486:14
 1e0d192:    97 f3 03 ce       	call 3120134 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d196:    00 6f             	r0 = b[r7 + 16] (u)			  ## lbuf.c:492:9
 1e0d198:    f0 8f             	r0 += -1			  ## lbuf.c:492:9
 1e0d19a:    08 6f             	b[r7 + 16] = r0			  ## lbuf.c:492:9
 1e0d19c:    c1 ff ff ff 01 00 	r1 = 131071 <text_size+0x330B : 1ffff >			  ## lbuf.c:486:14
 1e0d1a2:    43 ba             	r3 = r5 + r1			  ## lbuf.c:486:14
 1e0d1a4:    c4 81             	r4 += 28			  ## lbuf.c:486:14
 1e0d1a6:    e2 fd 40 13       	r1 = r3 & r4			  ## lbuf.c:486:14
 1e0d1aa:    62 b3             	r2 = r1 - r5			  ## lbuf.c:487:40
 1e0d1ac:    05 70             	r5 = 0			  ## lbuf.c:487:40
 1e0d1ae:    01 70             	r1 = 0			  ## lbuf.c:487:40
 1e0d1b0:    43 f0 01 00       	if ((r3 & r4) == 0) goto 2 <lbuf_free+0x70 : 1e0d1b6 >
 1e0d1b4:    21 08             	r1 = r2			  ## lbuf.c:487:40
 1e0d1b6:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <lbuf_free+0x82 : 1e0d1c8 >
 1e0d1bc:    97 f3 ec cd       	call 3120088 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d1c0:    01 18             	goto 2 <lbuf_free+0x7E : 1e0d1c4 >			  ## spinlock.h:88:5
 1e0d1c2:    05 70             	r5 = 0
 1e0d1c4:    50 08             	r0 = r5			  ## lbuf.c:535:1
 1e0d1c6:    58 01             	{pc, r8-r4} = [sp++]			  ## lbuf.c:535:1
 1e0d1c8:    c0 ff 67 45 23 01 	r0 = 19088743 <uECC_vli_cmp_unsafe+0x112D56B : 1234567 >			  ## lbuf.c:495:20
 1e0d1ce:    08 4e             	[r7 + 0] = r0			  ## lbuf.c:495:20
 1e0d1d0:    12 4e             	r2 = [r7 + 4]			  ## list.h:165:36
 1e0d1d2:    23 4e             	r3 = [r7 + 8]			  ## list.h:165:23
 1e0d1d4:    40 be             	r0 = r7 + r1			  ## lbuf.c:487:40
 1e0d1d6:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e0d1d8:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e0d1da:    18 f6 08 00       	[r0 + 8] = r8			  ## lbuf.c:498:14
 1e0d1de:    31 4c             	r1 = [r6 + 12]			  ## lbuf.c:500:5
 1e0d1e0:    c2 9c             	r2 = r6 + 12			  ## lbuf.c:500:5
 1e0d1e2:    21 f2 0f 00       	if (r1 == r2) goto 30 <lbuf_free+0xBE : 1e0d204 >
 1e0d1e6:    61 f2 10 90       	if (r1 <= r6) goto 32 <lbuf_free+0xC4 : 1e0d20a >
 1e0d1ea:    73 4c             	r3 = [r6 + 28]			  ## lbuf.c:501:67
 1e0d1ec:    63 09             	r3 += r6			  ## lbuf.c:501:59
 1e0d1ee:    31 f2 0c 80       	if (r1 > r3) goto 24 <lbuf_free+0xC4 : 1e0d20a >			  ## lbuf.c:501:59
 1e0d1f2:    01 f2 0d 80       	if (r1 > r0) goto 26 <lbuf_free+0xCA : 1e0d210 >			  ## lbuf.c:506:24
 1e0d1f6:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:506:41
 1e0d1f8:    13 09             	r3 += r1			  ## lbuf.c:506:36
 1e0d1fa:    03 f2 27 80       	if (r3 > r0) goto 78 <lbuf_free+0x106 : 1e0d24c >			  ## lbuf.c:506:36
 1e0d1fe:    01 42             	r1 = [r1 + 0]			  ## lbuf.c:500:5
 1e0d200:    21 f2 f1 1f       	if (r1 != r2) goto -30 <lbuf_free+0xA0 : 1e0d1e6 >
 1e0d204:    43 94             	r3 = r2 + 4			  ## list.h:154:28
 1e0d206:    21 08             	r1 = r2			  ## list.h:154:28
 1e0d208:    04 18             	goto 8 <lbuf_free+0xCC : 1e0d212 >			  ## list.h:154:28
 1e0d20a:    60 f3 00 00       	trigger			  ## lbuf.c:502:13
 1e0d20e:    d6 1f             	goto -84 <lbuf_free+0x76 : 1e0d1bc >			  ## lbuf.c:502:13
 1e0d210:    43 92             	r3 = r1 + 4			  ## lbuf.c:512:46
 1e0d212:    02 46             	r2 = [r3 + 0]
 1e0d214:    08 46             	[r3 + 0] = r0			  ## list.h:137:16
 1e0d216:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0d218:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e0d21a:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e0d21c:    23 44             	r3 = [r2 + 8]			  ## lbuf.c:521:27
 1e0d21e:    01 40             	r1 = [r0 + 0]			  ## lbuf.c:520:12
 1e0d220:    84 b6             	r4 = r3 + r2			  ## lbuf.c:521:19
 1e0d222:    04 f2 06 10       	if (r4 != r0) goto 12 <lbuf_free+0xEC : 1e0d232 >			  ## lbuf.c:521:19
 1e0d226:    38 09             	r8 += r3			  ## lbuf.c:522:19
 1e0d228:    18 f6 08 20       	[r2 + 8] = r8			  ## lbuf.c:522:19
 1e0d22c:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0d22e:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0d230:    20 08             	r0 = r2			  ## list.h:160:16
 1e0d232:    80 fb 80 20       	r2 = r0 + r8			  ## lbuf.c:526:18
 1e0d236:    15 70             	r5 = 1
 1e0d238:    12 f2 c0 1f       	if (r2 != r1) goto -128 <lbuf_free+0x76 : 1e0d1bc >
 1e0d23c:    22 42             	r2 = [r1 + 8]			  ## lbuf.c:527:27
 1e0d23e:    82 09             	r2 += r8			  ## lbuf.c:527:18
 1e0d240:    2a 40             	[r0 + 8] = r2			  ## lbuf.c:527:18
 1e0d242:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e0d244:    11 42             	r1 = [r1 + 4]			  ## list.h:165:23
 1e0d246:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0d248:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0d24a:    b8 1f             	goto -144 <lbuf_free+0x76 : 1e0d1bc >			  ## list.h:160:16
 1e0d24c:    60 f3 00 00       	trigger			  ## lbuf.c:507:13
 1e0d250:    b5 1f             	goto -150 <lbuf_free+0x76 : 1e0d1bc >			  ## lbuf.c:507:13


lbuf_realloc:
 1e0d252:    79 01             	[--sp] = {rets, r9-r4}			  ## lbuf.c:297:0
 1e0d254:    09 08             	r9 = r0			  ## lbuf.c:297:0
 1e0d256:    05 fc e4 ff       	r5 = r0 + -28			  ## lbuf.c:297:0
 1e0d25a:    70 5a             	r0 = h[r5 + 14] (u)			  ## lbuf.c:303:67
 1e0d25c:    04 4a             	r4 = [r5 + 0]			  ## lbuf.c:303:67
 1e0d25e:    13 08             	r3 = r1			  ## lbuf.c:303:67
 1e0d260:    c8 ff 78 56 34 12 	r8 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## lbuf.c:303:67
 1e0d266:    26 ba             	r6 = r5 - r0			  ## lbuf.c:303:65
 1e0d268:    84 f2 05 10       	if (r4 != r8) goto 10 <lbuf_realloc+0x24 : 1e0d276 >			  ## lbuf.c:303:65
 1e0d26c:    50 4a             	r0 = [r5 + 20]			  ## lbuf.c:305:5
 1e0d26e:    41 fb 11 8f       	r1 = r8 + 286331153			  ## lbuf.c:305:5
 1e0d272:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_realloc+0x28 : 1e0d27a >			  ## lbuf.c:305:5
 1e0d276:    8f f3 0e b1       	call 2056732 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d27a:    00 4c             	r0 = [r6 + 0]
 1e0d27c:    c1 ff 21 43 65 87 	r1 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0d282:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_realloc+0x3E : 1e0d290 >
 1e0d286:    a0 4c             	r0 = [r6 + 40]			  ## lbuf.c:305:5
 1e0d288:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:305:5
 1e0d28c:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_realloc+0x42 : 1e0d294 >			  ## lbuf.c:305:5
 1e0d290:    8f f3 01 b1       	call 2056706 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d294:    80 6d             	r0 = b[r6 + 24] (u)			  ## lbuf.c:308:12
 1e0d296:    04 fc ff ff       	r4 = r0 + -1			  ## lbuf.c:308:12
 1e0d29a:    e2 fd 30 14       	r1 = r4 & r3			  ## lbuf.c:308:12
 1e0d29e:    60 b0             	r0 = r0 - r1			  ## lbuf.c:308:12
 1e0d2a0:    01 70             	r1 = 0			  ## lbuf.c:308:12
 1e0d2a2:    34 f0 01 00       	if ((r4 & r3) == 0) goto 2 <lbuf_realloc+0x56 : 1e0d2a8 >
 1e0d2a6:    01 08             	r1 = r0			  ## lbuf.c:308:12
 1e0d2a8:    60 5a             	r0 = h[r5 + 12] (u)
 1e0d2aa:    13 09             	r3 += r1			  ## lbuf.c:308:12
 1e0d2ac:    03 f2 03 d0       	ifs (r3 <= r0) goto 6 <lbuf_realloc+0x64 : 1e0d2b6 >
 1e0d2b0:    8f f3 f1 b0       	call 2056674 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d2b4:    60 5a             	r0 = h[r5 + 12] (u)			  ## cpu.h:148:5
 1e0d2b6:    30 f2 2e d0       	ifs (r0 <= r3) goto 92 <lbuf_realloc+0xC4 : 1e0d316 >
 1e0d2ba:    81 6d             	r1 = b[r6 + 24] (u)			  ## lbuf.c:315:14
 1e0d2bc:    d4 5c             	r4 = h[r6 + 26] (u)			  ## lbuf.c:315:14
 1e0d2be:    c7 ff ff ff 01 00 	r7 = 131071 <text_size+0x330B : 1ffff >			  ## lbuf.c:315:14
 1e0d2c4:    c2 b3             	r2 = r1 + r7			  ## lbuf.c:315:14
 1e0d2c6:    c7 99             	r7 = r4 + 28			  ## lbuf.c:315:14
 1e0d2c8:    e2 fd 70 42       	r4 = r2 & r7			  ## lbuf.c:315:14
 1e0d2cc:    24 b3             	r4 = r1 - r4			  ## lbuf.c:315:14
 1e0d2ce:    01 70             	r1 = 0			  ## lbuf.c:315:14
 1e0d2d0:    72 f0 01 00       	if ((r2 & r7) == 0) goto 2 <lbuf_realloc+0x84 : 1e0d2d6 >			  ## lbuf.c:315:14
 1e0d2d4:    41 08             	r1 = r4			  ## lbuf.c:315:14
 1e0d2d6:    e4 b0             	r4 = r0 - r3			  ## lbuf.c:320:20
 1e0d2d8:    c4 e0 1d 30       	if (r4 < 12) goto 58 <lbuf_realloc+0xC4 : 1e0d316 >			  ## lbuf.c:320:20
 1e0d2dc:    17 09             	r7 += r1			  ## lbuf.c:318:40
 1e0d2de:    7a c0             	r2 = r7 << 1			  ## lbuf.c:320:31
 1e0d2e0:    24 f2 19 b0       	ifs (r4 < r2) goto 50 <lbuf_realloc+0xC4 : 1e0d316 >			  ## lbuf.c:320:31
 1e0d2e4:    c2 be             	r2 = r7 + r3			  ## lbuf.c:328:27
 1e0d2e6:    6a 5a             	h[r5 + 12] = r2			  ## lbuf.c:328:16
 1e0d2e8:    d2 5c             	r2 = h[r6 + 26] (u)			  ## lbuf.c:330:42
 1e0d2ea:    92 09             	r2 += r9			  ## lbuf.c:330:40
 1e0d2ec:    32 09             	r2 += r3			  ## lbuf.c:330:57
 1e0d2ee:    21 09             	r1 += r2			  ## lbuf.c:330:64
 1e0d2f0:    02 70             	r2 = 0			  ## lbuf.c:331:23
 1e0d2f2:    1a 63             	b[r1 + 17] = r2			  ## lbuf.c:331:23
 1e0d2f4:    12 70             	r2 = 1			  ## lbuf.c:332:15
 1e0d2f6:    0a 63             	b[r1 + 16] = r2			  ## lbuf.c:332:15
 1e0d2f8:    62 5a             	r2 = h[r5 + 12] (u)			  ## lbuf.c:333:30
 1e0d2fa:    a0 b0             	r0 = r0 - r2			  ## lbuf.c:333:21
 1e0d2fc:    68 52             	h[r1 + 12] = r0			  ## lbuf.c:333:15
 1e0d2fe:    a0 b3             	r0 = r1 - r6			  ## lbuf.c:334:29
 1e0d300:    78 52             	h[r1 + 14] = r0			  ## lbuf.c:334:17
 1e0d302:    18 f6 00 10       	[r1 + 0] = r8			  ## lbuf.c:336:18
 1e0d306:    40 fb 11 8f       	r0 = r8 + 286331153			  ## lbuf.c:337:18
 1e0d30a:    58 42             	[r1 + 20] = r0			  ## lbuf.c:337:18
 1e0d30c:    40 92             	r0 = r1 + 4			  ## lbuf.c:339:26
 1e0d30e:    18 42             	[r1 + 4] = r0			  ## list.h:188:16
 1e0d310:    28 42             	[r1 + 8] = r0			  ## list.h:189:16
 1e0d312:    c0 93             	r0 = r1 + 28			  ## lbuf.c:341:19
 1e0d314:    18 17             	call -464 <lbuf_free : 1e0d146 >			  ## lbuf.c:341:5
 1e0d316:    59 01             	{pc, r9-r4} = [sp++]


lbuf_push:
 1e0d318:    77 01             	[--sp] = {rets, r7-r4}			  ## lbuf.c:384:0
 1e0d31a:    05 fc e4 ff       	r5 = r0 + -28			  ## lbuf.c:384:0
 1e0d31e:    70 5a             	r0 = h[r5 + 14] (u)			  ## lbuf.c:387:63
 1e0d320:    01 4a             	r1 = [r5 + 0]			  ## lbuf.c:387:63
 1e0d322:    c6 ff 78 56 34 12 	r6 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## lbuf.c:387:63
 1e0d328:    24 ba             	r4 = r5 - r0			  ## lbuf.c:387:61
 1e0d32a:    61 f2 05 10       	if (r1 != r6) goto 10 <lbuf_push+0x20 : 1e0d338 >			  ## lbuf.c:387:61
 1e0d32e:    50 4a             	r0 = [r5 + 20]			  ## lbuf.c:389:5
 1e0d330:    41 fb 11 6f       	r1 = r6 + 286331153			  ## lbuf.c:389:5
 1e0d334:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_push+0x24 : 1e0d33c >			  ## lbuf.c:389:5
 1e0d338:    8f f3 ad b0       	call 2056538 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d33c:    00 48             	r0 = [r4 + 0]
 1e0d33e:    c7 ff 21 43 65 87 	r7 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0d344:    70 f2 05 10       	if (r0 != r7) goto 10 <lbuf_push+0x3A : 1e0d352 >
 1e0d348:    a0 48             	r0 = [r4 + 40]			  ## lbuf.c:389:5
 1e0d34a:    41 fb 11 7f       	r1 = r7 + 286331153			  ## lbuf.c:389:5
 1e0d34e:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_push+0x3E : 1e0d356 >			  ## lbuf.c:389:5
 1e0d352:    8f f3 a0 b0       	call 2056512 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d356:    97 f3 21 cd       	call 3119682 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d35a:    00 70             	r0 = 0
 1e0d35c:    01 70             	r1 = 0
 1e0d35e:    08 6b             	b[r5 + 16] = r0
 1e0d360:    04 22             	if (r1 == 0) goto 8 <lbuf_push+0x52 : 1e0d36a >
 1e0d362:    11 80             	r1 += 1			  ## lbuf.c:395:25
 1e0d364:    81 e0 fc 1f       	if (r1 != 8) goto -8 <lbuf_push+0x48 : 1e0d360 >
 1e0d368:    03 18             	goto 6 <lbuf_push+0x58 : 1e0d370 >
 1e0d36a:    10 80             	r0 += 1			  ## lbuf.c:397:19
 1e0d36c:    11 70             	r1 = 1			  ## lbuf.c:397:19
 1e0d36e:    f7 1f             	goto -18 <lbuf_push+0x46 : 1e0d35e >			  ## lbuf.c:397:19
 1e0d370:    10 70             	r0 = 1			  ## lbuf.c:400:20
 1e0d372:    18 6b             	b[r5 + 17] = r0			  ## lbuf.c:400:20
 1e0d374:    10 4a             	r0 = [r5 + 4]			  ## list.h:124:18
 1e0d376:    42 9a             	r2 = r5 + 4			  ## lbuf.c:401:24
 1e0d378:    20 f2 32 10       	if (r0 != r2) goto 100 <lbuf_push+0xC8 : 1e0d3e0 >
 1e0d37c:    00 4a             	r0 = [r5 + 0]
 1e0d37e:    60 f2 05 10       	if (r0 != r6) goto 10 <lbuf_push+0x74 : 1e0d38c >
 1e0d382:    50 4a             	r0 = [r5 + 20]			  ## lbuf.c:402:9
 1e0d384:    41 fb 11 6f       	r1 = r6 + 286331153			  ## lbuf.c:402:9
 1e0d388:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_push+0x78 : 1e0d390 >
 1e0d38c:    8f f3 83 b0       	call 2056454 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d390:    00 48             	r0 = [r4 + 0]
 1e0d392:    70 f2 05 10       	if (r0 != r7) goto 10 <lbuf_push+0x88 : 1e0d3a0 >
 1e0d396:    a0 48             	r0 = [r4 + 40]			  ## lbuf.c:402:9
 1e0d398:    41 fb 11 7f       	r1 = r7 + 286331153			  ## lbuf.c:402:9
 1e0d39c:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_push+0x8C : 1e0d3a4 >			  ## lbuf.c:402:9
 1e0d3a0:    8f f3 79 b0       	call 2056434 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d3a4:    40 6a             	r0 = b[r5 + 4] (u)			  ## lbuf.c:404:9
 1e0d3a6:    60 ff 03 09 02 00 	if ((r0 & 3) == 0) goto 4 <lbuf_push+0x98 : 1e0d3b0 >			  ## lbuf.c:404:9
 1e0d3ac:    8f f3 73 b0       	call 2056422 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d3b0:    80 6a             	r0 = b[r5 + 8] (u)			  ## lbuf.c:405:9
 1e0d3b2:    60 ff 03 09 02 00 	if ((r0 & 3) == 0) goto 4 <lbuf_push+0xA4 : 1e0d3bc >			  ## lbuf.c:405:9
 1e0d3b8:    8f f3 6d b0       	call 2056410 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d3bc:    80 68             	r0 = b[r4 + 8] (u)			  ## lbuf.c:406:9
 1e0d3be:    43 98             	r3 = r4 + 4			  ## lbuf.c:406:9
 1e0d3c0:    60 ff 03 09 02 00 	if ((r0 & 3) == 0) goto 4 <lbuf_push+0xB2 : 1e0d3ca >			  ## lbuf.c:406:9
 1e0d3c6:    8f f3 66 b0       	call 2056396 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d3ca:    00 66             	r0 = b[r3 + 0] (u)			  ## lbuf.c:407:9
 1e0d3cc:    60 ff 03 09 02 00 	if ((r0 & 3) == 0) goto 4 <lbuf_push+0xBE : 1e0d3d6 >			  ## lbuf.c:407:9
 1e0d3d2:    8f f3 60 b0       	call 2056384 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d3d6:    10 46             	r0 = [r3 + 4]			  ## list.h:154:28
 1e0d3d8:    1a 46             	[r3 + 4] = r2			  ## list.h:137:16
 1e0d3da:    1b 4a             	[r5 + 4] = r3			  ## list.h:138:16
 1e0d3dc:    28 4a             	[r5 + 8] = r0			  ## list.h:139:16
 1e0d3de:    0a 40             	[r0 + 0] = r2			  ## list.h:140:16
 1e0d3e0:    00 4a             	r0 = [r5 + 0]
 1e0d3e2:    60 f2 05 10       	if (r0 != r6) goto 10 <lbuf_push+0xD8 : 1e0d3f0 >
 1e0d3e6:    50 4a             	r0 = [r5 + 20]			  ## lbuf.c:410:5
 1e0d3e8:    41 fb 11 6f       	r1 = r6 + 286331153			  ## lbuf.c:410:5
 1e0d3ec:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_push+0xDC : 1e0d3f4 >			  ## lbuf.c:410:5
 1e0d3f0:    8f f3 51 b0       	call 2056354 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d3f4:    00 48             	r0 = [r4 + 0]
 1e0d3f6:    70 f2 05 10       	if (r0 != r7) goto 10 <lbuf_push+0xEC : 1e0d404 >
 1e0d3fa:    a0 48             	r0 = [r4 + 40]			  ## lbuf.c:410:5
 1e0d3fc:    41 fb 11 7f       	r1 = r7 + 286331153			  ## lbuf.c:410:5
 1e0d400:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_push+0xF0 : 1e0d408 >			  ## lbuf.c:410:5
 1e0d404:    8f f3 47 b0       	call 2056334 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d408:    17 01             	{rets, r7-r4} = [sp++]			  ## spinlock.h:88:5
 1e0d40a:    d7 f3 c5 cc       	goto 3119498 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


lbuf_pop:
 1e0d40e:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:429:0
 1e0d410:    04 08             	r4 = r0			  ## lbuf.c:429:0
 1e0d412:    97 f3 c3 cc       	call 3119494 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d416:    15 48             	r5 = [r4 + 4]			  ## spinlock.h:77:5
 1e0d418:    40 98             	r0 = r4 + 4			  ## lbuf.c:434:5
 1e0d41a:    05 f2 06 00       	if (r5 == r0) goto 12 <lbuf_pop+0x1C : 1e0d42a >			  ## lbuf.c:434:5
 1e0d41e:    d1 6a             	r1 = b[r5 + 13] (u)			  ## lbuf.c:435:16
 1e0d420:    20 f3 07 10       	if ((r1 & 1) != 0) goto 14 <lbuf_pop+0x24 : 1e0d432 >			  ## lbuf.c:435:16
 1e0d424:    05 4a             	r5 = [r5 + 0]
 1e0d426:    05 f2 fa 1f       	if (r5 != r0) goto -12 <lbuf_pop+0x10 : 1e0d41e >
 1e0d42a:    97 f3 b5 cc       	call 3119466 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d42e:    00 70             	r0 = 0			  ## spinlock.h:88:5
 1e0d430:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:446:1
 1e0d432:    30 fd 01 19       	r0 = r1 & 4294967294			  ## lbuf.c:436:28
 1e0d436:    d8 6a             	b[r5 + 13] = r0			  ## lbuf.c:436:28
 1e0d438:    97 f3 ae cc       	call 3119452 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d43c:    00 f6 fc 5f       	r0 = [r5 + -4]			  ## spinlock.h:88:5
 1e0d440:    c1 ff 78 56 34 12 	r1 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## spinlock.h:88:5
 1e0d446:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_pop+0x46 : 1e0d454 >			  ## spinlock.h:88:5
 1e0d44a:    40 4a             	r0 = [r5 + 16]			  ## lbuf.c:438:13
 1e0d44c:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:438:13
 1e0d450:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_pop+0x4A : 1e0d458 >			  ## lbuf.c:438:13
 1e0d454:    8f f3 1f b0       	call 2056254 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d458:    00 48             	r0 = [r4 + 0]
 1e0d45a:    c1 ff 21 43 65 87 	r1 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0d460:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_pop+0x60 : 1e0d46e >
 1e0d464:    a0 48             	r0 = [r4 + 40]			  ## lbuf.c:438:13
 1e0d466:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:438:13
 1e0d46a:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_pop+0x64 : 1e0d472 >			  ## lbuf.c:438:13
 1e0d46e:    8f f3 12 b0       	call 2056228 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d472:    80 9b             	r0 = r5 + 24			  ## lbuf.c:439:22
 1e0d474:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:446:1


lbuf_alloc:
 1e0d476:    7a 01             	[--sp] = {rets, r10-r4}			  ## lbuf.c:209:0
 1e0d478:    04 08             	r4 = r0			  ## lbuf.c:209:0
 1e0d47a:    d0 58             	r0 = h[r4 + 26] (u)			  ## lbuf.c:219:14
 1e0d47c:    82 69             	r2 = b[r4 + 24] (u)			  ## lbuf.c:219:14
 1e0d47e:    c3 91             	r3 = r0 + 28			  ## lbuf.c:219:14
 1e0d480:    20 fc ff ff       	r0 = r2 + -1			  ## lbuf.c:219:14
 1e0d484:    e2 fd 30 50       	r5 = r0 & r3			  ## lbuf.c:219:14
 1e0d488:    65 b5             	r5 = r2 - r5			  ## lbuf.c:219:14
 1e0d48a:    09 70             	r9 = 0
 1e0d48c:    08 70             	r8 = 0			  ## lbuf.c:219:14
 1e0d48e:    30 f0 01 00       	if ((r0 & r3) == 0) goto 2 <lbuf_alloc+0x1E : 1e0d494 >			  ## lbuf.c:219:14
 1e0d492:    58 08             	r8 = r5			  ## lbuf.c:219:14
 1e0d494:    31 09             	r1 += r3			  ## lbuf.c:220:11
 1e0d496:    81 09             	r1 += r8			  ## lbuf.c:220:11
 1e0d498:    e2 fd 00 31       	r3 = r1 & r0			  ## lbuf.c:220:11
 1e0d49c:    e3 b4             	r3 = r2 - r3			  ## lbuf.c:220:11
 1e0d49e:    02 70             	r2 = 0			  ## lbuf.c:220:11
 1e0d4a0:    01 f0 01 00       	if ((r1 & r0) == 0) goto 2 <lbuf_alloc+0x30 : 1e0d4a6 >			  ## lbuf.c:220:11
 1e0d4a4:    32 08             	r2 = r3			  ## lbuf.c:220:11
 1e0d4a6:    4a b4             	r10 = r2 + r1			  ## lbuf.c:220:11
 1e0d4a8:    97 f3 78 cc       	call 3119344 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d4ac:    35 48             	r5 = [r4 + 12]			  ## lbuf.c:224:5
 1e0d4ae:    c7 98             	r7 = r4 + 12			  ## lbuf.c:224:5
 1e0d4b0:    06 70             	r6 = 0			  ## lbuf.c:224:5
 1e0d4b2:    75 f2 23 00       	if (r5 == r7) goto 70 <lbuf_alloc+0x86 : 1e0d4fc >			  ## lbuf.c:224:5
 1e0d4b6:    c9 ff da 25 e1 01 	r9 = 31532506 <update_target_end+0x23AA : 1e125da >
 1e0d4bc:    45 f2 04 90       	if (r5 <= r4) goto 8 <lbuf_alloc+0x52 : 1e0d4c8 >
 1e0d4c0:    70 48             	r0 = [r4 + 28]			  ## lbuf.c:225:67
 1e0d4c2:    40 09             	r0 += r4			  ## lbuf.c:225:59
 1e0d4c4:    05 f2 08 90       	if (r5 <= r0) goto 16 <lbuf_alloc+0x62 : 1e0d4d8 >			  ## lbuf.c:225:59
 1e0d4c8:    60 f3 00 00       	trigger			  ## lbuf.c:226:13
 1e0d4cc:    23 4a             	r3 = [r5 + 8]			  ## lbuf.c:227:80
 1e0d4ce:    01 4e             	r1 = [r7 + 0]			  ## lbuf.c:227:63
 1e0d4d0:    90 08             	r0 = r9			  ## lbuf.c:227:13
 1e0d4d2:    52 08             	r2 = r5			  ## lbuf.c:227:13
 1e0d4d4:    bf f3 67 fc       	call -1842 <printf : 1e0cda6 >			  ## lbuf.c:227:13
 1e0d4d8:    80 9a             	r0 = r5 + 8
 1e0d4da:    00 40             	r0 = [r0 + 0]			  ## lbuf.c:229:16
 1e0d4dc:    a0 f2 08 30       	if (r0 < r10) goto 16 <lbuf_alloc+0x7A : 1e0d4f0 >			  ## lbuf.c:229:16
 1e0d4e0:    03 2c             	if (r6 == 0) goto 6 <lbuf_alloc+0x72 : 1e0d4e8 >
 1e0d4e2:    21 4c             	r1 = [r6 + 8]			  ## lbuf.c:232:28
 1e0d4e4:    01 f2 01 90       	if (r1 <= r0) goto 2 <lbuf_alloc+0x74 : 1e0d4ea >			  ## lbuf.c:232:28
 1e0d4e8:    56 08             	r6 = r5
 1e0d4ea:    80 48             	r0 = [r4 + 32]			  ## lbuf.c:235:28
 1e0d4ec:    05 f2 05 80       	if (r5 > r0) goto 10 <lbuf_alloc+0x84 : 1e0d4fa >			  ## lbuf.c:235:28
 1e0d4f0:    05 4a             	r5 = [r5 + 0]			  ## lbuf.c:224:5
 1e0d4f2:    75 f2 e3 1f       	if (r5 != r7) goto -58 <lbuf_alloc+0x46 : 1e0d4bc >
 1e0d4f6:    09 70             	r9 = 0
 1e0d4f8:    01 18             	goto 2 <lbuf_alloc+0x86 : 1e0d4fc >
 1e0d4fa:    59 08             	r9 = r5
 1e0d4fc:    09 e0 01 10       	if (r9 != 0) goto 2 <lbuf_alloc+0x8C : 1e0d502 >
 1e0d500:    69 08             	r9 = r6			  ## lbuf.c:241:9
 1e0d502:    09 e0 14 00       	if (r9 == 0) goto 40 <lbuf_alloc+0xB8 : 1e0d52e >
 1e0d506:    19 f6 20 40       	[r4 + 32] = r9			  ## lbuf.c:244:25
 1e0d50a:    02 f6 08 90       	r2 = [r9 + 8]			  ## lbuf.c:246:16
 1e0d50e:    a0 fc 0c 00       	r0 = r10 + 12			  ## lbuf.c:246:26
 1e0d512:    02 f2 0e 90       	if (r2 <= r0) goto 28 <lbuf_alloc+0xBC : 1e0d532 >			  ## lbuf.c:246:13
 1e0d516:    80 fb a0 09       	r0 = r9 + r10			  ## lbuf.c:247:44
 1e0d51a:    90 fb a0 12       	r1 = r2 - r10			  ## lbuf.c:248:31
 1e0d51e:    29 40             	[r0 + 8] = r1			  ## lbuf.c:248:22
 1e0d520:    02 f6 00 90       	r2 = [r9 + 0]			  ## lbuf.c:249:61
 1e0d524:    01 f6 04 90       	r1 = [r9 + 4]			  ## lbuf.c:249:46
 1e0d528:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e0d52a:    0a 40             	[r0 + 0] = r2			  ## list.h:138:16
 1e0d52c:    07 18             	goto 14 <lbuf_alloc+0xC6 : 1e0d53c >			  ## list.h:138:16
 1e0d52e:    04 70             	r4 = 0
 1e0d530:    1c 18             	goto 56 <lbuf_alloc+0xF4 : 1e0d56a >
 1e0d532:    00 f6 00 90       	r0 = [r9 + 0]			  ## list.h:165:36
 1e0d536:    01 f6 04 90       	r1 = [r9 + 4]			  ## list.h:165:23
 1e0d53a:    2a 08             	r10 = r2			  ## list.h:165:23
 1e0d53c:    19 40             	[r0 + 4] = r1
 1e0d53e:    08 42             	[r1 + 0] = r0
 1e0d540:    80 fb 80 09       	r0 = r9 + r8			  ## lbuf.c:255:43
 1e0d544:    1a f7 0c 00       	h[r0 + 12] = r10			  ## lbuf.c:256:20
 1e0d548:    21 b1             	r1 = r0 - r4			  ## lbuf.c:257:37
 1e0d54a:    79 50             	h[r0 + 14] = r1			  ## lbuf.c:257:23
 1e0d54c:    01 70             	r1 = 0			  ## lbuf.c:258:28
 1e0d54e:    19 61             	b[r0 + 17] = r1			  ## lbuf.c:258:28
 1e0d550:    11 70             	r1 = 1			  ## lbuf.c:259:20
 1e0d552:    09 61             	b[r0 + 16] = r1			  ## lbuf.c:259:20
 1e0d554:    c1 ff 78 56 34 12 	r1 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## lbuf.c:261:24
 1e0d55a:    09 40             	[r0 + 0] = r1			  ## lbuf.c:261:24
 1e0d55c:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:262:24
 1e0d560:    59 40             	[r0 + 20] = r1			  ## lbuf.c:262:24
 1e0d562:    41 90             	r1 = r0 + 4			  ## lbuf.c:264:32
 1e0d564:    19 40             	[r0 + 4] = r1			  ## list.h:188:16
 1e0d566:    29 40             	[r0 + 8] = r1			  ## list.h:189:16
 1e0d568:    c4 91             	r4 = r0 + 28			  ## lbuf.c:266:21
 1e0d56a:    97 f3 15 cc       	call 3119146 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d56e:    40 08             	r0 = r4			  ## lbuf.c:276:5
 1e0d570:    5a 01             	{pc, r10-r4} = [sp++]			  ## lbuf.c:276:5


lbuf_init:
 1e0d572:    76 01             	[--sp] = {rets, r6-r4}			  ## lbuf.c:84:0
 1e0d574:    22 fd 03 09       	r2 = r0 & 3			  ## lbuf.c:86:52
 1e0d578:    62 fb 04 29       	r2 = 4 - r2			  ## lbuf.c:86:52
 1e0d57c:    03 70             	r3 = 0
 1e0d57e:    61 ff 03 09 01 00 	if ((r0 & 3) != 0) goto 2 <lbuf_init+0x14 : 1e0d586 >
 1e0d584:    02 70             	r2 = 0			  ## lbuf.c:86:52
 1e0d586:    02 09             	r2 += r0			  ## lbuf.c:86:52
 1e0d588:    24 fc 2c 00       	r4 = r2 + 44			  ## lbuf.c:88:28
 1e0d58c:    25 fd 03 49       	r5 = r4 & 3			  ## lbuf.c:88:28
 1e0d590:    66 fb 04 59       	r6 = 4 - r5			  ## lbuf.c:88:28
 1e0d594:    05 70             	r5 = 0			  ## lbuf.c:88:28
 1e0d596:    60 ff 03 49 01 00 	if ((r4 & 3) == 0) goto 2 <lbuf_init+0x2C : 1e0d59e >
 1e0d59c:    65 08             	r5 = r6			  ## lbuf.c:88:28
 1e0d59e:    54 09             	r4 += r5			  ## lbuf.c:88:28
 1e0d5a0:    10 09             	r0 += r1			  ## lbuf.c:89:21
 1e0d5a2:    20 b1             	r0 = r0 - r4			  ## lbuf.c:89:21
 1e0d5a4:    28 48             	[r4 + 8] = r0			  ## lbuf.c:89:15
 1e0d5a6:    40 70             	r0 = 4			  ## lbuf.c:89:15
 1e0d5a8:    88 65             	b[r2 + 24] = r0			  ## lbuf.c:91:17
 1e0d5aa:    db 54             	h[r2 + 26] = r3			  ## lbuf.c:92:20
 1e0d5ac:    8b 44             	[r2 + 32] = r3			  ## lbuf.c:93:21
 1e0d5ae:    c0 ff 21 43 65 87 	r0 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >			  ## lbuf.c:95:19
 1e0d5b4:    08 44             	[r2 + 0] = r0			  ## lbuf.c:95:19
 1e0d5b6:    40 fb 11 0f       	r0 = r0 + 286331153			  ## lbuf.c:96:19
 1e0d5ba:    a8 44             	[r2 + 40] = r0			  ## lbuf.c:96:19
 1e0d5bc:    79 44             	[r2 + 28] = r1			  ## lbuf.c:98:22
 1e0d5be:    5b 44             	[r2 + 20] = r3			  ## spinlock.h:70:18
 1e0d5c0:    40 94             	r0 = r2 + 4			  ## lbuf.c:101:27
 1e0d5c2:    18 44             	[r2 + 4] = r0			  ## list.h:188:16
 1e0d5c4:    28 44             	[r2 + 8] = r0			  ## list.h:189:16
 1e0d5c6:    4c 44             	[r2 + 16] = r4			  ## list.h:137:16
 1e0d5c8:    c0 94             	r0 = r2 + 12			  ## lbuf.c:102:27
 1e0d5ca:    08 48             	[r4 + 0] = r0			  ## list.h:138:16
 1e0d5cc:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e0d5ce:    3c 44             	[r2 + 12] = r4			  ## list.h:140:16
 1e0d5d0:    56 01             	{pc, r6-r4} = [sp++]			  ## list.h:140:16


lbuf_free_check:
 1e0d5d2:    74 01             	[--sp] = {rets, r4}			  ## lbuf.c:449:0
 1e0d5d4:    1d 20             	if (r0 == 0) goto 58 <lbuf_free_check+0x3E : 1e0d610 >			  ## lbuf.c:449:0
 1e0d5d6:    40 8e             	r0 += -28			  ## lbuf.c:449:0
 1e0d5d8:    71 50             	r1 = h[r0 + 14] (u)			  ## lbuf.c:458:48
 1e0d5da:    03 40             	r3 = [r0 + 0]			  ## lbuf.c:458:48
 1e0d5dc:    c4 ff 78 56 34 12 	r4 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## lbuf.c:458:48
 1e0d5e2:    62 b0             	r2 = r0 - r1			  ## lbuf.c:458:46
 1e0d5e4:    43 f2 05 10       	if (r3 != r4) goto 10 <lbuf_free_check+0x20 : 1e0d5f2 >			  ## lbuf.c:458:46
 1e0d5e8:    50 40             	r0 = [r0 + 20]			  ## lbuf.c:460:5
 1e0d5ea:    41 fb 11 4f       	r1 = r4 + 286331153			  ## lbuf.c:460:5
 1e0d5ee:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free_check+0x24 : 1e0d5f6 >			  ## lbuf.c:460:5
 1e0d5f2:    8f f3 50 af       	call 2055840 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d5f6:    00 44             	r0 = [r2 + 0]
 1e0d5f8:    c1 ff 21 43 65 87 	r1 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0d5fe:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_free_check+0x3A : 1e0d60c >
 1e0d602:    a0 44             	r0 = [r2 + 40]			  ## lbuf.c:460:5
 1e0d604:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:460:5
 1e0d608:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free_check+0x3E : 1e0d610 >			  ## lbuf.c:460:5
 1e0d60c:    8f f3 43 af       	call 2055814 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d610:    54 01             	{pc, r4} = [sp++]			  ## lbuf.c:461:1


lbuf_real_size:
 1e0d612:    00 f7 f0 0f       	r0 = h[r0 + -16] (u)			  ## lbuf.c:370:0
 1e0d616:    20 00             	rts			  ## lbuf.c:373:5


vAssertCalled:
 1e0d618:    14 08             	r4 = r1			  ## FreeRTOSConfig.h:174:0
 1e0d61a:    05 08             	r5 = r0			  ## FreeRTOSConfig.h:174:0
 1e0d61c:    97 f3 be cb       	call 3118972 <local_irq_disable : 106d9c >			  ## FreeRTOSConfig.h:183:5
 1e0d620:    c0 ff 48 23 e1 01 	r0 = 31531848 <update_target_end+0x2118 : 1e12348 >			  ## FreeRTOSConfig.h:184:5
 1e0d626:    51 08             	r1 = r5			  ## FreeRTOSConfig.h:184:5
 1e0d628:    42 08             	r2 = r4			  ## FreeRTOSConfig.h:184:5
 1e0d62a:    bf f3 bc fb       	call -2184 <printf : 1e0cda6 >			  ## FreeRTOSConfig.h:184:5
 1e0d62e:    ff 1f             	goto -2 <vAssertCalled+0x16 : 1e0d62e >			  ## FreeRTOSConfig.h:185:5


pvPortMalloc:
 1e0d630:    7b 01             	[--sp] = {rets, r11-r4}			  ## heap_mmu.c:174:0
 1e0d632:    05 08             	r5 = r0			  ## heap_mmu.c:174:0
 1e0d634:    c8 ff 3b 23 e1 01 	r8 = 31531835 <update_target_end+0x210B : 1e1233b >			  ## heap_mmu.c:174:0
 1e0d63a:    da 2a             	if (r5 == 0) goto 436 <pvPortMalloc+0x1C0 : 1e0d7f0 >			  ## heap_mmu.c:181:5
 1e0d63c:    97 f3 ae cb       	call 3118940 <local_irq_disable : 106d9c >			  ## heap_mmu.c:184:5
 1e0d640:    08 00             	csync			  ## heap_mmu.c:184:5
 1e0d642:    cb ff c0 23 00 00 	r11 = 9152 <cur_ch : 23c0 >			  ## heap_mmu.c:184:5
 1e0d648:    00 f6 f0 b0       	r0 = [r11 + 240]			  ## heap_mmu.c:188:13
 1e0d64c:    24 30             	if (r0 != 0) goto 72 <pvPortMalloc+0x66 : 1e0d696 >			  ## heap_mmu.c:188:13
 1e0d64e:    97 f3 3b cc       	call 3119222 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0d652:    01 78             	r1 = 128			  ## sbrk.c:78:20
 1e0d654:    97 f3 32 cc       	call 3119204 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0d658:    06 08             	r6 = r0			  ## sbrk.c:78:20
 1e0d65a:    97 f3 37 cc       	call 3119214 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0d65e:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0d660:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0d662:    97 f3 2b cc       	call 3119190 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0d666:    b1 fc f0 00       	r1 = r11 + 240
 1e0d66a:    ee 43             	[r1 + 120] = r6			  ## heap_mmu.c:462:28
 1e0d66c:    02 70             	r2 = 0			  ## heap_mmu.c:462:28
 1e0d66e:    da 43             	[r1 + 116] = r2			  ## heap_mmu.c:463:23
 1e0d670:    63 fb 7f 69       	r3 = 127 - r6			  ## heap_mmu.c:443:22
 1e0d674:    30 09             	r0 += r3			  ## heap_mmu.c:443:22
 1e0d676:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:443:22
 1e0d67a:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:443:22
 1e0d67e:    60 09             	r0 += r6			  ## heap_mmu.c:469:43
 1e0d680:    80 8f             	r0 += -8			  ## heap_mmu.c:470:15
 1e0d682:    30 fd 03 09       	r0 = r0 & 4294967292			  ## heap_mmu.c:471:15
 1e0d686:    08 42             	[r1 + 0] = r0			  ## heap_mmu.c:473:11
 1e0d688:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:474:23
 1e0d68a:    1a 40             	[r0 + 4] = r2			  ## heap_mmu.c:475:28
 1e0d68c:    a2 b1             	r2 = r0 - r6			  ## heap_mmu.c:481:46
 1e0d68e:    0a 4c             	[r6 + 0] = r2			  ## heap_mmu.c:481:34
 1e0d690:    18 4c             	[r6 + 4] = r0			  ## heap_mmu.c:482:39
 1e0d692:    1a 42             	[r1 + 4] = r2			  ## heap_mmu.c:489:36
 1e0d694:    2a 42             	[r1 + 8] = r2			  ## heap_mmu.c:490:25
 1e0d696:    c9 ff 00 00 68 69 	r9 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:198:26
 1e0d69c:    95 f1 51 00       	if ((r5 & r9) != 0) goto 162 <pvPortMalloc+0x112 : 1e0d742 >			  ## heap_mmu.c:198:26
 1e0d6a0:    41 9a             	r1 = r5 + 4			  ## heap_mmu.c:202:29
 1e0d6a2:    22 fd 03 19       	r2 = r1 & 3			  ## heap_mmu.c:208:67
 1e0d6a6:    62 fb 04 29       	r2 = 4 - r2			  ## heap_mmu.c:208:52
 1e0d6aa:    46 b4             	r6 = r2 + r1			  ## heap_mmu.c:208:29
 1e0d6ac:    61 ff 03 69 a2 00 	if ((r6 & 3) != 0) goto 324 <pvPortMalloc+0x1C6 : 1e0d7f6 >			  ## heap_mmu.c:209:17
 1e0d6b2:    22 ff 01 6b a2 00 	if (r6 >= 65536) goto 324 <pvPortMalloc+0x1CC : 1e0d7fc >			  ## heap_mmu.c:218:13
 1e0d6b8:    01 f6 f8 b0       	r1 = [r11 + 248]			  ## heap_mmu.c:219:54
 1e0d6bc:    62 fc ff ff       	r2 = r6 + -1			  ## heap_mmu.c:219:35
 1e0d6c0:    12 f2 3f 20       	if (r2 >= r1) goto 126 <pvPortMalloc+0x112 : 1e0d742 >			  ## heap_mmu.c:219:35
 1e0d6c4:    03 f6 68 b1       	r3 = [r11 + 360]			  ## heap_mmu.c:223:34
 1e0d6c8:    b2 fc 64 01       	r2 = r11 + 356			  ## heap_mmu.c:223:34
 1e0d6cc:    34 08             	r4 = r3
 1e0d6ce:    01 48             	r1 = [r4 + 0]			  ## heap_mmu.c:226:34
 1e0d6d0:    27 08             	r7 = r2			  ## heap_mmu.c:226:34
 1e0d6d2:    61 f2 03 20       	if (r1 >= r6) goto 6 <pvPortMalloc+0xAC : 1e0d6dc >
 1e0d6d6:    13 48             	r3 = [r4 + 4]			  ## heap_mmu.c:226:73
 1e0d6d8:    42 08             	r2 = r4			  ## heap_mmu.c:226:73
 1e0d6da:    f8 37             	if (r3 != 0) goto -16 <pvPortMalloc+0x9C : 1e0d6cc >
 1e0d6dc:    04 f2 31 00       	if (r4 == r0) goto 98 <pvPortMalloc+0x112 : 1e0d742 >
 1e0d6e0:    0a f6 04 70       	r10 = [r7 + 4]			  ## heap_mmu.c:238:71
 1e0d6e4:    80 fb 60 0a       	r0 = r10 + r6			  ## heap_mmu.c:242:82
 1e0d6e8:    22 fd 7f 09       	r2 = r0 & 127			  ## heap_mmu.c:243:48
 1e0d6ec:    63 fb 80 29       	r3 = 128 - r2			  ## heap_mmu.c:243:36
 1e0d6f0:    a2 fc 80 00       	r2 = r10 + 128			  ## heap_mmu.c:241:46
 1e0d6f4:    73 e0 03 80       	if (r3 > 7) goto 6 <pvPortMalloc+0xCE : 1e0d6fe >			  ## heap_mmu.c:241:46
 1e0d6f8:    36 09             	r6 += r3			  ## heap_mmu.c:244:37
 1e0d6fa:    80 fb a0 06       	r0 = r6 + r10			  ## heap_mmu.c:245:78
 1e0d6fe:    32 fd 7f 29       	r2 = r2 & 4294967168			  ## heap_mmu.c:241:59
 1e0d702:    60 ff 7f 09 0c 00 	if ((r0 & 127) == 0) goto 24 <pvPortMalloc+0xF0 : 1e0d720 >
 1e0d708:    41 09             	r1 += r4			  ## heap_mmu.c:248:63
 1e0d70a:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## heap_mmu.c:249:66
 1e0d70e:    31 fd 7f 09       	r1 = r0 & 4294967168			  ## heap_mmu.c:249:39
 1e0d712:    f0 87             	r0 += 127			  ## heap_mmu.c:250:40
 1e0d714:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:250:40
 1e0d718:    31 f2 01 00       	if (r1 == r3) goto 2 <pvPortMalloc+0xEE : 1e0d71e >
 1e0d71c:    01 08             	r1 = r0			  ## heap_mmu.c:249:29
 1e0d71e:    10 08             	r0 = r1
 1e0d720:    a5 b0             	r5 = r0 - r2			  ## heap_mmu.c:256:46
 1e0d722:    15 e0 1a b0       	ifs (r5 < 1) goto 52 <pvPortMalloc+0x12A : 1e0d75a >
 1e0d726:    60 ff 7f 59 02 00 	if ((r5 & 127) == 0) goto 4 <pvPortMalloc+0x100 : 1e0d730 >
 1e0d72c:    8f f3 b3 ae       	call 2055526 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d730:    02 e0 10 d0       	ifs (r2 <= 0) goto 32 <pvPortMalloc+0x124 : 1e0d754 >
 1e0d734:    20 08             	r0 = r2			  ## sbrk.c:78:20
 1e0d736:    51 08             	r1 = r5			  ## sbrk.c:78:20
 1e0d738:    97 f3 c0 cb       	call 3118976 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0d73c:    f0 ef 0d 10       	if (r0 != -1) goto 26 <pvPortMalloc+0x12A : 1e0d75a >
 1e0d740:    0a 18             	goto 20 <pvPortMalloc+0x126 : 1e0d756 >
 1e0d742:    97 f3 29 cb       	call 3118674 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0d746:    c2 ff 0d 23 e1 01 	r2 = 31531789 <update_target_end+0x20DD : 1e1230d >			  ## port_overwrite.c:69:5
 1e0d74c:    40 70             	r0 = 4			  ## port_overwrite.c:69:5
 1e0d74e:    bf f3 57 fb       	call -2386 <log_print : 1e0ce00 >			  ## port_overwrite.c:69:5
 1e0d752:    ff 1f             	goto -2 <pvPortMalloc+0x122 : 1e0d752 >			  ## port_overwrite.c:70:5
 1e0d754:    1b 24             	if (r2 == 0) goto 54 <pvPortMalloc+0x15C : 1e0d78c >
 1e0d756:    8f f3 9e ae       	call 2055484 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d75a:    10 48             	r0 = [r4 + 4]			  ## heap_mmu.c:264:65
 1e0d75c:    18 4e             	[r7 + 4] = r0			  ## heap_mmu.c:264:54
 1e0d75e:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:270:44
 1e0d760:    a1 b1             	r1 = r0 - r6			  ## heap_mmu.c:270:55
 1e0d762:    81 e0 2e 30       	if (r1 < 8) goto 92 <pvPortMalloc+0x192 : 1e0d7c2 >			  ## heap_mmu.c:270:55
 1e0d766:    85 b9             	r5 = r4 + r6			  ## heap_mmu.c:275:73
 1e0d768:    61 ff 03 59 4e 00 	if ((r5 & 3) != 0) goto 156 <pvPortMalloc+0x1DA : 1e0d80a >			  ## heap_mmu.c:276:25
 1e0d76e:    61 ff 7f 59 1e 00 	if ((r5 & 127) != 0) goto 60 <pvPortMalloc+0x180 : 1e0d7b0 >
 1e0d774:    40 09             	r0 += r4			  ## heap_mmu.c:282:65
 1e0d776:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:283:52
 1e0d77a:    05 f2 19 00       	if (r5 == r0) goto 50 <pvPortMalloc+0x180 : 1e0d7b0 >
 1e0d77e:    15 e0 09 b0       	ifs (r5 < 1) goto 18 <pvPortMalloc+0x164 : 1e0d794 >			  ## sbrk.c:74:13
 1e0d782:    01 78             	r1 = 128			  ## sbrk.c:75:20
 1e0d784:    50 08             	r0 = r5			  ## sbrk.c:75:20
 1e0d786:    97 f3 99 cb       	call 3118898 <vmalloc_ : 106ebc >			  ## sbrk.c:75:20
 1e0d78a:    0e 18             	goto 28 <pvPortMalloc+0x178 : 1e0d7a8 >
 1e0d78c:    97 f3 9c cb       	call 3118904 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0d790:    02 08             	r2 = r0			  ## sbrk.c:77:20
 1e0d792:    d0 1f             	goto -96 <pvPortMalloc+0x104 : 1e0d734 >
 1e0d794:    f5 ef 0a 10       	if (r5 != -1) goto 20 <pvPortMalloc+0x17C : 1e0d7ac >
 1e0d798:    97 f3 98 cb       	call 3118896 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0d79c:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0d79e:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0d7a0:    97 f3 8c cb       	call 3118872 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0d7a4:    00 fc 80 00       	r0 = r0 + 128			  ## sbrk.c:81:41
 1e0d7a8:    f0 ef 02 10       	if (r0 != -1) goto 4 <pvPortMalloc+0x180 : 1e0d7b0 >
 1e0d7ac:    8f f3 73 ae       	call 2055398 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d7b0:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:292:63
 1e0d7b2:    a0 b1             	r0 = r0 - r6			  ## heap_mmu.c:292:74
 1e0d7b4:    90 f6 00 46       	[r4+r6] = r0			  ## heap_mmu.c:292:52
 1e0d7b8:    0e 48             	[r4 + 0] = r6			  ## heap_mmu.c:293:45
 1e0d7ba:    10 4e             	r0 = [r7 + 4]			  ## heap_mmu.c:295:76
 1e0d7bc:    18 4a             	[r5 + 4] = r0			  ## heap_mmu.c:295:57
 1e0d7be:    1d 4e             	[r7 + 4] = r5			  ## heap_mmu.c:296:58
 1e0d7c0:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:296:58
 1e0d7c2:    b1 fc f4 00       	r1 = r11 + 244
 1e0d7c6:    12 42             	r2 = [r1 + 4]			  ## heap_mmu.c:301:41
 1e0d7c8:    20 b4             	r0 = r2 - r0			  ## heap_mmu.c:301:41
 1e0d7ca:    18 42             	[r1 + 4] = r0			  ## heap_mmu.c:301:41
 1e0d7cc:    01 42             	r1 = [r1 + 0]			  ## heap_mmu.c:303:47
 1e0d7ce:    a5 fc 04 00       	r5 = r10 + 4			  ## heap_mmu.c:238:88
 1e0d7d2:    10 f2 02 20       	if (r0 >= r1) goto 4 <pvPortMalloc+0x1AA : 1e0d7da >			  ## heap_mmu.c:238:88
 1e0d7d6:    10 f6 f4 b0       	[r11 + 244] = r0			  ## heap_mmu.c:304:56
 1e0d7da:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:311:41
 1e0d7dc:    e0 fd 90 00       	r0 = r0 | r9			  ## heap_mmu.c:311:41
 1e0d7e0:    08 48             	[r4 + 0] = r0			  ## heap_mmu.c:311:41
 1e0d7e2:    97 f3 d9 ca       	call 3118514 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0d7e6:    61 ff 03 59 0b 00 	if ((r5 & 3) != 0) goto 22 <pvPortMalloc+0x1D2 : 1e0d802 >			  ## heap_mmu.c:326:5
 1e0d7ec:    50 08             	r0 = r5			  ## heap_mmu.c:341:5
 1e0d7ee:    5b 01             	{pc, r11-r4} = [sp++]			  ## heap_mmu.c:341:5
 1e0d7f0:    51 7b             	r1 = 181			  ## heap_mmu.c:181:5
 1e0d7f2:    80 08             	r0 = r8			  ## heap_mmu.c:181:5
 1e0d7f4:    11 17             	call -478 <vAssertCalled : 1e0d618 >			  ## heap_mmu.c:181:5
 1e0d7f6:    11 7d             	r1 = 209			  ## heap_mmu.c:209:17
 1e0d7f8:    80 08             	r0 = r8			  ## heap_mmu.c:209:17
 1e0d7fa:    0e 17             	call -484 <vAssertCalled : 1e0d618 >			  ## heap_mmu.c:209:17
 1e0d7fc:    a1 7d             	r1 = 218			  ## heap_mmu.c:218:13
 1e0d7fe:    80 08             	r0 = r8			  ## heap_mmu.c:218:13
 1e0d800:    0b 17             	call -490 <vAssertCalled : 1e0d618 >			  ## heap_mmu.c:218:13
 1e0d802:    01 fb 53 01       	r1 = 339 <DRIVER_RAM_TOTAL+0x61 : 153 >			  ## heap_mmu.c:339:5
 1e0d806:    80 08             	r0 = r8			  ## heap_mmu.c:339:5
 1e0d808:    07 17             	call -498 <vAssertCalled : 1e0d618 >			  ## heap_mmu.c:339:5
 1e0d80a:    01 fb 14 01       	r1 = 276 <DRIVER_RAM_TOTAL+0x22 : 114 >			  ## heap_mmu.c:276:25
 1e0d80e:    80 08             	r0 = r8			  ## heap_mmu.c:276:25
 1e0d810:    03 17             	call -506 <vAssertCalled : 1e0d618 >			  ## heap_mmu.c:276:25


malloc:
 1e0d812:    34 00             	[--sp] = rets			  ## memory.c:20:0
 1e0d814:    28 fb 00 13       	r1 = rets			  ## memory.c:22:5
 1e0d818:    0b 17             	call -490 <pvPortMalloc : 1e0d630 >			  ## memory.c:26:11
 1e0d81a:    30 00             	pc = [sp++]			  ## memory.c:30:5


free:
 1e0d81c:    78 01             	[--sp] = {rets, r8-r4}			  ## memory.c:34:0
 1e0d81e:    7b 20             	if (r0 == 0) goto 246 <free+0xFA : 1e0d916 >			  ## memory.c:34:0
 1e0d820:    05 fc fc ff       	r5 = r0 + -4			  ## memory.c:34:0
 1e0d824:    00 4a             	r0 = [r5 + 0]			  ## heap_mmu.c:366:22
 1e0d826:    c1 ff 00 00 68 69 	r1 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:366:33
 1e0d82c:    e2 fd 10 20       	r2 = r0 & r1			  ## heap_mmu.c:366:33
 1e0d830:    12 f2 7c 10       	if (r2 != r1) goto 248 <free+0x110 : 1e0d92c >			  ## heap_mmu.c:366:13
 1e0d834:    54 08             	r4 = r5			  ## heap_mmu.c:358:13
 1e0d836:    c1 ff ff ff 97 96 	r1 = 2526543871 <uECC_vli_cmp_unsafe+0x879003 : 97ffff >			  ## heap_mmu.c:370:32
 1e0d83c:    50 b3             	r0 &= r1			  ## heap_mmu.c:370:32
 1e0d83e:    08 4a             	[r5 + 0] = r0			  ## heap_mmu.c:370:32
 1e0d840:    97 f3 ac ca       	call 3118424 <local_irq_disable : 106d9c >			  ## heap_mmu.c:373:13
 1e0d844:    08 00             	csync			  ## heap_mmu.c:373:13
 1e0d846:    02 4a             	r2 = [r5 + 0]			  ## heap_mmu.c:376:48
 1e0d848:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## heap_mmu.c:376:48
 1e0d84e:    80 fc f8 00       	r0 = r8 + 248			  ## heap_mmu.c:376:48
 1e0d852:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:376:37
 1e0d854:    21 09             	r1 += r2			  ## heap_mmu.c:376:37
 1e0d856:    51 f6 6c 00       	[r0 ++= 108] = r1			  ## heap_mmu.c:376:37
 1e0d85a:    06 08             	r6 = r0
 1e0d85c:    10 4c             	r0 = [r6 + 4]			  ## heap_mmu.c:512:44
 1e0d85e:    40 f2 fc 3f       	if (r0 < r4) goto -8 <free+0x3E : 1e0d85a >			  ## heap_mmu.c:512:5
 1e0d862:    03 4c             	r3 = [r6 + 0]			  ## heap_mmu.c:519:28
 1e0d864:    c1 bc             	r1 = r6 + r3			  ## heap_mmu.c:519:14
 1e0d866:    41 f2 08 00       	if (r1 == r4) goto 16 <free+0x5E : 1e0d87a >			  ## heap_mmu.c:519:14
 1e0d86a:    51 fc 80 00       	r1 = r5 + 128			  ## heap_mmu.c:526:34
 1e0d86e:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:526:47
 1e0d872:    47 08             	r7 = r4
 1e0d874:    23 08             	r3 = r2			  ## heap_mmu.c:537:33
 1e0d876:    14 08             	r4 = r1			  ## heap_mmu.c:537:33
 1e0d878:    0a 18             	goto 20 <free+0x72 : 1e0d88e >
 1e0d87a:    23 09             	r3 += r2			  ## heap_mmu.c:520:32
 1e0d87c:    31 fd 7f 69       	r1 = r6 & 4294967168			  ## heap_mmu.c:522:67
 1e0d880:    37 fd 7f 59       	r7 = r5 & 4294967168			  ## heap_mmu.c:522:25
 1e0d884:    0b 4c             	[r6 + 0] = r3			  ## heap_mmu.c:520:32
 1e0d886:    17 f2 01 00       	if (r7 == r1) goto 2 <free+0x70 : 1e0d88c >			  ## heap_mmu.c:520:32
 1e0d88a:    74 08             	r4 = r7			  ## heap_mmu.c:522:13
 1e0d88c:    67 08             	r7 = r6
 1e0d88e:    52 09             	r2 += r5			  ## heap_mmu.c:506:49
 1e0d890:    c5 be             	r5 = r7 + r3			  ## heap_mmu.c:537:14
 1e0d892:    41 fc 7f 00       	r1 = r4 + 127			  ## heap_mmu.c:531:22
 1e0d896:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:531:22
 1e0d89a:    60 ff 7f 49 01 00 	if ((r4 & 127) == 0) goto 2 <free+0x86 : 1e0d8a2 >
 1e0d8a0:    14 08             	r4 = r1			  ## heap_mmu.c:530:9
 1e0d8a2:    01 f6 f0 80       	r1 = [r8 + 240]			  ## heap_mmu.c:538:44
 1e0d8a6:    10 f2 10 00       	if (r0 == r1) goto 32 <free+0xAE : 1e0d8ca >
 1e0d8aa:    05 f2 0e 10       	if (r5 != r0) goto 28 <free+0xAE : 1e0d8ca >
 1e0d8ae:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:541:101
 1e0d8b0:    13 09             	r3 += r1			  ## heap_mmu.c:542:41
 1e0d8b2:    0b 4e             	[r7 + 0] = r3			  ## heap_mmu.c:542:41
 1e0d8b4:    13 40             	r3 = [r0 + 4]			  ## heap_mmu.c:543:77
 1e0d8b6:    01 09             	r1 += r0			  ## heap_mmu.c:541:70
 1e0d8b8:    d1 b0             	r1 ^= r0			  ## heap_mmu.c:546:42
 1e0d8ba:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:547:40
 1e0d8be:    1b 4e             	[r7 + 4] = r3			  ## heap_mmu.c:543:46
 1e0d8c0:    f1 e7 01 80       	if (r1 > 127) goto 2 <free+0xAA : 1e0d8c6 >			  ## heap_mmu.c:543:46
 1e0d8c4:    20 08             	r0 = r2			  ## heap_mmu.c:546:17
 1e0d8c6:    02 08             	r2 = r0
 1e0d8c8:    01 18             	goto 2 <free+0xB0 : 1e0d8cc >
 1e0d8ca:    18 4e             	[r7 + 4] = r0
 1e0d8cc:    30 fd 7f 29       	r0 = r2 & 4294967168			  ## heap_mmu.c:559:18
 1e0d8d0:    22 b1             	r2 = r0 - r4			  ## heap_mmu.c:562:30
 1e0d8d2:    12 e0 1b b0       	ifs (r2 < 1) goto 54 <free+0xF0 : 1e0d90c >			  ## heap_mmu.c:562:30
 1e0d8d6:    65 fb 00 29       	r5 = 0 - r2			  ## heap_mmu.c:565:46
 1e0d8da:    60 ff 7f 59 02 00 	if ((r5 & 127) == 0) goto 4 <free+0xC8 : 1e0d8e4 >
 1e0d8e0:    8f f3 d9 ad       	call 2055090 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d8e4:    f4 ef 05 00       	if (r4 == -1) goto 10 <free+0xD6 : 1e0d8f2 >
 1e0d8e8:    60 ff 7f 49 02 00 	if ((r4 & 127) == 0) goto 4 <free+0xD6 : 1e0d8f2 >
 1e0d8ee:    8f f3 d2 ad       	call 2055076 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0d8f2:    15 e0 07 b0       	ifs (r5 < 1) goto 14 <free+0xE8 : 1e0d904 >			  ## sbrk.c:72:9
 1e0d8f6:    14 e0 0f b0       	ifs (r4 < 1) goto 30 <free+0xFC : 1e0d918 >			  ## sbrk.c:74:13
 1e0d8fa:    40 08             	r0 = r4			  ## sbrk.c:75:20
 1e0d8fc:    51 08             	r1 = r5
 1e0d8fe:    97 f3 dd ca       	call 3118522 <vmalloc_ : 106ebc >
 1e0d902:    04 18             	goto 8 <free+0xF0 : 1e0d90c >
 1e0d904:    40 08             	r0 = r4			  ## sbrk.c:89:9
 1e0d906:    21 08             	r1 = r2			  ## sbrk.c:89:9
 1e0d908:    97 f3 da ca       	call 3118516 <vfree_ : 106ec0 >			  ## sbrk.c:89:9
 1e0d90c:    76 f2 01 00       	if (r6 == r7) goto 2 <free+0xF6 : 1e0d912 >
 1e0d910:    1f 4c             	[r6 + 4] = r7			  ## heap_mmu.c:572:37
 1e0d912:    97 f3 41 ca       	call 3118210 <local_irq_enable : 106d98 >			  ## heap_mmu.c:381:13
 1e0d916:    58 01             	{pc, r8-r4} = [sp++]			  ## memory.c:39:1
 1e0d918:    06 28             	if (r4 == 0) goto 12 <free+0x10A : 1e0d926 >
 1e0d91a:    f4 ef f7 1f       	if (r4 != -1) goto -18 <free+0xF0 : 1e0d90c >
 1e0d91e:    97 f3 d5 ca       	call 3118506 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0d922:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0d924:    eb 1f             	goto -42 <free+0xE0 : 1e0d8fc >			  ## sbrk.c:80:31
 1e0d926:    97 f3 cf ca       	call 3118494 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0d92a:    e8 1f             	goto -48 <free+0xE0 : 1e0d8fc >			  ## sbrk.c:77:20
 1e0d92c:    c0 ff 4f 23 e1 01 	r0 = 31531855 <update_target_end+0x211F : 1e1234f >			  ## heap_mmu.c:386:13
 1e0d932:    01 fb 82 01       	r1 = 386 <NVRAM_DATA_SIZE+0x1E : 182 >			  ## heap_mmu.c:386:13
 1e0d936:    70 16             	call -800 <vAssertCalled : 1e0d618 >			  ## heap_mmu.c:386:13


hwi_all_close:
 1e0d938:    79 01             	[--sp] = {rets, r9-r4}			  ## hwi.c:129:0
 1e0d93a:    04 70             	r4 = 0			  ## hwi.c:129:0
 1e0d93c:    18 70             	r8 = 1			  ## hwi.c:129:0
 1e0d93e:    c9 ff 00 e1 1b 00 	r9 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:129:0
 1e0d944:    07 70             	r7 = 0			  ## hwi.c:129:0
 1e0d946:    20 fd 1c 49       	r0 = r4 & 28			  ## hwi.c:120:28
 1e0d94a:    f8 fd 00 58       	r5 = r8 << r0			  ## hwi.c:124:28
 1e0d94e:    85 fd 18 07       	r0 = uextra(r7, p:3, l:5)			  ## hwi.c:119:23
 1e0d952:    96 08             	r6 = r9			  ## hwi.c:124:5
 1e0d954:    c5 fd 10 60       	r6 <= insert(r0, p:2, l:5)			  ## hwi.c:124:5
 1e0d958:    97 f3 20 ca       	call 3118144 <local_irq_disable : 106d9c >			  ## hwi.c:122:5
 1e0d95c:    00 4c             	r0 = [r6 + 0]			  ## hwi.c:124:24
 1e0d95e:    e3 fd 50 00       	r0 = r0 & ~r5			  ## hwi.c:124:24
 1e0d962:    08 4c             	[r6 + 0] = r0			  ## hwi.c:124:24
 1e0d964:    97 f3 18 ca       	call 3118128 <local_irq_enable : 106d98 >			  ## hwi.c:125:5
 1e0d968:    17 80             	r7 += 1			  ## hwi.c:132:26
 1e0d96a:    44 80             	r4 += 4			  ## hwi.c:132:19
 1e0d96c:    07 e4 eb 1f       	if (r7 != 64) goto -42 <hwi_all_close+0xE : 1e0d946 >			  ## hwi.c:132:5
 1e0d970:    59 01             	{pc, r9-r4} = [sp++]			  ## hwi.c:135:1


bit_clr_ie:
 1e0d972:    34 00             	[--sp] = rets			  ## hwi.c:116:0
 1e0d974:    97 f3 12 ca       	call 3118116 <local_irq_disable : 106d9c >			  ## hwi.c:122:5
 1e0d978:    c0 ff 00 e1 1b 00 	r0 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:122:5
 1e0d97e:    01 40             	r1 = [r0 + 0]			  ## hwi.c:124:24
 1e0d980:    71 be             	r1 &= 4026531839			  ## hwi.c:124:24
 1e0d982:    09 40             	[r0 + 0] = r1			  ## hwi.c:124:24
 1e0d984:    88 01             	{rets} = [sp++]			  ## hwi.c:125:5
 1e0d986:    d7 f3 07 ca       	goto 3118094 <local_irq_enable : 106d98 >			  ## hwi.c:125:5


request_irq:
 1e0d98a:    77 01             	[--sp] = {rets, r7-r4}			  ## hwi.c:38:0
 1e0d98c:    14 08             	r4 = r1			  ## hwi.c:38:0
 1e0d98e:    c1 ff 00 ff 00 00 	r1 = 65280 <_IRQ_MEM_ADDR : ff00 >			  ## hwi.c:43:5
 1e0d994:    b2 f6 00 10       	[r1+r0<<2] = r2			  ## hwi.c:43:20
 1e0d998:    81 c0             	r1 = r0 << 2			  ## hwi.c:43:5
 1e0d99a:    25 fd 1c 19       	r5 = r1 & 28			  ## hwi.c:46:28
 1e0d99e:    f1 70             	r1 = 15			  ## hwi.c:46:28
 1e0d9a0:    f8 fd 50 61       	r6 = r1 << r5			  ## hwi.c:48:35
 1e0d9a4:    c0 d0             	r0 = r0 >> 3			  ## hwi.c:45:23
 1e0d9a6:    c7 ff 00 e1 1b 00 	r7 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:54:27
 1e0d9ac:    c5 fd 10 70       	r7 <= insert(r0, p:2, l:5)			  ## hwi.c:54:27
 1e0d9b0:    97 f3 f4 c9       	call 3118056 <local_irq_disable : 106d9c >			  ## hwi.c:51:5
 1e0d9b4:    00 4e             	r0 = [r7 + 0]			  ## hwi.c:54:27
 1e0d9b6:    e3 fd 60 00       	r0 = r0 & ~r6			  ## hwi.c:54:46
 1e0d9ba:    61 c0             	r1 = r4 << 1			  ## hwi.c:47:35
 1e0d9bc:    21 fd 0e 19       	r1 = r1 & 14			  ## hwi.c:47:35
 1e0d9c0:    11 b0             	r1 |= 1			  ## hwi.c:47:41
 1e0d9c2:    41 0d             	r1 <<= r5			  ## hwi.c:49:39
 1e0d9c4:    50 b2             	r0 |= r1			  ## hwi.c:54:58
 1e0d9c6:    08 4e             	[r7 + 0] = r0			  ## hwi.c:54:24
 1e0d9c8:    97 f3 e6 c9       	call 3118028 <local_irq_enable : 106d98 >			  ## hwi.c:56:5
 1e0d9cc:    57 01             	{pc, r7-r4} = [sp++]			  ## hwi.c:57:1


cpu_reset.1067:
 1e0d9ce:    cf f3 62 ad       	goto 2054852 <p33_soft_reset : 3496 >			  ## cpu.h:146:0


os_enter_deepsleep:
 1e0d9d2:    20 00             	rts			  ## port_overwrite.c:546:0


os_exit_deepsleep:
 1e0d9d4:    34 00             	[--sp] = rets			  ## port_overwrite.c:550:0
 1e0d9d6:    c2 ff 5e 34 00 00 	r2 = 13406 <begin_of_data : 345e >			  ## port_overwrite.c:552:5
 1e0d9dc:    30 70             	r0 = 3			  ## port_overwrite.c:552:5
 1e0d9de:    11 70             	r1 = 1			  ## port_overwrite.c:552:5
 1e0d9e0:    d4 17             	call -88 <request_irq : 1e0d98a >			  ## port_overwrite.c:552:5
 1e0d9e2:    c2 ff cc 33 00 00 	r2 = 13260 <vAppSoftwareInterruptISR : 33cc >			  ## port_overwrite.c:554:5
 1e0d9e8:    f0 73             	r0 = 63			  ## port_overwrite.c:554:5
 1e0d9ea:    01 70             	r1 = 0			  ## port_overwrite.c:554:5
 1e0d9ec:    88 01             	{rets} = [sp++]			  ## port_overwrite.c:554:5
 1e0d9ee:    cd 1f             	goto -102 <request_irq : 1e0d98a >			  ## port_overwrite.c:554:5


clock_critical_enter.1071:
 1e0d9f0:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:308:0
 1e0d9f6:    c0 f4 00 09       	[r0 + 0] = 0			  ## port_overwrite.c:309:14
 1e0d9fa:    20 00             	rts			  ## port_overwrite.c:310:1


clock_critical_exit.1072:
 1e0d9fc:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:313:0
 1e0da02:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:314:14
 1e0da06:    c1 ff 50 32 00 00 	r1 = 12880 <hdl.15 : 3250 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0da0c:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0da0e:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0da10:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0da14:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:315:14
 1e0da16:    c0 f4 01 09       	[r0 + 0] = 1			  ## port_overwrite.c:316:14
 1e0da1a:    20 00             	rts			  ## port_overwrite.c:317:1


vFillingTaskStack:
 1e0da1c:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:224:0
 1e0da1e:    01 08             	r1 = r0			  ## port_overwrite.c:224:0
 1e0da20:    8f f3 d2 ac       	call 2054564 <uxTaskStack : 33c8 >			  ## port_overwrite.c:225:26
 1e0da24:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:226:26
 1e0da26:    04 fc 80 00       	r4 = r0 + 128
 1e0da2a:    30 fd 7f 19       	r0 = r1 & 4294967168			  ## port_overwrite.c:226:26
 1e0da2e:    21 b1             	r1 = r0 - r4			  ## port_overwrite.c:226:81
 1e0da30:    40 08             	r0 = r4			  ## port_overwrite.c:230:5
 1e0da32:    97 f3 43 ca       	call 3118214 <vmalloc_ : 106ebc >			  ## port_overwrite.c:230:5
 1e0da36:    a0 75             	r0 = 90			  ## port_overwrite.c:232:5
 1e0da38:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:232:5
 1e0da3a:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:232:5
 1e0da3c:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:232:5
 1e0da3e:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:232:5
 1e0da40:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:233:1


maskrom_init:
 1e0da42:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:237:0
 1e0da44:    f4 0b             	sp += -24			  ## port_overwrite.c:237:0
 1e0da46:    c0 ff f2 d0 e0 01 	r0 = 31510770 <assert_printf : 1e0d0f2 >			  ## port_overwrite.c:240:5
 1e0da4c:    58 02             	[sp+20] = r0			  ## port_overwrite.c:240:5
 1e0da4e:    c0 ff e6 c7 e0 01 	r0 = 31508454 <log_putbyte : 1e0c7e6 >			  ## port_overwrite.c:240:5
 1e0da54:    48 02             	[sp+16] = r0			  ## port_overwrite.c:240:5
 1e0da56:    c0 ff 7c e3 e0 01 	r0 = 31515516 <idle_hook : 1e0e37c >			  ## port_overwrite.c:240:5
 1e0da5c:    38 02             	[sp+12] = r0			  ## port_overwrite.c:240:5
 1e0da5e:    00 70             	r0 = 0			  ## port_overwrite.c:240:5
 1e0da60:    28 02             	[sp+8] = r0			  ## port_overwrite.c:240:5
 1e0da62:    c0 ff 34 34 00 00 	r0 = 13364 <vAppPortStartFirstTask : 3434 >			  ## port_overwrite.c:240:5
 1e0da68:    18 02             	[sp+4] = r0			  ## port_overwrite.c:240:5
 1e0da6a:    c4 ff ce da e0 01 	r4 = 31513294 <suppress_tick_and_sleep : 1e0dace >			  ## port_overwrite.c:240:5
 1e0da70:    c0 ff 1c d8 e0 01 	r0 = 31512604 <free : 1e0d81c >			  ## port_overwrite.c:240:5
 1e0da76:    c1 ff 12 d8 e0 01 	r1 = 31512594 <malloc : 1e0d812 >			  ## port_overwrite.c:240:5
 1e0da7c:    c2 ff a8 e5 e0 01 	r2 = 31516072 <vPortVFreeStack : 1e0e5a8 >			  ## port_overwrite.c:240:5
 1e0da82:    c3 ff b0 e4 e0 01 	r3 = 31515824 <pvPortVMallocStack : 1e0e4b0 >			  ## port_overwrite.c:240:5
 1e0da88:    0c 02             	[sp] = r4			  ## port_overwrite.c:240:5
 1e0da8a:    97 f3 55 ca       	call 3118250 <mask_init : 106f38 >			  ## port_overwrite.c:240:5
 1e0da8e:    c0 ff 40 10 00 00 	r0 = 4160 <stack_magic : 1040 >			  ## port_overwrite.c:240:5
 1e0da94:    20 fb 5a 1f       	r1 = 1515870810			  ## port_overwrite.c:240:5
 1e0da98:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:249:5
 1e0da9a:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:249:5
 1e0da9c:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:249:5
 1e0da9e:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:249:5
 1e0daa0:    c0 ff 50 18 00 00 	r0 = 6224 <stack_magic0 : 1850 >			  ## port_overwrite.c:249:5
 1e0daa6:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:250:5
 1e0daa8:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:250:5
 1e0daaa:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:250:5
 1e0daac:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:250:5
 1e0daae:    c0 ff 70 32 00 00 	r0 = 12912 <CurrentTCB : 3270 >			  ## port_overwrite.c:255:5
 1e0dab4:    c1 ff 50 21 00 00 	r1 = 8528 <highCurrentTCB : 2150 >			  ## port_overwrite.c:255:5
 1e0daba:    97 f3 77 c9       	call 3117806 <os_get_curr_tcb_var : 106dac >			  ## port_overwrite.c:255:5
 1e0dabe:    c2 ff cc 33 00 00 	r2 = 13260 <vAppSoftwareInterruptISR : 33cc >			  ## port_overwrite.c:257:5
 1e0dac4:    f0 73             	r0 = 63			  ## port_overwrite.c:257:5
 1e0dac6:    01 70             	r1 = 0			  ## port_overwrite.c:257:5
 1e0dac8:    60 17             	call -320 <request_irq : 1e0d98a >			  ## port_overwrite.c:257:5
 1e0daca:    0c 0a             	sp += 24			  ## port_overwrite.c:257:5
 1e0dacc:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:258:1


suppress_tick_and_sleep:
 1e0dace:    7f 01             	[--sp] = {rets, r15-r4}			  ## port_overwrite.c:74:0
 1e0dad0:    fa 0b             	sp += -12			  ## port_overwrite.c:74:0
 1e0dad2:    97 f3 63 c9       	call 3117766 <local_irq_disable : 106d9c >			  ## port_overwrite.c:456:5
 1e0dad6:    08 00             	csync			  ## port_overwrite.c:456:5
 1e0dad8:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:456:5
 1e0dade:    00 f9 21 40       	r0 = b[r4 + 33] (u)			  ## port_overwrite.c:457:9
 1e0dae2:    00 e0 47 14       	if (r0 != 0) goto 2190 <suppress_tick_and_sleep+0x8A6 : 1e0e374 >
 1e0dae6:    ce ff 80 48 00 00 	r14 = 18560 <tws_sync_channel_end : 4880 >
 1e0daec:    00 f9 33 e0       	r0 = b[r14 + 51] (u)			  ## port_overwrite.c:457:9
 1e0daf0:    00 e0 40 04       	if (r0 == 0) goto 2176 <suppress_tick_and_sleep+0x8A6 : 1e0e374 >			  ## port_overwrite.c:457:9
 1e0daf4:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1028:20
 1e0daf8:    0b 30             	if (r0 != 0) goto 22 <suppress_tick_and_sleep+0x42 : 1e0db10 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1028:20
 1e0dafa:    01 f9 d4 40       	r1 = b[r4 + 212] (u)
 1e0dafe:    40 71             	r0 = 20			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0db00:    01 32             	if (r1 != 0) goto 2 <suppress_tick_and_sleep+0x36 : 1e0db04 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0db02:    00 70             	r0 = 0
 1e0db04:    c1 ff f8 20 00 00 	r1 = 8440 <lrc.4 : 20f8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:21
 1e0db0a:    01 62             	r1 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0db0c:    01 f2 32 34       	if (r1 < r0) goto 2148 <suppress_tick_and_sleep+0x8A6 : 1e0e374 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0db10:    97 f3 44 c9       	call 3117704 <local_irq_disable : 106d9c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1034:5
 1e0db14:    08 00             	csync			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1034:5
 1e0db16:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1905:20
 1e0db1a:    c1 ff 17 18 1a 00 	r1 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1905:20
 1e0db20:    10 e0 11 10       	if (r0 != 1) goto 34 <suppress_tick_and_sleep+0x78 : 1e0db46 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1905:20
 1e0db24:    00 62             	r0 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1909:9
 1e0db26:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1909:9
 1e0db28:    08 62             	b[r1 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1909:9
 1e0db2a:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1911:52
 1e0db2e:    01 f9 48 e0       	r1 = b[r14 + 72] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1911:24
 1e0db32:    01 f2 17 00       	if (r1 == r0) goto 46 <suppress_tick_and_sleep+0x96 : 1e0db64 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1911:24
 1e0db36:    00 f6 44 e1       	r0 = [r14 + 324]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1915:40
 1e0db3a:    10 f6 40 e1       	[r14 + 320] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1915:27
 1e0db3e:    bf f3 55 b0       	call -40790 <__hw_btosc_time_set : 1e03bec >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1917:9
 1e0db42:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1921:20
 1e0db46:    0c 30             	if (r0 != 0) goto 24 <suppress_tick_and_sleep+0x92 : 1e0db60 >
 1e0db48:    8f f3 d0 b1       	call 2057120 <__get_lrc_hz : 3eec >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1924:29
 1e0db4c:    10 f6 40 e1       	[r14 + 320] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1924:27
 1e0db50:    00 f9 48 e0       	r0 = b[r14 + 72] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1927:24
 1e0db54:    81 20             	if (r0 == 0) goto 258 <suppress_tick_and_sleep+0x18A : 1e0dc58 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1927:24
 1e0db56:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1933:9
 1e0db58:    bf f3 a4 b0       	call -40632 <__hw_lrc_time_set : 1e03ca4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1933:9
 1e0db5c:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1933:9
 1e0db60:    10 f9 48 e0       	b[r14 + 72] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1936:30
 1e0db64:    e0 08             	r0 = r14			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1038:13
 1e0db66:    bf f3 14 b1       	call -40408 <low_power_group_query : 1e03d92 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1038:13
 1e0db6a:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1038:13
 1e0db6c:    e5 fc 0c 00       	r5 = r14 + 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1040:13
 1e0db70:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1040:13
 1e0db72:    bf f3 0e b1       	call -40420 <low_power_group_query : 1e03d92 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1040:13
 1e0db76:    06 f2 01 30       	if (r6 < r0) goto 2 <suppress_tick_and_sleep+0xAE : 1e0db7c >
 1e0db7a:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1042:15
 1e0db7c:    06 e0 f8 03       	if (r6 == 0) goto 2032 <suppress_tick_and_sleep+0x8A2 : 1e0e370 >
 1e0db80:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >
 1e0db86:    02 60             	r2 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:91:9
 1e0db88:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:91:9
 1e0db8a:    04 f3 0b 20       	if ((r2 & 16) == 0) goto 22 <suppress_tick_and_sleep+0xD6 : 1e0dba4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:91:9
 1e0db8e:    01 60             	r1 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0db90:    11 b3             	r1 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0db92:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0db94:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:25
 1e0db96:    20 fd 0f 09       	r0 = r0 & 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:38
 1e0db9a:    c1 ff 6c 2c e1 01 	r1 = 31534188 <wdt_time : 1e12c6c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:16
 1e0dba0:    a1 f6 00 10       	r1 = [r1+r0<<2]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:16
 1e0dba4:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1052:24
 1e0dba8:    08 0e             	r0 = r1 * r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1052:24
 1e0dbaa:    40 d0             	r0 = r0 >> 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1052:41
 1e0dbac:    02 08             	r2 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0dbae:    06 f2 01 80       	if (r6 > r0) goto 2 <suppress_tick_and_sleep+0xE6 : 1e0dbb4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0dbb2:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0dbb4:    01 30             	if (r0 != 0) goto 2 <suppress_tick_and_sleep+0xEA : 1e0dbb8 >
 1e0dbb6:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0dbb8:    bf f3 0a b1       	call -40428 <__lp_timer_is_running : 1e03dd0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1057:9
 1e0dbbc:    04 20             	if (r0 == 0) goto 8 <suppress_tick_and_sleep+0xF8 : 1e0dbc6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1057:9
 1e0dbbe:    bf f3 0e b1       	call -40420 <__lp_timer_dump : 1e03dde >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1058:9
 1e0dbc2:    8f f3 68 ac       	call 2054352 <p33_soft_reset : 3496 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0dbc6:    00 f6 00 e0       	r0 = [r14 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:124:18
 1e0dbca:    c6 ff d1 1f 1a 00 	r6 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:124:18
 1e0dbd0:    e0 f2 12 00       	if (r0 == r14) goto 36 <suppress_tick_and_sleep+0x12A : 1e0dbf8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1063:9
 1e0dbd4:    10 6c             	r0 = b[r6 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1065:13
 1e0dbd6:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x110 : 1e0dbde >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1065:13
 1e0dbda:    bf f3 00 b1       	call -40448 <__lp_timer_dump : 1e03dde >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1066:13
 1e0dbde:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1072:13
 1e0dbe0:    bf f3 08 b1       	call -40432 <__lp_timer_set_time : 1e03df4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1072:13
 1e0dbe4:    00 e0 c4 03       	if (r0 == 0) goto 1928 <suppress_tick_and_sleep+0x8A2 : 1e0e370 >
 1e0dbe8:    10 6c             	r0 = b[r6 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0dbea:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x124 : 1e0dbf2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0dbee:    bf f3 f6 b0       	call -40468 <__lp_timer_dump : 1e03dde >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1081:13
 1e0dbf2:    bf f3 42 b1       	call -40316 <__lp_timer_get_period : 1e03e7a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1084:19
 1e0dbf6:    0f 18             	goto 30 <suppress_tick_and_sleep+0x148 : 1e0dc16 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1084:19
 1e0dbf8:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1088:13
 1e0dbfa:    bf f3 fb b0       	call -40458 <__lp_timer_set_time : 1e03df4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1088:13
 1e0dbfe:    00 e0 b7 03       	if (r0 == 0) goto 1902 <suppress_tick_and_sleep+0x8A2 : 1e0e370 >
 1e0dc02:    bf f3 3a b1       	call -40332 <__lp_timer_get_period : 1e03e7a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1094:19
 1e0dc06:    ef 07             	r15 = -2
 1e0dc08:    e0 ef 06 00       	if (r0 == -2) goto 12 <suppress_tick_and_sleep+0x14A : 1e0dc18 >
 1e0dc0c:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1097:13
 1e0dc12:    00 f4 20 19       	[r1 + 0] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1097:13
 1e0dc16:    0f 08             	r15 = r0
 1e0dc18:    e0 08             	r0 = r14			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1102:5
 1e0dc1a:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1102:5
 1e0dc1c:    bf f3 3b b1       	call -40330 <__low_power_suspend : 1e03e96 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1102:5
 1e0dc20:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1105:5
 1e0dc22:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1105:5
 1e0dc24:    bf f3 37 b1       	call -40338 <__low_power_suspend : 1e03e96 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1105:5
 1e0dc28:    c6 ff e0 01 e1 01 	r6 = 31523296 <uart : 1e101e0 >
 1e0dc2e:    c7 ff 74 01 e1 01 	r7 = 31523188 <syscfg_ops_end : 1e10174 >
 1e0dc34:    08 70             	r8 = 0
 1e0dc36:    1d 02             	[sp+4] = r5
 1e0dc38:    67 f2 13 20       	if (r7 >= r6) goto 38 <suppress_tick_and_sleep+0x194 : 1e0dc62 >
 1e0dc3c:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1198:16
 1e0dc3e:    08 20             	if (r0 == 0) goto 16 <suppress_tick_and_sleep+0x182 : 1e0dc50 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1198:16
 1e0dc40:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1203:13
 1e0dc42:    06 20             	if (r0 == 0) goto 12 <suppress_tick_and_sleep+0x182 : 1e0dc50 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1203:13
 1e0dc44:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1207:16
 1e0dc46:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1207:13
 1e0dc48:    10 e0 0a 00       	if (r0 == 1) goto 20 <suppress_tick_and_sleep+0x192 : 1e0dc60 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1207:13
 1e0dc4c:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1212:16
 1e0dc4e:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1212:13
 1e0dc50:    c7 80             	r7 += 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1196:5
 1e0dc52:    67 f2 f3 3f       	if (r7 < r6) goto -26 <suppress_tick_and_sleep+0x16E : 1e0dc3c >
 1e0dc56:    05 18             	goto 10 <suppress_tick_and_sleep+0x194 : 1e0dc62 >
 1e0dc58:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1929:13
 1e0dc5a:    bf f3 23 b0       	call -40890 <__hw_lrc_time_set : 1e03ca4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1929:13
 1e0dc5e:    82 1f             	goto -252 <suppress_tick_and_sleep+0x96 : 1e0db64 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1929:13
 1e0dc60:    18 70             	r8 = 1
 1e0dc62:    18 f6 1c e0       	[r14 + 28] = r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1107:19
 1e0dc66:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:565:5
 1e0dc68:    bf f3 2d af       	call -41382 <__hw_lrc_enable : 1e03ac6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:565:5
 1e0dc6c:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0dc70:    c5 ff 08 00 1e 00 	r5 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0dc76:    5a fc 18 19       	r10 = r5 + 6424			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0dc7a:    00 e0 33 11       	if (r0 != 0) goto 614 <suppress_tick_and_sleep+0x416 : 1e0dee4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0dc7e:    c0 ff 18 32 00 00 	r0 = 12824 <update_bss_end : 3218 >
 1e0dc84:    00 60             	r0 = b[r0 + 0] (u)
 1e0dc86:    00 e0 2d 01       	if (r0 == 0) goto 602 <suppress_tick_and_sleep+0x416 : 1e0dee4 >
 1e0dc8a:    30 72             	r0 = 35			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:344:9
 1e0dc8c:    bf f3 09 fa       	call -3054 <putchar : 1e0d0a2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:344:9
 1e0dc90:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:93:22
 1e0dc94:    28 02             	[sp+8] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0dc96:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0dc9a:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0dc9e:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0dca0:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0dca4:    30 4a             	r0 = [r5 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0dca6:    30 fd e0 0c       	r0 = r0 & 536870911			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0dcaa:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0dcae:    38 4a             	[r5 + 12] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0dcb0:    01 f4 08 aa       	[r10 + 4] |= 2048			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:100:5
 1e0dcb4:    00 f4 40 ac       	[r10 + 0] |= 1073741824			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:102:5
 1e0dcb8:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcbc:    30 fd 07 09       	r0 = r0 & 4294967288			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcc0:    00 fd 03 09       	r0 = r0 | 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcc4:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcc8:    c0 ff 20 32 00 00 	r0 = 12832 <hdl.5 : 3220 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcce:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcd0:    f0 fd 60 c0       	r12 = r0 << 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcd4:    f3 70             	r3 = 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcd6:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcd8:    38 70             	r8 = 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcda:    80 71             	r0 = 24			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dcdc:    c0 fe 00 bc       	r11 = r12 / r0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dce0:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dce2:    0d 70             	r13 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dce4:    09 70             	r9 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dce6:    05 70             	r5 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0dce8:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0dcec:    c6 04             	r6 = r3.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0dcee:    c5 fd 20 06       	r0 <= insert(r6, p:4, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0dcf2:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0dcf6:    bf f3 eb b0       	call -40490 <__hw_xosc_fsck_run : 1e03ed0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:123:9
 1e0dcfa:    a0 fc e4 f7       	r0 = r10 + -2076			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0dcfe:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0dd00:    61 fb 03 79       	r1 = 3 - r7
 1e0dd04:    60 ff ff 19 08 00 	if ((r1 & 255) == 0) goto 16 <suppress_tick_and_sleep+0x24C : 1e0dd1a >
 1e0dd0a:    11 70             	r1 = 1
 1e0dd0c:    82 08             	r2 = r8
 1e0dd0e:    f2 8f             	r2 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0dd10:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0dd12:    61 ff ff 29 fb ff 	if ((r2 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x240 : 1e0dd0e >
 1e0dd18:    01 18             	goto 2 <suppress_tick_and_sleep+0x24E : 1e0dd1c >
 1e0dd1a:    11 70             	r1 = 1
 1e0dd1c:    b0 f2 04 90       	if (r0 <= r11) goto 8 <suppress_tick_and_sleep+0x25A : 1e0dd28 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:128:13
 1e0dd20:    61 09             	r1 += r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0dd22:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0dd24:    3d 08             	r13 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0dd26:    03 18             	goto 6 <suppress_tick_and_sleep+0x260 : 1e0dd2e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0dd28:    61 bc             	r1 = r6 - r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0dd2a:    09 08             	r9 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0dd2c:    34 08             	r4 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0dd2e:    17 80             	r7 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:35
 1e0dd30:    f8 8f             	r8 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0dd32:    13 08             	r3 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0dd34:    57 e0 d8 1f       	if (r7 != 5) goto -80 <suppress_tick_and_sleep+0x21A : 1e0dce8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0dd38:    90 fb b0 05       	r0 = r5 - r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:140:57
 1e0dd3c:    90 fb 90 1b       	r1 = r11 - r9			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0dd40:    01 f2 01 30       	if (r1 < r0) goto 2 <suppress_tick_and_sleep+0x278 : 1e0dd46 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0dd44:    d4 08             	r4 = r13			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:143:5
 1e0dd46:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0dd4a:    c5 fd 20 04       	r0 <= insert(r4, p:4, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0dd4e:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0dd52:    35 70             	r5 = 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0dd54:    02 70             	r2 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0dd56:    13 70             	r3 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0dd58:    a7 fc e8 e6       	r7 = r10 + -6424
 1e0dd5c:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0dd60:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0dd62:    51 08             	r1 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0dd64:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0dd68:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0dd6c:    bf f3 b0 b0       	call -40608 <__hw_xosc_fsck_run : 1e03ed0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:161:9
 1e0dd70:    70 fc fc 10       	r0 = r7 + 4348			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0dd74:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0dd76:    64 fb 01 29       	r4 = 1 - r2
 1e0dd7a:    11 70             	r1 = 1
 1e0dd7c:    60 ff ff 49 06 00 	if ((r4 & 255) == 0) goto 12 <suppress_tick_and_sleep+0x2C0 : 1e0dd8e >
 1e0dd82:    36 08             	r6 = r3
 1e0dd84:    f6 8f             	r6 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0dd86:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0dd88:    61 ff ff 69 fb ff 	if ((r6 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x2B6 : 1e0dd84 >
 1e0dd8e:    45 05             	r5 = r5.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0dd90:    66 fb 00 19       	r6 = 0 - r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0dd94:    b0 f2 01 80       	if (r0 > r11) goto 2 <suppress_tick_and_sleep+0x2CC : 1e0dd9a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0dd98:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0dd9a:    65 09             	r5 += r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0dd9c:    12 80             	r2 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:158:47
 1e0dd9e:    f3 8f             	r3 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0dda0:    32 e0 dc 1f       	if (r2 != 3) goto -72 <suppress_tick_and_sleep+0x28E : 1e0dd5c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0dda4:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0dda8:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ddaa:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ddae:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ddb2:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ddb4:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ddb8:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ddbc:    21 02             	r1 = [sp+8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ddbe:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ddc0:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ddc4:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ddc8:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:211:22
 1e0ddcc:    08 02             	[sp] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ddce:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ddd2:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ddd6:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ddd8:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0dddc:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:216:15
 1e0dde0:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0dde4:    31 4e             	r1 = [r7 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0dde6:    31 fd e0 1c       	r1 = r1 & 536870911			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ddea:    01 fd 80 1c       	r1 = r1 | 2147483648			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ddee:    39 4e             	[r7 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ddf0:    01 f4 08 aa       	[r10 + 4] |= 2048			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:221:5
 1e0ddf4:    00 f4 40 ac       	[r10 + 0] |= 1073741824			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:223:5
 1e0ddf8:    20 fd 07 09       	r0 = r0 & 7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0ddfc:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0ddfe:    20 e0 01 80       	if (r0 > 2) goto 2 <suppress_tick_and_sleep+0x336 : 1e0de04 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0de02:    21 70             	r1 = 2
 1e0de04:    53 70             	r3 = 5
 1e0de06:    50 e0 01 80       	if (r0 > 5) goto 2 <suppress_tick_and_sleep+0x33E : 1e0de0c >
 1e0de0a:    13 08             	r3 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:226:9
 1e0de0c:    80 71             	r0 = 24
 1e0de0e:    c0 fe 00 2c       	r2 = r12 / r0 (u)
 1e0de12:    24 fc fb ff       	r4 = r2 + -5
 1e0de16:    57 94             	r7 = r2 + 5
 1e0de18:    f9 07             	r9 = -1
 1e0de1a:    f0 7f             	r0 = 255
 1e0de1c:    28 02             	[sp+8] = r0
 1e0de1e:    08 70             	r8 = 0
 1e0de20:    cc ff 0c 2c e1 01 	r12 = 31534092 <adkey_data+0x10 : 1e12c0c >
 1e0de26:    0d 70             	r13 = 0
 1e0de28:    fb 7f             	r11 = 255
 1e0de2a:    00 fa 00 dc       	r0 = b[r13+r12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0de2e:    01 f6 04 a0       	r1 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0de32:    30 09             	r0 += r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0de34:    c3 fd 00 10       	r1 <= insert(r0, p:0, l:3)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0de38:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0de3c:    bf f3 48 b0       	call -40816 <__hw_xosc_fsck_run : 1e03ed0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:242:9
 1e0de40:    a0 fc e4 f7       	r0 = r10 + -2076			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e0de44:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e0de46:    a1 b0             	r1 = r0 - r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0de48:    cd df             	r5 = r1 >>> 31			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0de4a:    51 09             	r1 += r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0de4c:    d1 ba             	r1 ^= r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0de4e:    41 04             	r1 = r1.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:248:23
 1e0de50:    19 f2 04 90       	if (r9 <= r1) goto 8 <suppress_tick_and_sleep+0x38E : 1e0de5c >
 1e0de54:    05 fa 00 dc       	r5 = b[r13+r12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:250:34
 1e0de58:    c6 ba             	r6 = r5 + r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e0de5a:    19 08             	r9 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e0de5c:    70 f2 0c 20       	if (r0 >= r7) goto 24 <suppress_tick_and_sleep+0x3AA : 1e0de78 >
 1e0de60:    40 f2 0a 90       	if (r0 <= r4) goto 20 <suppress_tick_and_sleep+0x3AA : 1e0de78 >
 1e0de64:    e4 fd 00 1b       	r1 = r11.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:23
 1e0de68:    80 08             	r0 = r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0de6a:    00 ff ff 10 01 00 	if (r1 == 255) goto 2 <suppress_tick_and_sleep+0x3A4 : 1e0de72 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0de70:    b0 08             	r0 = r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0de72:    0b 08             	r11 = r0
 1e0de74:    18 f5 08 00       	[sp+8] = r8
 1e0de78:    1d 80             	r13 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:236:50
 1e0de7a:    18 80             	r8 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e0de7c:    5d e0 d5 1f       	if (r13 != 5) goto -86 <suppress_tick_and_sleep+0x35C : 1e0de2a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e0de80:    a5 fc e8 e6       	r5 = r10 + -6424
 1e0de84:    59 e0 0d 20       	if (r9 >= 5) goto 26 <suppress_tick_and_sleep+0x3D4 : 1e0dea2 >
 1e0de88:    e4 fd 00 0b       	r0 = r11.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:26
 1e0de8c:    21 02             	r1 = [sp+8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:18
 1e0de8e:    41 04             	r1 = r1.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:18
 1e0de90:    21 b2             	r1 = r1 - r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:24
 1e0de92:    22 70             	r2 = 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e0de94:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e0de98:    10 09             	r0 += r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:37
 1e0de9a:    00 04             	r0 = r0.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e0de9c:    00 fa 00 0c       	r0 = b[r0+r12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e0dea0:    c6 b0             	r6 = r0 + r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:266:21
 1e0dea2:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0dea6:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0dea8:    dd fd 18 60       	r6 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0deac:    16 f6 04 a0       	[r10 + 4] = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0deb0:    bf f3 0e b0       	call -40932 <__hw_xosc_fsck_run : 1e03ed0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:274:5
 1e0deb4:    50 fc fc 10       	r0 = r5 + 4348			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e0deb8:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e0deba:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0debe:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0dec0:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0dec4:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0dec8:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0deca:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0dece:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ded2:    01 02             	r1 = [sp]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ded4:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ded6:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0deda:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0dede:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0dee4:    01 f6 50 e1       	r1 = [r14 + 336]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:575:20
 1e0dee8:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x420 : 1e0deee >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:575:20
 1e0deea:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:576:9
 1e0deec:    81 00             	call r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:576:9
 1e0deee:    01 f6 00 a0       	r1 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:491:22
 1e0def2:    e0 fc 50 00       	r0 = r14 + 80			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:491:22
 1e0def6:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:491:12
 1e0def8:    01 f6 04 a0       	r1 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:492:22
 1e0defc:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:492:12
 1e0defe:    52 fc 00 50       	r2 = r5 + 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:492:12
 1e0df02:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:499:24
 1e0df04:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:499:12
 1e0df06:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:500:24
 1e0df08:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:500:12
 1e0df0a:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:501:24
 1e0df0c:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:501:12
 1e0df0e:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:502:24
 1e0df10:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:502:12
 1e0df12:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:503:24
 1e0df14:    69 40             	[r0 + 24] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:503:12
 1e0df16:    22 fc 00 01       	r2 = r2 + 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:503:12
 1e0df1a:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:508:24
 1e0df1c:    79 40             	[r0 + 28] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:508:12
 1e0df1e:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:509:24
 1e0df20:    89 40             	[r0 + 32] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:509:12
 1e0df22:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:510:24
 1e0df24:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:510:12
 1e0df26:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:511:24
 1e0df28:    a9 40             	[r0 + 40] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:511:12
 1e0df2a:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:512:24
 1e0df2c:    b9 40             	[r0 + 44] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:512:12
 1e0df2e:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:512:12
 1e0df32:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:516:25
 1e0df34:    c9 40             	[r0 + 48] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:516:12
 1e0df36:    23 fc 00 c4       	r3 = r2 + -15360			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:516:12
 1e0df3a:    01 46             	r1 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:517:22
 1e0df3c:    d9 40             	[r0 + 52] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:517:12
 1e0df3e:    11 46             	r1 = [r3 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:518:22
 1e0df40:    e9 40             	[r0 + 56] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:518:12
 1e0df42:    91 44             	r1 = [r2 + 36]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:521:26
 1e0df44:    f9 40             	[r0 + 60] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:521:12
 1e0df46:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:521:12
 1e0df4a:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:522:23
 1e0df4c:    09 41             	[r0 + 64] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:522:12
 1e0df4e:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:523:23
 1e0df50:    19 41             	[r0 + 68] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:523:12
 1e0df52:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:523:12
 1e0df56:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:525:22
 1e0df58:    29 41             	[r0 + 72] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:525:12
 1e0df5a:    08 70             	r8 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:525:12
 1e0df5c:    18 f6 00 20       	[r2 + 0] = r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:526:17
 1e0df60:    cd ff 95 18 1a 00 	r13 = 1710229 <uECC_vli_cmp_unsafe+0x9A899 : 1a1895 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:526:17
 1e0df66:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:534:14
 1e0df6a:    81 fd 20 11       	r1 = uextra(r1, p:4, l:1)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:534:14
 1e0df6e:    39 41             	[r0 + 76] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:534:12
 1e0df70:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:535:5
 1e0df74:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:535:5
 1e0df76:    11 f9 05 d0       	b[r13 + 5] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:535:5
 1e0df7a:    01 f9 02 d0       	r1 = b[r13 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:537:14
 1e0df7e:    21 fd 01 19       	r1 = r1 & 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:537:14
 1e0df82:    49 41             	[r0 + 80] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:537:12
 1e0df84:    00 f9 02 d0       	r0 = b[r13 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:538:5
 1e0df88:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:538:5
 1e0df8a:    10 f9 02 d0       	b[r13 + 2] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:538:5
 1e0df8e:    01 f6 50 e1       	r1 = [r14 + 336]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:581:20
 1e0df92:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x4CA : 1e0df98 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:581:20
 1e0df94:    20 70             	r0 = 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:582:9
 1e0df96:    81 00             	call r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:582:9
 1e0df98:    00 f6 1c e0       	r0 = [r14 + 28]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:648:17
 1e0df9c:    10 e0 04 10       	if (r0 != 1) goto 8 <suppress_tick_and_sleep+0x4DA : 1e0dfa8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:648:17
 1e0dfa0:    00 f9 38 e0       	r0 = b[r14 + 56] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:649:21
 1e0dfa4:    28 fd 01 09       	r8 = r0 & 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:649:43
 1e0dfa8:    01 f4 01 59       	[r5 + 4] |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:657:24
 1e0dfac:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0dfae:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0dfb2:    00 fd 03 0a       	r0 = r0 | 768			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0dfb6:    28 4a             	[r5 + 8] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0dfb8:    08 00             	csync			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:659:5
 1e0dfba:    00 4a             	r0 = [r5 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:661:29
 1e0dfbc:    10 f6 b8 40       	[r4 + 184] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:661:17
 1e0dfc0:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:661:17
 1e0dfc2:    08 4a             	[r5 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:662:23
 1e0dfc4:    01 f6 1c e0       	r1 = [r14 + 28]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:18
 1e0dfc8:    09 f9 47 e0       	r9 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:70
 1e0dfcc:    11 e0 02 00       	if (r1 == 1) goto 4 <suppress_tick_and_sleep+0x506 : 1e0dfd4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:70
 1e0dfd0:    19 e0 47 10       	if (r9 != 1) goto 142 <suppress_tick_and_sleep+0x594 : 1e0e062 >
 1e0dfd4:    10 70             	r0 = 1
 1e0dfd6:    11 e0 01 00       	if (r1 == 1) goto 2 <suppress_tick_and_sleep+0x50E : 1e0dfdc >
 1e0dfda:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:24
 1e0dfdc:    02 f6 00 a0       	r2 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:390:25
 1e0dfe0:    03 f6 00 a0       	r3 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:391:25
 1e0dfe4:    04 f6 00 a0       	r4 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:392:25
 1e0dfe8:    41 c6             	r1 = r0 << 25			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:392:25
 1e0dfea:    85 fd 30 22       	r2 = uextra(r2, p:6, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:390:58
 1e0dfee:    84 fd 58 33       	r3 = uextra(r3, p:11, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:391:57
 1e0dff2:    84 fd 78 54       	r5 = uextra(r4, p:15, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:392:57
 1e0dff6:    0b fb c0 07       	r11 = 1984 <DRIVER_CODE_TOTAL+0x2E : 7c0 >
 1e0dffa:    cc ff 01 00 08 19 	r12 = 419954689 <uECC_vli_cmp_unsafe+0xF79005 : 1080001 >
 1e0e000:    10 70             	r0 = 1
 1e0e002:    16 70             	r6 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:25
 1e0e004:    32 e0 01 80       	if (r2 > 3) goto 2 <suppress_tick_and_sleep+0x53C : 1e0e00a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:25
 1e0e008:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:25
 1e0e00a:    a2 b5             	r2 = r2 - r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:19
 1e0e00c:    94 c1             	r4 = r2 << 6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:404:32
 1e0e00e:    e2 fd b0 44       	r4 = r4 & r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:404:32
 1e0e012:    e0 fd 40 61       	r6 = r1 | r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0e016:    17 70             	r7 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:26
 1e0e018:    33 e0 01 80       	if (r3 > 3) goto 2 <suppress_tick_and_sleep+0x550 : 1e0e01e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:26
 1e0e01c:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:26
 1e0e01e:    e3 b7             	r3 = r3 - r7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:20
 1e0e020:    dc c2             	r4 = r3 << 11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e0e022:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e0e026:    56 b8             	r6 |= r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0e028:    35 e0 01 80       	if (r5 > 3) goto 2 <suppress_tick_and_sleep+0x560 : 1e0e02e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0e02c:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e0e02e:    25 ba             	r5 = r5 - r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:398:20
 1e0e030:    e8 c3             	r0 = r5 << 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e0e032:    20 fd 70 03       	r0 = r0 & 491520			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e0e036:    50 bc             	r0 |= r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0e038:    e0 fd c0 00       	r0 = r0 | r12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0e03c:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:400:30
 1e0e040:    32 e0 de 1f       	if (r2 != 3) goto -68 <suppress_tick_and_sleep+0x532 : 1e0e000 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:400:30
 1e0e044:    33 e0 dc 1f       	if (r3 != 3) goto -72 <suppress_tick_and_sleep+0x532 : 1e0e000 >
 1e0e048:    35 e0 da 1f       	if (r5 != 3) goto -76 <suppress_tick_and_sleep+0x532 : 1e0e000 >
 1e0e04c:    10 70             	r0 = 1
 1e0e04e:    19 e0 01 00       	if (r9 == 1) goto 2 <suppress_tick_and_sleep+0x586 : 1e0e054 >
 1e0e052:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:79
 1e0e054:    c1 ff f3 94 02 00 	r1 = 169203 <text_size+0xC7FF : 294f3 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:432:56
 1e0e05a:    c1 fd 70 10       	r1 <= insert(r0, p:14, l:1)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:432:56
 1e0e05e:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:424:26
 1e0e062:    08 e0 0d 10       	if (r8 != 0) goto 26 <suppress_tick_and_sleep+0x5B2 : 1e0e080 >
 1e0e066:    a0 fc e0 2d       	r0 = r10 + 11744
 1e0e06a:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0e06c:    31 fd 03 19       	r1 = r1 & 4294967292			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0e070:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0e072:    19 e0 05 00       	if (r9 == 1) goto 10 <suppress_tick_and_sleep+0x5B2 : 1e0e080 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0e076:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:671:32
 1e0e07a:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:671:32
 1e0e07c:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:671:32
 1e0e080:    00 f9 00 d0       	r0 = b[r13 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0e084:    01 f9 4c e1       	r1 = b[r14 + 332] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0e088:    20 fd c7 09       	r0 = r0 & 199			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0e08c:    c9 c0             	r1 = r1 << 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0e08e:    21 fd 38 19       	r1 = r1 & 56			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0e092:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0e094:    10 f9 00 d0       	b[r13 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0e098:    8f f3 2e af       	call 2055772 <low_power_system_down : 3ef8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1120:5
 1e0e09c:    09 f6 50 e0       	r9 = [r14 + 80]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:560:25
 1e0e0a0:    84 fd 78 09       	r0 = uextra(r9, p:15, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:447:52
 1e0e0a4:    84 fd 58 19       	r1 = uextra(r9, p:11, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:446:52
 1e0e0a8:    03 f6 00 a0       	r3 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:449:21
 1e0e0ac:    04 f6 00 a0       	r4 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:450:21
 1e0e0b0:    05 f6 00 a0       	r5 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:451:21
 1e0e0b4:    85 fd 30 29       	r2 = uextra(r9, p:6, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:445:53
 1e0e0b8:    85 fd 30 33       	r3 = uextra(r3, p:6, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:449:54
 1e0e0bc:    84 fd 58 74       	r7 = uextra(r4, p:11, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:450:53
 1e0e0c0:    84 fd 78 55       	r5 = uextra(r5, p:15, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:451:53
 1e0e0c4:    08 fb c0 07       	r8 = 1984 <DRIVER_CODE_TOTAL+0x2E : 7c0 >
 1e0e0c8:    cc ff 3f 00 f8 ff 	r12 = 4294443071 <bank_code_load_addr+0x16142B : 1f8003f >
 1e0e0ce:    1b 70             	r11 = 1
 1e0e0d0:    16 70             	r6 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:27
 1e0e0d2:    32 f2 01 80       	if (r2 > r3) goto 2 <suppress_tick_and_sleep+0x60A : 1e0e0d8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:27
 1e0e0d6:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:27
 1e0e0d8:    63 09             	r3 += r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:15
 1e0e0da:    9c c1             	r4 = r3 << 6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0e0dc:    e2 fd 80 44       	r4 = r4 & r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0e0e0:    e2 fd c0 69       	r6 = r9 & r12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0e0e4:    56 b8             	r6 |= r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0e0e6:    14 70             	r4 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:29
 1e0e0e8:    71 f2 01 80       	if (r1 > r7) goto 2 <suppress_tick_and_sleep+0x620 : 1e0e0ee >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:29
 1e0e0ec:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:29
 1e0e0ee:    47 09             	r7 += r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:16
 1e0e0f0:    fc c2             	r4 = r7 << 11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0e0f2:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0e0f6:    56 b8             	r6 |= r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0e0f8:    50 f2 01 80       	if (r0 > r5) goto 2 <suppress_tick_and_sleep+0x630 : 1e0e0fe >
 1e0e0fc:    0b 70             	r11 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e0e0fe:    b5 09             	r5 += r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:456:16
 1e0e100:    ec c3             	r4 = r5 << 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0e102:    24 fd 70 43       	r4 = r4 & 491520			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0e106:    e0 fd 40 96       	r9 = r6 | r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0e10a:    19 f6 00 a0       	[r10 + 0] = r9			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:462:26
 1e0e10e:    23 f2 de 1f       	if (r3 != r2) goto -68 <suppress_tick_and_sleep+0x600 : 1e0e0ce >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:462:26
 1e0e112:    17 f2 dc 1f       	if (r7 != r1) goto -72 <suppress_tick_and_sleep+0x600 : 1e0e0ce >
 1e0e116:    05 f2 da 1f       	if (r5 != r0) goto -76 <suppress_tick_and_sleep+0x600 : 1e0e0ce >
 1e0e11a:    e0 fc 54 00       	r0 = r14 + 84
 1e0e11e:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:561:24
 1e0e120:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:561:22
 1e0e124:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:569:21
 1e0e126:    a2 fc e8 36       	r2 = r10 + 14056			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:569:21
 1e0e12a:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:569:19
 1e0e12c:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:570:21
 1e0e12e:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:570:19
 1e0e130:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:571:22
 1e0e132:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:571:20
 1e0e134:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:572:21
 1e0e136:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:572:19
 1e0e138:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:573:20
 1e0e13a:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:573:18
 1e0e13c:    61 40             	r1 = [r0 + 24]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:576:21
 1e0e13e:    22 fc 00 01       	r2 = r2 + 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:576:21
 1e0e142:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:576:19
 1e0e144:    71 40             	r1 = [r0 + 28]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:577:21
 1e0e146:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:577:19
 1e0e148:    81 40             	r1 = [r0 + 32]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:578:22
 1e0e14a:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:578:20
 1e0e14c:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:579:20
 1e0e14e:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:579:18
 1e0e150:    a1 40             	r1 = [r0 + 40]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:580:20
 1e0e152:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:580:18
 1e0e154:    b1 40             	r1 = [r0 + 44]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:583:23
 1e0e156:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:583:23
 1e0e15a:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:583:21
 1e0e15c:    c1 40             	r1 = [r0 + 48]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:584:20
 1e0e15e:    23 fc 00 c4       	r3 = r2 + -15360			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:584:20
 1e0e162:    09 46             	[r3 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:584:18
 1e0e164:    d1 40             	r1 = [r0 + 52]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:585:20
 1e0e166:    19 46             	[r3 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:585:18
 1e0e168:    e1 40             	r1 = [r0 + 56]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:588:24
 1e0e16a:    99 44             	[r2 + 36] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:588:22
 1e0e16c:    f1 40             	r1 = [r0 + 60]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:589:21
 1e0e16e:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:589:21
 1e0e172:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:589:19
 1e0e174:    01 41             	r1 = [r0 + 64]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:590:21
 1e0e176:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:590:19
 1e0e178:    11 41             	r1 = [r0 + 68]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:592:19
 1e0e17a:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:592:19
 1e0e17e:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:592:17
 1e0e180:    00 f4 40 29       	[r2 + 0] |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:593:17
 1e0e184:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0e188:    22 41             	r2 = [r0 + 72]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0e18a:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0e18c:    12 c1             	r2 = r2 << 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0e18e:    22 fd 10 29       	r2 = r2 & 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0e192:    51 b4             	r1 |= r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0e194:    11 f9 05 d0       	b[r13 + 5] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0e198:    01 f9 02 d0       	r1 = b[r13 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0e19c:    30 41             	r0 = [r0 + 76]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0e19e:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0e1a0:    20 fd 01 09       	r0 = r0 & 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0e1a4:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0e1a6:    10 f9 02 d0       	b[r13 + 2] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0e1aa:    01 f6 54 e1       	r1 = [r14 + 340]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0e1ae:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x6E6 : 1e0e1b4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0e1b0:    f0 08             	r0 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:600:9
 1e0e1b2:    81 00             	call r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:600:9
 1e0e1b4:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:604:5
 1e0e1b6:    bf f3 86 ac       	call -42740 <__hw_lrc_enable : 1e03ac6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:604:5
 1e0e1ba:    00 f9 31 e0       	r0 = b[r14 + 49] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0e1be:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0e1c4:    78 08             	r8 = r7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0e1c6:    d7 fc 82 ff       	r7 = r13 + -126			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0e1ca:    09 f5 04 00       	r9 = [sp+4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0e1ce:    75 fc ba 07       	r5 = r7 + 1978			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0e1d2:    07 20             	if (r0 == 0) goto 14 <suppress_tick_and_sleep+0x714 : 1e0e1e2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0e1d4:    bf f3 03 ae       	call -41978 <__lp_timer_dump : 1e03dde >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1131:9
 1e0e1d8:    00 f9 31 e0       	r0 = b[r14 + 49] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1131:9
 1e0e1dc:    02 20             	if (r0 == 0) goto 4 <suppress_tick_and_sleep+0x714 : 1e0e1e2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1131:9
 1e0e1de:    8f f3 5a a9       	call 2052788 <p33_soft_reset : 3496 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0e1e2:    01 f6 00 e0       	r1 = [r14 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:124:18
 1e0e1e6:    bf f3 f3 ad       	call -42010 <__lp_timer_is_running : 1e03dd0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:716:19
 1e0e1ea:    e1 f2 94 00       	if (r1 == r14) goto 296 <suppress_tick_and_sleep+0x848 : 1e0e316 >
 1e0e1ee:    5e 20             	if (r0 == 0) goto 188 <suppress_tick_and_sleep+0x7DE : 1e0e2ac >
 1e0e1f0:    30 6a             	r0 = b[r5 + 3] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:125:12
 1e0e1f2:    43 6a             	r3 = b[r5 + 4] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:13
 1e0e1f4:    52 6a             	r2 = b[r5 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:13
 1e0e1f6:    61 6a             	r1 = b[r5 + 6] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:13
 1e0e1f8:    24 6a             	r4 = b[r5 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0e1fa:    14 b3             	r4 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0e1fc:    2c 6a             	b[r5 + 2] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0e1fe:    00 00             	nop			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:131:5
 1e0e200:    00 00             	nop			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:132:5
 1e0e202:    24 f9 bc 77       	r4 = b[r7 + 1980] (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e0e206:    f4 ef fc cf       	ifs (r4 > -1) goto -8 <suppress_tick_and_sleep+0x734 : 1e0e202 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e0e20a:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:9
 1e0e20e:    c8 fd 80 02       	r0 <= insert(r2, p:16, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:9
 1e0e212:    b2 6a             	r2 = b[r5 + 11] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:137:12
 1e0e214:    c3 6a             	r3 = b[r5 + 12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:14
 1e0e216:    d4 6a             	r4 = b[r5 + 13] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:14
 1e0e218:    e6 6a             	r6 = b[r5 + 14] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:14
 1e0e21a:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:9
 1e0e21e:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:10
 1e0e222:    c8 fd 80 24       	r2 <= insert(r4, p:16, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:10
 1e0e226:    c8 fd c0 26       	r2 <= insert(r6, p:24, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:10
 1e0e22a:    a0 b0             	r0 = r0 - r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:142:16
 1e0e22c:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD754C : f4240 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0e232:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0e234:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0e236:    bf f3 f1 ca       	call -27166 <__muldi3 : 1e0781c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0e23a:    02 f6 40 e1       	r2 = [r14 + 320]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:340:13
 1e0e23e:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:340:11
 1e0e240:    bf f3 0b cb       	call -27114 <__udivdi3 : 1e0785a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:340:11
 1e0e244:    01 f6 24 e0       	r1 = [r14 + 36]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:721:26
 1e0e248:    11 fc 2c 01       	r1 = r1 + 300			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:721:42
 1e0e24c:    01 f2 2e 20       	if (r1 >= r0) goto 92 <suppress_tick_and_sleep+0x7DE : 1e0e2ac >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:721:42
 1e0e250:    20 75             	r0 = 82			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:723:17
 1e0e252:    bf f3 26 f7       	call -4532 <putchar : 1e0d0a2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:723:17
 1e0e256:    bf f3 5e ae       	call -41796 <__lp_timer_get_pass_time : 1e03f16 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:724:27
 1e0e25a:    00 fc 58 02       	r0 = r0 + 600			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:724:78
 1e0e25e:    bf f3 71 ae       	call -41758 <__tcnt_us : 1e03f44 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e0e262:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e0e264:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e0e268:    bf f3 6c ae       	call -41768 <__tcnt_us : 1e03f44 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e0e26c:    20 bc             	r0 = r6 - r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:19
 1e0e26e:    01 d6             	r1 = r0 >> 24			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:27
 1e0e270:    a9 6a             	b[r5 + 10] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:19
 1e0e272:    01 d4             	r1 = r0 >> 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:27
 1e0e274:    99 6a             	b[r5 + 9] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:19
 1e0e276:    01 d2             	r1 = r0 >> 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:27
 1e0e278:    89 6a             	b[r5 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:19
 1e0e27a:    78 6a             	b[r5 + 7] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:245:19
 1e0e27c:    30 d6             	r0 = r6 >> 24			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:27
 1e0e27e:    68 6a             	b[r5 + 6] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:19
 1e0e280:    30 d4             	r0 = r6 >> 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:27
 1e0e282:    58 6a             	b[r5 + 5] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:19
 1e0e284:    30 d2             	r0 = r6 >> 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:27
 1e0e286:    48 6a             	b[r5 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:19
 1e0e288:    3e 6a             	b[r5 + 3] = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:253:19
 1e0e28a:    bf f3 f6 ad       	call -42004 <__lp_timer_get_period : 1e03e7a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:726:27
 1e0e28e:    11 6a             	r1 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:39
 1e0e290:    12 6a             	r2 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:61
 1e0e292:    0f 08             	r15 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:726:27
 1e0e294:    20 fd 20 19       	r0 = r1 & 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:39
 1e0e298:    31 fd 7f 29       	r1 = r2 & 4294967168			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:61
 1e0e29c:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:59
 1e0e29e:    10 f9 31 e0       	b[r14 + 49] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:37
 1e0e2a2:    60 ff a0 09 02 00 	if ((r0 & 160) == 0) goto 4 <suppress_tick_and_sleep+0x7DE : 1e0e2ac >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:37
 1e0e2a8:    bf f3 99 ad       	call -42190 <__lp_timer_dump : 1e03dde >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:729:21
 1e0e2ac:    04 70             	r4 = 0
 1e0e2ae:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:738:17
 1e0e2b0:    05 f3 26 00       	if ((r0 & 32) == 0) goto 76 <suppress_tick_and_sleep+0x832 : 1e0e300 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:738:17
 1e0e2b4:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:740:17
 1e0e2b6:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:740:17
 1e0e2b8:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:740:17
 1e0e2ba:    14 f9 30 e0       	b[r14 + 48] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:611:21
 1e0e2be:    06 f6 00 e0       	r6 = [r14 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:613:5
 1e0e2c2:    e6 f2 0d 00       	if (r6 == r14) goto 26 <suppress_tick_and_sleep+0x812 : 1e0e2e0 >
 1e0e2c6:    60 08             	r0 = r6
 1e0e2c8:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:16
 1e0e2ca:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:16
 1e0e2cc:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x80A : 1e0e2d8 >
 1e0e2ce:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:31
 1e0e2d0:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x80A : 1e0e2d8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:31
 1e0e2d2:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:615:31
 1e0e2d4:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:615:13
 1e0e2d6:    82 00             	call r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:615:13
 1e0e2d8:    e6 f2 f5 1f       	if (r6 != r14) goto -22 <suppress_tick_and_sleep+0x7F8 : 1e0e2c6 >
 1e0e2dc:    06 f6 00 e0       	r6 = [r14 + 0]
 1e0e2e0:    e6 f2 0b 00       	if (r6 == r14) goto 22 <suppress_tick_and_sleep+0x82C : 1e0e2fa >
 1e0e2e4:    60 08             	r0 = r6
 1e0e2e6:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:16
 1e0e2e8:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:16
 1e0e2ea:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x828 : 1e0e2f6 >
 1e0e2ec:    52 42             	r2 = [r1 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:31
 1e0e2ee:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x828 : 1e0e2f6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:31
 1e0e2f0:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:621:36
 1e0e2f2:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:621:13
 1e0e2f4:    82 00             	call r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:621:13
 1e0e2f6:    e6 f2 f5 1f       	if (r6 != r14) goto -22 <suppress_tick_and_sleep+0x816 : 1e0e2e4 >
 1e0e2fa:    b0 75             	r0 = 91			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:744:17
 1e0e2fc:    bf f3 d1 f6       	call -4702 <putchar : 1e0d0a2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:744:17
 1e0e300:    20 f9 bb 77       	r0 = b[r7 + 1979] (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:746:17
 1e0e304:    f0 ef d3 cf       	ifs (r0 > -1) goto -90 <suppress_tick_and_sleep+0x7E0 : 1e0e2ae >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:746:17
 1e0e308:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:748:17
 1e0e30a:    10 b3             	r0 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:748:17
 1e0e30c:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:748:17
 1e0e30e:    d0 75             	r0 = 93			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:750:17
 1e0e310:    bf f3 c7 f6       	call -4722 <putchar : 1e0d0a2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:750:17
 1e0e314:    0d 18             	goto 26 <suppress_tick_and_sleep+0x862 : 1e0e330 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:750:17
 1e0e316:    03 20             	if (r0 == 0) goto 6 <suppress_tick_and_sleep+0x850 : 1e0e31e >
 1e0e318:    bf f3 fd ad       	call -41990 <__lp_timer_get_pass_time : 1e03f16 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:767:23
 1e0e31c:    0f 08             	r15 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:767:23
 1e0e31e:    00 6a             	r0 = b[r5 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0e320:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0e322:    08 6a             	b[r5 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0e324:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0e326:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0e328:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0e32a:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:182:5
 1e0e32c:    10 b3             	r0 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:182:5
 1e0e32e:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:182:5
 1e0e330:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:646:21
 1e0e332:    10 f9 30 e0       	b[r14 + 48] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:646:21
 1e0e336:    00 f6 0c e0       	r0 = [r14 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:647:5
 1e0e33a:    90 f2 0a 00       	if (r0 == r9) goto 20 <suppress_tick_and_sleep+0x884 : 1e0e352 >
 1e0e33e:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:648:16
 1e0e340:    04 40             	r4 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:648:16
 1e0e342:    04 22             	if (r1 == 0) goto 8 <suppress_tick_and_sleep+0x87E : 1e0e34c >
 1e0e344:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:31
 1e0e346:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:21
 1e0e348:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:13
 1e0e34a:    82 00             	call r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:13
 1e0e34c:    40 08             	r0 = r4
 1e0e34e:    94 f2 f6 1f       	if (r4 != r9) goto -20 <suppress_tick_and_sleep+0x870 : 1e0e33e >
 1e0e352:    00 6e             	r0 = b[r7 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0e354:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0e356:    08 6e             	b[r7 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0e358:    50 fc 20 00       	r0 = r5 + 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0e35c:    01 18             	goto 2 <suppress_tick_and_sleep+0x892 : 1e0e360 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0e35e:    02 00             	idle			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0e360:    31 60             	r1 = b[r0 + 3] (u)
 1e0e362:    03 f3 fc 1f       	if ((r1 & 8) == 0) goto -8 <suppress_tick_and_sleep+0x890 : 1e0e35e >
 1e0e366:    81 70             	r1 = 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0e368:    29 60             	b[r0 + 2] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0e36a:    01 f9 17 80       	r1 = b[r8 + 23] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0e36e:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0e370:    97 f3 12 c5       	call 3115556 <local_irq_enable : 106d98 >
 1e0e374:    97 f3 10 c5       	call 3115552 <local_irq_enable : 106d98 >			  ## port_overwrite.c:461:5
 1e0e378:    06 0a             	sp += 12			  ## port_overwrite.c:461:5
 1e0e37a:    5f 01             	{pc, r15-r4} = [sp++]			  ## port_overwrite.c:79:1


idle_hook:
 1e0e37c:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## port_overwrite.c:82:0
 1e0e382:    01 60             	r1 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0e384:    11 b3             	r1 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0e386:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0e388:    02 00             	idle			  ## port_overwrite.c:89:5
 1e0e38a:    20 00             	rts			  ## port_overwrite.c:93:1


__power_get_timeout:
 1e0e38c:    76 01             	[--sp] = {rets, r6-r4}			  ## port_overwrite.c:342:0
 1e0e38e:    c4 ff e0 01 e1 01 	r4 = 31523296 <uart : 1e101e0 >			  ## port_overwrite.c:342:0
 1e0e394:    c5 ff 74 01 e1 01 	r5 = 31523188 <syscfg_ops_end : 1e10174 >			  ## port_overwrite.c:342:0
 1e0e39a:    45 f2 0d 20       	if (r5 >= r4) goto 26 <__power_get_timeout+0x2C : 1e0e3b8 >			  ## port_overwrite.c:342:0
 1e0e39e:    16 70             	r6 = 1			  ## port_overwrite.c:342:0
 1e0e3a0:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1179:16
 1e0e3a2:    04 20             	if (r0 == 0) goto 8 <__power_get_timeout+0x20 : 1e0e3ac >
 1e0e3a4:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1183:13
 1e0e3a6:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1186:20
 1e0e3a8:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1186:17
 1e0e3aa:    56 b1             	r6 &= r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1186:17
 1e0e3ac:    c5 80             	r5 += 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1177:5
 1e0e3ae:    45 f2 f7 3f       	if (r5 < r4) goto -18 <__power_get_timeout+0x14 : 1e0e3a0 >
 1e0e3b2:    60 ff ff 69 2c 00 	if ((r6 & 255) == 0) goto 88 <__power_get_timeout+0x84 : 1e0e410 >
 1e0e3b8:    97 f3 60 c5       	call 3115712 <eTaskConfirmSleepModeStatus : 106e7c >			  ## port_overwrite.c:354:20
 1e0e3bc:    04 08             	r4 = r0			  ## port_overwrite.c:354:20
 1e0e3be:    97 f3 5b c5       	call 3115702 <prvGetExpectedIdleTime : 106e78 >			  ## port_overwrite.c:358:10
 1e0e3c2:    06 28             	if (r4 == 0) goto 12 <__power_get_timeout+0x44 : 1e0e3d0 >			  ## port_overwrite.c:358:10
 1e0e3c4:    24 e0 06 10       	if (r4 != 2) goto 12 <__power_get_timeout+0x48 : 1e0e3d4 >
 1e0e3c8:    bf f3 df ad       	call -42050 <wdt_close : 1e03f8a >			  ## port_overwrite.c:374:17
 1e0e3cc:    e4 07             	r4 = -2			  ## port_overwrite.c:374:17
 1e0e3ce:    05 18             	goto 10 <__power_get_timeout+0x4E : 1e0e3da >
 1e0e3d0:    04 70             	r4 = 0
 1e0e3d2:    03 18             	goto 6 <__power_get_timeout+0x4E : 1e0e3da >
 1e0e3d4:    01 fb 10 27       	r1 = 10000 <sys_timer_sem+0x48 : 2710 >			  ## port_overwrite.c:358:33
 1e0e3d8:    44 0e             	r4 = r0 * r1			  ## port_overwrite.c:358:33
 1e0e3da:    c0 ff f0 e0 1b 00 	r0 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## port_overwrite.c:380:16
 1e0e3e0:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:380:16
 1e0e3e2:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:382:18
 1e0e3e8:    10 f6 ec 50       	[r5 + 236] = r0			  ## port_overwrite.c:380:14
 1e0e3ec:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD754C : f4240 >			  ## port_overwrite.c:382:35
 1e0e3f2:    01 70             	r1 = 0			  ## port_overwrite.c:382:35
 1e0e3f4:    03 70             	r3 = 0			  ## port_overwrite.c:382:35
 1e0e3f6:    bf f3 11 ca       	call -27614 <__muldi3 : 1e0781c >			  ## port_overwrite.c:382:35
 1e0e3fa:    c2 ff 50 32 00 00 	r2 = 12880 <hdl.15 : 3250 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0e400:    02 44             	r2 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0e402:    03 70             	r3 = 0			  ## port_overwrite.c:382:47
 1e0e404:    bf f3 29 ca       	call -27566 <__udivdi3 : 1e0785a >			  ## port_overwrite.c:382:47
 1e0e408:    10 f6 e8 50       	[r5 + 232] = r0			  ## port_overwrite.c:382:18
 1e0e40c:    20 b8             	r0 = r4 - r0			  ## port_overwrite.c:384:8
 1e0e40e:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:393:1
 1e0e410:    00 70             	r0 = 0
 1e0e412:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:393:1


__power_suspend_post.1081:
 1e0e414:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:396:0
 1e0e41a:    11 70             	r1 = 1			  ## port_overwrite.c:397:27
 1e0e41c:    11 f9 21 00       	b[r0 + 33] = r1			  ## port_overwrite.c:397:27
 1e0e420:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:466:14
 1e0e426:    c0 f4 40 09       	[r0 + 0] = 64			  ## port_overwrite.c:466:14
 1e0e42a:    20 00             	rts			  ## port_overwrite.c:399:1


__power_resume.1082:
 1e0e42c:    78 01             	[--sp] = {rets, r8-r4}			  ## port_overwrite.c:402:0
 1e0e42e:    14 08             	r4 = r1			  ## port_overwrite.c:402:0
 1e0e430:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:402:0
 1e0e436:    c7 ff 50 32 00 00 	r7 = 12880 <hdl.15 : 3250 >			  ## port_overwrite.c:402:0
 1e0e43c:    e4 ef 04 10       	if (r4 != -2) goto 8 <__power_resume.1082+0x1C : 1e0e448 >			  ## port_overwrite.c:404:9
 1e0e440:    00 f6 e8 80       	r0 = [r8 + 232]
 1e0e444:    04 4e             	r4 = [r7 + 0]
 1e0e446:    1d 18             	goto 58 <__power_resume.1082+0x56 : 1e0e482 >
 1e0e448:    06 fb 10 27       	r6 = 10000 <sys_timer_sem+0x48 : 2710 >			  ## port_overwrite.c:409:28
 1e0e44c:    c0 fe 60 54       	r5 = r4 / r6 (u)			  ## port_overwrite.c:409:28
 1e0e450:    50 08             	r0 = r5			  ## port_overwrite.c:409:9
 1e0e452:    97 f3 15 c5       	call 3115562 <vTaskStepTick : 106e80 >			  ## port_overwrite.c:409:9
 1e0e456:    c0 ff b0 08 00 00 	r0 = 2224 <jiffies : 8b0 >			  ## port_overwrite.c:411:17
 1e0e45c:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:411:17
 1e0e45e:    51 09             	r1 += r5			  ## port_overwrite.c:411:17
 1e0e460:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:411:17
 1e0e462:    d0 fe 60 24       	r2 = r4 % r6 (u)			  ## port_overwrite.c:414:29
 1e0e466:    04 4e             	r4 = [r7 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0e468:    e1 df             	r1 = r4 >>> 31			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0e46a:    03 70             	r3 = 0			  ## port_overwrite.c:418:42
 1e0e46c:    40 08             	r0 = r4			  ## port_overwrite.c:418:42
 1e0e46e:    bf f3 d5 c9       	call -27734 <__muldi3 : 1e0781c >			  ## port_overwrite.c:418:42
 1e0e472:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD754C : f4240 >			  ## port_overwrite.c:418:67
 1e0e478:    03 70             	r3 = 0			  ## port_overwrite.c:418:67
 1e0e47a:    bf f3 ee c9       	call -27684 <__udivdi3 : 1e0785a >			  ## port_overwrite.c:418:67
 1e0e47e:    10 f6 e8 80       	[r8 + 232] = r0			  ## port_overwrite.c:418:22
 1e0e482:    01 f6 ec 80       	r1 = [r8 + 236]			  ## port_overwrite.c:474:10
 1e0e486:    10 09             	r0 += r1			  ## port_overwrite.c:474:19
 1e0e488:    41 76             	r1 = 100			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0e48a:    e0 fe 10 14       	r1 = r4 / r1 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0e48e:    12 fc fe ff       	r2 = r1 + -2			  ## port_overwrite.c:477:31
 1e0e492:    f1 8f             	r1 += -1			  ## port_overwrite.c:471:68
 1e0e494:    10 f2 01 30       	if (r0 < r1) goto 2 <__power_resume.1082+0x6E : 1e0e49a >
 1e0e498:    20 08             	r0 = r2			  ## port_overwrite.c:474:9
 1e0e49a:    c2 ff ec e0 1b 00 	r2 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >
 1e0e4a0:    18 44             	[r2 + 4] = r0
 1e0e4a2:    29 44             	[r2 + 8] = r1			  ## port_overwrite.c:484:14
 1e0e4a4:    c0 f4 41 29       	[r2 + 0] = 65			  ## port_overwrite.c:486:14
 1e0e4a8:    00 70             	r0 = 0			  ## port_overwrite.c:426:27
 1e0e4aa:    10 f9 21 80       	b[r8 + 33] = r0			  ## port_overwrite.c:426:27
 1e0e4ae:    58 01             	{pc, r8-r4} = [sp++]			  ## port_overwrite.c:427:1


pvPortVMallocStack:
 1e0e4b0:    7b 01             	[--sp] = {rets, r11-r4}			  ## heap_mmu.c:639:0
 1e0e4b2:    08 08             	r8 = r0			  ## heap_mmu.c:639:0
 1e0e4b4:    97 f3 72 c4       	call 3115236 <local_irq_disable : 106d9c >			  ## heap_mmu.c:645:5
 1e0e4b8:    08 00             	csync			  ## heap_mmu.c:645:5
 1e0e4ba:    f2 fd 38 98       	r9 = r8 >> 7			  ## heap_mmu.c:640:34
 1e0e4be:    e6 fd 00 09       	r0 = r9.l (u)			  ## heap_mmu.c:640:34
 1e0e4c2:    ca ff 50 29 00 00 	r10 = 10576 <stack_mem : 2950 >			  ## heap_mmu.c:640:34
 1e0e4c8:    05 f7 4a a0       	r5 = h[r10 + 74] (u)			  ## heap_mmu.c:640:34
 1e0e4cc:    01 f7 48 a0       	r1 = h[r10 + 72] (u)			  ## heap_mmu.c:649:28
 1e0e4d0:    04 70             	r4 = 0			  ## heap_mmu.c:649:28
 1e0e4d2:    1b 70             	r11 = 1			  ## heap_mmu.c:649:28
 1e0e4d4:    c7 ff e0 ff 00 00 	r7 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >			  ## heap_mmu.c:649:28
 1e0e4da:    63 04             	r3 = r1.l (u)			  ## heap_mmu.c:649:42
 1e0e4dc:    53 f2 13 20       	if (r3 >= r5) goto 38 <pvPortVMallocStack+0x56 : 1e0e506 >			  ## heap_mmu.c:649:5
 1e0e4e0:    e2 fd 70 31       	r3 = r1 & r7			  ## heap_mmu.c:650:29
 1e0e4e4:    db d0             	r3 = r3 >> 3			  ## heap_mmu.c:650:13
 1e0e4e6:    82 f6 00 3a       	r2 = [r3+r10]			  ## heap_mmu.c:650:13
 1e0e4ea:    23 fd 1f 19       	r3 = r1 & 31			  ## heap_mmu.c:650:43
 1e0e4ee:    f8 fd 30 6b       	r6 = r11 << r3			  ## heap_mmu.c:650:43
 1e0e4f2:    13 98             	r3 = r4 + 1			  ## heap_mmu.c:651:26
 1e0e4f4:    04 70             	r4 = 0			  ## heap_mmu.c:651:26
 1e0e4f6:    62 f0 01 00       	if ((r2 & r6) == 0) goto 2 <pvPortVMallocStack+0x4C : 1e0e4fc >			  ## heap_mmu.c:651:26
 1e0e4fa:    34 08             	r4 = r3			  ## heap_mmu.c:650:13
 1e0e4fc:    22 05             	r2 = r4.l (u)			  ## heap_mmu.c:655:13
 1e0e4fe:    11 80             	r1 += 1			  ## heap_mmu.c:655:13
 1e0e500:    02 f2 eb 3f       	if (r2 < r0) goto -42 <pvPortVMallocStack+0x2A : 1e0e4da >			  ## heap_mmu.c:655:13
 1e0e504:    03 18             	goto 6 <pvPortVMallocStack+0x5C : 1e0e50c >			  ## heap_mmu.c:655:13
 1e0e506:    8f f3 c6 a7       	call 2051980 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0e50a:    01 70             	r1 = 0			  ## cpu.h:148:5
 1e0e50c:    65 04             	r5 = r1.l (u)			  ## heap_mmu.c:663:18
 1e0e50e:    90 fb 90 95       	r9 = r5 - r9			  ## heap_mmu.c:663:27
 1e0e512:    e6 fd 00 69       	r6 = r9.l (u)			  ## heap_mmu.c:663:18
 1e0e516:    56 f2 16 20       	if (r6 >= r5) goto 44 <pvPortVMallocStack+0x96 : 1e0e546 >			  ## heap_mmu.c:663:18
 1e0e51a:    14 70             	r4 = 1
 1e0e51c:    8b fd 28 06       	r0 = uextra(r6, p:5, l:11)
 1e0e520:    80 c0             	r0 = r0 << 2
 1e0e522:    80 fb a0 70       	r7 = r0 + r10
 1e0e526:    00 4e             	r0 = [r7 + 0]
 1e0e528:    21 fd 1f 69       	r1 = r6 & 31
 1e0e52c:    f8 fd 10 34       	r3 = r4 << r1
 1e0e530:    30 f1 03 00       	if ((r0 & r3) != 0) goto 6 <pvPortVMallocStack+0x8A : 1e0e53a >
 1e0e534:    8f f3 af a7       	call 2051934 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0e538:    00 4e             	r0 = [r7 + 0]			  ## cpu.h:148:5
 1e0e53a:    e3 fd 30 00       	r0 = r0 & ~r3			  ## heap_mmu.c:669:37
 1e0e53e:    16 80             	r6 += 1			  ## heap_mmu.c:666:45
 1e0e540:    08 4e             	[r7 + 0] = r0			  ## heap_mmu.c:669:37
 1e0e542:    65 f2 eb 1f       	if (r5 != r6) goto -42 <pvPortVMallocStack+0x6C : 1e0e51c >			  ## heap_mmu.c:669:37
 1e0e546:    a0 fc 50 00       	r0 = r10 + 80
 1e0e54a:    01 70             	r1 = 0
 1e0e54c:    02 40             	r2 = [r0 + 0]			  ## heap_mmu.c:673:28
 1e0e54e:    10 24             	if (r2 == 0) goto 32 <pvPortVMallocStack+0xC0 : 1e0e570 >			  ## heap_mmu.c:673:28
 1e0e550:    11 80             	r1 += 1			  ## heap_mmu.c:672:46
 1e0e552:    80 80             	r0 += 8			  ## heap_mmu.c:672:19
 1e0e554:    e1 e0 fa 9f       	if (r1 <= 14) goto -12 <pvPortVMallocStack+0x9C : 1e0e54c >			  ## heap_mmu.c:672:19
 1e0e558:    f0 fd 38 09       	r0 = r9 << 7			  ## heap_mmu.c:689:54
 1e0e55c:    c1 ff 80 ff 7f 00 	r1 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:689:54
 1e0e562:    e2 fd 10 30       	r3 = r0 & r1			  ## heap_mmu.c:689:54
 1e0e566:    8f f3 96 a7       	call 2051884 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0e56a:    01 f6 3c a0       	r1 = [r10 + 60]			  ## cpu.h:148:5
 1e0e56e:    11 18             	goto 34 <pvPortVMallocStack+0xE2 : 1e0e592 >			  ## cpu.h:148:5
 1e0e570:    01 f6 3c a0       	r1 = [r10 + 60]			  ## heap_mmu.c:674:62
 1e0e574:    f0 fd 38 29       	r2 = r9 << 7			  ## heap_mmu.c:674:81
 1e0e578:    c3 ff 80 ff 7f 00 	r3 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:674:81
 1e0e57e:    53 b5             	r3 &= r2			  ## heap_mmu.c:674:81
 1e0e580:    c2 b2             	r2 = r1 + r3			  ## heap_mmu.c:674:68
 1e0e582:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:674:41
 1e0e584:    18 f6 04 00       	[r0 + 4] = r8			  ## heap_mmu.c:675:41
 1e0e588:    00 f9 c8 a0       	r0 = b[r10 + 200] (u)			  ## heap_mmu.c:676:34
 1e0e58c:    10 80             	r0 += 1			  ## heap_mmu.c:676:34
 1e0e58e:    10 f9 c8 a0       	b[r10 + 200] = r0			  ## heap_mmu.c:676:34
 1e0e592:    c5 b2             	r5 = r1 + r3			  ## heap_mmu.c:689:41
 1e0e594:    80 fb 80 05       	r0 = r5 + r8			  ## heap_mmu.c:691:33
 1e0e598:    00 88             	r0 += -128			  ## heap_mmu.c:691:47
 1e0e59a:    01 78             	r1 = 128			  ## heap_mmu.c:693:9
 1e0e59c:    97 f3 8e c4       	call 3115292 <vmalloc_ : 106ebc >			  ## heap_mmu.c:693:9
 1e0e5a0:    97 f3 fa c3       	call 3114996 <local_irq_enable : 106d98 >			  ## heap_mmu.c:697:5
 1e0e5a4:    50 08             	r0 = r5			  ## heap_mmu.c:699:5
 1e0e5a6:    5b 01             	{pc, r11-r4} = [sp++]			  ## heap_mmu.c:699:5


vPortVFreeStack:
 1e0e5a8:    7a 01             	[--sp] = {rets, r10-r4}			  ## heap_mmu.c:703:0
 1e0e5aa:    04 08             	r4 = r0			  ## heap_mmu.c:703:0
 1e0e5ac:    97 f3 f6 c3       	call 3114988 <local_irq_disable : 106d9c >			  ## heap_mmu.c:706:5
 1e0e5b0:    08 00             	csync			  ## heap_mmu.c:706:5
 1e0e5b2:    00 70             	r0 = 0			  ## heap_mmu.c:706:5
 1e0e5b4:    c2 ff 50 29 00 00 	r2 = 10576 <stack_mem : 2950 >			  ## heap_mmu.c:706:5
 1e0e5ba:    01 70             	r1 = 0			  ## heap_mmu.c:706:5
 1e0e5bc:    03 70             	r3 = 0			  ## heap_mmu.c:706:5
 1e0e5be:    85 b2             	r5 = r1 + r2			  ## heap_mmu.c:711:28
 1e0e5c0:    46 4b             	r6 = [r5 + 80]			  ## heap_mmu.c:711:28
 1e0e5c2:    46 f2 09 10       	if (r6 != r4) goto 18 <vPortVFreeStack+0x30 : 1e0e5d8 >			  ## heap_mmu.c:711:28
 1e0e5c6:    53 4b             	r3 = [r5 + 84]			  ## heap_mmu.c:713:41
 1e0e5c8:    48 4b             	[r5 + 80] = r0			  ## heap_mmu.c:715:41
 1e0e5ca:    58 4b             	[r5 + 84] = r0			  ## heap_mmu.c:716:41
 1e0e5cc:    05 f9 c8 20       	r5 = b[r2 + 200] (u)			  ## heap_mmu.c:717:34
 1e0e5d0:    f5 8f             	r5 += -1			  ## heap_mmu.c:717:34
 1e0e5d2:    15 f9 c8 20       	b[r2 + 200] = r5			  ## heap_mmu.c:717:34
 1e0e5d6:    db d1             	r3 = r3 >> 7			  ## heap_mmu.c:713:47
 1e0e5d8:    81 80             	r1 += 8			  ## heap_mmu.c:710:22
 1e0e5da:    81 e7 f0 1f       	if (r1 != 120) goto -32 <vPortVFreeStack+0x16 : 1e0e5be >			  ## heap_mmu.c:710:22
 1e0e5de:    f0 44             	r0 = [r2 + 60]			  ## heap_mmu.c:722:44
 1e0e5e0:    20 b8             	r0 = r4 - r0			  ## heap_mmu.c:722:31
 1e0e5e2:    89 fd 38 50       	r5 = uextra(r0, p:7, l:9)			  ## heap_mmu.c:722:22
 1e0e5e6:    e8 04             	r8 = r3.l (u)			  ## heap_mmu.c:724:47
 1e0e5e8:    80 fb 80 65       	r6 = r5 + r8			  ## heap_mmu.c:724:45
 1e0e5ec:    65 f2 19 20       	if (r5 >= r6) goto 50 <vPortVFreeStack+0x7A : 1e0e622 >			  ## heap_mmu.c:724:45
 1e0e5f0:    19 70             	r9 = 1
 1e0e5f2:    ca ff e0 ff 00 00 	r10 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >
 1e0e5f8:    50 08             	r0 = r5
 1e0e5fa:    e2 fd a0 15       	r1 = r5 & r10
 1e0e5fe:    c9 d0             	r1 = r1 >> 3
 1e0e600:    87 b2             	r7 = r1 + r2
 1e0e602:    01 4e             	r1 = [r7 + 0]
 1e0e604:    20 fd 1f 09       	r0 = r0 & 31
 1e0e608:    f8 fd 00 39       	r3 = r9 << r0
 1e0e60c:    31 f0 03 00       	if ((r1 & r3) == 0) goto 6 <vPortVFreeStack+0x6E : 1e0e616 >
 1e0e610:    8f f3 41 a7       	call 2051714 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0e614:    01 4e             	r1 = [r7 + 0]			  ## cpu.h:148:5
 1e0e616:    51 b6             	r1 |= r3			  ## heap_mmu.c:727:37
 1e0e618:    15 80             	r5 += 1			  ## heap_mmu.c:724:60
 1e0e61a:    60 05             	r0 = r5.l (u)			  ## heap_mmu.c:724:30
 1e0e61c:    09 4e             	[r7 + 0] = r1			  ## heap_mmu.c:727:37
 1e0e61e:    60 f2 ec 3f       	if (r0 < r6) goto -40 <vPortVFreeStack+0x52 : 1e0e5fa >			  ## heap_mmu.c:727:37
 1e0e622:    f0 fd 38 18       	r1 = r8 << 7
 1e0e626:    40 08             	r0 = r4			  ## heap_mmu.c:734:5
 1e0e628:    97 f3 4a c4       	call 3115156 <vfree_ : 106ec0 >			  ## heap_mmu.c:734:5
 1e0e62c:    1a 01             	{rets, r10-r4} = [sp++]			  ## heap_mmu.c:737:5
 1e0e62e:    d7 f3 b3 c3       	goto 3114854 <local_irq_enable : 106d98 >			  ## heap_mmu.c:737:5


zalloc:
 1e0e632:    75 01             	[--sp] = {rets, r5, r4}			  ## memory.c:42:0
 1e0e634:    04 08             	r4 = r0			  ## memory.c:42:0
 1e0e636:    28 fb 00 03       	r0 = rets			  ## memory.c:44:5
 1e0e63a:    40 08             	r0 = r4			  ## memory.c:46:11
 1e0e63c:    bf f3 f8 f7       	call -4112 <pvPortMalloc : 1e0d630 >			  ## memory.c:46:11
 1e0e640:    05 08             	r5 = r0			  ## memory.c:46:11
 1e0e642:    04 2a             	if (r5 == 0) goto 8 <zalloc+0x1A : 1e0e64c >
 1e0e644:    01 70             	r1 = 0			  ## memory.c:48:9
 1e0e646:    42 08             	r2 = r4			  ## memory.c:48:9
 1e0e648:    97 f3 52 c4       	call 3115172 <memset : 106ef0 >			  ## memory.c:48:9
 1e0e64c:    50 08             	r0 = r5			  ## memory.c:52:5
 1e0e64e:    55 01             	{pc, r5, r4} = [sp++]			  ## memory.c:52:5


tick_timer_init:
 1e0e650:    34 00             	[--sp] = rets			  ## port_overwrite.c:296:0
 1e0e652:    c2 ff 5e 34 00 00 	r2 = 13406 <begin_of_data : 345e >			  ## port_overwrite.c:297:5
 1e0e658:    30 70             	r0 = 3			  ## port_overwrite.c:297:5
 1e0e65a:    11 70             	r1 = 1			  ## port_overwrite.c:297:5
 1e0e65c:    bf f3 95 f9       	call -3286 <request_irq : 1e0d98a >			  ## port_overwrite.c:297:5
 1e0e660:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:297:5
 1e0e666:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:301:14
 1e0e66a:    c1 ff 50 32 00 00 	r1 = 12880 <hdl.15 : 3250 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0e670:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0e672:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0e674:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0e678:    f1 8f             	r1 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0e67a:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:302:14
 1e0e67c:    c0 f4 41 09       	[r0 + 0] = 65			  ## port_overwrite.c:304:14
 1e0e680:    30 00             	pc = [sp++]			  ## port_overwrite.c:305:1


vPortSysSleepInit:
 1e0e682:    34 00             	[--sp] = rets			  ## port_overwrite.c:450:0
 1e0e684:    c0 ff 4c 30 e1 01 	r0 = 31535180 <sys_power_ops : 1e1304c >			  ## port_overwrite.c:439:21
 1e0e68a:    bf f3 f2 af       	call -40988 <low_power_sys_get : 1e04672 >			  ## port_overwrite.c:439:21
 1e0e68e:    c1 ff 54 21 00 00 	r1 = 8532 <sys_low_power : 2154 >			  ## port_overwrite.c:439:19
 1e0e694:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:439:19
 1e0e696:    30 00             	pc = [sp++]			  ## port_overwrite.c:452:1


cbuf_init:
 1e0e698:    03 70             	r3 = 0			  ## circular_buf.c:261:0
 1e0e69a:    6b 40             	[r0 + 24] = r3			  ## circular_buf.c:262:23
 1e0e69c:    5b 40             	[r0 + 20] = r3			  ## circular_buf.c:263:22
 1e0e69e:    09 40             	[r0 + 0] = r1			  ## circular_buf.c:264:20
 1e0e6a0:    29 40             	[r0 + 8] = r1			  ## circular_buf.c:265:23
 1e0e6a2:    39 40             	[r0 + 12] = r1			  ## circular_buf.c:266:24
 1e0e6a4:    49 40             	[r0 + 16] = r1			  ## circular_buf.c:267:22
 1e0e6a6:    21 09             	r1 += r2			  ## circular_buf.c:268:30
 1e0e6a8:    19 40             	[r0 + 4] = r1			  ## circular_buf.c:268:18
 1e0e6aa:    7a 40             	[r0 + 28] = r2			  ## circular_buf.c:269:24
 1e0e6ac:    8b 40             	[r0 + 32] = r3			  ## spinlock.h:70:18
 1e0e6ae:    20 00             	rts			  ## circular_buf.c:271:1


cbuf_write:
 1e0e6b0:    77 01             	[--sp] = {rets, r7-r4}			  ## circular_buf.c:127:0
 1e0e6b2:    24 08             	r4 = r2			  ## circular_buf.c:127:0
 1e0e6b4:    16 08             	r6 = r1			  ## circular_buf.c:127:0
 1e0e6b6:    05 08             	r5 = r0			  ## circular_buf.c:127:0
 1e0e6b8:    09 2a             	if (r5 == 0) goto 18 <cbuf_write+0x1C : 1e0e6cc >			  ## circular_buf.c:127:0
 1e0e6ba:    97 f3 6f c3       	call 3114718 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e6be:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:138:40
 1e0e6c0:    71 4a             	r1 = [r5 + 28]			  ## circular_buf.c:138:19
 1e0e6c2:    20 b2             	r0 = r1 - r0			  ## circular_buf.c:138:29
 1e0e6c4:    40 f2 04 20       	if (r0 >= r4) goto 8 <cbuf_write+0x20 : 1e0e6d0 >			  ## circular_buf.c:138:9
 1e0e6c8:    97 f3 66 c3       	call 3114700 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e6cc:    04 70             	r4 = 0
 1e0e6ce:    21 18             	goto 66 <cbuf_write+0x62 : 1e0e712 >
 1e0e6d0:    30 4a             	r0 = [r5 + 12]			  ## circular_buf.c:143:48
 1e0e6d2:    11 4a             	r1 = [r5 + 4]			  ## circular_buf.c:143:28
 1e0e6d4:    27 b2             	r7 = r1 - r0			  ## circular_buf.c:143:32
 1e0e6d6:    47 f2 0c 20       	if (r7 >= r4) goto 24 <cbuf_write+0x42 : 1e0e6f2 >
 1e0e6da:    61 08             	r1 = r6			  ## circular_buf.c:149:9
 1e0e6dc:    72 08             	r2 = r7			  ## circular_buf.c:149:9
 1e0e6de:    97 f3 01 c4       	call 3115010 <memcpy : 106ee4 >			  ## circular_buf.c:149:9
 1e0e6e2:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:150:28
 1e0e6e4:    c1 bd             	r1 = r6 + r7			  ## circular_buf.c:150:47
 1e0e6e6:    e6 b9             	r6 = r4 - r7			  ## circular_buf.c:148:26
 1e0e6e8:    62 08             	r2 = r6			  ## circular_buf.c:150:9
 1e0e6ea:    97 f3 fb c3       	call 3114998 <memcpy : 106ee4 >			  ## circular_buf.c:150:9
 1e0e6ee:    57 08             	r7 = r5			  ## circular_buf.c:150:9
 1e0e6f0:    06 18             	goto 12 <cbuf_write+0x4E : 1e0e6fe >
 1e0e6f2:    c7 9a             	r7 = r5 + 12			  ## circular_buf.c:143:48
 1e0e6f4:    61 08             	r1 = r6			  ## circular_buf.c:145:9
 1e0e6f6:    42 08             	r2 = r4			  ## circular_buf.c:145:9
 1e0e6f8:    97 f3 f4 c3       	call 3114984 <memcpy : 106ee4 >			  ## circular_buf.c:145:9
 1e0e6fc:    46 08             	r6 = r4			  ## circular_buf.c:145:9
 1e0e6fe:    00 4e             	r0 = [r7 + 0]
 1e0e700:    60 09             	r0 += r6
 1e0e702:    38 4a             	[r5 + 12] = r0			  ## circular_buf.c:146:28
 1e0e704:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:154:23
 1e0e706:    41 09             	r1 += r4			  ## circular_buf.c:154:23
 1e0e708:    69 4a             	[r5 + 24] = r1			  ## circular_buf.c:154:23
 1e0e70a:    59 4a             	[r5 + 20] = r1			  ## circular_buf.c:155:22
 1e0e70c:    48 4a             	[r5 + 16] = r0			  ## circular_buf.c:156:22
 1e0e70e:    97 f3 43 c3       	call 3114630 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e712:    40 08             	r0 = r4			  ## circular_buf.c:160:1
 1e0e714:    57 01             	{pc, r7-r4} = [sp++]			  ## circular_buf.c:160:1


cbuf_get_data_size:
 1e0e716:    20 00             	rts			  ## circular_buf.c:327:0


cbuf_read:
 1e0e718:    79 01             	[--sp] = {rets, r9-r4}			  ## circular_buf.c:22:0
 1e0e71a:    24 08             	r4 = r2			  ## circular_buf.c:22:0
 1e0e71c:    18 08             	r8 = r1			  ## circular_buf.c:22:0
 1e0e71e:    05 08             	r5 = r0			  ## circular_buf.c:22:0
 1e0e720:    0d 2a             	if (r5 == 0) goto 26 <cbuf_read+0x24 : 1e0e73c >			  ## circular_buf.c:22:0
 1e0e722:    10 4a             	r0 = [r5 + 4]			  ## circular_buf.c:33:49
 1e0e724:    27 4a             	r7 = [r5 + 8]			  ## circular_buf.c:33:23
 1e0e726:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:27:29
 1e0e728:    07 f2 02 30       	if (r7 < r0) goto 4 <cbuf_read+0x18 : 1e0e730 >
 1e0e72c:    07 4a             	r7 = [r5 + 0]			  ## circular_buf.c:34:44
 1e0e72e:    2f 4a             	[r5 + 8] = r7			  ## circular_buf.c:34:27
 1e0e730:    41 f2 06 20       	if (r1 >= r4) goto 12 <cbuf_read+0x28 : 1e0e740 >			  ## circular_buf.c:37:9
 1e0e734:    01 70             	r1 = 0			  ## circular_buf.c:38:9
 1e0e736:    80 08             	r0 = r8			  ## circular_buf.c:38:9
 1e0e738:    97 f3 da c3       	call 3114932 <memset : 106ef0 >			  ## circular_buf.c:38:9
 1e0e73c:    04 70             	r4 = 0
 1e0e73e:    23 18             	goto 70 <cbuf_read+0x6E : 1e0e786 >
 1e0e740:    e0 b1             	r0 = r0 - r7			  ## circular_buf.c:45:34
 1e0e742:    46 08             	r6 = r4			  ## circular_buf.c:46:9
 1e0e744:    40 f2 01 80       	if (r0 > r4) goto 2 <cbuf_read+0x32 : 1e0e74a >			  ## circular_buf.c:46:9
 1e0e748:    06 08             	r6 = r0			  ## circular_buf.c:46:9
 1e0e74a:    80 08             	r0 = r8			  ## circular_buf.c:52:5
 1e0e74c:    71 08             	r1 = r7			  ## circular_buf.c:52:5
 1e0e74e:    62 08             	r2 = r6			  ## circular_buf.c:52:5
 1e0e750:    97 f3 c8 c3       	call 3114896 <memcpy : 106ee4 >			  ## circular_buf.c:52:5
 1e0e754:    a9 b9             	r9 = r4 - r6			  ## circular_buf.c:49:9
 1e0e756:    09 e0 0a 00       	if (r9 == 0) goto 20 <cbuf_read+0x56 : 1e0e76e >
 1e0e75a:    01 4a             	r1 = [r5 + 0]			  ## circular_buf.c:57:50
 1e0e75c:    80 fb 60 08       	r0 = r8 + r6			  ## circular_buf.c:57:29
 1e0e760:    92 08             	r2 = r9			  ## circular_buf.c:57:9
 1e0e762:    97 f3 bf c3       	call 3114878 <memcpy : 106ee4 >			  ## circular_buf.c:57:9
 1e0e766:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:58:29
 1e0e768:    80 fb 90 60       	r6 = r0 + r9			  ## circular_buf.c:58:35
 1e0e76c:    01 18             	goto 2 <cbuf_read+0x58 : 1e0e770 >
 1e0e76e:    76 09             	r6 += r7			  ## circular_buf.c:55:18
 1e0e770:    97 f3 14 c3       	call 3114536 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e774:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:62:23
 1e0e776:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:62:23
 1e0e778:    68 4a             	[r5 + 24] = r0			  ## circular_buf.c:62:23
 1e0e77a:    50 4a             	r0 = [r5 + 20]			  ## circular_buf.c:63:22
 1e0e77c:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:63:22
 1e0e77e:    58 4a             	[r5 + 20] = r0			  ## circular_buf.c:63:22
 1e0e780:    2e 4a             	[r5 + 8] = r6			  ## circular_buf.c:64:23
 1e0e782:    97 f3 09 c3       	call 3114514 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e786:    40 08             	r0 = r4			  ## circular_buf.c:68:1
 1e0e788:    59 01             	{pc, r9-r4} = [sp++]			  ## circular_buf.c:68:1


event_pool_init:
 1e0e78a:    34 00             	[--sp] = rets			  ## event.c:69:0
 1e0e78c:    00 fb 24 01       	r0 = 292 <DRIVER_RAM_TOTAL+0x32 : 124 >			  ## event.c:70:26
 1e0e790:    bf f3 3f f8       	call -3970 <malloc : 1e0d812 >			  ## event.c:70:26
 1e0e794:    c1 ff 84 08 00 00 	r1 = 2180 <handl : 884 >			  ## event.c:70:24
 1e0e79a:    48 42             	[r1 + 16] = r0			  ## event.c:70:24
 1e0e79c:    08 20             	if (r0 == 0) goto 16 <event_pool_init+0x24 : 1e0e7ae >			  ## event.c:70:24
 1e0e79e:    01 fc 24 00       	r1 = r0 + 36			  ## event.c:75:54
 1e0e7a2:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## event.c:75:5
 1e0e7a6:    bf f3 77 ff       	call -274 <cbuf_init : 1e0e698 >			  ## event.c:75:5
 1e0e7aa:    00 70             	r0 = 0			  ## event.c:75:5
 1e0e7ac:    30 00             	pc = [sp++]			  ## event.c:78:1
 1e0e7ae:    40 07             	r0 = -12
 1e0e7b0:    30 00             	pc = [sp++]			  ## event.c:78:1


sys_event_notify:
 1e0e7b2:    75 01             	[--sp] = {rets, r5, r4}			  ## event.c:103:0
 1e0e7b4:    28 fb 00 13       	r1 = rets			  ## event.c:105:5
 1e0e7b8:    c5 ff 84 08 00 00 	r5 = 2180 <handl : 884 >
 1e0e7be:    41 4a             	r1 = [r5 + 16]			  ## event.c:109:18
 1e0e7c0:    04 08             	r4 = r0
 1e0e7c2:    0d 22             	if (r1 == 0) goto 26 <sys_event_notify+0x2C : 1e0e7de >
 1e0e7c4:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:115:16
 1e0e7c6:    10 e0 22 10       	if (r0 != 1) goto 68 <sys_event_notify+0x5C : 1e0e80e >			  ## event.c:115:16
 1e0e7ca:    97 f3 e7 c2       	call 3114446 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e7ce:    30 6a             	r0 = b[r5 + 3] (u)			  ## event.c:131:21
 1e0e7d0:    09 20             	if (r0 == 0) goto 18 <sys_event_notify+0x32 : 1e0e7e4 >			  ## event.c:131:13
 1e0e7d2:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:132:30
 1e0e7d4:    30 e0 10 00       	if (r0 == 3) goto 32 <sys_event_notify+0x46 : 1e0e7f8 >			  ## event.c:132:30
 1e0e7d8:    10 e0 0b 00       	if (r0 == 1) goto 22 <sys_event_notify+0x40 : 1e0e7f2 >
 1e0e7dc:    11 18             	goto 34 <sys_event_notify+0x4E : 1e0e800 >
 1e0e7de:    d5 17             	call -86 <event_pool_init : 1e0e78a >			  ## event.c:110:13
 1e0e7e0:    23 30             	if (r0 != 0) goto 70 <sys_event_notify+0x76 : 1e0e828 >			  ## event.c:110:13
 1e0e7e2:    f0 1f             	goto -32 <sys_event_notify+0x12 : 1e0e7c4 >			  ## event.c:110:13
 1e0e7e4:    40 6a             	r0 = b[r5 + 4] (u)			  ## event.c:142:28
 1e0e7e6:    0f 20             	if (r0 == 0) goto 30 <sys_event_notify+0x54 : 1e0e806 >			  ## event.c:142:28
 1e0e7e8:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:143:30
 1e0e7ea:    30 e0 0c 00       	if (r0 == 3) goto 24 <sys_event_notify+0x54 : 1e0e806 >			  ## event.c:143:30
 1e0e7ee:    10 e0 03 10       	if (r0 != 1) goto 6 <sys_event_notify+0x46 : 1e0e7f8 >
 1e0e7f2:    30 48             	r0 = [r4 + 12]
 1e0e7f4:    58 6a             	b[r5 + 5] = r0
 1e0e7f6:    04 18             	goto 8 <sys_event_notify+0x4E : 1e0e800 >
 1e0e7f8:    30 48             	r0 = [r4 + 12]
 1e0e7fa:    51 6a             	r1 = b[r5 + 5] (u)
 1e0e7fc:    01 f2 03 10       	if (r1 != r0) goto 6 <sys_event_notify+0x54 : 1e0e806 >
 1e0e800:    15 01             	{rets, r5, r4} = [sp++]
 1e0e802:    d7 f3 c9 c2       	goto 3114386 <local_irq_enable : 106d98 >
 1e0e806:    f0 7f             	r0 = 255			  ## event.c:154:28
 1e0e808:    58 6a             	b[r5 + 5] = r0			  ## event.c:154:28
 1e0e80a:    97 f3 c5 c2       	call 3114378 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e80e:    40 08             	r0 = r4			  ## event.c:180:9
 1e0e810:    80 f3 d6 65       	call 52140 <sys_event_recode : 1e1b3c0 >			  ## event.c:180:9
 1e0e814:    09 30             	if (r0 != 0) goto 18 <sys_event_notify+0x76 : 1e0e828 >			  ## event.c:180:9
 1e0e816:    40 4a             	r0 = [r5 + 16]			  ## event.c:184:30
 1e0e818:    82 71             	r2 = 24			  ## event.c:184:11
 1e0e81a:    41 08             	r1 = r4			  ## event.c:184:11
 1e0e81c:    bf f3 48 ff       	call -368 <cbuf_write : 1e0e6b0 >			  ## event.c:184:11
 1e0e820:    50 4a             	r0 = [r5 + 20]			  ## event.c:191:17
 1e0e822:    02 20             	if (r0 == 0) goto 4 <sys_event_notify+0x76 : 1e0e828 >			  ## event.c:191:17
 1e0e824:    97 f3 f2 c2       	call 3114468 <os_sem_post : 106e0c >			  ## event.c:192:9
 1e0e828:    55 01             	{pc, r5, r4} = [sp++]			  ## event.c:194:1


sys_key_event_disable:
 1e0e82a:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:357:0
 1e0e82c:    f4 0b             	sp += -24			  ## event.c:357:0
 1e0e82e:    97 f3 b5 c2       	call 3114346 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e832:    c5 ff 84 08 00 00 	r5 = 2180 <handl : 884 >			  ## spinlock.h:77:5
 1e0e838:    10 70             	r0 = 1			  ## event.c:364:25
 1e0e83a:    38 6a             	b[r5 + 3] = r0			  ## event.c:364:25
 1e0e83c:    f6 7f             	r6 = 255			  ## event.c:365:24
 1e0e83e:    5e 6a             	b[r5 + 5] = r6			  ## event.c:365:24
 1e0e840:    40 4a             	r0 = [r5 + 16]			  ## event.c:367:43
 1e0e842:    60 40             	r0 = [r0 + 24]			  ## event.c:367:43
 1e0e844:    bf f3 67 ff       	call -306 <cbuf_get_data_size : 1e0e716 >			  ## event.c:367:16
 1e0e848:    04 08             	r4 = r0			  ## event.c:367:16
 1e0e84a:    1c 28             	if (r4 == 0) goto 56 <sys_key_event_disable+0x5A : 1e0e884 >
 1e0e84c:    40 4a             	r0 = [r5 + 16]			  ## event.c:370:33
 1e0e84e:    01 a0             	r1 = sp + 0			  ## event.c:370:33
 1e0e850:    82 71             	r2 = 24			  ## event.c:370:15
 1e0e852:    bf f3 61 ff       	call -318 <cbuf_read : 1e0e718 >			  ## event.c:370:15
 1e0e856:    16 20             	if (r0 == 0) goto 44 <sys_key_event_disable+0x5A : 1e0e884 >
 1e0e858:    81 f5 00 00       	r1 = h[sp] (u)			  ## event.c:375:19
 1e0e85c:    24 b8             	r4 = r4 - r0			  ## event.c:374:18
 1e0e85e:    11 e0 0b 10       	if (r1 != 1) goto 22 <sys_key_event_disable+0x4E : 1e0e878 >
 1e0e862:    80 f5 0a 00       	r0 = h[sp+10] (u)			  ## event.c:376:29
 1e0e866:    30 e0 04 00       	if (r0 == 3) goto 8 <sys_key_event_disable+0x48 : 1e0e872 >			  ## event.c:376:17
 1e0e86a:    10 e0 0a 10       	if (r0 != 1) goto 20 <sys_key_event_disable+0x58 : 1e0e882 >
 1e0e86e:    36 02             	r6 = [sp+12]			  ## event.c:377:44
 1e0e870:    08 18             	goto 16 <sys_key_event_disable+0x58 : 1e0e882 >			  ## event.c:377:44
 1e0e872:    30 02             	r0 = [sp+12]			  ## event.c:379:49
 1e0e874:    06 f2 05 00       	if (r6 == r0) goto 10 <sys_key_event_disable+0x58 : 1e0e882 >			  ## event.c:379:49
 1e0e878:    40 4a             	r0 = [r5 + 16]			  ## event.c:386:28
 1e0e87a:    01 a0             	r1 = sp + 0			  ## event.c:386:28
 1e0e87c:    82 71             	r2 = 24			  ## event.c:386:9
 1e0e87e:    bf f3 17 ff       	call -466 <cbuf_write : 1e0e6b0 >			  ## event.c:386:9
 1e0e882:    e4 39             	if (r4 != 0) goto -56 <sys_key_event_disable+0x22 : 1e0e84c >
 1e0e884:    97 f3 88 c2       	call 3114256 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e888:    0c 0a             	sp += 24			  ## spinlock.h:88:5
 1e0e88a:    56 01             	{pc, r6-r4} = [sp++]			  ## event.c:390:1


sys_key_event_enable:
 1e0e88c:    34 00             	[--sp] = rets			  ## event.c:393:0
 1e0e88e:    97 f3 85 c2       	call 3114250 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e892:    c0 ff 84 08 00 00 	r0 = 2180 <handl : 884 >			  ## event.c:395:25
 1e0e898:    01 70             	r1 = 0			  ## event.c:395:25
 1e0e89a:    39 60             	b[r0 + 3] = r1			  ## event.c:395:25
 1e0e89c:    88 01             	{rets} = [sp++]			  ## spinlock.h:88:5
 1e0e89e:    d7 f3 7b c2       	goto 3114230 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_event_init:
 1e0e8a2:    77 01             	[--sp] = {rets, r7-r4}			  ## event.c:674:0
 1e0e8a4:    c5 ff 84 08 00 00 	r5 = 2180 <handl : 884 >			  ## event.c:674:0
 1e0e8aa:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:678:17
 1e0e8ac:    04 70             	r4 = 0			  ## event.c:678:17
 1e0e8ae:    2c 30             	if (r0 != 0) goto 88 <sys_event_init+0x66 : 1e0e908 >			  ## event.c:678:17
 1e0e8b0:    14 70             	r4 = 1			  ## event.c:682:20
 1e0e8b2:    0c 6a             	b[r5 + 0] = r4			  ## event.c:682:20
 1e0e8b4:    f0 7f             	r0 = 255			  ## event.c:683:24
 1e0e8b6:    58 6a             	b[r5 + 5] = r0			  ## event.c:683:24
 1e0e8b8:    06 70             	r6 = 0			  ## event.c:683:24
 1e0e8ba:    3e 4a             	[r5 + 12] = r6			  ## event.c:684:27
 1e0e8bc:    6e 4a             	[r5 + 24] = r6			  ## spinlock.h:70:18
 1e0e8be:    c7 9b             	r7 = r5 + 28			  ## list.h:188:16
 1e0e8c0:    7f 4a             	[r5 + 28] = r7			  ## list.h:188:16
 1e0e8c2:    8f 4a             	[r5 + 32] = r7			  ## list.h:189:16
 1e0e8c4:    80 73             	r0 = 56			  ## event.c:688:33
 1e0e8c6:    bf f3 a4 f7       	call -4280 <malloc : 1e0d812 >			  ## event.c:688:33
 1e0e8ca:    1d 20             	if (r0 == 0) goto 58 <sys_event_init+0x64 : 1e0e906 >			  ## event.c:688:33
 1e0e8cc:    4c 61             	b[r0 + 20] = r4			  ## event.c:693:16
 1e0e8ce:    3e 40             	[r0 + 12] = r6			  ## event.c:694:20
 1e0e8d0:    88 4a             	[r5 + 32] = r0			  ## list.h:137:16
 1e0e8d2:    0f 40             	[r0 + 0] = r7			  ## list.h:138:16
 1e0e8d4:    1f 40             	[r0 + 4] = r7			  ## list.h:139:16
 1e0e8d6:    78 4a             	[r5 + 28] = r0			  ## list.h:140:16
 1e0e8d8:    81 4a             	r1 = [r5 + 32]
 1e0e8da:    14 f9 30 00       	b[r0 + 48] = r4			  ## event.c:693:16
 1e0e8de:    ae 40             	[r0 + 40] = r6			  ## event.c:694:20
 1e0e8e0:    7f 40             	[r0 + 28] = r7			  ## list.h:138:16
 1e0e8e2:    89 40             	[r0 + 32] = r1			  ## list.h:139:16
 1e0e8e4:    c0 81             	r0 += 28			  ## event.c:696:10
 1e0e8e6:    08 42             	[r1 + 0] = r0			  ## list.h:140:16
 1e0e8e8:    88 4a             	[r5 + 32] = r0
 1e0e8ea:    40 4a             	r0 = [r5 + 16]			  ## event.c:703:18
 1e0e8ec:    01 30             	if (r0 != 0) goto 2 <sys_event_init+0x4E : 1e0e8f0 >			  ## event.c:703:18
 1e0e8ee:    4d 17             	call -358 <event_pool_init : 1e0e78a >			  ## event.c:704:9
 1e0e8f0:    c0 ff 0c e9 e0 01 	r0 = 31516940 <sys_event_task : 1e0e90c >			  ## event.c:706:5
 1e0e8f6:    c2 ff 59 23 e1 01 	r2 = 31531865 <update_target_end+0x2129 : 1e12359 >			  ## event.c:706:5
 1e0e8fc:    01 70             	r1 = 0			  ## event.c:706:5
 1e0e8fe:    04 70             	r4 = 0			  ## event.c:706:5
 1e0e900:    80 f3 23 01       	call 582 <task_create : 1e0eb4a >			  ## event.c:706:5
 1e0e904:    01 18             	goto 2 <sys_event_init+0x66 : 1e0e908 >			  ## event.c:706:5
 1e0e906:    44 07             	r4 = -12
 1e0e908:    40 08             	r0 = r4			  ## event.c:709:1
 1e0e90a:    57 01             	{pc, r7-r4} = [sp++]			  ## event.c:709:1


sys_event_task:
 1e0e90c:    f4 0b             	sp += -24			  ## event.c:623:0
 1e0e90e:    00 75             	r0 = 80			  ## event.c:625:19
 1e0e910:    bf f3 7f f7       	call -4354 <malloc : 1e0d812 >			  ## event.c:625:19
 1e0e914:    04 08             	r4 = r0			  ## event.c:625:19
 1e0e916:    02 38             	if (r4 != 0) goto 4 <sys_event_task+0x10 : 1e0e91c >			  ## event.c:625:19
 1e0e918:    8f f3 bd a5       	call 2050938 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0e91c:    01 70             	r1 = 0			  ## event.c:628:5
 1e0e91e:    08 70             	r8 = 0			  ## event.c:628:5
 1e0e920:    40 08             	r0 = r4			  ## event.c:628:5
 1e0e922:    97 f3 6d c2       	call 3114202 <os_sem_create : 106e00 >			  ## event.c:628:5
 1e0e926:    c9 ff 84 08 00 00 	r9 = 2180 <handl : 884 >			  ## event.c:628:5
 1e0e92c:    14 f6 14 90       	[r9 + 20] = r4			  ## event.c:629:17
 1e0e930:    c4 ff 58 21 00 00 	r4 = 8536 <event : 2158 >			  ## event.c:629:17
 1e0e936:    cf ff 20 01 e1 01 	r15 = 31523104 <syscfg_ops_begin : 1e10120 >			  ## event.c:629:17
 1e0e93c:    97 f3 2e c2       	call 3114076 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e940:    00 f6 10 90       	r0 = [r9 + 16]			  ## event.c:635:33
 1e0e944:    82 71             	r2 = 24			  ## event.c:635:15
 1e0e946:    41 08             	r1 = r4			  ## event.c:635:15
 1e0e948:    bf f3 e6 fe       	call -564 <cbuf_read : 1e0e718 >			  ## event.c:635:15
 1e0e94c:    b0 20             	if (r0 == 0) goto 352 <sys_event_task+0x1A2 : 1e0eaae >
 1e0e94e:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:640:23
 1e0e950:    10 e0 04 10       	if (r0 != 1) goto 8 <sys_event_task+0x50 : 1e0e95c >
 1e0e954:    00 f9 06 90       	r0 = b[r9 + 6] (u)			  ## event.c:641:44
 1e0e958:    10 f9 04 90       	b[r9 + 4] = r0			  ## event.c:641:34
 1e0e95c:    97 f3 1c c2       	call 3114040 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e960:    00 75             	r0 = 80			  ## event.c:531:24
 1e0e962:    bf f3 56 f7       	call -4436 <malloc : 1e0d812 >			  ## event.c:531:24
 1e0e966:    0d 08             	r13 = r0			  ## event.c:531:24
 1e0e968:    02 30             	if (r0 != 0) goto 4 <sys_event_task+0x62 : 1e0e96e >			  ## event.c:531:24
 1e0e96a:    8f f3 94 a5       	call 2050856 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0e96e:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:535:21
 1e0e972:    c0 ff 20 01 e1 01 	r0 = 31523104 <syscfg_ops_begin : 1e10120 >			  ## event.c:537:5
 1e0e978:    f0 f2 0d 20       	if (r0 >= r15) goto 26 <sys_event_task+0x8A : 1e0e996 >			  ## event.c:537:5
 1e0e97c:    05 08             	r5 = r0
 1e0e97e:    00 4a             	r0 = [r5 + 0]			  ## event.c:538:16
 1e0e980:    01 58             	r1 = h[r4 + 0] (u)			  ## event.c:538:29
 1e0e982:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <sys_event_task+0x84 : 1e0e990 >			  ## event.c:538:29
 1e0e986:    11 4a             	r1 = [r5 + 4]			  ## event.c:539:16
 1e0e988:    40 08             	r0 = r4			  ## event.c:539:13
 1e0e98a:    81 00             	call r1			  ## event.c:539:13
 1e0e98c:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:540:24
 1e0e98e:    97 30             	if (r0 != 0) goto 302 <sys_event_task+0x1B2 : 1e0eabe >			  ## event.c:540:24
 1e0e990:    85 80             	r5 += 8			  ## event.c:537:5
 1e0e992:    f5 f2 f4 3f       	if (r5 < r15) goto -24 <sys_event_task+0x72 : 1e0e97e >
 1e0e996:    0e f6 0c 90       	r14 = [r9 + 12]			  ## event.c:547:29
 1e0e99a:    97 f3 ff c1       	call 3113982 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e99e:    07 f6 1c 90       	r7 = [r9 + 28]			  ## event.c:551:5
 1e0e9a2:    95 fc 1c 00       	r5 = r9 + 28			  ## event.c:551:5
 1e0e9a6:    57 f2 71 00       	if (r7 == r5) goto 226 <sys_event_task+0x180 : 1e0ea8c >			  ## event.c:551:5
 1e0e9aa:    0c f7 00 40       	r12 = h[r4 + 0] (u)
 1e0e9ae:    02 f9 01 90       	r2 = b[r9 + 1] (u)
 1e0e9b2:    10 70             	r0 = 1
 1e0e9b4:    11 70             	r1 = 1
 1e0e9b6:    c2 f0 01 00       	if ((r2 & r12) == 0) goto 2 <sys_event_task+0xB0 : 1e0e9bc >
 1e0e9ba:    01 70             	r1 = 0
 1e0e9bc:    03 f9 02 90       	r3 = b[r9 + 2] (u)
 1e0e9c0:    12 70             	r2 = 1
 1e0e9c2:    01 36             	if (r3 != 0) goto 2 <sys_event_task+0xBA : 1e0e9c6 >
 1e0e9c4:    02 70             	r2 = 0
 1e0e9c6:    51 b4             	r1 |= r2
 1e0e9c8:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0xC2 : 1e0e9ce >
 1e0e9cc:    00 70             	r0 = 0
 1e0e9ce:    0b f6 04 40       	r11 = [r4 + 4]
 1e0e9d2:    e0 fd 10 a0       	r10 = r0 | r1
 1e0e9d6:    76 08             	r6 = r7
 1e0e9d8:    40 6d             	r0 = b[r6 + 20] (u)			  ## event.c:552:16
 1e0e9da:    07 4c             	r7 = [r6 + 0]			  ## event.c:552:16
 1e0e9dc:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0xD8 : 1e0e9e4 >
 1e0e9de:    57 f2 fa 1f       	if (r7 != r5) goto -12 <sys_event_task+0xCA : 1e0e9d6 >
 1e0e9e2:    54 18             	goto 168 <sys_event_task+0x180 : 1e0ea8c >
 1e0e9e4:    30 4c             	r0 = [r6 + 12]			  ## event.c:552:27
 1e0e9e6:    fb 21             	if (r0 == 0) goto -10 <sys_event_task+0xD2 : 1e0e9de >			  ## event.c:552:27
 1e0e9e8:    b0 5c             	r0 = h[r6 + 22] (u)			  ## event.c:555:18
 1e0e9ea:    c0 f0 f8 ff       	if ((r0 & r12) == 0) goto -16 <sys_event_task+0xD2 : 1e0e9de >			  ## event.c:555:18
 1e0e9ee:    60 4c             	r0 = [r6 + 24]			  ## event.c:558:16
 1e0e9f0:    02 20             	if (r0 == 0) goto 4 <sys_event_task+0xEA : 1e0e9f6 >			  ## event.c:558:16
 1e0e9f2:    b0 f2 f4 1f       	if (r0 != r11) goto -24 <sys_event_task+0xD2 : 1e0e9de >
 1e0e9f6:    0a e0 05 10       	if (r10 != 0) goto 10 <sys_event_task+0xF8 : 1e0ea04 >
 1e0e9fa:    40 4c             	r0 = [r6 + 16]			  ## event.c:564:31
 1e0e9fc:    e1 08             	r1 = r14			  ## event.c:564:21
 1e0e9fe:    97 f3 79 c2       	call 3114226 <strcmp : 106ef4 >			  ## event.c:564:21
 1e0ea02:    ed 31             	if (r0 != 0) goto -38 <sys_event_task+0xD2 : 1e0e9de >			  ## event.c:564:21
 1e0ea04:    97 f3 c8 c1       	call 3113872 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0ea08:    01 70             	r1 = 0			  ## event.c:573:9
 1e0ea0a:    d0 08             	r0 = r13			  ## event.c:573:9
 1e0ea0c:    97 f3 f8 c1       	call 3113968 <os_sem_create : 106e00 >			  ## event.c:573:9
 1e0ea10:    30 4c             	r0 = [r6 + 12]			  ## event.c:575:26
 1e0ea12:    08 02             	[sp] = r0			  ## event.c:575:16
 1e0ea14:    00 fb 02 02       	r0 = 514 <BTCTLER_CONTROLLER_BSS_SIZE+0x42 : 202 >			  ## event.c:576:16
 1e0ea18:    18 02             	[sp+4] = r0			  ## event.c:576:16
 1e0ea1a:    2c 02             	[sp+8] = r4			  ## event.c:577:16
 1e0ea1c:    20 4c             	r0 = [r6 + 8]			  ## event.c:578:26
 1e0ea1e:    38 02             	[sp+12] = r0			  ## event.c:578:16
 1e0ea20:    1d f5 10 00       	[sp+16] = r13			  ## event.c:579:16
 1e0ea24:    03 18             	goto 6 <sys_event_task+0x120 : 1e0ea2c >			  ## event.c:579:16
 1e0ea26:    20 70             	r0 = 2			  ## event.c:592:13
 1e0ea28:    97 f3 c6 c1       	call 3113868 <os_time_dly : 106db8 >			  ## event.c:592:13
 1e0ea2c:    40 6d             	r0 = b[r6 + 20] (u)
 1e0ea2e:    16 30             	if (r0 != 0) goto 44 <sys_event_task+0x150 : 1e0ea5c >
 1e0ea30:    40 4c             	r0 = [r6 + 16]			  ## event.c:581:45
 1e0ea32:    03 a0             	r3 = sp + 0			  ## event.c:581:45
 1e0ea34:    20 fb 30 1b       	r1 = 3145728			  ## event.c:581:23
 1e0ea38:    52 70             	r2 = 5			  ## event.c:581:23
 1e0ea3a:    97 f3 d1 c1       	call 3113890 <os_taskq_post_type : 106de0 >			  ## event.c:581:23
 1e0ea3e:    50 e1 f2 0f       	if (r0 == 21) goto -28 <sys_event_task+0x11A : 1e0ea26 >			  ## event.c:582:17
 1e0ea42:    0c 30             	if (r0 != 0) goto 24 <sys_event_task+0x150 : 1e0ea5c >
 1e0ea44:    00 f6 08 90       	r0 = [r9 + 8]			  ## event.c:583:53
 1e0ea48:    a1 70             	r1 = 10			  ## event.c:583:65
 1e0ea4a:    e0 fe 10 10       	r1 = r0 / r1 (s)			  ## event.c:583:65
 1e0ea4e:    d0 08             	r0 = r13			  ## event.c:583:23
 1e0ea50:    97 f3 da c1       	call 3113908 <os_sem_pend : 106e08 >			  ## event.c:583:23
 1e0ea54:    b0 e0 02 10       	if (r0 != 11) goto 4 <sys_event_task+0x150 : 1e0ea5c >
 1e0ea58:    8f f3 1d a5       	call 2050618 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0ea5c:    00 f9 02 90       	r0 = b[r9 + 2] (u)			  ## event.c:595:21
 1e0ea60:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0x15C : 1e0ea68 >			  ## event.c:595:13
 1e0ea62:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:596:29
 1e0ea66:    02 18             	goto 4 <sys_event_task+0x160 : 1e0ea6c >			  ## event.c:596:29
 1e0ea68:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:598:20
 1e0ea6a:    29 30             	if (r0 != 0) goto 82 <sys_event_task+0x1B2 : 1e0eabe >			  ## event.c:598:20
 1e0ea6c:    97 f3 96 c1       	call 3113772 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0ea70:    00 4c             	r0 = [r6 + 0]			  ## event.c:609:22
 1e0ea72:    70 f2 01 00       	if (r0 == r7) goto 2 <sys_event_task+0x16C : 1e0ea78 >
 1e0ea76:    07 08             	r7 = r0			  ## event.c:609:13
 1e0ea78:    00 f6 0c 90       	r0 = [r9 + 12]			  ## event.c:605:39
 1e0ea7c:    01 30             	if (r0 != 0) goto 2 <sys_event_task+0x174 : 1e0ea80 >
 1e0ea7e:    e0 08             	r0 = r14			  ## event.c:605:28
 1e0ea80:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0x17A : 1e0ea86 >
 1e0ea84:    e0 08             	r0 = r14			  ## event.c:605:28
 1e0ea86:    0e 08             	r14 = r0
 1e0ea88:    57 f2 8f 1f       	if (r7 != r5) goto -226 <sys_event_task+0x9E : 1e0e9aa >
 1e0ea8c:    d0 08             	r0 = r13			  ## event.c:613:5
 1e0ea8e:    bf f3 c5 f6       	call -4726 <free : 1e0d81c >			  ## event.c:613:5
 1e0ea92:    18 f9 02 90       	b[r9 + 2] = r8			  ## event.c:615:31
 1e0ea96:    97 f3 7f c1       	call 3113726 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0ea9a:    97 f3 7f c1       	call 3113726 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0ea9e:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:656:23
 1e0eaa0:    10 e0 02 10       	if (r0 != 1) goto 4 <sys_event_task+0x19C : 1e0eaa8 >			  ## event.c:656:23
 1e0eaa4:    18 f9 04 90       	b[r9 + 4] = r8			  ## event.c:657:34
 1e0eaa8:    97 f3 76 c1       	call 3113708 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0eaac:    47 1f             	goto -370 <sys_event_task+0x30 : 1e0e93c >			  ## spinlock.h:88:5
 1e0eaae:    97 f3 73 c1       	call 3113702 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0eab2:    00 f6 14 90       	r0 = [r9 + 20]			  ## event.c:638:33
 1e0eab6:    01 70             	r1 = 0			  ## event.c:638:13
 1e0eab8:    97 f3 a6 c1       	call 3113804 <os_sem_pend : 106e08 >			  ## event.c:638:13
 1e0eabc:    3f 1f             	goto -386 <sys_event_task+0x30 : 1e0e93c >			  ## event.c:638:13
 1e0eabe:    d0 08             	r0 = r13
 1e0eac0:    bf f3 ac f6       	call -4776 <free : 1e0d81c >
 1e0eac4:    ea 1f             	goto -44 <sys_event_task+0x18E : 1e0ea9a >


register_sys_event_handler:
 1e0eac6:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:226:0
 1e0eac8:    c5 ff 84 08 00 00 	r5 = 2180 <handl : 884 >			  ## event.c:226:0
 1e0eace:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:229:18
 1e0ead0:    0f 20             	if (r0 == 0) goto 30 <register_sys_event_handler+0x2A : 1e0eaf0 >			  ## event.c:229:18
 1e0ead2:    74 4a             	r4 = [r5 + 28]
 1e0ead4:    c6 9b             	r6 = r5 + 28
 1e0ead6:    64 f2 05 00       	if (r4 == r6) goto 10 <register_sys_event_handler+0x1E : 1e0eae4 >
 1e0eada:    40 69             	r0 = b[r4 + 20] (u)			  ## event.c:236:16
 1e0eadc:    0c 30             	if (r0 != 0) goto 24 <register_sys_event_handler+0x30 : 1e0eaf6 >			  ## event.c:236:16
 1e0eade:    04 48             	r4 = [r4 + 0]
 1e0eae0:    64 f2 fb 1f       	if (r4 != r6) goto -10 <register_sys_event_handler+0x14 : 1e0eada >
 1e0eae4:    c0 71             	r0 = 28			  ## event.c:244:33
 1e0eae6:    bf f3 94 f6       	call -4824 <malloc : 1e0d812 >			  ## event.c:244:33
 1e0eaea:    04 08             	r4 = r0			  ## event.c:244:33
 1e0eaec:    0c 38             	if (r4 != 0) goto 24 <register_sys_event_handler+0x40 : 1e0eb06 >
 1e0eaee:    56 01             	{pc, r6-r4} = [sp++]
 1e0eaf0:    d8 16             	call -592 <sys_event_init : 1e0e8a2 >			  ## event.c:230:13
 1e0eaf2:    2a 30             	if (r0 != 0) goto 84 <register_sys_event_handler+0x82 : 1e0eb48 >			  ## event.c:230:13
 1e0eaf4:    ee 1f             	goto -36 <register_sys_event_handler+0xC : 1e0ead2 >			  ## event.c:230:13
 1e0eaf6:    97 f3 51 c1       	call 3113634 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0eafa:    00 48             	r0 = [r4 + 0]			  ## list.h:165:36
 1e0eafc:    11 48             	r1 = [r4 + 4]			  ## list.h:165:23
 1e0eafe:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0eb00:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0eb02:    97 f3 49 c1       	call 3113618 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0eb06:    00 70             	r0 = 0
 1e0eb08:    48 69             	b[r4 + 20] = r0			  ## event.c:250:12
 1e0eb0a:    68 48             	[r4 + 24] = r0			  ## event.c:251:13
 1e0eb0c:    c1 ff c8 eb e0 01 	r1 = 31517640 <app_core_event_handler : 1e0ebc8 >			  ## event.c:252:16
 1e0eb12:    39 48             	[r4 + 12] = r1			  ## event.c:252:16
 1e0eb14:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## event.c:253:19
 1e0eb1a:    b9 58             	h[r4 + 22] = r1			  ## event.c:253:19
 1e0eb1c:    58 69             	b[r4 + 21] = r0			  ## event.c:254:17
 1e0eb1e:    8f f3 af a3       	call 2049886 <report_data_code_begin : 3280 >			  ## event.c:255:16
 1e0eb22:    48 48             	[r4 + 16] = r0			  ## event.c:255:14
 1e0eb24:    02 30             	if (r0 != 0) goto 4 <register_sys_event_handler+0x64 : 1e0eb2a >			  ## event.c:255:14
 1e0eb26:    8f f3 b6 a4       	call 2050412 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0eb2a:    97 f3 37 c1       	call 3113582 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0eb2e:    70 4a             	r0 = [r5 + 28]			  ## spinlock.h:77:5
 1e0eb30:    60 f2 03 00       	if (r0 == r6) goto 6 <register_sys_event_handler+0x74 : 1e0eb3a >
 1e0eb34:    00 40             	r0 = [r0 + 0]
 1e0eb36:    60 f2 fd 1f       	if (r0 != r6) goto -6 <register_sys_event_handler+0x6E : 1e0eb34 >
 1e0eb3a:    80 4a             	r0 = [r5 + 32]			  ## list.h:154:28
 1e0eb3c:    8c 4a             	[r5 + 32] = r4			  ## list.h:137:16
 1e0eb3e:    0e 48             	[r4 + 0] = r6			  ## list.h:138:16
 1e0eb40:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e0eb42:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e0eb44:    97 f3 28 c1       	call 3113552 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0eb48:    56 01             	{pc, r6-r4} = [sp++]


task_create:
 1e0eb4a:    77 01             	[--sp] = {rets, r7-r4}			  ## task.c:53:0
 1e0eb4c:    fc 0b             	sp += -8			  ## task.c:53:0
 1e0eb4e:    26 08             	r6 = r2			  ## task.c:53:0
 1e0eb50:    14 08             	r4 = r1			  ## task.c:53:0
 1e0eb52:    05 08             	r5 = r0			  ## task.c:53:0
 1e0eb54:    c7 ff 1a 2b e1 01 	r7 = 31533850 <task_info_table+0x6 : 1e12b1a >			  ## task.c:53:0
 1e0eb5a:    c0 ff 30 25 e1 01 	r0 = 31532336 <update_target_end+0x2300 : 1e12530 >			  ## task.c:53:0
 1e0eb60:    61 08             	r1 = r6			  ## task.c:15:14
 1e0eb62:    97 f3 c7 c1       	call 3113870 <strcmp : 106ef4 >			  ## task.c:15:14
 1e0eb66:    05 20             	if (r0 == 0) goto 10 <task_create+0x28 : 1e0eb72 >			  ## task.c:15:13
 1e0eb68:    00 f6 06 70       	r0 = [r7 + 6]			  ## task.c:14:34
 1e0eb6c:    c7 80             	r7 += 12			  ## task.c:14:5
 1e0eb6e:    f8 31             	if (r0 != 0) goto -16 <task_create+0x16 : 1e0eb60 >			  ## task.c:14:5
 1e0eb70:    0b 18             	goto 22 <task_create+0x3E : 1e0eb88 >			  ## task.c:14:5
 1e0eb72:    03 5e             	r3 = h[r7 + 0] (u)			  ## task.c:62:47
 1e0eb74:    02 f9 fe 7f       	r2 = b[r7 + -2] (u)			  ## task.c:62:11
 1e0eb78:    10 5e             	r0 = h[r7 + 2] (u)			  ## task.c:62:65
 1e0eb7a:    1e 02             	[sp+4] = r6			  ## task.c:62:11
 1e0eb7c:    08 02             	[sp] = r0			  ## task.c:62:11
 1e0eb7e:    50 08             	r0 = r5			  ## task.c:62:11
 1e0eb80:    41 08             	r1 = r4			  ## task.c:62:11
 1e0eb82:    97 f3 15 c1       	call 3113514 <os_task_create : 106db0 >			  ## task.c:62:11
 1e0eb86:    02 20             	if (r0 == 0) goto 4 <task_create+0x42 : 1e0eb8c >
 1e0eb88:    8f f3 85 a4       	call 2050314 <p33_soft_reset : 3496 >
 1e0eb8c:    04 0a             	sp += 8
 1e0eb8e:    57 01             	{pc, r7-r4} = [sp++]


task_kill:
 1e0eb90:    c0 ff 92 0f e1 01 	r0 = 31526802 <update_target_end+0xD62 : 1e10f92 >			  ## task.c:87:0
 1e0eb96:    d7 f3 17 c1       	goto 3113518 <os_task_del : 106dc8 >			  ## task.c:89:11


get_current_app:
 1e0eb9a:    77 01             	[--sp] = {rets, r7-r4}			  ## app_core.c:395:0
 1e0eb9c:    c5 ff fc 20 00 00 	r5 = 8444 <mutex.1036 : 20fc >			  ## app_core.c:398:5
 1e0eba2:    01 70             	r1 = 0			  ## app_core.c:398:5
 1e0eba4:    04 70             	r4 = 0			  ## app_core.c:398:5
 1e0eba6:    50 08             	r0 = r5			  ## app_core.c:398:5
 1e0eba8:    97 f3 3c c1       	call 3113592 <os_mutex_pend : 106e24 >			  ## app_core.c:398:5
 1e0ebac:    c6 ff 7c 08 00 00 	r6 = 2172 <head : 87c >			  ## list.h:124:18
 1e0ebb2:    07 4c             	r7 = [r6 + 0]			  ## list.h:124:18
 1e0ebb4:    50 08             	r0 = r5			  ## app_core.c:404:5
 1e0ebb6:    97 f3 37 c1       	call 3113582 <os_mutex_post : 106e28 >			  ## app_core.c:404:5
 1e0ebba:    70 fc f0 ff       	r0 = r7 + -16			  ## app_core.c:401:15
 1e0ebbe:    67 f2 01 00       	if (r7 == r6) goto 2 <get_current_app+0x2A : 1e0ebc4 >
 1e0ebc2:    04 08             	r4 = r0			  ## app_core.c:400:9
 1e0ebc4:    40 08             	r0 = r4			  ## app_core.c:406:5
 1e0ebc6:    57 01             	{pc, r7-r4} = [sp++]			  ## app_core.c:406:5


app_core_event_handler:
 1e0ebc8:    34 00             	[--sp] = rets			  ## app_core.c:76:0
 1e0ebca:    c3 ff 7c 08 00 00 	r3 = 2172 <head : 87c >			  ## list.h:124:18
 1e0ebd0:    02 46             	r2 = [r3 + 0]			  ## list.h:124:18
 1e0ebd2:    01 08             	r1 = r0			  ## list.h:124:18
 1e0ebd4:    32 f2 06 00       	if (r2 == r3) goto 12 <app_core_event_handler+0x1C : 1e0ebe4 >
 1e0ebd8:    30 44             	r0 = [r2 + 12]			  ## app_core.c:83:18
 1e0ebda:    13 40             	r3 = [r0 + 4]			  ## app_core.c:83:23
 1e0ebdc:    03 26             	if (r3 == 0) goto 6 <app_core_event_handler+0x1C : 1e0ebe4 >			  ## app_core.c:83:23
 1e0ebde:    20 fc f0 ff       	r0 = r2 + -16			  ## app_core.c:82:15
 1e0ebe2:    83 00             	call r3			  ## app_core.c:84:17
 1e0ebe4:    30 00             	pc = [sp++]			  ## app_core.c:91:1


__start_app:
 1e0ebe6:    7d 01             	[--sp] = {rets, r13-r4}			  ## app_core.c:198:0
 1e0ebe8:    09 08             	r9 = r0			  ## app_core.c:198:0
 1e0ebea:    c8 ff fc 20 00 00 	r8 = 8444 <mutex.1036 : 20fc >			  ## app_core.c:198:0
 1e0ebf0:    01 70             	r1 = 0			  ## app_core.c:202:5
 1e0ebf2:    0d 70             	r13 = 0			  ## app_core.c:202:5
 1e0ebf4:    80 08             	r0 = r8			  ## app_core.c:202:5
 1e0ebf6:    97 f3 15 c1       	call 3113514 <os_mutex_pend : 106e24 >			  ## app_core.c:202:5
 1e0ebfa:    ca ff 7c 08 00 00 	r10 = 2172 <head : 87c >			  ## app_core.c:202:5
 1e0ec00:    01 f6 00 a0       	r1 = [r10 + 0]			  ## list.h:124:18
 1e0ec04:    10 fc f0 ff       	r0 = r1 + -16			  ## app_core.c:205:15
 1e0ec08:    a1 f2 01 00       	if (r1 == r10) goto 2 <__start_app+0x28 : 1e0ec0e >
 1e0ec0c:    0d 08             	r13 = r0			  ## app_core.c:204:9
 1e0ec0e:    04 f6 04 90       	r4 = [r9 + 4]			  ## app_core.c:216:17
 1e0ec12:    c0 ff 01 2c 1b 0a 	r0 = 169552897 <uECC_vli_cmp_unsafe+0xABC05 : 1b2c01 >			  ## app_core.c:216:5
 1e0ec18:    04 f2 37 00       	if (r4 == r0) goto 110 <__start_app+0xA4 : 1e0ec8a >			  ## app_core.c:216:5
 1e0ec1c:    0b fc ff ff       	r11 = r0 + -1
 1e0ec20:    b4 f2 3f 10       	if (r4 != r11) goto 126 <__start_app+0xBC : 1e0eca2 >
 1e0ec24:    0d e0 57 00       	if (r13 == 0) goto 174 <__start_app+0xF0 : 1e0ecd6 >
 1e0ec28:    00 f6 10 d0       	r0 = [r13 + 16]			  ## list.h:171:36
 1e0ec2c:    01 f6 14 d0       	r1 = [r13 + 20]			  ## list.h:171:23
 1e0ec30:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0ec32:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0ec34:    d0 fc 10 00       	r0 = r13 + 16			  ## app_core.c:223:24
 1e0ec38:    10 f6 10 d0       	[r13 + 16] = r0			  ## list.h:172:17
 1e0ec3c:    10 f6 14 d0       	[r13 + 20] = r0			  ## list.h:173:17
 1e0ec40:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:224:14
 1e0ec44:    03 40             	r3 = [r0 + 0]			  ## app_core.c:224:19
 1e0ec46:    41 70             	r1 = 4			  ## app_core.c:224:9
 1e0ec48:    02 70             	r2 = 0			  ## app_core.c:224:9
 1e0ec4a:    0c 70             	r12 = 0			  ## app_core.c:224:9
 1e0ec4c:    d0 08             	r0 = r13			  ## app_core.c:224:9
 1e0ec4e:    83 00             	call r3			  ## app_core.c:224:9
 1e0ec50:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:225:14
 1e0ec54:    03 40             	r3 = [r0 + 0]			  ## app_core.c:225:19
 1e0ec56:    51 70             	r1 = 5			  ## app_core.c:225:9
 1e0ec58:    02 70             	r2 = 0			  ## app_core.c:225:9
 1e0ec5a:    54 70             	r4 = 5			  ## app_core.c:225:9
 1e0ec5c:    d0 08             	r0 = r13			  ## app_core.c:225:9
 1e0ec5e:    83 00             	call r3			  ## app_core.c:225:9
 1e0ec60:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:226:20
 1e0ec64:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:124:18
 1e0ec68:    a0 f2 85 00       	if (r0 == r10) goto 266 <__start_app+0x190 : 1e0ed76 >			  ## list.h:124:18
 1e0ec6c:    07 fc f0 ff       	r7 = r0 + -16			  ## app_core.c:231:15
 1e0ec70:    00 6e             	r0 = b[r7 + 0] (u)			  ## app_core.c:262:18
 1e0ec72:    20 e0 43 00       	if (r0 == 2) goto 134 <__start_app+0x116 : 1e0ecfc >			  ## app_core.c:262:5
 1e0ec76:    50 e0 4c 10       	if (r0 != 5) goto 152 <__start_app+0x12C : 1e0ed12 >
 1e0ec7a:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:264:20
 1e0ec7c:    03 40             	r3 = [r0 + 0]			  ## app_core.c:264:25
 1e0ec7e:    01 70             	r1 = 0			  ## app_core.c:264:15
 1e0ec80:    02 70             	r2 = 0			  ## app_core.c:264:15
 1e0ec82:    70 08             	r0 = r7			  ## app_core.c:264:15
 1e0ec84:    83 00             	call r3			  ## app_core.c:264:15
 1e0ec86:    0c 08             	r12 = r0			  ## app_core.c:264:15
 1e0ec88:    42 18             	goto 132 <__start_app+0x128 : 1e0ed0e >
 1e0ec8a:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:234:14
 1e0ec8e:    03 40             	r3 = [r0 + 0]			  ## app_core.c:234:19
 1e0ec90:    44 70             	r4 = 4			  ## app_core.c:234:19
 1e0ec92:    41 70             	r1 = 4			  ## app_core.c:234:9
 1e0ec94:    02 70             	r2 = 0			  ## app_core.c:234:9
 1e0ec96:    0c 70             	r12 = 0			  ## app_core.c:234:9
 1e0ec98:    d0 08             	r0 = r13			  ## app_core.c:234:9
 1e0ec9a:    83 00             	call r3			  ## app_core.c:234:9
 1e0ec9c:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:235:20
 1e0eca0:    6a 18             	goto 212 <__start_app+0x190 : 1e0ed76 >			  ## app_core.c:235:20
 1e0eca2:    c5 ff f4 09 00 00 	r5 = 2548 <system_data_end : 9f4 >
 1e0eca8:    c7 ff b4 09 00 00 	r7 = 2484 <system_data_start : 9b4 >
 1e0ecae:    ac 06             	r12 = -22
 1e0ecb0:    57 f2 61 20       	if (r7 >= r5) goto 194 <__start_app+0x190 : 1e0ed76 >
 1e0ecb4:    06 f6 00 90       	r6 = [r9 + 0]
 1e0ecb8:    06 2c             	if (r6 == 0) goto 12 <__start_app+0xE0 : 1e0ecc6 >			  ## app_core.c:181:13
 1e0ecba:    30 4e             	r0 = [r7 + 12]			  ## app_core.c:182:28
 1e0ecbc:    61 08             	r1 = r6			  ## app_core.c:182:18
 1e0ecbe:    97 f3 19 c1       	call 3113522 <strcmp : 106ef4 >			  ## app_core.c:182:18
 1e0ecc2:    05 30             	if (r0 != 0) goto 10 <__start_app+0xE8 : 1e0ecce >			  ## app_core.c:182:18
 1e0ecc4:    0a 18             	goto 20 <__start_app+0xF4 : 1e0ecda >			  ## app_core.c:182:18
 1e0ecc6:    10 4e             	r0 = [r7 + 4]			  ## app_core.c:186:20
 1e0ecc8:    50 b9             	r0 &= r4			  ## app_core.c:186:27
 1e0ecca:    00 d3             	r0 = r0 >> 12			  ## app_core.c:186:17
 1e0eccc:    06 30             	if (r0 != 0) goto 12 <__start_app+0xF4 : 1e0ecda >			  ## app_core.c:186:17
 1e0ecce:    07 82             	r7 += 32			  ## app_core.c:180:5
 1e0ecd0:    57 f2 f2 3f       	if (r7 < r5) goto -28 <__start_app+0xD2 : 1e0ecb8 >
 1e0ecd4:    50 18             	goto 160 <__start_app+0x190 : 1e0ed76 >
 1e0ecd6:    ac 06             	r12 = -22
 1e0ecd8:    4e 18             	goto 156 <__start_app+0x190 : 1e0ed76 >
 1e0ecda:    7d f2 44 00       	if (r13 == r7) goto 136 <__start_app+0x180 : 1e0ed66 >
 1e0ecde:    0d e0 c7 0f       	if (r13 == 0) goto -114 <__start_app+0x8A : 1e0ec70 >
 1e0ece2:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:250:24
 1e0ece6:    03 40             	r3 = [r0 + 0]			  ## app_core.c:250:29
 1e0ece8:    21 70             	r1 = 2			  ## app_core.c:250:19
 1e0ecea:    24 70             	r4 = 2			  ## app_core.c:250:19
 1e0ecec:    d0 08             	r0 = r13			  ## app_core.c:250:19
 1e0ecee:    92 08             	r2 = r9			  ## app_core.c:250:19
 1e0ecf0:    83 00             	call r3			  ## app_core.c:250:19
 1e0ecf2:    0c 08             	r12 = r0			  ## app_core.c:250:19
 1e0ecf4:    40 30             	if (r0 != 0) goto 128 <__start_app+0x190 : 1e0ed76 >
 1e0ecf6:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:255:24
 1e0ecfa:    ba 1f             	goto -140 <__start_app+0x8A : 1e0ec70 >			  ## app_core.c:255:24
 1e0ecfc:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:267:20
 1e0ecfe:    03 40             	r3 = [r0 + 0]			  ## app_core.c:267:25
 1e0ed00:    31 70             	r1 = 3			  ## app_core.c:267:15
 1e0ed02:    02 70             	r2 = 0			  ## app_core.c:267:15
 1e0ed04:    70 08             	r0 = r7			  ## app_core.c:267:15
 1e0ed06:    83 00             	call r3			  ## app_core.c:267:15
 1e0ed08:    0c 08             	r12 = r0			  ## app_core.c:267:15
 1e0ed0a:    10 70             	r0 = 1			  ## app_core.c:268:20
 1e0ed0c:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:268:20
 1e0ed0e:    0c e0 0c 10       	if (r12 != 0) goto 24 <__start_app+0x144 : 1e0ed2a >
 1e0ed12:    00 f6 04 90       	r0 = [r9 + 4]			  ## app_core.c:273:17
 1e0ed16:    b0 f2 15 00       	if (r0 == r11) goto 42 <__start_app+0x15E : 1e0ed44 >			  ## app_core.c:273:17
 1e0ed1a:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:276:24
 1e0ed1c:    03 40             	r3 = [r0 + 0]			  ## app_core.c:276:29
 1e0ed1e:    11 70             	r1 = 1			  ## app_core.c:276:19
 1e0ed20:    70 08             	r0 = r7			  ## app_core.c:276:19
 1e0ed22:    92 08             	r2 = r9			  ## app_core.c:276:19
 1e0ed24:    83 00             	call r3			  ## app_core.c:276:19
 1e0ed26:    0c 08             	r12 = r0			  ## app_core.c:276:19
 1e0ed28:    0d 20             	if (r0 == 0) goto 26 <__start_app+0x15E : 1e0ed44 >
 1e0ed2a:    0d e0 24 00       	if (r13 == 0) goto 72 <__start_app+0x190 : 1e0ed76 >
 1e0ed2e:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:282:18
 1e0ed32:    03 40             	r3 = [r0 + 0]			  ## app_core.c:282:23
 1e0ed34:    31 70             	r1 = 3			  ## app_core.c:282:13
 1e0ed36:    02 70             	r2 = 0			  ## app_core.c:282:13
 1e0ed38:    d0 08             	r0 = r13			  ## app_core.c:282:13
 1e0ed3a:    83 00             	call r3			  ## app_core.c:282:13
 1e0ed3c:    10 70             	r0 = 1			  ## app_core.c:283:24
 1e0ed3e:    10 f9 00 d0       	b[r13 + 0] = r0			  ## app_core.c:283:24
 1e0ed42:    19 18             	goto 50 <__start_app+0x190 : 1e0ed76 >			  ## app_core.c:283:24
 1e0ed44:    10 70             	r0 = 1			  ## app_core.c:288:16
 1e0ed46:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:288:16
 1e0ed48:    40 4e             	r0 = [r7 + 16]			  ## list.h:171:36
 1e0ed4a:    51 4e             	r1 = [r7 + 20]			  ## list.h:171:23
 1e0ed4c:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0ed4e:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0ed50:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:219:33
 1e0ed54:    01 9f             	r1 = r7 + 16			  ## app_core.c:290:20
 1e0ed56:    19 40             	[r0 + 4] = r1			  ## list.h:137:16
 1e0ed58:    48 4e             	[r7 + 16] = r0			  ## list.h:138:16
 1e0ed5a:    1a f6 14 70       	[r7 + 20] = r10			  ## list.h:139:16
 1e0ed5e:    11 f6 00 a0       	[r10 + 0] = r1			  ## list.h:140:16
 1e0ed62:    0c 70             	r12 = 0			  ## list.h:140:16
 1e0ed64:    08 18             	goto 16 <__start_app+0x190 : 1e0ed76 >
 1e0ed66:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:246:24
 1e0ed6a:    03 40             	r3 = [r0 + 0]			  ## app_core.c:246:29
 1e0ed6c:    11 70             	r1 = 1			  ## app_core.c:246:19
 1e0ed6e:    d0 08             	r0 = r13			  ## app_core.c:246:19
 1e0ed70:    92 08             	r2 = r9			  ## app_core.c:246:19
 1e0ed72:    83 00             	call r3			  ## app_core.c:246:19
 1e0ed74:    0c 08             	r12 = r0			  ## app_core.c:246:19
 1e0ed76:    80 08             	r0 = r8			  ## app_core.c:295:5
 1e0ed78:    97 f3 56 c0       	call 3113132 <os_mutex_post : 106e28 >			  ## app_core.c:295:5
 1e0ed7c:    c0 08             	r0 = r12			  ## app_core.c:297:5
 1e0ed7e:    5d 01             	{pc, r13-r4} = [sp++]			  ## app_core.c:297:5


start_app:
 1e0ed80:    76 01             	[--sp] = {rets, r6-r4}			  ## app_core.c:301:0
 1e0ed82:    f4 0b             	sp += -24			  ## app_core.c:301:0
 1e0ed84:    06 08             	r6 = r0			  ## app_core.c:301:0
 1e0ed86:    20 07             	r0 = -14			  ## app_core.c:302:9
 1e0ed88:    58 02             	[sp+20] = r0			  ## app_core.c:302:9
 1e0ed8a:    8f f3 79 a2       	call 2049266 <report_data_code_begin : 3280 >			  ## app_core.c:307:17
 1e0ed8e:    c4 ff 30 25 e1 01 	r4 = 31532336 <update_target_end+0x2300 : 1e12530 >			  ## app_core.c:307:17
 1e0ed94:    41 08             	r1 = r4			  ## app_core.c:307:10
 1e0ed96:    97 f3 ad c0       	call 3113306 <strcmp : 106ef4 >			  ## app_core.c:307:10
 1e0ed9a:    3b 20             	if (r0 == 0) goto 118 <start_app+0x92 : 1e0ee12 >			  ## app_core.c:307:10
 1e0ed9c:    00 75             	r0 = 80			  ## app_core.c:311:19
 1e0ed9e:    bf f3 38 f5       	call -5520 <malloc : 1e0d812 >			  ## app_core.c:311:19
 1e0eda2:    05 08             	r5 = r0			  ## app_core.c:311:19
 1e0eda4:    02 3a             	if (r5 != 0) goto 4 <start_app+0x2A : 1e0edaa >			  ## app_core.c:311:19
 1e0eda6:    8f f3 76 a3       	call 2049772 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0edaa:    01 70             	r1 = 0			  ## app_core.c:313:5
 1e0edac:    50 08             	r0 = r5			  ## app_core.c:313:5
 1e0edae:    97 f3 27 c0       	call 3113038 <os_sem_create : 106e00 >			  ## app_core.c:313:5
 1e0edb2:    00 72             	r0 = 32			  ## app_core.c:315:12
 1e0edb4:    08 02             	[sp] = r0			  ## app_core.c:315:12
 1e0edb6:    1e 02             	[sp+4] = r6			  ## app_core.c:316:12
 1e0edb8:    2d 02             	[sp+8] = r5			  ## app_core.c:317:12
 1e0edba:    40 a1             	r0 = sp + 20			  ## app_core.c:317:12
 1e0edbc:    38 02             	[sp+12] = r0			  ## app_core.c:318:12
 1e0edbe:    c6 ff 4c 21 00 00 	r6 = 8524 <start_app.app_msg_type : 214c >			  ## app_core.c:318:12
 1e0edc4:    03 18             	goto 6 <start_app+0x4C : 1e0edcc >			  ## app_core.c:318:12
 1e0edc6:    10 70             	r0 = 1			  ## app_core.c:323:13
 1e0edc8:    97 f3 f6 bf       	call 3112940 <os_time_dly : 106db8 >			  ## app_core.c:323:13
 1e0edcc:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:321:55
 1e0edce:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:321:53
 1e0edd2:    03 a0             	r3 = sp + 0			  ## app_core.c:321:53
 1e0edd4:    42 70             	r2 = 4			  ## app_core.c:321:15
 1e0edd6:    40 08             	r0 = r4			  ## app_core.c:321:15
 1e0edd8:    97 f3 02 c0       	call 3112964 <os_taskq_post_type : 106de0 >			  ## app_core.c:321:15
 1e0eddc:    50 e1 f3 0f       	if (r0 == 21) goto -26 <start_app+0x46 : 1e0edc6 >			  ## app_core.c:322:13
 1e0ede0:    14 30             	if (r0 != 0) goto 40 <start_app+0x8A : 1e0ee0a >
 1e0ede2:    81 7c             	r1 = 200			  ## app_core.c:331:23
 1e0ede4:    50 08             	r0 = r5			  ## app_core.c:331:23
 1e0ede6:    97 f3 0f c0       	call 3112990 <os_sem_pend : 106e08 >			  ## app_core.c:331:23
 1e0edea:    0c 20             	if (r0 == 0) goto 24 <start_app+0x84 : 1e0ee04 >
 1e0edec:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:335:66
 1e0edee:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:335:64
 1e0edf2:    40 08             	r0 = r4			  ## app_core.c:335:27
 1e0edf4:    97 f3 02 c0       	call 3112964 <os_taskq_del_type : 106dfc >			  ## app_core.c:335:27
 1e0edf8:    05 20             	if (r0 == 0) goto 10 <start_app+0x84 : 1e0ee04 >
 1e0edfa:    01 70             	r1 = 0			  ## app_core.c:337:31
 1e0edfc:    50 08             	r0 = r5			  ## app_core.c:337:31
 1e0edfe:    97 f3 03 c0       	call 3112966 <os_sem_pend : 106e08 >			  ## app_core.c:337:31
 1e0ee02:    ef 31             	if (r0 != 0) goto -34 <start_app+0x62 : 1e0ede2 >
 1e0ee04:    50 08             	r0 = r5			  ## app_core.c:341:13
 1e0ee06:    bf f3 09 f5       	call -5614 <free : 1e0d81c >			  ## app_core.c:341:13
 1e0ee0a:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:346:17
 1e0ee0c:    10 80             	r0 += 1			  ## app_core.c:346:17
 1e0ee0e:    08 5c             	h[r6 + 0] = r0			  ## app_core.c:346:17
 1e0ee10:    02 18             	goto 4 <start_app+0x96 : 1e0ee16 >			  ## app_core.c:346:17
 1e0ee12:    60 08             	r0 = r6			  ## app_core.c:308:16
 1e0ee14:    e8 16             	call -560 <__start_app : 1e0ebe6 >			  ## app_core.c:308:16
 1e0ee16:    0c 0a             	sp += 24
 1e0ee18:    56 01             	{pc, r6-r4} = [sp++]


app_core_msg_handler:
 1e0ee1a:    74 01             	[--sp] = {rets, r4}			  ## app_core.c:94:0
 1e0ee1c:    04 08             	r4 = r0			  ## app_core.c:94:0
 1e0ee1e:    10 48             	r0 = [r4 + 4]			  ## app_core.c:95:9
 1e0ee20:    00 e2 07 10       	if (r0 != 32) goto 14 <app_core_msg_handler+0x18 : 1e0ee32 >			  ## app_core.c:95:9
 1e0ee24:    20 48             	r0 = [r4 + 8]			  ## app_core.c:96:55
 1e0ee26:    df 16             	call -578 <__start_app : 1e0ebe6 >			  ## app_core.c:96:26
 1e0ee28:    41 48             	r1 = [r4 + 16]			  ## app_core.c:96:17
 1e0ee2a:    08 42             	[r1 + 0] = r0			  ## app_core.c:96:24
 1e0ee2c:    30 48             	r0 = [r4 + 12]			  ## app_core.c:97:31
 1e0ee2e:    97 f3 ed bf       	call 3112922 <os_sem_post : 106e0c >			  ## app_core.c:97:9
 1e0ee32:    54 01             	{pc, r4} = [sp++]			  ## app_core.c:119:1


syscfg_write:
 1e0ee34:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:161:0
 1e0ee36:    28 08             	r8 = r2			  ## syscfg_api.c:161:0
 1e0ee38:    19 08             	r9 = r1			  ## syscfg_api.c:161:0
 1e0ee3a:    06 08             	r6 = r0			  ## syscfg_api.c:161:0
 1e0ee3c:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:166:44
 1e0ee40:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:166:44
 1e0ee42:    c4 ff 3c 01 e1 01 	r4 = 31523132 <cfg_vm : 1e1013c >			  ## syscfg_api.c:166:44
 1e0ee48:    10 e3 0d 30       	if (r0 < 49) goto 26 <syscfg_write+0x32 : 1e0ee66 >			  ## syscfg_api.c:166:44
 1e0ee4c:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:169:53
 1e0ee50:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:169:53
 1e0ee52:    20 e3 08 30       	if (r0 < 50) goto 16 <syscfg_write+0x32 : 1e0ee66 >			  ## syscfg_api.c:169:53
 1e0ee56:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:172:54
 1e0ee5a:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:172:54
 1e0ee5c:    d0 eb 0d 20       	if (r0 >= 189) goto 26 <syscfg_write+0x46 : 1e0ee7a >			  ## syscfg_api.c:172:54
 1e0ee60:    c4 ff 58 01 e1 01 	r4 = 31523160 <cfg_bin : 1e10158 >
 1e0ee66:    33 48             	r3 = [r4 + 12]			  ## syscfg_api.c:59:14
 1e0ee68:    06 26             	if (r3 == 0) goto 12 <syscfg_write+0x42 : 1e0ee76 >			  ## syscfg_api.c:59:14
 1e0ee6a:    60 08             	r0 = r6			  ## syscfg_api.c:60:15
 1e0ee6c:    91 08             	r1 = r9			  ## syscfg_api.c:60:15
 1e0ee6e:    82 08             	r2 = r8			  ## syscfg_api.c:60:15
 1e0ee70:    83 00             	call r3			  ## syscfg_api.c:60:15
 1e0ee72:    07 08             	r7 = r0			  ## syscfg_api.c:60:15
 1e0ee74:    14 18             	goto 40 <syscfg_write+0x6A : 1e0ee9e >
 1e0ee76:    07 70             	r7 = 0
 1e0ee78:    12 18             	goto 36 <syscfg_write+0x6A : 1e0ee9e >
 1e0ee7a:    c5 ff 74 01 e1 01 	r5 = 31523188 <syscfg_ops_end : 1e10174 >
 1e0ee80:    c4 ff 20 01 e1 01 	r4 = 31523104 <syscfg_ops_begin : 1e10120 >
 1e0ee86:    07 70             	r7 = 0
 1e0ee88:    54 f2 09 20       	if (r4 >= r5) goto 18 <syscfg_write+0x6A : 1e0ee9e >
 1e0ee8c:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:177:20
 1e0ee8e:    04 22             	if (r1 == 0) goto 8 <syscfg_write+0x64 : 1e0ee98 >			  ## syscfg_api.c:177:20
 1e0ee90:    60 08             	r0 = r6			  ## syscfg_api.c:178:21
 1e0ee92:    81 00             	call r1			  ## syscfg_api.c:178:21
 1e0ee94:    10 e0 e7 0f       	if (r0 == 1) goto -50 <syscfg_write+0x32 : 1e0ee66 >			  ## syscfg_api.c:178:21
 1e0ee98:    c4 81             	r4 += 28			  ## syscfg_api.c:176:9
 1e0ee9a:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_write+0x58 : 1e0ee8c >
 1e0ee9e:    70 08             	r0 = r7			  ## syscfg_api.c:186:5
 1e0eea0:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:186:5


syscfg_tools_init:
 1e0eea2:    75 01             	[--sp] = {rets, r5, r4}			  ## syscfg_api.c:253:0
 1e0eea4:    c4 ff 74 01 e1 01 	r4 = 31523188 <syscfg_ops_end : 1e10174 >			  ## syscfg_api.c:253:0
 1e0eeaa:    c5 ff 20 01 e1 01 	r5 = 31523104 <syscfg_ops_begin : 1e10120 >			  ## syscfg_api.c:253:0
 1e0eeb0:    45 f2 06 20       	if (r5 >= r4) goto 12 <syscfg_tools_init+0x1E : 1e0eec0 >			  ## syscfg_api.c:253:0
 1e0eeb4:    40 f6 1c 50       	r0 = [r5 ++= 28]			  ## syscfg_api.c:261:16
 1e0eeb8:    01 20             	if (r0 == 0) goto 2 <syscfg_tools_init+0x1A : 1e0eebc >
 1e0eeba:    80 00             	call r0			  ## syscfg_api.c:262:13
 1e0eebc:    45 f2 fa 3f       	if (r5 < r4) goto -12 <syscfg_tools_init+0x12 : 1e0eeb4 >
 1e0eec0:    00 70             	r0 = 0			  ## syscfg_api.c:266:5
 1e0eec2:    55 01             	{pc, r5, r4} = [sp++]			  ## syscfg_api.c:266:5


__syscfg_read:
 1e0eec4:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:38:0
 1e0eec6:    05 08             	r5 = r0			  ## syscfg_api.c:38:0
 1e0eec8:    16 4a             	r6 = [r5 + 4]			  ## syscfg_api.c:42:14
 1e0eeca:    38 08             	r8 = r3			  ## syscfg_api.c:42:14
 1e0eecc:    29 08             	r9 = r2
 1e0eece:    17 08             	r7 = r1
 1e0eed0:    04 70             	r4 = 0
 1e0eed2:    0b 2c             	if (r6 == 0) goto 22 <__syscfg_read+0x26 : 1e0eeea >
 1e0eed4:    70 08             	r0 = r7			  ## syscfg_api.c:43:13
 1e0eed6:    86 00             	call r6			  ## syscfg_api.c:43:13
 1e0eed8:    10 e0 07 10       	if (r0 != 1) goto 14 <__syscfg_read+0x26 : 1e0eeea >			  ## syscfg_api.c:43:13
 1e0eedc:    23 4a             	r3 = [r5 + 8]			  ## syscfg_api.c:44:22
 1e0eede:    05 26             	if (r3 == 0) goto 10 <__syscfg_read+0x26 : 1e0eeea >			  ## syscfg_api.c:44:22
 1e0eee0:    70 08             	r0 = r7			  ## syscfg_api.c:45:23
 1e0eee2:    91 08             	r1 = r9			  ## syscfg_api.c:45:23
 1e0eee4:    82 08             	r2 = r8			  ## syscfg_api.c:45:23
 1e0eee6:    83 00             	call r3			  ## syscfg_api.c:45:23
 1e0eee8:    04 08             	r4 = r0			  ## syscfg_api.c:45:23
 1e0eeea:    40 08             	r0 = r4			  ## syscfg_api.c:50:5
 1e0eeec:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:50:5


syscfg_read:
 1e0eeee:    7a 01             	[--sp] = {rets, r10-r4}			  ## syscfg_api.c:114:0
 1e0eef0:    2a 08             	r10 = r2			  ## syscfg_api.c:114:0
 1e0eef2:    18 08             	r8 = r1			  ## syscfg_api.c:114:0
 1e0eef4:    06 08             	r6 = r0			  ## syscfg_api.c:114:0
 1e0eef6:    66 e6 2f 10       	if (r6 != 102) goto 94 <syscfg_read+0x6A : 1e0ef58 >			  ## syscfg_api.c:114:0
 1e0eefa:    04 70             	r4 = 0			  ## syscfg_api.c:114:0
 1e0eefc:    62 e0 61 30       	if (r2 < 6) goto 194 <syscfg_read+0xD4 : 1e0efc2 >			  ## syscfg_api.c:114:0
 1e0ef00:    00 70             	r0 = 0			  ## syscfg_api.c:114:0
 1e0ef02:    c7 ff 00 08 00 00 	r7 = 2048 <report_mmu_tlb_size : 800 >			  ## syscfg_api.c:114:0
 1e0ef08:    01 70             	r1 = 0			  ## syscfg_api.c:114:0
 1e0ef0a:    c2 b1             	r2 = r0 + r7			  ## syscfg_api.c:89:13
 1e0ef0c:    03 f9 20 20       	r3 = b[r2 + 32] (u)			  ## syscfg_api.c:89:13
 1e0ef10:    12 70             	r2 = 1			  ## syscfg_api.c:89:13
 1e0ef12:    01 26             	if (r3 == 0) goto 2 <syscfg_read+0x28 : 1e0ef16 >			  ## syscfg_api.c:89:13
 1e0ef14:    02 70             	r2 = 0			  ## syscfg_api.c:89:36
 1e0ef16:    10 80             	r0 += 1			  ## syscfg_api.c:88:54
 1e0ef18:    21 09             	r1 += r2			  ## syscfg_api.c:89:13
 1e0ef1a:    60 e0 f6 1f       	if (r0 != 6) goto -20 <syscfg_read+0x1C : 1e0ef0a >			  ## syscfg_api.c:89:13
 1e0ef1e:    40 04             	r0 = r1.b0 (u)			  ## syscfg_api.c:94:18
 1e0ef20:    60 e0 07 10       	if (r0 != 6) goto 14 <syscfg_read+0x44 : 1e0ef32 >			  ## syscfg_api.c:94:9
 1e0ef24:    c2 ff e5 22 e1 01 	r2 = 31531749 <update_target_end+0x20B5 : 1e122e5 >			  ## syscfg_api.c:95:9
 1e0ef2a:    40 70             	r0 = 4			  ## syscfg_api.c:95:9
 1e0ef2c:    bf f3 68 ef       	call -8496 <log_print : 1e0ce00 >			  ## syscfg_api.c:95:9
 1e0ef30:    13 18             	goto 38 <syscfg_read+0x6A : 1e0ef58 >			  ## syscfg_api.c:95:9
 1e0ef32:    79 fc 20 00       	r9 = r7 + 32			  ## syscfg_api.c:98:19
 1e0ef36:    61 70             	r1 = 6			  ## syscfg_api.c:98:19
 1e0ef38:    64 70             	r4 = 6			  ## syscfg_api.c:98:19
 1e0ef3a:    90 08             	r0 = r9			  ## syscfg_api.c:98:19
 1e0ef3c:    bf f3 6d 91       	call -56614 <CRC16 : 1e0121a >			  ## syscfg_api.c:98:19
 1e0ef40:    31 5f             	r1 = h[r7 + 38] (u)			  ## syscfg_api.c:100:19
 1e0ef42:    30 fb 00 11       	r1 = rev8(r1)			  ## syscfg_api.c:101:20
 1e0ef46:    09 d4             	r1 = r1 >> 16			  ## syscfg_api.c:101:20
 1e0ef48:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_read+0x6A : 1e0ef58 >			  ## syscfg_api.c:101:20
 1e0ef4c:    62 70             	r2 = 6			  ## syscfg_api.c:102:9
 1e0ef4e:    80 08             	r0 = r8			  ## syscfg_api.c:102:9
 1e0ef50:    91 08             	r1 = r9			  ## syscfg_api.c:102:9
 1e0ef52:    97 f3 c7 bf       	call 3112846 <memcpy : 106ee4 >			  ## syscfg_api.c:102:9
 1e0ef56:    35 18             	goto 106 <syscfg_read+0xD4 : 1e0efc2 >
 1e0ef58:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:131:44
 1e0ef5c:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:131:44
 1e0ef5e:    c7 ff 3c 01 e1 01 	r7 = 31523132 <cfg_vm : 1e1013c >			  ## syscfg_api.c:131:44
 1e0ef64:    10 e3 27 30       	if (r0 < 49) goto 78 <syscfg_read+0xC8 : 1e0efb6 >			  ## syscfg_api.c:131:44
 1e0ef68:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:134:53
 1e0ef6c:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:134:53
 1e0ef6e:    20 e3 22 30       	if (r0 < 50) goto 68 <syscfg_read+0xC8 : 1e0efb6 >			  ## syscfg_api.c:134:53
 1e0ef72:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:137:54
 1e0ef76:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:137:54
 1e0ef78:    c7 ff 58 01 e1 01 	r7 = 31523160 <cfg_bin : 1e10158 >			  ## syscfg_api.c:137:54
 1e0ef7e:    d0 eb 1a 30       	if (r0 < 189) goto 52 <syscfg_read+0xC8 : 1e0efb6 >			  ## syscfg_api.c:137:54
 1e0ef82:    c5 ff 74 01 e1 01 	r5 = 31523188 <syscfg_ops_end : 1e10174 >
 1e0ef88:    c4 ff 20 01 e1 01 	r4 = 31523104 <syscfg_ops_begin : 1e10120 >
 1e0ef8e:    54 f2 12 20       	if (r4 >= r5) goto 36 <syscfg_read+0xC8 : 1e0efb6 >
 1e0ef92:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:142:20
 1e0ef94:    04 22             	if (r1 == 0) goto 8 <syscfg_read+0xB0 : 1e0ef9e >			  ## syscfg_api.c:142:20
 1e0ef96:    60 08             	r0 = r6			  ## syscfg_api.c:143:21
 1e0ef98:    81 00             	call r1			  ## syscfg_api.c:143:21
 1e0ef9a:    10 e0 04 00       	if (r0 == 1) goto 8 <syscfg_read+0xB8 : 1e0efa6 >			  ## syscfg_api.c:143:21
 1e0ef9e:    c4 81             	r4 += 28			  ## syscfg_api.c:141:9
 1e0efa0:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_read+0xA4 : 1e0ef92 >
 1e0efa4:    08 18             	goto 16 <syscfg_read+0xC8 : 1e0efb6 >
 1e0efa6:    40 08             	r0 = r4			  ## syscfg_api.c:144:27
 1e0efa8:    61 08             	r1 = r6			  ## syscfg_api.c:144:27
 1e0efaa:    82 08             	r2 = r8			  ## syscfg_api.c:144:27
 1e0efac:    a3 08             	r3 = r10			  ## syscfg_api.c:144:27
 1e0efae:    8a 17             	call -236 <__syscfg_read : 1e0eec4 >			  ## syscfg_api.c:144:27
 1e0efb0:    04 08             	r4 = r0			  ## syscfg_api.c:144:27
 1e0efb2:    04 e0 06 c0       	ifs (r4 > 0) goto 12 <syscfg_read+0xD4 : 1e0efc2 >
 1e0efb6:    70 08             	r0 = r7			  ## syscfg_api.c:136:15
 1e0efb8:    61 08             	r1 = r6			  ## syscfg_api.c:136:15
 1e0efba:    82 08             	r2 = r8			  ## syscfg_api.c:136:15
 1e0efbc:    a3 08             	r3 = r10			  ## syscfg_api.c:136:15
 1e0efbe:    82 17             	call -252 <__syscfg_read : 1e0eec4 >			  ## syscfg_api.c:136:15
 1e0efc0:    04 08             	r4 = r0			  ## syscfg_api.c:136:15
 1e0efc2:    40 08             	r0 = r4			  ## syscfg_api.c:156:1
 1e0efc4:    5a 01             	{pc, r10-r4} = [sp++]			  ## syscfg_api.c:156:1


syscfg_file_open:
 1e0efc6:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:68:0
 1e0efc8:    04 08             	r4 = r0			  ## cfg_bin.c:68:0
 1e0efca:    c1 ff 5a 1f e1 01 	r1 = 31530842 <update_target_end+0x1D2A : 1e11f5a >			  ## cfg_bin.c:70:10
 1e0efd0:    80 f3 f5 05       	call 3050 <fopen : 1e0fbbe >			  ## cfg_bin.c:70:10
 1e0efd4:    05 08             	r5 = r0			  ## cfg_bin.c:70:10
 1e0efd6:    07 3a             	if (r5 != 0) goto 14 <syscfg_file_open+0x20 : 1e0efe6 >
 1e0efd8:    c2 ff 55 25 e1 01 	r2 = 31532373 <update_target_end+0x2325 : 1e12555 >			  ## cfg_bin.c:72:9
 1e0efde:    40 70             	r0 = 4			  ## cfg_bin.c:72:9
 1e0efe0:    43 08             	r3 = r4			  ## cfg_bin.c:72:9
 1e0efe2:    bf f3 0d ef       	call -8678 <log_print : 1e0ce00 >			  ## cfg_bin.c:72:9
 1e0efe6:    50 08             	r0 = r5			  ## cfg_bin.c:75:5
 1e0efe8:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:75:5


syscfg_file_init:
 1e0efea:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:87:0
 1e0efec:    f0 0b             	sp += -32			  ## cfg_bin.c:87:0
 1e0efee:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:87:0
 1e0eff0:    01 70             	r1 = 0			  ## cfg_bin.c:90:21
 1e0eff2:    02 72             	r2 = 32			  ## cfg_bin.c:90:21
 1e0eff4:    07 70             	r7 = 0			  ## cfg_bin.c:90:21
 1e0eff6:    97 f3 7b bf       	call 3112694 <memset : 106ef0 >			  ## cfg_bin.c:90:21
 1e0effa:    c0 ff 39 25 e1 01 	r0 = 31532345 <update_target_end+0x2309 : 1e12539 >			  ## cfg_bin.c:92:10
 1e0f000:    e2 17             	call -60 <syscfg_file_open : 1e0efc6 >			  ## cfg_bin.c:92:10
 1e0f002:    05 08             	r5 = r0			  ## cfg_bin.c:92:10
 1e0f004:    04 fb 00 ff       	r4 = -256 <bank_code_load_addr+0x1E12EC : 1ffff00 >
 1e0f008:    4f 2a             	if (r5 == 0) goto 158 <syscfg_file_init+0xBE : 1e0f0a8 >
 1e0f00a:    01 a0             	r1 = sp + 0
 1e0f00c:    80 f3 f2 06       	call 3556 <fget_attrs : 1e0fdf4 >			  ## cfg_bin.c:98:5
 1e0f010:    c6 ff b8 22 00 00 	r6 = 8888 <bin_cfg : 22b8 >
 1e0f016:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:101:47
 1e0f018:    11 70             	r1 = 1			  ## cfg_bin.c:100:31
 1e0f01a:    12 02             	r2 = [sp+4]			  ## cfg_bin.c:102:46
 1e0f01c:    09 6c             	b[r6 + 0] = r1			  ## cfg_bin.c:100:31
 1e0f01e:    40 80             	r0 += 4			  ## cfg_bin.c:101:54
 1e0f020:    18 4c             	[r6 + 4] = r0			  ## cfg_bin.c:101:35
 1e0f022:    20 fc fc ff       	r0 = r2 + -4			  ## cfg_bin.c:102:52
 1e0f026:    28 4c             	[r6 + 8] = r0			  ## cfg_bin.c:102:34
 1e0f028:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e0f02a:    80 f3 a3 06       	call 3398 <fclose : 1e0fd74 >			  ## cfg_bin.c:81:9
 1e0f02e:    cf 6c             	b[r6 + 12] = r7			  ## cfg_bin.c:106:30
 1e0f030:    c0 ff 76 25 e1 01 	r0 = 31532406 <update_target_end+0x2346 : 1e12576 >			  ## cfg_bin.c:108:10
 1e0f036:    c7 17             	call -114 <syscfg_file_open : 1e0efc6 >			  ## cfg_bin.c:108:10
 1e0f038:    05 08             	r5 = r0			  ## cfg_bin.c:108:10
 1e0f03a:    36 2a             	if (r5 == 0) goto 108 <syscfg_file_init+0xBE : 1e0f0a8 >
 1e0f03c:    01 a0             	r1 = sp + 0
 1e0f03e:    80 f3 d9 06       	call 3506 <fget_attrs : 1e0fdf4 >			  ## cfg_bin.c:113:5
 1e0f042:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e0f044:    80 f3 96 06       	call 3372 <fclose : 1e0fd74 >			  ## cfg_bin.c:81:9
 1e0f048:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:117:46
 1e0f04a:    00 fc 00 02       	r0 = r0 + 512			  ## cfg_bin.c:117:46
 1e0f04e:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:117:34
 1e0f050:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_bin.c:119:5
 1e0f052:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_bin.c:119:5
 1e0f054:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_bin.c:119:5
 1e0f056:    05 60             	r5 = b[r0 + 0] (u)			  ## cfg_bin.c:119:5
 1e0f058:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:119:5
 1e0f05c:    c8 fd 40 53       	r5 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:119:5
 1e0f060:    d0 fd 80 52       	r5 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:119:5
 1e0f064:    51 fc ff ff       	r1 = r5 + -1			  ## cfg_bin.c:121:49
 1e0f068:    04 70             	r4 = 0			  ## cfg_bin.c:121:49
 1e0f06a:    08 ff ff 17 1c 00 	if (r1 > 2047) goto 56 <syscfg_file_init+0xBE : 1e0f0a8 >			  ## cfg_bin.c:121:49
 1e0f070:    71 60             	r1 = b[r0 + 7] (u)			  ## cfg_bin.c:127:5
 1e0f072:    62 60             	r2 = b[r0 + 6] (u)			  ## cfg_bin.c:127:5
 1e0f074:    53 60             	r3 = b[r0 + 5] (u)			  ## cfg_bin.c:127:5
 1e0f076:    47 60             	r7 = b[r0 + 4] (u)			  ## cfg_bin.c:127:5
 1e0f078:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:127:5
 1e0f07c:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:127:5
 1e0f080:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:127:5
 1e0f084:    39 d5             	r1 = r7 >> 20			  ## cfg_bin.c:128:9
 1e0f086:    08 ff 20 13 0e 00 	if (r1 > 800) goto 28 <syscfg_file_init+0xBE : 1e0f0a8 >			  ## cfg_bin.c:128:9
 1e0f08c:    40 80             	r0 += 4			  ## cfg_bin.c:126:11
 1e0f08e:    40 80             	r0 += 4			  ## cfg_bin.c:131:26
 1e0f090:    bf f3 c3 90       	call -56954 <CRC16 : 1e0121a >			  ## cfg_bin.c:131:26
 1e0f094:    00 04             	r0 = r0.b0 (u)			  ## cfg_bin.c:132:9
 1e0f096:    c1 05             	r1 = r7.b0 (u)			  ## cfg_bin.c:132:32
 1e0f098:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_file_init+0xBE : 1e0f0a8 >			  ## cfg_bin.c:132:32
 1e0f09c:    10 70             	r0 = 1			  ## cfg_bin.c:133:34
 1e0f09e:    c8 6c             	b[r6 + 12] = r0			  ## cfg_bin.c:133:34
 1e0f0a0:    40 4c             	r0 = [r6 + 16]			  ## cfg_bin.c:134:38
 1e0f0a2:    40 80             	r0 += 4			  ## cfg_bin.c:134:38
 1e0f0a4:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:134:38
 1e0f0a6:    5d 4c             	[r6 + 20] = r5			  ## cfg_bin.c:135:37
 1e0f0a8:    40 08             	r0 = r4			  ## cfg_bin.c:141:1
 1e0f0aa:    10 0a             	sp += 32			  ## cfg_bin.c:141:1
 1e0f0ac:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:141:1


syscfg_bin_check_id:
 1e0f0ae:    10 70             	r0 = 1			  ## cfg_bin.c:351:0
 1e0f0b0:    20 00             	rts			  ## cfg_bin.c:352:5


__syscfg_bin_item_read:
 1e0f0b2:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:199:0
 1e0f0b4:    24 08             	r4 = r2			  ## cfg_bin.c:199:0
 1e0f0b6:    01 09             	r1 += r0			  ## cfg_bin.c:202:42
 1e0f0b8:    32 60             	r2 = b[r0 + 3] (u)			  ## cfg_bin.c:207:9
 1e0f0ba:    23 60             	r3 = b[r0 + 2] (u)			  ## cfg_bin.c:207:9
 1e0f0bc:    15 60             	r5 = b[r0 + 1] (u)			  ## cfg_bin.c:207:9
 1e0f0be:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_bin.c:207:9
 1e0f0c0:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## cfg_bin.c:207:9
 1e0f0c4:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## cfg_bin.c:207:9
 1e0f0c8:    d0 fd 80 73       	r7 <= insert(r3, p:16, l:16)			  ## cfg_bin.c:207:9
 1e0f0cc:    3d d5             	r5 = r7 >> 20			  ## cfg_bin.c:208:23
 1e0f0ce:    08 ff 20 53 0c 00 	if (r5 > 800) goto 24 <__syscfg_bin_item_read+0x3A : 1e0f0ec >			  ## cfg_bin.c:208:23
 1e0f0d4:    02 58             	r2 = h[r4 + 0] (u)			  ## cfg_bin.c:212:24
 1e0f0d6:    8c fd 40 37       	r3 = uextra(r7, p:8, l:12)			  ## cfg_bin.c:211:19
 1e0f0da:    23 f2 0a 00       	if (r3 == r2) goto 20 <__syscfg_bin_item_read+0x40 : 1e0f0f2 >			  ## cfg_bin.c:211:19
 1e0f0de:    50 09             	r0 += r5			  ## cfg_bin.c:222:36
 1e0f0e0:    40 80             	r0 += 4			  ## cfg_bin.c:222:19
 1e0f0e2:    10 f2 e9 3f       	if (r0 < r1) goto -46 <__syscfg_bin_item_read+0x6 : 1e0f0b8 >
 1e0f0e6:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E12F1 : 1ffff05 >
 1e0f0ea:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0f0ec:    00 fb 07 ff       	r0 = -249 <bank_code_load_addr+0x1E12F3 : 1ffff07 >
 1e0f0f0:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0f0f2:    46 90             	r6 = r0 + 4			  ## cfg_bin.c:213:25
 1e0f0f4:    60 08             	r0 = r6			  ## cfg_bin.c:213:25
 1e0f0f6:    51 08             	r1 = r5			  ## cfg_bin.c:213:25
 1e0f0f8:    bf f3 8f 90       	call -57058 <CRC16 : 1e0121a >			  ## cfg_bin.c:213:25
 1e0f0fc:    01 04             	r1 = r0.b0 (u)			  ## cfg_bin.c:214:17
 1e0f0fe:    c2 05             	r2 = r7.b0 (u)			  ## cfg_bin.c:214:40
 1e0f100:    00 fb 03 ff       	r0 = -253 <bank_code_load_addr+0x1E12EF : 1ffff03 >			  ## cfg_bin.c:214:40
 1e0f104:    21 f2 04 10       	if (r1 != r2) goto 8 <__syscfg_bin_item_read+0x5E : 1e0f110 >			  ## cfg_bin.c:214:40
 1e0f108:    1d 58             	h[r4 + 2] = r5			  ## cfg_bin.c:215:32
 1e0f10a:    1e 48             	[r4 + 4] = r6			  ## cfg_bin.c:216:33
 1e0f10c:    00 70             	r0 = 0			  ## cfg_bin.c:216:33
 1e0f10e:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0f110:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1


__syscfg_bin_read:
 1e0f112:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:230:0
 1e0f114:    c5 ff b8 22 00 00 	r5 = 8888 <bin_cfg : 22b8 >			  ## cfg_bin.c:230:0
 1e0f11a:    c1 6a             	r1 = b[r5 + 12] (u)			  ## cfg_bin.c:233:28
 1e0f11c:    04 08             	r4 = r0			  ## cfg_bin.c:233:28
 1e0f11e:    11 e0 05 10       	if (r1 != 1) goto 10 <__syscfg_bin_read+0x1A : 1e0f12c >
 1e0f122:    51 4a             	r1 = [r5 + 20]
 1e0f124:    40 4a             	r0 = [r5 + 16]
 1e0f126:    42 08             	r2 = r4			  ## cfg_bin.c:234:15
 1e0f128:    c4 17             	call -120 <__syscfg_bin_item_read : 1e0f0b2 >			  ## cfg_bin.c:234:15
 1e0f12a:    05 20             	if (r0 == 0) goto 10 <__syscfg_bin_read+0x24 : 1e0f136 >
 1e0f12c:    21 4a             	r1 = [r5 + 8]
 1e0f12e:    10 4a             	r0 = [r5 + 4]
 1e0f130:    42 08             	r2 = r4			  ## cfg_bin.c:240:11
 1e0f132:    bf 17             	call -130 <__syscfg_bin_item_read : 1e0f0b2 >			  ## cfg_bin.c:240:11
 1e0f134:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1
 1e0f136:    00 70             	r0 = 0
 1e0f138:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1


___syscfg_bin_group_read:
 1e0f13a:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:246:0
 1e0f13c:    fc 0b             	sp += -8			  ## cfg_bin.c:246:0
 1e0f13e:    c7 ff 6c 30 e1 01 	r7 = 31535212 <group_item_table : 1e1306c >			  ## cfg_bin.c:246:0
 1e0f144:    36 08             	r6 = r3			  ## cfg_bin.c:246:0
 1e0f146:    25 08             	r5 = r2			  ## cfg_bin.c:246:0
 1e0f148:    14 08             	r4 = r1			  ## cfg_bin.c:246:0
 1e0f14a:    01 08             	r1 = r0			  ## cfg_bin.c:246:0
 1e0f14c:    72 08             	r2 = r7			  ## cfg_bin.c:162:13
 1e0f14e:    51 e6 01 00       	if (r1 == 101) goto 2 <___syscfg_bin_group_read+0x1A : 1e0f154 >			  ## cfg_bin.c:162:13
 1e0f152:    02 70             	r2 = 0			  ## cfg_bin.c:162:13
 1e0f154:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E12F1 : 1ffff05 >
 1e0f158:    51 e6 0e 10       	if (r1 != 101) goto 28 <___syscfg_bin_group_read+0x3E : 1e0f178 >
 1e0f15c:    41 64             	r1 = b[r2 + 4] (u)			  ## cfg_bin.c:257:19
 1e0f15e:    10 80             	r0 += 1
 1e0f160:    61 f2 0a 90       	if (r1 <= r6) goto 20 <___syscfg_bin_group_read+0x3E : 1e0f178 >
 1e0f164:    11 54             	r1 = h[r2 + 2] (u)			  ## cfg_bin.c:261:18
 1e0f166:    c0 8f             	r0 += -4			  ## cfg_bin.c:261:18
 1e0f168:    51 f2 06 80       	if (r1 > r5) goto 12 <___syscfg_bin_group_read+0x3E : 1e0f178 >			  ## cfg_bin.c:261:18
 1e0f16c:    50 76             	r0 = 101			  ## cfg_bin.c:266:18
 1e0f16e:    90 f5 00 00       	h[sp] = r0			  ## cfg_bin.c:266:18
 1e0f172:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:266:18
 1e0f174:    ce 17             	call -100 <__syscfg_bin_read : 1e0f112 >			  ## cfg_bin.c:268:11
 1e0f176:    02 20             	if (r0 == 0) goto 4 <___syscfg_bin_group_read+0x42 : 1e0f17c >
 1e0f178:    04 0a             	sp += 8
 1e0f17a:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:287:1
 1e0f17c:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_bin.c:181:46
 1e0f180:    50 e6 01 00       	if (r0 == 101) goto 2 <___syscfg_bin_group_read+0x4C : 1e0f186 >
 1e0f184:    07 70             	r7 = 0
 1e0f186:    17 5e             	r7 = h[r7 + 2] (u)			  ## cfg_bin.c:183:29
 1e0f188:    11 02             	r1 = [sp+4]			  ## cfg_bin.c:176:28
 1e0f18a:    10 9e             	r0 = r7 + 1			  ## cfg_bin.c:183:38
 1e0f18c:    20 04             	r0 = r0.l (u)			  ## cfg_bin.c:185:21
 1e0f18e:    80 fe 60 10       	r1 += r0 * r6			  ## cfg_bin.c:185:11
 1e0f192:    80 f9 01 10       	r0 = b[r1 ++= 1] (u)			  ## cfg_bin.c:187:5
 1e0f196:    0c 20             	if (r0 == 0) goto 24 <___syscfg_bin_group_read+0x76 : 1e0f1b0 >
 1e0f198:    97 f5 02 00       	h[sp+2] = r7			  ## cfg_bin.c:190:24
 1e0f19c:    19 02             	[sp+4] = r1			  ## cfg_bin.c:191:25
 1e0f19e:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E12EE : 1ffff02 >
 1e0f1a2:    57 f2 e9 8f       	if (r7 > r5) goto -46 <___syscfg_bin_group_read+0x3E : 1e0f178 >
 1e0f1a6:    70 02             	r0 = [sp+28]
 1e0f1a8:    10 e0 05 10       	if (r0 != 1) goto 10 <___syscfg_bin_group_read+0x7C : 1e0f1b6 >			  ## cfg_bin.c:275:17
 1e0f1ac:    09 48             	[r4 + 0] = r1			  ## cfg_bin.c:276:33
 1e0f1ae:    07 18             	goto 14 <___syscfg_bin_group_read+0x84 : 1e0f1be >			  ## cfg_bin.c:276:33
 1e0f1b0:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E12F1 : 1ffff05 >
 1e0f1b4:    e1 1f             	goto -62 <___syscfg_bin_group_read+0x3E : 1e0f178 >
 1e0f1b6:    40 08             	r0 = r4			  ## cfg_bin.c:278:17
 1e0f1b8:    72 08             	r2 = r7			  ## cfg_bin.c:278:17
 1e0f1ba:    97 f3 93 be       	call 3112230 <memcpy : 106ee4 >			  ## cfg_bin.c:278:17
 1e0f1be:    70 08             	r0 = r7
 1e0f1c0:    db 1f             	goto -74 <___syscfg_bin_group_read+0x3E : 1e0f178 >


syscfg_bin_read:
 1e0f1c2:    76 01             	[--sp] = {rets, r6-r4}			  ## cfg_bin.c:295:0
 1e0f1c4:    fa 0b             	sp += -12			  ## cfg_bin.c:295:0
 1e0f1c6:    25 08             	r5 = r2			  ## cfg_bin.c:295:0
 1e0f1c8:    14 08             	r4 = r1			  ## cfg_bin.c:295:0
 1e0f1ca:    50 e6 07 10       	if (r0 != 101) goto 14 <syscfg_bin_read+0x1A : 1e0f1dc >			  ## cfg_bin.c:301:9
 1e0f1ce:    01 70             	r1 = 0			  ## cfg_bin.c:291:12
 1e0f1d0:    50 76             	r0 = 101			  ## cfg_bin.c:291:12
 1e0f1d2:    03 70             	r3 = 0			  ## cfg_bin.c:291:12
 1e0f1d4:    09 02             	[sp] = r1			  ## cfg_bin.c:291:12
 1e0f1d6:    41 08             	r1 = r4			  ## cfg_bin.c:291:12
 1e0f1d8:    b0 17             	call -160 <___syscfg_bin_group_read : 1e0f13a >			  ## cfg_bin.c:291:12
 1e0f1da:    11 18             	goto 34 <syscfg_bin_read+0x3C : 1e0f1fe >			  ## cfg_bin.c:291:12
 1e0f1dc:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:306:18
 1e0f1e0:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:306:18
 1e0f1e2:    97 17             	call -210 <__syscfg_bin_read : 1e0f112 >			  ## cfg_bin.c:307:11
 1e0f1e4:    0c 30             	if (r0 != 0) goto 24 <syscfg_bin_read+0x3C : 1e0f1fe >
 1e0f1e6:    86 f5 06 00       	r6 = h[sp+6] (u)			  ## cfg_bin.c:310:30
 1e0f1ea:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E12EE : 1ffff02 >			  ## cfg_bin.c:310:30
 1e0f1ee:    56 f2 06 80       	if (r6 > r5) goto 12 <syscfg_bin_read+0x3C : 1e0f1fe >
 1e0f1f2:    21 02             	r1 = [sp+8]			  ## cfg_bin.c:311:13
 1e0f1f4:    40 08             	r0 = r4			  ## cfg_bin.c:311:13
 1e0f1f6:    62 08             	r2 = r6			  ## cfg_bin.c:311:13
 1e0f1f8:    97 f3 74 be       	call 3112168 <memcpy : 106ee4 >			  ## cfg_bin.c:311:13
 1e0f1fc:    60 08             	r0 = r6			  ## cfg_bin.c:311:13
 1e0f1fe:    06 0a             	sp += 12
 1e0f200:    56 01             	{pc, r6-r4} = [sp++]			  ## cfg_bin.c:319:1


syscfg_bin_group_read:
 1e0f202:    74 01             	[--sp] = {rets, r4}			  ## cfg_bin.c:290:0
 1e0f204:    fe 0b             	sp += -4			  ## cfg_bin.c:290:0
 1e0f206:    04 70             	r4 = 0			  ## cfg_bin.c:291:12
 1e0f208:    0c 02             	[sp] = r4			  ## cfg_bin.c:291:12
 1e0f20a:    97 17             	call -210 <___syscfg_bin_group_read : 1e0f13a >			  ## cfg_bin.c:291:12
 1e0f20c:    02 0a             	sp += 4
 1e0f20e:    54 01             	{pc, r4} = [sp++]			  ## cfg_bin.c:291:5


syscfg_bin_ptr_read:
 1e0f210:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:322:0
 1e0f212:    f8 0b             	sp += -16			  ## cfg_bin.c:322:0
 1e0f214:    14 08             	r4 = r1			  ## cfg_bin.c:322:0
 1e0f216:    05 70             	r5 = 0			  ## cfg_bin.c:322:0
 1e0f218:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:323:9
 1e0f21a:    0d 58             	h[r4 + 0] = r5			  ## cfg_bin.c:325:10
 1e0f21c:    50 e6 0e 10       	if (r0 != 101) goto 28 <syscfg_bin_ptr_read+0x2C : 1e0f23c >			  ## cfg_bin.c:330:9
 1e0f220:    15 70             	r5 = 1
 1e0f222:    c1 a0             	r1 = sp + 12
 1e0f224:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## cfg_bin.c:331:15
 1e0f22a:    50 76             	r0 = 101			  ## cfg_bin.c:331:15
 1e0f22c:    03 70             	r3 = 0			  ## cfg_bin.c:331:15
 1e0f22e:    0d 02             	[sp] = r5			  ## cfg_bin.c:331:15
 1e0f230:    84 17             	call -248 <___syscfg_bin_group_read : 1e0f13a >			  ## cfg_bin.c:331:15
 1e0f232:    10 e0 01 b0       	ifs (r0 < 1) goto 2 <syscfg_bin_ptr_read+0x28 : 1e0f238 >
 1e0f236:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:333:18
 1e0f238:    35 02             	r5 = [sp+12]			  ## cfg_bin.c:335:16
 1e0f23a:    0a 18             	goto 20 <syscfg_bin_ptr_read+0x40 : 1e0f250 >
 1e0f23c:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:339:18
 1e0f240:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:339:18
 1e0f242:    67 17             	call -306 <__syscfg_bin_read : 1e0f112 >			  ## cfg_bin.c:340:11
 1e0f244:    05 30             	if (r0 != 0) goto 10 <syscfg_bin_ptr_read+0x40 : 1e0f250 >
 1e0f246:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## cfg_bin.c:343:26
 1e0f24a:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:343:14
 1e0f24c:    25 02             	r5 = [sp+8]			  ## cfg_bin.c:344:31
 1e0f24e:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:344:13
 1e0f250:    50 08             	r0 = r5			  ## cfg_bin.c:348:1
 1e0f252:    08 0a             	sp += 16			  ## cfg_bin.c:348:1
 1e0f254:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:348:1


syscfg_file_close:
 1e0f256:    34 00             	[--sp] = rets			  ## cfg_bin.c:79:0
 1e0f258:    02 20             	if (r0 == 0) goto 4 <syscfg_file_close+0x8 : 1e0f25e >			  ## cfg_bin.c:79:0
 1e0f25a:    80 f3 8b 05       	call 2838 <fclose : 1e0fd74 >			  ## cfg_bin.c:81:9
 1e0f25e:    30 00             	pc = [sp++]			  ## cfg_bin.c:83:1


btif_cfg_get_info:
 1e0f260:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_btif.c:69:0
 1e0f262:    02 50             	r2 = h[r0 + 0] (u)			  ## cfg_btif.c:69:0
 1e0f264:    c3 ff 9e 2b e1 01 	r3 = 31533982 <btif_table+0x4 : 1e12b9e >			  ## cfg_btif.c:69:0
 1e0f26a:    01 70             	r1 = 0			  ## cfg_btif.c:69:0
 1e0f26c:    64 76             	r4 = 102			  ## cfg_btif.c:69:0
 1e0f26e:    05 f7 fe 3f       	r5 = h[r3 + -2] (u)			  ## cfg_btif.c:69:0
 1e0f272:    24 f2 07 00       	if (r4 == r2) goto 14 <btif_cfg_get_info+0x24 : 1e0f284 >			  ## cfg_btif.c:69:0
 1e0f276:    84 f7 04 30       	r4 = h[r3 ++= 4] (u)			  ## cfg_btif.c:74:5
 1e0f27a:    51 09             	r1 += r5			  ## cfg_btif.c:80:35
 1e0f27c:    41 80             	r1 += 4			  ## cfg_btif.c:80:20
 1e0f27e:    f7 39             	if (r4 != 0) goto -18 <btif_cfg_get_info+0xE : 1e0f26e >
 1e0f280:    00 70             	r0 = 0
 1e0f282:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1
 1e0f284:    1d 50             	h[r0 + 2] = r5			  ## cfg_btif.c:76:23
 1e0f286:    19 40             	[r0 + 4] = r1			  ## cfg_btif.c:77:24
 1e0f288:    10 70             	r0 = 1			  ## cfg_btif.c:77:24
 1e0f28a:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1


__btif_item_read:
 1e0f28c:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_btif.c:102:0
 1e0f28e:    04 08             	r4 = r0			  ## cfg_btif.c:102:0
 1e0f290:    e7 17             	call -50 <btif_cfg_get_info : 1e0f260 >			  ## cfg_btif.c:103:9
 1e0f292:    23 20             	if (r0 == 0) goto 70 <__btif_item_read+0x4E : 1e0f2da >			  ## cfg_btif.c:103:9
 1e0f294:    10 48             	r0 = [r4 + 4]			  ## cfg_btif.c:109:28
 1e0f296:    c1 ff d0 22 00 00 	r1 = 8912 <btif_cfg : 22d0 >			  ## cfg_btif.c:109:43
 1e0f29c:    01 42             	r1 = [r1 + 0]			  ## cfg_btif.c:109:43
 1e0f29e:    10 09             	r0 += r1			  ## cfg_btif.c:109:33
 1e0f2a0:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_btif.c:113:5
 1e0f2a2:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_btif.c:113:5
 1e0f2a4:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_btif.c:113:5
 1e0f2a6:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_btif.c:113:5
 1e0f2a8:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_btif.c:113:5
 1e0f2ac:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_btif.c:113:5
 1e0f2b0:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_btif.c:113:5
 1e0f2b4:    f7 ef 14 00       	if (r7 == -1) goto 40 <__btif_item_read+0x54 : 1e0f2e0 >			  ## cfg_btif.c:113:5
 1e0f2b8:    12 58             	r2 = h[r4 + 2] (u)			  ## cfg_btif.c:120:9
 1e0f2ba:    39 d5             	r1 = r7 >> 20			  ## cfg_btif.c:119:30
 1e0f2bc:    05 fb 0d ff       	r5 = -243 <bank_code_load_addr+0x1E12F9 : 1ffff0d >			  ## cfg_btif.c:119:30
 1e0f2c0:    12 f2 10 10       	if (r2 != r1) goto 32 <__btif_item_read+0x58 : 1e0f2e4 >			  ## cfg_btif.c:119:30
 1e0f2c4:    46 90             	r6 = r0 + 4			  ## cfg_btif.c:124:26
 1e0f2c6:    60 08             	r0 = r6			  ## cfg_btif.c:124:26
 1e0f2c8:    bf f3 a7 8f       	call -57522 <CRC16 : 1e0121a >			  ## cfg_btif.c:124:26
 1e0f2cc:    00 04             	r0 = r0.b0 (u)			  ## cfg_btif.c:126:9
 1e0f2ce:    c1 05             	r1 = r7.b0 (u)			  ## cfg_btif.c:126:32
 1e0f2d0:    10 f2 08 10       	if (r0 != r1) goto 16 <__btif_item_read+0x58 : 1e0f2e4 >			  ## cfg_btif.c:126:32
 1e0f2d4:    1e 48             	[r4 + 4] = r6			  ## cfg_btif.c:127:25
 1e0f2d6:    05 70             	r5 = 0
 1e0f2d8:    05 18             	goto 10 <__btif_item_read+0x58 : 1e0f2e4 >
 1e0f2da:    05 fb 0b ff       	r5 = -245 <bank_code_load_addr+0x1E12F7 : 1ffff0b >
 1e0f2de:    02 18             	goto 4 <__btif_item_read+0x58 : 1e0f2e4 >
 1e0f2e0:    05 fb 08 ff       	r5 = -248 <bank_code_load_addr+0x1E12F4 : 1ffff08 >
 1e0f2e4:    50 08             	r0 = r5			  ## cfg_btif.c:132:1
 1e0f2e6:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_btif.c:132:1


syscfg_btif_init:
 1e0f2e8:    7c 01             	[--sp] = {rets, r12-r4}			  ## cfg_btif.c:334:0
 1e0f2ea:    ea 0b             	sp += -44			  ## cfg_btif.c:334:0
 1e0f2ec:    c9 ff d0 22 00 00 	r9 = 8912 <btif_cfg : 22d0 >			  ## cfg_btif.c:334:0
 1e0f2f2:    90 fc 04 00       	r0 = r9 + 4			  ## cfg_btif.c:336:5
 1e0f2f6:    97 f3 91 bd       	call 3111714 <os_mutex_create : 106e1c >			  ## cfg_btif.c:336:5
 1e0f2fa:    c0 ff 76 25 e1 01 	r0 = 31532406 <update_target_end+0x2346 : 1e12576 >			  ## cfg_btif.c:320:21
 1e0f300:    62 16             	call -828 <syscfg_file_open : 1e0efc6 >			  ## cfg_btif.c:320:21
 1e0f302:    04 08             	r4 = r0			  ## cfg_btif.c:320:21
 1e0f304:    4e 28             	if (r4 == 0) goto 156 <syscfg_btif_init+0xBA : 1e0f3a2 >
 1e0f306:    45 a0             	r5 = sp + 4
 1e0f308:    01 70             	r1 = 0			  ## cfg_btif.c:325:21
 1e0f30a:    02 72             	r2 = 32			  ## cfg_btif.c:325:21
 1e0f30c:    50 08             	r0 = r5			  ## cfg_btif.c:325:21
 1e0f30e:    97 f3 ef bd       	call 3111902 <memset : 106ef0 >			  ## cfg_btif.c:325:21
 1e0f312:    40 08             	r0 = r4			  ## cfg_btif.c:326:5
 1e0f314:    51 08             	r1 = r5			  ## cfg_btif.c:326:5
 1e0f316:    80 f3 6d 05       	call 2778 <fget_attrs : 1e0fdf4 >			  ## cfg_btif.c:326:5
 1e0f31a:    30 02             	r0 = [sp+12]			  ## cfg_btif.c:327:30
 1e0f31c:    10 f6 00 90       	[r9 + 0] = r0			  ## cfg_btif.c:327:18
 1e0f320:    40 08             	r0 = r4			  ## cfg_btif.c:328:5
 1e0f322:    99 17             	call -206 <syscfg_file_close : 1e0f256 >			  ## cfg_btif.c:328:5
 1e0f324:    c5 ff 9e 2b e1 01 	r5 = 31533982 <btif_table+0x4 : 1e12b9e >			  ## cfg_btif.c:328:5
 1e0f32a:    60 76             	r0 = 102			  ## cfg_btif.c:328:5
 1e0f32c:    c8 ff 8a 25 e1 01 	r8 = 31532426 <update_target_end+0x235A : 1e1258a >			  ## cfg_btif.c:328:5
 1e0f332:    cb ff 00 08 00 00 	r11 = 2048 <report_mmu_tlb_size : 800 >			  ## cfg_btif.c:328:5
 1e0f338:    ca ff ae 25 e1 01 	r10 = 31532462 <update_target_end+0x237E : 1e125ae >			  ## cfg_btif.c:328:5
 1e0f33e:    cc ff c8 25 e1 01 	r12 = 31532488 <update_target_end+0x2398 : 1e125c8 >			  ## cfg_btif.c:328:5
 1e0f344:    90 f5 24 00       	h[sp+36] = r0			  ## cfg_btif.c:254:22
 1e0f348:    40 a2             	r0 = sp + 36			  ## cfg_btif.c:254:22
 1e0f34a:    a0 17             	call -192 <__btif_item_read : 1e0f28c >			  ## cfg_btif.c:255:15
 1e0f34c:    00 ff 08 0f 23 00 	if (r0 == -248) goto 70 <syscfg_btif_init+0xB0 : 1e0f398 >
 1e0f352:    22 20             	if (r0 == 0) goto 68 <syscfg_btif_init+0xB0 : 1e0f398 >
 1e0f354:    03 f7 fc 5f       	r3 = h[r5 + -4] (u)			  ## cfg_btif.c:259:13
 1e0f358:    40 70             	r0 = 4			  ## cfg_btif.c:259:13
 1e0f35a:    82 08             	r2 = r8			  ## cfg_btif.c:259:13
 1e0f35c:    bf f3 50 ed       	call -9568 <log_print : 1e0ce00 >			  ## cfg_btif.c:259:13
 1e0f360:    00 f6 00 90       	r0 = [r9 + 0]			  ## cfg_btif.c:205:53
 1e0f364:    80 f3 61 05       	call 2754 <sdfile_cpu_addr2flash_addr : 1e0fe2a >			  ## cfg_btif.c:205:18
 1e0f368:    06 f9 00 b0       	r6 = b[r11 + 0] (u)			  ## cfg_btif.c:210:22
 1e0f36c:    07 08             	r7 = r0			  ## cfg_btif.c:205:18
 1e0f36e:    c4 7c             	r4 = 204			  ## cfg_btif.c:210:9
 1e0f370:    16 e0 01 00       	if (r6 == 1) goto 2 <syscfg_btif_init+0x8E : 1e0f376 >
 1e0f374:    84 7c             	r4 = 200			  ## cfg_btif.c:210:9
 1e0f376:    40 08             	r0 = r4			  ## cfg_btif.c:214:5
 1e0f378:    71 08             	r1 = r7			  ## cfg_btif.c:214:5
 1e0f37a:    bf f3 a3 8f       	call -57530 <norflash_ioctl : 1e012c4 >			  ## cfg_btif.c:214:5
 1e0f37e:    16 e0 05 10       	if (r6 != 1) goto 10 <syscfg_btif_init+0xA4 : 1e0f38c >			  ## cfg_btif.c:214:5
 1e0f382:    71 fc 00 01       	r1 = r7 + 256			  ## cfg_btif.c:216:52
 1e0f386:    40 08             	r0 = r4			  ## cfg_btif.c:216:9
 1e0f388:    bf f3 9c 8f       	call -57544 <norflash_ioctl : 1e012c4 >			  ## cfg_btif.c:216:9
 1e0f38c:    20 70             	r0 = 2			  ## cfg_btif.c:222:5
 1e0f38e:    0f 02             	[sp] = r7			  ## cfg_btif.c:222:5
 1e0f390:    a2 08             	r2 = r10			  ## cfg_btif.c:222:5
 1e0f392:    c3 08             	r3 = r12			  ## cfg_btif.c:222:5
 1e0f394:    bf f3 34 ed       	call -9624 <log_print : 1e0ce00 >			  ## cfg_btif.c:222:5
 1e0f398:    80 f7 04 50       	r0 = h[r5 ++= 4] (u)			  ## cfg_btif.c:253:5
 1e0f39c:    d3 31             	if (r0 != 0) goto -90 <syscfg_btif_init+0x5C : 1e0f344 >			  ## cfg_btif.c:253:5
 1e0f39e:    00 70             	r0 = 0
 1e0f3a0:    02 18             	goto 4 <syscfg_btif_init+0xBE : 1e0f3a6 >
 1e0f3a2:    00 fb 0a ff       	r0 = -246 <bank_code_load_addr+0x1E12F6 : 1ffff0a >
 1e0f3a6:    16 0a             	sp += 44
 1e0f3a8:    5c 01             	{pc, r12-r4} = [sp++]			  ## cfg_btif.c:342:5


btif_eara_check_id:
 1e0f3aa:    c1 ff 9e 2b e1 01 	r1 = 31533982 <btif_table+0x4 : 1e12b9e >			  ## cfg_btif.c:232:0
 1e0f3b0:    62 76             	r2 = 102			  ## cfg_btif.c:232:0
 1e0f3b2:    02 f2 05 00       	if (r2 == r0) goto 10 <btif_eara_check_id+0x16 : 1e0f3c0 >			  ## cfg_btif.c:232:0
 1e0f3b6:    82 f7 04 10       	r2 = h[r1 ++= 4] (u)			  ## cfg_btif.c:235:5
 1e0f3ba:    fb 35             	if (r2 != 0) goto -10 <btif_eara_check_id+0x8 : 1e0f3b2 >			  ## cfg_btif.c:235:5
 1e0f3bc:    00 70             	r0 = 0
 1e0f3be:    20 00             	rts			  ## cfg_btif.c:242:5
 1e0f3c0:    10 70             	r0 = 1
 1e0f3c2:    20 00             	rts			  ## cfg_btif.c:242:5


btif_area_read:
 1e0f3c4:    78 01             	[--sp] = {rets, r8-r4}			  ## cfg_btif.c:269:0
 1e0f3c6:    fc 0b             	sp += -8			  ## cfg_btif.c:269:0
 1e0f3c8:    26 08             	r6 = r2			  ## cfg_btif.c:269:0
 1e0f3ca:    18 08             	r8 = r1			  ## cfg_btif.c:269:0
 1e0f3cc:    01 70             	r1 = 0			  ## cfg_btif.c:269:0
 1e0f3ce:    19 02             	[sp+4] = r1			  ## cfg_btif.c:271:25
 1e0f3d0:    09 02             	[sp] = r1			  ## cfg_btif.c:271:25
 1e0f3d2:    90 f5 00 00       	h[sp] = r0			  ## cfg_btif.c:273:18
 1e0f3d6:    c4 ff d4 22 00 00 	r4 = 8916 <btif_cfg+0x4 : 22d4 >			  ## cfg_btif.c:273:18
 1e0f3dc:    f1 07             	r1 = -1			  ## cfg_btif.c:275:5
 1e0f3de:    40 08             	r0 = r4			  ## cfg_btif.c:275:5
 1e0f3e0:    97 f3 20 bd       	call 3111488 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:275:5
 1e0f3e4:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:275:5
 1e0f3e6:    52 17             	call -348 <__btif_item_read : 1e0f28c >			  ## cfg_btif.c:277:11
 1e0f3e8:    07 08             	r7 = r0			  ## cfg_btif.c:277:11
 1e0f3ea:    0c 3e             	if (r7 != 0) goto 24 <btif_area_read+0x40 : 1e0f404 >
 1e0f3ec:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:280:29
 1e0f3f0:    07 fb 0f ff       	r7 = -241 <bank_code_load_addr+0x1E12FB : 1ffff0f >			  ## cfg_btif.c:280:29
 1e0f3f4:    65 f2 06 80       	if (r5 > r6) goto 12 <btif_area_read+0x40 : 1e0f404 >
 1e0f3f8:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:283:13
 1e0f3fa:    80 08             	r0 = r8			  ## cfg_btif.c:283:13
 1e0f3fc:    52 08             	r2 = r5			  ## cfg_btif.c:283:13
 1e0f3fe:    97 f3 71 bd       	call 3111650 <memcpy : 106ee4 >			  ## cfg_btif.c:283:13
 1e0f402:    57 08             	r7 = r5			  ## cfg_btif.c:283:13
 1e0f404:    40 08             	r0 = r4			  ## cfg_btif.c:288:5
 1e0f406:    97 f3 0f bd       	call 3111454 <os_mutex_post : 106e28 >			  ## cfg_btif.c:288:5
 1e0f40a:    70 08             	r0 = r7			  ## cfg_btif.c:290:5
 1e0f40c:    04 0a             	sp += 8			  ## cfg_btif.c:290:5
 1e0f40e:    58 01             	{pc, r8-r4} = [sp++]			  ## cfg_btif.c:290:5


btif_area_write:
 1e0f410:    7e 01             	[--sp] = {rets, r14-r4}			  ## cfg_btif.c:295:0
 1e0f412:    fc 0b             	sp += -8			  ## cfg_btif.c:295:0
 1e0f414:    24 08             	r4 = r2			  ## cfg_btif.c:295:0
 1e0f416:    19 08             	r9 = r1			  ## cfg_btif.c:295:0
 1e0f418:    05 08             	r5 = r0			  ## cfg_btif.c:295:0
 1e0f41a:    c8 ff d4 22 00 00 	r8 = 8916 <btif_cfg+0x4 : 22d4 >			  ## cfg_btif.c:295:0
 1e0f420:    f1 07             	r1 = -1			  ## cfg_btif.c:301:5
 1e0f422:    80 08             	r0 = r8			  ## cfg_btif.c:301:5
 1e0f424:    97 f3 fe bc       	call 3111420 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:301:5
 1e0f428:    95 f5 00 00       	h[sp] = r5			  ## cfg_btif.c:303:18
 1e0f42c:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:303:18
 1e0f42e:    2e 17             	call -420 <__btif_item_read : 1e0f28c >			  ## cfg_btif.c:304:11
 1e0f430:    01 ff 08 0f 50 00 	if (r0 != -248) goto 160 <btif_area_write+0xC6 : 1e0f4d6 >
 1e0f436:    00 a0             	r0 = sp + 0
 1e0f438:    13 17             	call -474 <btif_cfg_get_info : 1e0f260 >			  ## cfg_btif.c:146:5
 1e0f43a:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:147:16
 1e0f43e:    57 08             	r7 = r5			  ## cfg_btif.c:149:17
 1e0f440:    54 f2 01 80       	if (r4 > r5) goto 2 <btif_area_write+0x36 : 1e0f446 >			  ## cfg_btif.c:149:17
 1e0f444:    47 08             	r7 = r4			  ## cfg_btif.c:149:17
 1e0f446:    4b 9a             	r11 = r5 + 4			  ## cfg_btif.c:151:37
 1e0f448:    b0 08             	r0 = r11			  ## cfg_btif.c:152:16
 1e0f44a:    bf f3 e2 f1       	call -7228 <malloc : 1e0d812 >			  ## cfg_btif.c:152:16
 1e0f44e:    06 08             	r6 = r0			  ## cfg_btif.c:152:16
 1e0f450:    48 2c             	if (r6 == 0) goto 144 <btif_area_write+0xD2 : 1e0f4e2 >
 1e0f452:    c0 ff 76 25 e1 01 	r0 = 31532406 <update_target_end+0x2346 : 1e12576 >			  ## cfg_btif.c:157:21
 1e0f458:    b6 15             	call -1172 <syscfg_file_open : 1e0efc6 >			  ## cfg_btif.c:157:21
 1e0f45a:    0a 08             	r10 = r0			  ## cfg_btif.c:157:21
 1e0f45c:    45 20             	if (r0 == 0) goto 138 <btif_area_write+0xD8 : 1e0f4e8 >
 1e0f45e:    01 70             	r1 = 0			  ## cfg_btif.c:164:5
 1e0f460:    60 08             	r0 = r6			  ## cfg_btif.c:164:5
 1e0f462:    b2 08             	r2 = r11			  ## cfg_btif.c:164:5
 1e0f464:    97 f3 44 bd       	call 3111560 <memset : 106ef0 >			  ## cfg_btif.c:164:5
 1e0f468:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_btif.c:167:18
 1e0f46c:    00 c2             	r0 = r0 << 8			  ## cfg_btif.c:167:18
 1e0f46e:    c1 ff 00 ff 0f 00 	r1 = 1048320 <text_size+0xE320C : fff00 >			  ## cfg_btif.c:168:19
 1e0f474:    50 b3             	r0 &= r1			  ## cfg_btif.c:168:19
 1e0f476:    cc fd a0 05       	r0 <= insert(r5, p:20, l:12)			  ## cfg_btif.c:168:19
 1e0f47a:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:169:5
 1e0f47c:    f2 fd c0 c0       	r12 = r0 >> 24			  ## cfg_btif.c:169:5
 1e0f480:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:169:5
 1e0f484:    f2 fd 80 d0       	r13 = r0 >> 16			  ## cfg_btif.c:169:5
 1e0f488:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:169:5
 1e0f48c:    f2 fd 40 e0       	r14 = r0 >> 8			  ## cfg_btif.c:169:5
 1e0f490:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:169:5
 1e0f494:    44 9c             	r4 = r6 + 4			  ## cfg_btif.c:170:21
 1e0f496:    40 08             	r0 = r4			  ## cfg_btif.c:170:5
 1e0f498:    91 08             	r1 = r9			  ## cfg_btif.c:170:5
 1e0f49a:    72 08             	r2 = r7			  ## cfg_btif.c:170:5
 1e0f49c:    97 f3 22 bd       	call 3111492 <memcpy : 106ee4 >			  ## cfg_btif.c:170:5
 1e0f4a0:    31 fd f0 5a       	r1 = r5 & 4294905855			  ## cfg_btif.c:172:21
 1e0f4a4:    40 08             	r0 = r4			  ## cfg_btif.c:172:21
 1e0f4a6:    bf f3 b8 8e       	call -58000 <CRC16 : 1e0121a >			  ## cfg_btif.c:172:21
 1e0f4aa:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:174:5
 1e0f4ae:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:174:5
 1e0f4b2:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:174:5
 1e0f4b6:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:174:5
 1e0f4b8:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:176:31
 1e0f4ba:    02 70             	r2 = 0			  ## cfg_btif.c:176:5
 1e0f4bc:    a0 08             	r0 = r10			  ## cfg_btif.c:176:5
 1e0f4be:    80 f3 14 04       	call 2088 <fseek : 1e0fcea >			  ## cfg_btif.c:176:5
 1e0f4c2:    a0 08             	r0 = r10			  ## cfg_btif.c:178:11
 1e0f4c4:    61 08             	r1 = r6			  ## cfg_btif.c:178:11
 1e0f4c6:    b2 08             	r2 = r11			  ## cfg_btif.c:178:11
 1e0f4c8:    80 f3 35 04       	call 2154 <fwrite : 1e0fd36 >			  ## cfg_btif.c:178:11
 1e0f4cc:    b0 f2 0e 00       	if (r0 == r11) goto 28 <btif_area_write+0xDC : 1e0f4ec >
 1e0f4d0:    07 fb 0e ff       	r7 = -242 <bank_code_load_addr+0x1E12FA : 1ffff0e >
 1e0f4d4:    0b 18             	goto 22 <btif_area_write+0xDC : 1e0f4ec >
 1e0f4d6:    80 08             	r0 = r8			  ## cfg_btif.c:307:9
 1e0f4d8:    97 f3 a6 bc       	call 3111244 <os_mutex_post : 106e28 >			  ## cfg_btif.c:307:9
 1e0f4dc:    07 fb 09 ff       	r7 = -247 <bank_code_load_addr+0x1E12F5 : 1ffff09 >			  ## cfg_btif.c:307:9
 1e0f4e0:    0d 18             	goto 26 <btif_area_write+0xEC : 1e0f4fc >			  ## cfg_btif.c:307:9
 1e0f4e2:    07 fb 10 ff       	r7 = -240 <bank_code_load_addr+0x1E12FC : 1ffff10 >
 1e0f4e6:    07 18             	goto 14 <btif_area_write+0xE6 : 1e0f4f6 >
 1e0f4e8:    07 fb 0a ff       	r7 = -246 <bank_code_load_addr+0x1E12F6 : 1ffff0a >
 1e0f4ec:    60 08             	r0 = r6			  ## cfg_btif.c:188:9
 1e0f4ee:    bf f3 95 f1       	call -7382 <free : 1e0d81c >			  ## cfg_btif.c:188:9
 1e0f4f2:    a0 08             	r0 = r10			  ## cfg_btif.c:190:5
 1e0f4f4:    b0 16             	call -672 <syscfg_file_close : 1e0f256 >			  ## cfg_btif.c:190:5
 1e0f4f6:    80 08             	r0 = r8			  ## cfg_btif.c:313:5
 1e0f4f8:    97 f3 96 bc       	call 3111212 <os_mutex_post : 106e28 >			  ## cfg_btif.c:313:5
 1e0f4fc:    70 08             	r0 = r7			  ## cfg_btif.c:316:1
 1e0f4fe:    04 0a             	sp += 8			  ## cfg_btif.c:316:1
 1e0f500:    5e 01             	{pc, r14-r4} = [sp++]			  ## cfg_btif.c:316:1


sdfile_version:
 1e0f502:    20 fb 02 0b       	r0 = 131072			  ## sdfile_new.c:24:0
 1e0f506:    20 00             	rts			  ## sdfile_new.c:24:1


sdfile_strcase_cmp:
 1e0f508:    75 01             	[--sp] = {rets, r5, r4}			  ## sdfile_new.c:188:0
 1e0f50a:    ee 0b             	sp += -36			  ## sdfile_new.c:188:0
 1e0f50c:    14 08             	r4 = r1			  ## sdfile_new.c:188:0
 1e0f50e:    01 08             	r1 = r0			  ## sdfile_new.c:188:0
 1e0f510:    05 70             	r5 = 0			  ## sdfile_new.c:188:0
 1e0f512:    d5 f5 23 00       	b[sp+35] = r5			  ## sdfile_new.c:193:5
 1e0f516:    30 a1             	r0 = sp + 19			  ## sdfile_new.c:193:5
 1e0f518:    02 71             	r2 = 16			  ## sdfile_new.c:193:5
 1e0f51a:    97 f3 e3 bc       	call 3111366 <memcpy : 106ee4 >			  ## sdfile_new.c:193:5
 1e0f51e:    d5 f5 12 00       	b[sp+18] = r5			  ## sdfile_new.c:194:5
 1e0f522:    20 a0             	r0 = sp + 2			  ## sdfile_new.c:194:5
 1e0f524:    02 71             	r2 = 16			  ## sdfile_new.c:194:5
 1e0f526:    41 08             	r1 = r4			  ## sdfile_new.c:194:5
 1e0f528:    97 f3 dc bc       	call 3111352 <memcpy : 106ee4 >			  ## sdfile_new.c:194:5
 1e0f52c:    30 a1             	r0 = sp + 19
 1e0f52e:    00 fa 00 05       	r0 = b[r0+r5] (u)			  ## sdfile_new.c:153:14
 1e0f532:    01 fc 9f ff       	r1 = r0 + -97			  ## sdfile_new.c:153:27
 1e0f536:    41 04             	r1 = r1.b0 (u)			  ## sdfile_new.c:153:27
 1e0f538:    91 e1 04 80       	if (r1 > 25) goto 8 <sdfile_strcase_cmp+0x3C : 1e0f544 >			  ## sdfile_new.c:153:27
 1e0f53c:    00 8e             	r0 += -32			  ## sdfile_new.c:154:31
 1e0f53e:    31 a1             	r1 = sp + 19			  ## sdfile_new.c:154:31
 1e0f540:    10 fa 00 15       	b[r1+r5] = r0			  ## sdfile_new.c:154:18
 1e0f544:    15 80             	r5 += 1			  ## sdfile_new.c:152:5
 1e0f546:    05 e1 f1 1f       	if (r5 != 16) goto -30 <sdfile_strcase_cmp+0x24 : 1e0f52c >			  ## sdfile_new.c:152:5
 1e0f54a:    00 70             	r0 = 0
 1e0f54c:    21 a0             	r1 = sp + 2
 1e0f54e:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## sdfile_new.c:153:14
 1e0f552:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:153:27
 1e0f556:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:153:27
 1e0f558:    92 e1 04 80       	if (r2 > 25) goto 8 <sdfile_strcase_cmp+0x5C : 1e0f564 >			  ## sdfile_new.c:153:27
 1e0f55c:    01 8e             	r1 += -32			  ## sdfile_new.c:154:31
 1e0f55e:    22 a0             	r2 = sp + 2			  ## sdfile_new.c:154:31
 1e0f560:    11 fa 00 20       	b[r2+r0] = r1			  ## sdfile_new.c:154:18
 1e0f564:    10 80             	r0 += 1			  ## sdfile_new.c:152:5
 1e0f566:    00 e1 f1 1f       	if (r0 != 16) goto -30 <sdfile_strcase_cmp+0x44 : 1e0f54c >			  ## sdfile_new.c:152:5
 1e0f56a:    00 70             	r0 = 0
 1e0f56c:    01 7f             	r1 = 240
 1e0f56e:    32 a1             	r2 = sp + 19
 1e0f570:    23 a0             	r3 = sp + 2
 1e0f572:    84 f9 01 20       	r4 = b[r2 ++= 1] (u)
 1e0f576:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <sdfile_strcase_cmp+0x80 : 1e0f588 >			  ## sdfile_new.c:165:13
 1e0f57c:    05 70             	r5 = 0			  ## sdfile_new.c:166:17
 1e0f57e:    e4 e2 01 00       	if (r4 == 46) goto 2 <sdfile_strcase_cmp+0x7C : 1e0f584 >			  ## sdfile_new.c:166:17
 1e0f582:    05 08             	r5 = r0			  ## sdfile_new.c:166:17
 1e0f584:    50 08             	r0 = r5
 1e0f586:    0c 18             	goto 24 <sdfile_strcase_cmp+0x98 : 1e0f5a0 >
 1e0f588:    05 66             	r5 = b[r3 + 0] (u)			  ## sdfile_new.c:169:28
 1e0f58a:    54 f2 03 10       	if (r4 != r5) goto 6 <sdfile_strcase_cmp+0x8C : 1e0f594 >			  ## sdfile_new.c:169:28
 1e0f58e:    00 70             	r0 = 0
 1e0f590:    07 38             	if (r4 != 0) goto 14 <sdfile_strcase_cmp+0x98 : 1e0f5a0 >
 1e0f592:    0c 18             	goto 24 <sdfile_strcase_cmp+0xA4 : 1e0f5ac >
 1e0f594:    00 70             	r0 = 0
 1e0f596:    f5 e3 03 00       	if (r5 == 63) goto 6 <sdfile_strcase_cmp+0x98 : 1e0f5a0 >
 1e0f59a:    a5 e2 09 10       	if (r5 != 42) goto 18 <sdfile_strcase_cmp+0xA8 : 1e0f5b0 >
 1e0f59e:    10 70             	r0 = 1
 1e0f5a0:    11 80             	r1 += 1			  ## sdfile_new.c:164:5
 1e0f5a2:    13 80             	r3 += 1			  ## sdfile_new.c:181:12
 1e0f5a4:    61 ff ff 19 e4 ff 	if ((r1 & 255) != 0) goto -56 <sdfile_strcase_cmp+0x6A : 1e0f572 >
 1e0f5aa:    00 70             	r0 = 0
 1e0f5ac:    12 0a             	sp += 36
 1e0f5ae:    55 01             	{pc, r5, r4} = [sp++]			  ## sdfile_new.c:201:5
 1e0f5b0:    f0 07             	r0 = -1
 1e0f5b2:    fc 1f             	goto -8 <sdfile_strcase_cmp+0xA4 : 1e0f5ac >


mount:
 1e0f5b4:    7b 01             	[--sp] = {rets, r11-r4}			  ## vfs.c:177:0
 1e0f5b6:    3a 08             	r10 = r3			  ## vfs.c:177:0
 1e0f5b8:    26 08             	r6 = r2			  ## vfs.c:177:0
 1e0f5ba:    18 08             	r8 = r1			  ## vfs.c:177:0
 1e0f5bc:    09 70             	r9 = 0			  ## vfs.c:177:0
 1e0f5be:    0b 70             	r11 = 0			  ## vfs.c:177:0
 1e0f5c0:    05 20             	if (r0 == 0) goto 10 <mount+0x18 : 1e0f5cc >			  ## vfs.c:177:0
 1e0f5c2:    91 02             	r1 = [sp+36]			  ## vfs.c:177:0
 1e0f5c4:    80 f3 54 04       	call 2216 <dev_open : 1e0fe70 >			  ## vfs.c:183:14
 1e0f5c8:    0b 08             	r11 = r0			  ## vfs.c:183:14
 1e0f5ca:    32 20             	if (r0 == 0) goto 100 <mount+0x7C : 1e0f630 >
 1e0f5cc:    00 7a             	r0 = 160			  ## vfs.c:189:27
 1e0f5ce:    bf f3 30 f8       	call -4000 <zalloc : 1e0e632 >			  ## vfs.c:189:27
 1e0f5d2:    05 08             	r5 = r0			  ## vfs.c:189:27
 1e0f5d4:    40 2a             	if (r5 == 0) goto 128 <mount+0xA2 : 1e0f656 >			  ## vfs.c:189:27
 1e0f5d6:    1b f6 0c 50       	[r5 + 12] = r11			  ## vfs.c:193:16
 1e0f5da:    14 70             	r4 = 1			  ## vfs.c:193:16
 1e0f5dc:    14 f9 9c 50       	b[r5 + 156] = r4			  ## vfs.c:194:19
 1e0f5e0:    97 f3 dc bb       	call 3110840 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e0f5e4:    08 00             	csync			  ## atomic.h:47:5
 1e0f5e6:    2c 4b             	[r5 + 72] = r4			  ## atomic.h:49:16
 1e0f5e8:    97 f3 d6 bb       	call 3110828 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e0f5ec:    50 fc 4c 00       	r0 = r5 + 76			  ## vfs.c:196:26
 1e0f5f0:    97 f3 14 bc       	call 3110952 <os_mutex_create : 106e1c >			  ## vfs.c:196:5
 1e0f5f4:    c7 ff 08 01 e1 01 	r7 = 31523080 <vfs_ops_end : 1e10108 >			  ## vfs.c:196:5
 1e0f5fa:    c4 ff 94 00 e1 01 	r4 = 31522964 <vfs_ops_begin : 1e10094 >			  ## vfs.c:196:5
 1e0f600:    74 f2 0d 20       	if (r4 >= r7) goto 26 <mount+0x6A : 1e0f61e >
 1e0f604:    00 48             	r0 = [r4 + 0]			  ## vfs.c:199:26
 1e0f606:    61 08             	r1 = r6			  ## vfs.c:199:14
 1e0f608:    97 f3 74 bc       	call 3111144 <strcmp : 106ef4 >			  ## vfs.c:199:14
 1e0f60c:    05 30             	if (r0 != 0) goto 10 <mount+0x64 : 1e0f618 >			  ## vfs.c:199:14
 1e0f60e:    12 48             	r2 = [r4 + 4]			  ## vfs.c:200:27
 1e0f610:    50 08             	r0 = r5			  ## vfs.c:200:22
 1e0f612:    a1 08             	r1 = r10			  ## vfs.c:200:22
 1e0f614:    82 00             	call r2			  ## vfs.c:200:22
 1e0f616:    0d 20             	if (r0 == 0) goto 26 <mount+0x7E : 1e0f632 >			  ## vfs.c:200:22
 1e0f618:    44 87             	r4 += 116			  ## vfs.c:198:5
 1e0f61a:    74 f2 f3 3f       	if (r4 < r7) goto -26 <mount+0x50 : 1e0f604 >
 1e0f61e:    0b e0 03 00       	if (r11 == 0) goto 6 <mount+0x74 : 1e0f628 >
 1e0f622:    b0 08             	r0 = r11			  ## vfs.c:212:9
 1e0f624:    80 f3 50 04       	call 2208 <dev_close : 1e0fec8 >			  ## vfs.c:212:9
 1e0f628:    50 08             	r0 = r5			  ## vfs.c:215:5
 1e0f62a:    bf f3 f7 f0       	call -7698 <free : 1e0d81c >			  ## vfs.c:215:5
 1e0f62e:    13 18             	goto 38 <mount+0xA2 : 1e0f656 >			  ## vfs.c:215:5
 1e0f630:    12 18             	goto 36 <mount+0xA2 : 1e0f656 >
 1e0f632:    2c 4a             	[r5 + 8] = r4			  ## vfs.c:201:25
 1e0f634:    18 f6 04 50       	[r5 + 4] = r8			  ## vfs.c:202:26
 1e0f638:    97 f3 b0 bb       	call 3110752 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0f63c:    c0 ff a8 08 00 00 	r0 = 2216 <head.1196 : 8a8 >			  ## spinlock.h:77:5
 1e0f642:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e0f644:    52 fc 40 00       	r2 = r5 + 64			  ## vfs.c:204:36
 1e0f648:    1a 40             	[r0 + 4] = r2			  ## list.h:137:16
 1e0f64a:    08 4b             	[r5 + 64] = r0			  ## list.h:138:16
 1e0f64c:    19 4b             	[r5 + 68] = r1			  ## list.h:139:16
 1e0f64e:    0a 42             	[r1 + 0] = r2			  ## list.h:140:16
 1e0f650:    97 f3 a2 bb       	call 3110724 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0f654:    59 08             	r9 = r5
 1e0f656:    90 08             	r0 = r9			  ## vfs.c:218:1
 1e0f658:    5b 01             	{pc, r11-r4} = [sp++]			  ## vfs.c:218:1


sdfile_init:
 1e0f65a:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:326:0
 1e0f65c:    ec 0b             	sp += -40			  ## sdfile_new.c:326:0
 1e0f65e:    c4 ff c0 25 00 00 	r4 = 9664 <_sdfile_handl : 25c0 >			  ## sdfile_new.c:326:0
 1e0f664:    01 70             	r1 = 0			  ## sdfile_new.c:326:0
 1e0f666:    c8 ff 00 08 00 00 	r8 = 2048 <report_mmu_tlb_size : 800 >			  ## sdfile_new.c:326:0
 1e0f66c:    02 f6 10 80       	r2 = [r8 + 16]			  ## sdfile_new.c:329:46
 1e0f670:    00 f6 14 80       	r0 = [r8 + 20]			  ## sdfile_new.c:330:46
 1e0f674:    59 48             	[r4 + 20] = r1			  ## sdfile_new.c:328:5
 1e0f676:    49 48             	[r4 + 16] = r1			  ## sdfile_new.c:328:5
 1e0f678:    0a 48             	[r4 + 0] = r2			  ## sdfile_new.c:329:30
 1e0f67a:    18 48             	[r4 + 4] = r0			  ## sdfile_new.c:330:30
 1e0f67c:    28 48             	[r4 + 8] = r0			  ## sdfile_new.c:235:27
 1e0f67e:    21 40             	r1 = [r0 + 8]			  ## sdfile_new.c:244:58
 1e0f680:    01 09             	r1 += r0			  ## sdfile_new.c:244:46
 1e0f682:    39 48             	[r4 + 12] = r1			  ## sdfile_new.c:244:27
 1e0f684:    71 51             	r1 = h[r0 + 46] (u)			  ## sdfile_new.c:212:16
 1e0f686:    0e 32             	if (r1 != 0) goto 28 <sdfile_init+0x4A : 1e0f6a4 >			  ## sdfile_new.c:212:16
 1e0f688:    00 82             	r0 += 32			  ## sdfile_new.c:211:67
 1e0f68a:    06 fc 2e 00       	r6 = r0 + 46			  ## sdfile_new.c:213:40
 1e0f68e:    c5 ff df 28 e1 01 	r5 = 31533279 <update_target_end+0x26AF : 1e128df >			  ## sdfile_new.c:213:40
 1e0f694:    61 fc e2 ff       	r1 = r6 + -30			  ## sdfile_new.c:213:15
 1e0f698:    50 08             	r0 = r5			  ## sdfile_new.c:213:15
 1e0f69a:    36 17             	call -404 <sdfile_strcase_cmp : 1e0f508 >			  ## sdfile_new.c:213:15
 1e0f69c:    10 20             	if (r0 == 0) goto 32 <sdfile_init+0x64 : 1e0f6be >			  ## sdfile_new.c:214:13
 1e0f69e:    80 f7 20 60       	r0 = h[r6 ++= 32] (u)			  ## sdfile_new.c:212:16
 1e0f6a2:    f8 21             	if (r0 == 0) goto -16 <sdfile_init+0x3A : 1e0f694 >
 1e0f6a4:    8f f3 f7 9e       	call 2047470 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0f6a8:    c2 ff 63 23 e1 01 	r2 = 31531875 <update_target_end+0x2133 : 1e12363 >			  ## sdfile_new.c:337:9
 1e0f6ae:    40 70             	r0 = 4			  ## sdfile_new.c:337:9
 1e0f6b0:    bf f3 a6 eb       	call -10420 <log_print : 1e0ce00 >			  ## sdfile_new.c:337:9
 1e0f6b4:    04 fb 04 ff       	r4 = -252 <bank_code_load_addr+0x1E12F0 : 1ffff04 >			  ## sdfile_new.c:337:9
 1e0f6b8:    40 08             	r0 = r4			  ## sdfile_new.c:355:1
 1e0f6ba:    14 0a             	sp += 40			  ## sdfile_new.c:355:1
 1e0f6bc:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:355:1
 1e0f6be:    01 f6 d6 6f       	r1 = [r6 + -42]			  ## sdfile_new.c:215:43
 1e0f6c2:    11 f6 04 80       	[r8 + 4] = r1			  ## sdfile_new.c:215:35
 1e0f6c6:    03 f6 da 6f       	r3 = [r6 + -38]			  ## sdfile_new.c:216:42
 1e0f6ca:    13 f6 0c 80       	[r8 + 12] = r3			  ## sdfile_new.c:216:34
 1e0f6ce:    c2 ff 90 23 e1 01 	r2 = 31531920 <update_target_end+0x2160 : 1e12390 >			  ## sdfile_new.c:217:13
 1e0f6d4:    20 70             	r0 = 2			  ## sdfile_new.c:217:13
 1e0f6d6:    09 02             	[sp] = r1			  ## sdfile_new.c:217:13
 1e0f6d8:    bf f3 92 eb       	call -10460 <log_print : 1e0ce00 >			  ## sdfile_new.c:217:13
 1e0f6dc:    00 70             	r0 = 0			  ## sdfile_new.c:340:5
 1e0f6de:    05 70             	r5 = 0			  ## sdfile_new.c:340:5
 1e0f6e0:    bf f3 5a a4       	call -46924 <norflash_open : 1e03f98 >			  ## sdfile_new.c:340:5
 1e0f6e4:    c0 ff 01 56 04 40 	r0 = 1074025985 <text_size+0x2890D : 45601 >			  ## sdfile_new.c:341:5
 1e0f6ea:    81 08             	r1 = r8			  ## sdfile_new.c:341:5
 1e0f6ec:    bf f3 ea 8d       	call -58412 <norflash_ioctl : 1e012c4 >			  ## sdfile_new.c:341:5
 1e0f6f0:    9d 02             	[sp+36] = r5			  ## sdfile_new.c:2205:9
 1e0f6f2:    41 a2             	r1 = sp + 36			  ## sdfile_new.c:2205:9
 1e0f6f4:    70 76             	r0 = 103			  ## sdfile_new.c:2206:5
 1e0f6f6:    bf f3 e5 8d       	call -58422 <norflash_ioctl : 1e012c4 >			  ## sdfile_new.c:2206:5
 1e0f6fa:    90 02             	r0 = [sp+36]			  ## sdfile_new.c:2208:12
 1e0f6fc:    83 d2             	r3 = r0 >> 10			  ## sdfile_new.c:342:5
 1e0f6fe:    c2 ff b7 23 e1 01 	r2 = 31531959 <update_target_end+0x2187 : 1e123b7 >			  ## sdfile_new.c:342:5
 1e0f704:    20 70             	r0 = 2			  ## sdfile_new.c:342:5
 1e0f706:    bf f3 7b eb       	call -10506 <log_print : 1e0ce00 >			  ## sdfile_new.c:342:5
 1e0f70a:    20 48             	r0 = [r4 + 8]			  ## sdfile_new.c:256:28
 1e0f70c:    41 a0             	r1 = sp + 4
 1e0f70e:    07 fd 02 19       	r7 = r1 | 2
 1e0f712:    05 08             	r5 = r0
 1e0f714:    40 a0             	r0 = sp + 4
 1e0f716:    02 72             	r2 = 32			  ## sdfile_new.c:259:9
 1e0f718:    51 08             	r1 = r5			  ## sdfile_new.c:259:9
 1e0f71a:    97 f3 e3 bb       	call 3110854 <memcpy : 106ee4 >			  ## sdfile_new.c:259:9
 1e0f71e:    e1 71             	r1 = 30			  ## sdfile_new.c:261:20
 1e0f720:    70 08             	r0 = r7			  ## sdfile_new.c:261:20
 1e0f722:    bf f3 7a 8d       	call -58636 <CRC16 : 1e0121a >			  ## sdfile_new.c:261:20
 1e0f726:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## sdfile_new.c:262:34
 1e0f72a:    10 f2 33 10       	if (r0 != r1) goto 102 <sdfile_init+0x13A : 1e0f794 >			  ## sdfile_new.c:262:13
 1e0f72e:    36 02             	r6 = [sp+12]			  ## sdfile_new.c:268:30
 1e0f730:    81 f5 12 00       	r1 = h[sp+18] (u)			  ## sdfile_new.c:269:23
 1e0f734:    40 bd             	r0 = r6 + r5			  ## sdfile_new.c:268:18
 1e0f736:    ed 23             	if (r1 == 0) goto -38 <sdfile_init+0xB8 : 1e0f712 >
 1e0f738:    10 48             	r0 = [r4 + 4]			  ## sdfile_new.c:147:29
 1e0f73a:    01 48             	r1 = [r4 + 0]			  ## sdfile_new.c:147:48
 1e0f73c:    20 ba             	r0 = r5 - r0			  ## sdfile_new.c:147:19
 1e0f73e:    45 b0             	r5 = r0 + r1			  ## sdfile_new.c:147:38
 1e0f740:    c0 ff 0b 24 e1 01 	r0 = 31532043 <update_target_end+0x21DB : 1e1240b >			  ## sdfile_new.c:303:9
 1e0f746:    51 08             	r1 = r5			  ## sdfile_new.c:303:9
 1e0f748:    62 08             	r2 = r6			  ## sdfile_new.c:303:9
 1e0f74a:    bf f3 2c eb       	call -10664 <printf : 1e0cda6 >			  ## sdfile_new.c:303:9
 1e0f74e:    01 f9 00 80       	r1 = b[r8 + 0] (u)			  ## sdfile_new.c:304:26
 1e0f752:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## sdfile_new.c:304:13
 1e0f756:    11 e0 02 00       	if (r1 == 1) goto 4 <sdfile_init+0x104 : 1e0f75e >
 1e0f75a:    00 fb 00 10       	r0 = 4096 <sys_clock_limit+0x50 : 1000 >			  ## sdfile_new.c:304:13
 1e0f75e:    61 fb 00 09       	r1 = 0 - r0			  ## sdfile_new.c:308:63
 1e0f762:    42 bd             	r2 = r6 + r5			  ## sdfile_new.c:307:36
 1e0f764:    20 09             	r0 += r2			  ## sdfile_new.c:308:30
 1e0f766:    f0 81             	r0 += 31			  ## sdfile_new.c:308:30
 1e0f768:    e2 fd 10 40       	r4 = r0 & r1			  ## sdfile_new.c:308:63
 1e0f76c:    c0 ff 21 24 e1 01 	r0 = 31532065 <update_target_end+0x21F1 : 1e12421 >			  ## sdfile_new.c:310:9
 1e0f772:    41 08             	r1 = r4			  ## sdfile_new.c:310:9
 1e0f774:    bf f3 17 eb       	call -10706 <printf : 1e0cda6 >			  ## sdfile_new.c:310:9
 1e0f778:    41 fc f0 ff       	r1 = r4 + -16			  ## sdfile_new.c:311:50
 1e0f77c:    c4 ff 44 25 00 00 	r4 = 9540 <burn_code : 2544 >			  ## sdfile_new.c:311:9
 1e0f782:    02 71             	r2 = 16			  ## sdfile_new.c:311:9
 1e0f784:    40 08             	r0 = r4			  ## sdfile_new.c:311:9
 1e0f786:    bf f3 24 8d       	call -58808 <norflash_origin_read : 1e011d2 >			  ## sdfile_new.c:311:9
 1e0f78a:    01 71             	r1 = 16			  ## sdfile_new.c:312:9
 1e0f78c:    40 08             	r0 = r4			  ## sdfile_new.c:312:9
 1e0f78e:    bf f3 37 ec       	call -10130 <put_buf : 1e0d000 >			  ## sdfile_new.c:312:9
 1e0f792:    07 18             	goto 14 <sdfile_init+0x148 : 1e0f7a2 >			  ## sdfile_new.c:312:9
 1e0f794:    c2 ff dd 23 e1 01 	r2 = 31531997 <update_target_end+0x21AD : 1e123dd >			  ## sdfile_new.c:264:13
 1e0f79a:    40 70             	r0 = 4			  ## sdfile_new.c:264:13
 1e0f79c:    53 08             	r3 = r5			  ## sdfile_new.c:264:13
 1e0f79e:    bf f3 2f eb       	call -10658 <log_print : 1e0ce00 >			  ## sdfile_new.c:264:13
 1e0f7a2:    04 70             	r4 = 0			  ## sdfile_new.c:347:9
 1e0f7a4:    c1 ff 2e 24 e1 01 	r1 = 31532078 <update_target_end+0x21FE : 1e1242e >			  ## sdfile_new.c:347:9
 1e0f7aa:    c2 ff 32 24 e1 01 	r2 = 31532082 <update_target_end+0x2202 : 1e12432 >			  ## sdfile_new.c:347:9
 1e0f7b0:    00 70             	r0 = 0			  ## sdfile_new.c:347:9
 1e0f7b2:    03 70             	r3 = 0			  ## sdfile_new.c:347:9
 1e0f7b4:    0c 02             	[sp] = r4			  ## sdfile_new.c:347:9
 1e0f7b6:    fe 16             	call -516 <mount : 1e0f5b4 >			  ## sdfile_new.c:347:9
 1e0f7b8:    04 20             	if (r0 == 0) goto 8 <sdfile_init+0x168 : 1e0f7c2 >			  ## sdfile_new.c:347:9
 1e0f7ba:    c2 ff 39 24 e1 01 	r2 = 31532089 <update_target_end+0x2209 : 1e12439 >			  ## sdfile_new.c:348:9
 1e0f7c0:    03 18             	goto 6 <sdfile_init+0x16E : 1e0f7c8 >			  ## sdfile_new.c:348:9
 1e0f7c2:    c2 ff 5e 24 e1 01 	r2 = 31532126 <update_target_end+0x222E : 1e1245e >			  ## sdfile_new.c:350:9
 1e0f7c8:    10 70             	r0 = 1
 1e0f7ca:    bf f3 19 eb       	call -10702 <log_print : 1e0ce00 >
 1e0f7ce:    74 1f             	goto -280 <sdfile_init+0x5E : 1e0f6b8 >


sdfile_mount:
 1e0f7d0:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:1041:0
 1e0f7d2:    04 08             	r4 = r0			  ## sdfile_new.c:1041:0
 1e0f7d4:    80 72             	r0 = 40			  ## fs.h:206:55
 1e0f7d6:    bf f3 2c f7       	call -4520 <zalloc : 1e0e632 >			  ## fs.h:206:55
 1e0f7da:    81 99             	r1 = r4 + 24
 1e0f7dc:    01 20             	if (r0 == 0) goto 2 <sdfile_mount+0x10 : 1e0f7e0 >
 1e0f7de:    08 42             	[r1 + 0] = r0			  ## fs.h:209:17
 1e0f7e0:    c2 ff c0 25 00 00 	r2 = 9664 <_sdfile_handl : 25c0 >			  ## sdfile_new.c:1052:32
 1e0f7e6:    23 44             	r3 = [r2 + 8]			  ## sdfile_new.c:1045:32
 1e0f7e8:    1b 42             	[r1 + 4] = r3			  ## sdfile_new.c:1045:22
 1e0f7ea:    13 76             	r3 = 97			  ## sdfile_new.c:1046:22
 1e0f7ec:    1b 63             	b[r1 + 17] = r3			  ## sdfile_new.c:1046:22
 1e0f7ee:    03 77             	r3 = 112			  ## sdfile_new.c:1047:22
 1e0f7f0:    2b 63             	b[r1 + 18] = r3			  ## sdfile_new.c:1047:22
 1e0f7f2:    3b 63             	b[r1 + 19] = r3			  ## sdfile_new.c:1048:22
 1e0f7f4:    03 70             	r3 = 0			  ## sdfile_new.c:1048:22
 1e0f7f6:    4b 63             	b[r1 + 20] = r3			  ## sdfile_new.c:1050:22
 1e0f7f8:    31 44             	r1 = [r2 + 12]			  ## sdfile_new.c:1052:32
 1e0f7fa:    19 40             	[r0 + 4] = r1			  ## sdfile_new.c:1052:22
 1e0f7fc:    21 77             	r1 = 114			  ## sdfile_new.c:1053:22
 1e0f7fe:    19 61             	b[r0 + 17] = r1			  ## sdfile_new.c:1053:22
 1e0f800:    51 76             	r1 = 101			  ## sdfile_new.c:1054:22
 1e0f802:    29 61             	b[r0 + 18] = r1			  ## sdfile_new.c:1054:22
 1e0f804:    31 77             	r1 = 115			  ## sdfile_new.c:1055:22
 1e0f806:    39 61             	b[r0 + 19] = r1			  ## sdfile_new.c:1055:22
 1e0f808:    4b 61             	b[r0 + 20] = r3			  ## sdfile_new.c:1056:22
 1e0f80a:    21 70             	r1 = 2			  ## sdfile_new.c:1058:18
 1e0f80c:    00 70             	r0 = 0			  ## sdfile_new.c:1060:5
 1e0f80e:    11 f9 9d 40       	b[r4 + 157] = r1			  ## sdfile_new.c:1058:18
 1e0f812:    54 01             	{pc, r4} = [sp++]			  ## sdfile_new.c:1060:5


__sdfile_path_get_name:
 1e0f814:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:362:0
 1e0f816:    02 60             	r2 = b[r0 + 0] (u)			  ## sdfile_new.c:366:9
 1e0f818:    14 90             	r4 = r0 + 1			  ## sdfile_new.c:367:18
 1e0f81a:    15 08             	r5 = r1
 1e0f81c:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0xE : 1e0f822 >
 1e0f820:    04 08             	r4 = r0			  ## sdfile_new.c:366:9
 1e0f822:    f1 72             	r1 = 47			  ## sdfile_new.c:369:11
 1e0f824:    40 08             	r0 = r4			  ## sdfile_new.c:369:11
 1e0f826:    97 f3 6f bb       	call 3110622 <strchr : 106f08 >			  ## sdfile_new.c:369:11
 1e0f82a:    02 20             	if (r0 == 0) goto 4 <__sdfile_path_get_name+0x1C : 1e0f830 >			  ## sdfile_new.c:370:9
 1e0f82c:    26 b1             	r6 = r0 - r4			  ## sdfile_new.c:371:20
 1e0f82e:    04 18             	goto 8 <__sdfile_path_get_name+0x24 : 1e0f838 >
 1e0f830:    40 08             	r0 = r4			  ## sdfile_new.c:373:16
 1e0f832:    97 f3 63 bb       	call 3110598 <strlen : 106efc >			  ## sdfile_new.c:373:16
 1e0f836:    06 08             	r6 = r0			  ## sdfile_new.c:373:16
 1e0f838:    67 08             	r7 = r6			  ## sdfile_new.c:376:9
 1e0f83a:    f6 e0 01 b0       	ifs (r6 < 15) goto 2 <__sdfile_path_get_name+0x2C : 1e0f840 >			  ## sdfile_new.c:376:9
 1e0f83e:    f7 70             	r7 = 15			  ## sdfile_new.c:376:9
 1e0f840:    50 08             	r0 = r5			  ## sdfile_new.c:379:5
 1e0f842:    41 08             	r1 = r4			  ## sdfile_new.c:379:5
 1e0f844:    72 08             	r2 = r7			  ## sdfile_new.c:379:5
 1e0f846:    97 f3 4d bb       	call 3110554 <memcpy : 106ee4 >			  ## sdfile_new.c:379:5
 1e0f84a:    00 70             	r0 = 0			  ## sdfile_new.c:379:5
 1e0f84c:    10 fa 00 57       	b[r5+r7] = r0			  ## sdfile_new.c:380:15
 1e0f850:    10 2e             	if (r7 == 0) goto 32 <__sdfile_path_get_name+0x5E : 1e0f872 >			  ## sdfile_new.c:380:15
 1e0f852:    d0 bd             	r0 = ~r6			  ## sdfile_new.c:152:15
 1e0f854:    00 ef 01 c0       	ifs (r0 > -16) goto 2 <__sdfile_path_get_name+0x46 : 1e0f85a >			  ## sdfile_new.c:152:15
 1e0f858:    00 07             	r0 = -16			  ## sdfile_new.c:152:15
 1e0f85a:    10 80             	r0 += 1			  ## sdfile_new.c:152:15
 1e0f85c:    01 6a             	r1 = b[r5 + 0] (u)			  ## sdfile_new.c:153:14
 1e0f85e:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:153:27
 1e0f862:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:153:27
 1e0f864:    92 e1 02 80       	if (r2 > 25) goto 4 <__sdfile_path_get_name+0x58 : 1e0f86c >			  ## sdfile_new.c:153:27
 1e0f868:    01 8e             	r1 += -32			  ## sdfile_new.c:154:31
 1e0f86a:    09 6a             	b[r5 + 0] = r1			  ## sdfile_new.c:154:18
 1e0f86c:    10 80             	r0 += 1			  ## sdfile_new.c:152:5
 1e0f86e:    15 80             	r5 += 1			  ## sdfile_new.c:156:13
 1e0f870:    f5 31             	if (r0 != 0) goto -22 <__sdfile_path_get_name+0x48 : 1e0f85c >
 1e0f872:    81 b9             	r1 = r4 + r6			  ## sdfile_new.c:382:14
 1e0f874:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:383:9
 1e0f876:    10 92             	r0 = r1 + 1			  ## sdfile_new.c:384:18
 1e0f878:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0x6A : 1e0f87e >
 1e0f87c:    10 08             	r0 = r1			  ## sdfile_new.c:383:9
 1e0f87e:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:387:5


sdfile_open_file_in_dir:
 1e0f880:    7b 01             	[--sp] = {rets, r11-r4}			  ## sdfile_new.c:538:0
 1e0f882:    f0 0b             	sp += -32			  ## sdfile_new.c:538:0
 1e0f884:    26 08             	r6 = r2			  ## sdfile_new.c:538:0
 1e0f886:    19 08             	r9 = r1			  ## sdfile_new.c:538:0
 1e0f888:    0a 08             	r10 = r0			  ## sdfile_new.c:538:0
 1e0f88a:    27 42             	r7 = [r1 + 8]			  ## sdfile_new.c:541:30
 1e0f88c:    00 a0             	r0 = sp + 0
 1e0f88e:    05 91             	r5 = r0 + 16
 1e0f890:    04 fd 02 09       	r4 = r0 | 2
 1e0f894:    a8 fc 04 00       	r8 = r10 + 4			  ## sdfile_new.c:543:56
 1e0f898:    0b 72             	r11 = 32
 1e0f89a:    07 82             	r7 += 32			  ## sdfile_new.c:399:29
 1e0f89c:    00 a0             	r0 = sp + 0
 1e0f89e:    02 72             	r2 = 32			  ## sdfile_new.c:399:9
 1e0f8a0:    71 08             	r1 = r7			  ## sdfile_new.c:399:9
 1e0f8a2:    97 f3 1f bb       	call 3110462 <memcpy : 106ee4 >			  ## sdfile_new.c:399:9
 1e0f8a6:    e1 71             	r1 = 30			  ## sdfile_new.c:401:13
 1e0f8a8:    40 08             	r0 = r4			  ## sdfile_new.c:401:13
 1e0f8aa:    bf f3 b6 8c       	call -59028 <CRC16 : 1e0121a >			  ## sdfile_new.c:401:13
 1e0f8ae:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:401:81
 1e0f8b2:    10 f2 09 10       	if (r0 != r1) goto 18 <sdfile_open_file_in_dir+0x48 : 1e0f8c8 >			  ## sdfile_new.c:401:13
 1e0f8b6:    50 08             	r0 = r5			  ## sdfile_new.c:405:15
 1e0f8b8:    61 08             	r1 = r6			  ## sdfile_new.c:405:15
 1e0f8ba:    26 16             	call -948 <sdfile_strcase_cmp : 1e0f508 >			  ## sdfile_new.c:405:15
 1e0f8bc:    0b 20             	if (r0 == 0) goto 22 <sdfile_open_file_in_dir+0x54 : 1e0f8d4 >			  ## sdfile_new.c:407:13
 1e0f8be:    80 f5 0e 00       	r0 = h[sp+14] (u)			  ## sdfile_new.c:414:18
 1e0f8c2:    07 82             	r7 += 32			  ## sdfile_new.c:414:13
 1e0f8c4:    eb 21             	if (r0 == 0) goto -42 <sdfile_open_file_in_dir+0x1C : 1e0f89c >			  ## sdfile_new.c:414:13
 1e0f8c6:    14 18             	goto 40 <sdfile_open_file_in_dir+0x70 : 1e0f8f0 >			  ## sdfile_new.c:414:13
 1e0f8c8:    fb 8f             	r11 += -1			  ## sdfile_new.c:402:20
 1e0f8ca:    0b e0 e6 cf       	ifs (r11 > 0) goto -52 <sdfile_open_file_in_dir+0x1A : 1e0f89a >
 1e0f8ce:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E12EE : 1ffff02 >
 1e0f8d2:    1c 18             	goto 56 <sdfile_open_file_in_dir+0x8C : 1e0f90c >
 1e0f8d4:    01 a0             	r1 = sp + 0
 1e0f8d6:    02 72             	r2 = 32			  ## sdfile_new.c:409:17
 1e0f8d8:    80 08             	r0 = r8			  ## sdfile_new.c:409:17
 1e0f8da:    97 f3 03 bb       	call 3110406 <memcpy : 106ee4 >			  ## sdfile_new.c:409:17
 1e0f8de:    00 f9 10 a0       	r0 = b[r10 + 16] (u)			  ## sdfile_new.c:546:25
 1e0f8e2:    24 f3 07 00       	if ((r0 & 16) != 0) goto 14 <sdfile_open_file_in_dir+0x74 : 1e0f8f4 >			  ## sdfile_new.c:546:25
 1e0f8e6:    00 f6 08 90       	r0 = [r9 + 8]			  ## sdfile_new.c:551:42
 1e0f8ea:    01 f6 08 a0       	r1 = [r10 + 8]			  ## sdfile_new.c:551:29
 1e0f8ee:    0a 18             	goto 20 <sdfile_open_file_in_dir+0x84 : 1e0f904 >			  ## sdfile_new.c:551:29
 1e0f8f0:    10 70             	r0 = 1
 1e0f8f2:    0c 18             	goto 24 <sdfile_open_file_in_dir+0x8C : 1e0f90c >
 1e0f8f4:    c0 ff c0 25 00 00 	r0 = 9664 <_sdfile_handl : 25c0 >
 1e0f8fa:    01 40             	r1 = [r0 + 0]			  ## sdfile_new.c:142:29
 1e0f8fc:    02 f6 08 a0       	r2 = [r10 + 8]			  ## sdfile_new.c:549:69
 1e0f900:    10 40             	r0 = [r0 + 4]			  ## sdfile_new.c:142:53
 1e0f902:    61 b4             	r1 = r2 - r1			  ## sdfile_new.c:142:19
 1e0f904:    10 09             	r0 += r1
 1e0f906:    10 f6 08 a0       	[r10 + 8] = r0
 1e0f90a:    00 70             	r0 = 0
 1e0f90c:    10 0a             	sp += 32
 1e0f90e:    5b 01             	{pc, r11-r4} = [sp++]			  ## sdfile_new.c:556:5


sdfile_for_each_dir:
 1e0f910:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:456:0
 1e0f912:    f0 0b             	sp += -32			  ## sdfile_new.c:456:0
 1e0f914:    16 08             	r6 = r1			  ## sdfile_new.c:456:0
 1e0f916:    08 08             	r8 = r0			  ## sdfile_new.c:456:0
 1e0f918:    c0 ff c0 25 00 00 	r0 = 9664 <_sdfile_handl : 25c0 >			  ## sdfile_new.c:459:24
 1e0f91e:    35 40             	r5 = [r0 + 12]			  ## sdfile_new.c:459:24
 1e0f920:    00 a0             	r0 = sp + 0
 1e0f922:    07 91             	r7 = r0 + 16
 1e0f924:    04 fd 02 09       	r4 = r0 | 2
 1e0f928:    00 a0             	r0 = sp + 0
 1e0f92a:    02 72             	r2 = 32			  ## sdfile_new.c:462:9
 1e0f92c:    51 08             	r1 = r5			  ## sdfile_new.c:462:9
 1e0f92e:    97 f3 d9 ba       	call 3110322 <memcpy : 106ee4 >			  ## sdfile_new.c:462:9
 1e0f932:    e1 71             	r1 = 30			  ## sdfile_new.c:463:13
 1e0f934:    40 08             	r0 = r4			  ## sdfile_new.c:463:13
 1e0f936:    bf f3 70 8c       	call -59168 <CRC16 : 1e0121a >			  ## sdfile_new.c:463:13
 1e0f93a:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:463:81
 1e0f93e:    10 f2 0c 10       	if (r0 != r1) goto 24 <sdfile_for_each_dir+0x4A : 1e0f95a >			  ## sdfile_new.c:463:81
 1e0f942:    70 08             	r0 = r7			  ## sdfile_new.c:467:15
 1e0f944:    61 08             	r1 = r6			  ## sdfile_new.c:467:15
 1e0f946:    e0 15             	call -1088 <sdfile_strcase_cmp : 1e0f508 >			  ## sdfile_new.c:467:15
 1e0f948:    0b 20             	if (r0 == 0) goto 22 <sdfile_for_each_dir+0x50 : 1e0f960 >
 1e0f94a:    20 02             	r0 = [sp+8]			  ## sdfile_new.c:474:22
 1e0f94c:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:475:19
 1e0f950:    05 09             	r5 += r0			  ## sdfile_new.c:474:14
 1e0f952:    ea 23             	if (r1 == 0) goto -44 <sdfile_for_each_dir+0x18 : 1e0f928 >
 1e0f954:    00 fb 01 ff       	r0 = -255 <bank_code_load_addr+0x1E12ED : 1ffff01 >
 1e0f958:    0b 18             	goto 22 <sdfile_for_each_dir+0x60 : 1e0f970 >
 1e0f95a:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E12F1 : 1ffff05 >
 1e0f95e:    08 18             	goto 16 <sdfile_for_each_dir+0x60 : 1e0f970 >
 1e0f960:    01 a0             	r1 = sp + 0
 1e0f962:    02 72             	r2 = 32			  ## sdfile_new.c:469:13
 1e0f964:    80 08             	r0 = r8			  ## sdfile_new.c:469:13
 1e0f966:    97 f3 bd ba       	call 3110266 <memcpy : 106ee4 >			  ## sdfile_new.c:469:13
 1e0f96a:    15 f6 04 80       	[r8 + 4] = r5			  ## sdfile_new.c:470:28
 1e0f96e:    00 70             	r0 = 0			  ## sdfile_new.c:470:28
 1e0f970:    10 0a             	sp += 32
 1e0f972:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:478:1


sdfile_open:
 1e0f974:    79 01             	[--sp] = {rets, r9-r4}			  ## sdfile_new.c:726:0
 1e0f976:    c6 0b             	sp += -116			  ## sdfile_new.c:726:0
 1e0f978:    14 08             	r4 = r1			  ## sdfile_new.c:726:0
 1e0f97a:    09 08             	r9 = r0			  ## sdfile_new.c:726:0
 1e0f97c:    70 a0             	r0 = sp + 7			  ## sdfile_new.c:726:0
 1e0f97e:    01 70             	r1 = 0			  ## sdfile_new.c:730:10
 1e0f980:    12 71             	r2 = 17			  ## sdfile_new.c:730:10
 1e0f982:    07 70             	r7 = 0
 1e0f984:    97 f3 b4 ba       	call 3110248 <memset : 106ef0 >			  ## sdfile_new.c:730:10
 1e0f988:    23 28             	if (r4 == 0) goto 70 <sdfile_open+0x5C : 1e0f9d0 >
 1e0f98a:    40 72             	r0 = 36			  ## sdfile_new.c:736:31
 1e0f98c:    bf f3 41 ef       	call -8574 <malloc : 1e0d812 >			  ## sdfile_new.c:736:31
 1e0f990:    05 08             	r5 = r0			  ## sdfile_new.c:736:31
 1e0f992:    6e 2a             	if (r5 == 0) goto 220 <sdfile_open+0xFC : 1e0fa70 >			  ## sdfile_new.c:736:31
 1e0f994:    01 70             	r1 = 0			  ## sdfile_new.c:741:5
 1e0f996:    42 72             	r2 = 36			  ## sdfile_new.c:741:5
 1e0f998:    97 f3 aa ba       	call 3110228 <memset : 106ef0 >			  ## sdfile_new.c:741:5
 1e0f99c:    00 f6 08 90       	r0 = [r9 + 8]			  ## sdfile_new.c:743:24
 1e0f9a0:    17 91             	r7 = r0 + 17			  ## sdfile_new.c:743:17
 1e0f9a2:    c1 ff 88 24 e1 01 	r1 = 31532168 <update_target_end+0x2258 : 1e12488 >			  ## sdfile_new.c:743:10
 1e0f9a8:    70 08             	r0 = r7			  ## sdfile_new.c:743:10
 1e0f9aa:    97 f3 a3 ba       	call 3110214 <strcmp : 106ef4 >			  ## sdfile_new.c:743:10
 1e0f9ae:    13 20             	if (r0 == 0) goto 38 <sdfile_open+0x62 : 1e0f9d6 >			  ## sdfile_new.c:743:10
 1e0f9b0:    c1 ff 8c 24 e1 01 	r1 = 31532172 <update_target_end+0x225C : 1e1248c >			  ## sdfile_new.c:745:17
 1e0f9b6:    70 08             	r0 = r7			  ## sdfile_new.c:745:17
 1e0f9b8:    97 f3 9c ba       	call 3110200 <strcmp : 106ef4 >			  ## sdfile_new.c:745:17
 1e0f9bc:    34 20             	if (r0 == 0) goto 104 <sdfile_open+0xB2 : 1e0fa26 >			  ## sdfile_new.c:745:17
 1e0f9be:    c2 ff 90 24 e1 01 	r2 = 31532176 <update_target_end+0x2260 : 1e12490 >			  ## sdfile_new.c:748:9
 1e0f9c4:    73 a0             	r3 = sp + 7			  ## sdfile_new.c:748:9
 1e0f9c6:    40 70             	r0 = 4			  ## sdfile_new.c:748:9
 1e0f9c8:    bf f3 1a ea       	call -11212 <log_print : 1e0ce00 >			  ## sdfile_new.c:748:9
 1e0f9cc:    07 70             	r7 = 0			  ## sdfile_new.c:748:9
 1e0f9ce:    1f 18             	goto 62 <sdfile_open+0x9A : 1e0fa0e >			  ## sdfile_new.c:748:9
 1e0f9d0:    07 fb 02 ff       	r7 = -254 <bank_code_load_addr+0x1E12EE : 1ffff02 >
 1e0f9d4:    4d 18             	goto 154 <sdfile_open+0xFC : 1e0fa70 >
 1e0f9d6:    f7 a3             	r7 = sp + 63
 1e0f9d8:    01 70             	r1 = 0			  ## sdfile_new.c:614:10
 1e0f9da:    12 71             	r2 = 17			  ## sdfile_new.c:614:10
 1e0f9dc:    70 08             	r0 = r7			  ## sdfile_new.c:614:10
 1e0f9de:    97 f3 87 ba       	call 3110158 <memset : 106ef0 >			  ## sdfile_new.c:614:10
 1e0f9e2:    c8 ff c0 25 00 00 	r8 = 9664 <_sdfile_handl : 25c0 >			  ## sdfile_new.c:614:10
 1e0f9e8:    01 f6 08 80       	r1 = [r8 + 8]			  ## sdfile_new.c:618:48
 1e0f9ec:    86 a1             	r6 = sp + 24			  ## sdfile_new.c:618:48
 1e0f9ee:    40 9c             	r0 = r6 + 4			  ## sdfile_new.c:618:26
 1e0f9f0:    02 72             	r2 = 32			  ## sdfile_new.c:618:5
 1e0f9f2:    97 f3 77 ba       	call 3110126 <memcpy : 106ee4 >			  ## sdfile_new.c:618:5
 1e0f9f6:    00 f6 04 80       	r0 = [r8 + 4]			  ## sdfile_new.c:620:29
 1e0f9fa:    88 02             	[sp+32] = r0			  ## sdfile_new.c:620:19
 1e0f9fc:    40 08             	r0 = r4			  ## sdfile_new.c:622:5
 1e0f9fe:    71 08             	r1 = r7			  ## sdfile_new.c:622:5
 1e0fa00:    09 17             	call -494 <__sdfile_path_get_name : 1e0f814 >			  ## sdfile_new.c:622:5
 1e0fa02:    50 08             	r0 = r5			  ## sdfile_new.c:623:11
 1e0fa04:    61 08             	r1 = r6			  ## sdfile_new.c:623:11
 1e0fa06:    72 08             	r2 = r7			  ## sdfile_new.c:623:11
 1e0fa08:    3b 17             	call -394 <sdfile_open_file_in_dir : 1e0f880 >
 1e0fa0a:    07 08             	r7 = r0
 1e0fa0c:    2e 2e             	if (r7 == 0) goto 92 <sdfile_open+0xF6 : 1e0fa6a >
 1e0fa0e:    c2 ff be 24 e1 01 	r2 = 31532222 <update_target_end+0x228E : 1e124be >			  ## sdfile_new.c:758:5
 1e0fa14:    10 70             	r0 = 1			  ## sdfile_new.c:758:5
 1e0fa16:    0c 02             	[sp] = r4			  ## sdfile_new.c:758:5
 1e0fa18:    43 08             	r3 = r4			  ## sdfile_new.c:758:5
 1e0fa1a:    bf f3 f1 e9       	call -11294 <log_print : 1e0ce00 >			  ## sdfile_new.c:758:5
 1e0fa1e:    50 08             	r0 = r5			  ## sdfile_new.c:759:5
 1e0fa20:    bf f3 fc ee       	call -8712 <free : 1e0d81c >			  ## sdfile_new.c:759:5
 1e0fa24:    25 18             	goto 74 <sdfile_open+0xFC : 1e0fa70 >			  ## sdfile_new.c:759:5
 1e0fa26:    f6 a3             	r6 = sp + 63
 1e0fa28:    01 70             	r1 = 0			  ## sdfile_new.c:631:10
 1e0fa2a:    12 71             	r2 = 17			  ## sdfile_new.c:631:10
 1e0fa2c:    60 08             	r0 = r6			  ## sdfile_new.c:631:10
 1e0fa2e:    97 f3 5f ba       	call 3110078 <memset : 106ef0 >			  ## sdfile_new.c:631:10
 1e0fa32:    40 08             	r0 = r4			  ## sdfile_new.c:634:16
 1e0fa34:    61 08             	r1 = r6			  ## sdfile_new.c:634:16
 1e0fa36:    ee 16             	call -548 <__sdfile_path_get_name : 1e0f814 >			  ## sdfile_new.c:634:16
 1e0fa38:    08 08             	r8 = r0			  ## sdfile_new.c:634:16
 1e0fa3a:    00 60             	r0 = b[r0 + 0] (u)			  ## sdfile_new.c:635:9
 1e0fa3c:    1c 20             	if (r0 == 0) goto 56 <sdfile_open+0x102 : 1e0fa76 >			  ## sdfile_new.c:635:9
 1e0fa3e:    00 a5             	r0 = sp + 80
 1e0fa40:    40 80             	r0 += 4			  ## sdfile_new.c:510:38
 1e0fa42:    f1 a3             	r1 = sp + 63
 1e0fa44:    65 17             	call -310 <sdfile_for_each_dir : 1e0f910 >			  ## sdfile_new.c:510:11
 1e0fa46:    07 08             	r7 = r0			  ## sdfile_new.c:510:11
 1e0fa48:    e1 3f             	if (r7 != 0) goto -62 <sdfile_open+0x98 : 1e0fa0c >
 1e0fa4a:    c0 f5 60 00       	r0 = b[sp+96] (u)			  ## sdfile_new.c:512:24
 1e0fa4e:    20 fd 0f 09       	r0 = r0 & 15			  ## sdfile_new.c:512:29
 1e0fa52:    07 fb 01 ff       	r7 = -255 <bank_code_load_addr+0x1E12ED : 1ffff01 >			  ## sdfile_new.c:512:29
 1e0fa56:    30 e0 d9 1f       	if (r0 != 3) goto -78 <sdfile_open+0x98 : 1e0fa0c >
 1e0fa5a:    f6 a3             	r6 = sp + 63
 1e0fa5c:    80 08             	r0 = r8			  ## sdfile_new.c:641:9
 1e0fa5e:    61 08             	r1 = r6			  ## sdfile_new.c:641:9
 1e0fa60:    d9 16             	call -590 <__sdfile_path_get_name : 1e0f814 >			  ## sdfile_new.c:641:9
 1e0fa62:    01 a5             	r1 = sp + 80			  ## sdfile_new.c:641:9
 1e0fa64:    50 08             	r0 = r5			  ## sdfile_new.c:642:15
 1e0fa66:    62 08             	r2 = r6			  ## sdfile_new.c:642:15
 1e0fa68:    cf 1f             	goto -98 <sdfile_open+0x94 : 1e0fa08 >			  ## sdfile_new.c:642:15
 1e0fa6a:    15 f6 0c 90       	[r9 + 12] = r5			  ## sdfile_new.c:753:29
 1e0fa6e:    07 70             	r7 = 0			  ## sdfile_new.c:753:29
 1e0fa70:    70 08             	r0 = r7			  ## sdfile_new.c:761:1
 1e0fa72:    3a 0a             	sp += 116			  ## sdfile_new.c:761:1
 1e0fa74:    59 01             	{pc, r9-r4} = [sp++]			  ## sdfile_new.c:761:1
 1e0fa76:    40 9a             	r0 = r5 + 4			  ## sdfile_new.c:586:39
 1e0fa78:    f1 a3             	r1 = sp + 63			  ## sdfile_new.c:586:39
 1e0fa7a:    4a 17             	call -364 <sdfile_for_each_dir : 1e0f910 >			  ## sdfile_new.c:586:11
 1e0fa7c:    21 4a             	r1 = [r5 + 8]			  ## sdfile_new.c:586:11
 1e0fa7e:    07 08             	r7 = r0			  ## sdfile_new.c:586:11
 1e0fa80:    05 3e             	if (r7 != 0) goto 10 <sdfile_open+0x118 : 1e0fa8c >
 1e0fa82:    01 82             	r1 += 32			  ## sdfile_new.c:589:25
 1e0fa84:    29 4a             	[r5 + 8] = r1			  ## sdfile_new.c:589:25
 1e0fa86:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:590:24
 1e0fa88:    00 8e             	r0 += -32			  ## sdfile_new.c:590:24
 1e0fa8a:    38 4a             	[r5 + 12] = r0			  ## sdfile_new.c:590:24
 1e0fa8c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## sdfile_new.c:592:32
 1e0fa92:    11 f6 78 01       	[r0 + 376] = r1			  ## sdfile_new.c:592:32
 1e0fa96:    ba 1f             	goto -140 <sdfile_open+0x98 : 1e0fa0c >			  ## sdfile_new.c:592:32


sdfile_read:
 1e0fa98:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:816:0
 1e0fa9a:    24 08             	r4 = r2			  ## sdfile_new.c:816:0
 1e0fa9c:    02 08             	r2 = r0			  ## sdfile_new.c:816:0
 1e0fa9e:    00 70             	r0 = 0			  ## sdfile_new.c:816:0
 1e0faa0:    12 24             	if (r2 == 0) goto 36 <sdfile_read+0x2E : 1e0fac6 >			  ## sdfile_new.c:816:0
 1e0faa2:    35 44             	r5 = [r2 + 12]			  ## sdfile_new.c:824:38
 1e0faa4:    10 2a             	if (r5 == 0) goto 32 <sdfile_read+0x2E : 1e0fac6 >
 1e0faa6:    06 4a             	r6 = [r5 + 0]			  ## sdfile_new.c:830:43
 1e0faa8:    20 4a             	r0 = [r5 + 8]			  ## sdfile_new.c:837:56
 1e0faaa:    37 4a             	r7 = [r5 + 12]			  ## sdfile_new.c:830:30
 1e0faac:    82 b1             	r2 = r0 + r6			  ## sdfile_new.c:837:42
 1e0faae:    10 08             	r0 = r1			  ## sdfile_new.c:837:5
 1e0fab0:    21 08             	r1 = r2			  ## sdfile_new.c:837:5
 1e0fab2:    42 08             	r2 = r4			  ## sdfile_new.c:837:5
 1e0fab4:    97 f3 16 ba       	call 3109932 <memcpy : 106ee4 >			  ## sdfile_new.c:837:5
 1e0fab8:    a0 bf             	r0 = r7 - r6			  ## sdfile_new.c:830:34
 1e0faba:    40 f2 01 30       	if (r0 < r4) goto 2 <sdfile_read+0x28 : 1e0fac0 >
 1e0fabe:    40 08             	r0 = r4			  ## sdfile_new.c:833:9
 1e0fac0:    01 4a             	r1 = [r5 + 0]			  ## sdfile_new.c:839:17
 1e0fac2:    01 09             	r1 += r0			  ## sdfile_new.c:839:17
 1e0fac4:    09 4a             	[r5 + 0] = r1			  ## sdfile_new.c:839:17
 1e0fac6:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:842:1


sdfile_write:
 1e0fac8:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:905:0
 1e0faca:    03 08             	r3 = r0			  ## sdfile_new.c:905:0
 1e0facc:    00 70             	r0 = 0			  ## sdfile_new.c:905:0
 1e0face:    29 26             	if (r3 == 0) goto 82 <sdfile_write+0x5A : 1e0fb22 >			  ## sdfile_new.c:905:0
 1e0fad0:    35 46             	r5 = [r3 + 12]			  ## sdfile_new.c:915:38
 1e0fad2:    27 2a             	if (r5 == 0) goto 78 <sdfile_write+0x5A : 1e0fb22 >
 1e0fad4:    03 4a             	r3 = [r5 + 0]			  ## sdfile_new.c:921:43
 1e0fad6:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:921:30
 1e0fad8:    e4 b0             	r4 = r0 - r3			  ## sdfile_new.c:921:34
 1e0fada:    24 f2 01 30       	if (r4 < r2) goto 2 <sdfile_write+0x18 : 1e0fae0 >
 1e0fade:    24 08             	r4 = r2			  ## sdfile_new.c:924:9
 1e0fae0:    26 4a             	r6 = [r5 + 8]			  ## sdfile_new.c:928:39
 1e0fae2:    c2 ff c0 25 00 00 	r2 = 9664 <_sdfile_handl : 25c0 >			  ## sdfile_new.c:928:39
 1e0fae8:    08 f6 04 20       	r8 = [r2 + 4]			  ## sdfile_new.c:147:29
 1e0faec:    02 44             	r2 = [r2 + 0]			  ## sdfile_new.c:147:48
 1e0faee:    63 09             	r3 += r6			  ## sdfile_new.c:928:25
 1e0faf0:    0b 28             	if (r4 == 0) goto 22 <sdfile_write+0x40 : 1e0fb08 >
 1e0faf2:    06 70             	r6 = 0
 1e0faf4:    07 fa 00 16       	r7 = b[r1+r6] (u)			  ## sdfile_new.c:711:14
 1e0faf8:    00 fa 00 36       	r0 = b[r3+r6] (u)			  ## sdfile_new.c:711:24
 1e0fafc:    50 bf             	r0 &= r7			  ## sdfile_new.c:711:22
 1e0fafe:    70 f2 11 10       	if (r0 != r7) goto 34 <sdfile_write+0x5C : 1e0fb24 >			  ## sdfile_new.c:711:22
 1e0fb02:    16 80             	r6 += 1			  ## sdfile_new.c:710:31
 1e0fb04:    46 f2 f6 3f       	if (r6 < r4) goto -20 <sdfile_write+0x2C : 1e0faf4 >
 1e0fb08:    90 fb 80 03       	r0 = r3 - r8			  ## sdfile_new.c:147:19
 1e0fb0c:    02 09             	r2 += r0			  ## sdfile_new.c:147:38
 1e0fb0e:    10 08             	r0 = r1			  ## sdfile_new.c:936:11
 1e0fb10:    41 08             	r1 = r4			  ## sdfile_new.c:936:11
 1e0fb12:    bf f3 41 8d       	call -58750 <norflash_write : 1e01598 >			  ## sdfile_new.c:936:11
 1e0fb16:    40 f2 04 10       	if (r0 != r4) goto 8 <sdfile_write+0x5A : 1e0fb22 >
 1e0fb1a:    00 4a             	r0 = [r5 + 0]			  ## sdfile_new.c:939:21
 1e0fb1c:    40 09             	r0 += r4			  ## sdfile_new.c:939:21
 1e0fb1e:    08 4a             	[r5 + 0] = r0			  ## sdfile_new.c:939:21
 1e0fb20:    40 08             	r0 = r4			  ## sdfile_new.c:939:21
 1e0fb22:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:943:1
 1e0fb24:    00 fb 06 ff       	r0 = -250 <bank_code_load_addr+0x1E12F2 : 1ffff06 >
 1e0fb28:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:943:1


sdfile_seek:
 1e0fb2a:    0e 20             	if (r0 == 0) goto 28 <sdfile_seek+0x1E : 1e0fb48 >			  ## sdfile_new.c:876:0
 1e0fb2c:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:881:38
 1e0fb2e:    0c 20             	if (r0 == 0) goto 24 <sdfile_seek+0x1E : 1e0fb48 >
 1e0fb30:    22 e0 04 00       	if (r2 == 2) goto 8 <sdfile_seek+0x12 : 1e0fb3c >			  ## sdfile_new.c:887:5
 1e0fb34:    12 e0 05 00       	if (r2 == 1) goto 10 <sdfile_seek+0x18 : 1e0fb42 >
 1e0fb38:    06 24             	if (r2 == 0) goto 12 <sdfile_seek+0x1C : 1e0fb46 >
 1e0fb3a:    06 18             	goto 12 <sdfile_seek+0x1E : 1e0fb48 >
 1e0fb3c:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:895:35
 1e0fb3e:    61 b4             	r1 = r2 - r1			  ## sdfile_new.c:895:39
 1e0fb40:    02 18             	goto 4 <sdfile_seek+0x1C : 1e0fb46 >
 1e0fb42:    02 40             	r2 = [r0 + 0]			  ## sdfile_new.c:892:21
 1e0fb44:    21 09             	r1 += r2			  ## sdfile_new.c:892:21
 1e0fb46:    09 40             	[r0 + 0] = r1
 1e0fb48:    00 70             	r0 = 0			  ## sdfile_new.c:900:1
 1e0fb4a:    20 00             	rts			  ## sdfile_new.c:900:1


sdfile_len:
 1e0fb4c:    01 08             	r1 = r0			  ## sdfile_new.c:961:0
 1e0fb4e:    00 70             	r0 = 0			  ## sdfile_new.c:961:0
 1e0fb50:    03 22             	if (r1 == 0) goto 6 <sdfile_len+0xC : 1e0fb58 >			  ## sdfile_new.c:961:0
 1e0fb52:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:966:38
 1e0fb54:    01 22             	if (r1 == 0) goto 2 <sdfile_len+0xC : 1e0fb58 >
 1e0fb56:    30 42             	r0 = [r1 + 12]			  ## sdfile_new.c:972:24
 1e0fb58:    20 00             	rts			  ## sdfile_new.c:973:1


sdfile_pos:
 1e0fb5a:    01 08             	r1 = r0			  ## sdfile_new.c:976:0
 1e0fb5c:    00 70             	r0 = 0			  ## sdfile_new.c:976:0
 1e0fb5e:    03 22             	if (r1 == 0) goto 6 <sdfile_pos+0xC : 1e0fb66 >			  ## sdfile_new.c:976:0
 1e0fb60:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:981:38
 1e0fb62:    01 22             	if (r1 == 0) goto 2 <sdfile_pos+0xC : 1e0fb66 >
 1e0fb64:    00 42             	r0 = [r1 + 0]			  ## sdfile_new.c:984:23
 1e0fb66:    20 00             	rts			  ## sdfile_new.c:988:1


sdfile_get_name:
 1e0fb68:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:996:0
 1e0fb6a:    24 08             	r4 = r2			  ## sdfile_new.c:996:0
 1e0fb6c:    02 08             	r2 = r0			  ## sdfile_new.c:996:0
 1e0fb6e:    00 70             	r0 = 0			  ## sdfile_new.c:996:0
 1e0fb70:    0c 24             	if (r2 == 0) goto 24 <sdfile_get_name+0x22 : 1e0fb8a >			  ## sdfile_new.c:996:0
 1e0fb72:    32 44             	r2 = [r2 + 12]			  ## sdfile_new.c:1001:38
 1e0fb74:    0a 24             	if (r2 == 0) goto 20 <sdfile_get_name+0x22 : 1e0fb8a >
 1e0fb76:    04 e1 01 b0       	ifs (r4 < 16) goto 2 <sdfile_get_name+0x14 : 1e0fb7c >
 1e0fb7a:    04 71             	r4 = 16
 1e0fb7c:    42 81             	r2 += 20			  ## sdfile_new.c:1010:5
 1e0fb7e:    10 08             	r0 = r1			  ## sdfile_new.c:1010:5
 1e0fb80:    21 08             	r1 = r2			  ## sdfile_new.c:1010:5
 1e0fb82:    42 08             	r2 = r4			  ## sdfile_new.c:1010:5
 1e0fb84:    97 f3 ae b9       	call 3109724 <memcpy : 106ee4 >			  ## sdfile_new.c:1010:5
 1e0fb88:    40 08             	r0 = r4			  ## sdfile_new.c:1010:5
 1e0fb8a:    54 01             	{pc, r4} = [sp++]			  ## sdfile_new.c:1013:1


sdfile_close:
 1e0fb8c:    34 00             	[--sp] = rets			  ## sdfile_new.c:946:0
 1e0fb8e:    04 20             	if (r0 == 0) goto 8 <sdfile_close+0xC : 1e0fb98 >			  ## sdfile_new.c:946:0
 1e0fb90:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:951:38
 1e0fb92:    02 20             	if (r0 == 0) goto 4 <sdfile_close+0xC : 1e0fb98 >
 1e0fb94:    bf f3 42 ee       	call -9084 <free : 1e0d81c >			  ## sdfile_new.c:954:9
 1e0fb98:    00 70             	r0 = 0			  ## sdfile_new.c:958:1
 1e0fb9a:    30 00             	pc = [sp++]			  ## sdfile_new.c:958:1


sdfile_get_attrs:
 1e0fb9c:    0e 20             	if (r0 == 0) goto 28 <sdfile_get_attrs+0x1E : 1e0fbba >			  ## sdfile_new.c:1016:0
 1e0fb9e:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:1021:38
 1e0fba0:    0c 20             	if (r0 == 0) goto 24 <sdfile_get_attrs+0x1E : 1e0fbba >
 1e0fba2:    02 61             	r2 = b[r0 + 16] (u)			  ## sdfile_new.c:1028:22
 1e0fba4:    22 fd 0f 29       	r2 = r2 & 15			  ## sdfile_new.c:1028:27
 1e0fba8:    32 e0 03 10       	if (r2 != 3) goto 6 <sdfile_get_attrs+0x16 : 1e0fbb2 >			  ## sdfile_new.c:1028:27
 1e0fbac:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:1029:20
 1e0fbae:    12 b1             	r2 |= 4			  ## sdfile_new.c:1029:20
 1e0fbb0:    0a 62             	b[r1 + 0] = r2			  ## sdfile_new.c:1029:20
 1e0fbb2:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:1034:31
 1e0fbb4:    1a 42             	[r1 + 4] = r2			  ## sdfile_new.c:1034:17
 1e0fbb6:    20 40             	r0 = [r0 + 8]			  ## sdfile_new.c:1035:32
 1e0fbb8:    28 42             	[r1 + 8] = r0			  ## sdfile_new.c:1035:18
 1e0fbba:    00 70             	r0 = 0			  ## sdfile_new.c:1037:1
 1e0fbbc:    20 00             	rts			  ## sdfile_new.c:1037:1


fopen:
 1e0fbbe:    7d 01             	[--sp] = {rets, r13-r4}			  ## vfs.c:351:0
 1e0fbc0:    1a 08             	r10 = r1			  ## vfs.c:351:0
 1e0fbc2:    0d 08             	r13 = r0			  ## vfs.c:351:0
 1e0fbc4:    97 f3 ea b8       	call 3109332 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0fbc8:    c6 ff a8 08 00 00 	r6 = 2216 <head.1196 : 8a8 >			  ## spinlock.h:77:5
 1e0fbce:    07 4c             	r7 = [r6 + 0]			  ## spinlock.h:77:5
 1e0fbd0:    67 f2 12 00       	if (r7 == r6) goto 36 <fopen+0x3A : 1e0fbf8 >			  ## spinlock.h:77:5
 1e0fbd4:    00 f9 5c 70       	r0 = b[r7 + 92] (u)			  ## vfs.c:97:17
 1e0fbd8:    74 fc c0 ff       	r4 = r7 + -64			  ## vfs.c:97:17
 1e0fbdc:    0a 20             	if (r0 == 0) goto 20 <fopen+0x34 : 1e0fbf2 >			  ## vfs.c:97:17
 1e0fbde:    15 48             	r5 = [r4 + 4]			  ## vfs.c:100:28
 1e0fbe0:    50 08             	r0 = r5			  ## vfs.c:100:40
 1e0fbe2:    97 f3 8b b9       	call 3109654 <strlen : 106efc >			  ## vfs.c:100:40
 1e0fbe6:    02 08             	r2 = r0			  ## vfs.c:100:40
 1e0fbe8:    50 08             	r0 = r5			  ## vfs.c:100:18
 1e0fbea:    d1 08             	r1 = r13			  ## vfs.c:100:18
 1e0fbec:    97 f3 7e b9       	call 3109628 <memcmp : 106eec >			  ## vfs.c:100:18
 1e0fbf0:    08 20             	if (r0 == 0) goto 16 <fopen+0x44 : 1e0fc02 >			  ## vfs.c:100:18
 1e0fbf2:    07 49             	r7 = [r4 + 64]
 1e0fbf4:    67 f2 ee 1f       	if (r7 != r6) goto -36 <fopen+0x16 : 1e0fbd4 >
 1e0fbf8:    97 f3 ce b8       	call 3109276 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0fbfc:    0c 70             	r12 = 0			  ## spinlock.h:88:5
 1e0fbfe:    c0 08             	r0 = r12			  ## vfs.c:401:1
 1e0fc00:    5d 01             	{pc, r13-r4} = [sp++]			  ## vfs.c:401:1
 1e0fc02:    97 f3 c9 b8       	call 3109266 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0fc06:    4b fc 4c 00       	r11 = r4 + 76			  ## vfs.c:363:11
 1e0fc0a:    01 70             	r1 = 0			  ## vfs.c:363:11
 1e0fc0c:    0c 70             	r12 = 0			  ## vfs.c:363:11
 1e0fc0e:    b0 08             	r0 = r11			  ## vfs.c:363:11
 1e0fc10:    97 f3 08 b9       	call 3109392 <os_mutex_pend : 106e24 >			  ## vfs.c:363:11
 1e0fc14:    01 f9 5c 70       	r1 = b[r7 + 92] (u)			  ## vfs.c:363:11
 1e0fc18:    45 22             	if (r1 == 0) goto 138 <fopen+0xE6 : 1e0fca4 >
 1e0fc1a:    f1 31             	if (r0 != 0) goto -30 <fopen+0x40 : 1e0fbfe >
 1e0fc1c:    10 48             	r0 = [r4 + 4]			  ## vfs.c:369:53
 1e0fc1e:    97 f3 6d b9       	call 3109594 <strlen : 106efc >			  ## vfs.c:369:42
 1e0fc22:    d0 09             	r0 += r13			  ## vfs.c:134:13
 1e0fc24:    10 80             	r0 += 1			  ## vfs.c:134:13
 1e0fc26:    85 99             	r5 = r4 + 24			  ## vfs.c:369:29
 1e0fc28:    12 6b             	r2 = b[r5 + 17] (u)
 1e0fc2a:    18 9b             	r8 = r5 + 17			  ## vfs.c:134:13
 1e0fc2c:    01 70             	r1 = 0
 1e0fc2e:    03 fa 00 01       	r3 = b[r0+r1] (u)			  ## vfs.c:135:24
 1e0fc32:    32 f2 05 10       	if (r2 != r3) goto 10 <fopen+0x82 : 1e0fc40 >			  ## vfs.c:135:9
 1e0fc36:    42 ba             	r2 = r5 + r1			  ## vfs.c:135:24
 1e0fc38:    22 65             	r2 = b[r2 + 18] (u)			  ## vfs.c:136:17
 1e0fc3a:    11 80             	r1 += 1			  ## vfs.c:136:17
 1e0fc3c:    f8 35             	if (r2 != 0) goto -16 <fopen+0x70 : 1e0fc2e >			  ## vfs.c:136:17
 1e0fc3e:    03 18             	goto 6 <fopen+0x88 : 1e0fc46 >			  ## vfs.c:136:17
 1e0fc40:    05 4a             	r5 = [r5 + 0]			  ## vfs.c:141:22
 1e0fc42:    f2 3b             	if (r5 != 0) goto -28 <fopen+0x6A : 1e0fc28 >
 1e0fc44:    2f 18             	goto 94 <fopen+0xE6 : 1e0fca4 >
 1e0fc46:    2e 2a             	if (r5 == 0) goto 92 <fopen+0xE6 : 1e0fca4 >
 1e0fc48:    97 f3 a8 b8       	call 3109200 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0fc4c:    00 71             	r0 = 16			  ## vfs.c:159:26
 1e0fc4e:    bf f3 e0 ed       	call -9280 <malloc : 1e0d812 >			  ## vfs.c:159:26
 1e0fc52:    09 08             	r9 = r0			  ## vfs.c:159:26
 1e0fc54:    0c 40             	[r0 + 0] = r4			  ## vfs.c:160:14
 1e0fc56:    97 f3 9f b8       	call 3109182 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0fc5a:    09 e0 23 00       	if (r9 == 0) goto 70 <fopen+0xE6 : 1e0fca4 >			  ## spinlock.h:88:5
 1e0fc5e:    15 f6 08 90       	[r9 + 8] = r5			  ## vfs.c:379:16
 1e0fc62:    c0 98             	r0 = r4 + 12			  ## vfs.c:380:22
 1e0fc64:    10 f6 04 90       	[r9 + 4] = r0			  ## vfs.c:380:15
 1e0fc68:    20 48             	r0 = [r4 + 8]			  ## vfs.c:384:13
 1e0fc6a:    65 40             	r5 = [r0 + 24]			  ## vfs.c:384:18
 1e0fc6c:    12 2a             	if (r5 == 0) goto 36 <fopen+0xD4 : 1e0fc92 >
 1e0fc6e:    10 48             	r0 = [r4 + 4]			  ## vfs.c:382:31
 1e0fc70:    97 f3 44 b9       	call 3109512 <strlen : 106efc >			  ## vfs.c:382:20
 1e0fc74:    80 fb 00 6d       	r6 = r13 + r0			  ## vfs.c:382:18
 1e0fc78:    80 08             	r0 = r8			  ## vfs.c:382:43
 1e0fc7a:    97 f3 3f b9       	call 3109502 <strlen : 106efc >			  ## vfs.c:382:43
 1e0fc7e:    60 09             	r0 += r6			  ## vfs.c:382:37
 1e0fc80:    11 90             	r1 = r0 + 1			  ## vfs.c:382:41
 1e0fc82:    90 08             	r0 = r9			  ## vfs.c:385:19
 1e0fc84:    a2 08             	r2 = r10			  ## vfs.c:385:19
 1e0fc86:    85 00             	call r5			  ## vfs.c:385:19
 1e0fc88:    04 20             	if (r0 == 0) goto 8 <fopen+0xD4 : 1e0fc92 >
 1e0fc8a:    90 08             	r0 = r9			  ## vfs.c:170:9
 1e0fc8c:    bf f3 c6 ed       	call -9332 <free : 1e0d81c >			  ## vfs.c:170:9
 1e0fc90:    09 18             	goto 18 <fopen+0xE6 : 1e0fca4 >			  ## vfs.c:170:9
 1e0fc92:    97 f3 83 b8       	call 3109126 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e0fc96:    08 00             	csync			  ## atomic.h:16:5
 1e0fc98:    20 49             	r0 = [r4 + 72]			  ## atomic.h:18:14
 1e0fc9a:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e0fc9c:    28 49             	[r4 + 72] = r0			  ## atomic.h:19:16
 1e0fc9e:    97 f3 7b b8       	call 3109110 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e0fca2:    9c 08             	r12 = r9			  ## atomic.h:21:5
 1e0fca4:    b0 08             	r0 = r11
 1e0fca6:    97 f3 bf b8       	call 3109246 <os_mutex_post : 106e28 >
 1e0fcaa:    a9 1f             	goto -174 <fopen+0x40 : 1e0fbfe >


fread:
 1e0fcac:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:405:0
 1e0fcae:    05 08             	r5 = r0			  ## vfs.c:405:0
 1e0fcb0:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:411:11
 1e0fcb2:    26 08             	r6 = r2			  ## vfs.c:411:11
 1e0fcb4:    17 08             	r7 = r1
 1e0fcb6:    c0 84             	r0 += 76			  ## vfs.c:411:11
 1e0fcb8:    01 70             	r1 = 0			  ## vfs.c:411:11
 1e0fcba:    04 70             	r4 = 0			  ## vfs.c:411:11
 1e0fcbc:    97 f3 b2 b8       	call 3109220 <os_mutex_pend : 106e24 >			  ## vfs.c:411:11
 1e0fcc0:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:411:11
 1e0fcc2:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:411:11
 1e0fcc6:    0b 24             	if (r2 == 0) goto 22 <fread+0x32 : 1e0fcde >
 1e0fcc8:    0e 30             	if (r0 != 0) goto 28 <fread+0x3A : 1e0fce6 >
 1e0fcca:    20 42             	r0 = [r1 + 8]			  ## vfs.c:416:19
 1e0fccc:    73 40             	r3 = [r0 + 28]			  ## vfs.c:416:24
 1e0fcce:    07 26             	if (r3 == 0) goto 14 <fread+0x32 : 1e0fcde >			  ## vfs.c:416:24
 1e0fcd0:    50 08             	r0 = r5			  ## vfs.c:417:16
 1e0fcd2:    71 08             	r1 = r7			  ## vfs.c:417:16
 1e0fcd4:    62 08             	r2 = r6			  ## vfs.c:417:16
 1e0fcd6:    83 00             	call r3			  ## vfs.c:417:16
 1e0fcd8:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:417:16
 1e0fcda:    04 08             	r4 = r0			  ## vfs.c:417:16
 1e0fcdc:    00 00             	nop
 1e0fcde:    10 fc 4c 00       	r0 = r1 + 76
 1e0fce2:    97 f3 a1 b8       	call 3109186 <os_mutex_post : 106e28 >
 1e0fce6:    40 08             	r0 = r4			  ## vfs.c:423:1
 1e0fce8:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:423:1


fseek:
 1e0fcea:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:469:0
 1e0fcec:    04 08             	r4 = r0			  ## vfs.c:469:0
 1e0fcee:    00 48             	r0 = [r4 + 0]			  ## vfs.c:475:11
 1e0fcf0:    25 08             	r5 = r2			  ## vfs.c:475:11
 1e0fcf2:    16 08             	r6 = r1
 1e0fcf4:    c0 84             	r0 += 76			  ## vfs.c:475:11
 1e0fcf6:    01 70             	r1 = 0			  ## vfs.c:475:11
 1e0fcf8:    97 f3 94 b8       	call 3109160 <os_mutex_pend : 106e24 >			  ## vfs.c:475:11
 1e0fcfc:    01 48             	r1 = [r4 + 0]			  ## vfs.c:475:11
 1e0fcfe:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:475:11
 1e0fd02:    0c 24             	if (r2 == 0) goto 24 <fseek+0x32 : 1e0fd1c >
 1e0fd04:    d7 06             	r7 = -19
 1e0fd06:    15 30             	if (r0 != 0) goto 42 <fseek+0x48 : 1e0fd32 >
 1e0fd08:    20 42             	r0 = [r1 + 8]			  ## vfs.c:480:19
 1e0fd0a:    a3 40             	r3 = [r0 + 40]			  ## vfs.c:480:24
 1e0fd0c:    0d 26             	if (r3 == 0) goto 26 <fseek+0x3E : 1e0fd28 >			  ## vfs.c:480:24
 1e0fd0e:    40 08             	r0 = r4			  ## vfs.c:481:15
 1e0fd10:    61 08             	r1 = r6			  ## vfs.c:481:15
 1e0fd12:    52 08             	r2 = r5			  ## vfs.c:481:15
 1e0fd14:    83 00             	call r3			  ## vfs.c:481:15
 1e0fd16:    01 48             	r1 = [r4 + 0]			  ## vfs.c:481:15
 1e0fd18:    07 08             	r7 = r0			  ## vfs.c:481:15
 1e0fd1a:    07 18             	goto 14 <fseek+0x40 : 1e0fd2a >
 1e0fd1c:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:475:11
 1e0fd20:    97 f3 82 b8       	call 3109124 <os_mutex_post : 106e28 >			  ## vfs.c:475:11
 1e0fd24:    d7 06             	r7 = -19
 1e0fd26:    05 18             	goto 10 <fseek+0x48 : 1e0fd32 >
 1e0fd28:    07 70             	r7 = 0
 1e0fd2a:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:484:30
 1e0fd2e:    97 f3 7b b8       	call 3109110 <os_mutex_post : 106e28 >			  ## vfs.c:484:5
 1e0fd32:    70 08             	r0 = r7			  ## vfs.c:487:1
 1e0fd34:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:487:1


fwrite:
 1e0fd36:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:447:0
 1e0fd38:    05 08             	r5 = r0			  ## vfs.c:447:0
 1e0fd3a:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:453:11
 1e0fd3c:    26 08             	r6 = r2			  ## vfs.c:453:11
 1e0fd3e:    17 08             	r7 = r1
 1e0fd40:    c0 84             	r0 += 76			  ## vfs.c:453:11
 1e0fd42:    01 70             	r1 = 0			  ## vfs.c:453:11
 1e0fd44:    04 70             	r4 = 0			  ## vfs.c:453:11
 1e0fd46:    97 f3 6d b8       	call 3109082 <os_mutex_pend : 106e24 >			  ## vfs.c:453:11
 1e0fd4a:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:453:11
 1e0fd4c:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:453:11
 1e0fd50:    0b 24             	if (r2 == 0) goto 22 <fwrite+0x32 : 1e0fd68 >
 1e0fd52:    0e 30             	if (r0 != 0) goto 28 <fwrite+0x3A : 1e0fd70 >
 1e0fd54:    20 42             	r0 = [r1 + 8]			  ## vfs.c:458:19
 1e0fd56:    93 40             	r3 = [r0 + 36]			  ## vfs.c:458:24
 1e0fd58:    07 26             	if (r3 == 0) goto 14 <fwrite+0x32 : 1e0fd68 >			  ## vfs.c:458:24
 1e0fd5a:    50 08             	r0 = r5			  ## vfs.c:459:16
 1e0fd5c:    71 08             	r1 = r7			  ## vfs.c:459:16
 1e0fd5e:    62 08             	r2 = r6			  ## vfs.c:459:16
 1e0fd60:    83 00             	call r3			  ## vfs.c:459:16
 1e0fd62:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:459:16
 1e0fd64:    04 08             	r4 = r0			  ## vfs.c:459:16
 1e0fd66:    00 00             	nop
 1e0fd68:    10 fc 4c 00       	r0 = r1 + 76
 1e0fd6c:    97 f3 5c b8       	call 3109048 <os_mutex_post : 106e28 >
 1e0fd70:    40 08             	r0 = r4			  ## vfs.c:465:1
 1e0fd72:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:465:1


fclose:
 1e0fd74:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:491:0
 1e0fd76:    04 08             	r4 = r0			  ## vfs.c:491:0
 1e0fd78:    00 48             	r0 = [r4 + 0]			  ## vfs.c:496:11
 1e0fd7a:    c0 84             	r0 += 76			  ## vfs.c:496:11
 1e0fd7c:    01 70             	r1 = 0			  ## vfs.c:496:11
 1e0fd7e:    97 f3 51 b8       	call 3109026 <os_mutex_pend : 106e24 >			  ## vfs.c:496:11
 1e0fd82:    01 48             	r1 = [r4 + 0]			  ## vfs.c:496:11
 1e0fd84:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:496:11
 1e0fd88:    05 08             	r5 = r0			  ## vfs.c:496:11
 1e0fd8a:    06 34             	if (r2 != 0) goto 12 <fclose+0x24 : 1e0fd98 >
 1e0fd8c:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:496:11
 1e0fd90:    97 f3 4a b8       	call 3109012 <os_mutex_post : 106e28 >			  ## vfs.c:496:11
 1e0fd94:    01 48             	r1 = [r4 + 0]
 1e0fd96:    a5 06             	r5 = -22
 1e0fd98:    20 42             	r0 = [r1 + 8]			  ## vfs.c:498:19
 1e0fd9a:    21 41             	r1 = [r0 + 72]			  ## vfs.c:498:24
 1e0fd9c:    02 22             	if (r1 == 0) goto 4 <fclose+0x2E : 1e0fda2 >			  ## vfs.c:498:24
 1e0fd9e:    40 08             	r0 = r4			  ## vfs.c:499:9
 1e0fda0:    81 00             	call r1			  ## vfs.c:499:9
 1e0fda2:    04 3a             	if (r5 != 0) goto 8 <fclose+0x38 : 1e0fdac >
 1e0fda4:    00 48             	r0 = [r4 + 0]			  ## vfs.c:503:30
 1e0fda6:    c0 84             	r0 += 76			  ## vfs.c:503:34
 1e0fda8:    97 f3 3e b8       	call 3108988 <os_mutex_post : 106e28 >			  ## vfs.c:503:9
 1e0fdac:    06 48             	r6 = [r4 + 0]			  ## vfs.c:506:23
 1e0fdae:    97 f3 f5 b7       	call 3108842 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e0fdb2:    08 00             	csync			  ## atomic.h:32:5
 1e0fdb4:    20 4d             	r0 = [r6 + 72]			  ## atomic.h:34:14
 1e0fdb6:    07 fc ff ff       	r7 = r0 + -1			  ## atomic.h:35:22
 1e0fdba:    2f 4d             	[r6 + 72] = r7			  ## atomic.h:35:16
 1e0fdbc:    97 f3 ec b7       	call 3108824 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e0fdc0:    14 3e             	if (r7 != 0) goto 40 <fclose+0x76 : 1e0fdea >			  ## atomic.h:37:5
 1e0fdc2:    97 f3 eb b7       	call 3108822 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0fdc6:    00 4d             	r0 = [r6 + 64]			  ## list.h:171:36
 1e0fdc8:    11 4d             	r1 = [r6 + 68]			  ## list.h:171:23
 1e0fdca:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0fdcc:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0fdce:    60 fc 40 00       	r0 = r6 + 64			  ## vfs.c:80:23
 1e0fdd2:    08 4d             	[r6 + 64] = r0			  ## list.h:172:17
 1e0fdd4:    18 4d             	[r6 + 68] = r0			  ## list.h:173:17
 1e0fdd6:    97 f3 df b7       	call 3108798 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0fdda:    20 4c             	r0 = [r6 + 8]			  ## vfs.c:82:17
 1e0fddc:    21 40             	r1 = [r0 + 8]			  ## vfs.c:82:22
 1e0fdde:    02 22             	if (r1 == 0) goto 4 <fclose+0x70 : 1e0fde4 >			  ## vfs.c:82:22
 1e0fde0:    60 08             	r0 = r6			  ## vfs.c:83:13
 1e0fde2:    81 00             	call r1			  ## vfs.c:83:13
 1e0fde4:    60 08             	r0 = r6			  ## vfs.c:85:9
 1e0fde6:    bf f3 19 ed       	call -9678 <free : 1e0d81c >			  ## vfs.c:85:9
 1e0fdea:    40 08             	r0 = r4			  ## vfs.c:170:9
 1e0fdec:    bf f3 16 ed       	call -9684 <free : 1e0d81c >			  ## vfs.c:170:9
 1e0fdf0:    50 08             	r0 = r5			  ## vfs.c:510:5
 1e0fdf2:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:510:5


fget_attrs:
 1e0fdf4:    75 01             	[--sp] = {rets, r5, r4}			  ## vfs.c:1118:0
 1e0fdf6:    04 08             	r4 = r0			  ## vfs.c:1118:0
 1e0fdf8:    00 48             	r0 = [r4 + 0]			  ## vfs.c:1123:11
 1e0fdfa:    15 08             	r5 = r1			  ## vfs.c:1123:11
 1e0fdfc:    c0 84             	r0 += 76			  ## vfs.c:1123:11
 1e0fdfe:    01 70             	r1 = 0			  ## vfs.c:1123:11
 1e0fe00:    97 f3 10 b8       	call 3108896 <os_mutex_pend : 106e24 >			  ## vfs.c:1123:11
 1e0fe04:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1123:11
 1e0fe06:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:1123:11
 1e0fe0a:    0a 24             	if (r2 == 0) goto 20 <fget_attrs+0x2C : 1e0fe20 >
 1e0fe0c:    0d 30             	if (r0 != 0) goto 26 <fget_attrs+0x34 : 1e0fe28 >
 1e0fe0e:    00 70             	r0 = 0
 1e0fe10:    08 6a             	b[r5 + 0] = r0			  ## vfs.c:1128:16
 1e0fe12:    20 42             	r0 = [r1 + 8]			  ## vfs.c:1130:19
 1e0fe14:    a2 41             	r2 = [r0 + 104]			  ## vfs.c:1130:24
 1e0fe16:    04 24             	if (r2 == 0) goto 8 <fget_attrs+0x2C : 1e0fe20 >			  ## vfs.c:1130:24
 1e0fe18:    40 08             	r0 = r4			  ## vfs.c:1131:15
 1e0fe1a:    51 08             	r1 = r5			  ## vfs.c:1131:15
 1e0fe1c:    82 00             	call r2			  ## vfs.c:1131:15
 1e0fe1e:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1131:15
 1e0fe20:    10 fc 4c 00       	r0 = r1 + 76
 1e0fe24:    97 f3 00 b8       	call 3108864 <os_mutex_post : 106e28 >
 1e0fe28:    55 01             	{pc, r5, r4} = [sp++]


sdfile_cpu_addr2flash_addr:
 1e0fe2a:    c1 ff c0 25 00 00 	r1 = 9664 <_sdfile_handl : 25c0 >			  ## sdfile_new.c:146:0
 1e0fe30:    12 42             	r2 = [r1 + 4]			  ## sdfile_new.c:147:29
 1e0fe32:    01 42             	r1 = [r1 + 0]			  ## sdfile_new.c:147:48
 1e0fe34:    a0 b0             	r0 = r0 - r2			  ## sdfile_new.c:147:19
 1e0fe36:    10 09             	r0 += r1			  ## sdfile_new.c:147:38
 1e0fe38:    20 00             	rts			  ## sdfile_new.c:147:5


ASCII_StrCmp:
 1e0fe3a:    74 01             	[--sp] = {rets, r4}			  ## ASCII_lib.c:42:0
 1e0fe3c:    02 70             	r2 = 0			  ## ASCII_lib.c:42:0
 1e0fe3e:    04 fa 00 02       	r4 = b[r0+r2] (u)			  ## ASCII_lib.c:46:14
 1e0fe42:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## ASCII_lib.c:46:14
 1e0fe46:    0f 28             	if (r4 == 0) goto 30 <ASCII_StrCmp+0x2C : 1e0fe66 >			  ## ASCII_lib.c:46:14
 1e0fe48:    0f 26             	if (r3 == 0) goto 30 <ASCII_StrCmp+0x2E : 1e0fe68 >
 1e0fe4a:    a4 e2 08 00       	if (r4 == 42) goto 16 <ASCII_StrCmp+0x24 : 1e0fe5e >
 1e0fe4e:    f4 e3 06 00       	if (r4 == 63) goto 12 <ASCII_StrCmp+0x24 : 1e0fe5e >
 1e0fe52:    a3 e2 04 00       	if (r3 == 42) goto 8 <ASCII_StrCmp+0x24 : 1e0fe5e >
 1e0fe56:    34 f2 02 00       	if (r4 == r3) goto 4 <ASCII_StrCmp+0x24 : 1e0fe5e >
 1e0fe5a:    f3 e3 05 10       	if (r3 != 63) goto 10 <ASCII_StrCmp+0x2E : 1e0fe68 >
 1e0fe5e:    12 80             	r2 += 1			  ## ASCII_lib.c:45:5
 1e0fe60:    f2 ef ed 1f       	if (r2 != -1) goto -38 <ASCII_StrCmp+0x4 : 1e0fe3e >			  ## ASCII_lib.c:45:5
 1e0fe64:    03 18             	goto 6 <ASCII_StrCmp+0x32 : 1e0fe6c >			  ## ASCII_lib.c:45:5
 1e0fe66:    02 26             	if (r3 == 0) goto 4 <ASCII_StrCmp+0x32 : 1e0fe6c >
 1e0fe68:    10 94             	r0 = r2 + 1
 1e0fe6a:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1
 1e0fe6c:    00 70             	r0 = 0
 1e0fe6e:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1


dev_open:
 1e0fe70:    77 01             	[--sp] = {rets, r7-r4}			  ## device_api.c:21:0
 1e0fe72:    fe 0b             	sp += -4			  ## device_api.c:21:0
 1e0fe74:    15 08             	r5 = r1			  ## device_api.c:21:0
 1e0fe76:    01 08             	r1 = r0			  ## device_api.c:21:0
 1e0fe78:    c7 ff 18 c0 e0 01 	r7 = 31506456 <system_code_begin : 1e0c018 >			  ## device_api.c:21:0
 1e0fe7e:    c6 ff 0c c0 e0 01 	r6 = 31506444 <system_text_start : 1e0c00c >			  ## device_api.c:21:0
 1e0fe84:    04 70             	r4 = 0			  ## device_api.c:21:0
 1e0fe86:    76 f2 1c 20       	if (r6 >= r7) goto 56 <dev_open+0x52 : 1e0fec2 >			  ## device_api.c:21:0
 1e0fe8a:    00 4c             	r0 = [r6 + 0]			  ## device_api.c:28:30
 1e0fe8c:    bf f3 d5 ff       	call -86 <ASCII_StrCmp : 1e0fe3a >			  ## device_api.c:28:14
 1e0fe90:    04 20             	if (r0 == 0) goto 8 <dev_open+0x2A : 1e0fe9a >			  ## device_api.c:28:14
 1e0fe92:    c6 80             	r6 += 12			  ## device_api.c:27:5
 1e0fe94:    76 f2 f9 3f       	if (r6 < r7) goto -14 <dev_open+0x1A : 1e0fe8a >
 1e0fe98:    14 18             	goto 40 <dev_open+0x52 : 1e0fec2 >
 1e0fe9a:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:29:22
 1e0fe9c:    23 40             	r3 = [r0 + 8]			  ## device_api.c:29:27
 1e0fe9e:    02 a0             	r2 = sp + 0			  ## device_api.c:29:27
 1e0fea0:    10 08             	r0 = r1			  ## device_api.c:29:19
 1e0fea2:    21 08             	r1 = r2			  ## device_api.c:29:19
 1e0fea4:    52 08             	r2 = r5			  ## device_api.c:29:19
 1e0fea6:    83 00             	call r3			  ## device_api.c:29:19
 1e0fea8:    0c 30             	if (r0 != 0) goto 24 <dev_open+0x52 : 1e0fec2 >
 1e0feaa:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:34:30
 1e0feac:    04 02             	r4 = [sp]			  ## device_api.c:34:13
 1e0feae:    28 48             	[r4 + 8] = r0			  ## device_api.c:34:25
 1e0feb0:    97 f3 74 b7       	call 3108584 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e0feb4:    08 00             	csync			  ## atomic.h:16:5
 1e0feb6:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e0feb8:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e0feba:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e0febc:    97 f3 6c b7       	call 3108568 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e0fec0:    04 02             	r4 = [sp]			  ## device_api.c:37:20
 1e0fec2:    40 08             	r0 = r4			  ## device_api.c:42:1
 1e0fec4:    02 0a             	sp += 4			  ## device_api.c:42:1
 1e0fec6:    57 01             	{pc, r7-r4} = [sp++]			  ## device_api.c:42:1


dev_close:
 1e0fec8:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:111:0
 1e0feca:    04 08             	r4 = r0			  ## device_api.c:111:0
 1e0fecc:    97 f3 66 b7       	call 3108556 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e0fed0:    08 00             	csync			  ## atomic.h:32:5
 1e0fed2:    00 48             	r0 = [r4 + 0]			  ## atomic.h:34:14
 1e0fed4:    05 fc ff ff       	r5 = r0 + -1			  ## atomic.h:35:22
 1e0fed8:    0d 48             	[r4 + 0] = r5			  ## atomic.h:35:16
 1e0feda:    97 f3 5d b7       	call 3108538 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e0fede:    05 3a             	if (r5 != 0) goto 10 <dev_close+0x22 : 1e0feea >			  ## atomic.h:37:5
 1e0fee0:    20 48             	r0 = [r4 + 8]			  ## device_api.c:115:21
 1e0fee2:    71 40             	r1 = [r0 + 28]			  ## device_api.c:115:26
 1e0fee4:    02 22             	if (r1 == 0) goto 4 <dev_close+0x22 : 1e0feea >			  ## device_api.c:115:26
 1e0fee6:    40 08             	r0 = r4			  ## device_api.c:116:20
 1e0fee8:    81 00             	call r1			  ## device_api.c:116:20
 1e0feea:    55 01             	{pc, r5, r4} = [sp++]


devices_init:
 1e0feec:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:150:0
 1e0feee:    c5 ff 18 c0 e0 01 	r5 = 31506456 <system_code_begin : 1e0c018 >			  ## device_api.c:150:0
 1e0fef4:    c4 ff 0c c0 e0 01 	r4 = 31506444 <system_text_start : 1e0c00c >			  ## device_api.c:150:0
 1e0fefa:    54 f2 0d 20       	if (r4 >= r5) goto 26 <devices_init+0x2C : 1e0ff18 >			  ## device_api.c:150:0
 1e0fefe:    10 48             	r0 = [r4 + 4]			  ## device_api.c:156:18
 1e0ff00:    08 20             	if (r0 == 0) goto 16 <devices_init+0x26 : 1e0ff12 >
 1e0ff02:    12 40             	r2 = [r0 + 4]			  ## device_api.c:157:25
 1e0ff04:    06 24             	if (r2 == 0) goto 12 <devices_init+0x26 : 1e0ff12 >			  ## device_api.c:157:25
 1e0ff06:    21 48             	r1 = [r4 + 8]			  ## device_api.c:159:35
 1e0ff08:    40 08             	r0 = r4			  ## device_api.c:159:19
 1e0ff0a:    82 00             	call r2			  ## device_api.c:159:19
 1e0ff0c:    02 20             	if (r0 == 0) goto 4 <devices_init+0x26 : 1e0ff12 >
 1e0ff0e:    8f f3 c2 9a       	call 2045316 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e0ff12:    c4 80             	r4 += 12			  ## device_api.c:155:5
 1e0ff14:    54 f2 f3 3f       	if (r4 < r5) goto -26 <devices_init+0x12 : 1e0fefe >
 1e0ff18:    55 01             	{pc, r5, r4} = [sp++]


boot_info_init:
 1e0ff1a:    21 40             	r1 = [r0 + 8]			  ## init.c:120:0
 1e0ff1c:    12 40             	r2 = [r0 + 4]			  ## init.c:123:5
 1e0ff1e:    c3 ff 00 08 00 00 	r3 = 2048 <report_mmu_tlb_size : 800 >			  ## init.c:123:5
 1e0ff24:    59 46             	[r3 + 20] = r1			  ## init.c:123:5
 1e0ff26:    4a 46             	[r3 + 16] = r2			  ## init.c:123:5
 1e0ff28:    01 40             	r1 = [r0 + 0]			  ## init.c:124:34
 1e0ff2a:    22 42             	r2 = [r1 + 8]			  ## init.c:124:43
 1e0ff2c:    6a 46             	[r3 + 24] = r2			  ## init.c:124:26
 1e0ff2e:    d1 62             	r1 = b[r1 + 13] (u)			  ## init.c:125:41
 1e0ff30:    09 66             	b[r3 + 0] = r1			  ## init.c:125:24
 1e0ff32:    61 50             	r1 = h[r0 + 12] (u)			  ## init.c:126:31
 1e0ff34:    e9 56             	h[r3 + 28] = r1			  ## init.c:126:23
 1e0ff36:    71 50             	r1 = h[r0 + 14] (u)			  ## init.c:127:34
 1e0ff38:    f9 56             	h[r3 + 30] = r1			  ## init.c:127:26
 1e0ff3a:    51 40             	r1 = [r0 + 20]			  ## init.c:128:5
 1e0ff3c:    40 40             	r0 = [r0 + 16]			  ## init.c:128:5
 1e0ff3e:    99 46             	[r3 + 36] = r1			  ## init.c:128:5
 1e0ff40:    88 46             	[r3 + 32] = r0			  ## init.c:128:5
 1e0ff42:    20 00             	rts			  ## init.c:134:1


main:
 1e0ff44:    34 00             	[--sp] = rets			  ## init.c:193:0
 1e0ff46:    bf f3 20 a0       	call -49088 <wdt_close : 1e03f8a >			  ## init.c:194:5
 1e0ff4a:    97 f3 2b b7       	call 3108438 <os_init : 106da4 >			  ## init.c:196:5
 1e0ff4e:    bf f3 e6 a2       	call -47668 <setup_arch : 1e0451e >			  ## init.c:198:5
 1e0ff52:    c0 ff 74 00 e1 01 	r0 = 31522932 <app_task_handler : 1e10074 >			  ## init.c:202:5
 1e0ff58:    c2 ff 30 25 e1 01 	r2 = 31532336 <update_target_end+0x2300 : 1e12530 >			  ## init.c:202:5
 1e0ff5e:    01 70             	r1 = 0			  ## init.c:202:5
 1e0ff60:    bf f3 f3 f5       	call -5146 <task_create : 1e0eb4a >			  ## init.c:202:5
 1e0ff64:    97 f3 20 b7       	call 3108416 <os_start : 106da8 >			  ## init.c:204:5
 1e0ff68:    02 00             	idle			  ## init.c:209:9
 1e0ff6a:    fe 1f             	goto -4 <main+0x24 : 1e0ff68 >			  ## init.c:208:5


app_task_init:
 1e0ff6c:    76 01             	[--sp] = {rets, r6-r4}			  ## init.c:64:0
 1e0ff6e:    c0 ff 30 1c e1 01 	r0 = 31530032 <update_target_end+0x1A00 : 1e11c30 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:13:5
 1e0ff74:    bf f3 f8 e7       	call -12304 <puts : 1e0cf68 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:13:5
 1e0ff78:    c0 ff 28 33 e1 01 	r0 = 31535912 <storage_device_end : 1e13328 >
 1e0ff7e:    c6 ff 66 33 e1 01 	r6 = 31535974 <__VERSION_END : 1e13366 >
 1e0ff84:    c4 ff 59 1c e1 01 	r4 = 31530073 <update_target_end+0x1A29 : 1e11c59 >
 1e0ff8a:    0a 18             	goto 20 <app_task_init+0x34 : 1e0ffa0 >
 1e0ff8c:    45 90             	r5 = r0 + 4			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:15:17
 1e0ff8e:    40 08             	r0 = r4			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:16:9
 1e0ff90:    51 08             	r1 = r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:16:9
 1e0ff92:    bf f3 08 e7       	call -12784 <printf : 1e0cda6 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:16:9
 1e0ff96:    50 08             	r0 = r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:17:20
 1e0ff98:    97 f3 b0 b7       	call 3108704 <strlen : 106efc >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:17:20
 1e0ff9c:    50 09             	r0 += r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:15:17
 1e0ff9e:    10 80             	r0 += 1			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:17:17
 1e0ffa0:    60 f2 f4 3f       	if (r0 < r6) goto -24 <app_task_init+0x20 : 1e0ff8c >
 1e0ffa4:    c0 ff 5d 1c e1 01 	r0 = 31530077 <update_target_end+0x1A2D : 1e11c5d >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:19:5
 1e0ffaa:    bf f3 dd e7       	call -12358 <puts : 1e0cf68 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:19:5
 1e0ffae:    c4 ff 18 01 e1 01 	r4 = 31523096 <late_initcall_begin : 1e10118 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:19:5
 1e0ffb4:    c5 ff 10 01 e1 01 	r5 = 31523088 <initcall_end : 1e10110 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\apps\spp_and_le\version.c:19:5
 1e0ffba:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x5C : 1e0ffc8 >
 1e0ffbe:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:29:5
 1e0ffc2:    80 00             	call r0			  ## init.c:29:5
 1e0ffc4:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x52 : 1e0ffbe >
 1e0ffc8:    c4 ff 20 01 e1 01 	r4 = 31523104 <syscfg_ops_begin : 1e10120 >
 1e0ffce:    c5 ff 1c 01 e1 01 	r5 = 31523100 <platform_initcall_begin : 1e1011c >
 1e0ffd4:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x76 : 1e0ffe2 >
 1e0ffd8:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:39:5
 1e0ffdc:    80 00             	call r0			  ## init.c:39:5
 1e0ffde:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x6C : 1e0ffd8 >
 1e0ffe2:    bf f3 f7 a8       	call -44562 <board_init : 1e051d4 >			  ## init.c:69:5
 1e0ffe6:    c4 ff 10 01 e1 01 	r4 = 31523088 <initcall_end : 1e10110 >			  ## init.c:69:5
 1e0ffec:    c5 ff 0c 01 e1 01 	r5 = 31523084 <initcall_begin : 1e1010c >			  ## init.c:69:5
 1e0fff2:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x94 : 1e10000 >
 1e0fff6:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:24:5
 1e0fffa:    80 00             	call r0			  ## init.c:24:5
 1e0fffc:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x8A : 1e0fff6 >
 1e10000:    c4 ff 20 01 e1 01 	r4 = 31523104 <syscfg_ops_begin : 1e10120 >
 1e10006:    c5 ff 20 01 e1 01 	r5 = 31523104 <syscfg_ops_begin : 1e10120 >
 1e1000c:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0xAE : 1e1001a >
 1e10010:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:44:5
 1e10014:    80 00             	call r0			  ## init.c:44:5
 1e10016:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0xA4 : 1e10010 >
 1e1001a:    c4 ff 1c 01 e1 01 	r4 = 31523100 <platform_initcall_begin : 1e1011c >
 1e10020:    c5 ff 18 01 e1 01 	r5 = 31523096 <late_initcall_begin : 1e10118 >
 1e10026:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0xC8 : 1e10034 >
 1e1002a:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:34:5
 1e1002e:    80 00             	call r0			  ## init.c:34:5
 1e10030:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0xBE : 1e1002a >
 1e10034:    c0 ff 7c 08 00 00 	r0 = 2172 <head : 87c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e1003a:    08 40             	[r0 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:188:16
 1e1003c:    18 40             	[r0 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e1003e:    c0 ff fc 20 00 00 	r0 = 8444 <mutex.1036 : 20fc >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e10044:    97 f3 ea b6       	call 3108308 <os_mutex_create : 106e1c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e10048:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e1004e:    c1 ff b4 09 00 00 	r1 = 2484 <system_data_start : 9b4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e10054:    01 f2 09 20       	if (r1 >= r0) goto 18 <app_task_init+0xFE : 1e1006a >
 1e10058:    01 81             	r1 += 16
 1e1005a:    09 42             	[r1 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:188:16
 1e1005c:    02 93             	r2 = r1 + 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:445:5
 1e1005e:    13 fc 20 00       	r3 = r1 + 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:445:5
 1e10062:    19 42             	[r1 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e10064:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e10066:    02 f2 f8 3f       	if (r2 < r0) goto -16 <app_task_init+0xEE : 1e1005a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e1006a:    bf f3 2c f5       	call -5544 <register_sys_event_handler : 1e0eac6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:449:5
 1e1006e:    16 01             	{rets, r6-r4} = [sp++]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:451:5
 1e10070:    ff f3 1c ab       	goto -43464 <app_main : 1e056ac >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:451:5


app_task_handler:
 1e10074:    c0 0b             	sp += -128			  ## init.c:80:0
 1e10076:    7a 17             	call -268 <app_task_init : 1e0ff6c >			  ## init.c:84:5
 1e10078:    c4 ff ed 24 e1 01 	r4 = 31532269 <update_target_end+0x22BD : 1e124ed >
 1e1007e:    01 a0             	r1 = sp + 0
 1e10080:    02 72             	r2 = 32			  ## init.c:87:15
 1e10082:    40 08             	r0 = r4			  ## init.c:87:15
 1e10084:    97 f3 a6 b6       	call 3108172 <os_task_pend : 106dd4 >			  ## init.c:87:15
 1e10088:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <app_task_handler+0xA : 1e1007e >			  ## init.c:88:13
 1e1008c:    00 a0             	r0 = sp + 0
 1e1008e:    bf f3 c4 f6       	call -4728 <app_core_msg_handler : 1e0ee1a >			  ## init.c:91:9
 1e10092:    f5 1f             	goto -22 <app_task_handler+0xA : 1e1007e >			  ## init.c:91:9


vfs_ops_begin:
 1e10094:    32 24             	if (r2 == 0) goto 100 <vfs_ops_begin+0x66 : 1e100fa >
 1e10096:    e1 01             	[--sp] = {psr, reti}
 1e10098:    d0 f7 e0 01       	h[r0 ++= 480] = r0
 1e1009c:    00 00             	nop
 1e1009e:    00 00             	nop
 1e100a0:    00 00             	nop
 1e100a2:    00 00             	nop
 1e100a4:    00 00             	nop
 1e100a6:    00 00             	nop
 1e100a8:    00 00             	nop
 1e100aa:    00 00             	nop
 1e100ac:    74 f9              <unkown instruction>
 1e100ae:    e0 01             	[--sp] = {psr}
 1e100b0:    98 fa e0 01       	b[r0 ++= r1] = r8
 1e100b4:    00 00             	nop
 1e100b6:    00 00             	nop
 1e100b8:    c8 fa e0 01       	r8 = b[r0 ++= r1] (u)
 1e100bc:    2a fb e0 01       	r0 = rete
 1e100c0:    00 00             	nop
 1e100c2:    00 00             	nop
 1e100c4:    4c fb e0 01       	r12 = r0 + 28672
 1e100c8:    5a fb e0 01       	r10 = r0 - 28672
 1e100cc:    00 00             	nop
 1e100ce:    00 00             	nop
 1e100d0:    68 fb e0 01       	r8 = 28672 - r0
 1e100d4:    00 00             	nop
 1e100d6:    00 00             	nop
 1e100d8:    00 00             	nop
 1e100da:    00 00             	nop
 1e100dc:    8c fb e0 01       	r0 = r1 + r14
 1e100e0:    00 00             	nop
 1e100e2:    00 00             	nop
 1e100e4:    00 00             	nop
 1e100e6:    00 00             	nop
 1e100e8:    00 00             	nop
 1e100ea:    00 00             	nop
 1e100ec:    00 00             	nop
 1e100ee:    00 00             	nop
 1e100f0:    00 00             	nop
 1e100f2:    00 00             	nop
 1e100f4:    00 00             	nop
 1e100f6:    00 00             	nop
 1e100f8:    00 00             	nop
 1e100fa:    00 00             	nop
 1e100fc:    9c fb e0 01       	r0 = r1 - r14
 1e10100:    00 00             	nop
 1e10102:    00 00             	nop
 1e10104:    00 00             	nop
 1e10106:    00 00             	nop


vfs_ops_end:
 1e10108:    02 f5 e0 01       	r2 = [sp+480]


initcall_begin:
 1e1010c:    aa 19             	goto 852 <update_target_end+0x232 : 1e10462 >
 1e1010e:    e0 01             	[--sp] = {psr}


initcall_end:
 1e10110:    a2 e8 e0 01       	if (r2 == -118) goto 960 <update_target_end+0x2A4 : 1e104d4 >


__initcall_sdfile_init:
 1e10114:    5a f6 e0 01       	[r0 ++= 480] = r10


late_initcall_begin:
 1e10118:    74 74             	r4 = 71
 1e1011a:    e0 01             	[--sp] = {psr}


platform_initcall_begin:
 1e1011c:    a2 ee e0 01       	if (r2 == -22) goto 960 <update_target_end+0x2B0 : 1e104e0 >


syscfg_ops_begin:
 1e10120:    e8 f2 e0 01       	if (r8 == r14) goto 960 <update_target_end+0x2B4 : 1e104e4 >
 1e10124:    aa f3 e0 01       	call -2882624 <uECC_vli_cmp_unsafe+0x1A494EC : 1b504e8 >
 1e10128:    c4 f3 e0 01       	goto 525248 <bank_code_load_addr+0x718D8 : 1e904ec >
 1e1012c:    10 f4 e0 01       	[r0 + 64] |= 28672
 1e10130:    00 00             	nop
 1e10132:    00 00             	nop
 1e10134:    00 00             	nop
 1e10136:    00 00             	nop
 1e10138:    00 00             	nop
 1e1013a:    00 00             	nop


cfg_vm:
 1e1013c:    d4 6f             	r4 = b[r7 + 29] (u)
 1e1013e:    e0 01             	[--sp] = {psr}
 1e10140:    20 72             	r0 = 34
 1e10142:    e0 01             	[--sp] = {psr}
 1e10144:    2e 72             	r14 = 34
 1e10146:    e0 01             	[--sp] = {psr}
 1e10148:    fa 72             	r10 = 47
 1e1014a:    e0 01             	[--sp] = {psr}
 1e1014c:    00 00             	nop
 1e1014e:    00 00             	nop
 1e10150:    00 00             	nop
 1e10152:    00 00             	nop
 1e10154:    00 00             	nop
 1e10156:    00 00             	nop


cfg_bin:
 1e10158:    ea ef e0 01       	if (r10 == -2) goto 960 <update_target_end+0x2EC : 1e1051c >
 1e1015c:    ae f0 e0 01       	if ((r14 & r10) == 0) goto 960 <update_target_end+0x2F0 : 1e10520 >
 1e10160:    c2 f1 e0 01       	if ((r2 & r12) != 0) goto 960 <update_target_end+0x2F4 : 1e10524 >
 1e10164:    00 00             	nop
 1e10166:    00 00             	nop
 1e10168:    00 00             	nop
 1e1016a:    00 00             	nop
 1e1016c:    02 f2 e0 01       	if (r2 == r0) goto 960 <update_target_end+0x300 : 1e10530 >
 1e10170:    10 f2 e0 01       	if (r0 == r1) goto 960 <update_target_end+0x304 : 1e10534 >


syscfg_ops_end:
 1e10174:    a4 03             	r4 = [sp+104]
 1e10176:    e1 01             	[--sp] = {psr, reti}
 1e10178:    00 00             	nop
 1e1017a:    00 00             	nop
 1e1017c:    c8 09             	r8 += r12
 1e1017e:    e0 01             	[--sp] = {psr}


ota_lp_target:
 1e10180:    ea 0a             	sp += 468
 1e10182:    e1 01             	[--sp] = {psr, reti}
 1e10184:    00 00             	nop
 1e10186:    00 00             	nop
 1e10188:    9a 19             	goto 820 <update_target_end+0x28E : 1e104be >
 1e1018a:    e0 01             	[--sp] = {psr}


app_hid_lp_target:
 1e1018c:    7b 0e             	r3 = r7 * r1
 1e1018e:    e1 01             	[--sp] = {psr, reti}
 1e10190:    00 00             	nop
 1e10192:    00 00             	nop
 1e10194:    2c 1f             	goto -424 <app_task_init+0x82 : 1e0ffee >
 1e10196:    e0 01             	[--sp] = {psr}


app_state_lp_target:
 1e10198:    f7 10             	call 494 <update_target_end+0x158 : 1e10388 >
 1e1019a:    e1 01             	[--sp] = {psr, reti}
 1e1019c:    00 00             	nop
 1e1019e:    00 00             	nop
 1e101a0:    4e 27             	if (r3 == 0) goto -356 <app_task_init+0xD2 : 1e1003e >
 1e101a2:    e0 01             	[--sp] = {psr}


custom_lp_target:
 1e101a4:    8d 1c             	goto -1766 <sdfile_read+0x28 : 1e0fac0 >
 1e101a6:    e1 01             	[--sp] = {psr, reti}
 1e101a8:    00 00             	nop
 1e101aa:    00 00             	nop
 1e101ac:    1a 32             	if (r1 != 0) goto 52 <uart+0x2 : 1e101e2 >
 1e101ae:    e0 01             	[--sp] = {psr}


__wakeup_is_idle_target:
 1e101b0:    5c 1f             	goto -328 <app_task_init+0xFE : 1e1006a >
 1e101b2:    e1 01             	[--sp] = {psr, reti}
 1e101b4:    00 00             	nop
 1e101b6:    00 00             	nop
 1e101b8:    a0 3a             	if (r5 != 0) goto 320 <update_target_end+0xCA : 1e102fa >
 1e101ba:    e0 01             	[--sp] = {psr}


usb_dev_lp_target:
 1e101bc:    e1 22             	if (r1 == 0) goto 450 <update_target_end+0x150 : 1e10380 >
 1e101be:    e1 01             	[--sp] = {psr, reti}
 1e101c0:    00 00             	nop
 1e101c2:    00 00             	nop
 1e101c4:    a4 3a             	if (r5 != 0) goto 328 <update_target_end+0xDE : 1e1030e >
 1e101c6:    e0 01             	[--sp] = {psr}


usr_systimer_lp_target:
 1e101c8:    23 25             	if (r2 == 0) goto -442 <app_task_init+0xA4 : 1e10010 >
 1e101ca:    e1 01             	[--sp] = {psr, reti}
 1e101cc:    00 00             	nop
 1e101ce:    00 00             	nop
 1e101d0:    64 c5             	r4 = r4 << 21
 1e101d2:    e0 01             	[--sp] = {psr}


btstack_lowpower_target:
 1e101d4:    f1 25             	if (r2 == 0) goto -30 <__wakeup_is_idle_target+0x8 : 1e101b8 >
 1e101d6:    e1 01             	[--sp] = {psr, reti}
 1e101d8:    00 00             	nop
 1e101da:    00 00             	nop
 1e101dc:    30 83             	r0 += 51
 1e101de:    e0 01             	[--sp] = {psr}


uart:
 1e101e0:    f1 1d             	goto -1054 <fclose+0x50 : 1e0fdc4 >
 1e101e2:    e1 01             	[--sp] = {psr, reti}
 1e101e4:    a4 37             	if (r3 != 0) goto -184 <syscfg_ops_begin+0xE : 1e1012e >
 1e101e6:    e0 01             	[--sp] = {psr}
 1e101e8:    c2 37             	if (r3 != 0) goto -124 <cfg_bin+0x16 : 1e1016e >
 1e101ea:    e0 01             	[--sp] = {psr}


clock_sfc:
 1e101ec:    eb 1d             	goto -1066 <fclose+0x50 : 1e0fdc4 >
 1e101ee:    e1 01             	[--sp] = {psr, reti}
 1e101f0:    ae 3e             	if (r7 != 0) goto 348 <update_target_end+0x11E : 1e1034e >
 1e101f2:    00 00             	nop
 1e101f4:    b0 3e             	if (r7 != 0) goto 352 <update_target_end+0x126 : 1e10356 >
 1e101f6:    00 00             	nop


tmr:
 1e101f8:    f6 1d             	goto -1044 <fclose+0x72 : 1e0fde6 >
 1e101fa:    e1 01             	[--sp] = {psr, reti}
 1e101fc:    26 38             	if (r4 != 0) goto 76 <update_target_end+0x1A : 1e1024a >
 1e101fe:    e0 01             	[--sp] = {psr}
 1e10200:    c2 3e             	if (r7 != 0) goto 388 <update_target_end+0x156 : 1e10386 >
 1e10202:    00 00             	nop


os:
 1e10204:    06 23             	if (r1 == 0) goto -500 <app_task_init+0xA6 : 1e10012 >
 1e10206:    e1 01             	[--sp] = {psr, reti}
 1e10208:    d2 d9             	r2 = r2 >>> 7
 1e1020a:    e0 01             	[--sp] = {psr}
 1e1020c:    d4 d9             	r4 = r2 >>> 7
 1e1020e:    e0 01             	[--sp] = {psr}


bt:
 1e10210:    f2 26             	if (r3 == 0) goto 484 <update_target_end+0x1C6 : 1e103f6 >
 1e10212:    e1 01             	[--sp] = {psr, reti}
 1e10214:    2e 3a             	if (r5 != 0) goto 92 <update_target_end+0x42 : 1e10272 >
 1e10216:    e1 01             	[--sp] = {psr, reti}
 1e10218:    b8 3a             	if (r5 != 0) goto 368 <update_target_end+0x15A : 1e1038a >
 1e1021a:    e1 01             	[--sp] = {psr, reti}


vm_sfc:
 1e1021c:    df 28             	if (r4 == 0) goto 446 <update_target_end+0x1AC : 1e103dc >
 1e1021e:    e1 01             	[--sp] = {psr, reti}
 1e10220:    a0 44             	r0 = [r2 + 40]
 1e10222:    00 00             	nop
 1e10224:    bc 44             	[r2 + 44] = r4
 1e10226:    00 00             	nop


update_target_begin:
 1e10228:    60 27             	if (r3 == 0) goto -320 <vfs_ops_begin+0x56 : 1e100ea >
 1e1022a:    e1 01             	[--sp] = {psr, reti}
 1e1022c:    86 5f             	r6 = h[r7 + 48] (u)
 1e1022e:    e1 01             	[--sp] = {psr, reti}


update_target_end:
 1e10230:    25 73             	r5 = 50
 1e10232:    28 29             	if (r4 == 0) goto -432 <app_task_handler+0x10 : 1e10084 >
 1e10234:    20 25             	if (r2 == 0) goto -448 <app_task_handler+0x2 : 1e10076 >
 1e10236:    64 20             	if (r0 == 0) goto 200 <update_target_end+0xD0 : 1e10300 >
 1e10238:    25 78             	r5 = 130
 1e1023a:    20 25             	if (r2 == 0) goto -448 <app_task_handler+0x8 : 1e1007c >
 1e1023c:    78 0a             	sp += 240
 1e1023e:    00 61             	r0 = b[r0 + 16] (u)
 1e10240:    64 63             	r4 = b[r1 + 22] (u)
 1e10242:    5f 61             	b[r0 + 21] = r7
 1e10244:    64 64             	r4 = b[r2 + 6] (u)
 1e10246:    5f 73             	r15 = 53
 1e10248:    61 6d             	r1 = b[r6 + 22] (u)
 1e1024a:    70 6c             	r0 = b[r6 + 7] (u)
 1e1024c:    65 5f             	r5 = h[r7 + 44] (u)
 1e1024e:    63 68             	r3 = b[r4 + 6] (u)
 1e10250:    00 61             	r0 = b[r0 + 16] (u)
 1e10252:    64 64             	r4 = b[r2 + 6] (u)
 1e10254:    20 73             	r0 = 50
 1e10256:    61 6d             	r1 = b[r6 + 22] (u)
 1e10258:    70 6c             	r0 = b[r6 + 7] (u)
 1e1025a:    65 20             	if (r0 == 0) goto 202 <update_target_end+0xF6 : 1e10326 >
 1e1025c:    63 68             	r3 = b[r4 + 6] (u)
 1e1025e:    20 25             	if (r2 == 0) goto -448 <vfs_ops_begin+0xC : 1e100a0 >
 1e10260:    78 0a             	sp += 240
 1e10262:    00 76             	r0 = 96
 1e10264:    62 67             	r2 = b[r3 + 22] (u)
 1e10266:    5f 61             	b[r0 + 21] = r7
 1e10268:    64 63             	r4 = b[r1 + 22] (u)
 1e1026a:    5f 76             	r15 = 101
 1e1026c:    61 6c             	r1 = b[r6 + 6] (u)
 1e1026e:    75 65             	r5 = b[r2 + 23] (u)
 1e10270:    20 3d             	if (r6 != 0) goto -448 <vfs_ops_begin+0x1E : 1e100b2 >
 1e10272:    20 25             	if (r2 == 0) goto -448 <vfs_ops_begin+0x20 : 1e100b4 >
 1e10274:    64 0a             	sp += 200
 1e10276:    00 76             	r0 = 96
 1e10278:    62 61             	r2 = b[r0 + 22] (u)
 1e1027a:    74 5f             	r4 = h[r7 + 46] (u)
 1e1027c:    61 64             	r1 = b[r2 + 6] (u)
 1e1027e:    63 5f             	r3 = h[r7 + 44] (u)
 1e10280:    76 61             	r6 = b[r0 + 23] (u)
 1e10282:    6c 75             	r12 = 86
 1e10284:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x120 : 1e10350 >
 1e10286:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0xD2 : 1e10302 >
 1e10288:    25 64             	r5 = b[r2 + 2] (u)
 1e1028a:    0a 00             	ssync
 1e1028c:    76 62             	r6 = b[r1 + 7] (u)
 1e1028e:    61 74             	r1 = 70
 1e10290:    20 3d             	if (r6 != 0) goto -448 <vfs_ops_begin+0x3E : 1e100d2 >
 1e10292:    20 25             	if (r2 == 0) goto -448 <vfs_ops_begin+0x40 : 1e100d4 >
 1e10294:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x12E : 1e1035e >
 1e10296:    6d 76             	r13 = 102
 1e10298:    0a 00             	ssync
 1e1029a:    74 72             	r4 = 39
 1e1029c:    69 6d             	b[r6 + 22] = r1
 1e1029e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xE4 : 1e10314 >
 1e102a0:    25 64             	r5 = b[r2 + 2] (u)
 1e102a2:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xCC : 1e102fc >
 1e102a4:    77 76             	r7 = 103
 1e102a6:    64 64             	r4 = b[r2 + 6] (u)
 1e102a8:    5f 6c             	b[r6 + 5] = r7
 1e102aa:    65 76             	r5 = 102
 1e102ac:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xF2 : 1e10322 >
 1e102ae:    25 64             	r5 = b[r2 + 2] (u)
 1e102b0:    0a 00             	ssync
 1e102b2:    74 72             	r4 = 39
 1e102b4:    69 6d             	b[r6 + 22] = r1
 1e102b6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xFC : 1e1032c >
 1e102b8:    25 64             	r5 = b[r2 + 2] (u)
 1e102ba:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xE4 : 1e10314 >
 1e102bc:    70 76             	r0 = 103
 1e102be:    64 64             	r4 = b[r2 + 6] (u)
 1e102c0:    5f 6c             	b[r6 + 5] = r7
 1e102c2:    65 76             	r5 = 102
 1e102c4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x10A : 1e1033a >
 1e102c6:    25 64             	r5 = b[r2 + 2] (u)
 1e102c8:    20 25             	if (r2 == 0) goto -448 <vfs_ops_end+0x2 : 1e1010a >
 1e102ca:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x164 : 1e10394 >
 1e102cc:    20 70             	r0 = 2
 1e102ce:    76 64             	r6 = b[r2 + 7] (u)
 1e102d0:    64 5f             	r4 = h[r7 + 44] (u)
 1e102d2:    6c 65             	b[r2 + 22] = r4
 1e102d4:    76 5f             	r6 = h[r7 + 46] (u)
 1e102d6:    6c 3a             	if (r5 != 0) goto 216 <update_target_end+0x180 : 1e103b0 >
 1e102d8:    20 25             	if (r2 == 0) goto -448 <late_initcall_begin+0x2 : 1e1011a >
 1e102da:    64 0a             	sp += 200
 1e102dc:    00 4a             	r0 = [r5 + 0]
 1e102de:    4c 5f             	h[r7 + 40] = r4
 1e102e0:    54 49             	r4 = [r4 + 84]
 1e102e2:    4d 45             	[r2 + 80] = r5
 1e102e4:    52 78             	r2 = 133
 1e102e6:    2d 3e             	if (r7 != 0) goto 90 <update_target_end+0x112 : 1e10342 >
 1e102e8:    50 52             	r0 = h[r1 + 10] (u)
 1e102ea:    44 20             	if (r0 == 0) goto 136 <update_target_end+0x144 : 1e10374 >
 1e102ec:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x138 : 1e10368 >
 1e102ee:    30 78             	r0 = 131
 1e102f0:    25 78             	r5 = 130
 1e102f2:    0a 00             	ssync
 1e102f4:    4a 4c             	[r6 + 16] = r2
 1e102f6:    5f 54             	h[r2 + 10] = r7
 1e102f8:    49 4d             	[r6 + 80] = r1
 1e102fa:    45 52             	r5 = h[r1 + 8] (u)
 1e102fc:    78 2d             	if (r6 == 0) goto -272 <clock_sfc+0x2 : 1e101ee >
 1e102fe:    3e 43             	[r1 + 76] = r6
 1e10300:    4f 4e             	[r7 + 16] = r7
 1e10302:    20 3d             	if (r6 != 0) goto -448 <cfg_vm+0x8 : 1e10144 >
 1e10304:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x116 : 1e10346 >
 1e10306:    78 25             	if (r2 == 0) goto -272 <tmr : 1e101f8 >
 1e10308:    78 0a             	sp += 240
 1e1030a:    00 0a             	sp += 0
 1e1030c:    7e 7e             	r14 = 231
 1e1030e:    7e 7e             	r14 = 231
 1e10310:    7e 7e             	r14 = 231
 1e10312:    7e 7e             	r14 = 231
 1e10314:    7e 7e             	r14 = 231
 1e10316:    7e 7e             	r14 = 231
 1e10318:    7e 7e             	r14 = 231
 1e1031a:    7e 7e             	r14 = 231
 1e1031c:    7e 7e             	r14 = 231
 1e1031e:    7e 7e             	r14 = 231
 1e10320:    7e 7e             	r14 = 231
 1e10322:    7e 7e             	r14 = 231
 1e10324:    7e 7e             	r14 = 231
 1e10326:    7e 7e             	r14 = 231
 1e10328:    7e 7e             	r14 = 231
 1e1032a:    7e 7e             	r14 = 231
 1e1032c:    7e 7e             	r14 = 231
 1e1032e:    7e 7e             	r14 = 231
 1e10330:    7e 7e             	r14 = 231
 1e10332:    7e 7e             	r14 = 231
 1e10334:    7e 7e             	r14 = 231
 1e10336:    7e 7e             	r14 = 231
 1e10338:    7e 7e             	r14 = 231
 1e1033a:    7e 7e             	r14 = 231
 1e1033c:    7e 7e             	r14 = 231
 1e1033e:    7e 00             	sti r14
 1e10340:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x152 : 1e10382 >
 1e10342:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x154 : 1e10384 >
 1e10344:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x156 : 1e10386 >
 1e10346:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x158 : 1e10388 >
 1e10348:    20 73             	r0 = 50
 1e1034a:    65 74             	r5 = 70
 1e1034c:    75 70             	r5 = 7
 1e1034e:    5f 61             	b[r0 + 21] = r7
 1e10350:    72 63             	r2 = b[r1 + 23] (u)
 1e10352:    68 20             	if (r0 == 0) goto 208 <update_target_end+0x1F4 : 1e10424 >
 1e10354:    25 73             	r5 = 50
 1e10356:    20 25             	if (r2 == 0) goto -448 <app_state_lp_target : 1e10198 >
 1e10358:    73 00             	sti r3
 1e1035a:    4d 61             	b[r0 + 20] = r5
 1e1035c:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x212 : 1e10442 >
 1e1035e:    31 30             	if (r0 != 0) goto 98 <update_target_end+0x192 : 1e103c2 >
 1e10360:    20 32             	if (r1 != 0) goto 64 <update_target_end+0x172 : 1e103a2 >
 1e10362:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x194 : 1e103c4 >
 1e10364:    32 00             	pc = [sp++]
 1e10366:    30 39             	if (r4 != 0) goto -416 <usr_systimer_lp_target : 1e101c8 >
 1e10368:    3a 31             	if (r0 != 0) goto -396 <btstack_lowpower_target+0xA : 1e101de >
 1e1036a:    37 3a             	if (r5 != 0) goto 110 <update_target_end+0x1AA : 1e103da >
 1e1036c:    34 33             	if (r1 != 0) goto -408 <btstack_lowpower_target+0x2 : 1e101d6 >
 1e1036e:    00 7e             	r0 = 224
 1e10370:    7e 7e             	r14 = 231
 1e10372:    7e 7e             	r14 = 231
 1e10374:    7e 7e             	r14 = 231
 1e10376:    7e 7e             	r14 = 231
 1e10378:    7e 7e             	r14 = 231
 1e1037a:    7e 7e             	r14 = 231
 1e1037c:    7e 7e             	r14 = 231
 1e1037e:    7e 7e             	r14 = 231
 1e10380:    7e 7e             	r14 = 231
 1e10382:    7e 7e             	r14 = 231
 1e10384:    7e 7e             	r14 = 231
 1e10386:    7e 7e             	r14 = 231
 1e10388:    7e 7e             	r14 = 231
 1e1038a:    7e 7e             	r14 = 231
 1e1038c:    7e 7e             	r14 = 231
 1e1038e:    7e 7e             	r14 = 231
 1e10390:    7e 7e             	r14 = 231
 1e10392:    7e 7e             	r14 = 231
 1e10394:    7e 7e             	r14 = 231
 1e10396:    7e 7e             	r14 = 231
 1e10398:    7e 7e             	r14 = 231
 1e1039a:    7e 7e             	r14 = 231
 1e1039c:    7e 7e             	r14 = 231
 1e1039e:    7e 7e             	r14 = 231
 1e103a0:    7e 7e             	r14 = 231
 1e103a2:    0a 00             	ssync
 1e103a4:    6b 65             	b[r2 + 22] = r3
 1e103a6:    79 00             	sti r9
 1e103a8:    5b 4c             	[r6 + 20] = r3
 1e103aa:    45 5f             	r5 = h[r7 + 40] (u)
 1e103ac:    54 52             	r4 = h[r1 + 10] (u)
 1e103ae:    41 4e             	r1 = [r7 + 16]
 1e103b0:    53 5d             	r3 = h[r6 + 42] (u)
 1e103b2:    66 61             	r6 = b[r0 + 22] (u)
 1e103b4:    69 6c             	b[r6 + 6] = r1
 1e103b6:    2c 6e             	b[r7 + 2] = r4
 1e103b8:    6f 20             	if (r0 == 0) goto 222 <update_target_end+0x268 : 1e10498 >
 1e103ba:    77 72             	r7 = 39
 1e103bc:    69 74             	r9 = 70
 1e103be:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x25A : 1e1048a >
 1e103c0:    63 63             	r3 = b[r1 + 22] (u)
 1e103c2:    63 21             	if (r0 == 0) goto -314 <update_target_end+0x5A : 1e1028a >
 1e103c4:    21 21             	if (r0 == 0) goto -446 <os+0x4 : 1e10208 >
 1e103c6:    2c 25             	if (r2 == 0) goto -424 <vm_sfc+0x4 : 1e10220 >
 1e103c8:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x1FA : 1e1042a >
 1e103ca:    78 0a             	sp += 240
 1e103cc:    20 00             	rts
 1e103ce:    5b 4c             	[r6 + 20] = r3
 1e103d0:    45 5f             	r5 = h[r7 + 40] (u)
 1e103d2:    54 52             	r4 = h[r1 + 10] (u)
 1e103d4:    41 4e             	r1 = [r7 + 16]
 1e103d6:    53 5d             	r3 = h[r6 + 42] (u)
 1e103d8:    61 70             	r1 = 6
 1e103da:    70 5f             	r0 = h[r7 + 46] (u)
 1e103dc:    73 65             	r3 = b[r2 + 23] (u)
 1e103de:    6e 64             	b[r2 + 6] = r6
 1e103e0:    5f 66             	b[r3 + 5] = r7
 1e103e2:    61 69             	r1 = b[r4 + 22] (u)
 1e103e4:    6c 3a             	if (r5 != 0) goto 216 <update_target_end+0x28E : 1e104be >
 1e103e6:    25 64             	r5 = b[r2 + 2] (u)
 1e103e8:    20 21             	if (r0 == 0) goto -448 <update_target_begin+0x2 : 1e1022a >
 1e103ea:    21 21             	if (r0 == 0) goto -446 <update_target_begin+0x6 : 1e1022e >
 1e103ec:    21 21             	if (r0 == 0) goto -446 <update_target_end : 1e10230 >
 1e103ee:    21 0a             	sp += 64
 1e103f0:    20 00             	rts
 1e103f2:    62 6c             	r2 = b[r6 + 6] (u)
 1e103f4:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x290 : 1e104c0 >
 1e103f6:    70 72             	r0 = 39
 1e103f8:    6f 66             	b[r3 + 6] = r7
 1e103fa:    69 6c             	b[r6 + 6] = r1
 1e103fc:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x298 : 1e104c8 >
 1e103fe:    69 6e             	b[r7 + 6] = r1
 1e10400:    69 74             	r9 = 70
 1e10402:    0a 00             	ssync
 1e10404:    5b 4c             	[r6 + 20] = r3
 1e10406:    45 5f             	r5 = h[r7 + 40] (u)
 1e10408:    54 52             	r4 = h[r1 + 10] (u)
 1e1040a:    41 4e             	r1 = [r7 + 16]
 1e1040c:    53 5d             	r3 = h[r6 + 42] (u)
 1e1040e:    41 54             	r1 = h[r2 + 8] (u)
 1e10410:    54 5f             	r4 = h[r7 + 42] (u)
 1e10412:    45 56             	r5 = h[r3 + 8] (u)
 1e10414:    45 4e             	r5 = [r7 + 16]
 1e10416:    54 5f             	r4 = h[r7 + 42] (u)
 1e10418:    48 41             	[r0 + 80] = r0
 1e1041a:    4e 44             	[r2 + 16] = r6
 1e1041c:    4c 45             	[r2 + 80] = r4
 1e1041e:    5f 56             	h[r3 + 10] = r7
 1e10420:    41 4c             	r1 = [r6 + 16]
 1e10422:    55 45             	r5 = [r2 + 84]
 1e10424:    5f 49             	[r4 + 84] = r7
 1e10426:    4e 44             	[r2 + 16] = r6
 1e10428:    49 43             	[r1 + 80] = r1
 1e1042a:    41 54             	r1 = h[r2 + 8] (u)
 1e1042c:    49 4f             	[r7 + 80] = r1
 1e1042e:    4e 5f             	h[r7 + 40] = r6
 1e10430:    43 4f             	r3 = [r7 + 80]
 1e10432:    4d 50             	h[r0 + 8] = r5
 1e10434:    4c 45             	[r2 + 80] = r4
 1e10436:    54 45             	r4 = [r2 + 84]
 1e10438:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x21E : 1e1044e >
 1e1043a:    00 5b             	r0 = h[r5 + 32] (u)
 1e1043c:    4c 45             	[r2 + 80] = r4
 1e1043e:    5f 54             	h[r2 + 10] = r7
 1e10440:    52 41             	r2 = [r0 + 84]
 1e10442:    4e 53             	h[r1 + 40] = r6
 1e10444:    5d 4c             	[r6 + 20] = r5
 1e10446:    45 5f             	r5 = h[r7 + 40] (u)
 1e10448:    53 4c             	r3 = [r6 + 20]
 1e1044a:    41 56             	r1 = h[r3 + 8] (u)
 1e1044c:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x2A8 : 1e104d8 >
 1e1044e:    43 4f             	r3 = [r7 + 80]
 1e10450:    4e 4e             	[r7 + 16] = r6
 1e10452:    45 43             	r5 = [r1 + 80]
 1e10454:    54 49             	r4 = [r4 + 84]
 1e10456:    4f 4e             	[r7 + 16] = r7
 1e10458:    20 46             	r0 = [r3 + 8]
 1e1045a:    41 49             	r1 = [r4 + 80]
 1e1045c:    4c 21             	if (r0 == 0) goto -360 <update_target_end+0xC6 : 1e102f6 >
 1e1045e:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x72 : 1e102a2 >
 1e10460:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x72 : 1e102a2 >
 1e10462:    30 78             	r0 = 131
 1e10464:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x24A : 1e1047a >
 1e10466:    00 5b             	r0 = h[r5 + 32] (u)
 1e10468:    4c 45             	[r2 + 80] = r4
 1e1046a:    5f 54             	h[r2 + 10] = r7
 1e1046c:    52 41             	r2 = [r0 + 84]
 1e1046e:    4e 53             	h[r1 + 40] = r6
 1e10470:    5d 48             	[r4 + 20] = r5
 1e10472:    43 49             	r3 = [r4 + 80]
 1e10474:    5f 53             	h[r1 + 42] = r7
 1e10476:    55 42             	r5 = [r1 + 20]
 1e10478:    45 56             	r5 = h[r3 + 8] (u)
 1e1047a:    45 4e             	r5 = [r7 + 16]
 1e1047c:    54 5f             	r4 = h[r7 + 42] (u)
 1e1047e:    4c 45             	[r2 + 80] = r4
 1e10480:    5f 45             	[r2 + 84] = r7
 1e10482:    4e 48             	[r4 + 16] = r6
 1e10484:    41 4e             	r1 = [r7 + 16]
 1e10486:    43 45             	r3 = [r2 + 80]
 1e10488:    44 5f             	r4 = h[r7 + 40] (u)
 1e1048a:    43 4f             	r3 = [r7 + 80]
 1e1048c:    4e 4e             	[r7 + 16] = r6
 1e1048e:    45 43             	r5 = [r1 + 80]
 1e10490:    54 49             	r4 = [r4 + 84]
 1e10492:    4f 4e             	[r7 + 16] = r7
 1e10494:    5f 43             	[r1 + 84] = r7
 1e10496:    4f 4d             	[r6 + 80] = r7
 1e10498:    50 4c             	r0 = [r6 + 20]
 1e1049a:    45 54             	r5 = h[r2 + 8] (u)
 1e1049c:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x2F8 : 1e10528 >
 1e1049e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2E4 : 1e10514 >
 1e104a0:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x2BC : 1e104ec >
 1e104a2:    78 0a             	sp += 240
 1e104a4:    20 00             	rts
 1e104a6:    5b 4c             	[r6 + 20] = r3
 1e104a8:    45 5f             	r5 = h[r7 + 40] (u)
 1e104aa:    54 52             	r4 = h[r1 + 10] (u)
 1e104ac:    41 4e             	r1 = [r7 + 16]
 1e104ae:    53 5d             	r3 = h[r6 + 42] (u)
 1e104b0:    63 6f             	r3 = b[r7 + 22] (u)
 1e104b2:    6e 6e             	b[r7 + 6] = r6
 1e104b4:    5f 69             	b[r4 + 21] = r7
 1e104b6:    6e 74             	r14 = 70
 1e104b8:    65 72             	r5 = 38
 1e104ba:    76 61             	r6 = b[r0 + 23] (u)
 1e104bc:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x366 : 1e10596 >
 1e104be:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x30A : 1e1053a >
 1e104c0:    25 64             	r5 = b[r2 + 2] (u)
 1e104c2:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x2A8 : 1e104d8 >
 1e104c4:    00 5b             	r0 = h[r5 + 32] (u)
 1e104c6:    4c 45             	[r2 + 80] = r4
 1e104c8:    5f 54             	h[r2 + 10] = r7
 1e104ca:    52 41             	r2 = [r0 + 84]
 1e104cc:    4e 53             	h[r1 + 40] = r6
 1e104ce:    5d 63             	b[r1 + 21] = r5
 1e104d0:    6f 6e             	b[r7 + 6] = r7
 1e104d2:    6e 5f             	h[r7 + 44] = r6
 1e104d4:    6c 61             	b[r0 + 22] = r4
 1e104d6:    74 65             	r4 = b[r2 + 23] (u)
 1e104d8:    6e 63             	b[r1 + 22] = r6
 1e104da:    79 20             	if (r0 == 0) goto 242 <update_target_end+0x39E : 1e105ce >
 1e104dc:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x328 : 1e10558 >
 1e104de:    25 64             	r5 = b[r2 + 2] (u)
 1e104e0:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x2C6 : 1e104f6 >
 1e104e2:    00 5b             	r0 = h[r5 + 32] (u)
 1e104e4:    4c 45             	[r2 + 80] = r4
 1e104e6:    5f 54             	h[r2 + 10] = r7
 1e104e8:    52 41             	r2 = [r0 + 84]
 1e104ea:    4e 53             	h[r1 + 40] = r6
 1e104ec:    5d 63             	b[r1 + 21] = r5
 1e104ee:    6f 6e             	b[r7 + 6] = r7
 1e104f0:    6e 5f             	h[r7 + 44] = r6
 1e104f2:    74 69             	r4 = b[r4 + 23] (u)
 1e104f4:    6d 65             	b[r2 + 22] = r5
 1e104f6:    6f 75             	r15 = 86
 1e104f8:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x3B2 : 1e105e2 >
 1e104fa:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x346 : 1e10576 >
 1e104fc:    25 64             	r5 = b[r2 + 2] (u)
 1e104fe:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x2E4 : 1e10514 >
 1e10500:    00 5b             	r0 = h[r5 + 32] (u)
 1e10502:    4c 45             	[r2 + 80] = r4
 1e10504:    5f 54             	h[r2 + 10] = r7
 1e10506:    52 41             	r2 = [r0 + 84]
 1e10508:    4e 53             	h[r1 + 40] = r6
 1e1050a:    5d 48             	[r4 + 20] = r5
 1e1050c:    43 49             	r3 = [r4 + 80]
 1e1050e:    5f 53             	h[r1 + 42] = r7
 1e10510:    55 42             	r5 = [r1 + 20]
 1e10512:    45 56             	r5 = h[r3 + 8] (u)
 1e10514:    45 4e             	r5 = [r7 + 16]
 1e10516:    54 5f             	r4 = h[r7 + 42] (u)
 1e10518:    4c 45             	[r2 + 80] = r4
 1e1051a:    5f 43             	[r1 + 84] = r7
 1e1051c:    4f 4e             	[r7 + 16] = r7
 1e1051e:    4e 45             	[r2 + 80] = r6
 1e10520:    43 54             	r3 = h[r2 + 8] (u)
 1e10522:    49 4f             	[r7 + 80] = r1
 1e10524:    4e 5f             	h[r7 + 40] = r6
 1e10526:    43 4f             	r3 = [r7 + 80]
 1e10528:    4d 50             	h[r0 + 8] = r5
 1e1052a:    4c 45             	[r2 + 80] = r4
 1e1052c:    54 45             	r4 = [r2 + 84]
 1e1052e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x374 : 1e105a4 >
 1e10530:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x34C : 1e1057c >
 1e10532:    78 0a             	sp += 240
 1e10534:    20 00             	rts
 1e10536:    5b 4c             	[r6 + 20] = r3
 1e10538:    45 5f             	r5 = h[r7 + 40] (u)
 1e1053a:    54 52             	r4 = h[r1 + 10] (u)
 1e1053c:    41 4e             	r1 = [r7 + 16]
 1e1053e:    53 5d             	r3 = h[r6 + 42] (u)
 1e10540:    62 6c             	r2 = b[r6 + 6] (u)
 1e10542:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x3DE : 1e1060e >
 1e10544:    72 65             	r2 = b[r2 + 23] (u)
 1e10546:    6d 6f             	b[r7 + 22] = r5
 1e10548:    74 65             	r4 = b[r2 + 23] (u)
 1e1054a:    20 72             	r0 = 34
 1e1054c:    73 73             	r3 = 55
 1e1054e:    69 3d             	if (r6 != 0) goto -302 <update_target_end+0x1F2 : 1e10422 >
 1e10550:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x162 : 1e10392 >
 1e10552:    64 0a             	sp += 200
 1e10554:    20 00             	rts
 1e10556:    5b 4c             	[r6 + 20] = r3
 1e10558:    45 5f             	r5 = h[r7 + 40] (u)
 1e1055a:    54 52             	r4 = h[r1 + 10] (u)
 1e1055c:    41 4e             	r1 = [r7 + 16]
 1e1055e:    53 5d             	r3 = h[r6 + 42] (u)
 1e10560:    41 50             	r1 = h[r0 + 8] (u)
 1e10562:    50 20             	if (r0 == 0) goto 160 <update_target_end+0x3D4 : 1e10604 >
 1e10564:    48 43             	[r1 + 80] = r0
 1e10566:    49 5f             	h[r7 + 40] = r1
 1e10568:    53 55             	r3 = h[r2 + 42] (u)
 1e1056a:    42 45             	r2 = [r2 + 80]
 1e1056c:    56 45             	r6 = [r2 + 84]
 1e1056e:    4e 54             	h[r2 + 8] = r6
 1e10570:    5f 4c             	[r6 + 20] = r7
 1e10572:    45 5f             	r5 = h[r7 + 40] (u)
 1e10574:    44 41             	r4 = [r0 + 80]
 1e10576:    54 41             	r4 = [r0 + 84]
 1e10578:    5f 4c             	[r6 + 20] = r7
 1e1057a:    45 4e             	r5 = [r7 + 16]
 1e1057c:    47 54             	r7 = h[r2 + 8] (u)
 1e1057e:    48 5f             	h[r7 + 40] = r0
 1e10580:    43 48             	r3 = [r4 + 16]
 1e10582:    41 4e             	r1 = [r7 + 16]
 1e10584:    47 45             	r7 = [r2 + 80]
 1e10586:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x36C : 1e1059c >
 1e10588:    00 46             	r0 = [r3 + 0]
 1e1058a:    61 69             	r1 = b[r4 + 22] (u)
 1e1058c:    6c 00             	cli r12
 1e1058e:    53 75             	r3 = 85
 1e10590:    63 63             	r3 = b[r1 + 22] (u)
 1e10592:    00 5b             	r0 = h[r5 + 32] (u)
 1e10594:    4c 45             	[r2 + 80] = r4
 1e10596:    5f 54             	h[r2 + 10] = r7
 1e10598:    52 41             	r2 = [r0 + 84]
 1e1059a:    4e 53             	h[r1 + 40] = r6
 1e1059c:    5d 41             	[r0 + 84] = r5
 1e1059e:    50 50             	r0 = h[r0 + 10] (u)
 1e105a0:    20 48             	r0 = [r4 + 8]
 1e105a2:    43 49             	r3 = [r4 + 80]
 1e105a4:    5f 53             	h[r1 + 42] = r7
 1e105a6:    55 42             	r5 = [r1 + 20]
 1e105a8:    45 56             	r5 = h[r3 + 8] (u)
 1e105aa:    45 4e             	r5 = [r7 + 16]
 1e105ac:    54 5f             	r4 = h[r7 + 42] (u)
 1e105ae:    4c 45             	[r2 + 80] = r4
 1e105b0:    5f 50             	h[r0 + 10] = r7
 1e105b2:    48 59             	h[r4 + 40] = r0
 1e105b4:    5f 55             	h[r2 + 42] = r7
 1e105b6:    50 44             	r0 = [r2 + 20]
 1e105b8:    41 54             	r1 = h[r2 + 8] (u)
 1e105ba:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x416 : 1e10646 >
 1e105bc:    25 73             	r5 = 50
 1e105be:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x3A4 : 1e105d4 >
 1e105c0:    00 5b             	r0 = h[r5 + 32] (u)
 1e105c2:    4c 45             	[r2 + 80] = r4
 1e105c4:    5f 54             	h[r2 + 10] = r7
 1e105c6:    52 41             	r2 = [r0 + 84]
 1e105c8:    4e 53             	h[r1 + 40] = r6
 1e105ca:    5d 54             	h[r2 + 10] = r5
 1e105cc:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x48E : 1e106be >
 1e105ce:    50 48             	r0 = [r4 + 20]
 1e105d0:    59 3a             	if (r5 != 0) goto 178 <update_target_end+0x454 : 1e10684 >
 1e105d2:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1E4 : 1e10414 >
 1e105d4:    73 0a             	sp += 228
 1e105d6:    20 00             	rts
 1e105d8:    5b 4c             	[r6 + 20] = r3
 1e105da:    45 5f             	r5 = h[r7 + 40] (u)
 1e105dc:    54 52             	r4 = h[r1 + 10] (u)
 1e105de:    41 4e             	r1 = [r7 + 16]
 1e105e0:    53 5d             	r3 = h[r6 + 42] (u)
 1e105e2:    52 78             	r2 = 133
 1e105e4:    20 50             	r0 = h[r0 + 4] (u)
 1e105e6:    48 59             	h[r4 + 40] = r0
 1e105e8:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x42E : 1e1065e >
 1e105ea:    25 73             	r5 = 50
 1e105ec:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x3D2 : 1e10602 >
 1e105ee:    00 5b             	r0 = h[r5 + 32] (u)
 1e105f0:    4c 45             	[r2 + 80] = r4
 1e105f2:    5f 54             	h[r2 + 10] = r7
 1e105f4:    52 41             	r2 = [r0 + 84]
 1e105f6:    4e 53             	h[r1 + 40] = r6
 1e105f8:    5d 48             	[r4 + 20] = r5
 1e105fa:    43 49             	r3 = [r4 + 80]
 1e105fc:    5f 45             	[r2 + 84] = r7
 1e105fe:    56 45             	r6 = [r2 + 84]
 1e10600:    4e 54             	h[r2 + 8] = r6
 1e10602:    5f 44             	[r2 + 20] = r7
 1e10604:    49 53             	h[r1 + 40] = r1
 1e10606:    43 4f             	r3 = [r7 + 80]
 1e10608:    4e 4e             	[r7 + 16] = r6
 1e1060a:    45 43             	r5 = [r1 + 80]
 1e1060c:    54 49             	r4 = [r4 + 84]
 1e1060e:    4f 4e             	[r7 + 16] = r7
 1e10610:    5f 43             	[r1 + 84] = r7
 1e10612:    4f 4d             	[r6 + 80] = r7
 1e10614:    50 4c             	r0 = [r6 + 20]
 1e10616:    45 54             	r5 = h[r2 + 8] (u)
 1e10618:    45 3a             	if (r5 != 0) goto 138 <update_target_end+0x474 : 1e106a4 >
 1e1061a:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x22C : 1e1045c >
 1e1061c:    30 78             	r0 = 131
 1e1061e:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x404 : 1e10634 >
 1e10620:    00 5b             	r0 = h[r5 + 32] (u)
 1e10622:    4c 45             	[r2 + 80] = r4
 1e10624:    5f 54             	h[r2 + 10] = r7
 1e10626:    52 41             	r2 = [r0 + 84]
 1e10628:    4e 53             	h[r1 + 40] = r6
 1e1062a:    5d 41             	[r0 + 84] = r5
 1e1062c:    54 54             	r4 = h[r2 + 10] (u)
 1e1062e:    20 4d             	r0 = [r6 + 72]
 1e10630:    54 55             	r4 = h[r2 + 42] (u)
 1e10632:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x244 : 1e10474 >
 1e10634:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x246 : 1e10476 >
 1e10636:    75 0a             	sp += 232
 1e10638:    20 00             	rts
 1e1063a:    5b 4c             	[r6 + 20] = r3
 1e1063c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1063e:    54 52             	r4 = h[r1 + 10] (u)
 1e10640:    41 4e             	r1 = [r7 + 16]
 1e10642:    53 5d             	r3 = h[r6 + 42] (u)
 1e10644:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x270 : 1e104a0 >
 1e10646:    2d 20             	if (r0 == 0) goto 90 <update_target_end+0x472 : 1e106a2 >
 1e10648:    48 43             	[r1 + 80] = r0
 1e1064a:    49 5f             	h[r7 + 40] = r1
 1e1064c:    45 56             	r5 = h[r3 + 8] (u)
 1e1064e:    45 4e             	r5 = [r7 + 16]
 1e10650:    54 5f             	r4 = h[r7 + 42] (u)
 1e10652:    56 45             	r6 = [r2 + 84]
 1e10654:    4e 44             	[r2 + 16] = r6
 1e10656:    4f 52             	h[r1 + 8] = r7
 1e10658:    5f 52             	h[r1 + 10] = r7
 1e1065a:    45 4d             	r5 = [r6 + 80]
 1e1065c:    4f 54             	h[r2 + 8] = r7
 1e1065e:    45 5f             	r5 = h[r7 + 40] (u)
 1e10660:    54 45             	r4 = [r2 + 84]
 1e10662:    53 54             	r3 = h[r2 + 10] (u)
 1e10664:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x44A : 1e1067a >
 1e10666:    00 5b             	r0 = h[r5 + 32] (u)
 1e10668:    4c 45             	[r2 + 80] = r4
 1e1066a:    5f 54             	h[r2 + 10] = r7
 1e1066c:    52 41             	r2 = [r0 + 84]
 1e1066e:    4e 53             	h[r1 + 40] = r6
 1e10670:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x2FC : 1e1052c >
 1e10672:    75 70             	r5 = 7
 1e10674:    64 61             	r4 = b[r0 + 22] (u)
 1e10676:    74 65             	r4 = b[r2 + 23] (u)
 1e10678:    5f 72             	r15 = 37
 1e1067a:    73 70             	r3 = 7
 1e1067c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x4C2 : 1e106f2 >
 1e1067e:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x49A : 1e106ca >
 1e10680:    32 78             	r2 = 131
 1e10682:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x468 : 1e10698 >
 1e10684:    00 5b             	r0 = h[r5 + 32] (u)
 1e10686:    4c 45             	[r2 + 80] = r4
 1e10688:    5f 54             	h[r2 + 10] = r7
 1e1068a:    52 41             	r2 = [r0 + 84]
 1e1068c:    4e 53             	h[r1 + 40] = r6
 1e1068e:    5d 72             	r13 = 37
 1e10690:    65 6d             	r5 = b[r6 + 22] (u)
 1e10692:    6f 74             	r15 = 70
 1e10694:    65 72             	r5 = 38
 1e10696:    20 72             	r0 = 34
 1e10698:    65 6a             	r5 = b[r5 + 6] (u)
 1e1069a:    65 63             	r5 = b[r1 + 22] (u)
 1e1069c:    74 21             	if (r0 == 0) goto -280 <update_target_end+0x356 : 1e10586 >
 1e1069e:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x2B2 : 1e104e2 >
 1e106a0:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x486 : 1e106b6 >
 1e106a2:    00 5b             	r0 = h[r5 + 32] (u)
 1e106a4:    4c 45             	[r2 + 80] = r4
 1e106a6:    5f 54             	h[r2 + 10] = r7
 1e106a8:    52 41             	r2 = [r0 + 84]
 1e106aa:    4e 53             	h[r1 + 40] = r6
 1e106ac:    5d 48             	[r4 + 20] = r5
 1e106ae:    43 49             	r3 = [r4 + 80]
 1e106b0:    5f 45             	[r2 + 84] = r7
 1e106b2:    56 45             	r6 = [r2 + 84]
 1e106b4:    4e 54             	h[r2 + 8] = r6
 1e106b6:    5f 45             	[r2 + 84] = r7
 1e106b8:    4e 43             	[r1 + 80] = r6
 1e106ba:    52 59             	r2 = h[r4 + 42] (u)
 1e106bc:    50 54             	r0 = h[r2 + 10] (u)
 1e106be:    49 4f             	[r7 + 80] = r1
 1e106c0:    4e 5f             	h[r7 + 40] = r6
 1e106c2:    43 48             	r3 = [r4 + 16]
 1e106c4:    41 4e             	r1 = [r7 + 16]
 1e106c6:    47 45             	r7 = [r2 + 80]
 1e106c8:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x514 : 1e10744 >
 1e106ca:    25 64             	r5 = b[r2 + 2] (u)
 1e106cc:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x4B2 : 1e106e2 >
 1e106ce:    00 5b             	r0 = h[r5 + 32] (u)
 1e106d0:    4c 45             	[r2 + 80] = r4
 1e106d2:    5f 54             	h[r2 + 10] = r7
 1e106d4:    52 41             	r2 = [r0 + 84]
 1e106d6:    4e 53             	h[r1 + 40] = r6
 1e106d8:    5d 75             	r13 = 85
 1e106da:    70 64             	r0 = b[r2 + 7] (u)
 1e106dc:    61 74             	r1 = 70
 1e106de:    65 5f             	r5 = h[r7 + 44] (u)
 1e106e0:    72 65             	r2 = b[r2 + 23] (u)
 1e106e2:    71 75             	r1 = 87
 1e106e4:    65 73             	r5 = 54
 1e106e6:    74 3a             	if (r5 != 0) goto 232 <update_target_end+0x5A0 : 1e107d0 >
 1e106e8:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0x314 : 1e10544 >
 1e106ea:    64 2d             	if (r6 == 0) goto -312 <update_target_end+0x384 : 1e105b4 >
 1e106ec:    25 64             	r5 = b[r2 + 2] (u)
 1e106ee:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0x31A : 1e1054a >
 1e106f0:    64 2d             	if (r6 == 0) goto -312 <update_target_end+0x38A : 1e105ba >
 1e106f2:    25 64             	r5 = b[r2 + 2] (u)
 1e106f4:    2d 0a             	sp += 88
 1e106f6:    20 00             	rts
 1e106f8:    5b 4c             	[r6 + 20] = r3
 1e106fa:    45 5f             	r5 = h[r7 + 40] (u)
 1e106fc:    54 52             	r4 = h[r1 + 10] (u)
 1e106fe:    41 4e             	r1 = [r7 + 16]
 1e10700:    53 5d             	r3 = h[r6 + 42] (u)
 1e10702:    61 64             	r1 = b[r2 + 6] (u)
 1e10704:    76 5f             	r6 = h[r7 + 46] (u)
 1e10706:    65 6e             	r5 = b[r7 + 6] (u)
 1e10708:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x34E : 1e1057e >
 1e1070a:    64 0a             	sp += 200
 1e1070c:    20 00             	rts
 1e1070e:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x534 : 1e10764 >
 1e10710:    2a 61             	b[r0 + 18] = r2
 1e10712:    64 76             	r4 = 102
 1e10714:    5f 64             	b[r2 + 5] = r7
 1e10716:    61 74             	r1 = 70
 1e10718:    61 20             	if (r0 == 0) goto 194 <update_target_end+0x5AC : 1e107dc >
 1e1071a:    6f 76             	r15 = 102
 1e1071c:    65 72             	r5 = 38
 1e1071e:    66 6c             	r6 = b[r6 + 6] (u)
 1e10720:    6f 77             	r15 = 118
 1e10722:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x336 : 1e10566 >
 1e10724:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x338 : 1e10568 >
 1e10726:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x33A : 1e1056a >
 1e10728:    0a 00             	ssync
 1e1072a:    5b 4c             	[r6 + 20] = r3
 1e1072c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1072e:    54 52             	r4 = h[r1 + 10] (u)
 1e10730:    41 4e             	r1 = [r7 + 16]
 1e10732:    53 5d             	r3 = h[r6 + 42] (u)
 1e10734:    61 64             	r1 = b[r2 + 6] (u)
 1e10736:    76 5f             	r6 = h[r7 + 46] (u)
 1e10738:    64 61             	r4 = b[r0 + 22] (u)
 1e1073a:    74 61             	r4 = b[r0 + 23] (u)
 1e1073c:    28 25             	if (r2 == 0) goto -432 <update_target_end+0x35E : 1e1058e >
 1e1073e:    64 29             	if (r4 == 0) goto -312 <update_target_end+0x3D8 : 1e10608 >
 1e10740:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x586 : 1e107b6 >
 1e10742:    00 2a             	if (r5 == 0) goto 0 <update_target_end+0x514 : 1e10744 >
 1e10744:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x56A : 1e1079a >
 1e10746:    72 73             	r2 = 55
 1e10748:    70 5f             	r0 = h[r7 + 46] (u)
 1e1074a:    64 61             	r4 = b[r0 + 22] (u)
 1e1074c:    74 61             	r4 = b[r0 + 23] (u)
 1e1074e:    20 6f             	r0 = b[r7 + 18] (u)
 1e10750:    76 65             	r6 = b[r2 + 23] (u)
 1e10752:    72 66             	r2 = b[r3 + 7] (u)
 1e10754:    6c 6f             	b[r7 + 22] = r4
 1e10756:    77 21             	if (r0 == 0) goto -274 <update_target_end+0x416 : 1e10646 >
 1e10758:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x36C : 1e1059c >
 1e1075a:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x36E : 1e1059e >
 1e1075c:    21 0a             	sp += 64
 1e1075e:    00 5b             	r0 = h[r5 + 32] (u)
 1e10760:    4c 45             	[r2 + 80] = r4
 1e10762:    5f 54             	h[r2 + 10] = r7
 1e10764:    52 41             	r2 = [r0 + 84]
 1e10766:    4e 53             	h[r1 + 40] = r6
 1e10768:    5d 72             	r13 = 37
 1e1076a:    73 70             	r3 = 7
 1e1076c:    5f 64             	b[r2 + 5] = r7
 1e1076e:    61 74             	r1 = 70
 1e10770:    61 28             	if (r4 == 0) goto 194 <update_target_end+0x604 : 1e10834 >
 1e10772:    25 64             	r5 = b[r2 + 2] (u)
 1e10774:    29 3a             	if (r5 != 0) goto 82 <update_target_end+0x598 : 1e107c8 >
 1e10776:    20 00             	rts
 1e10778:    61 64             	r1 = b[r2 + 6] (u)
 1e1077a:    76 65             	r6 = b[r2 + 23] (u)
 1e1077c:    72 74             	r2 = 71
 1e1077e:    69 73             	r9 = 54
 1e10780:    65 6d             	r5 = b[r6 + 22] (u)
 1e10782:    65 6e             	r5 = b[r7 + 6] (u)
 1e10784:    74 73             	r4 = 55
 1e10786:    5f 73             	r15 = 53
 1e10788:    65 74             	r5 = 70
 1e1078a:    75 70             	r5 = 7
 1e1078c:    5f 69             	b[r4 + 21] = r7
 1e1078e:    6e 69             	b[r4 + 22] = r6
 1e10790:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x64A : 1e1087a >
 1e10792:    66 61             	r6 = b[r0 + 22] (u)
 1e10794:    69 6c             	b[r6 + 6] = r1
 1e10796:    20 21             	if (r0 == 0) goto -448 <update_target_end+0x3A8 : 1e105d8 >
 1e10798:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x3AC : 1e105dc >
 1e1079a:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x3AE : 1e105de >
 1e1079c:    21 0a             	sp += 64
 1e1079e:    00 4e             	r0 = [r7 + 0]
 1e107a0:    6f 6e             	b[r7 + 6] = r7
 1e107a2:    65 00             	cli r5
 1e107a4:    31 4d             	r1 = [r6 + 76]
 1e107a6:    00 32             	if (r1 != 0) goto 0 <update_target_end+0x578 : 1e107a8 >
 1e107a8:    4d 00             	testset b[r13]
 1e107aa:    43 6f             	r3 = b[r7 + 20] (u)
 1e107ac:    64 65             	r4 = b[r2 + 22] (u)
 1e107ae:    64 00             	cli r4
 1e107b0:    5b 4c             	[r6 + 20] = r3
 1e107b2:    45 5f             	r5 = h[r7 + 40] (u)
 1e107b4:    54 52             	r4 = h[r1 + 10] (u)
 1e107b6:    41 4e             	r1 = [r7 + 16]
 1e107b8:    53 5d             	r3 = h[r6 + 42] (u)
 1e107ba:    62 6c             	r2 = b[r6 + 6] (u)
 1e107bc:    65 5f             	r5 = h[r7 + 44] (u)
 1e107be:    77 6f             	r7 = b[r7 + 23] (u)
 1e107c0:    72 6b             	r2 = b[r5 + 23] (u)
 1e107c2:    5f 73             	r15 = 53
 1e107c4:    74 3a             	if (r5 != 0) goto 232 <update_target_end+0x67E : 1e108ae >
 1e107c6:    25 78             	r5 = 130
 1e107c8:    2d 3e             	if (r7 != 0) goto 90 <update_target_end+0x5F4 : 1e10824 >
 1e107ca:    25 78             	r5 = 130
 1e107cc:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x5B2 : 1e107e2 >
 1e107ce:    00 5b             	r0 = h[r5 + 32] (u)
 1e107d0:    4c 45             	[r2 + 80] = r4
 1e107d2:    5f 54             	h[r2 + 10] = r7
 1e107d4:    52 41             	r2 = [r0 + 84]
 1e107d6:    4e 53             	h[r1 + 40] = r6
 1e107d8:    5d 77             	r13 = 117
 1e107da:    72 69             	r2 = b[r4 + 23] (u)
 1e107dc:    74 65             	r4 = b[r2 + 23] (u)
 1e107de:    5f 63             	b[r1 + 21] = r7
 1e107e0:    61 6c             	r1 = b[r6 + 6] (u)
 1e107e2:    6c 62             	b[r1 + 6] = r4
 1e107e4:    61 63             	r1 = b[r1 + 22] (u)
 1e107e6:    6b 2c             	if (r6 == 0) goto 214 <update_target_end+0x68E : 1e108be >
 1e107e8:    20 68             	r0 = b[r4 + 2] (u)
 1e107ea:    61 6e             	r1 = b[r7 + 6] (u)
 1e107ec:    64 6c             	r4 = b[r6 + 6] (u)
 1e107ee:    65 3d             	if (r6 != 0) goto -310 <update_target_end+0x48A : 1e106ba >
 1e107f0:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x602 : 1e10832 >
 1e107f2:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x4B4 : 1e106e4 >
 1e107f4:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x626 : 1e10856 >
 1e107f6:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x6B8 : 1e108e8 >
 1e107f8:    73 69             	r3 = b[r4 + 23] (u)
 1e107fa:    7a 65             	b[r2 + 23] = r2
 1e107fc:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x40E : 1e1063e >
 1e107fe:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x410 : 1e10640 >
 1e10800:    64 0a             	sp += 200
 1e10802:    20 00             	rts
 1e10804:    5b 4c             	[r6 + 20] = r3
 1e10806:    45 5f             	r5 = h[r7 + 40] (u)
 1e10808:    54 52             	r4 = h[r1 + 10] (u)
 1e1080a:    41 4e             	r1 = [r7 + 16]
 1e1080c:    53 5d             	r3 = h[r6 + 42] (u)
 1e1080e:    0a 2d             	if (r6 == 0) goto -492 <update_target_end+0x3F4 : 1e10624 >
 1e10810:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x43C : 1e1066c >
 1e10812:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x43E : 1e1066e >
 1e10814:    2d 77             	r13 = 114
 1e10816:    72 69             	r2 = b[r4 + 23] (u)
 1e10818:    74 65             	r4 = b[r2 + 23] (u)
 1e1081a:    20 63             	r0 = b[r1 + 18] (u)
 1e1081c:    63 63             	r3 = b[r1 + 22] (u)
 1e1081e:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x464 : 1e10694 >
 1e10820:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x652 : 1e10882 >
 1e10822:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x6E4 : 1e10914 >
 1e10824:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x640 : 1e10870 >
 1e10826:    32 78             	r2 = 131
 1e10828:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x60E : 1e1083e >
 1e1082a:    00 0a             	sp += 0
 1e1082c:    2d 38             	if (r4 != 0) goto 90 <update_target_end+0x658 : 1e10888 >
 1e1082e:    35 63             	r5 = b[r1 + 19] (u)
 1e10830:    36 30             	if (r0 != 0) goto 108 <update_target_end+0x66E : 1e1089e >
 1e10832:    30 30             	if (r0 != 0) goto 96 <update_target_end+0x664 : 1e10894 >
 1e10834:    31 5f             	r1 = h[r7 + 38] (u)
 1e10836:    57 52             	r7 = h[r1 + 10] (u)
 1e10838:    49 54             	h[r2 + 8] = r1
 1e1083a:    5f 72             	r15 = 37
 1e1083c:    78 28             	if (r4 == 0) goto 240 <update_target_end+0x6FE : 1e1092e >
 1e1083e:    25 64             	r5 = b[r2 + 2] (u)
 1e10840:    29 3a             	if (r5 != 0) goto 82 <update_target_end+0x664 : 1e10894 >
 1e10842:    00 1b             	goto 1536 <update_target_end+0xC14 : 1e10e44 >
 1e10844:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0x4CC : 1e106fc >
 1e10846:    31 6d             	r1 = b[r6 + 19] (u)
 1e10848:    1b 5b             	h[r5 + 34] = r3
 1e1084a:    31 6d             	r1 = b[r6 + 19] (u)
 1e1084c:    49 4e             	[r7 + 16] = r1
 1e1084e:    51 55             	r1 = h[r2 + 42] (u)
 1e10850:    49 52             	h[r1 + 8] = r1
 1e10852:    59 5f             	h[r7 + 42] = r1
 1e10854:    43 55             	r3 = h[r2 + 40] (u)
 1e10856:    52 52             	r2 = h[r1 + 10] (u)
 1e10858:    45 4e             	r5 = [r7 + 16]
 1e1085a:    54 5f             	r4 = h[r7 + 42] (u)
 1e1085c:    4e 55             	h[r2 + 40] = r6
 1e1085e:    4d 1b             	goto 1690 <update_target_end+0xCCA : 1e10efa >
 1e10860:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x6E8 : 1e10918 >
 1e10862:    6d 00             	cli r13
 1e10864:    1b 5b             	h[r5 + 34] = r3
 1e10866:    33 31             	if (r0 != 0) goto -410 <update_target_end+0x49E : 1e106ce >
 1e10868:    6d 1b             	goto 1754 <update_target_end+0xD14 : 1e10f44 >
 1e1086a:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0x4F2 : 1e10722 >
 1e1086c:    6d 53             	h[r1 + 44] = r5
 1e1086e:    45 54             	r5 = h[r2 + 8] (u)
 1e10870:    5f 43             	[r1 + 84] = r7
 1e10872:    4f 55             	h[r2 + 40] = r7
 1e10874:    4e 54             	h[r2 + 8] = r6
 1e10876:    44 4f             	r4 = [r7 + 80]
 1e10878:    57 4e             	r7 = [r7 + 20]
 1e1087a:    5f 54             	h[r2 + 10] = r7
 1e1087c:    49 4d             	[r6 + 80] = r1
 1e1087e:    45 52             	r5 = h[r1 + 8] (u)
 1e10880:    1b 5b             	h[r5 + 34] = r3
 1e10882:    30 6d             	r0 = b[r6 + 19] (u)
 1e10884:    00 1b             	goto 1536 <update_target_end+0xC56 : 1e10e86 >
 1e10886:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0x50E : 1e1073e >
 1e10888:    31 6d             	r1 = b[r6 + 19] (u)
 1e1088a:    1b 5b             	h[r5 + 34] = r3
 1e1088c:    31 6d             	r1 = b[r6 + 19] (u)
 1e1088e:    53 45             	r3 = [r2 + 84]
 1e10890:    54 5f             	r4 = h[r7 + 42] (u)
 1e10892:    43 4f             	r3 = [r7 + 80]
 1e10894:    55 4e             	r5 = [r7 + 20]
 1e10896:    54 44             	r4 = [r2 + 20]
 1e10898:    4f 57             	h[r3 + 40] = r7
 1e1089a:    4e 5f             	h[r7 + 40] = r6
 1e1089c:    54 4f             	r4 = [r7 + 84]
 1e1089e:    54 41             	r4 = [r0 + 84]
 1e108a0:    4c 1b             	goto 1688 <update_target_end+0xD0A : 1e10f3a >
 1e108a2:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x72A : 1e1095a >
 1e108a4:    6d 00             	cli r13
 1e108a6:    1b 5b             	h[r5 + 34] = r3
 1e108a8:    33 31             	if (r0 != 0) goto -410 <update_target_end+0x4E0 : 1e10710 >
 1e108aa:    6d 1b             	goto 1754 <update_target_end+0xD56 : 1e10f86 >
 1e108ac:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0x534 : 1e10764 >
 1e108ae:    6d 53             	h[r1 + 44] = r5
 1e108b0:    45 54             	r5 = h[r2 + 8] (u)
 1e108b2:    5f 50             	h[r0 + 10] = r7
 1e108b4:    52 45             	r2 = [r2 + 84]
 1e108b6:    53 45             	r3 = [r2 + 84]
 1e108b8:    4e 54             	h[r2 + 8] = r6
 1e108ba:    5f 54             	h[r2 + 10] = r7
 1e108bc:    49 4d             	[r6 + 80] = r1
 1e108be:    45 1b             	goto 1674 <update_target_end+0xD1A : 1e10f4a >
 1e108c0:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x748 : 1e10978 >
 1e108c2:    6d 00             	cli r13
 1e108c4:    0a 43             	[r1 + 64] = r2
 1e108c6:    55 52             	r5 = h[r1 + 10] (u)
 1e108c8:    52 45             	r2 = [r2 + 84]
 1e108ca:    4e 54             	h[r2 + 8] = r6
 1e108cc:    5f 44             	[r2 + 20] = r7
 1e108ce:    41 28             	if (r4 == 0) goto 130 <update_target_end+0x722 : 1e10952 >
 1e108d0:    25 32             	if (r1 != 0) goto 74 <update_target_end+0x6EC : 1e1091c >
 1e108d2:    64 29             	if (r4 == 0) goto -312 <update_target_end+0x56C : 1e1079c >
 1e108d4:    3a 43             	[r1 + 76] = r2
 1e108d6:    55 52             	r5 = h[r1 + 10] (u)
 1e108d8:    52 45             	r2 = [r2 + 84]
 1e108da:    4e 54             	h[r2 + 8] = r6
 1e108dc:    5f 4f             	[r7 + 84] = r7
 1e108de:    43 4c             	r3 = [r6 + 16]
 1e108e0:    4f 43             	[r1 + 80] = r7
 1e108e2:    4b 28             	if (r4 == 0) goto 150 <update_target_end+0x74A : 1e1097a >
 1e108e4:    25 32             	if (r1 != 0) goto 74 <update_target_end+0x700 : 1e10930 >
 1e108e6:    64 29             	if (r4 == 0) goto -312 <update_target_end+0x580 : 1e107b0 >
 1e108e8:    00 5b             	r0 = h[r5 + 32] (u)
 1e108ea:    4c 45             	[r2 + 80] = r4
 1e108ec:    5f 54             	h[r2 + 10] = r7
 1e108ee:    52 41             	r2 = [r0 + 84]
 1e108f0:    4e 53             	h[r1 + 40] = r6
 1e108f2:    5d 72             	r13 = 37
 1e108f4:    65 61             	r5 = b[r0 + 22] (u)
 1e108f6:    64 5f             	r4 = h[r7 + 44] (u)
 1e108f8:    63 61             	r3 = b[r0 + 22] (u)
 1e108fa:    6c 6c             	b[r6 + 6] = r4
 1e108fc:    62 61             	r2 = b[r0 + 22] (u)
 1e108fe:    63 6b             	r3 = b[r5 + 22] (u)
 1e10900:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0x72A : 1e1095a >
 1e10902:    68 61             	b[r0 + 22] = r0
 1e10904:    6e 64             	b[r2 + 6] = r6
 1e10906:    6c 65             	b[r2 + 22] = r4
 1e10908:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x754 : 1e10984 >
 1e1090a:    30 78             	r0 = 131
 1e1090c:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x728 : 1e10958 >
 1e1090e:    34 78             	r4 = 131
 1e10910:    2c 62             	b[r1 + 2] = r4
 1e10912:    75 66             	r5 = b[r3 + 7] (u)
 1e10914:    66 65             	r6 = b[r2 + 22] (u)
 1e10916:    72 3d             	if (r6 != 0) goto -284 <update_target_end+0x5CC : 1e107fc >
 1e10918:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x52A : 1e1075a >
 1e1091a:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x74C : 1e1097c >
 1e1091c:    78 0a             	sp += 240
 1e1091e:    20 00             	rts
 1e10920:    5b 4c             	[r6 + 20] = r3
 1e10922:    45 5f             	r5 = h[r7 + 40] (u)
 1e10924:    54 52             	r4 = h[r1 + 10] (u)
 1e10926:    41 4e             	r1 = [r7 + 16]
 1e10928:    53 5d             	r3 = h[r6 + 42] (u)
 1e1092a:    61 74             	r1 = 70
 1e1092c:    74 5f             	r4 = h[r7 + 46] (u)
 1e1092e:    76 61             	r6 = b[r0 + 23] (u)
 1e10930:    6c 75             	r12 = 86
 1e10932:    65 5f             	r5 = h[r7 + 44] (u)
 1e10934:    6c 65             	b[r2 + 22] = r4
 1e10936:    6e 3d             	if (r6 != 0) goto -292 <update_target_end+0x5E4 : 1e10814 >
 1e10938:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x54A : 1e1077a >
 1e1093a:    64 0a             	sp += 200
 1e1093c:    20 00             	rts
 1e1093e:    5b 4c             	[r6 + 20] = r3
 1e10940:    45 5f             	r5 = h[r7 + 40] (u)
 1e10942:    54 52             	r4 = h[r1 + 10] (u)
 1e10944:    41 4e             	r1 = [r7 + 16]
 1e10946:    53 5d             	r3 = h[r6 + 42] (u)
 1e10948:    6d 6f             	b[r7 + 22] = r5
 1e1094a:    64 65             	r4 = b[r2 + 22] (u)
 1e1094c:    5f 65             	b[r2 + 21] = r7
 1e1094e:    6e 3a             	if (r5 != 0) goto 220 <update_target_end+0x7FC : 1e10a2c >
 1e10950:    25 64             	r5 = b[r2 + 2] (u)
 1e10952:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x738 : 1e10968 >
 1e10954:    00 5b             	r0 = h[r5 + 32] (u)
 1e10956:    4c 45             	[r2 + 80] = r4
 1e10958:    5f 54             	h[r2 + 10] = r7
 1e1095a:    52 41             	r2 = [r0 + 84]
 1e1095c:    4e 53             	h[r1 + 40] = r6
 1e1095e:    5d 3e             	if (r7 != 0) goto 186 <update_target_end+0x7EA : 1e10a1a >
 1e10960:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x7AE : 1e109de >
 1e10962:    62 6c             	r2 = b[r6 + 6] (u)
 1e10964:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x800 : 1e10a30 >
 1e10966:    73 65             	r3 = b[r2 + 23] (u)
 1e10968:    6e 64             	b[r2 + 6] = r6
 1e1096a:    20 64             	r0 = b[r2 + 2] (u)
 1e1096c:    69 73             	r9 = 54
 1e1096e:    63 6f             	r3 = b[r7 + 22] (u)
 1e10970:    6e 6e             	b[r7 + 6] = r6
 1e10972:    65 63             	r5 = b[r1 + 22] (u)
 1e10974:    74 0a             	sp += 232
 1e10976:    20 00             	rts
 1e10978:    5b 4c             	[r6 + 20] = r3
 1e1097a:    45 5f             	r5 = h[r7 + 40] (u)
 1e1097c:    54 52             	r4 = h[r1 + 10] (u)
 1e1097e:    41 4e             	r1 = [r7 + 16]
 1e10980:    53 5d             	r3 = h[r6 + 42] (u)
 1e10982:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x7D0 : 1e10a00 >
 1e10984:    3e 62             	b[r1 + 3] = r6
 1e10986:    6c 65             	b[r2 + 22] = r4
 1e10988:    20 77             	r0 = 114
 1e1098a:    61 69             	r1 = b[r4 + 22] (u)
 1e1098c:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x846 : 1e10a76 >
 1e1098e:    64 69             	r4 = b[r4 + 22] (u)
 1e10990:    73 63             	r3 = b[r1 + 23] (u)
 1e10992:    6f 6e             	b[r7 + 6] = r7
 1e10994:    6e 65             	b[r2 + 22] = r6
 1e10996:    63 74             	r3 = 70
 1e10998:    2e 2e             	if (r7 == 0) goto 92 <update_target_end+0x7C6 : 1e109f6 >
 1e1099a:    2e 0a             	sp += 92
 1e1099c:    20 00             	rts
 1e1099e:    5b 4c             	[r6 + 20] = r3
 1e109a0:    45 5f             	r5 = h[r7 + 40] (u)
 1e109a2:    54 52             	r4 = h[r1 + 10] (u)
 1e109a4:    41 4e             	r1 = [r7 + 16]
 1e109a6:    53 5d             	r3 = h[r6 + 42] (u)
 1e109a8:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x7CE : 1e109fe >
 1e109aa:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x7D0 : 1e10a00 >
 1e109ac:    2a 20             	if (r0 == 0) goto 84 <update_target_end+0x7D2 : 1e10a02 >
 1e109ae:    62 6c             	r2 = b[r6 + 6] (u)
 1e109b0:    65 5f             	r5 = h[r7 + 44] (u)
 1e109b2:    69 6e             	b[r7 + 6] = r1
 1e109b4:    69 74             	r9 = 70
 1e109b6:    20 42             	r0 = [r1 + 8]
 1e109b8:    79 20             	if (r0 == 0) goto 242 <update_target_end+0x87C : 1e10aac >
 1e109ba:    6a 69             	b[r4 + 22] = r2
 1e109bc:    6d 6d             	b[r6 + 22] = r5
 1e109be:    79 2a             	if (r5 == 0) goto 242 <update_target_end+0x882 : 1e10ab2 >
 1e109c0:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x7E6 : 1e10a16 >
 1e109c2:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x7E8 : 1e10a18 >
 1e109c4:    2a 0a             	sp += 84
 1e109c6:    20 00             	rts
 1e109c8:    28 42             	[r1 + 8] = r0
 1e109ca:    4c 45             	[r2 + 80] = r4
 1e109cc:    29 00             	swi 1
 1e109ce:    5b 4c             	[r6 + 20] = r3
 1e109d0:    45 5f             	r5 = h[r7 + 40] (u)
 1e109d2:    54 52             	r4 = h[r1 + 10] (u)
 1e109d4:    41 4e             	r1 = [r7 + 16]
 1e109d6:    53 5d             	r3 = h[r6 + 42] (u)
 1e109d8:    62 6c             	r2 = b[r6 + 6] (u)
 1e109da:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x876 : 1e10aa6 >
 1e109dc:    6e 61             	b[r0 + 22] = r6
 1e109de:    6d 65             	b[r2 + 22] = r5
 1e109e0:    28 25             	if (r2 == 0) goto -432 <update_target_end+0x602 : 1e10832 >
 1e109e2:    64 29             	if (r4 == 0) goto -312 <update_target_end+0x67C : 1e108ac >
 1e109e4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x82A : 1e10a5a >
 1e109e6:    25 73             	r5 = 50
 1e109e8:    20 0a             	sp += 64
 1e109ea:    20 00             	rts
 1e109ec:    5b 49             	[r4 + 84] = r3
 1e109ee:    6e 66             	b[r3 + 6] = r6
 1e109f0:    6f 5d             	h[r6 + 44] = r7
 1e109f2:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x838 : 1e10a68 >
 1e109f4:    5b 54             	h[r2 + 10] = r3
 1e109f6:    45 53             	r5 = h[r1 + 40] (u)
 1e109f8:    54 2d             	if (r6 == 0) goto -344 <update_target_end+0x672 : 1e108a2 >
 1e109fa:    55 50             	r5 = h[r0 + 10] (u)
 1e109fc:    44 41             	r4 = [r0 + 80]
 1e109fe:    54 45             	r4 = [r2 + 84]
 1e10a00:    5d 6d             	b[r6 + 21] = r5
 1e10a02:    73 67             	r3 = b[r3 + 23] (u)
 1e10a04:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x64A : 1e1087a >
 1e10a06:    78 0a             	sp += 240
 1e10a08:    0d 0a             	sp += 24
 1e10a0a:    00 5b             	r0 = h[r5 + 32] (u)
 1e10a0c:    49 6e             	b[r7 + 4] = r1
 1e10a0e:    66 6f             	r6 = b[r7 + 22] (u)
 1e10a10:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x89C : 1e10acc >
 1e10a12:    20 5b             	r0 = h[r5 + 36] (u)
 1e10a14:    54 45             	r4 = [r2 + 84]
 1e10a16:    53 54             	r3 = h[r2 + 10] (u)
 1e10a18:    2d 55             	h[r2 + 36] = r5
 1e10a1a:    50 44             	r0 = [r2 + 20]
 1e10a1c:    41 54             	r1 = h[r2 + 8] (u)
 1e10a1e:    45 5d             	r5 = h[r6 + 40] (u)
 1e10a20:    77 61             	r7 = b[r0 + 23] (u)
 1e10a22:    69 74             	r9 = 70
 1e10a24:    20 64             	r0 = b[r2 + 2] (u)
 1e10a26:    69 73             	r9 = 54
 1e10a28:    63 6f             	r3 = b[r7 + 22] (u)
 1e10a2a:    6e 0a             	sp += 220
 1e10a2c:    0d 0a             	sp += 24
 1e10a2e:    00 62             	r0 = b[r1 + 0] (u)
 1e10a30:    6c 65             	b[r2 + 22] = r4
 1e10a32:    20 61             	r0 = b[r0 + 18] (u)
 1e10a34:    64 64             	r4 = b[r2 + 6] (u)
 1e10a36:    72 3a             	if (r5 != 0) goto 228 <update_target_end+0x8EC : 1e10b1c >
 1e10a38:    0a 00             	ssync
 1e10a3a:    5b 49             	[r4 + 84] = r3
 1e10a3c:    6e 66             	b[r3 + 6] = r6
 1e10a3e:    6f 5d             	h[r6 + 44] = r7
 1e10a40:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x886 : 1e10ab6 >
 1e10a42:    5b 54             	h[r2 + 10] = r3
 1e10a44:    45 53             	r5 = h[r1 + 40] (u)
 1e10a46:    54 2d             	if (r6 == 0) goto -344 <update_target_end+0x6C0 : 1e108f0 >
 1e10a48:    55 50             	r5 = h[r0 + 10] (u)
 1e10a4a:    44 41             	r4 = [r0 + 80]
 1e10a4c:    54 45             	r4 = [r2 + 84]
 1e10a4e:    5d 73             	r13 = 53
 1e10a50:    74 61             	r4 = b[r0 + 23] (u)
 1e10a52:    74 65             	r4 = b[r2 + 23] (u)
 1e10a54:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x69A : 1e108ca >
 1e10a56:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x918 : 1e10b48 >
 1e10a58:    65 72             	r5 = 38
 1e10a5a:    72 3a             	if (r5 != 0) goto 228 <update_target_end+0x910 : 1e10b40 >
 1e10a5c:    25 78             	r5 = 130
 1e10a5e:    0a 0d             	r10 <<= r4
 1e10a60:    0a 00             	ssync
 1e10a62:    5b 49             	[r4 + 84] = r3
 1e10a64:    6e 66             	b[r3 + 6] = r6
 1e10a66:    6f 5d             	h[r6 + 44] = r7
 1e10a68:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x8AE : 1e10ade >
 1e10a6a:    5b 54             	h[r2 + 10] = r3
 1e10a6c:    45 53             	r5 = h[r1 + 40] (u)
 1e10a6e:    54 2d             	if (r6 == 0) goto -344 <update_target_end+0x6E8 : 1e10918 >
 1e10a70:    55 50             	r5 = h[r0 + 10] (u)
 1e10a72:    44 41             	r4 = [r0 + 80]
 1e10a74:    54 45             	r4 = [r2 + 84]
 1e10a76:    5d 63             	b[r1 + 21] = r5
 1e10a78:    6c 6f             	b[r7 + 22] = r4
 1e10a7a:    73 65             	r3 = b[r2 + 23] (u)
 1e10a7c:    20 62             	r0 = b[r1 + 2] (u)
 1e10a7e:    6c 65             	b[r2 + 22] = r4
 1e10a80:    20 68             	r0 = b[r4 + 2] (u)
 1e10a82:    77 0a             	sp += 236
 1e10a84:    0d 0a             	sp += 24
 1e10a86:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x858 : 1e10a88 >
 1e10a88:    45 72             	r5 = 36
 1e10a8a:    72 6f             	r2 = b[r7 + 23] (u)
 1e10a8c:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x942 : 1e10b72 >
 1e10a8e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x8D4 : 1e10b04 >
 1e10a90:    5b 54             	h[r2 + 10] = r3
 1e10a92:    45 53             	r5 = h[r1 + 40] (u)
 1e10a94:    54 2d             	if (r6 == 0) goto -344 <update_target_end+0x70E : 1e1093e >
 1e10a96:    55 50             	r5 = h[r0 + 10] (u)
 1e10a98:    44 41             	r4 = [r0 + 80]
 1e10a9a:    54 45             	r4 = [r2 + 84]
 1e10a9c:    5d 62             	b[r1 + 5] = r5
 1e10a9e:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x958 : 1e10b88 >
 1e10aa0:    73 61             	r3 = b[r0 + 23] (u)
 1e10aa2:    76 65             	r6 = b[r2 + 23] (u)
 1e10aa4:    20 63             	r0 = b[r1 + 18] (u)
 1e10aa6:    6f 6e             	b[r7 + 6] = r7
 1e10aa8:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0x956 : 1e10b86 >
 1e10aaa:    69 6e             	b[r7 + 6] = r1
 1e10aac:    66 6f             	r6 = b[r7 + 22] (u)
 1e10aae:    20 66             	r0 = b[r3 + 2] (u)
 1e10ab0:    61 69             	r1 = b[r4 + 22] (u)
 1e10ab2:    6c 21             	if (r0 == 0) goto -296 <update_target_end+0x75C : 1e1098c >
 1e10ab4:    0a 0d             	r10 <<= r4
 1e10ab6:    0a 00             	ssync
 1e10ab8:    5b 49             	[r4 + 84] = r3
 1e10aba:    6e 66             	b[r3 + 6] = r6
 1e10abc:    6f 5d             	h[r6 + 44] = r7
 1e10abe:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x904 : 1e10b34 >
 1e10ac0:    5b 54             	h[r2 + 10] = r3
 1e10ac2:    45 53             	r5 = h[r1 + 40] (u)
 1e10ac4:    54 2d             	if (r6 == 0) goto -344 <update_target_end+0x73E : 1e1096e >
 1e10ac6:    55 50             	r5 = h[r0 + 10] (u)
 1e10ac8:    44 41             	r4 = [r0 + 80]
 1e10aca:    54 45             	r4 = [r2 + 84]
 1e10acc:    5d 74             	r13 = 69
 1e10ace:    65 73             	r5 = 54
 1e10ad0:    74 62             	r4 = b[r1 + 7] (u)
 1e10ad2:    6f 78             	r15 = 134
 1e10ad4:    20 6d             	r0 = b[r6 + 18] (u)
 1e10ad6:    73 67             	r3 = b[r3 + 23] (u)
 1e10ad8:    20 68             	r0 = b[r4 + 2] (u)
 1e10ada:    61 6e             	r1 = b[r7 + 6] (u)
 1e10adc:    64 6c             	r4 = b[r6 + 6] (u)
 1e10ade:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x97A : 1e10baa >
 1e10ae0:    72 65             	r2 = b[r2 + 23] (u)
 1e10ae2:    67 3a             	if (r5 != 0) goto 206 <update_target_end+0x982 : 1e10bb2 >
 1e10ae4:    25 78             	r5 = 130
 1e10ae6:    0a 0d             	r10 <<= r4
 1e10ae8:    0a 00             	ssync
 1e10aea:    6f 74             	r15 = 70
 1e10aec:    61 00             	cli r1
 1e10aee:    5b 49             	[r4 + 84] = r3
 1e10af0:    6e 66             	b[r3 + 6] = r6
 1e10af2:    6f 5d             	h[r6 + 44] = r7
 1e10af4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x93A : 1e10b6a >
 1e10af6:    5b 41             	[r0 + 84] = r3
 1e10af8:    50 50             	r0 = h[r0 + 10] (u)
 1e10afa:    2d 55             	h[r2 + 36] = r5
 1e10afc:    50 44             	r0 = [r2 + 20]
 1e10afe:    41 54             	r1 = h[r2 + 8] (u)
 1e10b00:    45 5d             	r5 = h[r6 + 40] (u)
 1e10b02:    74 79             	r4 = 151
 1e10b04:    70 65             	r0 = b[r2 + 23] (u)
 1e10b06:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x74C : 1e1097c >
 1e10b08:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x9CA : 1e10bfa >
 1e10b0a:    73 74             	r3 = 71
 1e10b0c:    61 74             	r1 = 70
 1e10b0e:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x9AA : 1e10bda >
 1e10b10:    25 78             	r5 = 130
 1e10b12:    20 63             	r0 = b[r1 + 18] (u)
 1e10b14:    6f 64             	b[r2 + 6] = r7
 1e10b16:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x9B2 : 1e10be2 >
 1e10b18:    25 78             	r5 = 130
 1e10b1a:    0a 0d             	r10 <<= r4
 1e10b1c:    0a 00             	ssync
 1e10b1e:    5b 49             	[r4 + 84] = r3
 1e10b20:    6e 66             	b[r3 + 6] = r6
 1e10b22:    6f 5d             	h[r6 + 44] = r7
 1e10b24:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x96A : 1e10b9a >
 1e10b26:    5b 41             	[r0 + 84] = r3
 1e10b28:    50 50             	r0 = h[r0 + 10] (u)
 1e10b2a:    2d 55             	h[r2 + 36] = r5
 1e10b2c:    50 44             	r0 = [r2 + 20]
 1e10b2e:    41 54             	r1 = h[r2 + 8] (u)
 1e10b30:    45 5d             	r5 = h[r6 + 40] (u)
 1e10b32:    73 75             	r3 = 87
 1e10b34:    63 63             	r3 = b[r1 + 22] (u)
 1e10b36:    20 72             	r0 = 34
 1e10b38:    65 70             	r5 = 6
 1e10b3a:    6f 72             	r15 = 38
 1e10b3c:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x9F6 : 1e10c26 >
 1e10b3e:    73 74             	r3 = 71
 1e10b40:    6f 72             	r15 = 38
 1e10b42:    65 64             	r5 = b[r2 + 6] (u)
 1e10b44:    0a 0d             	r10 <<= r4
 1e10b46:    0a 00             	ssync
 1e10b48:    5b 49             	[r4 + 84] = r3
 1e10b4a:    6e 66             	b[r3 + 6] = r6
 1e10b4c:    6f 5d             	h[r6 + 44] = r7
 1e10b4e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x994 : 1e10bc4 >
 1e10b50:    5b 41             	[r0 + 84] = r3
 1e10b52:    50 50             	r0 = h[r0 + 10] (u)
 1e10b54:    2d 55             	h[r2 + 36] = r5
 1e10b56:    50 44             	r0 = [r2 + 20]
 1e10b58:    41 54             	r1 = h[r2 + 8] (u)
 1e10b5a:    45 5d             	r5 = h[r6 + 40] (u)
 1e10b5c:    3c 2d             	if (r6 == 0) goto -392 <update_target_end+0x7A6 : 1e109d6 >
 1e10b5e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x78A : 1e109ba >
 1e10b60:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x78C : 1e109bc >
 1e10b62:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x78E : 1e109be >
 1e10b64:    2d 75             	r13 = 82
 1e10b66:    70 64             	r0 = b[r2 + 7] (u)
 1e10b68:    61 74             	r1 = 70
 1e10b6a:    65 5f             	r5 = h[r7 + 44] (u)
 1e10b6c:    72 65             	r2 = b[r2 + 23] (u)
 1e10b6e:    73 75             	r3 = 87
 1e10b70:    6c 74             	r12 = 70
 1e10b72:    5f 64             	b[r2 + 5] = r7
 1e10b74:    65 61             	r5 = b[r0 + 22] (u)
 1e10b76:    6c 3d             	if (r6 != 0) goto -296 <update_target_end+0x820 : 1e10a50 >
 1e10b78:    30 78             	r0 = 131
 1e10b7a:    25 78             	r5 = 130
 1e10b7c:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x78E : 1e109be >
 1e10b7e:    78 2d             	if (r6 == 0) goto -272 <update_target_end+0x840 : 1e10a70 >
 1e10b80:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x7AC : 1e109dc >
 1e10b82:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x7AE : 1e109de >
 1e10b84:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x7B0 : 1e109e0 >
 1e10b86:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x7B2 : 1e109e2 >
 1e10b88:    3e 0a             	sp += 124
 1e10b8a:    0d 0a             	sp += 24
 1e10b8c:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x95E : 1e10b8e >
 1e10b8e:    45 72             	r5 = 36
 1e10b90:    72 6f             	r2 = b[r7 + 23] (u)
 1e10b92:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0xA48 : 1e10c78 >
 1e10b94:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x9DA : 1e10c0a >
 1e10b96:    5b 41             	[r0 + 84] = r3
 1e10b98:    50 50             	r0 = h[r0 + 10] (u)
 1e10b9a:    2d 55             	h[r2 + 36] = r5
 1e10b9c:    50 44             	r0 = [r2 + 20]
 1e10b9e:    41 54             	r1 = h[r2 + 8] (u)
 1e10ba0:    45 5d             	r5 = h[r6 + 40] (u)
 1e10ba2:    6f 74             	r15 = 70
 1e10ba4:    61 20             	if (r0 == 0) goto 194 <update_target_end+0xA38 : 1e10c68 >
 1e10ba6:    61 64             	r1 = b[r2 + 6] (u)
 1e10ba8:    64 72             	r4 = 38
 1e10baa:    20 65             	r0 = b[r2 + 18] (u)
 1e10bac:    72 72             	r2 = 39
 1e10bae:    0a 0d             	r10 <<= r4
 1e10bb0:    0a 00             	ssync
 1e10bb2:    1b 5b             	h[r5 + 34] = r3
 1e10bb4:    33 31             	if (r0 != 0) goto -410 <update_target_end+0x7EC : 1e10a1c >
 1e10bb6:    6d 1b             	goto 1754 <update_target_end+0x1062 : 1e11292 >
 1e10bb8:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0x840 : 1e10a70 >
 1e10bba:    6d 74             	r13 = 70
 1e10bbc:    68 65             	b[r2 + 22] = r0
 1e10bbe:    20 6c             	r0 = b[r6 + 2] (u)
 1e10bc0:    65 64             	r5 = b[r2 + 6] (u)
 1e10bc2:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x7D4 : 1e10a04 >
 1e10bc4:    64 20             	if (r0 == 0) goto 200 <update_target_end+0xA5E : 1e10c8e >
 1e10bc6:    20 6e             	r0 = b[r7 + 2] (u)
 1e10bc8:    75 6d             	r5 = b[r6 + 23] (u)
 1e10bca:    62 65             	r2 = b[r2 + 22] (u)
 1e10bcc:    72 20             	if (r0 == 0) goto 228 <update_target_end+0xA82 : 1e10cb2 >
 1e10bce:    25 64             	r5 = b[r2 + 2] (u)
 1e10bd0:    1b 5b             	h[r5 + 34] = r3
 1e10bd2:    30 6d             	r0 = b[r6 + 19] (u)
 1e10bd4:    00 1b             	goto 1536 <update_target_end+0xFA6 : 1e111d6 >
 1e10bd6:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0x85E : 1e10a8e >
 1e10bd8:    33 6d             	r3 = b[r6 + 19] (u)
 1e10bda:    1b 5b             	h[r5 + 34] = r3
 1e10bdc:    31 6d             	r1 = b[r6 + 19] (u)
 1e10bde:    44 49             	r4 = [r4 + 80]
 1e10be0:    53 50             	r3 = h[r0 + 10] (u)
 1e10be2:    4c 41             	[r0 + 80] = r4
 1e10be4:    59 5f             	h[r7 + 42] = r1
 1e10be6:    4e 55             	h[r2 + 40] = r6
 1e10be8:    4d 5f             	h[r7 + 40] = r5
 1e10bea:    44 41             	r4 = [r0 + 80]
 1e10bec:    54 41             	r4 = [r0 + 84]
 1e10bee:    5f 55             	h[r2 + 42] = r7
 1e10bf0:    50 44             	r0 = [r2 + 20]
 1e10bf2:    41 54             	r1 = h[r2 + 8] (u)
 1e10bf4:    45 20             	if (r0 == 0) goto 138 <update_target_end+0xA50 : 1e10c80 >
 1e10bf6:    2d 73             	r13 = 50
 1e10bf8:    74 69             	r4 = b[r4 + 23] (u)
 1e10bfa:    6d 65             	b[r2 + 22] = r5
 1e10bfc:    5f 6e             	b[r7 + 5] = r7
 1e10bfe:    75 6d             	r5 = b[r6 + 23] (u)
 1e10c00:    5f 6d             	b[r6 + 21] = r7
 1e10c02:    6f 64             	b[r2 + 6] = r7
 1e10c04:    65 3d             	if (r6 != 0) goto -310 <update_target_end+0x8A0 : 1e10ad0 >
 1e10c06:    25 64             	r5 = b[r2 + 2] (u)
 1e10c08:    0a 1b             	goto 1556 <update_target_end+0xFEE : 1e1121e >
 1e10c0a:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0xA92 : 1e10cc2 >
 1e10c0c:    6d 00             	cli r13
 1e10c0e:    1b 5b             	h[r5 + 34] = r3
 1e10c10:    33 33             	if (r1 != 0) goto -410 <update_target_end+0x848 : 1e10a78 >
 1e10c12:    6d 1b             	goto 1754 <update_target_end+0x10BE : 1e112ee >
 1e10c14:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0x89C : 1e10acc >
 1e10c16:    6d 44             	[r2 + 24] = r5
 1e10c18:    49 53             	h[r1 + 40] = r1
 1e10c1a:    50 4c             	r0 = [r6 + 20]
 1e10c1c:    41 59             	r1 = h[r4 + 40] (u)
 1e10c1e:    5f 44             	[r2 + 20] = r7
 1e10c20:    41 54             	r1 = h[r2 + 8] (u)
 1e10c22:    41 5f             	r1 = h[r7 + 40] (u)
 1e10c24:    42 55             	r2 = h[r2 + 40] (u)
 1e10c26:    46 46             	r6 = [r3 + 16]
 1e10c28:    45 52             	r5 = h[r1 + 8] (u)
 1e10c2a:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0xAB2 : 1e10ce2 >
 1e10c2c:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0xAB8 : 1e10ce8 >
 1e10c2e:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x87A : 1e10aaa >
 1e10c30:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0xACA : 1e10cfa >
 1e10c32:    20 20             	if (r0 == 0) goto 64 <update_target_end+0xA44 : 1e10c74 >
 1e10c34:    44 49             	r4 = [r4 + 80]
 1e10c36:    53 50             	r3 = h[r0 + 10] (u)
 1e10c38:    4c 41             	[r0 + 80] = r4
 1e10c3a:    59 5f             	h[r7 + 42] = r1
 1e10c3c:    44 41             	r4 = [r0 + 80]
 1e10c3e:    54 41             	r4 = [r0 + 84]
 1e10c40:    5f 42             	[r1 + 20] = r7
 1e10c42:    55 46             	r5 = [r3 + 20]
 1e10c44:    46 45             	r6 = [r2 + 80]
 1e10c46:    52 5b             	r2 = h[r5 + 42] (u)
 1e10c48:    31 5d             	r1 = h[r6 + 38] (u)
 1e10c4a:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x85C : 1e10a8c >
 1e10c4c:    25 64             	r5 = b[r2 + 2] (u)
 1e10c4e:    1b 5b             	h[r5 + 34] = r3
 1e10c50:    30 6d             	r0 = b[r6 + 19] (u)
 1e10c52:    00 1b             	goto 1536 <update_target_end+0x1024 : 1e11254 >
 1e10c54:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0x8DC : 1e10b0c >
 1e10c56:    33 6d             	r3 = b[r6 + 19] (u)
 1e10c58:    1b 5b             	h[r5 + 34] = r3
 1e10c5a:    31 6d             	r1 = b[r6 + 19] (u)
 1e10c5c:    44 49             	r4 = [r4 + 80]
 1e10c5e:    53 50             	r3 = h[r0 + 10] (u)
 1e10c60:    4c 41             	[r0 + 80] = r4
 1e10c62:    59 5f             	h[r7 + 42] = r1
 1e10c64:    44 41             	r4 = [r0 + 80]
 1e10c66:    54 41             	r4 = [r0 + 84]
 1e10c68:    5f 42             	[r1 + 20] = r7
 1e10c6a:    55 46             	r5 = [r3 + 20]
 1e10c6c:    46 45             	r6 = [r2 + 80]
 1e10c6e:    52 5b             	r2 = h[r5 + 42] (u)
 1e10c70:    32 5d             	r2 = h[r6 + 38] (u)
 1e10c72:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x884 : 1e10ab4 >
 1e10c74:    25 64             	r5 = b[r2 + 2] (u)
 1e10c76:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xAA0 : 1e10cd0 >
 1e10c78:    20 44             	r0 = [r2 + 8]
 1e10c7a:    49 53             	h[r1 + 40] = r1
 1e10c7c:    50 4c             	r0 = [r6 + 20]
 1e10c7e:    41 59             	r1 = h[r4 + 40] (u)
 1e10c80:    5f 44             	[r2 + 20] = r7
 1e10c82:    41 54             	r1 = h[r2 + 8] (u)
 1e10c84:    41 5f             	r1 = h[r7 + 40] (u)
 1e10c86:    42 55             	r2 = h[r2 + 40] (u)
 1e10c88:    46 46             	r6 = [r3 + 16]
 1e10c8a:    45 52             	r5 = h[r1 + 8] (u)
 1e10c8c:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0x914 : 1e10b44 >
 1e10c8e:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0xB1A : 1e10d4a >
 1e10c90:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x8DC : 1e10b0c >
 1e10c92:    64 1b             	goto 1736 <update_target_end+0x112C : 1e1135c >
 1e10c94:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0xB1C : 1e10d4c >
 1e10c96:    6d 00             	cli r13
 1e10c98:    1b 5b             	h[r5 + 34] = r3
 1e10c9a:    33 32             	if (r1 != 0) goto 102 <update_target_end+0xAD2 : 1e10d02 >
 1e10c9c:    6d 1b             	goto 1754 <update_target_end+0x1148 : 1e11378 >
 1e10c9e:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0x926 : 1e10b56 >
 1e10ca0:    6d 44             	[r2 + 24] = r5
 1e10ca2:    49 53             	h[r1 + 40] = r1
 1e10ca4:    50 4c             	r0 = [r6 + 20]
 1e10ca6:    41 59             	r1 = h[r4 + 40] (u)
 1e10ca8:    5f 53             	h[r1 + 42] = r7
 1e10caa:    54 41             	r4 = [r0 + 84]
 1e10cac:    54 45             	r4 = [r2 + 84]
 1e10cae:    5f 44             	[r2 + 20] = r7
 1e10cb0:    41 54             	r1 = h[r2 + 8] (u)
 1e10cb2:    41 5f             	r1 = h[r7 + 40] (u)
 1e10cb4:    55 50             	r5 = h[r0 + 10] (u)
 1e10cb6:    44 41             	r4 = [r0 + 80]
 1e10cb8:    54 45             	r4 = [r2 + 84]
 1e10cba:    20 76             	r0 = 98
 1e10cbc:    61 72             	r1 = 38
 1e10cbe:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x90A : 1e10b3a >
 1e10cc0:    64 0a             	sp += 200
 1e10cc2:    1b 5b             	h[r5 + 34] = r3
 1e10cc4:    30 6d             	r0 = b[r6 + 19] (u)
 1e10cc6:    00 5b             	r0 = h[r5 + 32] (u)
 1e10cc8:    49 6e             	b[r7 + 4] = r1
 1e10cca:    66 6f             	r6 = b[r7 + 22] (u)
 1e10ccc:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xB58 : 1e10d88 >
 1e10cce:    20 5b             	r0 = h[r5 + 36] (u)
 1e10cd0:    53 50             	r3 = h[r0 + 10] (u)
 1e10cd2:    50 5f             	r0 = h[r7 + 42] (u)
 1e10cd4:    41 4e             	r1 = [r7 + 16]
 1e10cd6:    44 5f             	r4 = h[r7 + 40] (u)
 1e10cd8:    4c 45             	[r2 + 80] = r4
 1e10cda:    5d 44             	[r2 + 20] = r5
 1e10cdc:    49 53             	h[r1 + 40] = r1
 1e10cde:    50 4c             	r0 = [r6 + 20]
 1e10ce0:    41 59             	r1 = h[r4 + 40] (u)
 1e10ce2:    5f 53             	h[r1 + 42] = r7
 1e10ce4:    54 41             	r4 = [r0 + 84]
 1e10ce6:    54 45             	r4 = [r2 + 84]
 1e10ce8:    5f 44             	[r2 + 20] = r7
 1e10cea:    41 54             	r1 = h[r2 + 8] (u)
 1e10cec:    41 5f             	r1 = h[r7 + 40] (u)
 1e10cee:    55 50             	r5 = h[r0 + 10] (u)
 1e10cf0:    44 41             	r4 = [r0 + 80]
 1e10cf2:    54 45             	r4 = [r2 + 84]
 1e10cf4:    20 2d             	if (r6 == 0) goto -448 <update_target_end+0x906 : 1e10b36 >
 1e10cf6:    53 54             	r3 = h[r2 + 10] (u)
 1e10cf8:    41 54             	r1 = h[r2 + 8] (u)
 1e10cfa:    45 5f             	r5 = h[r7 + 40] (u)
 1e10cfc:    54 49             	r4 = [r4 + 84]
 1e10cfe:    4d 45             	[r2 + 80] = r5
 1e10d00:    52 5f             	r2 = h[r7 + 42] (u)
 1e10d02:    43 4f             	r3 = [r7 + 80]
 1e10d04:    55 54             	r5 = h[r2 + 10] (u)
 1e10d06:    44 4f             	r4 = [r7 + 80]
 1e10d08:    57 4e             	r7 = [r7 + 20]
 1e10d0a:    20 44             	r0 = [r2 + 8]
 1e10d0c:    49 53             	h[r1 + 40] = r1
 1e10d0e:    50 4c             	r0 = [r6 + 20]
 1e10d10:    41 59             	r1 = h[r4 + 40] (u)
 1e10d12:    5f 44             	[r2 + 20] = r7
 1e10d14:    41 54             	r1 = h[r2 + 8] (u)
 1e10d16:    41 5f             	r1 = h[r7 + 40] (u)
 1e10d18:    42 55             	r2 = h[r2 + 40] (u)
 1e10d1a:    46 46             	r6 = [r3 + 16]
 1e10d1c:    45 52             	r5 = h[r1 + 8] (u)
 1e10d1e:    5b 34             	if (r2 != 0) goto 182 <update_target_end+0xBA6 : 1e10dd6 >
 1e10d20:    5d 3d             	if (r6 != 0) goto -326 <update_target_end+0x9AC : 1e10bdc >
 1e10d22:    25 64             	r5 = b[r2 + 2] (u)
 1e10d24:    0a 0d             	r10 <<= r4
 1e10d26:    0a 00             	ssync
 1e10d28:    5b 49             	[r4 + 84] = r3
 1e10d2a:    6e 66             	b[r3 + 6] = r6
 1e10d2c:    6f 5d             	h[r6 + 44] = r7
 1e10d2e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xB74 : 1e10da4 >
 1e10d30:    5b 53             	h[r1 + 42] = r3
 1e10d32:    50 50             	r0 = h[r0 + 10] (u)
 1e10d34:    5f 41             	[r0 + 84] = r7
 1e10d36:    4e 44             	[r2 + 16] = r6
 1e10d38:    5f 4c             	[r6 + 20] = r7
 1e10d3a:    45 5d             	r5 = h[r6 + 40] (u)
 1e10d3c:    44 49             	r4 = [r4 + 80]
 1e10d3e:    53 50             	r3 = h[r0 + 10] (u)
 1e10d40:    4c 41             	[r0 + 80] = r4
 1e10d42:    59 5f             	h[r7 + 42] = r1
 1e10d44:    53 54             	r3 = h[r2 + 10] (u)
 1e10d46:    41 54             	r1 = h[r2 + 8] (u)
 1e10d48:    45 5f             	r5 = h[r7 + 40] (u)
 1e10d4a:    44 41             	r4 = [r0 + 80]
 1e10d4c:    54 41             	r4 = [r0 + 84]
 1e10d4e:    5f 55             	h[r2 + 42] = r7
 1e10d50:    50 44             	r0 = [r2 + 20]
 1e10d52:    41 54             	r1 = h[r2 + 8] (u)
 1e10d54:    45 20             	if (r0 == 0) goto 138 <update_target_end+0xBB0 : 1e10de0 >
 1e10d56:    2d 53             	h[r1 + 36] = r5
 1e10d58:    54 41             	r4 = [r0 + 84]
 1e10d5a:    54 45             	r4 = [r2 + 84]
 1e10d5c:    5f 4e             	[r7 + 20] = r7
 1e10d5e:    55 4d             	r5 = [r6 + 84]
 1e10d60:    5f 43             	[r1 + 84] = r7
 1e10d62:    4f 55             	h[r2 + 40] = r7
 1e10d64:    54 44             	r4 = [r2 + 20]
 1e10d66:    4f 57             	h[r3 + 40] = r7
 1e10d68:    4e 20             	if (r0 == 0) goto 156 <update_target_end+0xBD6 : 1e10e06 >
 1e10d6a:    44 49             	r4 = [r4 + 80]
 1e10d6c:    53 50             	r3 = h[r0 + 10] (u)
 1e10d6e:    4c 41             	[r0 + 80] = r4
 1e10d70:    59 5f             	h[r7 + 42] = r1
 1e10d72:    44 41             	r4 = [r0 + 80]
 1e10d74:    54 41             	r4 = [r0 + 84]
 1e10d76:    5f 42             	[r1 + 20] = r7
 1e10d78:    55 46             	r5 = [r3 + 20]
 1e10d7a:    46 45             	r6 = [r2 + 80]
 1e10d7c:    52 5b             	r2 = h[r5 + 42] (u)
 1e10d7e:    34 5d             	r4 = h[r6 + 38] (u)
 1e10d80:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x9CC : 1e10bfc >
 1e10d82:    64 0a             	sp += 200
 1e10d84:    0d 0a             	sp += 24
 1e10d86:    00 5b             	r0 = h[r5 + 32] (u)
 1e10d88:    49 6e             	b[r7 + 4] = r1
 1e10d8a:    66 6f             	r6 = b[r7 + 22] (u)
 1e10d8c:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xC18 : 1e10e48 >
 1e10d8e:    20 5b             	r0 = h[r5 + 36] (u)
 1e10d90:    53 50             	r3 = h[r0 + 10] (u)
 1e10d92:    50 5f             	r0 = h[r7 + 42] (u)
 1e10d94:    41 4e             	r1 = [r7 + 16]
 1e10d96:    44 5f             	r4 = h[r7 + 40] (u)
 1e10d98:    4c 45             	[r2 + 80] = r4
 1e10d9a:    5d 44             	[r2 + 20] = r5
 1e10d9c:    49 53             	h[r1 + 40] = r1
 1e10d9e:    50 4c             	r0 = [r6 + 20]
 1e10da0:    41 59             	r1 = h[r4 + 40] (u)
 1e10da2:    5f 53             	h[r1 + 42] = r7
 1e10da4:    54 41             	r4 = [r0 + 84]
 1e10da6:    54 45             	r4 = [r2 + 84]
 1e10da8:    5f 44             	[r2 + 20] = r7
 1e10daa:    41 54             	r1 = h[r2 + 8] (u)
 1e10dac:    41 5f             	r1 = h[r7 + 40] (u)
 1e10dae:    55 50             	r5 = h[r0 + 10] (u)
 1e10db0:    44 41             	r4 = [r0 + 80]
 1e10db2:    54 45             	r4 = [r2 + 84]
 1e10db4:    20 5b             	r0 = h[r5 + 36] (u)
 1e10db6:    33 5d             	r3 = h[r6 + 38] (u)
 1e10db8:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0xA04 : 1e10c34 >
 1e10dba:    64 20             	if (r0 == 0) goto 200 <update_target_end+0xC54 : 1e10e84 >
 1e10dbc:    2c 5b             	h[r5 + 36] = r4
 1e10dbe:    34 5d             	r4 = h[r6 + 38] (u)
 1e10dc0:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xA0C : 1e10c3c >
 1e10dc2:    25 64             	r5 = b[r2 + 2] (u)
 1e10dc4:    20 0a             	sp += 64
 1e10dc6:    0d 0a             	sp += 24
 1e10dc8:    00 5b             	r0 = h[r5 + 32] (u)
 1e10dca:    49 6e             	b[r7 + 4] = r1
 1e10dcc:    66 6f             	r6 = b[r7 + 22] (u)
 1e10dce:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xC5A : 1e10e8a >
 1e10dd0:    20 5b             	r0 = h[r5 + 36] (u)
 1e10dd2:    41 50             	r1 = h[r0 + 8] (u)
 1e10dd4:    50 5f             	r0 = h[r7 + 42] (u)
 1e10dd6:    43 48             	r3 = [r4 + 16]
 1e10dd8:    41 52             	r1 = h[r1 + 8] (u)
 1e10dda:    47 45             	r7 = [r2 + 80]
 1e10ddc:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0xA68 : 1e10c98 >
 1e10dde:    73 0a             	sp += 228
 1e10de0:    0d 0a             	sp += 24
 1e10de2:    00 75             	r0 = 80
 1e10de4:    69 5f             	h[r7 + 44] = r1
 1e10de6:    63 68             	r3 = b[r4 + 6] (u)
 1e10de8:    61 72             	r1 = 38
 1e10dea:    67 65             	r7 = b[r2 + 22] (u)
 1e10dec:    72 5f             	r2 = h[r7 + 46] (u)
 1e10dee:    73 74             	r3 = 71
 1e10df0:    61 72             	r1 = 38
 1e10df2:    74 00             	sti r4
 1e10df4:    63 68             	r3 = b[r4 + 6] (u)
 1e10df6:    61 72             	r1 = 38
 1e10df8:    67 65             	r7 = b[r2 + 22] (u)
 1e10dfa:    5f 73             	r15 = 53
 1e10dfc:    74 61             	r4 = b[r0 + 23] (u)
 1e10dfe:    72 74             	r2 = 71
 1e10e00:    5f 64             	b[r2 + 5] = r7
 1e10e02:    65 61             	r5 = b[r0 + 22] (u)
 1e10e04:    6c 00             	cli r12
 1e10e06:    6c 64             	b[r2 + 6] = r4
 1e10e08:    6f 35             	if (r2 != 0) goto -290 <update_target_end+0xAB8 : 1e10ce8 >
 1e10e0a:    76 5f             	r6 = h[r7 + 46] (u)
 1e10e0c:    6b 65             	b[r2 + 22] = r3
 1e10e0e:    65 70             	r5 = 6
 1e10e10:    5f 64             	b[r2 + 5] = r7
 1e10e12:    65 61             	r5 = b[r0 + 22] (u)
 1e10e14:    6c 00             	cli r12
 1e10e16:    63 68             	r3 = b[r4 + 6] (u)
 1e10e18:    61 72             	r1 = 38
 1e10e1a:    67 65             	r7 = b[r2 + 22] (u)
 1e10e1c:    5f 66             	b[r3 + 5] = r7
 1e10e1e:    75 6c             	r5 = b[r6 + 7] (u)
 1e10e20:    6c 5f             	h[r7 + 44] = r4
 1e10e22:    64 65             	r4 = b[r2 + 22] (u)
 1e10e24:    61 6c             	r1 = b[r6 + 6] (u)
 1e10e26:    00 63             	r0 = b[r1 + 16] (u)
 1e10e28:    68 61             	b[r0 + 22] = r0
 1e10e2a:    72 67             	r2 = b[r3 + 23] (u)
 1e10e2c:    65 5f             	r5 = h[r7 + 44] (u)
 1e10e2e:    63 6c             	r3 = b[r6 + 6] (u)
 1e10e30:    6f 73             	r15 = 54
 1e10e32:    65 5f             	r5 = h[r7 + 44] (u)
 1e10e34:    64 65             	r4 = b[r2 + 22] (u)
 1e10e36:    61 6c             	r1 = b[r6 + 6] (u)
 1e10e38:    00 63             	r0 = b[r1 + 16] (u)
 1e10e3a:    68 61             	b[r0 + 22] = r0
 1e10e3c:    72 67             	r2 = b[r3 + 23] (u)
 1e10e3e:    65 5f             	r5 = h[r7 + 44] (u)
 1e10e40:    6c 64             	b[r2 + 6] = r4
 1e10e42:    6f 35             	if (r2 != 0) goto -290 <update_target_end+0xAF2 : 1e10d22 >
 1e10e44:    76 5f             	r6 = h[r7 + 46] (u)
 1e10e46:    69 6e             	b[r7 + 6] = r1
 1e10e48:    5f 64             	b[r2 + 5] = r7
 1e10e4a:    65 61             	r5 = b[r0 + 22] (u)
 1e10e4c:    6c 00             	cli r12
 1e10e4e:    63 68             	r3 = b[r4 + 6] (u)
 1e10e50:    61 72             	r1 = 38
 1e10e52:    67 65             	r7 = b[r2 + 22] (u)
 1e10e54:    5f 6c             	b[r6 + 5] = r7
 1e10e56:    64 6f             	r4 = b[r7 + 22] (u)
 1e10e58:    35 76             	r5 = 99
 1e10e5a:    5f 6f             	b[r7 + 21] = r7
 1e10e5c:    66 66             	r6 = b[r3 + 6] (u)
 1e10e5e:    5f 64             	b[r2 + 5] = r7
 1e10e60:    65 61             	r5 = b[r0 + 22] (u)
 1e10e62:    6c 00             	cli r12
 1e10e64:    1b 5b             	h[r5 + 34] = r3
 1e10e66:    33 31             	if (r0 != 0) goto -410 <update_target_end+0xA9E : 1e10cce >
 1e10e68:    6d 1b             	goto 1754 <update_target_end+0x1314 : 1e11544 >
 1e10e6a:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0xAF2 : 1e10d22 >
 1e10e6c:    6d 69             	b[r4 + 22] = r5
 1e10e6e:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0xD1C : 1e10f4c >
 1e10e70:    25 73             	r5 = 50
 1e10e72:    20 61             	r0 = b[r0 + 18] (u)
 1e10e74:    70 70             	r0 = 7
 1e10e76:    1b 5b             	h[r5 + 34] = r3
 1e10e78:    30 6d             	r0 = b[r6 + 19] (u)
 1e10e7a:    00 61             	r0 = b[r0 + 16] (u)
 1e10e7c:    70 70             	r0 = 7
 1e10e7e:    5f 69             	b[r4 + 21] = r7
 1e10e80:    64 6c             	r4 = b[r6 + 6] (u)
 1e10e82:    65 5f             	r5 = h[r7 + 44] (u)
 1e10e84:    64 65             	r4 = b[r2 + 22] (u)
 1e10e86:    61 6c             	r1 = b[r6 + 6] (u)
 1e10e88:    00 5b             	r0 = h[r5 + 32] (u)
 1e10e8a:    49 6e             	b[r7 + 4] = r1
 1e10e8c:    66 6f             	r6 = b[r7 + 22] (u)
 1e10e8e:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xD1A : 1e10f4a >
 1e10e90:    20 5b             	r0 = h[r5 + 36] (u)
 1e10e92:    41 50             	r1 = h[r0 + 8] (u)
 1e10e94:    50 5f             	r0 = h[r7 + 42] (u)
 1e10e96:    49 44             	[r2 + 16] = r1
 1e10e98:    4c 45             	[r2 + 80] = r4
 1e10e9a:    5d 41             	[r0 + 84] = r5
 1e10e9c:    43 54             	r3 = h[r2 + 8] (u)
 1e10e9e:    49 4f             	[r7 + 80] = r1
 1e10ea0:    4e 5f             	h[r7 + 40] = r6
 1e10ea2:    49 44             	[r2 + 16] = r1
 1e10ea4:    4c 45             	[r2 + 80] = r4
 1e10ea6:    5f 4d             	[r6 + 84] = r7
 1e10ea8:    41 49             	r1 = [r4 + 80]
 1e10eaa:    4e 0a             	sp += 156
 1e10eac:    0d 0a             	sp += 24
 1e10eae:    00 5b             	r0 = h[r5 + 32] (u)
 1e10eb0:    49 6e             	b[r7 + 4] = r1
 1e10eb2:    66 6f             	r6 = b[r7 + 22] (u)
 1e10eb4:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xD40 : 1e10f70 >
 1e10eb6:    20 5b             	r0 = h[r5 + 36] (u)
 1e10eb8:    41 50             	r1 = h[r0 + 8] (u)
 1e10eba:    50 5f             	r0 = h[r7 + 42] (u)
 1e10ebc:    49 44             	[r2 + 16] = r1
 1e10ebe:    4c 45             	[r2 + 80] = r4
 1e10ec0:    5d 3d             	if (r6 != 0) goto -326 <update_target_end+0xB4C : 1e10d7c >
 1e10ec2:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB0E : 1e10d3e >
 1e10ec4:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB10 : 1e10d40 >
 1e10ec6:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB12 : 1e10d42 >
 1e10ec8:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB14 : 1e10d44 >
 1e10eca:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB16 : 1e10d46 >
 1e10ecc:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB18 : 1e10d48 >
 1e10ece:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB1A : 1e10d4a >
 1e10ed0:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB1C : 1e10d4c >
 1e10ed2:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB1E : 1e10d4e >
 1e10ed4:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB20 : 1e10d50 >
 1e10ed6:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB22 : 1e10d52 >
 1e10ed8:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB24 : 1e10d54 >
 1e10eda:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB26 : 1e10d56 >
 1e10edc:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB28 : 1e10d58 >
 1e10ede:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB2A : 1e10d5a >
 1e10ee0:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB2C : 1e10d5c >
 1e10ee2:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB2E : 1e10d5e >
 1e10ee4:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB30 : 1e10d60 >
 1e10ee6:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0xB32 : 1e10d62 >
 1e10ee8:    0d 0a             	sp += 24
 1e10eea:    00 5b             	r0 = h[r5 + 32] (u)
 1e10eec:    49 6e             	b[r7 + 4] = r1
 1e10eee:    66 6f             	r6 = b[r7 + 22] (u)
 1e10ef0:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xD7C : 1e10fac >
 1e10ef2:    20 5b             	r0 = h[r5 + 36] (u)
 1e10ef4:    41 50             	r1 = h[r0 + 8] (u)
 1e10ef6:    50 5f             	r0 = h[r7 + 42] (u)
 1e10ef8:    49 44             	[r2 + 16] = r1
 1e10efa:    4c 45             	[r2 + 80] = r4
 1e10efc:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0xB88 : 1e10db8 >
 1e10efe:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB2A : 1e10d5a >
 1e10f00:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB2C : 1e10d5c >
 1e10f02:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB2E : 1e10d5e >
 1e10f04:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB30 : 1e10d60 >
 1e10f06:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB32 : 1e10d62 >
 1e10f08:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB34 : 1e10d64 >
 1e10f0a:    49 44             	[r2 + 16] = r1
 1e10f0c:    4c 45             	[r2 + 80] = r4
 1e10f0e:    20 44             	r0 = [r2 + 8]
 1e10f10:    45 4d             	r5 = [r6 + 80]
 1e10f12:    4f 2d             	if (r6 == 0) goto -354 <update_target_end+0xB82 : 1e10db2 >
 1e10f14:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB40 : 1e10d70 >
 1e10f16:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB42 : 1e10d72 >
 1e10f18:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB44 : 1e10d74 >
 1e10f1a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB46 : 1e10d76 >
 1e10f1c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB48 : 1e10d78 >
 1e10f1e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB4A : 1e10d7a >
 1e10f20:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB4C : 1e10d7c >
 1e10f22:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xB4E : 1e10d7e >
 1e10f24:    0d 0a             	sp += 24
 1e10f26:    00 1b             	goto 1536 <update_target_end+0x12F8 : 1e11528 >
 1e10f28:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0xBB0 : 1e10de0 >
 1e10f2a:    31 6d             	r1 = b[r6 + 19] (u)
 1e10f2c:    1b 5b             	h[r5 + 34] = r3
 1e10f2e:    31 6d             	r1 = b[r6 + 19] (u)
 1e10f30:    25 73             	r5 = 50
 1e10f32:    5b 25             	if (r2 == 0) goto -330 <update_target_end+0xBBA : 1e10dea >
 1e10f34:    64 20             	if (r0 == 0) goto 200 <update_target_end+0xDCE : 1e10ffe >
 1e10f36:    25 64             	r5 = b[r2 + 2] (u)
 1e10f38:    20 25             	if (r2 == 0) goto -448 <update_target_end+0xB4A : 1e10d7a >
 1e10f3a:    64 5d             	r4 = h[r6 + 44] (u)
 1e10f3c:    1b 5b             	h[r5 + 34] = r3
 1e10f3e:    30 6d             	r0 = b[r6 + 19] (u)
 1e10f40:    00 61             	r0 = b[r0 + 16] (u)
 1e10f42:    70 70             	r0 = 7
 1e10f44:    5f 6d             	b[r6 + 21] = r7
 1e10f46:    61 69             	r1 = b[r4 + 22] (u)
 1e10f48:    6e 00             	cli r14
 1e10f4a:    69 64             	b[r2 + 6] = r1
 1e10f4c:    6c 65             	b[r2 + 22] = r4
 1e10f4e:    00 5b             	r0 = h[r5 + 32] (u)
 1e10f50:    49 6e             	b[r7 + 4] = r1
 1e10f52:    66 6f             	r6 = b[r7 + 22] (u)
 1e10f54:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xDE0 : 1e11010 >
 1e10f56:    20 5b             	r0 = h[r5 + 36] (u)
 1e10f58:    41 50             	r1 = h[r0 + 8] (u)
 1e10f5a:    50 5d             	r0 = h[r6 + 42] (u)
 1e10f5c:    72 75             	r2 = 87
 1e10f5e:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0xE0C : 1e1103c >
 1e10f60:    61 70             	r1 = 6
 1e10f62:    70 3e             	if (r7 != 0) goto 224 <update_target_end+0xE14 : 1e11044 >
 1e10f64:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0xDB2 : 1e10fe2 >
 1e10f66:    25 73             	r5 = 50
 1e10f68:    0d 0a             	sp += 24
 1e10f6a:    00 5b             	r0 = h[r5 + 32] (u)
 1e10f6c:    49 6e             	b[r7 + 4] = r1
 1e10f6e:    66 6f             	r6 = b[r7 + 22] (u)
 1e10f70:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xDFC : 1e1102c >
 1e10f72:    20 5b             	r0 = h[r5 + 36] (u)
 1e10f74:    41 50             	r1 = h[r0 + 8] (u)
 1e10f76:    50 5d             	r0 = h[r6 + 42] (u)
 1e10f78:    61 70             	r1 = 6
 1e10f7a:    70 5f             	r0 = h[r7 + 46] (u)
 1e10f7c:    6e 61             	b[r0 + 22] = r6
 1e10f7e:    6d 65             	b[r2 + 22] = r5
 1e10f80:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xBC6 : 1e10df6 >
 1e10f82:    73 0a             	sp += 228
 1e10f84:    0d 0a             	sp += 24
 1e10f86:    00 62             	r0 = b[r1 + 0] (u)
 1e10f88:    74 65             	r4 = b[r2 + 23] (u)
 1e10f8a:    6e 63             	b[r1 + 22] = r6
 1e10f8c:    72 79             	r2 = 151
 1e10f8e:    00 64             	r0 = b[r2 + 0] (u)
 1e10f90:    77 5f             	r7 = h[r7 + 46] (u)
 1e10f92:    75 70             	r5 = 7
 1e10f94:    64 61             	r4 = b[r0 + 22] (u)
 1e10f96:    74 65             	r4 = b[r2 + 23] (u)
 1e10f98:    00 75             	r0 = 80
 1e10f9a:    73 62             	r3 = b[r1 + 7] (u)
 1e10f9c:    5f 6d             	b[r6 + 21] = r7
 1e10f9e:    73 64             	r3 = b[r2 + 7] (u)
 1e10fa0:    00 1b             	goto 1536 <update_target_end+0x1372 : 1e115a2 >
 1e10fa2:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0xC2A : 1e10e5a >
 1e10fa4:    31 6d             	r1 = b[r6 + 19] (u)
 1e10fa6:    1b 5b             	h[r5 + 34] = r3
 1e10fa8:    31 6d             	r1 = b[r6 + 19] (u)
 1e10faa:    20 50             	r0 = h[r0 + 4] (u)
 1e10fac:    4f 57             	h[r3 + 40] = r7
 1e10fae:    45 52             	r5 = h[r1 + 8] (u)
 1e10fb0:    5f 45             	[r2 + 84] = r7
 1e10fb2:    56 45             	r6 = [r2 + 84]
 1e10fb4:    4e 54             	h[r2 + 8] = r6
 1e10fb6:    5f 50             	h[r0 + 10] = r7
 1e10fb8:    4f 57             	h[r3 + 40] = r7
 1e10fba:    45 52             	r5 = h[r1 + 8] (u)
 1e10fbc:    5f 57             	h[r3 + 42] = r7
 1e10fbe:    41 52             	r1 = h[r1 + 8] (u)
 1e10fc0:    4e 49             	[r4 + 80] = r6
 1e10fc2:    4e 47             	[r3 + 80] = r6
 1e10fc4:    1b 5b             	h[r5 + 34] = r3
 1e10fc6:    30 6d             	r0 = b[r6 + 19] (u)
 1e10fc8:    00 1b             	goto 1536 <update_target_end+0x139A : 1e115ca >
 1e10fca:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0xC52 : 1e10e82 >
 1e10fcc:    31 6d             	r1 = b[r6 + 19] (u)
 1e10fce:    1b 5b             	h[r5 + 34] = r3
 1e10fd0:    31 6d             	r1 = b[r6 + 19] (u)
 1e10fd2:    20 50             	r0 = h[r0 + 4] (u)
 1e10fd4:    4f 57             	h[r3 + 40] = r7
 1e10fd6:    45 52             	r5 = h[r1 + 8] (u)
 1e10fd8:    5f 45             	[r2 + 84] = r7
 1e10fda:    56 45             	r6 = [r2 + 84]
 1e10fdc:    4e 54             	h[r2 + 8] = r6
 1e10fde:    5f 50             	h[r0 + 10] = r7
 1e10fe0:    4f 57             	h[r3 + 40] = r7
 1e10fe2:    45 52             	r5 = h[r1 + 8] (u)
 1e10fe4:    5f 4c             	[r6 + 20] = r7
 1e10fe6:    4f 57             	h[r3 + 40] = r7
 1e10fe8:    1b 5b             	h[r5 + 34] = r3
 1e10fea:    30 6d             	r0 = b[r6 + 19] (u)
 1e10fec:    00 62             	r0 = b[r1 + 0] (u)
 1e10fee:    76 3a             	if (r5 != 0) goto 236 <update_target_end+0xEAC : 1e110dc >
 1e10ff0:    25 64             	r5 = b[r2 + 2] (u)
 1e10ff2:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xE1C : 1e1104c >
 1e10ff4:    62 6c             	r2 = b[r6 + 6] (u)
 1e10ff6:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xC3C : 1e10e6c >
 1e10ff8:    64 20             	if (r0 == 0) goto 200 <update_target_end+0xE92 : 1e110c2 >
 1e10ffa:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xE24 : 1e11054 >
 1e10ffc:    63 68             	r3 = b[r4 + 6] (u)
 1e10ffe:    65 63             	r5 = b[r1 + 22] (u)
 1e11000:    6b 5f             	h[r7 + 44] = r3
 1e11002:    76 62             	r6 = b[r1 + 7] (u)
 1e11004:    61 74             	r1 = 70
 1e11006:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xC4C : 1e10e7c >
 1e11008:    64 0a             	sp += 200
 1e1100a:    00 5b             	r0 = h[r5 + 32] (u)
 1e1100c:    49 6e             	b[r7 + 4] = r1
 1e1100e:    66 6f             	r6 = b[r7 + 22] (u)
 1e11010:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xE9C : 1e110cc >
 1e11012:    20 5b             	r0 = h[r5 + 36] (u)
 1e11014:    41 50             	r1 = h[r0 + 8] (u)
 1e11016:    50 5f             	r0 = h[r7 + 42] (u)
 1e11018:    50 4f             	r0 = [r7 + 84]
 1e1101a:    57 45             	r7 = [r2 + 84]
 1e1101c:    52 5d             	r2 = h[r6 + 42] (u)
 1e1101e:    0a 2a             	if (r5 == 0) goto 20 <update_target_end+0xE04 : 1e11034 >
 1e11020:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE46 : 1e11076 >
 1e11022:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE48 : 1e11078 >
 1e11024:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE4A : 1e1107a >
 1e11026:    4c 6f             	b[r7 + 20] = r4
 1e11028:    77 20             	if (r0 == 0) goto 238 <update_target_end+0xEE8 : 1e11118 >
 1e1102a:    50 6f             	r0 = b[r7 + 21] (u)
 1e1102c:    77 65             	r7 = b[r2 + 23] (u)
 1e1102e:    72 2c             	if (r6 == 0) goto 228 <update_target_end+0xEE4 : 1e11114 >
 1e11030:    65 6e             	r5 = b[r7 + 6] (u)
 1e11032:    74 65             	r4 = b[r2 + 23] (u)
 1e11034:    72 20             	if (r0 == 0) goto 228 <update_target_end+0xEEA : 1e1111a >
 1e11036:    73 6f             	r3 = b[r7 + 23] (u)
 1e11038:    66 74             	r6 = 70
 1e1103a:    70 6f             	r0 = b[r7 + 23] (u)
 1e1103c:    77 65             	r7 = b[r2 + 23] (u)
 1e1103e:    72 6f             	r2 = b[r7 + 23] (u)
 1e11040:    66 66             	r6 = b[r3 + 6] (u)
 1e11042:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE68 : 1e11098 >
 1e11044:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE6A : 1e1109a >
 1e11046:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE6C : 1e1109c >
 1e11048:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE6E : 1e1109e >
 1e1104a:    0a 0d             	r10 <<= r4
 1e1104c:    0a 00             	ssync
 1e1104e:    5b 49             	[r4 + 84] = r3
 1e11050:    6e 66             	b[r3 + 6] = r6
 1e11052:    6f 5d             	h[r6 + 44] = r7
 1e11054:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xE9A : 1e110ca >
 1e11056:    5b 41             	[r0 + 84] = r3
 1e11058:    50 50             	r0 = h[r0 + 10] (u)
 1e1105a:    5f 50             	h[r0 + 10] = r7
 1e1105c:    4f 57             	h[r3 + 40] = r7
 1e1105e:    45 52             	r5 = h[r1 + 8] (u)
 1e11060:    5d 0a             	sp += 184
 1e11062:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0xE88 : 1e110b8 >
 1e11064:    4c 6f             	b[r7 + 20] = r4
 1e11066:    77 20             	if (r0 == 0) goto 238 <update_target_end+0xF26 : 1e11156 >
 1e11068:    50 6f             	r0 = b[r7 + 21] (u)
 1e1106a:    77 65             	r7 = b[r2 + 23] (u)
 1e1106c:    72 2c             	if (r6 == 0) goto 228 <update_target_end+0xF22 : 1e11152 >
 1e1106e:    50 6c             	r0 = b[r6 + 5] (u)
 1e11070:    65 61             	r5 = b[r0 + 22] (u)
 1e11072:    73 65             	r3 = b[r2 + 23] (u)
 1e11074:    20 43             	r0 = [r1 + 72]
 1e11076:    68 61             	b[r0 + 22] = r0
 1e11078:    72 67             	r2 = b[r3 + 23] (u)
 1e1107a:    65 20             	if (r0 == 0) goto 202 <update_target_end+0xF16 : 1e11146 >
 1e1107c:    53 6f             	r3 = b[r7 + 21] (u)
 1e1107e:    6f 6e             	b[r7 + 6] = r7
 1e11080:    21 21             	if (r0 == 0) goto -446 <update_target_end+0xC94 : 1e10ec4 >
 1e11082:    21 2a             	if (r5 == 0) goto 66 <update_target_end+0xE96 : 1e110c6 >
 1e11084:    2a 0a             	sp += 84
 1e11086:    0d 0a             	sp += 24
 1e11088:    00 5b             	r0 = h[r5 + 32] (u)
 1e1108a:    49 6e             	b[r7 + 4] = r1
 1e1108c:    66 6f             	r6 = b[r7 + 22] (u)
 1e1108e:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xF1A : 1e1114a >
 1e11090:    20 5b             	r0 = h[r5 + 36] (u)
 1e11092:    41 50             	r1 = h[r0 + 8] (u)
 1e11094:    50 5f             	r0 = h[r7 + 42] (u)
 1e11096:    50 4f             	r0 = [r7 + 84]
 1e11098:    57 45             	r7 = [r2 + 84]
 1e1109a:    52 5d             	r2 = h[r6 + 42] (u)
 1e1109c:    5b 4e             	[r7 + 20] = r3
 1e1109e:    6f 72             	r15 = 38
 1e110a0:    61 6d             	r1 = b[r6 + 22] (u)
 1e110a2:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0xF4C : 1e1117c >
 1e110a4:    70 6f             	r0 = b[r7 + 23] (u)
 1e110a6:    77 65             	r7 = b[r2 + 23] (u)
 1e110a8:    72 5d             	r2 = h[r6 + 46] (u)
 1e110aa:    0a 0d             	r10 <<= r4
 1e110ac:    0a 00             	ssync
 1e110ae:    76 62             	r6 = b[r1 + 7] (u)
 1e110b0:    61 74             	r1 = 70
 1e110b2:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xEF8 : 1e11128 >
 1e110b4:    25 64             	r5 = b[r2 + 2] (u)
 1e110b6:    0a 00             	ssync
 1e110b8:    5b 49             	[r4 + 84] = r3
 1e110ba:    6e 66             	b[r3 + 6] = r6
 1e110bc:    6f 5d             	h[r6 + 44] = r7
 1e110be:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xF04 : 1e11134 >
 1e110c0:    5b 41             	[r0 + 84] = r3
 1e110c2:    50 50             	r0 = h[r0 + 10] (u)
 1e110c4:    5f 50             	h[r0 + 10] = r7
 1e110c6:    4f 57             	h[r3 + 40] = r7
 1e110c8:    45 52             	r5 = h[r1 + 8] (u)
 1e110ca:    5d 70             	r13 = 5
 1e110cc:    6f 77             	r15 = 118
 1e110ce:    65 72             	r5 = 38
 1e110d0:    20 6f             	r0 = b[r7 + 18] (u)
 1e110d2:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0xF80 : 1e111b0 >
 1e110d4:    6c 6f             	b[r7 + 22] = r4
 1e110d6:    77 20             	if (r0 == 0) goto 238 <update_target_end+0xF96 : 1e111c6 >
 1e110d8:    70 6f             	r0 = b[r7 + 23] (u)
 1e110da:    77 65             	r7 = b[r2 + 23] (u)
 1e110dc:    72 20             	if (r0 == 0) goto 228 <update_target_end+0xF92 : 1e111c2 >
 1e110de:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xF08 : 1e11138 >
 1e110e0:    65 6e             	r5 = b[r7 + 6] (u)
 1e110e2:    74 65             	r4 = b[r2 + 23] (u)
 1e110e4:    72 20             	if (r0 == 0) goto 228 <update_target_end+0xF9A : 1e111ca >
 1e110e6:    73 6f             	r3 = b[r7 + 23] (u)
 1e110e8:    66 74             	r6 = 70
 1e110ea:    70 6f             	r0 = b[r7 + 23] (u)
 1e110ec:    77 65             	r7 = b[r2 + 23] (u)
 1e110ee:    72 6f             	r2 = b[r7 + 23] (u)
 1e110f0:    66 66             	r6 = b[r3 + 6] (u)
 1e110f2:    21 0a             	sp += 64
 1e110f4:    0d 0a             	sp += 24
 1e110f6:    00 61             	r0 = b[r0 + 16] (u)
 1e110f8:    70 70             	r0 = 7
 1e110fa:    5f 73             	r15 = 53
 1e110fc:    74 61             	r4 = b[r0 + 23] (u)
 1e110fe:    74 65             	r4 = b[r2 + 23] (u)
 1e11100:    5f 64             	b[r2 + 5] = r7
 1e11102:    65 61             	r5 = b[r0 + 22] (u)
 1e11104:    6c 00             	cli r12
 1e11106:    73 70             	r3 = 7
 1e11108:    70 5f             	r0 = h[r7 + 46] (u)
 1e1110a:    6c 65             	b[r2 + 22] = r4
 1e1110c:    00 61             	r0 = b[r0 + 16] (u)
 1e1110e:    70 70             	r0 = 7
 1e11110:    5f 6b             	b[r5 + 21] = r7
 1e11112:    65 79             	r5 = 150
 1e11114:    5f 65             	b[r2 + 21] = r7
 1e11116:    76 6e             	r6 = b[r7 + 7] (u)
 1e11118:    65 74             	r5 = 70
 1e1111a:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xF60 : 1e11190 >
 1e1111c:    25 64             	r5 = b[r2 + 2] (u)
 1e1111e:    2c 25             	if (r2 == 0) goto -424 <update_target_end+0xD48 : 1e10f78 >
 1e11120:    64 0a             	sp += 200
 1e11122:    00 1b             	goto 1536 <update_target_end+0x14F4 : 1e11724 >
 1e11124:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0xDAC : 1e10fdc >
 1e11126:    32 6d             	r2 = b[r6 + 19] (u)
 1e11128:    1b 5b             	h[r5 + 34] = r3
 1e1112a:    35 6d             	r5 = b[r6 + 19] (u)
 1e1112c:    1b 5b             	h[r5 + 34] = r3
 1e1112e:    31 6d             	r1 = b[r6 + 19] (u)
 1e11130:    68 65             	b[r2 + 22] = r0
 1e11132:    72 65             	r2 = b[r2 + 23] (u)
 1e11134:    20 61             	r0 = b[r0 + 18] (u)
 1e11136:    72 65             	r2 = b[r2 + 23] (u)
 1e11138:    20 74             	r0 = 66
 1e1113a:    68 65             	b[r2 + 22] = r0
 1e1113c:    20 6b             	r0 = b[r5 + 18] (u)
 1e1113e:    65 79             	r5 = 150
 1e11140:    5f 76             	r15 = 101
 1e11142:    61 6c             	r1 = b[r6 + 6] (u)
 1e11144:    75 65             	r5 = b[r2 + 23] (u)
 1e11146:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0xF58 : 1e11188 >
 1e11148:    25 64             	r5 = b[r2 + 2] (u)
 1e1114a:    1b 5b             	h[r5 + 34] = r3
 1e1114c:    30 6d             	r0 = b[r6 + 19] (u)
 1e1114e:    00 1b             	goto 1536 <update_target_end+0x1520 : 1e11750 >
 1e11150:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0xDD8 : 1e11008 >
 1e11152:    31 6d             	r1 = b[r6 + 19] (u)
 1e11154:    1b 5b             	h[r5 + 34] = r3
 1e11156:    31 6d             	r1 = b[r6 + 19] (u)
 1e11158:    63 6c             	r3 = b[r6 + 6] (u)
 1e1115a:    65 61             	r5 = b[r0 + 22] (u)
 1e1115c:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0x100A : 1e1123a >
 1e1115e:    6e 75             	r14 = 86
 1e11160:    6d 62             	b[r1 + 6] = r5
 1e11162:    65 72             	r5 = 38
 1e11164:    1b 5b             	h[r5 + 34] = r3
 1e11166:    30 6d             	r0 = b[r6 + 19] (u)
 1e11168:    00 5b             	r0 = h[r5 + 32] (u)
 1e1116a:    49 6e             	b[r7 + 4] = r1
 1e1116c:    66 6f             	r6 = b[r7 + 22] (u)
 1e1116e:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xFFA : 1e1122a >
 1e11170:    20 5b             	r0 = h[r5 + 36] (u)
 1e11172:    53 50             	r3 = h[r0 + 10] (u)
 1e11174:    50 5f             	r0 = h[r7 + 42] (u)
 1e11176:    41 4e             	r1 = [r7 + 16]
 1e11178:    44 5f             	r4 = h[r7 + 40] (u)
 1e1117a:    4c 45             	[r2 + 80] = r4
 1e1117c:    5d 6b             	b[r5 + 21] = r5
 1e1117e:    65 79             	r5 = 150
 1e11180:    20 64             	r0 = b[r2 + 2] (u)
 1e11182:    65 61             	r5 = b[r0 + 22] (u)
 1e11184:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x102E : 1e1125e >
 1e11186:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDB2 : 1e10fe2 >
 1e11188:    73 6b             	r3 = b[r5 + 23] (u)
 1e1118a:    69 70             	r9 = 6
 1e1118c:    5f 6d             	b[r6 + 21] = r7
 1e1118e:    6f 64             	b[r2 + 6] = r7
 1e11190:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x102C : 1e1125c >
 1e11192:    20 25             	if (r2 == 0) goto -448 <update_target_end+0xDA4 : 1e10fd4 >
 1e11194:    64 0d             	r4 >>= r5
 1e11196:    0a 00             	ssync
 1e11198:    1b 5b             	h[r5 + 34] = r3
 1e1119a:    33 32             	if (r1 != 0) goto 102 <update_target_end+0xFD2 : 1e11202 >
 1e1119c:    6d 1b             	goto 1754 <update_target_end+0x1648 : 1e11878 >
 1e1119e:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0xE26 : 1e11056 >
 1e111a0:    6d 68             	b[r4 + 6] = r5
 1e111a2:    65 72             	r5 = 38
 1e111a4:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x1040 : 1e11270 >
 1e111a6:    61 72             	r1 = 38
 1e111a8:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x1044 : 1e11274 >
 1e111aa:    74 68             	r4 = b[r4 + 7] (u)
 1e111ac:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x1048 : 1e11278 >
 1e111ae:    63 6c             	r3 = b[r6 + 6] (u)
 1e111b0:    65 61             	r5 = b[r0 + 22] (u)
 1e111b2:    6e 1b             	goto 1756 <update_target_end+0x1660 : 1e11890 >
 1e111b4:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x103C : 1e1126c >
 1e111b6:    6d 00             	cli r13
 1e111b8:    1b 5b             	h[r5 + 34] = r3
 1e111ba:    33 32             	if (r1 != 0) goto 102 <update_target_end+0xFF2 : 1e11222 >
 1e111bc:    6d 1b             	goto 1754 <update_target_end+0x1668 : 1e11898 >
 1e111be:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0xE46 : 1e11076 >
 1e111c0:    6d 2d             	if (r6 == 0) goto -294 <update_target_end+0xE6C : 1e1109c >
 1e111c2:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDEE : 1e1101e >
 1e111c4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDF0 : 1e11020 >
 1e111c6:    4b 45             	[r2 + 80] = r3
 1e111c8:    59 5f             	h[r7 + 42] = r1
 1e111ca:    45 56             	r5 = h[r3 + 8] (u)
 1e111cc:    45 4e             	r5 = [r7 + 16]
 1e111ce:    54 5f             	r4 = h[r7 + 42] (u)
 1e111d0:    41 50             	r1 = h[r0 + 8] (u)
 1e111d2:    50 5f             	r0 = h[r7 + 42] (u)
 1e111d4:    43 4d             	r3 = [r6 + 80]
 1e111d6:    44 5f             	r4 = h[r7 + 40] (u)
 1e111d8:    54 49             	r4 = [r4 + 84]
 1e111da:    4d 45             	[r2 + 80] = r5
 1e111dc:    44 4f             	r4 = [r7 + 80]
 1e111de:    57 4e             	r7 = [r7 + 20]
 1e111e0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE0C : 1e1103c >
 1e111e2:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE0E : 1e1103e >
 1e111e4:    2d 1b             	goto 1626 <update_target_end+0x1610 : 1e11840 >
 1e111e6:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x106E : 1e1129e >
 1e111e8:    6d 00             	cli r13
 1e111ea:    1b 5b             	h[r5 + 34] = r3
 1e111ec:    33 32             	if (r1 != 0) goto 102 <update_target_end+0x1024 : 1e11254 >
 1e111ee:    6d 1b             	goto 1754 <update_target_end+0x169A : 1e118ca >
 1e111f0:    5b 31             	if (r0 != 0) goto -330 <update_target_end+0xE78 : 1e110a8 >
 1e111f2:    6d 2d             	if (r6 == 0) goto -294 <update_target_end+0xE9E : 1e110ce >
 1e111f4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE20 : 1e11050 >
 1e111f6:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE22 : 1e11052 >
 1e111f8:    4b 45             	[r2 + 80] = r3
 1e111fa:    59 5f             	h[r7 + 42] = r1
 1e111fc:    45 56             	r5 = h[r3 + 8] (u)
 1e111fe:    45 4e             	r5 = [r7 + 16]
 1e11200:    54 5f             	r4 = h[r7 + 42] (u)
 1e11202:    41 50             	r1 = h[r0 + 8] (u)
 1e11204:    50 5f             	r0 = h[r7 + 42] (u)
 1e11206:    43 4d             	r3 = [r6 + 80]
 1e11208:    44 5f             	r4 = h[r7 + 40] (u)
 1e1120a:    43 4f             	r3 = [r7 + 80]
 1e1120c:    55 4e             	r5 = [r7 + 20]
 1e1120e:    54 44             	r4 = [r2 + 20]
 1e11210:    4f 57             	h[r3 + 40] = r7
 1e11212:    4e 2d             	if (r6 == 0) goto -356 <update_target_end+0xE80 : 1e110b0 >
 1e11214:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE40 : 1e11070 >
 1e11216:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE42 : 1e11072 >
 1e11218:    1b 5b             	h[r5 + 34] = r3
 1e1121a:    30 6d             	r0 = b[r6 + 19] (u)
 1e1121c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1121e:    49 6e             	b[r7 + 4] = r1
 1e11220:    66 6f             	r6 = b[r7 + 22] (u)
 1e11222:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x10AE : 1e112de >
 1e11224:    20 5b             	r0 = h[r5 + 36] (u)
 1e11226:    53 50             	r3 = h[r0 + 10] (u)
 1e11228:    50 5f             	r0 = h[r7 + 42] (u)
 1e1122a:    41 4e             	r1 = [r7 + 16]
 1e1122c:    44 5f             	r4 = h[r7 + 40] (u)
 1e1122e:    4c 45             	[r2 + 80] = r4
 1e11230:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0xEBC : 1e110ec >
 1e11232:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE5E : 1e1108e >
 1e11234:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE60 : 1e11090 >
 1e11236:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE62 : 1e11092 >
 1e11238:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE64 : 1e11094 >
 1e1123a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE66 : 1e11096 >
 1e1123c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE68 : 1e11098 >
 1e1123e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE6A : 1e1109a >
 1e11240:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE6C : 1e1109c >
 1e11242:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE6E : 1e1109e >
 1e11244:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE70 : 1e110a0 >
 1e11246:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xE72 : 1e110a2 >
 1e11248:    62 74             	r2 = 70
 1e1124a:    5f 63             	b[r1 + 21] = r7
 1e1124c:    6f 6e             	b[r7 + 6] = r7
 1e1124e:    6e 63             	b[r1 + 22] = r6
 1e11250:    74 69             	r4 = b[r4 + 23] (u)
 1e11252:    6f 6e             	b[r7 + 6] = r7
 1e11254:    5f 73             	r15 = 53
 1e11256:    74 61             	r4 = b[r0 + 23] (u)
 1e11258:    74 75             	r4 = 87
 1e1125a:    73 5f             	r3 = h[r7 + 46] (u)
 1e1125c:    65 76             	r5 = 102
 1e1125e:    65 6e             	r5 = b[r7 + 6] (u)
 1e11260:    74 5f             	r4 = h[r7 + 46] (u)
 1e11262:    68 61             	b[r0 + 22] = r0
 1e11264:    6e 64             	b[r2 + 6] = r6
 1e11266:    6c 65             	b[r2 + 22] = r4
 1e11268:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x111E : 1e1134e >
 1e1126a:    25 64             	r5 = b[r2 + 2] (u)
 1e1126c:    0d 0a             	sp += 24
 1e1126e:    00 5b             	r0 = h[r5 + 32] (u)
 1e11270:    49 6e             	b[r7 + 4] = r1
 1e11272:    66 6f             	r6 = b[r7 + 22] (u)
 1e11274:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1100 : 1e11330 >
 1e11276:    20 5b             	r0 = h[r5 + 36] (u)
 1e11278:    53 50             	r3 = h[r0 + 10] (u)
 1e1127a:    50 5f             	r0 = h[r7 + 42] (u)
 1e1127c:    41 4e             	r1 = [r7 + 16]
 1e1127e:    44 5f             	r4 = h[r7 + 40] (u)
 1e11280:    4c 45             	[r2 + 80] = r4
 1e11282:    5d 42             	[r1 + 20] = r5
 1e11284:    54 5f             	r4 = h[r7 + 42] (u)
 1e11286:    53 54             	r3 = h[r2 + 10] (u)
 1e11288:    41 54             	r1 = h[r2 + 8] (u)
 1e1128a:    55 53             	r5 = h[r1 + 42] (u)
 1e1128c:    5f 49             	[r4 + 84] = r7
 1e1128e:    4e 49             	[r4 + 80] = r6
 1e11290:    54 5f             	r4 = h[r7 + 42] (u)
 1e11292:    4f 4b             	[r5 + 80] = r7
 1e11294:    0a 0d             	r10 <<= r4
 1e11296:    0a 00             	ssync
 1e11298:    5b 49             	[r4 + 84] = r3
 1e1129a:    6e 66             	b[r3 + 6] = r6
 1e1129c:    6f 5d             	h[r6 + 44] = r7
 1e1129e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x10E4 : 1e11314 >
 1e112a0:    5b 53             	h[r1 + 42] = r3
 1e112a2:    50 50             	r0 = h[r0 + 10] (u)
 1e112a4:    5f 41             	[r0 + 84] = r7
 1e112a6:    4e 44             	[r2 + 16] = r6
 1e112a8:    5f 4c             	[r6 + 20] = r7
 1e112aa:    45 5d             	r5 = h[r6 + 40] (u)
 1e112ac:    42 54             	r2 = h[r2 + 8] (u)
 1e112ae:    5f 53             	h[r1 + 42] = r7
 1e112b0:    54 41             	r4 = [r0 + 84]
 1e112b2:    54 55             	r4 = h[r2 + 42] (u)
 1e112b4:    53 5f             	r3 = h[r7 + 42] (u)
 1e112b6:    43 4f             	r3 = [r7 + 80]
 1e112b8:    4e 4e             	[r7 + 16] = r6
 1e112ba:    45 43             	r5 = [r1 + 80]
 1e112bc:    54 45             	r4 = [r2 + 84]
 1e112be:    44 0a             	sp += 136
 1e112c0:    0d 0a             	sp += 24
 1e112c2:    00 5b             	r0 = h[r5 + 32] (u)
 1e112c4:    49 6e             	b[r7 + 4] = r1
 1e112c6:    66 6f             	r6 = b[r7 + 22] (u)
 1e112c8:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1154 : 1e11384 >
 1e112ca:    20 5b             	r0 = h[r5 + 36] (u)
 1e112cc:    53 50             	r3 = h[r0 + 10] (u)
 1e112ce:    50 5f             	r0 = h[r7 + 42] (u)
 1e112d0:    41 4e             	r1 = [r7 + 16]
 1e112d2:    44 5f             	r4 = h[r7 + 40] (u)
 1e112d4:    4c 45             	[r2 + 80] = r4
 1e112d6:    5d 65             	b[r2 + 21] = r5
 1e112d8:    64 72             	r4 = 38
 1e112da:    20 72             	r0 = 34
 1e112dc:    65 6d             	r5 = b[r6 + 22] (u)
 1e112de:    6f 74             	r15 = 70
 1e112e0:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x117C : 1e113ac >
 1e112e2:    72 73             	r2 = 55
 1e112e4:    73 69             	r3 = b[r4 + 23] (u)
 1e112e6:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1132 : 1e11362 >
 1e112e8:    25 64             	r5 = b[r2 + 2] (u)
 1e112ea:    0a 0d             	r10 <<= r4
 1e112ec:    0a 00             	ssync
 1e112ee:    5b 49             	[r4 + 84] = r3
 1e112f0:    6e 66             	b[r3 + 6] = r6
 1e112f2:    6f 5d             	h[r6 + 44] = r7
 1e112f4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x113A : 1e1136a >
 1e112f6:    5b 53             	h[r1 + 42] = r3
 1e112f8:    50 50             	r0 = h[r0 + 10] (u)
 1e112fa:    5f 41             	[r0 + 84] = r7
 1e112fc:    4e 44             	[r2 + 16] = r6
 1e112fe:    5f 4c             	[r6 + 20] = r7
 1e11300:    45 5d             	r5 = h[r6 + 40] (u)
 1e11302:    42 54             	r2 = h[r2 + 8] (u)
 1e11304:    5f 53             	h[r1 + 42] = r7
 1e11306:    54 41             	r4 = [r0 + 84]
 1e11308:    54 55             	r4 = h[r2 + 42] (u)
 1e1130a:    53 5f             	r3 = h[r7 + 42] (u)
 1e1130c:    44 49             	r4 = [r4 + 80]
 1e1130e:    53 43             	r3 = [r1 + 84]
 1e11310:    4f 4e             	[r7 + 16] = r7
 1e11312:    4e 45             	[r2 + 80] = r6
 1e11314:    43 54             	r3 = h[r2 + 8] (u)
 1e11316:    0a 0d             	r10 <<= r4
 1e11318:    0a 00             	ssync
 1e1131a:    5b 49             	[r4 + 84] = r3
 1e1131c:    6e 66             	b[r3 + 6] = r6
 1e1131e:    6f 5d             	h[r6 + 44] = r7
 1e11320:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1166 : 1e11396 >
 1e11322:    5b 53             	h[r1 + 42] = r3
 1e11324:    50 50             	r0 = h[r0 + 10] (u)
 1e11326:    5f 41             	[r0 + 84] = r7
 1e11328:    4e 44             	[r2 + 16] = r6
 1e1132a:    5f 4c             	[r6 + 20] = r7
 1e1132c:    45 5d             	r5 = h[r6 + 40] (u)
 1e1132e:    42 54             	r2 = h[r2 + 8] (u)
 1e11330:    5f 53             	h[r1 + 42] = r7
 1e11332:    54 41             	r4 = [r0 + 84]
 1e11334:    54 55             	r4 = h[r2 + 42] (u)
 1e11336:    53 5f             	r3 = h[r7 + 42] (u)
 1e11338:    50 48             	r0 = [r4 + 20]
 1e1133a:    4f 4e             	[r7 + 16] = r7
 1e1133c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1133e:    49 4e             	[r7 + 16] = r1
 1e11340:    43 4f             	r3 = [r7 + 80]
 1e11342:    4d 45             	[r2 + 80] = r5
 1e11344:    0a 0d             	r10 <<= r4
 1e11346:    0a 00             	ssync
 1e11348:    5b 49             	[r4 + 84] = r3
 1e1134a:    6e 66             	b[r3 + 6] = r6
 1e1134c:    6f 5d             	h[r6 + 44] = r7
 1e1134e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1194 : 1e113c4 >
 1e11350:    5b 53             	h[r1 + 42] = r3
 1e11352:    50 50             	r0 = h[r0 + 10] (u)
 1e11354:    5f 41             	[r0 + 84] = r7
 1e11356:    4e 44             	[r2 + 16] = r6
 1e11358:    5f 4c             	[r6 + 20] = r7
 1e1135a:    45 5d             	r5 = h[r6 + 40] (u)
 1e1135c:    42 54             	r2 = h[r2 + 8] (u)
 1e1135e:    5f 53             	h[r1 + 42] = r7
 1e11360:    54 41             	r4 = [r0 + 84]
 1e11362:    54 55             	r4 = h[r2 + 42] (u)
 1e11364:    53 5f             	r3 = h[r7 + 42] (u)
 1e11366:    50 48             	r0 = [r4 + 20]
 1e11368:    4f 4e             	[r7 + 16] = r7
 1e1136a:    45 5f             	r5 = h[r7 + 40] (u)
 1e1136c:    4f 55             	h[r2 + 40] = r7
 1e1136e:    54 0a             	sp += 168
 1e11370:    0d 0a             	sp += 24
 1e11372:    00 5b             	r0 = h[r5 + 32] (u)
 1e11374:    49 6e             	b[r7 + 4] = r1
 1e11376:    66 6f             	r6 = b[r7 + 22] (u)
 1e11378:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1204 : 1e11434 >
 1e1137a:    20 5b             	r0 = h[r5 + 36] (u)
 1e1137c:    53 50             	r3 = h[r0 + 10] (u)
 1e1137e:    50 5f             	r0 = h[r7 + 42] (u)
 1e11380:    41 4e             	r1 = [r7 + 16]
 1e11382:    44 5f             	r4 = h[r7 + 40] (u)
 1e11384:    4c 45             	[r2 + 80] = r4
 1e11386:    5d 42             	[r1 + 20] = r5
 1e11388:    54 5f             	r4 = h[r7 + 42] (u)
 1e1138a:    53 54             	r3 = h[r2 + 10] (u)
 1e1138c:    41 54             	r1 = h[r2 + 8] (u)
 1e1138e:    55 53             	r5 = h[r1 + 42] (u)
 1e11390:    5f 50             	h[r0 + 10] = r7
 1e11392:    48 4f             	[r7 + 80] = r0
 1e11394:    4e 45             	[r2 + 80] = r6
 1e11396:    5f 41             	[r0 + 84] = r7
 1e11398:    43 54             	r3 = h[r2 + 8] (u)
 1e1139a:    49 56             	h[r3 + 8] = r1
 1e1139c:    45 0a             	sp += 136
 1e1139e:    0d 0a             	sp += 24
 1e113a0:    00 5b             	r0 = h[r5 + 32] (u)
 1e113a2:    49 6e             	b[r7 + 4] = r1
 1e113a4:    66 6f             	r6 = b[r7 + 22] (u)
 1e113a6:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1232 : 1e11462 >
 1e113a8:    20 5b             	r0 = h[r5 + 36] (u)
 1e113aa:    53 50             	r3 = h[r0 + 10] (u)
 1e113ac:    50 5f             	r0 = h[r7 + 42] (u)
 1e113ae:    41 4e             	r1 = [r7 + 16]
 1e113b0:    44 5f             	r4 = h[r7 + 40] (u)
 1e113b2:    4c 45             	[r2 + 80] = r4
 1e113b4:    5d 42             	[r1 + 20] = r5
 1e113b6:    54 5f             	r4 = h[r7 + 42] (u)
 1e113b8:    53 54             	r3 = h[r2 + 10] (u)
 1e113ba:    41 54             	r1 = h[r2 + 8] (u)
 1e113bc:    55 53             	r5 = h[r1 + 42] (u)
 1e113be:    5f 50             	h[r0 + 10] = r7
 1e113c0:    48 4f             	[r7 + 80] = r0
 1e113c2:    4e 45             	[r2 + 80] = r6
 1e113c4:    5f 48             	[r4 + 20] = r7
 1e113c6:    41 4e             	r1 = [r7 + 16]
 1e113c8:    47 55             	r7 = h[r2 + 40] (u)
 1e113ca:    50 0a             	sp += 160
 1e113cc:    0d 0a             	sp += 24
 1e113ce:    00 5b             	r0 = h[r5 + 32] (u)
 1e113d0:    49 6e             	b[r7 + 4] = r1
 1e113d2:    66 6f             	r6 = b[r7 + 22] (u)
 1e113d4:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1260 : 1e11490 >
 1e113d6:    20 5b             	r0 = h[r5 + 36] (u)
 1e113d8:    53 50             	r3 = h[r0 + 10] (u)
 1e113da:    50 5f             	r0 = h[r7 + 42] (u)
 1e113dc:    41 4e             	r1 = [r7 + 16]
 1e113de:    44 5f             	r4 = h[r7 + 40] (u)
 1e113e0:    4c 45             	[r2 + 80] = r4
 1e113e2:    5d 42             	[r1 + 20] = r5
 1e113e4:    54 5f             	r4 = h[r7 + 42] (u)
 1e113e6:    53 54             	r3 = h[r2 + 10] (u)
 1e113e8:    41 54             	r1 = h[r2 + 8] (u)
 1e113ea:    55 53             	r5 = h[r1 + 42] (u)
 1e113ec:    5f 50             	h[r0 + 10] = r7
 1e113ee:    48 4f             	[r7 + 80] = r0
 1e113f0:    4e 45             	[r2 + 80] = r6
 1e113f2:    5f 4e             	[r7 + 20] = r7
 1e113f4:    55 4d             	r5 = [r6 + 84]
 1e113f6:    42 45             	r2 = [r2 + 80]
 1e113f8:    52 0a             	sp += 164
 1e113fa:    0d 0a             	sp += 24
 1e113fc:    00 5b             	r0 = h[r5 + 32] (u)
 1e113fe:    49 6e             	b[r7 + 4] = r1
 1e11400:    66 6f             	r6 = b[r7 + 22] (u)
 1e11402:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x128E : 1e114be >
 1e11404:    20 5b             	r0 = h[r5 + 36] (u)
 1e11406:    53 50             	r3 = h[r0 + 10] (u)
 1e11408:    50 5f             	r0 = h[r7 + 42] (u)
 1e1140a:    41 4e             	r1 = [r7 + 16]
 1e1140c:    44 5f             	r4 = h[r7 + 40] (u)
 1e1140e:    4c 45             	[r2 + 80] = r4
 1e11410:    5d 42             	[r1 + 20] = r5
 1e11412:    54 5f             	r4 = h[r7 + 42] (u)
 1e11414:    53 54             	r3 = h[r2 + 10] (u)
 1e11416:    41 54             	r1 = h[r2 + 8] (u)
 1e11418:    55 53             	r5 = h[r1 + 42] (u)
 1e1141a:    5f 49             	[r4 + 84] = r7
 1e1141c:    4e 42             	[r1 + 16] = r6
 1e1141e:    41 4e             	r1 = [r7 + 16]
 1e11420:    44 5f             	r4 = h[r7 + 40] (u)
 1e11422:    52 49             	r2 = [r4 + 84]
 1e11424:    4e 47             	[r3 + 80] = r6
 1e11426:    54 4f             	r4 = [r7 + 84]
 1e11428:    4e 45             	[r2 + 80] = r6
 1e1142a:    0a 0d             	r10 <<= r4
 1e1142c:    0a 00             	ssync
 1e1142e:    5b 49             	[r4 + 84] = r3
 1e11430:    6e 66             	b[r3 + 6] = r6
 1e11432:    6f 5d             	h[r6 + 44] = r7
 1e11434:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x127A : 1e114aa >
 1e11436:    5b 53             	h[r1 + 42] = r3
 1e11438:    50 50             	r0 = h[r0 + 10] (u)
 1e1143a:    5f 41             	[r0 + 84] = r7
 1e1143c:    4e 44             	[r2 + 16] = r6
 1e1143e:    5f 4c             	[r6 + 20] = r7
 1e11440:    45 5d             	r5 = h[r6 + 40] (u)
 1e11442:    42 54             	r2 = h[r2 + 8] (u)
 1e11444:    5f 53             	h[r1 + 42] = r7
 1e11446:    54 41             	r4 = [r0 + 84]
 1e11448:    54 55             	r4 = h[r2 + 42] (u)
 1e1144a:    53 5f             	r3 = h[r7 + 42] (u)
 1e1144c:    42 45             	r2 = [r2 + 80]
 1e1144e:    47 49             	r7 = [r4 + 80]
 1e11450:    4e 5f             	h[r7 + 40] = r6
 1e11452:    41 55             	r1 = h[r2 + 40] (u)
 1e11454:    54 4f             	r4 = [r7 + 84]
 1e11456:    5f 43             	[r1 + 84] = r7
 1e11458:    4f 4e             	[r7 + 16] = r7
 1e1145a:    0a 0d             	r10 <<= r4
 1e1145c:    0a 00             	ssync
 1e1145e:    5b 49             	[r4 + 84] = r3
 1e11460:    6e 66             	b[r3 + 6] = r6
 1e11462:    6f 5d             	h[r6 + 44] = r7
 1e11464:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x12AA : 1e114da >
 1e11466:    5b 53             	h[r1 + 42] = r3
 1e11468:    50 50             	r0 = h[r0 + 10] (u)
 1e1146a:    5f 41             	[r0 + 84] = r7
 1e1146c:    4e 44             	[r2 + 16] = r6
 1e1146e:    5f 4c             	[r6 + 20] = r7
 1e11470:    45 5d             	r5 = h[r6 + 40] (u)
 1e11472:    20 42             	r0 = [r1 + 8]
 1e11474:    54 5f             	r4 = h[r7 + 42] (u)
 1e11476:    53 54             	r3 = h[r2 + 10] (u)
 1e11478:    41 54             	r1 = h[r2 + 8] (u)
 1e1147a:    55 53             	r5 = h[r1 + 42] (u)
 1e1147c:    5f 41             	[r0 + 84] = r7
 1e1147e:    32 44             	r2 = [r2 + 12]
 1e11480:    50 5f             	r0 = h[r7 + 42] (u)
 1e11482:    4d 45             	[r2 + 80] = r5
 1e11484:    44 49             	r4 = [r4 + 80]
 1e11486:    41 5f             	r1 = h[r7 + 40] (u)
 1e11488:    53 54             	r3 = h[r2 + 10] (u)
 1e1148a:    41 52             	r1 = h[r1 + 8] (u)
 1e1148c:    54 0d             	r4 <<<= r5
 1e1148e:    0a 00             	ssync
 1e11490:    5b 49             	[r4 + 84] = r3
 1e11492:    6e 66             	b[r3 + 6] = r6
 1e11494:    6f 5d             	h[r6 + 44] = r7
 1e11496:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x12DC : 1e1150c >
 1e11498:    5b 53             	h[r1 + 42] = r3
 1e1149a:    50 50             	r0 = h[r0 + 10] (u)
 1e1149c:    5f 41             	[r0 + 84] = r7
 1e1149e:    4e 44             	[r2 + 16] = r6
 1e114a0:    5f 4c             	[r6 + 20] = r7
 1e114a2:    45 5d             	r5 = h[r6 + 40] (u)
 1e114a4:    20 42             	r0 = [r1 + 8]
 1e114a6:    54 5f             	r4 = h[r7 + 42] (u)
 1e114a8:    53 54             	r3 = h[r2 + 10] (u)
 1e114aa:    41 54             	r1 = h[r2 + 8] (u)
 1e114ac:    55 53             	r5 = h[r1 + 42] (u)
 1e114ae:    5f 53             	h[r1 + 42] = r7
 1e114b0:    4e 49             	[r4 + 80] = r6
 1e114b2:    46 46             	r6 = [r3 + 16]
 1e114b4:    5f 53             	h[r1 + 42] = r7
 1e114b6:    54 41             	r4 = [r0 + 84]
 1e114b8:    54 45             	r4 = [r2 + 84]
 1e114ba:    5f 55             	h[r2 + 42] = r7
 1e114bc:    50 44             	r0 = [r2 + 20]
 1e114be:    41 54             	r1 = h[r2 + 8] (u)
 1e114c0:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x131C : 1e1154c >
 1e114c2:    25 64             	r5 = b[r2 + 2] (u)
 1e114c4:    0a 0d             	r10 <<= r4
 1e114c6:    0a 00             	ssync
 1e114c8:    5b 49             	[r4 + 84] = r3
 1e114ca:    6e 66             	b[r3 + 6] = r6
 1e114cc:    6f 5d             	h[r6 + 44] = r7
 1e114ce:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1314 : 1e11544 >
 1e114d0:    5b 53             	h[r1 + 42] = r3
 1e114d2:    50 50             	r0 = h[r0 + 10] (u)
 1e114d4:    5f 41             	[r0 + 84] = r7
 1e114d6:    4e 44             	[r2 + 16] = r6
 1e114d8:    5f 4c             	[r6 + 20] = r7
 1e114da:    45 5d             	r5 = h[r6 + 40] (u)
 1e114dc:    42 54             	r2 = h[r2 + 8] (u)
 1e114de:    20 53             	r0 = h[r1 + 36] (u)
 1e114e0:    54 41             	r4 = [r0 + 84]
 1e114e2:    54 55             	r4 = h[r2 + 42] (u)
 1e114e4:    53 20             	if (r0 == 0) goto 166 <update_target_end+0x135C : 1e1158c >
 1e114e6:    54 52             	r4 = h[r1 + 10] (u)
 1e114e8:    49 4d             	[r6 + 80] = r1
 1e114ea:    20 4f             	r0 = [r7 + 72]
 1e114ec:    56 45             	r6 = [r2 + 84]
 1e114ee:    52 0a             	sp += 164
 1e114f0:    0d 0a             	sp += 24
 1e114f2:    00 5b             	r0 = h[r5 + 32] (u)
 1e114f4:    49 6e             	b[r7 + 4] = r1
 1e114f6:    66 6f             	r6 = b[r7 + 22] (u)
 1e114f8:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1384 : 1e115b4 >
 1e114fa:    20 5b             	r0 = h[r5 + 36] (u)
 1e114fc:    53 50             	r3 = h[r0 + 10] (u)
 1e114fe:    50 5f             	r0 = h[r7 + 42] (u)
 1e11500:    41 4e             	r1 = [r7 + 16]
 1e11502:    44 5f             	r4 = h[r7 + 40] (u)
 1e11504:    4c 45             	[r2 + 80] = r4
 1e11506:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0x1392 : 1e115c2 >
 1e11508:    42 54             	r2 = h[r2 + 8] (u)
 1e1150a:    20 53             	r0 = h[r1 + 36] (u)
 1e1150c:    54 41             	r4 = [r0 + 84]
 1e1150e:    54 55             	r4 = h[r2 + 42] (u)
 1e11510:    53 20             	if (r0 == 0) goto 166 <update_target_end+0x1388 : 1e115b8 >
 1e11512:    44 45             	r4 = [r2 + 80]
 1e11514:    46 41             	r6 = [r0 + 80]
 1e11516:    55 4c             	r5 = [r6 + 20]
 1e11518:    54 0a             	sp += 168
 1e1151a:    0d 0a             	sp += 24
 1e1151c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1151e:    49 6e             	b[r7 + 4] = r1
 1e11520:    66 6f             	r6 = b[r7 + 22] (u)
 1e11522:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x13AE : 1e115de >
 1e11524:    20 5b             	r0 = h[r5 + 36] (u)
 1e11526:    53 50             	r3 = h[r0 + 10] (u)
 1e11528:    50 5f             	r0 = h[r7 + 42] (u)
 1e1152a:    41 4e             	r1 = [r7 + 16]
 1e1152c:    44 5f             	r4 = h[r7 + 40] (u)
 1e1152e:    4c 45             	[r2 + 80] = r4
 1e11530:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x11BC : 1e113ec >
 1e11532:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x115E : 1e1138e >
 1e11534:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1160 : 1e11390 >
 1e11536:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1162 : 1e11392 >
 1e11538:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1164 : 1e11394 >
 1e1153a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1166 : 1e11396 >
 1e1153c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1168 : 1e11398 >
 1e1153e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x116A : 1e1139a >
 1e11540:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x116C : 1e1139c >
 1e11542:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x116E : 1e1139e >
 1e11544:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1170 : 1e113a0 >
 1e11546:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1172 : 1e113a2 >
 1e11548:    2d 62             	b[r1 + 2] = r5
 1e1154a:    74 5f             	r4 = h[r7 + 46] (u)
 1e1154c:    68 63             	b[r1 + 22] = r0
 1e1154e:    69 5f             	h[r7 + 44] = r1
 1e11550:    65 76             	r5 = 102
 1e11552:    65 6e             	r5 = b[r7 + 6] (u)
 1e11554:    74 5f             	r4 = h[r7 + 46] (u)
 1e11556:    68 61             	b[r0 + 22] = r0
 1e11558:    6e 64             	b[r2 + 6] = r6
 1e1155a:    6c 65             	b[r2 + 22] = r4
 1e1155c:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x1412 : 1e11642 >
 1e1155e:    72 65             	r2 = b[r2 + 23] (u)
 1e11560:    61 73             	r1 = 54
 1e11562:    6f 6e             	b[r7 + 6] = r7
 1e11564:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1176 : 1e113a6 >
 1e11566:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x1428 : 1e11658 >
 1e11568:    25 78             	r5 = 130
 1e1156a:    0d 0a             	sp += 24
 1e1156c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1156e:    49 6e             	b[r7 + 4] = r1
 1e11570:    66 6f             	r6 = b[r7 + 22] (u)
 1e11572:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x13FE : 1e1162e >
 1e11574:    20 5b             	r0 = h[r5 + 36] (u)
 1e11576:    53 50             	r3 = h[r0 + 10] (u)
 1e11578:    50 5f             	r0 = h[r7 + 42] (u)
 1e1157a:    41 4e             	r1 = [r7 + 16]
 1e1157c:    44 5f             	r4 = h[r7 + 40] (u)
 1e1157e:    4c 45             	[r2 + 80] = r4
 1e11580:    5d 63             	b[r1 + 21] = r5
 1e11582:    6c 65             	b[r2 + 22] = r4
 1e11584:    61 72             	r1 = 38
 1e11586:    5f 74             	r15 = 69
 1e11588:    65 73             	r5 = 54
 1e1158a:    74 5f             	r4 = h[r7 + 46] (u)
 1e1158c:    62 6f             	r2 = b[r7 + 22] (u)
 1e1158e:    78 5f             	h[r7 + 46] = r0
 1e11590:    66 6c             	r6 = b[r6 + 6] (u)
 1e11592:    61 67             	r1 = b[r3 + 22] (u)
 1e11594:    0d 0a             	sp += 24
 1e11596:    00 5b             	r0 = h[r5 + 32] (u)
 1e11598:    49 6e             	b[r7 + 4] = r1
 1e1159a:    66 6f             	r6 = b[r7 + 22] (u)
 1e1159c:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1428 : 1e11658 >
 1e1159e:    20 5b             	r0 = h[r5 + 36] (u)
 1e115a0:    53 50             	r3 = h[r0 + 10] (u)
 1e115a2:    50 5f             	r0 = h[r7 + 42] (u)
 1e115a4:    41 4e             	r1 = [r7 + 16]
 1e115a6:    44 5f             	r4 = h[r7 + 40] (u)
 1e115a8:    4c 45             	[r2 + 80] = r4
 1e115aa:    5d 63             	b[r1 + 21] = r5
 1e115ac:    70 75             	r0 = 87
 1e115ae:    20 72             	r0 = 34
 1e115b0:    65 73             	r5 = 54
 1e115b2:    65 74             	r5 = 70
 1e115b4:    0a 0d             	r10 <<= r4
 1e115b6:    0a 00             	ssync
 1e115b8:    5b 49             	[r4 + 84] = r3
 1e115ba:    6e 66             	b[r3 + 6] = r6
 1e115bc:    6f 5d             	h[r6 + 44] = r7
 1e115be:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1404 : 1e11634 >
 1e115c0:    5b 53             	h[r1 + 42] = r3
 1e115c2:    50 50             	r0 = h[r0 + 10] (u)
 1e115c4:    5f 41             	[r0 + 84] = r7
 1e115c6:    4e 44             	[r2 + 16] = r6
 1e115c8:    5f 4c             	[r6 + 20] = r7
 1e115ca:    45 5d             	r5 = h[r6 + 40] (u)
 1e115cc:    20 48             	r0 = [r4 + 8]
 1e115ce:    43 49             	r3 = [r4 + 80]
 1e115d0:    5f 45             	[r2 + 84] = r7
 1e115d2:    56 45             	r6 = [r2 + 84]
 1e115d4:    4e 54             	h[r2 + 8] = r6
 1e115d6:    5f 49             	[r4 + 84] = r7
 1e115d8:    4e 51             	h[r0 + 40] = r6
 1e115da:    55 49             	r5 = [r4 + 84]
 1e115dc:    52 59             	r2 = h[r4 + 42] (u)
 1e115de:    5f 43             	[r1 + 84] = r7
 1e115e0:    4f 4d             	[r6 + 80] = r7
 1e115e2:    50 4c             	r0 = [r6 + 20]
 1e115e4:    45 54             	r5 = h[r2 + 8] (u)
 1e115e6:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x1442 : 1e11672 >
 1e115e8:    0a 0d             	r10 <<= r4
 1e115ea:    0a 00             	ssync
 1e115ec:    5b 49             	[r4 + 84] = r3
 1e115ee:    6e 66             	b[r3 + 6] = r6
 1e115f0:    6f 5d             	h[r6 + 44] = r7
 1e115f2:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1438 : 1e11668 >
 1e115f4:    5b 53             	h[r1 + 42] = r3
 1e115f6:    50 50             	r0 = h[r0 + 10] (u)
 1e115f8:    5f 41             	[r0 + 84] = r7
 1e115fa:    4e 44             	[r2 + 16] = r6
 1e115fc:    5f 4c             	[r6 + 20] = r7
 1e115fe:    45 5d             	r5 = h[r6 + 40] (u)
 1e11600:    20 48             	r0 = [r4 + 8]
 1e11602:    43 49             	r3 = [r4 + 80]
 1e11604:    5f 45             	[r2 + 84] = r7
 1e11606:    56 45             	r6 = [r2 + 84]
 1e11608:    4e 54             	h[r2 + 8] = r6
 1e1160a:    5f 55             	h[r2 + 42] = r7
 1e1160c:    53 45             	r3 = [r2 + 84]
 1e1160e:    52 5f             	r2 = h[r7 + 42] (u)
 1e11610:    43 4f             	r3 = [r7 + 80]
 1e11612:    4e 46             	[r3 + 16] = r6
 1e11614:    49 52             	h[r1 + 8] = r1
 1e11616:    4d 41             	[r0 + 80] = r5
 1e11618:    54 49             	r4 = [r4 + 84]
 1e1161a:    4f 4e             	[r7 + 16] = r7
 1e1161c:    5f 52             	h[r1 + 10] = r7
 1e1161e:    45 51             	r5 = h[r0 + 40] (u)
 1e11620:    55 45             	r5 = [r2 + 84]
 1e11622:    53 54             	r3 = h[r2 + 10] (u)
 1e11624:    20 0a             	sp += 64
 1e11626:    0d 0a             	sp += 24
 1e11628:    00 5b             	r0 = h[r5 + 32] (u)
 1e1162a:    49 6e             	b[r7 + 4] = r1
 1e1162c:    66 6f             	r6 = b[r7 + 22] (u)
 1e1162e:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x14BA : 1e116ea >
 1e11630:    20 5b             	r0 = h[r5 + 36] (u)
 1e11632:    53 50             	r3 = h[r0 + 10] (u)
 1e11634:    50 5f             	r0 = h[r7 + 42] (u)
 1e11636:    41 4e             	r1 = [r7 + 16]
 1e11638:    44 5f             	r4 = h[r7 + 40] (u)
 1e1163a:    4c 45             	[r2 + 80] = r4
 1e1163c:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0x14C8 : 1e116f8 >
 1e1163e:    48 43             	[r1 + 80] = r0
 1e11640:    49 5f             	h[r7 + 40] = r1
 1e11642:    45 56             	r5 = h[r3 + 8] (u)
 1e11644:    45 4e             	r5 = [r7 + 16]
 1e11646:    54 5f             	r4 = h[r7 + 42] (u)
 1e11648:    55 53             	r5 = h[r1 + 42] (u)
 1e1164a:    45 52             	r5 = h[r1 + 8] (u)
 1e1164c:    5f 50             	h[r0 + 10] = r7
 1e1164e:    41 53             	r1 = h[r1 + 40] (u)
 1e11650:    53 4b             	r3 = [r5 + 84]
 1e11652:    45 59             	r5 = h[r4 + 40] (u)
 1e11654:    5f 52             	h[r1 + 10] = r7
 1e11656:    45 51             	r5 = h[r0 + 40] (u)
 1e11658:    55 45             	r5 = [r2 + 84]
 1e1165a:    53 54             	r3 = h[r2 + 10] (u)
 1e1165c:    20 0a             	sp += 64
 1e1165e:    0d 0a             	sp += 24
 1e11660:    00 5b             	r0 = h[r5 + 32] (u)
 1e11662:    49 6e             	b[r7 + 4] = r1
 1e11664:    66 6f             	r6 = b[r7 + 22] (u)
 1e11666:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x14F2 : 1e11722 >
 1e11668:    20 5b             	r0 = h[r5 + 36] (u)
 1e1166a:    53 50             	r3 = h[r0 + 10] (u)
 1e1166c:    50 5f             	r0 = h[r7 + 42] (u)
 1e1166e:    41 4e             	r1 = [r7 + 16]
 1e11670:    44 5f             	r4 = h[r7 + 40] (u)
 1e11672:    4c 45             	[r2 + 80] = r4
 1e11674:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0x1500 : 1e11730 >
 1e11676:    48 43             	[r1 + 80] = r0
 1e11678:    49 5f             	h[r7 + 40] = r1
 1e1167a:    45 56             	r5 = h[r3 + 8] (u)
 1e1167c:    45 4e             	r5 = [r7 + 16]
 1e1167e:    54 5f             	r4 = h[r7 + 42] (u)
 1e11680:    55 53             	r5 = h[r1 + 42] (u)
 1e11682:    45 52             	r5 = h[r1 + 8] (u)
 1e11684:    5f 50             	h[r0 + 10] = r7
 1e11686:    52 45             	r2 = [r2 + 84]
 1e11688:    53 53             	r3 = h[r1 + 42] (u)
 1e1168a:    4b 45             	[r2 + 80] = r3
 1e1168c:    59 5f             	h[r7 + 42] = r1
 1e1168e:    4e 4f             	[r7 + 80] = r6
 1e11690:    54 49             	r4 = [r4 + 84]
 1e11692:    46 49             	r6 = [r4 + 80]
 1e11694:    43 41             	r3 = [r0 + 80]
 1e11696:    54 49             	r4 = [r4 + 84]
 1e11698:    4f 4e             	[r7 + 16] = r7
 1e1169a:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x12AC : 1e114dc >
 1e1169c:    78 0a             	sp += 240
 1e1169e:    0d 0a             	sp += 24
 1e116a0:    00 5b             	r0 = h[r5 + 32] (u)
 1e116a2:    49 6e             	b[r7 + 4] = r1
 1e116a4:    66 6f             	r6 = b[r7 + 22] (u)
 1e116a6:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1532 : 1e11762 >
 1e116a8:    20 5b             	r0 = h[r5 + 36] (u)
 1e116aa:    53 50             	r3 = h[r0 + 10] (u)
 1e116ac:    50 5f             	r0 = h[r7 + 42] (u)
 1e116ae:    41 4e             	r1 = [r7 + 16]
 1e116b0:    44 5f             	r4 = h[r7 + 40] (u)
 1e116b2:    4c 45             	[r2 + 80] = r4
 1e116b4:    5d 48             	[r4 + 20] = r5
 1e116b6:    43 49             	r3 = [r4 + 80]
 1e116b8:    5f 45             	[r2 + 84] = r7
 1e116ba:    56 45             	r6 = [r2 + 84]
 1e116bc:    4e 54             	h[r2 + 8] = r6
 1e116be:    5f 50             	h[r0 + 10] = r7
 1e116c0:    49 4e             	[r7 + 16] = r1
 1e116c2:    5f 43             	[r1 + 84] = r7
 1e116c4:    4f 44             	[r2 + 16] = r7
 1e116c6:    45 5f             	r5 = h[r7 + 40] (u)
 1e116c8:    52 45             	r2 = [r2 + 84]
 1e116ca:    51 55             	r1 = h[r2 + 42] (u)
 1e116cc:    45 53             	r5 = h[r1 + 40] (u)
 1e116ce:    54 20             	if (r0 == 0) goto 168 <update_target_end+0x1548 : 1e11778 >
 1e116d0:    20 0a             	sp += 64
 1e116d2:    0d 0a             	sp += 24
 1e116d4:    00 5b             	r0 = h[r5 + 32] (u)
 1e116d6:    49 6e             	b[r7 + 4] = r1
 1e116d8:    66 6f             	r6 = b[r7 + 22] (u)
 1e116da:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1566 : 1e11796 >
 1e116dc:    20 5b             	r0 = h[r5 + 36] (u)
 1e116de:    53 50             	r3 = h[r0 + 10] (u)
 1e116e0:    50 5f             	r0 = h[r7 + 42] (u)
 1e116e2:    41 4e             	r1 = [r7 + 16]
 1e116e4:    44 5f             	r4 = h[r7 + 40] (u)
 1e116e6:    4c 45             	[r2 + 80] = r4
 1e116e8:    5d 48             	[r4 + 20] = r5
 1e116ea:    43 49             	r3 = [r4 + 80]
 1e116ec:    5f 45             	[r2 + 84] = r7
 1e116ee:    56 45             	r6 = [r2 + 84]
 1e116f0:    4e 54             	h[r2 + 8] = r6
 1e116f2:    5f 56             	h[r3 + 10] = r7
 1e116f4:    45 4e             	r5 = [r7 + 16]
 1e116f6:    44 4f             	r4 = [r7 + 80]
 1e116f8:    52 5f             	r2 = h[r7 + 42] (u)
 1e116fa:    4e 4f             	[r7 + 80] = r6
 1e116fc:    5f 52             	h[r1 + 10] = r7
 1e116fe:    45 43             	r5 = [r1 + 80]
 1e11700:    4f 4e             	[r7 + 16] = r7
 1e11702:    4e 5f             	h[r7 + 40] = r6
 1e11704:    41 44             	r1 = [r2 + 16]
 1e11706:    44 52             	r4 = h[r1 + 8] (u)
 1e11708:    20 0a             	sp += 64
 1e1170a:    0d 0a             	sp += 24
 1e1170c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1170e:    49 6e             	b[r7 + 4] = r1
 1e11710:    66 6f             	r6 = b[r7 + 22] (u)
 1e11712:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x159E : 1e117ce >
 1e11714:    20 5b             	r0 = h[r5 + 36] (u)
 1e11716:    53 50             	r3 = h[r0 + 10] (u)
 1e11718:    50 5f             	r0 = h[r7 + 42] (u)
 1e1171a:    41 4e             	r1 = [r7 + 16]
 1e1171c:    44 5f             	r4 = h[r7 + 40] (u)
 1e1171e:    4c 45             	[r2 + 80] = r4
 1e11720:    5d 48             	[r4 + 20] = r5
 1e11722:    43 49             	r3 = [r4 + 80]
 1e11724:    5f 45             	[r2 + 84] = r7
 1e11726:    56 45             	r6 = [r2 + 84]
 1e11728:    4e 54             	h[r2 + 8] = r6
 1e1172a:    5f 44             	[r2 + 20] = r7
 1e1172c:    49 53             	h[r1 + 40] = r1
 1e1172e:    43 4f             	r3 = [r7 + 80]
 1e11730:    4e 4e             	[r7 + 16] = r6
 1e11732:    45 43             	r5 = [r1 + 80]
 1e11734:    54 49             	r4 = [r4 + 84]
 1e11736:    4f 4e             	[r7 + 16] = r7
 1e11738:    5f 43             	[r1 + 84] = r7
 1e1173a:    4f 4d             	[r6 + 80] = r7
 1e1173c:    50 4c             	r0 = [r6 + 20]
 1e1173e:    45 54             	r5 = h[r2 + 8] (u)
 1e11740:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x159C : 1e117cc >
 1e11742:    0a 0d             	r10 <<= r4
 1e11744:    0a 00             	ssync
 1e11746:    5b 49             	[r4 + 84] = r3
 1e11748:    6e 66             	b[r3 + 6] = r6
 1e1174a:    6f 5d             	h[r6 + 44] = r7
 1e1174c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1592 : 1e117c2 >
 1e1174e:    5b 53             	h[r1 + 42] = r3
 1e11750:    50 50             	r0 = h[r0 + 10] (u)
 1e11752:    5f 41             	[r0 + 84] = r7
 1e11754:    4e 44             	[r2 + 16] = r6
 1e11756:    5f 4c             	[r6 + 20] = r7
 1e11758:    45 5d             	r5 = h[r6 + 40] (u)
 1e1175a:    20 48             	r0 = [r4 + 8]
 1e1175c:    43 49             	r3 = [r4 + 80]
 1e1175e:    5f 45             	[r2 + 84] = r7
 1e11760:    56 45             	r6 = [r2 + 84]
 1e11762:    4e 54             	h[r2 + 8] = r6
 1e11764:    5f 43             	[r1 + 84] = r7
 1e11766:    4f 4e             	[r7 + 16] = r7
 1e11768:    4e 45             	[r2 + 80] = r6
 1e1176a:    43 54             	r3 = h[r2 + 8] (u)
 1e1176c:    49 4f             	[r7 + 80] = r1
 1e1176e:    4e 5f             	h[r7 + 40] = r6
 1e11770:    43 4f             	r3 = [r7 + 80]
 1e11772:    4d 50             	h[r0 + 8] = r5
 1e11774:    4c 45             	[r2 + 80] = r4
 1e11776:    54 45             	r4 = [r2 + 84]
 1e11778:    20 0a             	sp += 64
 1e1177a:    0d 0a             	sp += 24
 1e1177c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1177e:    49 6e             	b[r7 + 4] = r1
 1e11780:    66 6f             	r6 = b[r7 + 22] (u)
 1e11782:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x160E : 1e1183e >
 1e11784:    20 5b             	r0 = h[r5 + 36] (u)
 1e11786:    53 50             	r3 = h[r0 + 10] (u)
 1e11788:    50 5f             	r0 = h[r7 + 42] (u)
 1e1178a:    41 4e             	r1 = [r7 + 16]
 1e1178c:    44 5f             	r4 = h[r7 + 40] (u)
 1e1178e:    4c 45             	[r2 + 80] = r4
 1e11790:    5d 45             	[r2 + 84] = r5
 1e11792:    52 52             	r2 = h[r1 + 10] (u)
 1e11794:    4f 52             	h[r1 + 8] = r7
 1e11796:    5f 43             	[r1 + 84] = r7
 1e11798:    4f 44             	[r2 + 16] = r7
 1e1179a:    45 5f             	r5 = h[r7 + 40] (u)
 1e1179c:    53 55             	r3 = h[r2 + 42] (u)
 1e1179e:    43 43             	r3 = [r1 + 80]
 1e117a0:    45 53             	r5 = h[r1 + 40] (u)
 1e117a2:    53 20             	if (r0 == 0) goto 166 <update_target_end+0x161A : 1e1184a >
 1e117a4:    20 0a             	sp += 64
 1e117a6:    0d 0a             	sp += 24
 1e117a8:    00 5b             	r0 = h[r5 + 32] (u)
 1e117aa:    49 6e             	b[r7 + 4] = r1
 1e117ac:    66 6f             	r6 = b[r7 + 22] (u)
 1e117ae:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x163A : 1e1186a >
 1e117b0:    20 5b             	r0 = h[r5 + 36] (u)
 1e117b2:    53 50             	r3 = h[r0 + 10] (u)
 1e117b4:    50 5f             	r0 = h[r7 + 42] (u)
 1e117b6:    41 4e             	r1 = [r7 + 16]
 1e117b8:    44 5f             	r4 = h[r7 + 40] (u)
 1e117ba:    4c 45             	[r2 + 80] = r4
 1e117bc:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0x1648 : 1e11878 >
 1e117be:    45 52             	r5 = h[r1 + 8] (u)
 1e117c0:    52 4f             	r2 = [r7 + 84]
 1e117c2:    52 5f             	r2 = h[r7 + 42] (u)
 1e117c4:    43 4f             	r3 = [r7 + 80]
 1e117c6:    44 45             	r4 = [r2 + 80]
 1e117c8:    5f 50             	h[r0 + 10] = r7
 1e117ca:    49 4e             	[r7 + 16] = r1
 1e117cc:    5f 4f             	[r7 + 84] = r7
 1e117ce:    52 5f             	r2 = h[r7 + 42] (u)
 1e117d0:    4b 45             	[r2 + 80] = r3
 1e117d2:    59 5f             	h[r7 + 42] = r1
 1e117d4:    4d 49             	[r4 + 80] = r5
 1e117d6:    53 53             	r3 = h[r1 + 42] (u)
 1e117d8:    49 4e             	[r7 + 16] = r1
 1e117da:    47 20             	if (r0 == 0) goto 142 <update_target_end+0x163A : 1e1186a >
 1e117dc:    0a 0d             	r10 <<= r4
 1e117de:    0a 00             	ssync
 1e117e0:    5b 49             	[r4 + 84] = r3
 1e117e2:    6e 66             	b[r3 + 6] = r6
 1e117e4:    6f 5d             	h[r6 + 44] = r7
 1e117e6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x162C : 1e1185c >
 1e117e8:    5b 53             	h[r1 + 42] = r3
 1e117ea:    50 50             	r0 = h[r0 + 10] (u)
 1e117ec:    5f 41             	[r0 + 84] = r7
 1e117ee:    4e 44             	[r2 + 16] = r6
 1e117f0:    5f 4c             	[r6 + 20] = r7
 1e117f2:    45 5d             	r5 = h[r6 + 40] (u)
 1e117f4:    20 45             	r0 = [r2 + 72]
 1e117f6:    52 52             	r2 = h[r1 + 10] (u)
 1e117f8:    4f 52             	h[r1 + 8] = r7
 1e117fa:    5f 43             	[r1 + 84] = r7
 1e117fc:    4f 44             	[r2 + 16] = r7
 1e117fe:    45 5f             	r5 = h[r7 + 40] (u)
 1e11800:    50 41             	r0 = [r0 + 84]
 1e11802:    47 45             	r7 = [r2 + 80]
 1e11804:    5f 54             	h[r2 + 10] = r7
 1e11806:    49 4d             	[r6 + 80] = r1
 1e11808:    45 4f             	r5 = [r7 + 80]
 1e1180a:    55 54             	r5 = h[r2 + 10] (u)
 1e1180c:    20 0a             	sp += 64
 1e1180e:    0d 0a             	sp += 24
 1e11810:    00 5b             	r0 = h[r5 + 32] (u)
 1e11812:    49 6e             	b[r7 + 4] = r1
 1e11814:    66 6f             	r6 = b[r7 + 22] (u)
 1e11816:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x16A2 : 1e118d2 >
 1e11818:    20 5b             	r0 = h[r5 + 36] (u)
 1e1181a:    53 50             	r3 = h[r0 + 10] (u)
 1e1181c:    50 5f             	r0 = h[r7 + 42] (u)
 1e1181e:    41 4e             	r1 = [r7 + 16]
 1e11820:    44 5f             	r4 = h[r7 + 40] (u)
 1e11822:    4c 45             	[r2 + 80] = r4
 1e11824:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0x16B0 : 1e118e0 >
 1e11826:    45 52             	r5 = h[r1 + 8] (u)
 1e11828:    52 4f             	r2 = [r7 + 84]
 1e1182a:    52 5f             	r2 = h[r7 + 42] (u)
 1e1182c:    43 4f             	r3 = [r7 + 80]
 1e1182e:    44 45             	r4 = [r2 + 80]
 1e11830:    5f 43             	[r1 + 84] = r7
 1e11832:    4f 4e             	[r7 + 16] = r7
 1e11834:    4e 45             	[r2 + 80] = r6
 1e11836:    43 54             	r3 = h[r2 + 8] (u)
 1e11838:    49 4f             	[r7 + 80] = r1
 1e1183a:    4e 5f             	h[r7 + 40] = r6
 1e1183c:    54 49             	r4 = [r4 + 84]
 1e1183e:    4d 45             	[r2 + 80] = r5
 1e11840:    4f 55             	h[r2 + 40] = r7
 1e11842:    54 20             	if (r0 == 0) goto 168 <update_target_end+0x16BC : 1e118ec >
 1e11844:    0a 0d             	r10 <<= r4
 1e11846:    0a 00             	ssync
 1e11848:    5b 49             	[r4 + 84] = r3
 1e1184a:    6e 66             	b[r3 + 6] = r6
 1e1184c:    6f 5d             	h[r6 + 44] = r7
 1e1184e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1694 : 1e118c4 >
 1e11850:    5b 53             	h[r1 + 42] = r3
 1e11852:    50 50             	r0 = h[r0 + 10] (u)
 1e11854:    5f 41             	[r0 + 84] = r7
 1e11856:    4e 44             	[r2 + 16] = r6
 1e11858:    5f 4c             	[r6 + 20] = r7
 1e1185a:    45 5d             	r5 = h[r6 + 40] (u)
 1e1185c:    45 52             	r5 = h[r1 + 8] (u)
 1e1185e:    52 4f             	r2 = [r7 + 84]
 1e11860:    52 5f             	r2 = h[r7 + 42] (u)
 1e11862:    43 4f             	r3 = [r7 + 80]
 1e11864:    44 45             	r4 = [r2 + 80]
 1e11866:    5f 41             	[r0 + 84] = r7
 1e11868:    43 4c             	r3 = [r6 + 16]
 1e1186a:    5f 43             	[r1 + 84] = r7
 1e1186c:    4f 4e             	[r7 + 16] = r7
 1e1186e:    4e 45             	[r2 + 80] = r6
 1e11870:    43 54             	r3 = h[r2 + 8] (u)
 1e11872:    49 4f             	[r7 + 80] = r1
 1e11874:    4e 5f             	h[r7 + 40] = r6
 1e11876:    41 4c             	r1 = [r6 + 16]
 1e11878:    52 45             	r2 = [r2 + 84]
 1e1187a:    41 44             	r1 = [r2 + 16]
 1e1187c:    59 5f             	h[r7 + 42] = r1
 1e1187e:    45 58             	r5 = h[r4 + 8] (u)
 1e11880:    49 53             	h[r1 + 40] = r1
 1e11882:    54 53             	r4 = h[r1 + 42] (u)
 1e11884:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1696 : 1e118c6 >
 1e11886:    20 0a             	sp += 64
 1e11888:    0d 0a             	sp += 24
 1e1188a:    00 5b             	r0 = h[r5 + 32] (u)
 1e1188c:    49 6e             	b[r7 + 4] = r1
 1e1188e:    66 6f             	r6 = b[r7 + 22] (u)
 1e11890:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x171C : 1e1194c >
 1e11892:    20 5b             	r0 = h[r5 + 36] (u)
 1e11894:    53 50             	r3 = h[r0 + 10] (u)
 1e11896:    50 5f             	r0 = h[r7 + 42] (u)
 1e11898:    41 4e             	r1 = [r7 + 16]
 1e1189a:    44 5f             	r4 = h[r7 + 40] (u)
 1e1189c:    4c 45             	[r2 + 80] = r4
 1e1189e:    5d 73             	r13 = 53
 1e118a0:    74 61             	r4 = b[r0 + 23] (u)
 1e118a2:    72 74             	r2 = 71
 1e118a4:    5f 76             	r15 = 101
 1e118a6:    69 62             	b[r1 + 6] = r1
 1e118a8:    72 61             	r2 = b[r0 + 23] (u)
 1e118aa:    74 65             	r4 = b[r2 + 23] (u)
 1e118ac:    2c 63             	b[r1 + 18] = r4
 1e118ae:    6f 75             	r15 = 86
 1e118b0:    6e 74             	r14 = 70
 1e118b2:    64 6f             	r4 = b[r7 + 22] (u)
 1e118b4:    77 6e             	r7 = b[r7 + 7] (u)
 1e118b6:    5f 74             	r15 = 69
 1e118b8:    69 6d             	b[r6 + 22] = r1
 1e118ba:    65 72             	r5 = 38
 1e118bc:    5f 64             	b[r2 + 5] = r7
 1e118be:    69 73             	r9 = 54
 1e118c0:    70 6c             	r0 = b[r6 + 7] (u)
 1e118c2:    61 79             	r1 = 150
 1e118c4:    5f 69             	b[r4 + 21] = r7
 1e118c6:    64 3d             	if (r6 != 0) goto -312 <update_target_end+0x1560 : 1e11790 >
 1e118c8:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x1514 : 1e11744 >
 1e118ca:    64 0d             	r4 >>= r5
 1e118cc:    0a 00             	ssync
 1e118ce:    5b 49             	[r4 + 84] = r3
 1e118d0:    6e 66             	b[r3 + 6] = r6
 1e118d2:    6f 5d             	h[r6 + 44] = r7
 1e118d4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x171A : 1e1194a >
 1e118d6:    5b 53             	h[r1 + 42] = r3
 1e118d8:    50 50             	r0 = h[r0 + 10] (u)
 1e118da:    5f 41             	[r0 + 84] = r7
 1e118dc:    4e 44             	[r2 + 16] = r6
 1e118de:    5f 4c             	[r6 + 20] = r7
 1e118e0:    45 5d             	r5 = h[r6 + 40] (u)
 1e118e2:    73 74             	r3 = 71
 1e118e4:    61 72             	r1 = 38
 1e118e6:    74 5f             	r4 = h[r7 + 46] (u)
 1e118e8:    76 69             	r6 = b[r4 + 23] (u)
 1e118ea:    62 72             	r2 = 38
 1e118ec:    61 74             	r1 = 70
 1e118ee:    65 0d             	r5 >>= r5
 1e118f0:    0a 00             	ssync
 1e118f2:    5b 49             	[r4 + 84] = r3
 1e118f4:    6e 66             	b[r3 + 6] = r6
 1e118f6:    6f 5d             	h[r6 + 44] = r7
 1e118f8:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x173E : 1e1196e >
 1e118fa:    5b 53             	h[r1 + 42] = r3
 1e118fc:    50 50             	r0 = h[r0 + 10] (u)
 1e118fe:    5f 41             	[r0 + 84] = r7
 1e11900:    4e 44             	[r2 + 16] = r6
 1e11902:    5f 4c             	[r6 + 20] = r7
 1e11904:    45 5d             	r5 = h[r6 + 40] (u)
 1e11906:    73 74             	r3 = 71
 1e11908:    6f 70             	r15 = 6
 1e1190a:    5f 76             	r15 = 101
 1e1190c:    69 62             	b[r1 + 6] = r1
 1e1190e:    72 61             	r2 = b[r0 + 23] (u)
 1e11910:    74 65             	r4 = b[r2 + 23] (u)
 1e11912:    0d 0a             	sp += 24
 1e11914:    00 5b             	r0 = h[r5 + 32] (u)
 1e11916:    49 6e             	b[r7 + 4] = r1
 1e11918:    66 6f             	r6 = b[r7 + 22] (u)
 1e1191a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x17A6 : 1e119d6 >
 1e1191c:    20 5b             	r0 = h[r5 + 36] (u)
 1e1191e:    53 50             	r3 = h[r0 + 10] (u)
 1e11920:    50 5f             	r0 = h[r7 + 42] (u)
 1e11922:    41 4e             	r1 = [r7 + 16]
 1e11924:    44 5f             	r4 = h[r7 + 40] (u)
 1e11926:    4c 45             	[r2 + 80] = r4
 1e11928:    5d 73             	r13 = 53
 1e1192a:    65 74             	r5 = 70
 1e1192c:    5f 73             	r15 = 53
 1e1192e:    6f 66             	b[r3 + 6] = r7
 1e11930:    74 5f             	r4 = h[r7 + 46] (u)
 1e11932:    70 6f             	r0 = b[r7 + 23] (u)
 1e11934:    77 65             	r7 = b[r2 + 23] (u)
 1e11936:    72 6f             	r2 = b[r7 + 23] (u)
 1e11938:    66 66             	r6 = b[r3 + 6] (u)
 1e1193a:    0a 0d             	r10 <<= r4
 1e1193c:    0a 00             	ssync
 1e1193e:    5b 49             	[r4 + 84] = r3
 1e11940:    6e 66             	b[r3 + 6] = r6
 1e11942:    6f 5d             	h[r6 + 44] = r7
 1e11944:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x178A : 1e119ba >
 1e11946:    5b 53             	h[r1 + 42] = r3
 1e11948:    50 50             	r0 = h[r0 + 10] (u)
 1e1194a:    5f 41             	[r0 + 84] = r7
 1e1194c:    4e 44             	[r2 + 16] = r6
 1e1194e:    5f 4c             	[r6 + 20] = r7
 1e11950:    45 5d             	r5 = h[r6 + 40] (u)
 1e11952:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x159E : 1e117ce >
 1e11954:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15A0 : 1e117d0 >
 1e11956:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15A2 : 1e117d2 >
 1e11958:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15A4 : 1e117d4 >
 1e1195a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15A6 : 1e117d6 >
 1e1195c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15A8 : 1e117d8 >
 1e1195e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15AA : 1e117da >
 1e11960:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15AC : 1e117dc >
 1e11962:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15AE : 1e117de >
 1e11964:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15B0 : 1e117e0 >
 1e11966:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15B2 : 1e117e2 >
 1e11968:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15B4 : 1e117e4 >
 1e1196a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15B6 : 1e117e6 >
 1e1196c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15B8 : 1e117e8 >
 1e1196e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15BA : 1e117ea >
 1e11970:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15BC : 1e117ec >
 1e11972:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15BE : 1e117ee >
 1e11974:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15C0 : 1e117f0 >
 1e11976:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x15C2 : 1e117f2 >
 1e11978:    3d 0d             	r13 >>>= r4
 1e1197a:    0a 00             	ssync
 1e1197c:    5b 49             	[r4 + 84] = r3
 1e1197e:    6e 66             	b[r3 + 6] = r6
 1e11980:    6f 5d             	h[r6 + 44] = r7
 1e11982:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x17C8 : 1e119f8 >
 1e11984:    5b 53             	h[r1 + 42] = r3
 1e11986:    50 50             	r0 = h[r0 + 10] (u)
 1e11988:    5f 41             	[r0 + 84] = r7
 1e1198a:    4e 44             	[r2 + 16] = r6
 1e1198c:    5f 4c             	[r6 + 20] = r7
 1e1198e:    45 5d             	r5 = h[r6 + 40] (u)
 1e11990:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15BC : 1e117ec >
 1e11992:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15BE : 1e117ee >
 1e11994:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15C0 : 1e117f0 >
 1e11996:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15C2 : 1e117f2 >
 1e11998:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15C4 : 1e117f4 >
 1e1199a:    2d 73             	r13 = 50
 1e1199c:    70 70             	r0 = 7
 1e1199e:    5f 61             	b[r0 + 21] = r7
 1e119a0:    6e 64             	b[r2 + 6] = r6
 1e119a2:    5f 6c             	b[r6 + 5] = r7
 1e119a4:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x1840 : 1e11a70 >
 1e119a6:    64 65             	r4 = b[r2 + 22] (u)
 1e119a8:    6d 6f             	b[r7 + 22] = r5
 1e119aa:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15D6 : 1e11806 >
 1e119ac:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15D8 : 1e11808 >
 1e119ae:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15DA : 1e1180a >
 1e119b0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15DC : 1e1180c >
 1e119b2:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15DE : 1e1180e >
 1e119b4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15E0 : 1e11810 >
 1e119b6:    2d 0d             	r13 >>= r4
 1e119b8:    0a 00             	ssync
 1e119ba:    0a 2d             	if (r6 == 0) goto -492 <update_target_end+0x15A0 : 1e117d0 >
 1e119bc:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15E8 : 1e11818 >
 1e119be:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x15EA : 1e1181a >
 1e119c0:    65 64             	r5 = b[r2 + 6] (u)
 1e119c2:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x1878 : 1e11aa8 >
 1e119c4:    2b 20             	if (r0 == 0) goto 86 <update_target_end+0x17EC : 1e11a1c >
 1e119c6:    62 6c             	r2 = b[r6 + 6] (u)
 1e119c8:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x1864 : 1e11a94 >
 1e119ca:    27 73             	r7 = 50
 1e119cc:    20 61             	r0 = b[r0 + 18] (u)
 1e119ce:    64 64             	r4 = b[r2 + 6] (u)
 1e119d0:    72 65             	r2 = b[r2 + 23] (u)
 1e119d2:    73 73             	r3 = 55
 1e119d4:    2d 40             	[r0 + 8] = r5
 1e119d6:    62 79             	r2 = 150
 1e119d8:    20 6a             	r0 = b[r5 + 2] (u)
 1e119da:    69 6d             	b[r6 + 22] = r1
 1e119dc:    6d 79             	r13 = 150
 1e119de:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x160A : 1e1183a >
 1e119e0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x160C : 1e1183c >
 1e119e2:    00 5b             	r0 = h[r5 + 32] (u)
 1e119e4:    49 6e             	b[r7 + 4] = r1
 1e119e6:    66 6f             	r6 = b[r7 + 22] (u)
 1e119e8:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1874 : 1e11aa4 >
 1e119ea:    20 5b             	r0 = h[r5 + 36] (u)
 1e119ec:    53 50             	r3 = h[r0 + 10] (u)
 1e119ee:    50 5f             	r0 = h[r7 + 42] (u)
 1e119f0:    41 4e             	r1 = [r7 + 16]
 1e119f2:    44 5f             	r4 = h[r7 + 40] (u)
 1e119f4:    4c 45             	[r2 + 80] = r4
 1e119f6:    5d 41             	[r0 + 84] = r5
 1e119f8:    50 50             	r0 = h[r0 + 10] (u)
 1e119fa:    5f 53             	h[r1 + 42] = r7
 1e119fc:    54 41             	r4 = [r0 + 84]
 1e119fe:    5f 44             	[r2 + 20] = r7
 1e11a00:    45 53             	r5 = h[r1 + 40] (u)
 1e11a02:    54 52             	r4 = h[r1 + 10] (u)
 1e11a04:    4f 59             	h[r4 + 40] = r7
 1e11a06:    0a 0d             	r10 <<= r4
 1e11a08:    0a 00             	ssync
 1e11a0a:    5b 49             	[r4 + 84] = r3
 1e11a0c:    6e 66             	b[r3 + 6] = r6
 1e11a0e:    6f 5d             	h[r6 + 44] = r7
 1e11a10:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1856 : 1e11a86 >
 1e11a12:    5b 53             	h[r1 + 42] = r3
 1e11a14:    50 50             	r0 = h[r0 + 10] (u)
 1e11a16:    5f 41             	[r0 + 84] = r7
 1e11a18:    4e 44             	[r2 + 16] = r6
 1e11a1a:    5f 4c             	[r6 + 20] = r7
 1e11a1c:    45 5d             	r5 = h[r6 + 40] (u)
 1e11a1e:    42 41             	r2 = [r0 + 80]
 1e11a20:    54 54             	r4 = h[r2 + 10] (u)
 1e11a22:    20 50             	r0 = h[r0 + 4] (u)
 1e11a24:    4f 57             	h[r3 + 40] = r7
 1e11a26:    45 52             	r5 = h[r1 + 8] (u)
 1e11a28:    20 41             	r0 = [r0 + 72]
 1e11a2a:    4e 44             	[r2 + 16] = r6
 1e11a2c:    20 4c             	r0 = [r6 + 8]
 1e11a2e:    45 56             	r5 = h[r3 + 8] (u)
 1e11a30:    45 4c             	r5 = [r6 + 16]
 1e11a32:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1644 : 1e11874 >
 1e11a34:    64 3a             	if (r5 != 0) goto 200 <update_target_end+0x18CE : 1e11afe >
 1e11a36:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1648 : 1e11878 >
 1e11a38:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x18D2 : 1e11b02 >
 1e11a3a:    0d 0a             	sp += 24
 1e11a3c:    00 1b             	goto 1536 <update_target_end+0x1E0E : 1e1203e >
 1e11a3e:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0x16C6 : 1e118f6 >
 1e11a40:    31 6d             	r1 = b[r6 + 19] (u)
 1e11a42:    1b 5b             	h[r5 + 34] = r3
 1e11a44:    31 6d             	r1 = b[r6 + 19] (u)
 1e11a46:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1672 : 1e118a2 >
 1e11a48:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1674 : 1e118a4 >
 1e11a4a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1676 : 1e118a6 >
 1e11a4c:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0x1678 : 1e118a8 >
 1e11a4e:    64 2d             	if (r6 == 0) goto -312 <update_target_end+0x16E8 : 1e11918 >
 1e11a50:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x167C : 1e118ac >
 1e11a52:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x167E : 1e118ae >
 1e11a54:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1680 : 1e118b0 >
 1e11a56:    2d 1b             	goto 1626 <update_target_end+0x1E82 : 1e120b2 >
 1e11a58:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x18E0 : 1e11b10 >
 1e11a5a:    6d 00             	cli r13
 1e11a5c:    5b 49             	[r4 + 84] = r3
 1e11a5e:    6e 66             	b[r3 + 6] = r6
 1e11a60:    6f 5d             	h[r6 + 44] = r7
 1e11a62:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x18A8 : 1e11ad8 >
 1e11a64:    5b 53             	h[r1 + 42] = r3
 1e11a66:    50 50             	r0 = h[r0 + 10] (u)
 1e11a68:    5f 41             	[r0 + 84] = r7
 1e11a6a:    4e 44             	[r2 + 16] = r6
 1e11a6c:    5f 4c             	[r6 + 20] = r7
 1e11a6e:    45 5d             	r5 = h[r6 + 40] (u)
 1e11a70:    43 55             	r3 = h[r2 + 40] (u)
 1e11a72:    52 52             	r2 = h[r1 + 10] (u)
 1e11a74:    45 4e             	r5 = [r7 + 16]
 1e11a76:    54 5f             	r4 = h[r7 + 42] (u)
 1e11a78:    4e 55             	h[r2 + 40] = r6
 1e11a7a:    4d 5f             	h[r7 + 40] = r5
 1e11a7c:    44 4f             	r4 = [r7 + 80]
 1e11a7e:    57 4e             	r7 = [r7 + 20]
 1e11a80:    5f 54             	h[r2 + 10] = r7
 1e11a82:    4f 54             	h[r2 + 8] = r7
 1e11a84:    41 4c             	r1 = [r6 + 16]
 1e11a86:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x18CC : 1e11afc >
 1e11a88:    25 64             	r5 = b[r2 + 2] (u)
 1e11a8a:    0d 0a             	sp += 24
 1e11a8c:    00 5b             	r0 = h[r5 + 32] (u)
 1e11a8e:    49 6e             	b[r7 + 4] = r1
 1e11a90:    66 6f             	r6 = b[r7 + 22] (u)
 1e11a92:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x191E : 1e11b4e >
 1e11a94:    20 5b             	r0 = h[r5 + 36] (u)
 1e11a96:    53 50             	r3 = h[r0 + 10] (u)
 1e11a98:    50 5f             	r0 = h[r7 + 42] (u)
 1e11a9a:    41 4e             	r1 = [r7 + 16]
 1e11a9c:    44 5f             	r4 = h[r7 + 40] (u)
 1e11a9e:    4c 45             	[r2 + 80] = r4
 1e11aa0:    5d 48             	[r4 + 20] = r5
 1e11aa2:    41 4c             	r1 = [r6 + 16]
 1e11aa4:    4c 5f             	h[r7 + 40] = r4
 1e11aa6:    76 61             	r6 = b[r0 + 23] (u)
 1e11aa8:    6c 69             	b[r4 + 22] = r4
 1e11aaa:    64 65             	r4 = b[r2 + 22] (u)
 1e11aac:    64 5f             	r4 = h[r7 + 44] (u)
 1e11aae:    43 4f             	r3 = [r7 + 80]
 1e11ab0:    55 4e             	r5 = [r7 + 20]
 1e11ab2:    54 45             	r4 = [r2 + 84]
 1e11ab4:    52 3a             	if (r5 != 0) goto 164 <update_target_end+0x192A : 1e11b5a >
 1e11ab6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x16C8 : 1e118f8 >
 1e11ab8:    64 0d             	r4 >>= r5
 1e11aba:    0a 00             	ssync
 1e11abc:    5b 49             	[r4 + 84] = r3
 1e11abe:    6e 66             	b[r3 + 6] = r6
 1e11ac0:    6f 5d             	h[r6 + 44] = r7
 1e11ac2:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1908 : 1e11b38 >
 1e11ac4:    5b 53             	h[r1 + 42] = r3
 1e11ac6:    50 50             	r0 = h[r0 + 10] (u)
 1e11ac8:    5f 41             	[r0 + 84] = r7
 1e11aca:    4e 44             	[r2 + 16] = r6
 1e11acc:    5f 4c             	[r6 + 20] = r7
 1e11ace:    45 5d             	r5 = h[r6 + 40] (u)
 1e11ad0:    73 6b             	r3 = b[r5 + 23] (u)
 1e11ad2:    69 70             	r9 = 6
 1e11ad4:    5f 6d             	b[r6 + 21] = r7
 1e11ad6:    6f 64             	b[r2 + 6] = r7
 1e11ad8:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x1974 : 1e11ba4 >
 1e11ada:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x16EC : 1e1191c >
 1e11adc:    64 0d             	r4 >>= r5
 1e11ade:    0a 00             	ssync
 1e11ae0:    5b 49             	[r4 + 84] = r3
 1e11ae2:    6e 66             	b[r3 + 6] = r6
 1e11ae4:    6f 5d             	h[r6 + 44] = r7
 1e11ae6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x192C : 1e11b5c >
 1e11ae8:    5b 55             	h[r2 + 42] = r3
 1e11aea:    53 45             	r3 = [r2 + 84]
 1e11aec:    52 5f             	r2 = h[r7 + 42] (u)
 1e11aee:    43 46             	r3 = [r3 + 16]
 1e11af0:    47 5d             	r7 = h[r6 + 40] (u)
 1e11af2:    72 65             	r2 = b[r2 + 23] (u)
 1e11af4:    61 64             	r1 = b[r2 + 6] (u)
 1e11af6:    20 62             	r0 = b[r1 + 2] (u)
 1e11af8:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x19B2 : 1e11be2 >
 1e11afa:    6e 61             	b[r0 + 22] = r6
 1e11afc:    6d 65             	b[r2 + 22] = r5
 1e11afe:    20 65             	r0 = b[r2 + 18] (u)
 1e11b00:    72 72             	r2 = 39
 1e11b02:    0a 0d             	r10 <<= r4
 1e11b04:    0a 00             	ssync
 1e11b06:    5b 49             	[r4 + 84] = r3
 1e11b08:    6e 66             	b[r3 + 6] = r6
 1e11b0a:    6f 5d             	h[r6 + 44] = r7
 1e11b0c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1952 : 1e11b82 >
 1e11b0e:    5b 55             	h[r2 + 42] = r3
 1e11b10:    53 45             	r3 = [r2 + 84]
 1e11b12:    52 5f             	r2 = h[r7 + 42] (u)
 1e11b14:    43 46             	r3 = [r3 + 16]
 1e11b16:    47 5d             	r7 = h[r6 + 40] (u)
 1e11b18:    62 74             	r2 = 70
 1e11b1a:    20 6e             	r0 = b[r7 + 2] (u)
 1e11b1c:    61 6d             	r1 = b[r6 + 22] (u)
 1e11b1e:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x19BA : 1e11bea >
 1e11b20:    63 6f             	r3 = b[r7 + 22] (u)
 1e11b22:    6e 66             	b[r3 + 6] = r6
 1e11b24:    69 67             	b[r3 + 22] = r1
 1e11b26:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x176C : 1e1199c >
 1e11b28:    73 0a             	sp += 228
 1e11b2a:    0d 0a             	sp += 24
 1e11b2c:    00 5b             	r0 = h[r5 + 32] (u)
 1e11b2e:    44 65             	r4 = b[r2 + 20] (u)
 1e11b30:    62 75             	r2 = 86
 1e11b32:    67 5d             	r7 = h[r6 + 44] (u)
 1e11b34:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x197A : 1e11baa >
 1e11b36:    5b 55             	h[r2 + 42] = r3
 1e11b38:    53 45             	r3 = [r2 + 84]
 1e11b3a:    52 5f             	r2 = h[r7 + 42] (u)
 1e11b3c:    43 46             	r3 = [r3 + 16]
 1e11b3e:    47 5d             	r7 = h[r6 + 40] (u)
 1e11b40:    72 65             	r2 = b[r2 + 23] (u)
 1e11b42:    61 64             	r1 = b[r2 + 6] (u)
 1e11b44:    20 72             	r0 = 34
 1e11b46:    66 20             	if (r0 == 0) goto 204 <update_target_end+0x19E4 : 1e11c14 >
 1e11b48:    65 72             	r5 = 38
 1e11b4a:    72 0a             	sp += 228
 1e11b4c:    0d 0a             	sp += 24
 1e11b4e:    00 5b             	r0 = h[r5 + 32] (u)
 1e11b50:    49 6e             	b[r7 + 4] = r1
 1e11b52:    66 6f             	r6 = b[r7 + 22] (u)
 1e11b54:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x19E0 : 1e11c10 >
 1e11b56:    20 5b             	r0 = h[r5 + 36] (u)
 1e11b58:    55 53             	r5 = h[r1 + 42] (u)
 1e11b5a:    45 52             	r5 = h[r1 + 8] (u)
 1e11b5c:    5f 43             	[r1 + 84] = r7
 1e11b5e:    46 47             	r6 = [r3 + 80]
 1e11b60:    5d 72             	r13 = 37
 1e11b62:    66 20             	if (r0 == 0) goto 204 <update_target_end+0x1A00 : 1e11c30 >
 1e11b64:    63 6f             	r3 = b[r7 + 22] (u)
 1e11b66:    6e 66             	b[r3 + 6] = r6
 1e11b68:    69 67             	b[r3 + 22] = r1
 1e11b6a:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x17B0 : 1e119e0 >
 1e11b6c:    64 0a             	sp += 200
 1e11b6e:    0d 0a             	sp += 24
 1e11b70:    00 5b             	r0 = h[r5 + 32] (u)
 1e11b72:    49 6e             	b[r7 + 4] = r1
 1e11b74:    66 6f             	r6 = b[r7 + 22] (u)
 1e11b76:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1A02 : 1e11c32 >
 1e11b78:    20 5b             	r0 = h[r5 + 36] (u)
 1e11b7a:    55 53             	r5 = h[r1 + 42] (u)
 1e11b7c:    45 52             	r5 = h[r1 + 8] (u)
 1e11b7e:    5f 43             	[r1 + 84] = r7
 1e11b80:    46 47             	r6 = [r3 + 80]
 1e11b82:    5d 77             	r13 = 117
 1e11b84:    61 72             	r1 = 38
 1e11b86:    6e 69             	b[r4 + 22] = r6
 1e11b88:    6e 67             	b[r3 + 22] = r6
 1e11b8a:    5f 74             	r15 = 69
 1e11b8c:    6f 6e             	b[r7 + 6] = r7
 1e11b8e:    65 5f             	r5 = h[r7 + 44] (u)
 1e11b90:    76 3a             	if (r5 != 0) goto 236 <update_target_end+0x1A4E : 1e11c7e >
 1e11b92:    25 64             	r5 = b[r2 + 2] (u)
 1e11b94:    20 70             	r0 = 2
 1e11b96:    6f 77             	r15 = 118
 1e11b98:    65 72             	r5 = 38
 1e11b9a:    6f 66             	b[r3 + 6] = r7
 1e11b9c:    66 5f             	r6 = h[r7 + 44] (u)
 1e11b9e:    74 6f             	r4 = b[r7 + 23] (u)
 1e11ba0:    6e 65             	b[r2 + 22] = r6
 1e11ba2:    5f 76             	r15 = 101
 1e11ba4:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x17EA : 1e11a1a >
 1e11ba6:    64 0a             	sp += 200
 1e11ba8:    0d 0a             	sp += 24
 1e11baa:    00 5b             	r0 = h[r5 + 32] (u)
 1e11bac:    49 6e             	b[r7 + 4] = r1
 1e11bae:    66 6f             	r6 = b[r7 + 22] (u)
 1e11bb0:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1A3C : 1e11c6c >
 1e11bb2:    20 5b             	r0 = h[r5 + 36] (u)
 1e11bb4:    55 53             	r5 = h[r1 + 42] (u)
 1e11bb6:    45 52             	r5 = h[r1 + 8] (u)
 1e11bb8:    5f 43             	[r1 + 84] = r7
 1e11bba:    46 47             	r6 = [r3 + 80]
 1e11bbc:    5d 61             	b[r0 + 21] = r5
 1e11bbe:    75 74             	r5 = 71
 1e11bc0:    6f 5f             	h[r7 + 44] = r7
 1e11bc2:    6f 66             	b[r3 + 6] = r7
 1e11bc4:    66 5f             	r6 = h[r7 + 44] (u)
 1e11bc6:    74 69             	r4 = b[r4 + 23] (u)
 1e11bc8:    6d 65             	b[r2 + 22] = r5
 1e11bca:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x1810 : 1e11a40 >
 1e11bcc:    64 0a             	sp += 200
 1e11bce:    0d 0a             	sp += 24
 1e11bd0:    00 5b             	r0 = h[r5 + 32] (u)
 1e11bd2:    49 6e             	b[r7 + 4] = r1
 1e11bd4:    66 6f             	r6 = b[r7 + 22] (u)
 1e11bd6:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1A62 : 1e11c92 >
 1e11bd8:    20 5b             	r0 = h[r5 + 36] (u)
 1e11bda:    55 53             	r5 = h[r1 + 42] (u)
 1e11bdc:    45 52             	r5 = h[r1 + 8] (u)
 1e11bde:    5f 43             	[r1 + 84] = r7
 1e11be0:    46 47             	r6 = [r3 + 80]
 1e11be2:    5d 3e             	if (r7 != 0) goto 186 <update_target_end+0x1A6E : 1e11c9e >
 1e11be4:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x1A32 : 1e11c62 >
 1e11be6:    69 6e             	b[r7 + 6] = r1
 1e11be8:    69 74             	r9 = 70
 1e11bea:    20 6d             	r0 = b[r6 + 18] (u)
 1e11bec:    61 63             	r1 = b[r1 + 22] (u)
 1e11bee:    20 61             	r0 = b[r0 + 18] (u)
 1e11bf0:    64 64             	r4 = b[r2 + 6] (u)
 1e11bf2:    72 21             	if (r0 == 0) goto -284 <update_target_end+0x18A8 : 1e11ad8 >
 1e11bf4:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1808 : 1e11a38 >
 1e11bf6:    0a 0d             	r10 <<= r4
 1e11bf8:    0a 00             	ssync
 1e11bfa:    5b 49             	[r4 + 84] = r3
 1e11bfc:    6e 66             	b[r3 + 6] = r6
 1e11bfe:    6f 5d             	h[r6 + 44] = r7
 1e11c00:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1A46 : 1e11c76 >
 1e11c02:    5b 55             	h[r2 + 42] = r3
 1e11c04:    53 45             	r3 = [r2 + 84]
 1e11c06:    52 5f             	r2 = h[r7 + 42] (u)
 1e11c08:    43 46             	r3 = [r3 + 16]
 1e11c0a:    47 5d             	r7 = h[r6 + 40] (u)
 1e11c0c:    6d 61             	b[r0 + 22] = r5
 1e11c0e:    63 3a             	if (r5 != 0) goto 198 <update_target_end+0x1AA6 : 1e11cd6 >
 1e11c10:    0d 0a             	sp += 24
 1e11c12:    00 5b             	r0 = h[r5 + 32] (u)
 1e11c14:    49 6e             	b[r7 + 4] = r1
 1e11c16:    66 6f             	r6 = b[r7 + 22] (u)
 1e11c18:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1AA4 : 1e11cd4 >
 1e11c1a:    20 5b             	r0 = h[r5 + 36] (u)
 1e11c1c:    55 53             	r5 = h[r1 + 42] (u)
 1e11c1e:    45 52             	r5 = h[r1 + 8] (u)
 1e11c20:    5f 43             	[r1 + 84] = r7
 1e11c22:    46 47             	r6 = [r3 + 80]
 1e11c24:    5d 6c             	b[r6 + 5] = r5
 1e11c26:    72 63             	r2 = b[r1 + 23] (u)
 1e11c28:    20 63             	r0 = b[r1 + 18] (u)
 1e11c2a:    66 67             	r6 = b[r3 + 22] (u)
 1e11c2c:    3a 0d             	r10 >>>= r4
 1e11c2e:    0a 00             	ssync
 1e11c30:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x187C : 1e11aac >
 1e11c32:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x187E : 1e11aae >
 1e11c34:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1880 : 1e11ab0 >
 1e11c36:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1882 : 1e11ab2 >
 1e11c38:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1884 : 1e11ab4 >
 1e11c3a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1886 : 1e11ab6 >
 1e11c3c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1888 : 1e11ab8 >
 1e11c3e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x188A : 1e11aba >
 1e11c40:    3d 56             	h[r3 + 6] = r5
 1e11c42:    65 72             	r5 = 38
 1e11c44:    73 69             	r3 = b[r4 + 23] (u)
 1e11c46:    6f 6e             	b[r7 + 6] = r7
 1e11c48:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1894 : 1e11ac4 >
 1e11c4a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1896 : 1e11ac6 >
 1e11c4c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1898 : 1e11ac8 >
 1e11c4e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x189A : 1e11aca >
 1e11c50:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x189C : 1e11acc >
 1e11c52:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x189E : 1e11ace >
 1e11c54:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18A0 : 1e11ad0 >
 1e11c56:    3d 0a             	sp += 120
 1e11c58:    00 25             	if (r2 == 0) goto -512 <update_target_end+0x182A : 1e11a5a >
 1e11c5a:    73 0a             	sp += 228
 1e11c5c:    00 3d             	if (r6 != 0) goto -512 <update_target_end+0x182E : 1e11a5e >
 1e11c5e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18AA : 1e11ada >
 1e11c60:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18AC : 1e11adc >
 1e11c62:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18AE : 1e11ade >
 1e11c64:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18B0 : 1e11ae0 >
 1e11c66:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18B2 : 1e11ae2 >
 1e11c68:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18B4 : 1e11ae4 >
 1e11c6a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18B6 : 1e11ae6 >
 1e11c6c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18B8 : 1e11ae8 >
 1e11c6e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18BA : 1e11aea >
 1e11c70:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18BC : 1e11aec >
 1e11c72:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18BE : 1e11aee >
 1e11c74:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18C0 : 1e11af0 >
 1e11c76:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18C2 : 1e11af2 >
 1e11c78:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18C4 : 1e11af4 >
 1e11c7a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18C6 : 1e11af6 >
 1e11c7c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18C8 : 1e11af8 >
 1e11c7e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18CA : 1e11afa >
 1e11c80:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18CC : 1e11afc >
 1e11c82:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x18CE : 1e11afe >
 1e11c84:    0a 00             	ssync
 1e11c86:    63 68             	r3 = b[r4 + 6] (u)
 1e11c88:    61 72             	r1 = 38
 1e11c8a:    67 65             	r7 = b[r2 + 22] (u)
 1e11c8c:    00 63             	r0 = b[r1 + 16] (u)
 1e11c8e:    75 73             	r5 = 55
 1e11c90:    74 6f             	r4 = b[r7 + 23] (u)
 1e11c92:    6d 5f             	h[r7 + 44] = r5
 1e11c94:    6c 70             	r12 = 6
 1e11c96:    00 5b             	r0 = h[r5 + 32] (u)
 1e11c98:    49 6e             	b[r7 + 4] = r1
 1e11c9a:    66 6f             	r6 = b[r7 + 22] (u)
 1e11c9c:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1B28 : 1e11d58 >
 1e11c9e:    20 5b             	r0 = h[r5 + 36] (u)
 1e11ca0:    42 4f             	r2 = [r7 + 80]
 1e11ca2:    41 52             	r1 = h[r1 + 8] (u)
 1e11ca4:    44 5d             	r4 = h[r6 + 40] (u)
 1e11ca6:    50 6f             	r0 = b[r7 + 21] (u)
 1e11ca8:    77 65             	r7 = b[r2 + 23] (u)
 1e11caa:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x1B60 : 1e11d90 >
 1e11cac:    69 6e             	b[r7 + 6] = r1
 1e11cae:    69 74             	r9 = 70
 1e11cb0:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0x1AC2 : 1e11cf2 >
 1e11cb2:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x18C4 : 1e11af4 >
 1e11cb4:    73 0d             	r3 >>>= r5
 1e11cb6:    0a 00             	ssync
 1e11cb8:    45 3a             	if (r5 != 0) goto 138 <update_target_end+0x1B14 : 1e11d44 >
 1e11cba:    5c 4c             	[r6 + 20] = r4
 1e11cbc:    4f 5a             	h[r5 + 8] = r7
 1e11cbe:    5f 50             	h[r0 + 10] = r7
 1e11cc0:    52 4f             	r2 = [r7 + 84]
 1e11cc2:    4a 45             	[r2 + 80] = r2
 1e11cc4:    43 54             	r3 = h[r2 + 8] (u)
 1e11cc6:    5f 42             	[r1 + 20] = r7
 1e11cc8:    4c 45             	[r2 + 80] = r4
 1e11cca:    4d 43             	[r1 + 80] = r5
 1e11ccc:    55 5c             	r5 = h[r6 + 10] (u)
 1e11cce:    4c 5f             	h[r7 + 40] = r4
 1e11cd0:    e4 ba             	r4 = r5 - r3
 1e11cd2:    ae e8 80 8c       	if (r14 > 138) goto -1792 <update_target_end+0x13A6 : 1e115d6 >
 1e11cd6:    e5 be             	r5 = r7 - r3
 1e11cd8:    b7 5f             	r7 = h[r7 + 54] (u)
 1e11cda:    e8 b7             	r8 = r3 - r7
 1e11cdc:    b3 e7 bb b3       	ifs (r3 < 123) goto 1910 <update_target_end+0x2226 : 1e12456 >
 1e11ce0:    5c 73             	r12 = 53
 1e11ce2:    64 6b             	r4 = b[r5 + 22] (u)
 1e11ce4:    20 2d             	if (r6 == 0) goto -448 <update_target_end+0x18F6 : 1e11b26 >
 1e11ce6:    20 74             	r0 = 66
 1e11ce8:    65 73             	r5 = 54
 1e11cea:    74 5c             	r4 = h[r6 + 14] (u)
 1e11cec:    61 70             	r1 = 6
 1e11cee:    70 73             	r0 = 55
 1e11cf0:    5c 73             	r12 = 53
 1e11cf2:    70 70             	r0 = 7
 1e11cf4:    5f 61             	b[r0 + 21] = r7
 1e11cf6:    6e 64             	b[r2 + 6] = r6
 1e11cf8:    5f 6c             	b[r6 + 5] = r7
 1e11cfa:    65 5c             	r5 = h[r6 + 12] (u)
 1e11cfc:    62 6f             	r2 = b[r7 + 22] (u)
 1e11cfe:    61 72             	r1 = 38
 1e11d00:    64 5c             	r4 = h[r6 + 12] (u)
 1e11d02:    62 64             	r2 = b[r2 + 6] (u)
 1e11d04:    31 39             	if (r4 != 0) goto -414 <update_target_end+0x1938 : 1e11b68 >
 1e11d06:    5c 62             	b[r1 + 5] = r4
 1e11d08:    6f 61             	b[r0 + 22] = r7
 1e11d0a:    72 64             	r2 = b[r2 + 7] (u)
 1e11d0c:    5f 61             	b[r0 + 21] = r7
 1e11d0e:    63 36             	if (r3 != 0) goto 198 <update_target_end+0x1BA6 : 1e11dd6 >
 1e11d10:    33 32             	if (r1 != 0) goto 102 <update_target_end+0x1B48 : 1e11d78 >
 1e11d12:    6e 5f             	h[r7 + 44] = r6
 1e11d14:    64 65             	r4 = b[r2 + 22] (u)
 1e11d16:    6d 6f             	b[r7 + 22] = r5
 1e11d18:    2e 63             	b[r1 + 18] = r6
 1e11d1a:    00 5b             	r0 = h[r5 + 32] (u)
 1e11d1c:    49 6e             	b[r7 + 4] = r1
 1e11d1e:    66 6f             	r6 = b[r7 + 22] (u)
 1e11d20:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1BAC : 1e11ddc >
 1e11d22:    20 5b             	r0 = h[r5 + 36] (u)
 1e11d24:    42 4f             	r2 = [r7 + 80]
 1e11d26:    41 52             	r1 = h[r1 + 8] (u)
 1e11d28:    44 5d             	r4 = h[r6 + 40] (u)
 1e11d2a:    25 73             	r5 = 50
 1e11d2c:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x1972 : 1e11ba2 >
 1e11d2e:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x1BC8 : 1e11df8 >
 1e11d30:    25 64             	r5 = b[r2 + 2] (u)
 1e11d32:    0d 0a             	sp += 24
 1e11d34:    00 61             	r0 = b[r0 + 16] (u)
 1e11d36:    70 6f             	r0 = b[r7 + 23] (u)
 1e11d38:    72 74             	r2 = 71
 1e11d3a:    5f 77             	r15 = 117
 1e11d3c:    61 6b             	r1 = b[r5 + 22] (u)
 1e11d3e:    65 75             	r5 = 86
 1e11d40:    70 5f             	r0 = h[r7 + 46] (u)
 1e11d42:    63 61             	r3 = b[r0 + 22] (u)
 1e11d44:    6c 6c             	b[r6 + 6] = r4
 1e11d46:    62 61             	r2 = b[r0 + 22] (u)
 1e11d48:    63 6b             	r3 = b[r5 + 22] (u)
 1e11d4a:    00 5b             	r0 = h[r5 + 32] (u)
 1e11d4c:    49 6e             	b[r7 + 4] = r1
 1e11d4e:    66 6f             	r6 = b[r7 + 22] (u)
 1e11d50:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1BDC : 1e11e0c >
 1e11d52:    20 5b             	r0 = h[r5 + 36] (u)
 1e11d54:    42 4f             	r2 = [r7 + 80]
 1e11d56:    41 52             	r1 = h[r1 + 8] (u)
 1e11d58:    44 5d             	r4 = h[r6 + 40] (u)
 1e11d5a:    25 73             	r5 = 50
 1e11d5c:    0d 0a             	sp += 24
 1e11d5e:    00 62             	r0 = b[r1 + 0] (u)
 1e11d60:    6f 61             	b[r0 + 22] = r7
 1e11d62:    72 64             	r2 = b[r2 + 7] (u)
 1e11d64:    5f 73             	r15 = 53
 1e11d66:    65 74             	r5 = 70
 1e11d68:    5f 73             	r15 = 53
 1e11d6a:    6f 66             	b[r3 + 6] = r7
 1e11d6c:    74 5f             	r4 = h[r7 + 46] (u)
 1e11d6e:    70 6f             	r0 = b[r7 + 23] (u)
 1e11d70:    77 65             	r7 = b[r2 + 23] (u)
 1e11d72:    72 6f             	r2 = b[r7 + 23] (u)
 1e11d74:    66 66             	r6 = b[r3 + 6] (u)
 1e11d76:    00 1b             	goto 1536 <update_target_end+0x2148 : 1e12378 >
 1e11d78:    5b 33             	if (r1 != 0) goto -330 <update_target_end+0x1A00 : 1e11c30 >
 1e11d7a:    32 6d             	r2 = b[r6 + 19] (u)
 1e11d7c:    1b 5b             	h[r5 + 34] = r3
 1e11d7e:    31 6d             	r1 = b[r6 + 19] (u)
 1e11d80:    25 73             	r5 = 50
 1e11d82:    5b 25             	if (r2 == 0) goto -330 <update_target_end+0x1A0A : 1e11c3a >
 1e11d84:    64 5d             	r4 = h[r6 + 44] (u)
 1e11d86:    1b 5b             	h[r5 + 34] = r3
 1e11d88:    30 6d             	r0 = b[r6 + 19] (u)
 1e11d8a:    00 73             	r0 = 48
 1e11d8c:    65 74             	r5 = 70
 1e11d8e:    5f 65             	b[r2 + 21] = r7
 1e11d90:    6e 74             	r14 = 70
 1e11d92:    65 72             	r5 = 38
 1e11d94:    5f 6c             	b[r6 + 5] = r7
 1e11d96:    70 00             	sti r0
 1e11d98:    5b 49             	[r4 + 84] = r3
 1e11d9a:    6e 66             	b[r3 + 6] = r6
 1e11d9c:    6f 5d             	h[r6 + 44] = r7
 1e11d9e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1BE4 : 1e11e14 >
 1e11da0:    5b 4c             	[r6 + 20] = r3
 1e11da2:    4f 53             	h[r1 + 40] = r7
 1e11da4:    54 5d             	r4 = h[r6 + 42] (u)
 1e11da6:    25 73             	r5 = 50
 1e11da8:    0d 0a             	sp += 24
 1e11daa:    00 5b             	r0 = h[r5 + 32] (u)
 1e11dac:    49 6e             	b[r7 + 4] = r1
 1e11dae:    66 6f             	r6 = b[r7 + 22] (u)
 1e11db0:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1C3C : 1e11e6c >
 1e11db2:    20 5b             	r0 = h[r5 + 36] (u)
 1e11db4:    4c 4f             	[r7 + 80] = r4
 1e11db6:    53 54             	r3 = h[r2 + 10] (u)
 1e11db8:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x1A44 : 1e11c74 >
 1e11dba:    73 5b             	r3 = h[r5 + 46] (u)
 1e11dbc:    25 64             	r5 = b[r2 + 2] (u)
 1e11dbe:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1BD0 : 1e11e00 >
 1e11dc0:    25 64             	r5 = b[r2 + 2] (u)
 1e11dc2:    5d 0d             	r13 <<<= r5
 1e11dc4:    0a 00             	ssync
 1e11dc6:    62 75             	r2 = 86
 1e11dc8:    7a 7a             	r10 = 167
 1e11dca:    65 72             	r5 = 38
 1e11dcc:    5f 63             	b[r1 + 21] = r7
 1e11dce:    74 72             	r4 = 39
 1e11dd0:    6c 00             	cli r12
 1e11dd2:    62 75             	r2 = 86
 1e11dd4:    7a 7a             	r10 = 167
 1e11dd6:    65 72             	r5 = 38
 1e11dd8:    5f 72             	r15 = 37
 1e11dda:    69 6e             	b[r7 + 6] = r1
 1e11ddc:    67 00             	cli r7
 1e11dde:    62 75             	r2 = 86
 1e11de0:    7a 7a             	r10 = 167
 1e11de2:    65 72             	r5 = 38
 1e11de4:    5f 63             	b[r1 + 21] = r7
 1e11de6:    6c 6f             	b[r7 + 22] = r4
 1e11de8:    73 65             	r3 = b[r2 + 23] (u)
 1e11dea:    00 63             	r0 = b[r1 + 16] (u)
 1e11dec:    6c 6f             	b[r7 + 22] = r4
 1e11dee:    63 6b             	r3 = b[r5 + 22] (u)
 1e11df0:    00 75             	r0 = 80
 1e11df2:    61 72             	r1 = 38
 1e11df4:    74 00             	sti r4
 1e11df6:    74 6d             	r4 = b[r6 + 23] (u)
 1e11df8:    72 31             	if (r0 != 0) goto -284 <update_target_end+0x1AAE : 1e11cde >
 1e11dfa:    00 52             	r0 = h[r1 + 0] (u)
 1e11dfc:    45 54             	r5 = h[r2 + 8] (u)
 1e11dfe:    49 20             	if (r0 == 0) goto 146 <update_target_end+0x1C62 : 1e11e92 >
 1e11e00:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1C4C : 1e11e7c >
 1e11e02:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1C1E : 1e11e4e >
 1e11e04:    38 78             	r8 = 131
 1e11e06:    20 0d             	r0 >>= r4
 1e11e08:    0a 00             	ssync
 1e11e0a:    55 53             	r5 = h[r1 + 42] (u)
 1e11e0c:    50 20             	if (r0 == 0) goto 160 <update_target_end+0x1C7E : 1e11eae >
 1e11e0e:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1C5A : 1e11e8a >
 1e11e10:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1C2C : 1e11e5c >
 1e11e12:    38 78             	r8 = 131
 1e11e14:    20 0d             	r0 >>= r4
 1e11e16:    0a 00             	ssync
 1e11e18:    53 53             	r3 = h[r1 + 42] (u)
 1e11e1a:    50 20             	if (r0 == 0) goto 160 <update_target_end+0x1C8C : 1e11ebc >
 1e11e1c:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1C68 : 1e11e98 >
 1e11e1e:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1C3A : 1e11e6a >
 1e11e20:    38 78             	r8 = 131
 1e11e22:    20 0d             	r0 >>= r4
 1e11e24:    0a 00             	ssync
 1e11e26:    67 65             	r7 = b[r2 + 22] (u)
 1e11e28:    74 5f             	r4 = h[r7 + 46] (u)
 1e11e2a:    63 68             	r3 = b[r4 + 6] (u)
 1e11e2c:    69 70             	r9 = 6
 1e11e2e:    5f 69             	b[r4 + 21] = r7
 1e11e30:    64 3a             	if (r5 != 0) goto 200 <update_target_end+0x1CCA : 1e11efa >
 1e11e32:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1C44 : 1e11e74 >
 1e11e34:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1A46 : 1e11c76 >
 1e11e36:    78 0a             	sp += 240
 1e11e38:    00 67             	r0 = b[r3 + 16] (u)
 1e11e3a:    65 74             	r5 = 70
 1e11e3c:    5f 76             	r15 = 101
 1e11e3e:    62 61             	r2 = b[r0 + 22] (u)
 1e11e40:    74 5f             	r4 = h[r7 + 46] (u)
 1e11e42:    74 72             	r4 = 39
 1e11e44:    69 6d             	b[r6 + 22] = r1
 1e11e46:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1C8C : 1e11ebc >
 1e11e48:    25 78             	r5 = 130
 1e11e4a:    0a 00             	ssync
 1e11e4c:    67 65             	r7 = b[r2 + 22] (u)
 1e11e4e:    74 5f             	r4 = h[r7 + 46] (u)
 1e11e50:    76 62             	r6 = b[r1 + 7] (u)
 1e11e52:    67 5f             	r7 = h[r7 + 44] (u)
 1e11e54:    74 72             	r4 = 39
 1e11e56:    69 6d             	b[r6 + 22] = r1
 1e11e58:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1C9E : 1e11ece >
 1e11e5a:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1A6C : 1e11c9c >
 1e11e5c:    78 0a             	sp += 240
 1e11e5e:    00 44             	r0 = [r2 + 0]
 1e11e60:    42 47             	r2 = [r3 + 80]
 1e11e62:    5f 46             	[r3 + 20] = r7
 1e11e64:    46 54             	r6 = h[r2 + 8] (u)
 1e11e66:    00 44             	r0 = [r2 + 0]
 1e11e68:    42 47             	r2 = [r3 + 80]
 1e11e6a:    5f 45             	[r2 + 84] = r7
 1e11e6c:    51 00             	testset b[r1]
 1e11e6e:    43 78             	r3 = 132
 1e11e70:    72 77             	r2 = 119
 1e11e72:    30 72             	r0 = 35
 1e11e74:    77 31             	if (r0 != 0) goto -274 <update_target_end+0x1B34 : 1e11d64 >
 1e11e76:    72 77             	r2 = 119
 1e11e78:    00 5b             	r0 = h[r5 + 32] (u)
 1e11e7a:    32 2d             	if (r6 == 0) goto -412 <update_target_end+0x1AB0 : 1e11ce0 >
 1e11e7c:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1AEE : 1e11d1e >
 1e11e7e:    33 5d             	r3 = h[r6 + 38] (u)
 1e11e80:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1AAC : 1e11cdc >
 1e11e82:    52 65             	r2 = b[r2 + 21] (u)
 1e11e84:    73 65             	r3 = b[r2 + 23] (u)
 1e11e86:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1D40 : 1e11f70 >
 1e11e88:    53 6f             	r3 = b[r7 + 21] (u)
 1e11e8a:    75 72             	r5 = 39
 1e11e8c:    63 65             	r3 = b[r2 + 22] (u)
 1e11e8e:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0x1CA0 : 1e11ed0 >
 1e11e90:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x1CA2 : 1e11ed2 >
 1e11e92:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1B54 : 1e11d84 >
 1e11e94:    78 0a             	sp += 240
 1e11e96:    00 56             	r0 = h[r3 + 0] (u)
 1e11e98:    44 44             	r4 = [r2 + 16]
 1e11e9a:    49 4f             	[r7 + 80] = r1
 1e11e9c:    20 50             	r0 = h[r0 + 4] (u)
 1e11e9e:    4f 52             	h[r1 + 8] = r7
 1e11ea0:    00 56             	r0 = h[r3 + 0] (u)
 1e11ea2:    44 44             	r4 = [r2 + 16]
 1e11ea4:    49 4f             	[r7 + 80] = r1
 1e11ea6:    20 4c             	r0 = [r6 + 8]
 1e11ea8:    56 44             	r6 = [r2 + 20]
 1e11eaa:    00 56             	r0 = h[r3 + 0] (u)
 1e11eac:    43 4d             	r3 = [r6 + 80]
 1e11eae:    00 50             	r0 = h[r0 + 0] (u)
 1e11eb0:    50 49             	r0 = [r4 + 84]
 1e11eb2:    4e 52             	h[r1 + 8] = r6
 1e11eb4:    00 5b             	r0 = h[r5 + 32] (u)
 1e11eb6:    31 2d             	if (r6 == 0) goto -414 <update_target_end+0x1AEA : 1e11d1a >
 1e11eb8:    50 31             	if (r0 != 0) goto -352 <update_target_end+0x1B2A : 1e11d5a >
 1e11eba:    31 5d             	r1 = h[r6 + 38] (u)
 1e11ebc:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1AE8 : 1e11d18 >
 1e11ebe:    52 65             	r2 = b[r2 + 21] (u)
 1e11ec0:    73 65             	r3 = b[r2 + 23] (u)
 1e11ec2:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1D7C : 1e11fac >
 1e11ec4:    53 6f             	r3 = b[r7 + 21] (u)
 1e11ec6:    75 72             	r5 = 39
 1e11ec8:    63 65             	r3 = b[r2 + 22] (u)
 1e11eca:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0x1CDC : 1e11f0c >
 1e11ecc:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x1CDE : 1e11f0e >
 1e11ece:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1B90 : 1e11dc0 >
 1e11ed0:    78 0a             	sp += 240
 1e11ed2:    00 50             	r0 = h[r0 + 0] (u)
 1e11ed4:    56 44             	r6 = [r2 + 20]
 1e11ed6:    44 20             	if (r0 == 0) goto 136 <update_target_end+0x1D30 : 1e11f60 >
 1e11ed8:    50 4f             	r0 = [r7 + 84]
 1e11eda:    52 00             	testset b[r2]
 1e11edc:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1B4E : 1e11d7e >
 1e11ede:    33 20             	if (r0 == 0) goto 102 <update_target_end+0x1D16 : 1e11f46 >
 1e11ee0:    53 59             	r3 = h[r4 + 42] (u)
 1e11ee2:    53 20             	if (r0 == 0) goto 166 <update_target_end+0x1D5A : 1e11f8a >
 1e11ee4:    52 45             	r2 = [r2 + 84]
 1e11ee6:    53 45             	r3 = [r2 + 84]
 1e11ee8:    54 00             	testset b[r4]
 1e11eea:    57 44             	r7 = [r2 + 20]
 1e11eec:    54 20             	if (r0 == 0) goto 168 <update_target_end+0x1D66 : 1e11f96 >
 1e11eee:    52 45             	r2 = [r2 + 84]
 1e11ef0:    53 45             	r3 = [r2 + 84]
 1e11ef2:    54 00             	testset b[r4]
 1e11ef4:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x1D7C : 1e11fac >
 1e11ef6:    2d 4d             	[r6 + 72] = r5
 1e11ef8:    53 59             	r3 = h[r4 + 42] (u)
 1e11efa:    53 5d             	r3 = h[r6 + 42] (u)
 1e11efc:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1B28 : 1e11d58 >
 1e11efe:    52 65             	r2 = b[r2 + 21] (u)
 1e11f00:    73 65             	r3 = b[r2 + 23] (u)
 1e11f02:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1DBC : 1e11fec >
 1e11f04:    53 6f             	r3 = b[r7 + 21] (u)
 1e11f06:    75 72             	r5 = 39
 1e11f08:    63 65             	r3 = b[r2 + 22] (u)
 1e11f0a:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0x1D1C : 1e11f4c >
 1e11f0c:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x1D1E : 1e11f4e >
 1e11f0e:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1BD0 : 1e11e00 >
 1e11f10:    78 0a             	sp += 240
 1e11f12:    00 50             	r0 = h[r0 + 0] (u)
 1e11f14:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x1B48 : 1e11d78 >
 1e11f16:    20 53             	r0 = h[r1 + 36] (u)
 1e11f18:    59 53             	h[r1 + 42] = r1
 1e11f1a:    20 52             	r0 = h[r1 + 4] (u)
 1e11f1c:    45 53             	r5 = h[r1 + 40] (u)
 1e11f1e:    45 54             	r5 = h[r2 + 8] (u)
 1e11f20:    00 44             	r0 = [r2 + 0]
 1e11f22:    56 44             	r6 = [r2 + 20]
 1e11f24:    44 20             	if (r0 == 0) goto 136 <update_target_end+0x1D7E : 1e11fae >
 1e11f26:    50 4f             	r0 = [r7 + 84]
 1e11f28:    52 00             	testset b[r2]
 1e11f2a:    44 56             	r4 = h[r3 + 8] (u)
 1e11f2c:    44 44             	r4 = [r2 + 16]
 1e11f2e:    20 4e             	r0 = [r7 + 8]
 1e11f30:    4f 20             	if (r0 == 0) goto 158 <update_target_end+0x1DA0 : 1e11fd0 >
 1e11f32:    4f 4b             	[r5 + 80] = r7
 1e11f34:    00 6d             	r0 = b[r6 + 16] (u)
 1e11f36:    6e 74             	r14 = 70
 1e11f38:    2f 73             	r15 = 50
 1e11f3a:    64 66             	r4 = b[r3 + 6] (u)
 1e11f3c:    69 6c             	b[r6 + 6] = r1
 1e11f3e:    65 2f             	if (r7 == 0) goto -310 <update_target_end+0x1BDA : 1e11e0a >
 1e11f40:    72 65             	r2 = b[r2 + 23] (u)
 1e11f42:    73 2f             	if (r7 == 0) goto -282 <update_target_end+0x1BFA : 1e11e2a >
 1e11f44:    70 31             	if (r0 != 0) goto -288 <update_target_end+0x1BF6 : 1e11e26 >
 1e11f46:    31 5f             	r1 = h[r7 + 38] (u)
 1e11f48:    63 6f             	r3 = b[r7 + 22] (u)
 1e11f4a:    64 65             	r4 = b[r2 + 22] (u)
 1e11f4c:    2e 62             	b[r1 + 2] = r6
 1e11f4e:    69 6e             	b[r7 + 6] = r1
 1e11f50:    00 44             	r0 = [r2 + 0]
 1e11f52:    42 47             	r2 = [r3 + 80]
 1e11f54:    5f 52             	h[r1 + 10] = r7
 1e11f56:    45 56             	r5 = h[r3 + 8] (u)
 1e11f58:    00 30             	if (r0 != 0) goto 0 <update_target_end+0x1D2A : 1e11f5a >
 1e11f5a:    72 00             	sti r2
 1e11f5c:    77 6b             	r7 = b[r5 + 23] (u)
 1e11f5e:    75 70             	r5 = 7
 1e11f60:    5f 68             	b[r4 + 5] = r7
 1e11f62:    6f 6c             	b[r6 + 6] = r7
 1e11f64:    64 00             	cli r4
 1e11f66:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1BD8 : 1e11e08 >
 1e11f68:    5f 57             	h[r3 + 42] = r7
 1e11f6a:    4b 55             	h[r2 + 40] = r3
 1e11f6c:    50 5f             	r0 = h[r7 + 42] (u)
 1e11f6e:    45 4e             	r5 = [r7 + 16]
 1e11f70:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x1DA2 : 1e11fd2 >
 1e11f72:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1D84 : 1e11fb4 >
 1e11f74:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1D86 : 1e11fb6 >
 1e11f76:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1D88 : 1e11fb8 >
 1e11f78:    20 69             	r0 = b[r4 + 18] (u)
 1e11f7a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1E32 : 1e12062 >
 1e11f7c:    30 78             	r0 = 131
 1e11f7e:    25 78             	r5 = 130
 1e11f80:    0a 00             	ssync
 1e11f82:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1BF4 : 1e11e24 >
 1e11f84:    5f 57             	h[r3 + 42] = r7
 1e11f86:    4b 55             	h[r2 + 40] = r3
 1e11f88:    50 5f             	r0 = h[r7 + 42] (u)
 1e11f8a:    45 4e             	r5 = [r7 + 16]
 1e11f8c:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x1DC0 : 1e11ff0 >
 1e11f8e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DA0 : 1e11fd0 >
 1e11f90:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DA2 : 1e11fd2 >
 1e11f92:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DA4 : 1e11fd4 >
 1e11f94:    20 69             	r0 = b[r4 + 18] (u)
 1e11f96:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1E4E : 1e1207e >
 1e11f98:    30 78             	r0 = 131
 1e11f9a:    25 78             	r5 = 130
 1e11f9c:    0a 00             	ssync
 1e11f9e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1C10 : 1e11e40 >
 1e11fa0:    5f 57             	h[r3 + 42] = r7
 1e11fa2:    4b 55             	h[r2 + 40] = r3
 1e11fa4:    50 5f             	r0 = h[r7 + 42] (u)
 1e11fa6:    45 44             	r5 = [r2 + 16]
 1e11fa8:    47 45             	r7 = [r2 + 80]
 1e11faa:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x1DDC : 1e1200c >
 1e11fac:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DBE : 1e11fee >
 1e11fae:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DC0 : 1e11ff0 >
 1e11fb0:    20 69             	r0 = b[r4 + 18] (u)
 1e11fb2:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1E6A : 1e1209a >
 1e11fb4:    30 78             	r0 = 131
 1e11fb6:    25 78             	r5 = 130
 1e11fb8:    0a 00             	ssync
 1e11fba:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1C2C : 1e11e5c >
 1e11fbc:    5f 57             	h[r3 + 42] = r7
 1e11fbe:    4b 55             	h[r2 + 40] = r3
 1e11fc0:    50 5f             	r0 = h[r7 + 42] (u)
 1e11fc2:    45 44             	r5 = [r2 + 16]
 1e11fc4:    47 45             	r7 = [r2 + 80]
 1e11fc6:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x1DFA : 1e1202a >
 1e11fc8:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DDA : 1e1200a >
 1e11fca:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DDC : 1e1200c >
 1e11fcc:    20 69             	r0 = b[r4 + 18] (u)
 1e11fce:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1E86 : 1e120b6 >
 1e11fd0:    30 78             	r0 = 131
 1e11fd2:    25 78             	r5 = 130
 1e11fd4:    0a 00             	ssync
 1e11fd6:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1C48 : 1e11e78 >
 1e11fd8:    5f 57             	h[r3 + 42] = r7
 1e11fda:    4b 55             	h[r2 + 40] = r3
 1e11fdc:    50 5f             	r0 = h[r7 + 42] (u)
 1e11fde:    4c 45             	[r2 + 80] = r4
 1e11fe0:    56 45             	r6 = [r2 + 84]
 1e11fe2:    4c 30             	if (r0 != 0) goto 152 <update_target_end+0x1E4C : 1e1207c >
 1e11fe4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DF6 : 1e12026 >
 1e11fe6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1DF8 : 1e12028 >
 1e11fe8:    20 69             	r0 = b[r4 + 18] (u)
 1e11fea:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1EA2 : 1e120d2 >
 1e11fec:    30 78             	r0 = 131
 1e11fee:    25 78             	r5 = 130
 1e11ff0:    0a 00             	ssync
 1e11ff2:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1C64 : 1e11e94 >
 1e11ff4:    5f 57             	h[r3 + 42] = r7
 1e11ff6:    4b 55             	h[r2 + 40] = r3
 1e11ff8:    50 5f             	r0 = h[r7 + 42] (u)
 1e11ffa:    4c 45             	[r2 + 80] = r4
 1e11ffc:    56 45             	r6 = [r2 + 84]
 1e11ffe:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x1C68 : 1e11e98 >
 1e12000:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E12 : 1e12042 >
 1e12002:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E14 : 1e12044 >
 1e12004:    20 69             	r0 = b[r4 + 18] (u)
 1e12006:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1EBE : 1e120ee >
 1e12008:    30 78             	r0 = 131
 1e1200a:    25 78             	r5 = 130
 1e1200c:    0a 00             	ssync
 1e1200e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1C80 : 1e11eb0 >
 1e12010:    5f 57             	h[r3 + 42] = r7
 1e12012:    4b 55             	h[r2 + 40] = r3
 1e12014:    50 5f             	r0 = h[r7 + 42] (u)
 1e12016:    50 4e             	r0 = [r7 + 20]
 1e12018:    44 30             	if (r0 != 0) goto 136 <update_target_end+0x1E72 : 1e120a2 >
 1e1201a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E2C : 1e1205c >
 1e1201c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E2E : 1e1205e >
 1e1201e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E30 : 1e12060 >
 1e12020:    20 69             	r0 = b[r4 + 18] (u)
 1e12022:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1EDA : 1e1210a >
 1e12024:    30 78             	r0 = 131
 1e12026:    25 78             	r5 = 130
 1e12028:    0a 00             	ssync
 1e1202a:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1C9C : 1e11ecc >
 1e1202c:    5f 57             	h[r3 + 42] = r7
 1e1202e:    4b 55             	h[r2 + 40] = r3
 1e12030:    50 5f             	r0 = h[r7 + 42] (u)
 1e12032:    50 4e             	r0 = [r7 + 20]
 1e12034:    44 31             	if (r0 != 0) goto -376 <update_target_end+0x1C8E : 1e11ebe >
 1e12036:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E48 : 1e12078 >
 1e12038:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E4A : 1e1207a >
 1e1203a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E4C : 1e1207c >
 1e1203c:    20 69             	r0 = b[r4 + 18] (u)
 1e1203e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1EF6 : 1e12126 >
 1e12040:    30 78             	r0 = 131
 1e12042:    25 78             	r5 = 130
 1e12044:    0a 00             	ssync
 1e12046:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1CB8 : 1e11ee8 >
 1e12048:    5f 41             	[r0 + 84] = r7
 1e1204a:    57 4b             	r7 = [r5 + 84]
 1e1204c:    55 50             	r5 = h[r0 + 10] (u)
 1e1204e:    5f 45             	[r2 + 84] = r7
 1e12050:    4e 20             	if (r0 == 0) goto 156 <update_target_end+0x1EBE : 1e120ee >
 1e12052:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E64 : 1e12094 >
 1e12054:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E66 : 1e12096 >
 1e12056:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E68 : 1e12098 >
 1e12058:    20 69             	r0 = b[r4 + 18] (u)
 1e1205a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1F12 : 1e12142 >
 1e1205c:    30 78             	r0 = 131
 1e1205e:    25 78             	r5 = 130
 1e12060:    0a 00             	ssync
 1e12062:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1CD4 : 1e11f04 >
 1e12064:    5f 41             	[r0 + 84] = r7
 1e12066:    57 4b             	r7 = [r5 + 84]
 1e12068:    55 50             	r5 = h[r0 + 10] (u)
 1e1206a:    5f 50             	h[r0 + 10] = r7
 1e1206c:    5f 49             	[r4 + 84] = r7
 1e1206e:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x1ECA : 1e120fa >
 1e12070:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E82 : 1e120b2 >
 1e12072:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E84 : 1e120b4 >
 1e12074:    20 69             	r0 = b[r4 + 18] (u)
 1e12076:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1F2E : 1e1215e >
 1e12078:    30 78             	r0 = 131
 1e1207a:    25 78             	r5 = 130
 1e1207c:    0a 00             	ssync
 1e1207e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1CF0 : 1e11f20 >
 1e12080:    5f 41             	[r0 + 84] = r7
 1e12082:    57 4b             	r7 = [r5 + 84]
 1e12084:    55 50             	r5 = h[r0 + 10] (u)
 1e12086:    5f 4e             	[r7 + 20] = r7
 1e12088:    5f 49             	[r4 + 84] = r7
 1e1208a:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x1EE6 : 1e12116 >
 1e1208c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1E9E : 1e120ce >
 1e1208e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1EA0 : 1e120d0 >
 1e12090:    20 69             	r0 = b[r4 + 18] (u)
 1e12092:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1F4A : 1e1217a >
 1e12094:    30 78             	r0 = 131
 1e12096:    25 78             	r5 = 130
 1e12098:    0a 00             	ssync
 1e1209a:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1D0C : 1e11f3c >
 1e1209c:    5f 41             	[r0 + 84] = r7
 1e1209e:    57 4b             	r7 = [r5 + 84]
 1e120a0:    55 50             	r5 = h[r0 + 10] (u)
 1e120a2:    5f 4c             	[r6 + 20] = r7
 1e120a4:    45 56             	r5 = h[r3 + 8] (u)
 1e120a6:    45 4c             	r5 = [r6 + 16]
 1e120a8:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1EBA : 1e120ea >
 1e120aa:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1EBC : 1e120ec >
 1e120ac:    20 69             	r0 = b[r4 + 18] (u)
 1e120ae:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1F66 : 1e12196 >
 1e120b0:    30 78             	r0 = 131
 1e120b2:    25 78             	r5 = 130
 1e120b4:    0a 00             	ssync
 1e120b6:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1D28 : 1e11f58 >
 1e120b8:    5f 41             	[r0 + 84] = r7
 1e120ba:    57 4b             	r7 = [r5 + 84]
 1e120bc:    55 50             	r5 = h[r0 + 10] (u)
 1e120be:    5f 50             	h[r0 + 10] = r7
 1e120c0:    5f 50             	h[r0 + 10] = r7
 1e120c2:    4e 44             	[r2 + 16] = r6
 1e120c4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1ED6 : 1e12106 >
 1e120c6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1ED8 : 1e12108 >
 1e120c8:    20 69             	r0 = b[r4 + 18] (u)
 1e120ca:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1F82 : 1e121b2 >
 1e120cc:    30 78             	r0 = 131
 1e120ce:    25 78             	r5 = 130
 1e120d0:    0a 00             	ssync
 1e120d2:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1D44 : 1e11f74 >
 1e120d4:    5f 41             	[r0 + 84] = r7
 1e120d6:    57 4b             	r7 = [r5 + 84]
 1e120d8:    55 50             	r5 = h[r0 + 10] (u)
 1e120da:    5f 4e             	[r7 + 20] = r7
 1e120dc:    5f 50             	h[r0 + 10] = r7
 1e120de:    4e 44             	[r2 + 16] = r6
 1e120e0:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1EF2 : 1e12122 >
 1e120e2:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1EF4 : 1e12124 >
 1e120e4:    20 69             	r0 = b[r4 + 18] (u)
 1e120e6:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1F9E : 1e121ce >
 1e120e8:    30 78             	r0 = 131
 1e120ea:    25 78             	r5 = 130
 1e120ec:    0a 00             	ssync
 1e120ee:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1D60 : 1e11f90 >
 1e120f0:    5f 41             	[r0 + 84] = r7
 1e120f2:    57 4b             	r7 = [r5 + 84]
 1e120f4:    55 50             	r5 = h[r0 + 10] (u)
 1e120f6:    5f 46             	[r3 + 20] = r7
 1e120f8:    4c 54             	h[r2 + 8] = r4
 1e120fa:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x1F2C : 1e1215c >
 1e120fc:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F0E : 1e1213e >
 1e120fe:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F10 : 1e12140 >
 1e12100:    20 69             	r0 = b[r4 + 18] (u)
 1e12102:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1FBA : 1e121ea >
 1e12104:    30 78             	r0 = 131
 1e12106:    25 78             	r5 = 130
 1e12108:    0a 00             	ssync
 1e1210a:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1D7C : 1e11fac >
 1e1210c:    5f 41             	[r0 + 84] = r7
 1e1210e:    57 4b             	r7 = [r5 + 84]
 1e12110:    55 50             	r5 = h[r0 + 10] (u)
 1e12112:    5f 46             	[r3 + 20] = r7
 1e12114:    4c 54             	h[r2 + 8] = r4
 1e12116:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x1F4A : 1e1217a >
 1e12118:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F2A : 1e1215a >
 1e1211a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F2C : 1e1215c >
 1e1211c:    20 69             	r0 = b[r4 + 18] (u)
 1e1211e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1FD6 : 1e12206 >
 1e12120:    30 78             	r0 = 131
 1e12122:    25 78             	r5 = 130
 1e12124:    0a 00             	ssync
 1e12126:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1D98 : 1e11fc8 >
 1e12128:    5f 41             	[r0 + 84] = r7
 1e1212a:    57 4b             	r7 = [r5 + 84]
 1e1212c:    55 50             	r5 = h[r0 + 10] (u)
 1e1212e:    5f 46             	[r3 + 20] = r7
 1e12130:    4c 54             	h[r2 + 8] = r4
 1e12132:    32 20             	if (r0 == 0) goto 100 <update_target_end+0x1F68 : 1e12198 >
 1e12134:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F46 : 1e12176 >
 1e12136:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F48 : 1e12178 >
 1e12138:    20 69             	r0 = b[r4 + 18] (u)
 1e1213a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1FF2 : 1e12222 >
 1e1213c:    30 78             	r0 = 131
 1e1213e:    25 78             	r5 = 130
 1e12140:    0a 00             	ssync
 1e12142:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1DB4 : 1e11fe4 >
 1e12144:    5f 41             	[r0 + 84] = r7
 1e12146:    57 4b             	r7 = [r5 + 84]
 1e12148:    55 50             	r5 = h[r0 + 10] (u)
 1e1214a:    5f 49             	[r4 + 84] = r7
 1e1214c:    4e 53             	h[r1 + 40] = r6
 1e1214e:    45 4c             	r5 = [r6 + 16]
 1e12150:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F62 : 1e12192 >
 1e12152:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F64 : 1e12194 >
 1e12154:    20 69             	r0 = b[r4 + 18] (u)
 1e12156:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x200E : 1e1223e >
 1e12158:    30 78             	r0 = 131
 1e1215a:    25 78             	r5 = 130
 1e1215c:    0a 00             	ssync
 1e1215e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1DD0 : 1e12000 >
 1e12160:    5f 50             	h[r0 + 10] = r7
 1e12162:    4f 52             	h[r1 + 8] = r7
 1e12164:    54 5f             	r4 = h[r7 + 42] (u)
 1e12166:    53 45             	r3 = [r2 + 84]
 1e12168:    4c 30             	if (r0 != 0) goto 152 <update_target_end+0x1FD2 : 1e12202 >
 1e1216a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F7C : 1e121ac >
 1e1216c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F7E : 1e121ae >
 1e1216e:    20 69             	r0 = b[r4 + 18] (u)
 1e12170:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2028 : 1e12258 >
 1e12172:    30 78             	r0 = 131
 1e12174:    25 78             	r5 = 130
 1e12176:    0a 00             	ssync
 1e12178:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1DEA : 1e1201a >
 1e1217a:    5f 50             	h[r0 + 10] = r7
 1e1217c:    4f 52             	h[r1 + 8] = r7
 1e1217e:    54 5f             	r4 = h[r7 + 42] (u)
 1e12180:    53 45             	r3 = [r2 + 84]
 1e12182:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x1DEC : 1e1201c >
 1e12184:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F96 : 1e121c6 >
 1e12186:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1F98 : 1e121c8 >
 1e12188:    20 69             	r0 = b[r4 + 18] (u)
 1e1218a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2042 : 1e12272 >
 1e1218c:    30 78             	r0 = 131
 1e1218e:    25 78             	r5 = 130
 1e12190:    0a 00             	ssync
 1e12192:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1E04 : 1e12034 >
 1e12194:    5f 50             	h[r0 + 10] = r7
 1e12196:    4f 52             	h[r1 + 8] = r7
 1e12198:    54 5f             	r4 = h[r7 + 42] (u)
 1e1219a:    53 45             	r3 = [r2 + 84]
 1e1219c:    4c 32             	if (r1 != 0) goto 152 <update_target_end+0x2006 : 1e12236 >
 1e1219e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FB0 : 1e121e0 >
 1e121a0:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FB2 : 1e121e2 >
 1e121a2:    20 69             	r0 = b[r4 + 18] (u)
 1e121a4:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x205C : 1e1228c >
 1e121a6:    30 78             	r0 = 131
 1e121a8:    25 78             	r5 = 130
 1e121aa:    0a 00             	ssync
 1e121ac:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1E1E : 1e1204e >
 1e121ae:    5f 50             	h[r0 + 10] = r7
 1e121b0:    4f 52             	h[r1 + 8] = r7
 1e121b2:    54 5f             	r4 = h[r7 + 42] (u)
 1e121b4:    53 45             	r3 = [r2 + 84]
 1e121b6:    4c 33             	if (r1 != 0) goto -360 <update_target_end+0x1E20 : 1e12050 >
 1e121b8:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FCA : 1e121fa >
 1e121ba:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FCC : 1e121fc >
 1e121bc:    20 69             	r0 = b[r4 + 18] (u)
 1e121be:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2076 : 1e122a6 >
 1e121c0:    30 78             	r0 = 131
 1e121c2:    25 78             	r5 = 130
 1e121c4:    0a 00             	ssync
 1e121c6:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1E38 : 1e12068 >
 1e121c8:    5f 50             	h[r0 + 10] = r7
 1e121ca:    4f 52             	h[r1 + 8] = r7
 1e121cc:    54 5f             	r4 = h[r7 + 42] (u)
 1e121ce:    53 45             	r3 = [r2 + 84]
 1e121d0:    4c 34             	if (r2 != 0) goto 152 <update_target_end+0x203A : 1e1226a >
 1e121d2:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FE4 : 1e12214 >
 1e121d4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FE6 : 1e12216 >
 1e121d6:    20 69             	r0 = b[r4 + 18] (u)
 1e121d8:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2090 : 1e122c0 >
 1e121da:    30 78             	r0 = 131
 1e121dc:    25 78             	r5 = 130
 1e121de:    0a 00             	ssync
 1e121e0:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1E52 : 1e12082 >
 1e121e2:    5f 50             	h[r0 + 10] = r7
 1e121e4:    4f 52             	h[r1 + 8] = r7
 1e121e6:    54 5f             	r4 = h[r7 + 42] (u)
 1e121e8:    53 45             	r3 = [r2 + 84]
 1e121ea:    4c 35             	if (r2 != 0) goto -360 <update_target_end+0x1E54 : 1e12084 >
 1e121ec:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FFE : 1e1222e >
 1e121ee:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2000 : 1e12230 >
 1e121f0:    20 69             	r0 = b[r4 + 18] (u)
 1e121f2:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x20AA : 1e122da >
 1e121f4:    30 78             	r0 = 131
 1e121f6:    25 78             	r5 = 130
 1e121f8:    0a 00             	ssync
 1e121fa:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1E6C : 1e1209c >
 1e121fc:    5f 50             	h[r0 + 10] = r7
 1e121fe:    4f 52             	h[r1 + 8] = r7
 1e12200:    54 5f             	r4 = h[r7 + 42] (u)
 1e12202:    53 45             	r3 = [r2 + 84]
 1e12204:    4c 36             	if (r3 != 0) goto 152 <update_target_end+0x206E : 1e1229e >
 1e12206:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2018 : 1e12248 >
 1e12208:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x201A : 1e1224a >
 1e1220a:    20 69             	r0 = b[r4 + 18] (u)
 1e1220c:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x20C4 : 1e122f4 >
 1e1220e:    30 78             	r0 = 131
 1e12210:    25 78             	r5 = 130
 1e12212:    0a 00             	ssync
 1e12214:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1E86 : 1e120b6 >
 1e12216:    5f 50             	h[r0 + 10] = r7
 1e12218:    4f 52             	h[r1 + 8] = r7
 1e1221a:    54 5f             	r4 = h[r7 + 42] (u)
 1e1221c:    53 45             	r3 = [r2 + 84]
 1e1221e:    4c 37             	if (r3 != 0) goto -360 <update_target_end+0x1E88 : 1e120b8 >
 1e12220:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2032 : 1e12262 >
 1e12222:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2034 : 1e12264 >
 1e12224:    20 69             	r0 = b[r4 + 18] (u)
 1e12226:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x20DE : 1e1230e >
 1e12228:    30 78             	r0 = 131
 1e1222a:    25 78             	r5 = 130
 1e1222c:    0a 00             	ssync
 1e1222e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1EA0 : 1e120d0 >
 1e12230:    5f 50             	h[r0 + 10] = r7
 1e12232:    4f 52             	h[r1 + 8] = r7
 1e12234:    54 5f             	r4 = h[r7 + 42] (u)
 1e12236:    53 45             	r3 = [r2 + 84]
 1e12238:    4c 38             	if (r4 != 0) goto 152 <update_target_end+0x20A2 : 1e122d2 >
 1e1223a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x204C : 1e1227c >
 1e1223c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x204E : 1e1227e >
 1e1223e:    20 69             	r0 = b[r4 + 18] (u)
 1e12240:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x20F8 : 1e12328 >
 1e12242:    30 78             	r0 = 131
 1e12244:    25 78             	r5 = 130
 1e12246:    0a 00             	ssync
 1e12248:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1EBA : 1e120ea >
 1e1224a:    5f 50             	h[r0 + 10] = r7
 1e1224c:    4f 52             	h[r1 + 8] = r7
 1e1224e:    54 5f             	r4 = h[r7 + 42] (u)
 1e12250:    53 45             	r3 = [r2 + 84]
 1e12252:    4c 39             	if (r4 != 0) goto -360 <update_target_end+0x1EBC : 1e120ec >
 1e12254:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2066 : 1e12296 >
 1e12256:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2068 : 1e12298 >
 1e12258:    20 69             	r0 = b[r4 + 18] (u)
 1e1225a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2112 : 1e12342 >
 1e1225c:    30 78             	r0 = 131
 1e1225e:    25 78             	r5 = 130
 1e12260:    0a 00             	ssync
 1e12262:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1ED4 : 1e12104 >
 1e12264:    5f 50             	h[r0 + 10] = r7
 1e12266:    4f 52             	h[r1 + 8] = r7
 1e12268:    54 5f             	r4 = h[r7 + 42] (u)
 1e1226a:    53 45             	r3 = [r2 + 84]
 1e1226c:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x1ED6 : 1e12106 >
 1e1226e:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x20A0 : 1e122d0 >
 1e12270:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2082 : 1e122b2 >
 1e12272:    20 69             	r0 = b[r4 + 18] (u)
 1e12274:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x212C : 1e1235c >
 1e12276:    30 78             	r0 = 131
 1e12278:    25 78             	r5 = 130
 1e1227a:    0a 00             	ssync
 1e1227c:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1EEE : 1e1211e >
 1e1227e:    5f 50             	h[r0 + 10] = r7
 1e12280:    4f 52             	h[r1 + 8] = r7
 1e12282:    54 5f             	r4 = h[r7 + 42] (u)
 1e12284:    53 45             	r3 = [r2 + 84]
 1e12286:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x1EF0 : 1e12120 >
 1e12288:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x20BC : 1e122ec >
 1e1228a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x209C : 1e122cc >
 1e1228c:    20 69             	r0 = b[r4 + 18] (u)
 1e1228e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2146 : 1e12376 >
 1e12290:    30 78             	r0 = 131
 1e12292:    25 78             	r5 = 130
 1e12294:    0a 00             	ssync
 1e12296:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1F08 : 1e12138 >
 1e12298:    5f 41             	[r0 + 84] = r7
 1e1229a:    50 4f             	r0 = [r7 + 84]
 1e1229c:    52 54             	r2 = h[r2 + 10] (u)
 1e1229e:    5f 53             	h[r1 + 42] = r7
 1e122a0:    45 4c             	r5 = [r6 + 16]
 1e122a2:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x20D4 : 1e12304 >
 1e122a4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x20B6 : 1e122e6 >
 1e122a6:    69 73             	r9 = 54
 1e122a8:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x20BA : 1e122ea >
 1e122aa:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1F6C : 1e1219c >
 1e122ac:    78 0a             	sp += 240
 1e122ae:    00 50             	r0 = h[r0 + 0] (u)
 1e122b0:    33 5f             	r3 = h[r7 + 38] (u)
 1e122b2:    41 50             	r1 = h[r0 + 8] (u)
 1e122b4:    4f 52             	h[r1 + 8] = r7
 1e122b6:    54 5f             	r4 = h[r7 + 42] (u)
 1e122b8:    53 45             	r3 = [r2 + 84]
 1e122ba:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x1F24 : 1e12154 >
 1e122bc:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x20CE : 1e122fe >
 1e122be:    20 69             	r0 = b[r4 + 18] (u)
 1e122c0:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2178 : 1e123a8 >
 1e122c2:    30 78             	r0 = 131
 1e122c4:    25 78             	r5 = 130
 1e122c6:    0a 00             	ssync
 1e122c8:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1F3A : 1e1216a >
 1e122ca:    5f 41             	[r0 + 84] = r7
 1e122cc:    50 4f             	r0 = [r7 + 84]
 1e122ce:    52 54             	r2 = h[r2 + 10] (u)
 1e122d0:    5f 53             	h[r1 + 42] = r7
 1e122d2:    45 4c             	r5 = [r6 + 16]
 1e122d4:    32 20             	if (r0 == 0) goto 100 <update_target_end+0x210A : 1e1233a >
 1e122d6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x20E8 : 1e12318 >
 1e122d8:    69 73             	r9 = 54
 1e122da:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x20EC : 1e1231c >
 1e122dc:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1F9E : 1e121ce >
 1e122de:    78 0a             	sp += 240
 1e122e0:    00 6f             	r0 = b[r7 + 16] (u)
 1e122e2:    74 67             	r4 = b[r3 + 23] (u)
 1e122e4:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x20B6 : 1e122e6 >
 1e122e6:    45 72             	r5 = 36
 1e122e8:    72 6f             	r2 = b[r7 + 23] (u)
 1e122ea:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x21A0 : 1e123d0 >
 1e122ec:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2132 : 1e12362 >
 1e122ee:    5b 53             	h[r1 + 42] = r3
 1e122f0:    59 53             	h[r1 + 42] = r1
 1e122f2:    43 46             	r3 = [r3 + 16]
 1e122f4:    47 5d             	r7 = h[r6 + 40] (u)
 1e122f6:    6b 65             	b[r2 + 22] = r3
 1e122f8:    79 5f             	h[r7 + 46] = r1
 1e122fa:    6d 61             	b[r0 + 22] = r5
 1e122fc:    63 20             	if (r0 == 0) goto 198 <update_target_end+0x2194 : 1e123c4 >
 1e122fe:    61 6c             	r1 = b[r6 + 6] (u)
 1e12300:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x21AA : 1e123da >
 1e12302:    30 0d             	r0 >>>= r4
 1e12304:    0a 00             	ssync
 1e12306:    6f 73             	r15 = 54
 1e12308:    00 73             	r0 = 48
 1e1230a:    79 73             	r9 = 55
 1e1230c:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x20DE : 1e1230e >
 1e1230e:    45 72             	r5 = 36
 1e12310:    72 6f             	r2 = b[r7 + 23] (u)
 1e12312:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x21C8 : 1e123f8 >
 1e12314:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x215A : 1e1238a >
 1e12316:    5b 50             	h[r0 + 10] = r3
 1e12318:    6f 72             	r15 = 38
 1e1231a:    74 5d             	r4 = h[r6 + 46] (u)
 1e1231c:    76 41             	r6 = [r0 + 92]
 1e1231e:    70 70             	r0 = 7
 1e12320:    6c 69             	b[r4 + 22] = r4
 1e12322:    63 61             	r3 = b[r0 + 22] (u)
 1e12324:    74 69             	r4 = b[r4 + 23] (u)
 1e12326:    6f 6e             	b[r7 + 6] = r7
 1e12328:    4d 61             	b[r0 + 20] = r5
 1e1232a:    6c 6c             	b[r6 + 6] = r4
 1e1232c:    6f 63             	b[r1 + 22] = r7
 1e1232e:    46 61             	r6 = b[r0 + 20] (u)
 1e12330:    69 6c             	b[r6 + 6] = r1
 1e12332:    65 64             	r5 = b[r2 + 6] (u)
 1e12334:    48 6f             	b[r7 + 20] = r0
 1e12336:    6f 6b             	b[r5 + 22] = r7
 1e12338:    0d 0a             	sp += 24
 1e1233a:    00 70             	r0 = 0
 1e1233c:    76 50             	r6 = h[r0 + 14] (u)
 1e1233e:    6f 72             	r15 = 38
 1e12340:    74 4d             	r4 = [r6 + 92]
 1e12342:    61 6c             	r1 = b[r6 + 6] (u)
 1e12344:    6c 6f             	b[r7 + 22] = r4
 1e12346:    63 00             	cli r3
 1e12348:    25 73             	r5 = 50
 1e1234a:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1F5C : 1e1218c >
 1e1234c:    64 0a             	sp += 200
 1e1234e:    00 76             	r0 = 96
 1e12350:    50 6f             	r0 = b[r7 + 21] (u)
 1e12352:    72 74             	r2 = 71
 1e12354:    46 72             	r6 = 36
 1e12356:    65 65             	r5 = b[r2 + 22] (u)
 1e12358:    00 73             	r0 = 48
 1e1235a:    79 73             	r9 = 55
 1e1235c:    5f 65             	b[r2 + 21] = r7
 1e1235e:    76 65             	r6 = b[r2 + 23] (u)
 1e12360:    6e 74             	r14 = 70
 1e12362:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x2134 : 1e12364 >
 1e12364:    45 72             	r5 = 36
 1e12366:    72 6f             	r2 = b[r7 + 23] (u)
 1e12368:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x221E : 1e1244e >
 1e1236a:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x21B0 : 1e123e0 >
 1e1236c:    5b 53             	h[r1 + 42] = r3
 1e1236e:    44 46             	r4 = [r3 + 16]
 1e12370:    49 4c             	[r6 + 16] = r1
 1e12372:    45 5d             	r5 = h[r6 + 40] (u)
 1e12374:    73 64             	r3 = b[r2 + 7] (u)
 1e12376:    66 69             	r6 = b[r4 + 22] (u)
 1e12378:    6c 65             	b[r2 + 22] = r4
 1e1237a:    20 67             	r0 = b[r3 + 18] (u)
 1e1237c:    65 74             	r5 = 70
 1e1237e:    5f 76             	r15 = 101
 1e12380:    6d 5f             	h[r7 + 44] = r5
 1e12382:    61 64             	r1 = b[r2 + 6] (u)
 1e12384:    64 72             	r4 = 38
 1e12386:    20 65             	r0 = b[r2 + 18] (u)
 1e12388:    72 72             	r2 = 39
 1e1238a:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1F9E : 1e121ce >
 1e1238c:    21 0d             	r1 >>= r4
 1e1238e:    0a 00             	ssync
 1e12390:    5b 49             	[r4 + 84] = r3
 1e12392:    6e 66             	b[r3 + 6] = r6
 1e12394:    6f 5d             	h[r6 + 44] = r7
 1e12396:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x21DC : 1e1240c >
 1e12398:    5b 53             	h[r1 + 42] = r3
 1e1239a:    44 46             	r4 = [r3 + 16]
 1e1239c:    49 4c             	[r6 + 16] = r1
 1e1239e:    45 5d             	r5 = h[r6 + 40] (u)
 1e123a0:    56 4d             	r6 = [r6 + 84]
 1e123a2:    20 73             	r0 = 50
 1e123a4:    69 7a             	r9 = 166
 1e123a6:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x2242 : 1e12472 >
 1e123a8:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x21BA : 1e123ea >
 1e123aa:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x206C : 1e1229c >
 1e123ac:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x226E : 1e1249e >
 1e123ae:    40 20             	if (r0 == 0) goto 128 <update_target_end+0x2200 : 1e12430 >
 1e123b0:    30 78             	r0 = 131
 1e123b2:    25 78             	r5 = 130
 1e123b4:    0d 0a             	sp += 24
 1e123b6:    00 5b             	r0 = h[r5 + 32] (u)
 1e123b8:    49 6e             	b[r7 + 4] = r1
 1e123ba:    66 6f             	r6 = b[r7 + 22] (u)
 1e123bc:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x2248 : 1e12478 >
 1e123be:    20 5b             	r0 = h[r5 + 36] (u)
 1e123c0:    53 44             	r3 = [r2 + 20]
 1e123c2:    46 49             	r6 = [r4 + 80]
 1e123c4:    4c 45             	[r2 + 80] = r4
 1e123c6:    5d 64             	b[r2 + 5] = r5
 1e123c8:    69 73             	r9 = 54
 1e123ca:    6b 20             	if (r0 == 0) goto 214 <update_target_end+0x2272 : 1e124a2 >
 1e123cc:    63 61             	r3 = b[r0 + 22] (u)
 1e123ce:    70 61             	r0 = b[r0 + 23] (u)
 1e123d0:    63 69             	r3 = b[r4 + 22] (u)
 1e123d2:    74 79             	r4 = 151
 1e123d4:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1FE6 : 1e12216 >
 1e123d6:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x2270 : 1e124a0 >
 1e123d8:    4b 42             	[r1 + 16] = r3
 1e123da:    0d 0a             	sp += 24
 1e123dc:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x21AE : 1e123de >
 1e123de:    45 72             	r5 = 36
 1e123e0:    72 6f             	r2 = b[r7 + 23] (u)
 1e123e2:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x2298 : 1e124c8 >
 1e123e4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x222A : 1e1245a >
 1e123e6:    5b 53             	h[r1 + 42] = r3
 1e123e8:    44 46             	r4 = [r3 + 16]
 1e123ea:    49 4c             	[r6 + 16] = r1
 1e123ec:    45 5d             	r5 = h[r6 + 40] (u)
 1e123ee:    66 69             	r6 = b[r4 + 22] (u)
 1e123f0:    6c 65             	b[r2 + 22] = r4
 1e123f2:    20 68             	r0 = b[r4 + 2] (u)
 1e123f4:    65 61             	r5 = b[r0 + 22] (u)
 1e123f6:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x2290 : 1e124c0 >
 1e123f8:    63 72             	r3 = 38
 1e123fa:    63 20             	if (r0 == 0) goto 198 <update_target_end+0x2292 : 1e124c2 >
 1e123fc:    65 72             	r5 = 38
 1e123fe:    72 2c             	if (r6 == 0) goto 228 <update_target_end+0x22B4 : 1e124e4 >
 1e12400:    61 64             	r1 = b[r2 + 6] (u)
 1e12402:    64 72             	r4 = 38
 1e12404:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x2050 : 1e12280 >
 1e12406:    78 0a             	sp += 240
 1e12408:    0d 0a             	sp += 24
 1e1240a:    00 6c             	r0 = b[r6 + 0] (u)
 1e1240c:    61 73             	r1 = 54
 1e1240e:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x22C8 : 1e124f8 >
 1e12410:    66 69             	r6 = b[r4 + 22] (u)
 1e12412:    6c 65             	b[r2 + 22] = r4
 1e12414:    5f 61             	b[r0 + 21] = r7
 1e12416:    64 64             	r4 = b[r2 + 6] (u)
 1e12418:    72 3a             	if (r5 != 0) goto 228 <update_target_end+0x22CE : 1e124fe >
 1e1241a:    25 78             	r5 = 130
 1e1241c:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x202E : 1e1225e >
 1e1241e:    78 0a             	sp += 240
 1e12420:    00 65             	r0 = b[r2 + 16] (u)
 1e12422:    6e 64             	b[r2 + 6] = r6
 1e12424:    5f 61             	b[r0 + 21] = r7
 1e12426:    64 64             	r4 = b[r2 + 6] (u)
 1e12428:    72 3a             	if (r5 != 0) goto 228 <update_target_end+0x22DE : 1e1250e >
 1e1242a:    25 78             	r5 = 130
 1e1242c:    0a 00             	ssync
 1e1242e:    6d 6e             	b[r7 + 6] = r5
 1e12430:    74 2f             	if (r7 == 0) goto -280 <update_target_end+0x20EA : 1e1231a >
 1e12432:    73 64             	r3 = b[r2 + 7] (u)
 1e12434:    66 69             	r6 = b[r4 + 22] (u)
 1e12436:    6c 65             	b[r2 + 22] = r4
 1e12438:    00 5b             	r0 = h[r5 + 32] (u)
 1e1243a:    44 65             	r4 = b[r2 + 20] (u)
 1e1243c:    62 75             	r2 = 86
 1e1243e:    67 5d             	r7 = h[r6 + 44] (u)
 1e12440:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2286 : 1e124b6 >
 1e12442:    5b 53             	h[r1 + 42] = r3
 1e12444:    44 46             	r4 = [r3 + 16]
 1e12446:    49 4c             	[r6 + 16] = r1
 1e12448:    45 5d             	r5 = h[r6 + 40] (u)
 1e1244a:    73 64             	r3 = b[r2 + 7] (u)
 1e1244c:    66 69             	r6 = b[r4 + 22] (u)
 1e1244e:    6c 65             	b[r2 + 22] = r4
 1e12450:    20 6d             	r0 = b[r6 + 18] (u)
 1e12452:    6f 75             	r15 = 86
 1e12454:    6e 74             	r14 = 70
 1e12456:    20 73             	r0 = 50
 1e12458:    75 63             	r5 = b[r1 + 23] (u)
 1e1245a:    63 0d             	r3 >>= r5
 1e1245c:    0a 00             	ssync
 1e1245e:    5b 44             	[r2 + 20] = r3
 1e12460:    65 62             	r5 = b[r1 + 6] (u)
 1e12462:    75 67             	r5 = b[r3 + 23] (u)
 1e12464:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x22F0 : 1e12520 >
 1e12466:    20 5b             	r0 = h[r5 + 36] (u)
 1e12468:    53 44             	r3 = [r2 + 20]
 1e1246a:    46 49             	r6 = [r4 + 80]
 1e1246c:    4c 45             	[r2 + 80] = r4
 1e1246e:    5d 73             	r13 = 53
 1e12470:    64 66             	r4 = b[r3 + 6] (u)
 1e12472:    69 6c             	b[r6 + 6] = r1
 1e12474:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2310 : 1e12540 >
 1e12476:    6d 6f             	b[r7 + 22] = r5
 1e12478:    75 6e             	r5 = b[r7 + 7] (u)
 1e1247a:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x2334 : 1e12564 >
 1e1247c:    66 61             	r6 = b[r0 + 22] (u)
 1e1247e:    69 6c             	b[r6 + 6] = r1
 1e12480:    65 64             	r5 = b[r2 + 6] (u)
 1e12482:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x2096 : 1e122c6 >
 1e12484:    21 0d             	r1 >>= r4
 1e12486:    0a 00             	ssync
 1e12488:    61 70             	r1 = 6
 1e1248a:    70 00             	sti r0
 1e1248c:    72 65             	r2 = b[r2 + 23] (u)
 1e1248e:    73 00             	sti r3
 1e12490:    3c 45             	[r2 + 76] = r4
 1e12492:    72 72             	r2 = 39
 1e12494:    6f 72             	r15 = 38
 1e12496:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x22E4 : 1e12514 >
 1e12498:    20 5b             	r0 = h[r5 + 36] (u)
 1e1249a:    53 44             	r3 = [r2 + 20]
 1e1249c:    46 49             	r6 = [r4 + 80]
 1e1249e:    4c 45             	[r2 + 80] = r4
 1e124a0:    5d 73             	r13 = 53
 1e124a2:    64 66             	r4 = b[r3 + 6] (u)
 1e124a4:    69 6c             	b[r6 + 6] = r1
 1e124a6:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2342 : 1e12572 >
 1e124a8:    6e 6f             	b[r7 + 22] = r6
 1e124aa:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x2364 : 1e12594 >
 1e124ac:    73 75             	r3 = 87
 1e124ae:    70 70             	r0 = 7
 1e124b0:    6f 72             	r15 = 38
 1e124b2:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x236C : 1e1259c >
 1e124b4:    70 61             	r0 = b[r0 + 23] (u)
 1e124b6:    72 74             	r2 = 71
 1e124b8:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x20CA : 1e122fa >
 1e124ba:    73 0d             	r3 >>>= r5
 1e124bc:    0a 00             	ssync
 1e124be:    5b 44             	[r2 + 20] = r3
 1e124c0:    65 62             	r5 = b[r1 + 6] (u)
 1e124c2:    75 67             	r5 = b[r3 + 23] (u)
 1e124c4:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x2350 : 1e12580 >
 1e124c6:    20 5b             	r0 = h[r5 + 36] (u)
 1e124c8:    53 44             	r3 = [r2 + 20]
 1e124ca:    46 49             	r6 = [r4 + 80]
 1e124cc:    4c 45             	[r2 + 80] = r4
 1e124ce:    5d 4f             	[r7 + 84] = r5
 1e124d0:    70 65             	r0 = b[r2 + 23] (u)
 1e124d2:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0x2380 : 1e125b0 >
 1e124d4:    30 78             	r0 = 131
 1e124d6:    25 78             	r5 = 130
 1e124d8:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0x2302 : 1e12532 >
 1e124da:    5b 25             	if (r2 == 0) goto -330 <update_target_end+0x2162 : 1e12392 >
 1e124dc:    73 5d             	r3 = h[r6 + 46] (u)
 1e124de:    20 46             	r0 = [r3 + 8]
 1e124e0:    61 69             	r1 = b[r4 + 22] (u)
 1e124e2:    6c 21             	if (r0 == 0) goto -296 <update_target_end+0x218C : 1e123bc >
 1e124e4:    20 28             	if (r4 == 0) goto 64 <update_target_end+0x22F6 : 1e12526 >
 1e124e6:    3e 5f             	h[r7 + 38] = r6
 1e124e8:    3c 29             	if (r4 == 0) goto -392 <update_target_end+0x2132 : 1e12362 >
 1e124ea:    0d 0a             	sp += 24
 1e124ec:    00 74             	r0 = 64
 1e124ee:    61 73             	r1 = 54
 1e124f0:    6b 71             	r11 = 22
 1e124f2:    00 28             	if (r4 == 0) goto 0 <update_target_end+0x22C4 : 1e124f4 >
 1e124f4:    6e 75             	r14 = 86
 1e124f6:    6c 6c             	b[r6 + 6] = r4
 1e124f8:    29 00             	swi 1
 1e124fa:    5b 25             	if (r2 == 0) goto -330 <update_target_end+0x2182 : 1e123b2 >
 1e124fc:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x232E : 1e1255e >
 1e124fe:    64 3a             	if (r5 != 0) goto 200 <update_target_end+0x2398 : 1e125c8 >
 1e12500:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x231C : 1e1254c >
 1e12502:    32 64             	r2 = b[r2 + 3] (u)
 1e12504:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x214A : 1e1237a >
 1e12506:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x2338 : 1e12568 >
 1e12508:    64 2e             	if (r7 == 0) goto 200 <update_target_end+0x23A2 : 1e125d2 >
 1e1250a:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x2326 : 1e12556 >
 1e1250c:    33 64             	r3 = b[r2 + 3] (u)
 1e1250e:    5d 00             	testset b[r13]
 1e12510:    28 77             	r8 = 114
 1e12512:    61 72             	r1 = 38
 1e12514:    6e 29             	if (r4 == 0) goto -292 <update_target_end+0x21C2 : 1e123f2 >
 1e12516:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x235C : 1e1258c >
 1e12518:    00 28             	if (r4 == 0) goto 0 <update_target_end+0x22EA : 1e1251a >
 1e1251a:    65 72             	r5 = 38
 1e1251c:    72 6f             	r2 = b[r7 + 23] (u)
 1e1251e:    72 29             	if (r4 == 0) goto -284 <update_target_end+0x21D4 : 1e12404 >
 1e12520:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2366 : 1e12596 >
 1e12522:    00 75             	r0 = 80
 1e12524:    73 72             	r3 = 39
 1e12526:    5f 73             	r15 = 53
 1e12528:    79 73             	r9 = 55
 1e1252a:    74 69             	r4 = b[r4 + 23] (u)
 1e1252c:    6d 65             	b[r2 + 22] = r5
 1e1252e:    72 00             	sti r2
 1e12530:    61 70             	r1 = 6
 1e12532:    70 5f             	r0 = h[r7 + 46] (u)
 1e12534:    63 6f             	r3 = b[r7 + 22] (u)
 1e12536:    72 65             	r2 = b[r2 + 23] (u)
 1e12538:    00 6d             	r0 = b[r6 + 16] (u)
 1e1253a:    6e 74             	r14 = 70
 1e1253c:    2f 73             	r15 = 50
 1e1253e:    64 66             	r4 = b[r3 + 6] (u)
 1e12540:    69 6c             	b[r6 + 6] = r1
 1e12542:    65 2f             	if (r7 == 0) goto -310 <update_target_end+0x21DE : 1e1240e >
 1e12544:    61 70             	r1 = 6
 1e12546:    70 2f             	if (r7 == 0) goto -288 <update_target_end+0x21F8 : 1e12428 >
 1e12548:    63 66             	r3 = b[r3 + 6] (u)
 1e1254a:    67 5f             	r7 = h[r7 + 44] (u)
 1e1254c:    74 6f             	r4 = b[r7 + 23] (u)
 1e1254e:    6f 6c             	b[r6 + 6] = r7
 1e12550:    2e 62             	b[r1 + 2] = r6
 1e12552:    69 6e             	b[r7 + 6] = r1
 1e12554:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x2326 : 1e12556 >
 1e12556:    45 72             	r5 = 36
 1e12558:    72 6f             	r2 = b[r7 + 23] (u)
 1e1255a:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x2410 : 1e12640 >
 1e1255c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x23A2 : 1e125d2 >
 1e1255e:    5b 43             	[r1 + 84] = r3
 1e12560:    46 47             	r6 = [r3 + 80]
 1e12562:    20 42             	r0 = [r1 + 8]
 1e12564:    49 4e             	[r7 + 16] = r1
 1e12566:    5d 6f             	b[r7 + 21] = r5
 1e12568:    70 65             	r0 = b[r2 + 23] (u)
 1e1256a:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0x2418 : 1e12648 >
 1e1256c:    25 73             	r5 = 50
 1e1256e:    20 66             	r0 = b[r3 + 2] (u)
 1e12570:    61 69             	r1 = b[r4 + 22] (u)
 1e12572:    6c 0d             	r12 >>= r5
 1e12574:    0a 00             	ssync
 1e12576:    6d 6e             	b[r7 + 6] = r5
 1e12578:    74 2f             	if (r7 == 0) goto -280 <update_target_end+0x2232 : 1e12462 >
 1e1257a:    73 64             	r3 = b[r2 + 7] (u)
 1e1257c:    66 69             	r6 = b[r4 + 22] (u)
 1e1257e:    6c 65             	b[r2 + 22] = r4
 1e12580:    2f 61             	b[r0 + 18] = r7
 1e12582:    70 70             	r0 = 7
 1e12584:    2f 62             	b[r1 + 2] = r7
 1e12586:    74 69             	r4 = b[r4 + 23] (u)
 1e12588:    66 00             	cli r6
 1e1258a:    3c 45             	[r2 + 76] = r4
 1e1258c:    72 72             	r2 = 39
 1e1258e:    6f 72             	r15 = 38
 1e12590:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x23DE : 1e1260e >
 1e12592:    20 5b             	r0 = h[r5 + 36] (u)
 1e12594:    42 54             	r2 = h[r2 + 8] (u)
 1e12596:    49 46             	[r3 + 16] = r1
 1e12598:    5d 63             	b[r1 + 21] = r5
 1e1259a:    68 65             	b[r2 + 22] = r0
 1e1259c:    63 6b             	r3 = b[r5 + 22] (u)
 1e1259e:    20 69             	r0 = b[r4 + 18] (u)
 1e125a0:    74 65             	r4 = b[r2 + 23] (u)
 1e125a2:    6d 20             	if (r0 == 0) goto 218 <update_target_end+0x244E : 1e1267e >
 1e125a4:    25 64             	r5 = b[r2 + 2] (u)
 1e125a6:    20 65             	r0 = b[r2 + 18] (u)
 1e125a8:    72 72             	r2 = 39
 1e125aa:    21 0d             	r1 >>= r4
 1e125ac:    0a 00             	ssync
 1e125ae:    5b 49             	[r4 + 84] = r3
 1e125b0:    6e 66             	b[r3 + 6] = r6
 1e125b2:    6f 5d             	h[r6 + 44] = r7
 1e125b4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x23FA : 1e1262a >
 1e125b6:    5b 42             	[r1 + 20] = r3
 1e125b8:    54 49             	r4 = [r4 + 84]
 1e125ba:    46 5d             	r6 = h[r6 + 40] (u)
 1e125bc:    25 73             	r5 = 50
 1e125be:    20 40             	r0 = [r0 + 8]
 1e125c0:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x23D2 : 1e12602 >
 1e125c2:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2284 : 1e124b4 >
 1e125c4:    78 0d             	r8 >>>= r5
 1e125c6:    0a 00             	ssync
 1e125c8:    5f 5f             	h[r7 + 42] = r7
 1e125ca:    62 74             	r2 = 70
 1e125cc:    69 66             	b[r3 + 6] = r1
 1e125ce:    5f 61             	b[r0 + 21] = r7
 1e125d0:    72 65             	r2 = b[r2 + 23] (u)
 1e125d2:    61 5f             	r1 = h[r7 + 44] (u)
 1e125d4:    65 72             	r5 = 38
 1e125d6:    61 73             	r1 = 54
 1e125d8:    65 00             	cli r5
 1e125da:    61 6c             	r1 = b[r6 + 6] (u)
 1e125dc:    6c 6f             	b[r7 + 22] = r4
 1e125de:    63 2d             	if (r6 == 0) goto -314 <update_target_end+0x2276 : 1e124a6 >
 1e125e0:    65 72             	r5 = 38
 1e125e2:    31 3a             	if (r5 != 0) goto 98 <update_target_end+0x2416 : 1e12646 >
 1e125e4:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x21F6 : 1e12426 >
 1e125e6:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x24A8 : 1e126d8 >
 1e125e8:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x21FA : 1e1242a >
 1e125ea:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x24AC : 1e126dc >
 1e125ec:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x21FE : 1e1242e >
 1e125ee:    78 0a             	sp += 240
 1e125f0:    00 62             	r0 = b[r1 + 0] (u)
 1e125f2:    74 73             	r4 = 55
 1e125f4:    74 61             	r4 = b[r0 + 23] (u)
 1e125f6:    63 6b             	r3 = b[r5 + 22] (u)
 1e125f8:    5f 6c             	b[r6 + 5] = r7
 1e125fa:    6f 77             	r15 = 118
 1e125fc:    70 77             	r0 = 119
 1e125fe:    65 72             	r5 = 38
 1e12600:    5f 64             	b[r2 + 5] = r7
 1e12602:    65 61             	r5 = b[r0 + 22] (u)
 1e12604:    6c 00             	cli r12
 1e12606:    62 74             	r2 = 70
 1e12608:    73 74             	r3 = 71
 1e1260a:    61 63             	r1 = b[r1 + 22] (u)
 1e1260c:    6b 00             	cli r11
 1e1260e:    62 74             	r2 = 70
 1e12610:    70 72             	r0 = 39
 1e12612:    6f 66             	b[r3 + 6] = r7
 1e12614:    69 6c             	b[r6 + 6] = r1
 1e12616:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x24B2 : 1e126e2 >
 1e12618:    20 71             	r0 = 18
 1e1261a:    66 75             	r6 = 86
 1e1261c:    6c 6c             	b[r6 + 6] = r4
 1e1261e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2464 : 1e12694 >
 1e12620:    25 64             	r5 = b[r2 + 2] (u)
 1e12622:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0x244C : 1e1267c >
 1e12624:    25 64             	r5 = b[r2 + 2] (u)
 1e12626:    0a 00             	ssync
 1e12628:    6c 65             	b[r2 + 22] = r4
 1e1262a:    5f 73             	r15 = 53
 1e1262c:    75 70             	r5 = 7
 1e1262e:    70 6f             	r0 = b[r7 + 23] (u)
 1e12630:    72 74             	r2 = 71
 1e12632:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2278 : 1e124a8 >
 1e12634:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x24F6 : 1e12726 >
 1e12636:    25 78             	r5 = 130
 1e12638:    0a 00             	ssync
 1e1263a:    6c 65             	b[r2 + 22] = r4
 1e1263c:    5f 63             	b[r1 + 21] = r7
 1e1263e:    6f 6e             	b[r7 + 6] = r7
 1e12640:    66 69             	r6 = b[r4 + 22] (u)
 1e12642:    67 3a             	if (r5 != 0) goto 206 <update_target_end+0x24E2 : 1e12712 >
 1e12644:    25 78             	r5 = 130
 1e12646:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x2258 : 1e12488 >
 1e12648:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x250A : 1e1273a >
 1e1264a:    25 78             	r5 = 130
 1e1264c:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x225E : 1e1248e >
 1e1264e:    78 0a             	sp += 240
 1e12650:    00 32             	if (r1 != 0) goto 0 <update_target_end+0x2422 : 1e12652 >
 1e12652:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x2488 : 1e126b8 >
 1e12654:    44 00             	testset b[r4]
 1e12656:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x248C : 1e126bc >
 1e12658:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x248E : 1e126be >
 1e1265a:    32 00             	pc = [sp++]
 1e1265c:    6c 65             	b[r2 + 22] = r4
 1e1265e:    6e 3d             	if (r6 != 0) goto -292 <update_target_end+0x230C : 1e1253c >
 1e12660:    30 3f             	if (r7 != 0) goto -416 <update_target_end+0x2292 : 1e124c2 >
 1e12662:    00 62             	r0 = b[r1 + 0] (u)
 1e12664:    6c 65             	b[r2 + 22] = r4
 1e12666:    5f 65             	b[r2 + 21] = r7
 1e12668:    72 72             	r2 = 39
 1e1266a:    5f 73             	r15 = 53
 1e1266c:    3a 77             	r10 = 115
 1e1266e:    6c 65             	b[r2 + 22] = r4
 1e12670:    6e 3d             	if (r6 != 0) goto -292 <update_target_end+0x231E : 1e1254e >
 1e12672:    25 64             	r5 = b[r2 + 2] (u)
 1e12674:    2c 65             	b[r2 + 18] = r4
 1e12676:    72 72             	r2 = 39
 1e12678:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x22C4 : 1e124f4 >
 1e1267a:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x2514 : 1e12744 >
 1e1267c:    6c 65             	b[r2 + 22] = r4
 1e1267e:    6e 3d             	if (r6 != 0) goto -292 <update_target_end+0x232C : 1e1255c >
 1e12680:    25 64             	r5 = b[r2 + 2] (u)
 1e12682:    0a 00             	ssync
 1e12684:    61 74             	r1 = 70
 1e12686:    74 5f             	r4 = h[r7 + 46] (u)
 1e12688:    64 61             	r4 = b[r0 + 22] (u)
 1e1268a:    74 61             	r4 = b[r0 + 23] (u)
 1e1268c:    5f 62             	b[r1 + 5] = r7
 1e1268e:    75 66             	r5 = b[r3 + 7] (u)
 1e12690:    73 69             	r3 = b[r4 + 23] (u)
 1e12692:    7a 65             	b[r2 + 23] = r2
 1e12694:    20 6e             	r0 = b[r7 + 2] (u)
 1e12696:    6f 74             	r15 = 70
 1e12698:    20 65             	r0 = b[r2 + 18] (u)
 1e1269a:    6e 6f             	b[r7 + 22] = r6
 1e1269c:    75 67             	r5 = b[r3 + 23] (u)
 1e1269e:    68 21             	if (r0 == 0) goto -304 <update_target_end+0x2340 : 1e12570 >
 1e126a0:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x22B4 : 1e124e4 >
 1e126a2:    2c 6e             	b[r7 + 2] = r4
 1e126a4:    65 65             	r5 = b[r2 + 22] (u)
 1e126a6:    64 5f             	r4 = h[r7 + 44] (u)
 1e126a8:    73 69             	r3 = b[r4 + 23] (u)
 1e126aa:    7a 65             	b[r2 + 23] = r2
 1e126ac:    20 3e             	if (r7 != 0) goto 64 <update_target_end+0x24BE : 1e126ee >
 1e126ae:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x24FA : 1e1272a >
 1e126b0:    25 64             	r5 = b[r2 + 2] (u)
 1e126b2:    0a 00             	ssync
 1e126b4:    6c 6f             	b[r7 + 22] = r4
 1e126b6:    63 61             	r3 = b[r0 + 22] (u)
 1e126b8:    6c 5f             	h[r7 + 44] = r4
 1e126ba:    73 65             	r3 = b[r2 + 23] (u)
 1e126bc:    6e 64             	b[r2 + 6] = r6
 1e126be:    62 75             	r2 = 86
 1e126c0:    66 5f             	r6 = h[r7 + 44] (u)
 1e126c2:    73 69             	r3 = b[r4 + 23] (u)
 1e126c4:    7a 65             	b[r2 + 23] = r2
 1e126c6:    20 6e             	r0 = b[r7 + 2] (u)
 1e126c8:    6f 74             	r15 = 70
 1e126ca:    20 65             	r0 = b[r2 + 18] (u)
 1e126cc:    6e 6f             	b[r7 + 22] = r6
 1e126ce:    75 67             	r5 = b[r3 + 23] (u)
 1e126d0:    68 21             	if (r0 == 0) goto -304 <update_target_end+0x2372 : 1e125a2 >
 1e126d2:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x22E6 : 1e12516 >
 1e126d4:    2c 6e             	b[r7 + 2] = r4
 1e126d6:    65 65             	r5 = b[r2 + 22] (u)
 1e126d8:    64 5f             	r4 = h[r7 + 44] (u)
 1e126da:    73 69             	r3 = b[r4 + 23] (u)
 1e126dc:    7a 65             	b[r2 + 23] = r2
 1e126de:    20 3e             	if (r7 != 0) goto 64 <update_target_end+0x24F0 : 1e12720 >
 1e126e0:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x252C : 1e1275c >
 1e126e2:    25 64             	r5 = b[r2 + 2] (u)
 1e126e4:    0a 00             	ssync
 1e126e6:    61 74             	r1 = 70
 1e126e8:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x25A2 : 1e127d2 >
 1e126ea:    64 69             	r4 = b[r4 + 22] (u)
 1e126ec:    73 63             	r3 = b[r1 + 23] (u)
 1e126ee:    6f 6e             	b[r7 + 6] = r7
 1e126f0:    6e 00             	cli r14
 1e126f2:    62 74             	r2 = 70
 1e126f4:    00 67             	r0 = b[r3 + 16] (u)
 1e126f6:    65 74             	r5 = 70
 1e126f8:    20 6c             	r0 = b[r6 + 2] (u)
 1e126fa:    69 6e             	b[r7 + 6] = r1
 1e126fc:    6b 20             	if (r0 == 0) goto 214 <update_target_end+0x25A4 : 1e127d4 >
 1e126fe:    65 72             	r5 = 38
 1e12700:    72 00             	sti r2
 1e12702:    6c 69             	b[r4 + 22] = r4
 1e12704:    6e 6b             	b[r5 + 22] = r6
 1e12706:    5f 6c             	b[r6 + 5] = r7
 1e12708:    61 79             	r1 = 150
 1e1270a:    65 72             	r5 = 38
 1e1270c:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x22DE : 1e1250e >
 1e1270e:    48 32             	if (r1 != 0) goto 144 <update_target_end+0x2570 : 1e127a0 >
 1e12710:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x2546 : 1e12776 >
 1e12712:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x22E4 : 1e12514 >
 1e12714:    48 63             	b[r1 + 20] = r0
 1e12716:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x2548 : 1e12778 >
 1e12718:    00 48             	r0 = [r4 + 0]
 1e1271a:    63 30             	if (r0 != 0) goto 198 <update_target_end+0x25B2 : 1e127e2 >
 1e1271c:    38 63             	b[r1 + 19] = r0
 1e1271e:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x2550 : 1e12780 >
 1e12720:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x22F2 : 1e12522 >
 1e12722:    48 31             	if (r0 != 0) goto -368 <update_target_end+0x2384 : 1e125b4 >
 1e12724:    31 41             	r1 = [r0 + 76]
 1e12726:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x255C : 1e1278c >
 1e12728:    32 31             	if (r0 != 0) goto -412 <update_target_end+0x235E : 1e1258e >
 1e1272a:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x22FC : 1e1252c >
 1e1272c:    48 32             	if (r1 != 0) goto 144 <update_target_end+0x258E : 1e127be >
 1e1272e:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x2300 : 1e12530 >
 1e12730:    48 48             	[r4 + 16] = r0
 1e12732:    00 63             	r0 = b[r1 + 16] (u)
 1e12734:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x2566 : 1e12796 >
 1e12736:    63 30             	if (r0 != 0) goto 198 <update_target_end+0x25CE : 1e127fe >
 1e12738:    34 00             	[--sp] = rets
 1e1273a:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x236E : 1e1259e >
 1e1273c:    32 00             	pc = [sp++]
 1e1273e:    31 63             	r1 = b[r1 + 19] (u)
 1e12740:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x2572 : 1e127a2 >
 1e12742:    00 69             	r0 = b[r4 + 16] (u)
 1e12744:    6e 69             	b[r4 + 22] = r6
 1e12746:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x2600 : 1e12830 >
 1e12748:    72 66             	r2 = b[r3 + 7] (u)
 1e1274a:    5f 6f             	b[r7 + 21] = r7
 1e1274c:    73 63             	r3 = b[r1 + 23] (u)
 1e1274e:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2394 : 1e125c4 >
 1e12750:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2612 : 1e12842 >
 1e12752:    50 4c             	r0 = [r6 + 20]
 1e12754:    4c 5f             	h[r7 + 40] = r4
 1e12756:    63 6f             	r3 = b[r7 + 22] (u)
 1e12758:    6d 70             	r13 = 6
 1e1275a:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x23A0 : 1e125d0 >
 1e1275c:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x261E : 1e1284e >
 1e1275e:    0a 00             	ssync
 1e12760:    62 6c             	r2 = b[r6 + 6] (u)
 1e12762:    65 00             	cli r5
 1e12764:    31 48             	r1 = [r4 + 12]
 1e12766:    31 00             	pc = [sp++]
 1e12768:    31 48             	r1 = [r4 + 12]
 1e1276a:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x233C : 1e1256c >
 1e1276c:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x23A0 : 1e125d0 >
 1e1276e:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x2340 : 1e12570 >
 1e12770:    63 31             	if (r0 != 0) goto -314 <update_target_end+0x2408 : 1e12638 >
 1e12772:    36 00             	[--sp] = rets
 1e12774:    31 48             	r1 = [r4 + 12]
 1e12776:    31 32             	if (r1 != 0) goto 98 <update_target_end+0x25AA : 1e127da >
 1e12778:    32 00             	pc = [sp++]
 1e1277a:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x23AE : 1e125de >
 1e1277c:    31 32             	if (r1 != 0) goto 98 <update_target_end+0x25B0 : 1e127e0 >
 1e1277e:    31 34             	if (r2 != 0) goto 98 <update_target_end+0x25B2 : 1e127e2 >
 1e12780:    00 62             	r0 = b[r1 + 0] (u)
 1e12782:    30 33             	if (r1 != 0) goto -416 <update_target_end+0x23B4 : 1e125e4 >
 1e12784:    00 73             	r0 = 48
 1e12786:    61 76             	r1 = 102
 1e12788:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2624 : 1e12854 >
 1e1278a:    66 72             	r6 = 38
 1e1278c:    61 6d             	r1 = b[r6 + 22] (u)
 1e1278e:    65 5f             	r5 = h[r7 + 44] (u)
 1e12790:    75 73             	r5 = 55
 1e12792:    65 64             	r5 = b[r2 + 6] (u)
 1e12794:    5f 6e             	b[r7 + 5] = r7
 1e12796:    75 6d             	r5 = b[r6 + 23] (u)
 1e12798:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x23E4 : 1e12614 >
 1e1279a:    64 0a             	sp += 200
 1e1279c:    00 3d             	if (r6 != 0) goto -512 <update_target_end+0x236E : 1e1259e >
 1e1279e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23EA : 1e1261a >
 1e127a0:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23EC : 1e1261c >
 1e127a2:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23EE : 1e1261e >
 1e127a4:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23F0 : 1e12620 >
 1e127a6:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23F2 : 1e12622 >
 1e127a8:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23F4 : 1e12624 >
 1e127aa:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23F6 : 1e12626 >
 1e127ac:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x23F8 : 1e12628 >
 1e127ae:    75 70             	r5 = 7
 1e127b0:    64 61             	r4 = b[r0 + 22] (u)
 1e127b2:    74 65             	r4 = b[r2 + 23] (u)
 1e127b4:    5f 70             	r15 = 5
 1e127b6:    61 72             	r1 = 38
 1e127b8:    61 6d             	r1 = b[r6 + 22] (u)
 1e127ba:    5f 6c             	b[r6 + 5] = r7
 1e127bc:    65 6e             	r5 = b[r7 + 6] (u)
 1e127be:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2404 : 1e12634 >
 1e127c0:    64 0a             	sp += 200
 1e127c2:    00 6e             	r0 = b[r7 + 0] (u)
 1e127c4:    65 77             	r5 = 118
 1e127c6:    5f 66             	b[r3 + 5] = r7
 1e127c8:    72 61             	r2 = b[r0 + 23] (u)
 1e127ca:    6d 65             	b[r2 + 22] = r5
 1e127cc:    5f 70             	r15 = 5
 1e127ce:    74 72             	r4 = 39
 1e127d0:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2416 : 1e12646 >
 1e127d2:    78 0a             	sp += 240
 1e127d4:    00 75             	r0 = 80
 1e127d6:    6e 73             	r14 = 54
 1e127d8:    6e 69             	b[r4 + 22] = r6
 1e127da:    66 66             	r6 = b[r3 + 6] (u)
 1e127dc:    5f 61             	b[r0 + 21] = r7
 1e127de:    63 6b             	r3 = b[r5 + 22] (u)
 1e127e0:    5f 31             	if (r0 != 0) goto -322 <update_target_end+0x2470 : 1e126a0 >
 1e127e2:    0a 00             	ssync
 1e127e4:    70 61             	r0 = b[r0 + 23] (u)
 1e127e6:    75 73             	r5 = 55
 1e127e8:    65 5f             	r5 = h[r7 + 44] (u)
 1e127ea:    65 6e             	r5 = b[r7 + 6] (u)
 1e127ec:    63 5f             	r3 = h[r7 + 44] (u)
 1e127ee:    64 65             	r4 = b[r2 + 22] (u)
 1e127f0:    62 75             	r2 = 86
 1e127f2:    67 0a             	sp += 204
 1e127f4:    00 70             	r0 = 0
 1e127f6:    6f 73             	r15 = 54
 1e127f8:    74 5f             	r4 = h[r7 + 46] (u)
 1e127fa:    65 6e             	r5 = b[r7 + 6] (u)
 1e127fc:    63 0a             	sp += 196
 1e127fe:    00 70             	r0 = 0
 1e12800:    72 6f             	r2 = b[r7 + 23] (u)
 1e12802:    62 5f             	r2 = h[r7 + 44] (u)
 1e12804:    65 6e             	r5 = b[r7 + 6] (u)
 1e12806:    63 0a             	sp += 196
 1e12808:    00 0a             	sp += 0
 1e1280a:    0a 0a             	sp += 20
 1e1280c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x2438 : 1e12668 >
 1e1280e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x243A : 1e1266a >
 1e12810:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x243C : 1e1266c >
 1e12812:    2d 66             	b[r3 + 2] = r5
 1e12814:    75 6e             	r5 = b[r7 + 7] (u)
 1e12816:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x245C : 1e1268c >
 1e12818:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x26D0 : 1e12900 >
 1e1281a:    70 61             	r0 = b[r0 + 23] (u)
 1e1281c:    72 6d             	r2 = b[r6 + 23] (u)
 1e1281e:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x2430 : 1e12660 >
 1e12820:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x2632 : 1e12862 >
 1e12822:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x24E4 : 1e12714 >
 1e12824:    78 0a             	sp += 240
 1e12826:    00 5f             	r0 = h[r7 + 32] (u)
 1e12828:    5f 62             	b[r1 + 5] = r7
 1e1282a:    74 5f             	r4 = h[r7 + 46] (u)
 1e1282c:    75 70             	r5 = 7
 1e1282e:    64 61             	r4 = b[r0 + 22] (u)
 1e12830:    74 61             	r4 = b[r0 + 23] (u)
 1e12832:    5f 73             	r15 = 53
 1e12834:    61 76             	r1 = 102
 1e12836:    65 5f             	r5 = h[r7 + 44] (u)
 1e12838:    6c 69             	b[r4 + 22] = r4
 1e1283a:    6e 6b             	b[r5 + 22] = r6
 1e1283c:    5f 69             	b[r4 + 21] = r7
 1e1283e:    6e 66             	b[r3 + 6] = r6
 1e12840:    6f 00             	cli r15
 1e12842:    63 6c             	r3 = b[r6 + 6] (u)
 1e12844:    6b 6f             	b[r7 + 22] = r3
 1e12846:    66 66             	r6 = b[r3 + 6] (u)
 1e12848:    5f 64             	b[r2 + 5] = r7
 1e1284a:    72 69             	r2 = b[r4 + 23] (u)
 1e1284c:    66 74             	r6 = 70
 1e1284e:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2494 : 1e126c4 >
 1e12850:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2712 : 1e12942 >
 1e12852:    25 78             	r5 = 130
 1e12854:    0a 00             	ssync
 1e12856:    62 30             	if (r0 != 0) goto 196 <update_target_end+0x26EC : 1e1291c >
 1e12858:    34 00             	[--sp] = rets
 1e1285a:    62 74             	r2 = 70
 1e1285c:    63 74             	r3 = 70
 1e1285e:    72 6c             	r2 = b[r6 + 7] (u)
 1e12860:    65 72             	r5 = 38
 1e12862:    00 48             	r0 = [r4 + 0]
 1e12864:    34 5f             	r4 = h[r7 + 38] (u)
 1e12866:    43 6f             	r3 = b[r7 + 20] (u)
 1e12868:    6e 74             	r14 = 70
 1e1286a:    72 6f             	r2 = b[r7 + 23] (u)
 1e1286c:    6c 6c             	b[r6 + 6] = r4
 1e1286e:    65 72             	r5 = 38
 1e12870:    00 5b             	r0 = h[r5 + 32] (u)
 1e12872:    44 65             	r4 = b[r2 + 20] (u)
 1e12874:    62 75             	r2 = 86
 1e12876:    67 5d             	r7 = h[r6 + 44] (u)
 1e12878:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x26BE : 1e128ee >
 1e1287a:    5b 4c             	[r6 + 20] = r3
 1e1287c:    42 55             	r2 = h[r2 + 40] (u)
 1e1287e:    46 5d             	r6 = h[r6 + 40] (u)
 1e12880:    6c 62             	b[r1 + 6] = r4
 1e12882:    75 66             	r5 = b[r3 + 7] (u)
 1e12884:    20 6d             	r0 = b[r6 + 18] (u)
 1e12886:    69 73             	r9 = 54
 1e12888:    61 6c             	r1 = b[r6 + 6] (u)
 1e1288a:    67 69             	r7 = b[r4 + 22] (u)
 1e1288c:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0x273A : 1e1296a >
 1e1288e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x26D4 : 1e12904 >
 1e12890:    30 78             	r0 = 131
 1e12892:    25 78             	r5 = 130
 1e12894:    20 2f             	if (r7 == 0) goto -448 <update_target_end+0x24A6 : 1e126d6 >
 1e12896:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x26A8 : 1e128d8 >
 1e12898:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x255A : 1e1278a >
 1e1289a:    78 0d             	r8 >>>= r5
 1e1289c:    0a 00             	ssync
 1e1289e:    3c 45             	[r2 + 76] = r4
 1e128a0:    72 72             	r2 = 39
 1e128a2:    6f 72             	r15 = 38
 1e128a4:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x26F2 : 1e12922 >
 1e128a6:    20 5b             	r0 = h[r5 + 36] (u)
 1e128a8:    4c 42             	[r1 + 16] = r4
 1e128aa:    55 46             	r5 = [r3 + 20]
 1e128ac:    5d 66             	b[r3 + 5] = r5
 1e128ae:    72 65             	r2 = b[r2 + 23] (u)
 1e128b0:    65 2d             	if (r6 == 0) goto -310 <update_target_end+0x254C : 1e1277c >
 1e128b2:    65 72             	r5 = 38
 1e128b4:    72 3a             	if (r5 != 0) goto 228 <update_target_end+0x276A : 1e1299a >
 1e128b6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x24C8 : 1e126f8 >
 1e128b8:    78 0d             	r8 >>>= r5
 1e128ba:    0a 0d             	r10 <<= r4
 1e128bc:    0a 00             	ssync
 1e128be:    52 45             	r2 = [r2 + 84]
 1e128c0:    54 53             	r4 = h[r1 + 42] (u)
 1e128c2:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x24D4 : 1e12704 >
 1e128c4:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x24D6 : 1e12706 >
 1e128c6:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x26F8 : 1e12928 >
 1e128c8:    78 20             	if (r0 == 0) goto 240 <full_table+0x16 : 1e129ba >
 1e128ca:    0d 0a             	sp += 24
 1e128cc:    00 70             	r0 = 0
 1e128ce:    65 6e             	r5 = b[r7 + 6] (u)
 1e128d0:    64 5f             	r4 = h[r7 + 44] (u)
 1e128d2:    66 6f             	r6 = b[r7 + 22] (u)
 1e128d4:    72 5f             	r2 = h[r7 + 46] (u)
 1e128d6:    74 78             	r4 = 135
 1e128d8:    5f 62             	b[r1 + 5] = r7
 1e128da:    75 6c             	r5 = b[r6 + 7] (u)
 1e128dc:    6b 0a             	sp += 212
 1e128de:    00 76             	r0 = 96
 1e128e0:    6d 00             	cli r13
 1e128e2:    73 69             	r3 = b[r4 + 23] (u)
 1e128e4:    6e 67             	b[r3 + 22] = r6
 1e128e6:    6c 65             	b[r2 + 22] = r4
 1e128e8:    20 62             	r0 = b[r1 + 2] (u)
 1e128ea:    61 6e             	r1 = b[r7 + 6] (u)
 1e128ec:    6b 20             	if (r0 == 0) goto 214 <full_table+0x20 : 1e129c4 >
 1e128ee:    75 70             	r5 = 7
 1e128f0:    64 61             	r4 = b[r0 + 22] (u)
 1e128f2:    74 65             	r4 = b[r2 + 23] (u)
 1e128f4:    0a 00             	ssync
 1e128f6:    72 65             	r2 = b[r2 + 23] (u)
 1e128f8:    73 2e             	if (r7 == 0) goto 230 <charge_dev_ops : 1e129e0 >
 1e128fa:    62 69             	r2 = b[r4 + 22] (u)
 1e128fc:    6e 00             	cli r14
 1e128fe:    69 64             	b[r2 + 6] = r1
 1e12900:    6c 65             	b[r2 + 22] = r4
 1e12902:    5f 72             	r15 = 37
 1e12904:    65 61             	r5 = b[r0 + 22] (u)
 1e12906:    64 3a             	if (r5 != 0) goto 200 <full_table+0x2C : 1e129d0 >
 1e12908:    25 78             	r5 = 130
 1e1290a:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x251C : 1e1274c >
 1e1290c:    78 0a             	sp += 240
 1e1290e:    00 3e             	if (r7 != 0) goto 0 <update_target_end+0x26E0 : 1e12910 >
 1e12910:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x275E : 1e1298e >
 1e12912:    6c 6f             	b[r7 + 22] = r4
 1e12914:    61 64             	r1 = b[r2 + 6] (u)
 1e12916:    65 72             	r5 = 38
 1e12918:    5f 6c             	b[r6 + 5] = r7
 1e1291a:    65 6e             	r5 = b[r7 + 6] (u)
 1e1291c:    3a 30             	if (r0 != 0) goto 116 <update_target_end+0x2762 : 1e12992 >
 1e1291e:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x25E0 : 1e12810 >
 1e12920:    78 20             	if (r0 == 0) goto 240 <profile_data+0x12 : 1e12a12 >
 1e12922:    72 65             	r2 = b[r2 + 23] (u)
 1e12924:    73 5f             	r3 = h[r7 + 46] (u)
 1e12926:    61 72             	r1 = 38
 1e12928:    65 61             	r5 = b[r0 + 22] (u)
 1e1292a:    5f 6c             	b[r6 + 5] = r7
 1e1292c:    65 6e             	r5 = b[r7 + 6] (u)
 1e1292e:    3a 30             	if (r0 != 0) goto 116 <full_table : 1e129a4 >
 1e12930:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x25F2 : 1e12822 >
 1e12932:    78 20             	if (r0 == 0) goto 240 <profile_data+0x24 : 1e12a24 >
 1e12934:    74 6f             	r4 = b[r7 + 23] (u)
 1e12936:    74 61             	r4 = b[r0 + 23] (u)
 1e12938:    6c 5f             	h[r7 + 44] = r4
 1e1293a:    6c 65             	b[r2 + 22] = r4
 1e1293c:    6e 3a             	if (r5 != 0) goto 220 <profile_data+0x1A : 1e12a1a >
 1e1293e:    30 78             	r0 = 131
 1e12940:    25 78             	r5 = 130
 1e12942:    0a 00             	ssync
 1e12944:    4c 4f             	[r7 + 80] = r4
 1e12946:    41 44             	r1 = [r2 + 16]
 1e12948:    45 52             	r5 = h[r1 + 8] (u)
 1e1294a:    2e 42             	[r1 + 8] = r6
 1e1294c:    49 4e             	[r7 + 16] = r1
 1e1294e:    00 72             	r0 = 32
 1e12950:    65 73             	r5 = 54
 1e12952:    65 72             	r5 = 38
 1e12954:    76 65             	r6 = b[r2 + 23] (u)
 1e12956:    5f 73             	r15 = 53
 1e12958:    61 64             	r1 = b[r2 + 6] (u)
 1e1295a:    64 72             	r4 = 38
 1e1295c:    3a 30             	if (r0 != 0) goto 116 <full_table+0x2E : 1e129d2 >
 1e1295e:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2620 : 1e12850 >
 1e12960:    78 20             	if (r0 == 0) goto 240 <profile_data+0x52 : 1e12a52 >
 1e12962:    20 6c             	r0 = b[r6 + 2] (u)
 1e12964:    6f 61             	b[r0 + 22] = r7
 1e12966:    64 65             	r4 = b[r2 + 22] (u)
 1e12968:    72 5f             	r2 = h[r7 + 46] (u)
 1e1296a:    61 72             	r1 = 38
 1e1296c:    65 61             	r5 = b[r0 + 22] (u)
 1e1296e:    5f 6c             	b[r6 + 5] = r7
 1e12970:    65 6e             	r5 = b[r7 + 6] (u)
 1e12972:    3a 30             	if (r0 != 0) goto 116 <charge_dev_ops+0x8 : 1e129e8 >
 1e12974:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2636 : 1e12866 >
 1e12976:    78 0a             	sp += 240
 1e12978:    00 76             	r0 = 96
 1e1297a:    6d 5f             	h[r7 + 44] = r5
 1e1297c:    75 70             	r5 = 7
 1e1297e:    64 61             	r4 = b[r0 + 22] (u)
 1e12980:    74 65             	r4 = b[r2 + 23] (u)
 1e12982:    5f 70             	r15 = 5
 1e12984:    61 72             	r1 = 38
 1e12986:    61 6d             	r1 = b[r6 + 22] (u)
 1e12988:    2e 6f             	b[r7 + 18] = r6
 1e1298a:    74 61             	r4 = b[r0 + 23] (u)
 1e1298c:    5f 61             	b[r0 + 21] = r7
 1e1298e:    64 64             	r4 = b[r2 + 6] (u)
 1e12990:    72 3a             	if (r5 != 0) goto 228 <profile_data+0x76 : 1e12a76 >
 1e12992:    30 78             	r0 = 131
 1e12994:    25 78             	r5 = 130
 1e12996:    20 20             	if (r0 == 0) goto 64 <full_table+0x34 : 1e129d8 >
 1e12998:    20 74             	r0 = 66
 1e1299a:    79 70             	r9 = 7
 1e1299c:    65 3a             	if (r5 != 0) goto 202 <profile_data+0x68 : 1e12a68 >
 1e1299e:    30 78             	r0 = 131
 1e129a0:    25 78             	r5 = 130
 1e129a2:    0a 00             	ssync


full_table:
 1e129a4:    7a 0f             	r2 = r7 * r5
 1e129a6:    a2 0f             	r2 = r4 * r6
 1e129a8:    cc 0f             	r4 = r1 * r7
 1e129aa:    f6 0f             	r6 = r6 * r7
 1e129ac:    22 10             	call 68 <charge_dev_ops+0x12 : 1e129f2 >
 1e129ae:    4f 10             	call 158 <profile_data+0x4E : 1e12a4e >
 1e129b0:    7e 10             	call 252 <profile_data+0xAE : 1e12aae >
 1e129b2:    ae 10             	call 348 <app_idle_ops+0x4 : 1e12b10 >
 1e129b4:    d4 10             	call 424 <task_info_table+0x4A : 1e12b5e >
 1e129b6:    fd 10             	call 506 <wk_param+0xA : 1e12bb2 >
 1e129b8:    27 11             	call 590 <adkey_data+0xC : 1e12c08 >
 1e129ba:    52 11             	call 676 <timer_power_ops+0xC : 1e12c60 >
 1e129bc:    78 11             	call 752 <dev_id_list+0x2 : 1e12cae >
 1e129be:    a5 11             	call 842 <dev_id_list+0x5E : 1e12d0a >
 1e129c0:    d4 11             	call 936 <dev_id_list+0xBE : 1e12d6a >
 1e129c2:    03 12             	call 1030 <dev_id_list+0x11E : 1e12dca >
 1e129c4:    00 00             	nop
 1e129c6:    00 00             	nop
 1e129c8:    00 00             	nop
 1e129ca:    00 00             	nop
 1e129cc:    00 00             	nop
 1e129ce:    00 00             	nop
 1e129d0:    00 00             	nop
 1e129d2:    00 00             	nop
 1e129d4:    00 00             	nop
 1e129d6:    00 00             	nop
 1e129d8:    00 00             	nop
 1e129da:    00 00             	nop
 1e129dc:    00 00             	nop
 1e129de:    00 00             	nop


charge_dev_ops:
 1e129e0:    00 00             	nop
 1e129e2:    00 00             	nop
 1e129e4:    56 08             	r6 = r5
 1e129e6:    e0 01             	[--sp] = {psr}
 1e129e8:    00 00             	nop
 1e129ea:    00 00             	nop
 1e129ec:    00 00             	nop
 1e129ee:    00 00             	nop
 1e129f0:    00 00             	nop
 1e129f2:    00 00             	nop
 1e129f4:    00 00             	nop
 1e129f6:    00 00             	nop
 1e129f8:    00 00             	nop
 1e129fa:    00 00             	nop
 1e129fc:    00 00             	nop
 1e129fe:    00 00             	nop


profile_data:
 1e12a00:    0a 00             	ssync
 1e12a02:    02 00             	idle
 1e12a04:    01 00             	nop
 1e12a06:    00 28             	if (r4 == 0) goto 0 <profile_data+0x8 : 1e12a08 >
 1e12a08:    0f 18             	goto 30 <profile_data+0x28 : 1e12a28 >
 1e12a0a:    0d 00             	syscall
 1e12a0c:    02 00             	idle
 1e12a0e:    02 00             	idle
 1e12a10:    03 28             	if (r4 == 0) goto 6 <profile_data+0x18 : 1e12a18 >
 1e12a12:    12 03             	r2 = [sp+68]
 1e12a14:    00 19             	goto 512 <timer_div+0x2 : 1e12c16 >
 1e12a16:    2a 08             	r10 = r2
 1e12a18:    00 12             	call 1024 <dev_id_list+0x16E : 1e12e1a >
 1e12a1a:    01 03             	r1 = [sp+64]
 1e12a1c:    00 19             	goto 512 <timer_div+0xA : 1e12c1e >
 1e12a1e:    2a 0a             	sp += 84
 1e12a20:    00 0a             	sp += 0
 1e12a22:    01 04             	r1 = r0.b0 (u)
 1e12a24:    00 02             	r0 = [sp]
 1e12a26:    29 00             	swi 1
 1e12a28:    00 18             	goto 0 <profile_data+0x2A : 1e12a2a >
 1e12a2a:    00 02             	r0 = [sp]
 1e12a2c:    00 05             	r0 = r4.b0 (u)
 1e12a2e:    00 00             	nop
 1e12a30:    28 ef be d1       	ifs (r8 <= -14) goto 892 <dev_id_list+0x104 : 1e12db0 >
 1e12a34:    fd 94             	r13 = r2 + 15
 1e12a36:    fe ba             	r14 &= 4292870143
 1e12a38:    af 6a             	b[r5 + 10] = r7
 1e12a3a:    4b 69             	b[r4 + 20] = r3
 1e12a3c:    4d 10             	call 154 <connection_param_table+0x18 : 1e12ad8 >
 1e12a3e:    00 c6             	r0 = r0 << 24
 1e12a40:    85 1b             	goto 1802 <gpio_out_regs+0x94 : 1e1314c >
 1e12a42:    00 02             	r0 = [sp]
 1e12a44:    00 06             	r0 = -32
 1e12a46:    00 03             	r0 = [sp+64]
 1e12a48:    28 08             	r8 = r2
 1e12a4a:    07 00             	hbkpt
 1e12a4c:    ef be             	r15 = r7 - r3
 1e12a4e:    d1 fd 94 fe       	r15 <= insert(r14, p:18, l:17)
 1e12a52:    ba af             	r10 = sp + 251
 1e12a54:    6a 4b             	[r5 + 88] = r2
 1e12a56:    69 4d             	[r6 + 88] = r1
 1e12a58:    01 00             	nop
 1e12a5a:    c6 85             	r6 += 92
 1e12a5c:    16 00             	lockset
 1e12a5e:    08 03             	[sp+64] = r0
 1e12a60:    07 00             	hbkpt
 1e12a62:    ef be             	r15 = r7 - r3
 1e12a64:    d1 fd 94 fe       	r15 <= insert(r14, p:18, l:17)
 1e12a68:    ba af             	r10 = sp + 251
 1e12a6a:    6a 4b             	[r5 + 88] = r2
 1e12a6c:    69 4d             	[r6 + 88] = r1
 1e12a6e:    01 00             	nop
 1e12a70:    c6 85             	r6 += 92
 1e12a72:    1b 00             	cli
 1e12a74:    02 00             	idle
 1e12a76:    08 00             	csync
 1e12a78:    03 28             	if (r4 == 0) goto 6 <profile_data+0x80 : 1e12a80 >
 1e12a7a:    10 09             	r0 += r1
 1e12a7c:    00 ef be d1       	ifs (r0 <= -16) goto 892 <dev_id_list+0x150 : 1e12dfc >
 1e12a80:    fd 94             	r13 = r2 + 15
 1e12a82:    fe ba             	r14 &= 4292870143
 1e12a84:    af 6a             	b[r5 + 10] = r7
 1e12a86:    4b 69             	b[r4 + 20] = r3
 1e12a88:    4d 02             	[sp+16] = r5
 1e12a8a:    00 c6             	r0 = r0 << 24
 1e12a8c:    85 16             	call -758 <update_target_end+0x2568 : 1e12798 >
 1e12a8e:    00 10             	call 0 <profile_data+0x90 : 1e12a90 >
 1e12a90:    02 09             	r2 += r0
 1e12a92:    00 ef be d1       	ifs (r0 <= -16) goto 892 <dev_id_list+0x166 : 1e12e12 >
 1e12a96:    fd 94             	r13 = r2 + 15
 1e12a98:    fe ba             	r14 &= 4292870143
 1e12a9a:    af 6a             	b[r5 + 10] = r7
 1e12a9c:    4b 69             	b[r4 + 20] = r3
 1e12a9e:    4d 02             	[sp+16] = r5
 1e12aa0:    00 c6             	r0 = r0 << 24
 1e12aa2:    85 0a             	sp += 264
 1e12aa4:    00 0a             	sp += 0
 1e12aa6:    01 0a             	sp += 0
 1e12aa8:    00 02             	r0 = [sp]
 1e12aaa:    29 00             	swi 1
 1e12aac:    00 00             	nop
 1e12aae:    00 00             	nop


phy_result:
 1e12ab0:    9f 07             	r15 = -7
 1e12ab2:    e1 01             	[--sp] = {psr, reti}
 1e12ab4:    a4 07             	r4 = -6
 1e12ab6:    e1 01             	[--sp] = {psr, reti}
 1e12ab8:    a7 07             	r7 = -6
 1e12aba:    e1 01             	[--sp] = {psr, reti}
 1e12abc:    aa 07             	r10 = -6
 1e12abe:    e1 01             	[--sp] = {psr, reti}


connection_param_table:
 1e12ac0:    10 00             	lockclr
 1e12ac2:    18 00             	cli
 1e12ac4:    0a 00             	ssync
 1e12ac6:    58 02             	[sp+20] = r0
 1e12ac8:    0c 00             	syscall
 1e12aca:    1c 00             	sti
 1e12acc:    0a 00             	ssync
 1e12ace:    58 02             	[sp+20] = r0
 1e12ad0:    08 00             	csync
 1e12ad2:    14 00             	lockset
 1e12ad4:    0a 00             	ssync
 1e12ad6:    58 02             	[sp+20] = r0
 1e12ad8:    05 5a             	r5 = h[r5 + 0] (u)
 1e12ada:    00 00             	nop
 1e12adc:    d0 18             	goto 416 <wdt_time+0x12 : 1e12c7e >
 1e12ade:    e0 01             	[--sp] = {psr}
 1e12ae0:    74 b4             	r4 &= 4294967039
 1e12ae2:    e1 01             	[--sp] = {psr, reti}
 1e12ae4:    01 00             	nop
 1e12ae6:    00 00             	nop
 1e12ae8:    09 5a             	h[r5 + 0] = r1
 1e12aea:    00 00             	nop
 1e12aec:    36 17             	call -404 <update_target_end+0x272A : 1e1295a >
 1e12aee:    e0 01             	[--sp] = {psr}
 1e12af0:    90 b4             	r0 |= 512
 1e12af2:    e1 01             	[--sp] = {psr, reti}
 1e12af4:    01 00             	nop
 1e12af6:    00 00             	nop


led_port:
 1e12af8:    14 07             	r4 = -15
 1e12afa:    16 08             	r6 = r1
 1e12afc:    09 01             	{r9-r4} = [sp++]
 1e12afe:    02 3f             	if (r7 != 0) goto -508 <update_target_end+0x26D4 : 1e12904 >


LED_NUMBER:
 1e12aff:    3f 06             	r15 = -29
 1e12b01:    5b 4f             	[r7 + 84] = r3
 1e12b03:    66 6d             	r6 = b[r6 + 22] (u)
 1e12b05:    7d 07             	r13 = -9
 1e12b07:    7f 6f             	b[r7 + 23] = r7
 1e12b09:    00 00             	nop
 1e12b0b:    00 3c             	if (r6 != 0) goto 0 <app_idle_ops+0x1 : 1e12b0d >


app_idle_ops:
 1e12b0c:    3c 1f             	goto -392 <update_target_end+0x2756 : 1e12986 >
 1e12b0e:    e0 01             	[--sp] = {psr}
 1e12b10:    cc 24             	if (r2 == 0) goto 408 <wdt_time+0x3E : 1e12caa >
 1e12b12:    e0 01             	[--sp] = {psr}


task_info_table:
 1e12b14:    30 25             	if (r2 == 0) goto -416 <update_target_end+0x2746 : 1e12976 >
 1e12b16:    e1 01             	[--sp] = {psr, reti}
 1e12b18:    01 00             	nop
 1e12b1a:    80 02             	r0 = [sp+32]
 1e12b1c:    80 00             	call r0
 1e12b1e:    00 00             	nop
 1e12b20:    59 23             	if (r1 == 0) goto -334 <full_table+0x30 : 1e129d4 >
 1e12b22:    e1 01             	[--sp] = {psr, reti}
 1e12b24:    07 00             	hbkpt
 1e12b26:    00 01             	{r3-r0} = [sp++]
 1e12b28:    00 00             	nop
 1e12b2a:    00 00             	nop
 1e12b2c:    5a 28             	if (r4 == 0) goto 180 <wk_param+0x3A : 1e12be2 >
 1e12b2e:    e1 01             	[--sp] = {psr, reti}
 1e12b30:    04 00             	bkpt
 1e12b32:    00 02             	r0 = [sp]
 1e12b34:    00 01             	{r3-r0} = [sp++]
 1e12b36:    00 00             	nop
 1e12b38:    87 0f             	r7 = r0 * r6
 1e12b3a:    e1 01             	[--sp] = {psr, reti}
 1e12b3c:    01 00             	nop
 1e12b3e:    00 02             	r0 = [sp]
 1e12b40:    80 00             	call r0
 1e12b42:    00 00             	nop
 1e12b44:    06 26             	if (r3 == 0) goto 12 <task_info_table+0x3E : 1e12b52 >
 1e12b46:    e1 01             	[--sp] = {psr, reti}
 1e12b48:    03 00             	idle
 1e12b4a:    00 03             	r0 = [sp+64]
 1e12b4c:    00 01             	{r3-r0} = [sp++]
 1e12b4e:    00 00             	nop
 1e12b50:    27 25             	if (r2 == 0) goto -434 <update_target_end+0x2770 : 1e129a0 >
 1e12b52:    e1 01             	[--sp] = {psr, reti}
 1e12b54:    07 00             	hbkpt
 1e12b56:    80 00             	call r0
 1e12b58:    00 00             	nop
 1e12b5a:    00 00             	nop
 1e12b5c:    92 0f             	r2 = r2 * r6
 1e12b5e:    e1 01             	[--sp] = {psr, reti}
 1e12b60:    01 00             	nop
 1e12b62:    40 01              <unkown instruction>
 1e12b64:    00 00             	nop
 1e12b66:    00 00             	nop
 1e12b68:    8f 0f             	r7 = r1 * r6
 1e12b6a:    e1 01             	[--sp] = {psr, reti}
 1e12b6c:    02 00             	idle
 1e12b6e:    00 01             	{r3-r0} = [sp++]
 1e12b70:    80 00             	call r0
 1e12b72:    00 00             	nop
 1e12b74:    99 0f             	r1 = r3 * r6
 1e12b76:    e1 01             	[--sp] = {psr, reti}
 1e12b78:    01 00             	nop
 1e12b7a:    00 02             	r0 = [sp]
 1e12b7c:    80 00             	call r0
 1e12b7e:    00 00             	nop
 1e12b80:    00 00             	nop
 1e12b82:    00 00             	nop
 1e12b84:    00 00             	nop
 1e12b86:    00 00             	nop
 1e12b88:    00 00             	nop
 1e12b8a:    00 00             	nop


app_spple_ops:
 1e12b8c:    60 27             	if (r3 == 0) goto -320 <profile_data+0x4E : 1e12a4e >
 1e12b8e:    e0 01             	[--sp] = {psr}
 1e12b90:    92 29             	if (r4 == 0) goto -220 <phy_result+0x6 : 1e12ab6 >
 1e12b92:    e0 01             	[--sp] = {psr}
 1e12b94:    ff ff ff ff ff ff 	pc = 4294967295


btif_table:
 1e12b9a:    66 00             	cli r6
 1e12b9c:    06 00             	hbkpt
 1e12b9e:    6e 00             	cli r14
 1e12ba0:    06 00             	hbkpt
 1e12ba2:    00 00             	nop
 1e12ba4:    00 00             	nop
 1e12ba6:    00 00             	nop


wk_param:
 1e12ba8:    00 00             	nop
 1e12baa:    00 00             	nop
 1e12bac:    5b 08             	r11 = r5
 1e12bae:    00 00             	nop
 1e12bb0:    00 00             	nop
 1e12bb2:    00 00             	nop
 1e12bb4:    60 08             	r0 = r6
 1e12bb6:    00 00             	nop
 1e12bb8:    65 08             	r5 = r6
 1e12bba:    00 00             	nop
 1e12bbc:    00 00             	nop
 1e12bbe:    00 00             	nop
 1e12bc0:    00 00             	nop
 1e12bc2:    00 00             	nop
 1e12bc4:    00 00             	nop
 1e12bc6:    00 00             	nop
 1e12bc8:    00 00             	nop
 1e12bca:    00 00             	nop
 1e12bcc:    00 00             	nop
 1e12bce:    00 00             	nop
 1e12bd0:    00 00             	nop
 1e12bd2:    00 00             	nop
 1e12bd4:    00 00             	nop
 1e12bd6:    00 00             	nop
 1e12bd8:    6a 08             	r10 = r6
 1e12bda:    00 00             	nop
 1e12bdc:    6f 08             	r15 = r6
 1e12bde:    00 00             	nop
 1e12be0:    74 08             	r4 = r7
 1e12be2:    00 00             	nop
 1e12be4:    00 00             	nop
 1e12be6:    00 00             	nop
 1e12be8:    00 00             	nop
 1e12bea:    00 00             	nop
 1e12bec:    00 00             	nop
 1e12bee:    00 00             	nop
 1e12bf0:    00 00             	nop
 1e12bf2:    00 00             	nop
 1e12bf4:    ff 01             	[--sp] = {psr, sr4, rets, retx, rete, reti}
 1e12bf6:    ff 03             	[sp+124] = r7
 1e12bf8:    ff 03             	[sp+124] = r7
 1e12bfa:    00 00             	nop


adkey_data:
 1e12bfc:    01 32             	if (r1 != 0) goto 2 <adkey_data+0x4 : 1e12c00 >
 1e12bfe:    01 00             	nop
 1e12c00:    0b 00             	ssync
 1e12c02:    00 00             	nop
 1e12c04:    3d 00             	sp = ssp
 1e12c06:    ad 00             	tbb [r13]
 1e12c08:    00 01             	{r3-r0} = [sp++]
 1e12c0a:    00 00             	nop
 1e12c0c:    fe ff 00 01 02 00 	sp = 131328
 1e12c12:    00 00             	nop


timer_div:
 1e12c14:    01 00             	nop
 1e12c16:    00 00             	nop
 1e12c18:    04 00             	bkpt
 1e12c1a:    00 00             	nop
 1e12c1c:    10 00             	lockclr
 1e12c1e:    00 00             	nop
 1e12c20:    40 00             	testset b[r0]
 1e12c22:    00 00             	nop
 1e12c24:    02 00             	idle
 1e12c26:    00 00             	nop
 1e12c28:    08 00             	csync
 1e12c2a:    00 00             	nop
 1e12c2c:    20 00             	rts
 1e12c2e:    00 00             	nop
 1e12c30:    80 00             	call r0
 1e12c32:    00 00             	nop
 1e12c34:    00 01             	{r3-r0} = [sp++]
 1e12c36:    00 00             	nop
 1e12c38:    00 04             	r0 = r0.b0 (u)
 1e12c3a:    00 00             	nop
 1e12c3c:    00 10             	call 0 <timer_div+0x2A : 1e12c3e >
 1e12c3e:    00 00             	nop
 1e12c40:    00 40             	r0 = [r0 + 0]
 1e12c42:    00 00             	nop
 1e12c44:    00 02             	r0 = [sp]
 1e12c46:    00 00             	nop
 1e12c48:    00 08             	r0 = r0
 1e12c4a:    00 00             	nop
 1e12c4c:    00 20             	if (r0 == 0) goto 0 <timer_div+0x3A : 1e12c4e >
 1e12c4e:    00 00             	nop
 1e12c50:    00 80             	r0 += 0
 1e12c52:    00 00             	nop


timer_power_ops:
 1e12c54:    00 00             	nop
 1e12c56:    00 00             	nop
 1e12c58:    00 00             	nop
 1e12c5a:    00 00             	nop
 1e12c5c:    00 00             	nop
 1e12c5e:    00 00             	nop
 1e12c60:    a4 38             	if (r4 != 0) goto 328 <dev_id_list+0xFE : 1e12daa >
 1e12c62:    e0 01             	[--sp] = {psr}
 1e12c64:    c2 38             	if (r4 != 0) goto 388 <dev_id_list+0x13E : 1e12dea >
 1e12c66:    e0 01             	[--sp] = {psr}
 1e12c68:    00 00             	nop
 1e12c6a:    00 00             	nop


wdt_time:
 1e12c6c:    01 00             	nop
 1e12c6e:    00 00             	nop
 1e12c70:    02 00             	idle
 1e12c72:    00 00             	nop
 1e12c74:    04 00             	bkpt
 1e12c76:    00 00             	nop
 1e12c78:    08 00             	csync
 1e12c7a:    00 00             	nop
 1e12c7c:    10 00             	lockclr
 1e12c7e:    00 00             	nop
 1e12c80:    20 00             	rts
 1e12c82:    00 00             	nop
 1e12c84:    40 00             	testset b[r0]
 1e12c86:    00 00             	nop
 1e12c88:    80 00             	call r0
 1e12c8a:    00 00             	nop
 1e12c8c:    00 01             	{r3-r0} = [sp++]
 1e12c8e:    00 00             	nop
 1e12c90:    00 02             	r0 = [sp]
 1e12c92:    00 00             	nop
 1e12c94:    00 04             	r0 = r0.b0 (u)
 1e12c96:    00 00             	nop
 1e12c98:    00 08             	r0 = r0
 1e12c9a:    00 00             	nop
 1e12c9c:    00 10             	call 0 <wdt_time+0x32 : 1e12c9e >
 1e12c9e:    00 00             	nop
 1e12ca0:    00 20             	if (r0 == 0) goto 0 <wdt_time+0x36 : 1e12ca2 >
 1e12ca2:    00 00             	nop
 1e12ca4:    00 40             	r0 = [r0 + 0]
 1e12ca6:    00 00             	nop
 1e12ca8:    00 80             	r0 += 0
 1e12caa:    00 00             	nop


dev_id_list:
 1e12cac:    44 42             	r4 = [r1 + 16]
 1e12cae:    47 5f             	r7 = h[r7 + 40] (u)
 1e12cb0:    52 45             	r2 = [r2 + 84]
 1e12cb2:    56 00             	testset b[r6]
 1e12cb4:    00 00             	nop
 1e12cb6:    00 00             	nop
 1e12cb8:    00 00             	nop
 1e12cba:    00 00             	nop
 1e12cbc:    00 44             	r0 = [r2 + 0]
 1e12cbe:    42 47             	r2 = [r3 + 80]
 1e12cc0:    5f 41             	[r0 + 84] = r7
 1e12cc2:    4c 4e             	[r7 + 16] = r4
 1e12cc4:    4b 30             	if (r0 != 0) goto 150 <dev_id_list+0xB0 : 1e12d5c >
 1e12cc6:    00 00             	nop
 1e12cc8:    00 00             	nop
 1e12cca:    00 00             	nop
 1e12ccc:    00 01             	{r3-r0} = [sp++]
 1e12cce:    44 42             	r4 = [r1 + 16]
 1e12cd0:    47 5f             	r7 = h[r7 + 40] (u)
 1e12cd2:    41 4c             	r1 = [r6 + 16]
 1e12cd4:    4e 4b             	[r5 + 80] = r6
 1e12cd6:    31 00             	pc = [sp++]
 1e12cd8:    00 00             	nop
 1e12cda:    00 00             	nop
 1e12cdc:    00 00             	nop
 1e12cde:    02 44             	r2 = [r2 + 0]
 1e12ce0:    42 47             	r2 = [r3 + 80]
 1e12ce2:    5f 41             	[r0 + 84] = r7
 1e12ce4:    55 44             	r5 = [r2 + 20]
 1e12ce6:    49 4f             	[r7 + 80] = r1
 1e12ce8:    00 00             	nop
 1e12cea:    00 00             	nop
 1e12cec:    00 00             	nop
 1e12cee:    00 03             	r0 = [sp+64]
 1e12cf0:    44 42             	r4 = [r1 + 16]
 1e12cf2:    47 5f             	r7 = h[r7 + 40] (u)
 1e12cf4:    53 50             	r3 = h[r0 + 10] (u)
 1e12cf6:    44 49             	r4 = [r4 + 80]
 1e12cf8:    46 5f             	r6 = h[r7 + 40] (u)
 1e12cfa:    44 00             	testset b[r4]
 1e12cfc:    00 00             	nop
 1e12cfe:    00 00             	nop
 1e12d00:    04 44             	r4 = [r2 + 0]
 1e12d02:    42 47             	r2 = [r3 + 80]
 1e12d04:    5f 53             	h[r1 + 42] = r7
 1e12d06:    50 44             	r0 = [r2 + 20]
 1e12d08:    49 46             	[r3 + 16] = r1
 1e12d0a:    5f 49             	[r4 + 84] = r7
 1e12d0c:    00 00             	nop
 1e12d0e:    00 00             	nop
 1e12d10:    00 05             	r0 = r4.b0 (u)
 1e12d12:    44 42             	r4 = [r1 + 16]
 1e12d14:    47 5f             	r7 = h[r7 + 40] (u)
 1e12d16:    49 53             	h[r1 + 40] = r1
 1e12d18:    50 00             	testset b[r0]
 1e12d1a:    00 00             	nop
 1e12d1c:    00 00             	nop
 1e12d1e:    00 00             	nop
 1e12d20:    00 00             	nop
 1e12d22:    06 44             	r6 = [r2 + 0]
 1e12d24:    42 47             	r2 = [r3 + 80]
 1e12d26:    5f 50             	h[r0 + 10] = r7
 1e12d28:    41 50             	r1 = h[r0 + 8] (u)
 1e12d2a:    00 00             	nop
 1e12d2c:    00 00             	nop
 1e12d2e:    00 00             	nop
 1e12d30:    00 00             	nop
 1e12d32:    00 07             	r0 = -16
 1e12d34:    44 42             	r4 = [r1 + 16]
 1e12d36:    47 5f             	r7 = h[r7 + 40] (u)
 1e12d38:    50 4c             	r0 = [r6 + 20]
 1e12d3a:    4e 4b             	[r5 + 80] = r6
 1e12d3c:    00 00             	nop
 1e12d3e:    00 00             	nop
 1e12d40:    00 00             	nop
 1e12d42:    00 00             	nop
 1e12d44:    08 44             	[r2 + 0] = r0
 1e12d46:    42 47             	r2 = [r3 + 80]
 1e12d48:    5f 53             	h[r1 + 42] = r7
 1e12d4a:    42 43             	r2 = [r1 + 80]
 1e12d4c:    00 00             	nop
 1e12d4e:    00 00             	nop
 1e12d50:    00 00             	nop
 1e12d52:    00 00             	nop
 1e12d54:    00 09             	r0 += r0
 1e12d56:    44 42             	r4 = [r1 + 16]
 1e12d58:    47 5f             	r7 = h[r7 + 40] (u)
 1e12d5a:    41 41             	r1 = [r0 + 80]
 1e12d5c:    43 00             	testset b[r3]
 1e12d5e:    00 00             	nop
 1e12d60:    00 00             	nop
 1e12d62:    00 00             	nop
 1e12d64:    00 00             	nop
 1e12d66:    0a 44             	[r2 + 0] = r2
 1e12d68:    42 47             	r2 = [r3 + 80]
 1e12d6a:    5f 41             	[r0 + 84] = r7
 1e12d6c:    45 53             	r5 = h[r1 + 40] (u)
 1e12d6e:    00 00             	nop
 1e12d70:    00 00             	nop
 1e12d72:    00 00             	nop
 1e12d74:    00 00             	nop
 1e12d76:    00 0b             	sp += -512
 1e12d78:    44 42             	r4 = [r1 + 16]
 1e12d7a:    47 5f             	r7 = h[r7 + 40] (u)
 1e12d7c:    53 44             	r3 = [r2 + 20]
 1e12d7e:    30 00             	pc = [sp++]
 1e12d80:    00 00             	nop
 1e12d82:    00 00             	nop
 1e12d84:    00 00             	nop
 1e12d86:    00 00             	nop
 1e12d88:    0c 44             	[r2 + 0] = r4
 1e12d8a:    42 47             	r2 = [r3 + 80]
 1e12d8c:    5f 53             	h[r1 + 42] = r7
 1e12d8e:    44 31             	if (r0 != 0) goto -376 <timer_div+0x4 : 1e12c18 >
 1e12d90:    00 00             	nop
 1e12d92:    00 00             	nop
 1e12d94:    00 00             	nop
 1e12d96:    00 00             	nop
 1e12d98:    00 0d             	r0 <<= r4
 1e12d9a:    44 42             	r4 = [r1 + 16]
 1e12d9c:    47 5f             	r7 = h[r7 + 40] (u)
 1e12d9e:    53 50             	r3 = h[r0 + 10] (u)
 1e12da0:    49 30             	if (r0 != 0) goto 146 <dev_id_list+0x188 : 1e12e34 >
 1e12da2:    00 00             	nop
 1e12da4:    00 00             	nop
 1e12da6:    00 00             	nop
 1e12da8:    00 00             	nop
 1e12daa:    0e 44             	[r2 + 0] = r6
 1e12dac:    42 47             	r2 = [r3 + 80]
 1e12dae:    5f 53             	h[r1 + 42] = r7
 1e12db0:    50 49             	r0 = [r4 + 84]
 1e12db2:    31 00             	pc = [sp++]
 1e12db4:    00 00             	nop
 1e12db6:    00 00             	nop
 1e12db8:    00 00             	nop
 1e12dba:    00 0f             	r0 = r0 * r4
 1e12dbc:    44 42             	r4 = [r1 + 16]
 1e12dbe:    47 5f             	r7 = h[r7 + 40] (u)
 1e12dc0:    53 50             	r3 = h[r0 + 10] (u)
 1e12dc2:    49 32             	if (r1 != 0) goto 146 <dev_id_list+0x1AA : 1e12e56 >
 1e12dc4:    00 00             	nop
 1e12dc6:    00 00             	nop
 1e12dc8:    00 00             	nop
 1e12dca:    00 00             	nop
 1e12dcc:    10 44             	r0 = [r2 + 4]
 1e12dce:    42 47             	r2 = [r3 + 80]
 1e12dd0:    5f 55             	h[r2 + 42] = r7
 1e12dd2:    41 52             	r1 = h[r1 + 8] (u)
 1e12dd4:    54 30             	if (r0 != 0) goto 168 <dev_id_list+0x1D2 : 1e12e7e >
 1e12dd6:    57 00             	testset b[r7]
 1e12dd8:    00 00             	nop
 1e12dda:    00 00             	nop
 1e12ddc:    00 11             	call 512 <dev_id_list+0x332 : 1e12fde >
 1e12dde:    44 42             	r4 = [r1 + 16]
 1e12de0:    47 5f             	r7 = h[r7 + 40] (u)
 1e12de2:    55 41             	r5 = [r0 + 84]
 1e12de4:    52 54             	r2 = h[r2 + 10] (u)
 1e12de6:    30 52             	r0 = h[r1 + 6] (u)
 1e12de8:    00 00             	nop
 1e12dea:    00 00             	nop
 1e12dec:    00 00             	nop
 1e12dee:    12 44             	r2 = [r2 + 4]
 1e12df0:    42 47             	r2 = [r3 + 80]
 1e12df2:    5f 55             	h[r2 + 42] = r7
 1e12df4:    41 52             	r1 = h[r1 + 8] (u)
 1e12df6:    54 31             	if (r0 != 0) goto -344 <wdt_time+0x34 : 1e12ca0 >
 1e12df8:    57 00             	testset b[r7]
 1e12dfa:    00 00             	nop
 1e12dfc:    00 00             	nop
 1e12dfe:    00 13             	call 1536 <m_code_addr+0x80 : 1e13400 >
 1e12e00:    44 42             	r4 = [r1 + 16]
 1e12e02:    47 5f             	r7 = h[r7 + 40] (u)
 1e12e04:    55 41             	r5 = [r0 + 84]
 1e12e06:    52 54             	r2 = h[r2 + 10] (u)
 1e12e08:    31 52             	r1 = h[r1 + 6] (u)
 1e12e0a:    00 00             	nop
 1e12e0c:    00 00             	nop
 1e12e0e:    00 00             	nop
 1e12e10:    14 44             	r4 = [r2 + 4]
 1e12e12:    42 47             	r2 = [r3 + 80]
 1e12e14:    5f 55             	h[r2 + 42] = r7
 1e12e16:    41 52             	r1 = h[r1 + 8] (u)
 1e12e18:    54 32             	if (r1 != 0) goto 168 <dev_id_list+0x216 : 1e12ec2 >
 1e12e1a:    57 00             	testset b[r7]
 1e12e1c:    00 00             	nop
 1e12e1e:    00 00             	nop
 1e12e20:    00 15             	call -1536 <update_target_end+0x25F2 : 1e12822 >
 1e12e22:    44 42             	r4 = [r1 + 16]
 1e12e24:    47 5f             	r7 = h[r7 + 40] (u)
 1e12e26:    55 41             	r5 = [r0 + 84]
 1e12e28:    52 54             	r2 = h[r2 + 10] (u)
 1e12e2a:    32 52             	r2 = h[r1 + 6] (u)
 1e12e2c:    00 00             	nop
 1e12e2e:    00 00             	nop
 1e12e30:    00 00             	nop
 1e12e32:    16 44             	r6 = [r2 + 4]
 1e12e34:    42 47             	r2 = [r3 + 80]
 1e12e36:    5f 43             	[r1 + 84] = r7
 1e12e38:    54 4d             	r4 = [r6 + 84]
 1e12e3a:    00 00             	nop
 1e12e3c:    00 00             	nop
 1e12e3e:    00 00             	nop
 1e12e40:    00 00             	nop
 1e12e42:    00 17             	call -512 <timer_div+0x30 : 1e12c44 >
 1e12e44:    44 42             	r4 = [r1 + 16]
 1e12e46:    47 5f             	r7 = h[r7 + 40] (u)
 1e12e48:    41 58             	r1 = h[r4 + 8] (u)
 1e12e4a:    49 5f             	h[r7 + 40] = r1
 1e12e4c:    4d 30             	if (r0 != 0) goto 154 <dev_id_list+0x23C : 1e12ee8 >
 1e12e4e:    00 00             	nop
 1e12e50:    00 00             	nop
 1e12e52:    00 00             	nop
 1e12e54:    80 44             	r0 = [r2 + 32]
 1e12e56:    42 47             	r2 = [r3 + 80]
 1e12e58:    5f 41             	[r0 + 84] = r7
 1e12e5a:    58 49             	[r4 + 84] = r0
 1e12e5c:    5f 4d             	[r6 + 84] = r7
 1e12e5e:    31 00             	pc = [sp++]
 1e12e60:    00 00             	nop
 1e12e62:    00 00             	nop
 1e12e64:    00 81             	r0 += 16
 1e12e66:    44 42             	r4 = [r1 + 16]
 1e12e68:    47 5f             	r7 = h[r7 + 40] (u)
 1e12e6a:    41 58             	r1 = h[r4 + 8] (u)
 1e12e6c:    49 5f             	h[r7 + 40] = r1
 1e12e6e:    4d 32             	if (r1 != 0) goto 154 <dev_id_list+0x25E : 1e12f0a >
 1e12e70:    00 00             	nop
 1e12e72:    00 00             	nop
 1e12e74:    00 00             	nop
 1e12e76:    82 44             	r2 = [r2 + 32]
 1e12e78:    42 47             	r2 = [r3 + 80]
 1e12e7a:    5f 41             	[r0 + 84] = r7
 1e12e7c:    58 49             	[r4 + 84] = r0
 1e12e7e:    5f 4d             	[r6 + 84] = r7
 1e12e80:    33 00             	pc = [sp++]
 1e12e82:    00 00             	nop
 1e12e84:    00 00             	nop
 1e12e86:    00 83             	r0 += 48
 1e12e88:    44 42             	r4 = [r1 + 16]
 1e12e8a:    47 5f             	r7 = h[r7 + 40] (u)
 1e12e8c:    41 58             	r1 = h[r4 + 8] (u)
 1e12e8e:    49 5f             	h[r7 + 40] = r1
 1e12e90:    4d 34             	if (r2 != 0) goto 154 <dev_id_list+0x280 : 1e12f2c >
 1e12e92:    00 00             	nop
 1e12e94:    00 00             	nop
 1e12e96:    00 00             	nop
 1e12e98:    84 44             	r4 = [r2 + 32]
 1e12e9a:    42 47             	r2 = [r3 + 80]
 1e12e9c:    5f 41             	[r0 + 84] = r7
 1e12e9e:    58 49             	[r4 + 84] = r0
 1e12ea0:    5f 4d             	[r6 + 84] = r7
 1e12ea2:    35 00             	[--sp] = rets
 1e12ea4:    00 00             	nop
 1e12ea6:    00 00             	nop
 1e12ea8:    00 85             	r0 += 80
 1e12eaa:    44 42             	r4 = [r1 + 16]
 1e12eac:    47 5f             	r7 = h[r7 + 40] (u)
 1e12eae:    41 58             	r1 = h[r4 + 8] (u)
 1e12eb0:    49 5f             	h[r7 + 40] = r1
 1e12eb2:    4d 36             	if (r3 != 0) goto 154 <dev_id_list+0x2A2 : 1e12f4e >
 1e12eb4:    00 00             	nop
 1e12eb6:    00 00             	nop
 1e12eb8:    00 00             	nop
 1e12eba:    86 44             	r6 = [r2 + 32]
 1e12ebc:    42 47             	r2 = [r3 + 80]
 1e12ebe:    5f 41             	[r0 + 84] = r7
 1e12ec0:    58 49             	[r4 + 84] = r0
 1e12ec2:    5f 4d             	[r6 + 84] = r7
 1e12ec4:    37 00             	[--sp] = rets
 1e12ec6:    00 00             	nop
 1e12ec8:    00 00             	nop
 1e12eca:    00 87             	r0 += 112
 1e12ecc:    44 42             	r4 = [r1 + 16]
 1e12ece:    47 5f             	r7 = h[r7 + 40] (u)
 1e12ed0:    41 58             	r1 = h[r4 + 8] (u)
 1e12ed2:    49 5f             	h[r7 + 40] = r1
 1e12ed4:    4d 38             	if (r4 != 0) goto 154 <dev_id_list+0x2C4 : 1e12f70 >
 1e12ed6:    00 00             	nop
 1e12ed8:    00 00             	nop
 1e12eda:    00 00             	nop
 1e12edc:    88 44             	[r2 + 32] = r0
 1e12ede:    42 47             	r2 = [r3 + 80]
 1e12ee0:    5f 41             	[r0 + 84] = r7
 1e12ee2:    58 49             	[r4 + 84] = r0
 1e12ee4:    5f 4d             	[r6 + 84] = r7
 1e12ee6:    39 00             	cc = 0
 1e12ee8:    00 00             	nop
 1e12eea:    00 00             	nop
 1e12eec:    00 89             	r0 += -112
 1e12eee:    44 42             	r4 = [r1 + 16]
 1e12ef0:    47 5f             	r7 = h[r7 + 40] (u)
 1e12ef2:    41 58             	r1 = h[r4 + 8] (u)
 1e12ef4:    49 5f             	h[r7 + 40] = r1
 1e12ef6:    4d 41             	[r0 + 80] = r5
 1e12ef8:    00 00             	nop
 1e12efa:    00 00             	nop
 1e12efc:    00 00             	nop
 1e12efe:    8a 44             	[r2 + 32] = r2
 1e12f00:    42 47             	r2 = [r3 + 80]
 1e12f02:    5f 41             	[r0 + 84] = r7
 1e12f04:    58 49             	[r4 + 84] = r0
 1e12f06:    5f 4d             	[r6 + 84] = r7
 1e12f08:    42 00             	testset b[r2]
 1e12f0a:    00 00             	nop
 1e12f0c:    00 00             	nop
 1e12f0e:    00 8b             	r0 += -80
 1e12f10:    44 42             	r4 = [r1 + 16]
 1e12f12:    47 5f             	r7 = h[r7 + 40] (u)
 1e12f14:    41 58             	r1 = h[r4 + 8] (u)
 1e12f16:    49 5f             	h[r7 + 40] = r1
 1e12f18:    4d 43             	[r1 + 80] = r5
 1e12f1a:    00 00             	nop
 1e12f1c:    00 00             	nop
 1e12f1e:    00 00             	nop
 1e12f20:    8c 44             	[r2 + 32] = r4
 1e12f22:    42 47             	r2 = [r3 + 80]
 1e12f24:    5f 41             	[r0 + 84] = r7
 1e12f26:    58 49             	[r4 + 84] = r0
 1e12f28:    5f 4d             	[r6 + 84] = r7
 1e12f2a:    44 00             	testset b[r4]
 1e12f2c:    00 00             	nop
 1e12f2e:    00 00             	nop
 1e12f30:    00 8d             	r0 += -48
 1e12f32:    44 42             	r4 = [r1 + 16]
 1e12f34:    47 5f             	r7 = h[r7 + 40] (u)
 1e12f36:    41 58             	r1 = h[r4 + 8] (u)
 1e12f38:    49 5f             	h[r7 + 40] = r1
 1e12f3a:    4d 45             	[r2 + 80] = r5
 1e12f3c:    00 00             	nop
 1e12f3e:    00 00             	nop
 1e12f40:    00 00             	nop
 1e12f42:    8e 44             	[r2 + 32] = r6
 1e12f44:    42 47             	r2 = [r3 + 80]
 1e12f46:    5f 41             	[r0 + 84] = r7
 1e12f48:    58 49             	[r4 + 84] = r0
 1e12f4a:    5f 4d             	[r6 + 84] = r7
 1e12f4c:    46 00             	testset b[r6]
 1e12f4e:    00 00             	nop
 1e12f50:    00 00             	nop
 1e12f52:    00 8f             	r0 += -16
 1e12f54:    44 42             	r4 = [r1 + 16]
 1e12f56:    47 5f             	r7 = h[r7 + 40] (u)
 1e12f58:    55 53             	r5 = h[r1 + 42] (u)
 1e12f5a:    42 00             	testset b[r2]
 1e12f5c:    00 00             	nop
 1e12f5e:    00 00             	nop
 1e12f60:    00 00             	nop
 1e12f62:    00 00             	nop
 1e12f64:    a0 44             	r0 = [r2 + 40]
 1e12f66:    42 47             	r2 = [r3 + 80]
 1e12f68:    5f 42             	[r1 + 20] = r7
 1e12f6a:    54 00             	testset b[r4]
 1e12f6c:    00 00             	nop
 1e12f6e:    00 00             	nop
 1e12f70:    00 00             	nop
 1e12f72:    00 00             	nop
 1e12f74:    00 a2             	r0 = sp + 32
 1e12f76:    44 42             	r4 = [r1 + 16]
 1e12f78:    47 5f             	r7 = h[r7 + 40] (u)
 1e12f7a:    46 46             	r6 = [r3 + 16]
 1e12f7c:    54 00             	testset b[r4]
 1e12f7e:    00 00             	nop
 1e12f80:    00 00             	nop
 1e12f82:    00 00             	nop
 1e12f84:    00 00             	nop
 1e12f86:    a3 44             	r3 = [r2 + 40]
 1e12f88:    42 47             	r2 = [r3 + 80]
 1e12f8a:    5f 45             	[r2 + 84] = r7
 1e12f8c:    51 00             	testset b[r1]
 1e12f8e:    00 00             	nop
 1e12f90:    00 00             	nop
 1e12f92:    00 00             	nop
 1e12f94:    00 00             	nop
 1e12f96:    00 a4             	r0 = sp + 64
 1e12f98:    44 42             	r4 = [r1 + 16]
 1e12f9a:    47 5f             	r7 = h[r7 + 40] (u)
 1e12f9c:    46 49             	r6 = [r4 + 80]
 1e12f9e:    52 00             	testset b[r2]
 1e12fa0:    00 00             	nop
 1e12fa2:    00 00             	nop
 1e12fa4:    00 00             	nop
 1e12fa6:    00 00             	nop
 1e12fa8:    a5 44             	r5 = [r2 + 40]
 1e12faa:    42 47             	r2 = [r3 + 80]
 1e12fac:    5f 43             	[r1 + 84] = r7
 1e12fae:    50 55             	r0 = h[r2 + 42] (u)
 1e12fb0:    30 5f             	r0 = h[r7 + 38] (u)
 1e12fb2:    57 52             	r7 = h[r1 + 10] (u)
 1e12fb4:    00 00             	nop
 1e12fb6:    00 00             	nop
 1e12fb8:    00 f0 44 42       	if ((r0 & r0) == 0) goto 33928 <update_code_start+0x58 : 1e1b444 >
 1e12fbc:    47 5f             	r7 = h[r7 + 40] (u)
 1e12fbe:    43 50             	r3 = h[r0 + 8] (u)
 1e12fc0:    55 30             	if (r0 != 0) goto 170 <group_item_table : 1e1306c >
 1e12fc2:    5f 52             	h[r1 + 10] = r7
 1e12fc4:    44 00             	testset b[r4]
 1e12fc6:    00 00             	nop
 1e12fc8:    00 00             	nop
 1e12fca:    f1 44             	r1 = [r2 + 60]
 1e12fcc:    42 47             	r2 = [r3 + 80]
 1e12fce:    5f 43             	[r1 + 84] = r7
 1e12fd0:    50 55             	r0 = h[r2 + 42] (u)
 1e12fd2:    30 5f             	r0 = h[r7 + 38] (u)
 1e12fd4:    49 46             	[r3 + 16] = r1
 1e12fd6:    00 00             	nop
 1e12fd8:    00 00             	nop
 1e12fda:    00 f2 44 42       	if (r0 ?? r0) goto 1160 <m_code_addr+0xE6 : 1e13466 >
 1e12fde:    47 5f             	r7 = h[r7 + 40] (u)
 1e12fe0:    53 44             	r3 = [r2 + 20]
 1e12fe2:    54 41             	r4 = [r0 + 84]
 1e12fe4:    50 00             	testset b[r0]
 1e12fe6:    00 00             	nop
 1e12fe8:    00 00             	nop
 1e12fea:    00 00             	nop
 1e12fec:    ff 4d             	[r6 + 124] = r7
 1e12fee:    53 47             	r3 = [r3 + 84]
 1e12ff0:    5f 4e             	[r7 + 20] = r7
 1e12ff2:    55 4c             	r5 = [r6 + 20]
 1e12ff4:    4c 00             	testset b[r12]
 1e12ff6:    00 00             	nop
 1e12ff8:    00 00             	nop
 1e12ffa:    00 00             	nop
 1e12ffc:    00 ff 00 00 66 6c 	if (r0 == 0) goto 55500 <bank_code_load_addr+0x1CBA : 1e208ce >


flash_powerup_ok_flash:
 1e13000:    66 6c             	r6 = b[r6 + 6] (u)
 1e13002:    61 73             	r1 = 54
 1e13004:    68 5f             	h[r7 + 44] = r0
 1e13006:    70 6f             	r0 = b[r7 + 23] (u)
 1e13008:    77 65             	r7 = b[r2 + 23] (u)
 1e1300a:    72 75             	r2 = 87
 1e1300c:    70 5f             	r0 = h[r7 + 46] (u)
 1e1300e:    6f 6b             	b[r5 + 22] = r7
 1e13010:    00 00             	nop
 1e13012:    00 00             	nop
 1e13014:    00 00             	nop
 1e13016:    00 00             	nop
 1e13018:    00 00             	nop
 1e1301a:    00 00             	nop
 1e1301c:    00 00             	nop
 1e1301e:    00 00             	nop


PB_valid:
 1e13020:    00 01             	{r3-r0} = [sp++]
 1e13022:    02 03             	r2 = [sp+64]
 1e13024:    04 05             	r4 = r4.b0 (u)
 1e13026:    06 07             	r6 = -16
 1e13028:    08 09             	r8 += r0


PA_map_tbl:
 1e1302a:    01 02             	r1 = [sp]
 1e1302c:    03 04             	r3 = r0.b0 (u)
 1e1302e:    05 06             	r5 = -32
 1e13030:    07 08             	r7 = r0
 1e13032:    09 0a             	sp += 16


PB_map_tbl:
 1e13034:    0b 0c             	r11 <<= r0
 1e13036:    0d 0e             	r5 = r1 * r0
 1e13038:    0f 10             	call 30 <sys_power_ops+0xC : 1e13058 >
 1e1303a:    11 12             	call 1058 <m_code_addr+0xDE : 1e1345e >
 1e1303c:    13 14             	call -2010 <update_target_end+0x2634 : 1e12864 >


PD_valid:
 1e1303e:    00 01             	{r3-r0} = [sp++]
 1e13040:    02 03             	r2 = [sp+64]
 1e13042:    04 15             	call -1528 <profile_data+0x4C : 1e12a4c >


PD_map_tbl:
 1e13043:    15 16             	call -982 <wdt_time+0x3 : 1e12c6f >
 1e13045:    17 18             	goto 46 <bluetooth_base_uuid+0x3 : 1e13075 >
 1e13047:    19 38             	if (r4 != 0) goto 50 <bluetooth_base_uuid+0x9 : 1e1307b >


WSIG_to_PANA:
 1e13048:    38 37             	if (r3 != 0) goto -400 <dev_id_list+0x20E : 1e12eba >
 1e1304a:    35 00             	[--sp] = rets


sys_power_ops:
 1e1304c:    00 00             	nop
 1e1304e:    00 00             	nop
 1e13050:    8c e3 e0 01       	if (r12 == 56) goto 960 <m_code_addr+0x94 : 1e13414 >
 1e13054:    00 00             	nop
 1e13056:    00 00             	nop
 1e13058:    14 e4 e0 01       	if (r4 == 65) goto 960 <m_code_addr+0x9C : 1e1341c >
 1e1305c:    2c e4 e0 01       	if (r12 == 66) goto 960 <m_code_addr+0xA0 : 1e13420 >
 1e13060:    00 00             	nop
 1e13062:    00 00             	nop


log_str:
 1e13064:    10 25             	if (r2 == 0) goto -480 <dev_id_list+0x1DA : 1e12e86 >
 1e13066:    e1 01             	[--sp] = {psr, reti}
 1e13068:    19 25             	if (r2 == 0) goto -462 <dev_id_list+0x1F0 : 1e12e9c >
 1e1306a:    e1 01             	[--sp] = {psr, reti}


group_item_table:
 1e1306c:    65 00             	cli r5
 1e1306e:    20 00             	rts
 1e13070:    14 00             	lockset


bluetooth_base_uuid:
 1e13072:    fb 34             	if (r2 != 0) goto 502 <gpio_out_regs+0x1B2 : 1e1326a >
 1e13074:    9b 5f             	h[r7 + 50] = r3
 1e13076:    80 00             	call r0
 1e13078:    00 80             	r0 += 0
 1e1307a:    00 10             	call 0 <bluetooth_base_uuid+0xA : 1e1307c >
 1e1307c:    00 00             	nop
 1e1307e:    00 00             	nop
 1e13080:    00 00             	nop
 1e13082:    00 18             	goto 0 <bluetooth_base_uuid+0x12 : 1e13084 >
 1e13084:    4e 00             	testset b[r14]
 1e13086:    00 00             	nop
 1e13088:    00 00             	nop
 1e1308a:    ff ff 00 f0 ff ff 	pc = 4294963200
 1e13090:    00 ff ff ff c9 00 	if (r15 == -1) goto 402 <gpio_out_regs+0x170 : 1e13228 >
 1e13096:    00 00             	nop
 1e13098:    c8 00             	pfetch [r8]
 1e1309a:    00 00             	nop
 1e1309c:    cc 00             	pfetch [r12]
 1e1309e:    00 00             	nop
 1e130a0:    01 02             	r1 = [sp]
 1e130a2:    04 08             	r4 = r0
 1e130a4:    01 03             	r1 = [sp+64]
 1e130a6:    05 07             	r5 = -16


gpio_regs:
 1e130a8:    00 50             	r0 = h[r0 + 0] (u)
 1e130aa:    1e 00             	sti
 1e130ac:    00 51             	r0 = h[r0 + 32] (u)
 1e130ae:    1e 00             	sti
 1e130b0:    00 53             	r0 = h[r1 + 32] (u)
 1e130b2:    1e 00             	sti
 1e130b4:    00 59             	r0 = h[r4 + 32] (u)
 1e130b6:    1e 00             	sti


gpio_out_regs:
 1e130b8:    00 56             	r0 = h[r3 + 0] (u)
 1e130ba:    1e 00             	sti
 1e130bc:    28 56             	h[r3 + 4] = r0
 1e130be:    1e 00             	sti
 1e130c0:    50 56             	r0 = h[r3 + 10] (u)
 1e130c2:    1e 00             	sti
 1e130c4:    74 56             	r4 = h[r3 + 14] (u)
 1e130c6:    1e 00             	sti
 1e130c8:    00 00             	nop
 1e130ca:    00 00             	nop
 1e130cc:    00 00             	nop
 1e130ce:    00 00             	nop
 1e130d0:    0d 0a             	sp += 24
 1e130d2:    0d 0a             	sp += 24
 1e130d4:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x284 : 1e12f30 >
 1e130d6:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x286 : 1e12f32 >
 1e130d8:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x288 : 1e12f34 >
 1e130da:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x28A : 1e12f36 >
 1e130dc:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x28C : 1e12f38 >
 1e130de:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x28E : 1e12f3a >
 1e130e0:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x290 : 1e12f3c >
 1e130e2:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x292 : 1e12f3e >
 1e130e4:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x294 : 1e12f40 >
 1e130e6:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x296 : 1e12f42 >
 1e130e8:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x298 : 1e12f44 >
 1e130ea:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x29A : 1e12f46 >
 1e130ec:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x29C : 1e12f48 >
 1e130ee:    2d 77             	r13 = 114
 1e130f0:    61 74             	r1 = 70
 1e130f2:    63 68             	r3 = b[r4 + 6] (u)
 1e130f4:    64 6f             	r4 = b[r7 + 22] (u)
 1e130f6:    67 2d             	if (r6 == 0) goto -306 <dev_id_list+0x31A : 1e12fc6 >
 1e130f8:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2A8 : 1e12f54 >
 1e130fa:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2AA : 1e12f56 >
 1e130fc:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2AC : 1e12f58 >
 1e130fe:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2AE : 1e12f5a >
 1e13100:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B0 : 1e12f5c >
 1e13102:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B2 : 1e12f5e >
 1e13104:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B4 : 1e12f60 >
 1e13106:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B6 : 1e12f62 >
 1e13108:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B8 : 1e12f64 >
 1e1310a:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2BA : 1e12f66 >
 1e1310c:    0d 0a             	sp += 24
 1e1310e:    0d 00             	syscall
 1e13110:    50 33             	if (r1 != 0) goto -352 <dev_id_list+0x306 : 1e12fb2 >
 1e13112:    33 20             	if (r0 == 0) goto 102 <gpio_out_regs+0xC2 : 1e1317a >
 1e13114:    50 4f             	r0 = [r7 + 84]
 1e13116:    57 45             	r7 = [r2 + 84]
 1e13118:    52 20             	if (r0 == 0) goto 164 <gpio_out_regs+0x106 : 1e131be >
 1e1311a:    52 45             	r2 = [r2 + 84]
 1e1311c:    54 55             	r4 = h[r2 + 42] (u)
 1e1311e:    52 4e             	r2 = [r7 + 20]
 1e13120:    00 00             	nop
 1e13122:    00 00             	nop
 1e13124:    00 00             	nop
 1e13126:    00 00             	nop
 1e13128:    00 00             	nop
 1e1312a:    00 00             	nop
 1e1312c:    00 00             	nop
 1e1312e:    00 00             	nop
 1e13130:    50 31             	if (r0 != 0) goto -352 <dev_id_list+0x326 : 1e12fd2 >
 1e13132:    31 20             	if (r0 == 0) goto 98 <gpio_out_regs+0xDE : 1e13196 >
 1e13134:    53 59             	r3 = h[r4 + 42] (u)
 1e13136:    53 20             	if (r0 == 0) goto 166 <gpio_out_regs+0x126 : 1e131de >
 1e13138:    52 45             	r2 = [r2 + 84]
 1e1313a:    53 45             	r3 = [r2 + 84]
 1e1313c:    54 20             	if (r0 == 0) goto 168 <gpio_out_regs+0x12E : 1e131e6 >
 1e1313e:    4d 41             	[r0 + 80] = r5
 1e13140:    53 4b             	r3 = [r5 + 84]
 1e13142:    00 00             	nop
 1e13144:    00 00             	nop
 1e13146:    00 00             	nop
 1e13148:    00 00             	nop
 1e1314a:    00 00             	nop
 1e1314c:    00 00             	nop
 1e1314e:    00 00             	nop
 1e13150:    50 33             	if (r1 != 0) goto -352 <dev_id_list+0x346 : 1e12ff2 >
 1e13152:    33 20             	if (r0 == 0) goto 102 <gpio_out_regs+0x102 : 1e131ba >
 1e13154:    53 59             	r3 = h[r4 + 42] (u)
 1e13156:    53 20             	if (r0 == 0) goto 166 <gpio_out_regs+0x146 : 1e131fe >
 1e13158:    53 4f             	r3 = [r7 + 84]
 1e1315a:    46 54             	r6 = h[r2 + 8] (u)
 1e1315c:    20 52             	r0 = h[r1 + 4] (u)
 1e1315e:    45 53             	r5 = h[r1 + 40] (u)
 1e13160:    45 54             	r5 = h[r2 + 8] (u)
 1e13162:    20 3a             	if (r5 != 0) goto 64 <gpio_out_regs+0xEC : 1e131a4 >
 1e13164:    20 50             	r0 = h[r0 + 4] (u)
 1e13166:    33 5f             	r3 = h[r7 + 38] (u)
 1e13168:    50 52             	r0 = h[r1 + 10] (u)
 1e1316a:    5f 50             	h[r0 + 10] = r7
 1e1316c:    57 52             	r7 = h[r1 + 10] (u)
 1e1316e:    5b 34             	if (r2 != 0) goto 182 <gpio_out_regs+0x16E : 1e13226 >
 1e13170:    5d 3d             	if (r6 != 0) goto -326 <PA_map_tbl+0x2 : 1e1302c >
 1e13172:    31 00             	pc = [sp++]
 1e13174:    00 00             	nop
 1e13176:    00 00             	nop
 1e13178:    00 00             	nop
 1e1317a:    00 00             	nop
 1e1317c:    00 00             	nop
 1e1317e:    00 00             	nop
 1e13180:    73 6f             	r3 = b[r7 + 23] (u)
 1e13182:    66 74             	r6 = 70
 1e13184:    5f 72             	r15 = 37
 1e13186:    65 73             	r5 = 54
 1e13188:    65 74             	r5 = 70
 1e1318a:    5f 65             	b[r2 + 21] = r7
 1e1318c:    78 63             	b[r1 + 23] = r0
 1e1318e:    65 70             	r5 = 6
 1e13190:    74 69             	r4 = b[r4 + 23] (u)
 1e13192:    6f 6e             	b[r7 + 6] = r7
 1e13194:    00 00             	nop
 1e13196:    00 00             	nop
 1e13198:    00 00             	nop
 1e1319a:    00 00             	nop
 1e1319c:    00 00             	nop
 1e1319e:    00 00             	nop
 1e131a0:    50 31             	if (r0 != 0) goto -352 <PD_valid+0x4 : 1e13042 >
 1e131a2:    31 20             	if (r0 == 0) goto 98 <gpio_out_regs+0x14E : 1e13206 >
 1e131a4:    50 4f             	r0 = [r7 + 84]
 1e131a6:    57 45             	r7 = [r2 + 84]
 1e131a8:    52 20             	if (r0 == 0) goto 164 <gpio_out_regs+0x196 : 1e1324e >
 1e131aa:    52 45             	r2 = [r2 + 84]
 1e131ac:    54 55             	r4 = h[r2 + 42] (u)
 1e131ae:    52 4e             	r2 = [r7 + 20]
 1e131b0:    00 00             	nop
 1e131b2:    00 00             	nop
 1e131b4:    00 00             	nop
 1e131b6:    00 00             	nop
 1e131b8:    00 00             	nop
 1e131ba:    00 00             	nop
 1e131bc:    00 00             	nop
 1e131be:    00 00             	nop
 1e131c0:    50 33             	if (r1 != 0) goto -352 <sys_power_ops+0x16 : 1e13062 >
 1e131c2:    33 20             	if (r0 == 0) goto 102 <gpio_out_regs+0x172 : 1e1322a >
 1e131c4:    53 4f             	r3 = [r7 + 84]
 1e131c6:    46 54             	r6 = h[r2 + 8] (u)
 1e131c8:    20 52             	r0 = h[r1 + 4] (u)
 1e131ca:    45 53             	r5 = h[r1 + 40] (u)
 1e131cc:    45 54             	r5 = h[r2 + 8] (u)
 1e131ce:    20 50             	r0 = h[r0 + 4] (u)
 1e131d0:    31 31             	if (r0 != 0) goto -414 <PB_map_tbl : 1e13034 >
 1e131d2:    20 3a             	if (r5 != 0) goto 64 <gpio_out_regs+0x15C : 1e13214 >
 1e131d4:    20 50             	r0 = h[r0 + 4] (u)
 1e131d6:    33 5f             	r3 = h[r7 + 38] (u)
 1e131d8:    49 56             	h[r3 + 8] = r1
 1e131da:    53 5f             	r3 = h[r7 + 42] (u)
 1e131dc:    43 4c             	r3 = [r6 + 16]
 1e131de:    52 5b             	r2 = h[r5 + 42] (u)
 1e131e0:    35 5d             	r5 = h[r6 + 38] (u)
 1e131e2:    3d 31             	if (r0 != 0) goto -390 <sys_power_ops+0x12 : 1e1305e >
 1e131e4:    00 00             	nop
 1e131e6:    00 00             	nop
 1e131e8:    00 00             	nop
 1e131ea:    00 00             	nop
 1e131ec:    00 00             	nop
 1e131ee:    00 00             	nop
 1e131f0:    50 31             	if (r0 != 0) goto -352 <bluetooth_base_uuid+0x20 : 1e13092 >
 1e131f2:    31 20             	if (r0 == 0) goto 98 <gpio_out_regs+0x19E : 1e13256 >
 1e131f4:    53 59             	r3 = h[r4 + 42] (u)
 1e131f6:    53 20             	if (r0 == 0) goto 166 <gpio_out_regs+0x1E6 : 1e1329e >
 1e131f8:    53 4f             	r3 = [r7 + 84]
 1e131fa:    46 54             	r6 = h[r2 + 8] (u)
 1e131fc:    20 52             	r0 = h[r1 + 4] (u)
 1e131fe:    45 53             	r5 = h[r1 + 40] (u)
 1e13200:    45 54             	r5 = h[r2 + 8] (u)
 1e13202:    20 3a             	if (r5 != 0) goto 64 <gpio_out_regs+0x18C : 1e13244 >
 1e13204:    20 50             	r0 = h[r0 + 4] (u)
 1e13206:    31 31             	if (r0 != 0) goto -414 <log_str+0x6 : 1e1306a >
 1e13208:    5f 50             	h[r0 + 10] = r7
 1e1320a:    57 52             	r7 = h[r1 + 10] (u)
 1e1320c:    5f 43             	[r1 + 84] = r7
 1e1320e:    4f 4e             	[r7 + 16] = r7
 1e13210:    5b 34             	if (r2 != 0) goto 182 <gpio_out_regs+0x210 : 1e132c8 >
 1e13212:    5d 3d             	if (r6 != 0) goto -326 <gpio_out_regs+0x16 : 1e130ce >
 1e13214:    31 00             	pc = [sp++]
 1e13216:    00 00             	nop
 1e13218:    00 00             	nop
 1e1321a:    00 00             	nop
 1e1321c:    00 00             	nop
 1e1321e:    00 00             	nop
 1e13220:    4d 41             	[r0 + 80] = r5
 1e13222:    49 4e             	[r7 + 16] = r1
 1e13224:    20 53             	r0 = h[r1 + 36] (u)
 1e13226:    59 53             	h[r1 + 42] = r1
 1e13228:    20 52             	r0 = h[r1 + 4] (u)
 1e1322a:    45 53             	r5 = h[r1 + 40] (u)
 1e1322c:    45 54             	r5 = h[r2 + 8] (u)
 1e1322e:    20 4d             	r0 = [r6 + 72]
 1e13230:    41 53             	r1 = h[r1 + 40] (u)
 1e13232:    4b 00             	testset b[r11]
 1e13234:    00 00             	nop
 1e13236:    00 00             	nop
 1e13238:    00 00             	nop
 1e1323a:    00 00             	nop
 1e1323c:    00 00             	nop
 1e1323e:    00 00             	nop
 1e13240:    4d 41             	[r0 + 80] = r5
 1e13242:    49 4e             	[r7 + 16] = r1
 1e13244:    20 50             	r0 = h[r0 + 4] (u)
 1e13246:    4f 57             	h[r3 + 40] = r7
 1e13248:    45 52             	r5 = h[r1 + 8] (u)
 1e1324a:    20 52             	r0 = h[r1 + 4] (u)
 1e1324c:    45 54             	r5 = h[r2 + 8] (u)
 1e1324e:    55 52             	r5 = h[r1 + 10] (u)
 1e13250:    4e 00             	testset b[r14]
 1e13252:    00 00             	nop
 1e13254:    00 00             	nop
 1e13256:    00 00             	nop
 1e13258:    00 00             	nop
 1e1325a:    00 00             	nop
 1e1325c:    00 00             	nop
 1e1325e:    00 00             	nop
 1e13260:    4d 41             	[r0 + 80] = r5
 1e13262:    49 4e             	[r7 + 16] = r1
 1e13264:    20 53             	r0 = h[r1 + 36] (u)
 1e13266:    59 53             	h[r1 + 42] = r1
 1e13268:    20 53             	r0 = h[r1 + 36] (u)
 1e1326a:    4f 46             	[r3 + 16] = r7
 1e1326c:    54 20             	if (r0 == 0) goto 168 <clock_timer+0x6 : 1e13316 >
 1e1326e:    52 45             	r2 = [r2 + 84]
 1e13270:    53 45             	r3 = [r2 + 84]
 1e13272:    54 20             	if (r0 == 0) goto 168 <clock_lrc+0x4 : 1e1331c >
 1e13274:    3a 20             	if (r0 == 0) goto 116 <gpio_out_regs+0x232 : 1e132ea >
 1e13276:    4a 4c             	[r6 + 16] = r2
 1e13278:    5f 43             	[r1 + 84] = r7
 1e1327a:    4c 4f             	[r7 + 80] = r4
 1e1327c:    43 4b             	r3 = [r5 + 80]
 1e1327e:    2d 3e             	if (r7 != 0) goto 90 <gpio_out_regs+0x222 : 1e132da >
 1e13280:    50 57             	r0 = h[r3 + 42] (u)
 1e13282:    52 5f             	r2 = h[r7 + 42] (u)
 1e13284:    43 4f             	r3 = [r7 + 80]
 1e13286:    4e 5b             	h[r5 + 40] = r6
 1e13288:    34 5d             	r4 = h[r6 + 38] (u)
 1e1328a:    3d 31             	if (r0 != 0) goto -390 <gpio_out_regs+0x4E : 1e13106 >
 1e1328c:    00 00             	nop
 1e1328e:    00 00             	nop
 1e13290:    50 31             	if (r0 != 0) goto -352 <gpio_out_regs+0x7A : 1e13132 >
 1e13292:    31 20             	if (r0 == 0) goto 98 <gpio_out_regs+0x23E : 1e132f6 >
 1e13294:    53 4f             	r3 = [r7 + 84]
 1e13296:    46 54             	r6 = h[r2 + 8] (u)
 1e13298:    20 52             	r0 = h[r1 + 4] (u)
 1e1329a:    45 53             	r5 = h[r1 + 40] (u)
 1e1329c:    45 54             	r5 = h[r2 + 8] (u)
 1e1329e:    20 4d             	r0 = [r6 + 72]
 1e132a0:    41 49             	r1 = [r4 + 80]
 1e132a2:    4e 20             	if (r0 == 0) goto 156 <storage_device_end+0x18 : 1e13340 >
 1e132a4:    3a 20             	if (r0 == 0) goto 116 <clock_lrc+0x2 : 1e1331a >
 1e132a6:    50 31             	if (r0 != 0) goto -352 <gpio_out_regs+0x90 : 1e13148 >
 1e132a8:    31 5f             	r1 = h[r7 + 38] (u)
 1e132aa:    53 59             	r3 = h[r4 + 42] (u)
 1e132ac:    53 5f             	r3 = h[r7 + 42] (u)
 1e132ae:    43 4f             	r3 = [r7 + 80]
 1e132b0:    4e 32             	if (r1 != 0) goto 156 <lib_update_version+0x6 : 1e1334e >
 1e132b2:    5b 33             	if (r1 != 0) goto -330 <gpio_out_regs+0xB2 : 1e1316a >
 1e132b4:    5d 3d             	if (r6 != 0) goto -326 <gpio_out_regs+0xB8 : 1e13170 >
 1e132b6:    31 00             	pc = [sp++]
 1e132b8:    00 00             	nop
 1e132ba:    00 00             	nop
 1e132bc:    00 00             	nop
 1e132be:    00 00             	nop
 1e132c0:    67 61             	r7 = b[r0 + 22] (u)
 1e132c2:    70 20             	if (r0 == 0) goto 224 <m_code_addr+0x24 : 1e133a4 >
 1e132c4:    73 65             	r3 = b[r2 + 23] (u)
 1e132c6:    6e 64             	b[r2 + 6] = r6
 1e132c8:    20 63             	r0 = b[r1 + 18] (u)
 1e132ca:    6f 6e             	b[r7 + 6] = r7
 1e132cc:    6e 20             	if (r0 == 0) goto 220 <m_code_addr+0x2A : 1e133aa >
 1e132ce:    70 61             	r0 = b[r0 + 23] (u)
 1e132d0:    72 61             	r2 = b[r0 + 23] (u)
 1e132d2:    6d 20             	if (r0 == 0) goto 218 <m_code_addr+0x2E : 1e133ae >
 1e132d4:    32 32             	if (r1 != 0) goto 100 <storage_device_end+0x12 : 1e1333a >
 1e132d6:    32 32             	if (r1 != 0) goto 100 <storage_device_end+0x14 : 1e1333c >
 1e132d8:    00 00             	nop
 1e132da:    00 00             	nop
 1e132dc:    00 00             	nop
 1e132de:    00 00             	nop
 1e132e0:    76 6d             	r6 = b[r6 + 23] (u)
 1e132e2:    5f 75             	r15 = 85
 1e132e4:    70 64             	r0 = b[r2 + 7] (u)
 1e132e6:    61 74             	r1 = 70
 1e132e8:    65 5f             	r5 = h[r7 + 44] (u)
 1e132ea:    70 61             	r0 = b[r0 + 23] (u)
 1e132ec:    72 61             	r2 = b[r0 + 23] (u)
 1e132ee:    6d 20             	if (r0 == 0) goto 218 <m_code_addr+0x4A : 1e133ca >
 1e132f0:    77 72             	r7 = 39
 1e132f2:    69 74             	r9 = 70
 1e132f4:    65 20             	if (r0 == 0) goto 202 <m_code_addr+0x40 : 1e133c0 >
 1e132f6:    65 72             	r5 = 38
 1e132f8:    72 00             	sti r2
 1e132fa:    00 00             	nop
 1e132fc:    00 00             	nop
 1e132fe:    00 00             	nop


boot_addr_tab:
 1e13300:    00 00             	nop
 1e13302:    00 00             	nop
 1e13304:    00 00             	nop
 1e13306:    01 00             	nop


clock_uart:
 1e13308:    fc 37             	if (r3 != 0) goto -8 <boot_addr_tab+0x2 : 1e13302 >
 1e1330a:    e0 01             	[--sp] = {psr}
 1e1330c:    fe 37             	if (r3 != 0) goto -4 <clock_uart+0x2 : 1e1330a >
 1e1330e:    e0 01             	[--sp] = {psr}


clock_timer:
 1e13310:    82 38             	if (r4 != 0) goto 260 <m_code_addr+0x96 : 1e13416 >
 1e13312:    e0 01             	[--sp] = {psr}
 1e13314:    a0 38             	if (r4 != 0) goto 320 <m_code_addr+0xD6 : 1e13456 >
 1e13316:    e0 01             	[--sp] = {psr}


clock_lrc:
 1e13318:    a8 3a             	if (r5 != 0) goto 336 <m_code_addr+0xEA : 1e1346a >
 1e1331a:    e0 01             	[--sp] = {psr}
 1e1331c:    ea 3a             	if (r5 != 0) goto 468 <bt_frac_pll_int_48m+0x26 : 1e134f2 >
 1e1331e:    e0 01             	[--sp] = {psr}


clock_port:
 1e13320:    f0 d9             	r0 = r6 >>> 7
 1e13322:    e0 01             	[--sp] = {psr}
 1e13324:    fc d9             	r4 = r7 >>> 7
 1e13326:    e0 01             	[--sp] = {psr}


storage_device_end:
 1e13328:    34 74             	r4 = 67
 1e1332a:    18 0a             	sp += 48
 1e1332c:    42 54             	r2 = h[r2 + 8] (u)
 1e1332e:    43 54             	r3 = h[r2 + 8] (u)
 1e13330:    52 4c             	r2 = [r6 + 20]
 1e13332:    45 52             	r5 = h[r1 + 8] (u)
 1e13334:    2d 40             	[r0 + 8] = r5
 1e13336:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x1C : 1e1339c >
 1e13338:    32 31             	if (r0 != 0) goto -412 <gpio_out_regs+0xE6 : 1e1319e >
 1e1333a:    30 35             	if (r2 != 0) goto -416 <gpio_out_regs+0xE4 : 1e1319c >
 1e1333c:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x20 : 1e133a0 >
 1e1333e:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x1A : 1e1339a >
 1e13340:    63 31             	if (r0 != 0) goto -314 <gpio_out_regs+0x150 : 1e13208 >
 1e13342:    61 38             	if (r4 != 0) goto 194 <m_code_addr+0x86 : 1e13406 >
 1e13344:    62 62             	r2 = b[r1 + 6] (u)
 1e13346:    33 00             	pc = [sp++]


lib_update_version:
 1e13348:    41 74             	r1 = 68
 1e1334a:    18 0a             	sp += 48
 1e1334c:    55 50             	r5 = h[r0 + 10] (u)
 1e1334e:    44 41             	r4 = [r0 + 80]
 1e13350:    54 45             	r4 = [r2 + 84]
 1e13352:    2d 40             	[r0 + 8] = r5
 1e13354:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x3A : 1e133ba >
 1e13356:    32 31             	if (r0 != 0) goto -412 <gpio_out_regs+0x104 : 1e131bc >
 1e13358:    30 35             	if (r2 != 0) goto -416 <gpio_out_regs+0x102 : 1e131ba >
 1e1335a:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x3E : 1e133be >
 1e1335c:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x38 : 1e133b8 >
 1e1335e:    39 38             	if (r4 != 0) goto 114 <m_code_addr+0x52 : 1e133d2 >
 1e13360:    30 65             	r0 = b[r2 + 19] (u)
 1e13362:    30 34             	if (r2 != 0) goto 96 <m_code_addr+0x44 : 1e133c4 >
 1e13364:    38 00             	cc = 0


__VERSION_END:
 1e13366:    00 00             	nop
 1e13368:    00 00             	nop
 1e1336a:    00 00             	nop
 1e1336c:    00 00             	nop
 1e1336e:    00 00             	nop
 1e13370:    00 00             	nop
 1e13372:    00 00             	nop
 1e13374:    00 00             	nop
 1e13376:    00 00             	nop
 1e13378:    00 00             	nop
 1e1337a:    00 00             	nop
 1e1337c:    00 00             	nop
 1e1337e:    00 00             	nop


m_code_addr:
 1e13380:    55 55             	r5 = h[r2 + 42] (u)
 1e13382:    05 00             	bkpt
 1e13384:    00 00             	nop
 1e13386:    10 00             	lockclr
 1e13388:    ab aa             	r11 = sp + 170
 1e1338a:    1a 00             	cli
 1e1338c:    55 55             	r5 = h[r2 + 42] (u)
 1e1338e:    25 00             	rtx
 1e13390:    00 00             	nop
 1e13392:    30 00             	pc = [sp++]
 1e13394:    ab aa             	r11 = sp + 170
 1e13396:    3a 00             	cc = 1
 1e13398:    55 55             	r5 = h[r2 + 42] (u)
 1e1339a:    45 00             	testset b[r5]
 1e1339c:    00 00             	nop
 1e1339e:    50 00             	testset b[r0]
 1e133a0:    ab aa             	r11 = sp + 170
 1e133a2:    5a 00             	testset b[r10]
 1e133a4:    55 55             	r5 = h[r2 + 42] (u)
 1e133a6:    65 00             	cli r5
 1e133a8:    00 00             	nop
 1e133aa:    70 00             	sti r0
 1e133ac:    ab aa             	r11 = sp + 170
 1e133ae:    7a 00             	sti r10
 1e133b0:    55 55             	r5 = h[r2 + 42] (u)
 1e133b2:    85 00             	call r5
 1e133b4:    00 00             	nop
 1e133b6:    90 00             	goto r0
 1e133b8:    ab aa             	r11 = sp + 170
 1e133ba:    9a 00             	goto r10
 1e133bc:    55 55             	r5 = h[r2 + 42] (u)
 1e133be:    a5 00             	tbb [r5]
 1e133c0:    00 00             	nop
 1e133c2:    b0 00             	tbh [r0]
 1e133c4:    ab aa             	r11 = sp + 170
 1e133c6:    ba 00             	tbh [r10]
 1e133c8:    55 55             	r5 = h[r2 + 42] (u)
 1e133ca:    c5 00             	pfetch [r5]
 1e133cc:    00 00             	nop
 1e133ce:    d0 00             	iflush [r0]
 1e133d0:    ab aa             	r11 = sp + 170
 1e133d2:    da 00             	iflush [r10]
 1e133d4:    55 55             	r5 = h[r2 + 42] (u)
 1e133d6:    e5 00             	flush [r5]
 1e133d8:    00 00             	nop
 1e133da:    f0 00             	flushinv [r0]
 1e133dc:    ab aa             	r11 = sp + 170
 1e133de:    fa 00             	flushinv [r10]
 1e133e0:    55 55             	r5 = h[r2 + 42] (u)
 1e133e2:    05 00             	bkpt
 1e133e4:    00 00             	nop
 1e133e6:    10 00             	lockclr
 1e133e8:    ab aa             	r11 = sp + 170
 1e133ea:    1a 00             	cli
 1e133ec:    55 55             	r5 = h[r2 + 42] (u)
 1e133ee:    25 00             	rtx
 1e133f0:    00 00             	nop
 1e133f2:    30 00             	pc = [sp++]
 1e133f4:    ab aa             	r11 = sp + 170
 1e133f6:    3a 00             	cc = 1
 1e133f8:    55 55             	r5 = h[r2 + 42] (u)
 1e133fa:    45 00             	testset b[r5]
 1e133fc:    00 00             	nop
 1e133fe:    50 00             	testset b[r0]
 1e13400:    ab aa             	r11 = sp + 170
 1e13402:    5a 00             	testset b[r10]
 1e13404:    55 55             	r5 = h[r2 + 42] (u)
 1e13406:    65 00             	cli r5
 1e13408:    00 00             	nop
 1e1340a:    70 00             	sti r0
 1e1340c:    ab aa             	r11 = sp + 170
 1e1340e:    7a 00             	sti r10
 1e13410:    55 55             	r5 = h[r2 + 42] (u)
 1e13412:    85 00             	call r5
 1e13414:    00 00             	nop
 1e13416:    90 00             	goto r0
 1e13418:    ab aa             	r11 = sp + 170
 1e1341a:    9a 00             	goto r10
 1e1341c:    55 55             	r5 = h[r2 + 42] (u)
 1e1341e:    a5 00             	tbb [r5]
 1e13420:    00 00             	nop
 1e13422:    b0 00             	tbh [r0]
 1e13424:    ab aa             	r11 = sp + 170
 1e13426:    ba 00             	tbh [r10]
 1e13428:    55 55             	r5 = h[r2 + 42] (u)
 1e1342a:    c5 00             	pfetch [r5]
 1e1342c:    00 00             	nop
 1e1342e:    d0 00             	iflush [r0]
 1e13430:    ab aa             	r11 = sp + 170
 1e13432:    da 00             	iflush [r10]
 1e13434:    55 55             	r5 = h[r2 + 42] (u)
 1e13436:    e5 00             	flush [r5]
 1e13438:    00 00             	nop
 1e1343a:    f0 00             	flushinv [r0]
 1e1343c:    ab aa             	r11 = sp + 170
 1e1343e:    fa 00             	flushinv [r10]
 1e13440:    55 55             	r5 = h[r2 + 42] (u)
 1e13442:    05 00             	bkpt
 1e13444:    00 00             	nop
 1e13446:    10 00             	lockclr
 1e13448:    ab aa             	r11 = sp + 170
 1e1344a:    1a 00             	cli
 1e1344c:    55 55             	r5 = h[r2 + 42] (u)
 1e1344e:    25 00             	rtx
 1e13450:    00 00             	nop
 1e13452:    30 00             	pc = [sp++]
 1e13454:    ab aa             	r11 = sp + 170
 1e13456:    3a 00             	cc = 1
 1e13458:    55 55             	r5 = h[r2 + 42] (u)
 1e1345a:    45 00             	testset b[r5]
 1e1345c:    00 00             	nop
 1e1345e:    50 00             	testset b[r0]
 1e13460:    ab aa             	r11 = sp + 170
 1e13462:    5a 00             	testset b[r10]
 1e13464:    55 55             	r5 = h[r2 + 42] (u)
 1e13466:    65 00             	cli r5
 1e13468:    00 00             	nop
 1e1346a:    70 00             	sti r0
 1e1346c:    ab aa             	r11 = sp + 170
 1e1346e:    7a 00             	sti r10
 1e13470:    55 55             	r5 = h[r2 + 42] (u)
 1e13472:    85 00             	call r5
 1e13474:    00 00             	nop
 1e13476:    90 00             	goto r0
 1e13478:    ab aa             	r11 = sp + 170
 1e1347a:    9a 00             	goto r10
 1e1347c:    55 55             	r5 = h[r2 + 42] (u)
 1e1347e:    a5 00             	tbb [r5]
 1e13480:    00 00             	nop
 1e13482:    b0 00             	tbh [r0]
 1e13484:    ab aa             	r11 = sp + 170
 1e13486:    ba 00             	tbh [r10]
 1e13488:    55 55             	r5 = h[r2 + 42] (u)
 1e1348a:    c5 00             	pfetch [r5]
 1e1348c:    00 00             	nop
 1e1348e:    d0 00             	iflush [r0]
 1e13490:    ab aa             	r11 = sp + 170
 1e13492:    da 00             	iflush [r10]
 1e13494:    55 55             	r5 = h[r2 + 42] (u)
 1e13496:    e5 00             	flush [r5]
 1e13498:    00 00             	nop
 1e1349a:    f0 00             	flushinv [r0]
 1e1349c:    ab aa             	r11 = sp + 170
 1e1349e:    fa 00             	flushinv [r10]
 1e134a0:    55 55             	r5 = h[r2 + 42] (u)
 1e134a2:    05 00             	bkpt
 1e134a4:    00 00             	nop
 1e134a6:    10 00             	lockclr
 1e134a8:    ab aa             	r11 = sp + 170
 1e134aa:    1a 00             	cli
 1e134ac:    55 55             	r5 = h[r2 + 42] (u)
 1e134ae:    25 00             	rtx
 1e134b0:    00 00             	nop
 1e134b2:    30 00             	pc = [sp++]
 1e134b4:    ab aa             	r11 = sp + 170
 1e134b6:    3a 00             	cc = 1
 1e134b8:    55 55             	r5 = h[r2 + 42] (u)
 1e134ba:    45 00             	testset b[r5]
 1e134bc:    00 00             	nop
 1e134be:    50 00             	testset b[r0]
 1e134c0:    ab aa             	r11 = sp + 170
 1e134c2:    5a 00             	testset b[r10]
 1e134c4:    00 00             	nop
 1e134c6:    00 00             	nop
 1e134c8:    00 00             	nop
 1e134ca:    00 00             	nop


bt_frac_pll_int_48m:
 1e134cc:    64 64             	r4 = b[r2 + 6] (u)
 1e134ce:    64 64             	r4 = b[r2 + 6] (u)
 1e134d0:    64 64             	r4 = b[r2 + 6] (u)
 1e134d2:    64 64             	r4 = b[r2 + 6] (u)
 1e134d4:    64 64             	r4 = b[r2 + 6] (u)
 1e134d6:    64 64             	r4 = b[r2 + 6] (u)
 1e134d8:    64 64             	r4 = b[r2 + 6] (u)
 1e134da:    64 64             	r4 = b[r2 + 6] (u)
 1e134dc:    64 64             	r4 = b[r2 + 6] (u)
 1e134de:    64 64             	r4 = b[r2 + 6] (u)
 1e134e0:    64 64             	r4 = b[r2 + 6] (u)
 1e134e2:    64 64             	r4 = b[r2 + 6] (u)
 1e134e4:    65 65             	r5 = b[r2 + 22] (u)
 1e134e6:    65 65             	r5 = b[r2 + 22] (u)
 1e134e8:    65 65             	r5 = b[r2 + 22] (u)
 1e134ea:    65 65             	r5 = b[r2 + 22] (u)
 1e134ec:    65 65             	r5 = b[r2 + 22] (u)
 1e134ee:    65 65             	r5 = b[r2 + 22] (u)
 1e134f0:    65 65             	r5 = b[r2 + 22] (u)
 1e134f2:    65 65             	r5 = b[r2 + 22] (u)
 1e134f4:    65 65             	r5 = b[r2 + 22] (u)
 1e134f6:    65 65             	r5 = b[r2 + 22] (u)
 1e134f8:    65 65             	r5 = b[r2 + 22] (u)
 1e134fa:    65 65             	r5 = b[r2 + 22] (u)
 1e134fc:    66 66             	r6 = b[r3 + 6] (u)
 1e134fe:    66 66             	r6 = b[r3 + 6] (u)
 1e13500:    66 66             	r6 = b[r3 + 6] (u)
 1e13502:    66 66             	r6 = b[r3 + 6] (u)
 1e13504:    66 66             	r6 = b[r3 + 6] (u)
 1e13506:    66 66             	r6 = b[r3 + 6] (u)
 1e13508:    66 66             	r6 = b[r3 + 6] (u)
 1e1350a:    66 66             	r6 = b[r3 + 6] (u)
 1e1350c:    66 66             	r6 = b[r3 + 6] (u)
 1e1350e:    66 66             	r6 = b[r3 + 6] (u)
 1e13510:    66 66             	r6 = b[r3 + 6] (u)
 1e13512:    66 66             	r6 = b[r3 + 6] (u)
 1e13514:    67 67             	r7 = b[r3 + 22] (u)
 1e13516:    67 67             	r7 = b[r3 + 22] (u)
 1e13518:    67 67             	r7 = b[r3 + 22] (u)
 1e1351a:    67 67             	r7 = b[r3 + 22] (u)
 1e1351c:    67 00             	cli r7
 1e1351e:    00 00             	nop


TXPWR_table:
 1e13520:    d1 da             	r1 = r2 >>> 11
 1e13522:    00 1e             	goto -1024 <gpio_out_regs+0x6C : 1e13124 >
 1e13524:    d1 da             	r1 = r2 >>> 11
 1e13526:    01 1e             	goto -1022 <gpio_out_regs+0x72 : 1e1312a >
 1e13528:    d1 da             	r1 = r2 >>> 11
 1e1352a:    03 1e             	goto -1018 <gpio_out_regs+0x7A : 1e13132 >
 1e1352c:    d1 da             	r1 = r2 >>> 11
 1e1352e:    07 1e             	goto -1010 <gpio_out_regs+0x86 : 1e1313e >
 1e13530:    d1 da             	r1 = r2 >>> 11
 1e13532:    0f 1e             	goto -994 <gpio_out_regs+0x9A : 1e13152 >
 1e13534:    d1 da             	r1 = r2 >>> 11
 1e13536:    1f 1e             	goto -962 <gpio_out_regs+0xBE : 1e13176 >
 1e13538:    d1 da             	r1 = r2 >>> 11
 1e1353a:    3f 1e             	goto -898 <gpio_out_regs+0x102 : 1e131ba >
 1e1353c:    d1 da             	r1 = r2 >>> 11
 1e1353e:    7f 1e             	goto -770 <gpio_out_regs+0x186 : 1e1323e >
 1e13540:    d1 da             	r1 = r2 >>> 11
 1e13542:    ff 1e             	goto -514 <storage_device_end+0x1A : 1e13342 >
 1e13544:    d1 da             	r1 = r2 >>> 11
 1e13546:    ff 1f             	goto -2 <TXPWR_table+0x26 : 1e13546 >
 1e13548:    e9 da             	r1 = r5 >>> 11
 1e1354a:    ff 1f             	goto -2 <TXPWR_table+0x2A : 1e1354a >


TXSET_table:
 1e1354c:    f2 00             	flushinv [r2]
 1e1354e:    00 00             	nop
 1e13550:    f2 00             	flushinv [r2]
 1e13552:    00 00             	nop
 1e13554:    f2 00             	flushinv [r2]
 1e13556:    00 00             	nop
 1e13558:    f2 00             	flushinv [r2]
 1e1355a:    00 00             	nop
 1e1355c:    f2 00             	flushinv [r2]
 1e1355e:    00 00             	nop
 1e13560:    f2 00             	flushinv [r2]
 1e13562:    00 00             	nop
 1e13564:    f2 00             	flushinv [r2]
 1e13566:    00 00             	nop
 1e13568:    f2 00             	flushinv [r2]
 1e1356a:    00 00             	nop
 1e1356c:    f2 00             	flushinv [r2]
 1e1356e:    00 00             	nop
 1e13570:    f2 00             	flushinv [r2]
 1e13572:    00 00             	nop
 1e13574:    f2 00             	flushinv [r2]
 1e13576:    00 00             	nop


anl_gain_set:
 1e13578:    47 0d             	r7 <<= r5
 1e1357a:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x26 : 1e1375e >
 1e1357c:    47 0d             	r7 <<= r5
 1e1357e:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2A : 1e13762 >
 1e13580:    47 0d             	r7 <<= r5
 1e13582:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2E : 1e13766 >
 1e13584:    47 0d             	r7 <<= r5
 1e13586:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x32 : 1e1376a >
 1e13588:    47 0d             	r7 <<= r5
 1e1358a:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x36 : 1e1376e >
 1e1358c:    47 0d             	r7 <<= r5
 1e1358e:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3A : 1e13772 >
 1e13590:    47 0d             	r7 <<= r5
 1e13592:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3E : 1e13776 >
 1e13594:    47 0d             	r7 <<= r5
 1e13596:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x2 : 1e1377a >
 1e13598:    47 0d             	r7 <<= r5
 1e1359a:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x6 : 1e1377e >
 1e1359c:    47 0d             	r7 <<= r5
 1e1359e:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xA : 1e13782 >
 1e135a0:    47 0d             	r7 <<= r5
 1e135a2:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xE : 1e13786 >
 1e135a4:    47 0d             	r7 <<= r5
 1e135a6:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x12 : 1e1378a >
 1e135a8:    47 0d             	r7 <<= r5
 1e135aa:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x16 : 1e1378e >
 1e135ac:    47 0d             	r7 <<= r5
 1e135ae:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x1A : 1e13792 >
 1e135b0:    47 0d             	r7 <<= r5
 1e135b2:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x2 : 1e13796 >
 1e135b4:    47 0d             	r7 <<= r5
 1e135b6:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x6 : 1e1379a >
 1e135b8:    47 0d             	r7 <<= r5
 1e135ba:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0xA : 1e1379e >
 1e135bc:    47 0d             	r7 <<= r5
 1e135be:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0xE : 1e137a2 >
 1e135c0:    47 0d             	r7 <<= r5
 1e135c2:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x12 : 1e137a6 >
 1e135c4:    47 0d             	r7 <<= r5
 1e135c6:    f1 20             	if (r0 == 0) goto 482 <btagc_init : 1e137aa >
 1e135c8:    47 0d             	r7 <<= r5
 1e135ca:    f1 20             	if (r0 == 0) goto 482 <btagc_init+0x4 : 1e137ae >
 1e135cc:    47 0d             	r7 <<= r5
 1e135ce:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x8 : 1e137b2 >
 1e135d0:    47 2d             	if (r6 == 0) goto -370 <m_code_addr+0xE0 : 1e13460 >
 1e135d2:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0xC : 1e137b6 >
 1e135d4:    47 4d             	r7 = [r6 + 80]
 1e135d6:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x10 : 1e137ba >
 1e135d8:    46 0d             	r6 <<= r5
 1e135da:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x14 : 1e137be >
 1e135dc:    46 2d             	if (r6 == 0) goto -372 <m_code_addr+0xEA : 1e1346a >
 1e135de:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x18 : 1e137c2 >
 1e135e0:    46 4d             	r6 = [r6 + 80]
 1e135e2:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x1C : 1e137c6 >
 1e135e4:    46 6d             	r6 = b[r6 + 20] (u)
 1e135e6:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x20 : 1e137ca >
 1e135e8:    46 8d             	r6 += -44
 1e135ea:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x24 : 1e137ce >
 1e135ec:    46 ad             	r6 = sp + 212
 1e135ee:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x28 : 1e137d2 >
 1e135f0:    46 cd             	r6 = r0 <<< 21
 1e135f2:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x2C : 1e137d6 >
 1e135f4:    46 ed f1 22       	if (r6 >= 212) goto 1506 <bt_fre_offset_value_init+0x2 : 1e13bda >
 1e135f8:    44 0d             	r4 <<= r5
 1e135fa:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x34 : 1e137de >
 1e135fc:    44 2d             	if (r6 == 0) goto -376 <m_code_addr+0x106 : 1e13486 >
 1e135fe:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x38 : 1e137e2 >
 1e13600:    44 4d             	r4 = [r6 + 80]
 1e13602:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x3C : 1e137e6 >
 1e13604:    44 6d             	r4 = b[r6 + 20] (u)
 1e13606:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x40 : 1e137ea >
 1e13608:    44 8d             	r4 += -44
 1e1360a:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x44 : 1e137ee >
 1e1360c:    44 ad             	r4 = sp + 212
 1e1360e:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x48 : 1e137f2 >
 1e13610:    44 cd             	r4 = r0 <<< 21
 1e13612:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x4C : 1e137f6 >
 1e13614:    44 ed f1 28       	if (r4 >= 212) goto -3614 <update_target_end+0x25CA : 1e127fa >
 1e13618:    c1 0f             	r1 = r0 * r7
 1e1361a:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x54 : 1e137fe >
 1e1361c:    c1 2f             	if (r7 == 0) goto -126 <anl_gain_set+0x28 : 1e135a0 >
 1e1361e:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x58 : 1e13802 >
 1e13620:    c1 4f             	r1 = [r7 + 112]
 1e13622:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x5C : 1e13806 >
 1e13624:    c1 6f             	r1 = b[r7 + 28] (u)
 1e13626:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x60 : 1e1380a >
 1e13628:    c1 8f             	r1 += -4
 1e1362a:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x64 : 1e1380e >
 1e1362c:    c1 af             	r1 = sp + 252
 1e1362e:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x68 : 1e13812 >
 1e13630:    c1 cf             	r1 = r0 <<< 31
 1e13632:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x6C : 1e13816 >
 1e13634:    c1 ef f1 2e       	if (r1 >= 252) goto -542 <m_code_addr+0x9A : 1e1341a >
 1e13638:    c8 0d             	r8 <<= r7
 1e1363a:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x74 : 1e1381e >
 1e1363c:    c8 2d             	if (r6 == 0) goto -112 <anl_gain_set+0x56 : 1e135ce >
 1e1363e:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x78 : 1e13822 >
 1e13640:    c8 4d             	[r6 + 112] = r0
 1e13642:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x7C : 1e13826 >
 1e13644:    c8 6d             	b[r6 + 28] = r0
 1e13646:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x80 : 1e1382a >
 1e13648:    c8 8d             	r8 += -36
 1e1364a:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x84 : 1e1382e >
 1e1364c:    c8 ad             	r8 = sp + 220
 1e1364e:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x88 : 1e13832 >
 1e13650:    c8 cd             	r0 = r1 <<< 23
 1e13652:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x8C : 1e13836 >
 1e13654:    c8 ed f1 2c       	if (r8 >= 220) goto -1566 <PB_map_tbl+0x6 : 1e1303a >


anl_gain_set_h:
 1e13658:    0d 00             	syscall
 1e1365a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x20 : 1e13678 >
 1e1365e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x24 : 1e1367c >
 1e13662:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x28 : 1e13680 >
 1e13666:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x2C : 1e13684 >
 1e1366a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x30 : 1e13688 >
 1e1366e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x34 : 1e1368c >
 1e13672:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x38 : 1e13690 >
 1e13676:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x3C : 1e13694 >
 1e1367a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x40 : 1e13698 >
 1e1367e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x44 : 1e1369c >
 1e13682:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x48 : 1e136a0 >
 1e13686:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x4C : 1e136a4 >
 1e1368a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x50 : 1e136a8 >
 1e1368e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x54 : 1e136ac >
 1e13692:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x58 : 1e136b0 >
 1e13696:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x5C : 1e136b4 >
 1e1369a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x60 : 1e136b8 >
 1e1369e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x64 : 1e136bc >
 1e136a2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x68 : 1e136c0 >
 1e136a6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x6C : 1e136c4 >
 1e136aa:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x70 : 1e136c8 >
 1e136ae:    00 f2 0d 00       	if (r0 == r0) goto 26 <anl_gain_set_h+0x74 : 1e136cc >
 1e136b2:    00 f4 0d 00       	[r0 + 0] |= 2256
 1e136b6:    00 f6 0d 00       	r0 = [r0 + 13]
 1e136ba:    00 f8 0d 00       	r0 = h[r0+r0] (u)
 1e136be:    00 fa 0d 00       	r0 = b[r0+r0] (u)
 1e136c2:    00 fc 0d 00       	r0 = r0 + 13
 1e136c6:    00 fe 0d 00       	r0 = r0 * 2256
 1e136ca:    00 00             	nop
 1e136cc:    0d 00             	syscall
 1e136ce:    00 02             	r0 = [sp]
 1e136d0:    0d 00             	syscall
 1e136d2:    00 04             	r0 = r0.b0 (u)
 1e136d4:    0d 00             	syscall
 1e136d6:    00 06             	r0 = -32
 1e136d8:    0d 00             	syscall
 1e136da:    00 08             	r0 = r0
 1e136dc:    0d 00             	syscall
 1e136de:    00 0a             	sp += 0
 1e136e0:    0d 00             	syscall
 1e136e2:    00 0c             	r0 <<= r0
 1e136e4:    0d 00             	syscall
 1e136e6:    00 0e             	r0 = r0 * r0
 1e136e8:    0d 00             	syscall
 1e136ea:    00 10             	call 0 <anl_gain_set_h+0x94 : 1e136ec >
 1e136ec:    0d 00             	syscall
 1e136ee:    00 12             	call 1024 <bt_exit_deepsleep+0x38 : 1e13af0 >
 1e136f0:    0d 00             	syscall
 1e136f2:    00 14             	call -2048 <dev_id_list+0x248 : 1e12ef4 >
 1e136f4:    0d 00             	syscall
 1e136f6:    00 16             	call -1024 <gpio_out_regs+0x240 : 1e132f8 >
 1e136f8:    0d 00             	syscall
 1e136fa:    00 18             	goto 0 <anl_gain_set_h+0xA4 : 1e136fc >
 1e136fc:    0d 00             	syscall
 1e136fe:    00 1a             	goto 1024 <bt_exit_deepsleep+0x48 : 1e13b00 >
 1e13700:    0d 00             	syscall
 1e13702:    00 1c             	goto -2048 <dev_id_list+0x258 : 1e12f04 >
 1e13704:    0d 00             	syscall
 1e13706:    00 1e             	goto -1024 <clock_uart : 1e13308 >
 1e13708:    0d 00             	syscall
 1e1370a:    00 20             	if (r0 == 0) goto 0 <anl_gain_set_h+0xB4 : 1e1370c >
 1e1370c:    0d 00             	syscall
 1e1370e:    00 22             	if (r1 == 0) goto 0 <anl_gain_set_h+0xB8 : 1e13710 >
 1e13710:    0d 00             	syscall
 1e13712:    00 24             	if (r2 == 0) goto 0 <anl_gain_set_h+0xBC : 1e13714 >
 1e13714:    0d 00             	syscall
 1e13716:    00 26             	if (r3 == 0) goto 0 <anl_gain_set_h+0xC0 : 1e13718 >
 1e13718:    0d 00             	syscall
 1e1371a:    00 28             	if (r4 == 0) goto 0 <anl_gain_set_h+0xC4 : 1e1371c >
 1e1371c:    0d 00             	syscall
 1e1371e:    00 2a             	if (r5 == 0) goto 0 <anl_gain_set_h+0xC8 : 1e13720 >
 1e13720:    0d 00             	syscall
 1e13722:    00 2c             	if (r6 == 0) goto 0 <anl_gain_set_h+0xCC : 1e13724 >
 1e13724:    0d 00             	syscall
 1e13726:    00 2e             	if (r7 == 0) goto 0 <anl_gain_set_h+0xD0 : 1e13728 >
 1e13728:    0d 00             	syscall
 1e1372a:    00 30             	if (r0 != 0) goto 0 <anl_gain_set_h+0xD4 : 1e1372c >
 1e1372c:    0d 00             	syscall
 1e1372e:    00 32             	if (r1 != 0) goto 0 <anl_gain_set_h+0xD8 : 1e13730 >
 1e13730:    0d 00             	syscall
 1e13732:    00 34             	if (r2 != 0) goto 0 <anl_gain_set_h+0xDC : 1e13734 >
 1e13734:    0d 00             	syscall
 1e13736:    00 36             	if (r3 != 0) goto 0 <gain_adj_step : 1e13738 >


gain_adj_step:
 1e13738:    ec ed ed ee       	if (r12 ?? -34) goto -550 <bt_frac_pll_int_48m+0x4A : 1e13516 >
 1e1373c:    ee ef ef f0       	if (r14 ?? -2) goto 478 <btagc_init+0x174 : 1e1391e >
 1e13740:    f0 f1 f1 f2       	if ((r0 & r15) != 0) goto -6686 <update_target_end+0x1AF6 : 1e11d26 >
 1e13744:    f2 f3 f3 f4       	goto -1709594 <uECC_vli_cmp_unsafe+0x1B6B132 : 1c7212e >
 1e13748:    f4 f5              <unkown instruction>
 1e1374a:    f5 f6 f6 f7       	[r15 ++= r7] = r5
 1e1374e:    f7 f8 f8 f9       	h[r15 ++= r9] = r7.h
 1e13752:    f9 fa              <unkown instruction>
 1e13754:    fa fb fb fc       	r10 = sp + 64763
 1e13758:    fc fd fd 00       	r0 = r0 <> r15
 1e1375c:    00 00             	nop
 1e1375e:    00 00             	nop
 1e13760:    00 00             	nop
 1e13762:    00 00             	nop
 1e13764:    00 00             	nop
 1e13766:    03 03             	r3 = [sp+64]
 1e13768:    04 04             	r4 = r0.b0 (u)
 1e1376a:    05 05             	r5 = r4.b0 (u)
 1e1376c:    06 06             	r6 = -32
 1e1376e:    07 07             	r7 = -16
 1e13770:    08 08             	r8 = r0
 1e13772:    09 09             	r9 += r0
 1e13774:    0a 0a             	sp += 20
 1e13776:    0b 0b             	sp += -492


bt_pll_para:
 1e13778:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF.c:89:0
 1e1377e:    02 70             	r2 = 0			  ## RF.c:96:17
 1e13780:    fa 62             	b[r1 + 15] = r2			  ## RF.c:96:17
 1e13782:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD754C : f4240 >			  ## RF.c:99:24
 1e13788:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## RF.c:99:24
 1e1378c:    68 62             	b[r1 + 6] = r0			  ## RF.c:99:18
 1e1378e:    a0 70             	r0 = 10			  ## RF.c:100:17
 1e13790:    78 62             	b[r1 + 7] = r0			  ## RF.c:100:17
 1e13792:    20 00             	rts			  ## RF.c:102:1


bt_max_pwr_set:
 1e13794:    20 fd 0f 09       	r0 = r0 & 15			  ## RF.c:55:0
 1e13798:    c1 ff 50 98 00 00 	r1 = 38992 <BTCTLER_CODE_TOTAL+0x14B8 : 9850 >			  ## RF.c:59:20
 1e1379e:    50 b2             	r0 |= r1			  ## RF.c:59:20
 1e137a0:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF.c:59:20
 1e137a6:    08 52             	h[r1 + 0] = r0			  ## RF.c:59:20
 1e137a8:    20 00             	rts			  ## RF.c:60:1


btagc_init:
 1e137aa:    79 01             	[--sp] = {rets, r9-r4}			  ## btagc.c:321:0
 1e137ac:    c8 ff 80 fd 1c 00 	r8 = 1899904 <uECC_vli_cmp_unsafe+0xC8D84 : 1cfd80 >			  ## btagc.c:321:0
 1e137b2:    00 f4 10 8a       	[r8 + 0] |= 4096			  ## btagc.c:233:5
 1e137b6:    00 f4 20 8a       	[r8 + 0] |= 8192			  ## btagc.c:234:5
 1e137ba:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:235:5
 1e137be:    c2 ff 78 35 e1 01 	r2 = 31536504 <anl_gain_set : 1e13578 >			  ## btagc.c:235:5
 1e137c4:    03 70             	r3 = 0
 1e137c6:    c4 ff 58 36 e1 01 	r4 = 31536728 <anl_gain_set_h : 1e13658 >
 1e137cc:    c5 ff 78 35 e1 01 	r5 = 31536504 <anl_gain_set : 1e13578 >
 1e137d2:    13 f6 18 80       	[r8 + 24] = r3			  ## btagc.c:239:20
 1e137d6:    06 f6 00 80       	r6 = [r8 + 0]			  ## btagc.c:239:20
 1e137da:    76 b7             	r6 &= 4294950911			  ## btagc.c:239:20
 1e137dc:    16 f6 00 80       	[r8 + 0] = r6			  ## btagc.c:239:20
 1e137e0:    73 e3 07 c0       	ifs (r3 > 55) goto 14 <btagc_init+0x48 : 1e137f2 >			  ## btagc.c:241:13
 1e137e4:    06 4a             	r6 = [r5 + 0]			  ## btagc.c:252:26
 1e137e6:    16 f6 1c 80       	[r8 + 28] = r6			  ## btagc.c:252:24
 1e137ea:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:254:13
 1e137ee:    06 48             	r6 = [r4 + 0]			  ## btagc.c:255:26
 1e137f0:    1a 18             	goto 52 <btagc_init+0x7C : 1e13826 >			  ## btagc.c:255:26
 1e137f2:    09 f9 01 20       	r9 = b[r2 + 1] (u)			  ## btagc.c:262:28
 1e137f6:    07 64             	r7 = b[r2 + 0] (u)			  ## btagc.c:261:28
 1e137f8:    21 64             	r1 = b[r2 + 2] (u)			  ## btagc.c:263:28
 1e137fa:    36 64             	r6 = b[r2 + 3] (u)			  ## btagc.c:264:28
 1e137fc:    c8 fd 40 79       	r7 <= insert(r9, p:8, l:8)			  ## btagc.c:261:67
 1e13800:    c8 fd 80 71       	r7 <= insert(r1, p:16, l:8)			  ## btagc.c:262:67
 1e13804:    c8 fd c0 76       	r7 <= insert(r6, p:24, l:8)			  ## btagc.c:263:68
 1e13808:    17 f6 1c 80       	[r8 + 28] = r7			  ## btagc.c:261:24
 1e1380c:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:266:13
 1e13810:    09 f9 05 20       	r9 = b[r2 + 5] (u)			  ## btagc.c:268:28
 1e13814:    46 64             	r6 = b[r2 + 4] (u)			  ## btagc.c:267:28
 1e13816:    67 64             	r7 = b[r2 + 6] (u)			  ## btagc.c:269:28
 1e13818:    71 64             	r1 = b[r2 + 7] (u)			  ## btagc.c:270:28
 1e1381a:    c8 fd 40 69       	r6 <= insert(r9, p:8, l:8)			  ## btagc.c:267:67
 1e1381e:    c8 fd 80 67       	r6 <= insert(r7, p:16, l:8)			  ## btagc.c:268:67
 1e13822:    c8 fd c0 61       	r6 <= insert(r1, p:24, l:8)			  ## btagc.c:269:68
 1e13826:    16 f6 1c 80       	[r8 + 28] = r6
 1e1382a:    82 80             	r2 += 8			  ## btagc.c:238:19
 1e1382c:    45 80             	r5 += 4			  ## btagc.c:238:19
 1e1382e:    13 80             	r3 += 1			  ## btagc.c:238:26
 1e13830:    44 80             	r4 += 4			  ## btagc.c:238:19
 1e13832:    03 e4 ce 1f       	if (r3 != 64) goto -100 <btagc_init+0x28 : 1e137d2 >			  ## btagc.c:238:19
 1e13836:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:274:5
 1e1383a:    f1 b6             	r1 &= 4294959103			  ## btagc.c:274:5
 1e1383c:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:274:5
 1e13840:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:275:5
 1e13844:    71 b7             	r1 &= 4294950911			  ## btagc.c:275:5
 1e13846:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:275:5
 1e1384a:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:276:5
 1e1384e:    71 b6             	r1 &= 4294963199			  ## btagc.c:276:5
 1e13850:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:276:5
 1e13854:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:277:5
 1e13858:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:334:5
 1e1385c:    31 fd 0e 1b       	r1 = r1 & 4294049791			  ## btagc.c:334:5
 1e13860:    01 fd 0a 1b       	r1 = r1 | 655360			  ## btagc.c:334:5
 1e13864:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:334:5
 1e13868:    00 f4 01 89       	[r8 + 0] |= 1			  ## btagc.c:336:5
 1e1386c:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:337:5
 1e13870:    31 fd 1e 19       	r1 = r1 & 4294967265			  ## btagc.c:337:5
 1e13874:    01 fd 06 19       	r1 = r1 | 6			  ## btagc.c:337:5
 1e13878:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:337:5
 1e1387c:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:338:5
 1e13880:    02 fb 3f fc       	r2 = -961 <bank_code_load_addr+0x1E102B : 1fffc3f >			  ## btagc.c:338:5
 1e13884:    51 b5             	r1 &= r2			  ## btagc.c:338:5
 1e13886:    11 b3             	r1 |= 64			  ## btagc.c:338:5
 1e13888:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:338:5
 1e1388c:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:339:5
 1e13890:    20 fd 01 09       	r0 = r0 & 1			  ## btagc.c:339:5
 1e13894:    71 b5             	r1 &= 4294966271			  ## btagc.c:339:5
 1e13896:    c1 fd 50 10       	r1 <= insert(r0, p:10, l:1)			  ## btagc.c:339:5
 1e1389a:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:339:5
 1e1389e:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:340:5
 1e138a2:    f1 b5             	r1 &= 4294965247			  ## btagc.c:340:5
 1e138a4:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:340:5
 1e138a8:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:341:5
 1e138ac:    71 b6             	r1 &= 4294963199			  ## btagc.c:341:5
 1e138ae:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:341:5
 1e138b2:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:342:5
 1e138b6:    f1 b6             	r1 &= 4294959103			  ## btagc.c:342:5
 1e138b8:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:342:5
 1e138bc:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:343:5
 1e138c0:    71 b7             	r1 &= 4294950911			  ## btagc.c:343:5
 1e138c2:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:343:5
 1e138c6:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:344:5
 1e138ca:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:345:5
 1e138ce:    71 b8             	r1 &= 4294901759			  ## btagc.c:345:5
 1e138d0:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:345:5
 1e138d4:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:346:5
 1e138d8:    71 ba             	r1 &= 4293918719			  ## btagc.c:346:5
 1e138da:    c1 fd a0 10       	r1 <= insert(r0, p:20, l:1)			  ## btagc.c:346:5
 1e138de:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:346:5
 1e138e2:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:347:5
 1e138e6:    30 fd fc 06       	r0 = r0 & 4162846719			  ## btagc.c:347:5
 1e138ea:    00 fd 70 06       	r0 = r0 | 62914560			  ## btagc.c:347:5
 1e138ee:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:347:5
 1e138f2:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:348:5
 1e138f6:    f0 bd             	r0 &= 4160749567			  ## btagc.c:348:5
 1e138f8:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:348:5
 1e138fc:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:349:5
 1e13900:    70 be             	r0 &= 4026531839			  ## btagc.c:349:5
 1e13902:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:349:5
 1e13906:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:351:5
 1e1390a:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:351:5
 1e1390e:    00 fd 37 09       	r0 = r0 | 55			  ## btagc.c:351:5
 1e13912:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:351:5
 1e13916:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:352:5
 1e1391a:    30 fd 3f 0a       	r0 = r0 & 4294951167			  ## btagc.c:352:5
 1e1391e:    00 fd 27 0a       	r0 = r0 | 9984			  ## btagc.c:352:5
 1e13922:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:352:5
 1e13926:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:353:5
 1e1392a:    30 fd 60 02       	r0 = r0 & 4294852607			  ## btagc.c:353:5
 1e1392e:    00 fd 20 02       	r0 = r0 | 81920			  ## btagc.c:353:5
 1e13932:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:353:5
 1e13936:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:354:5
 1e1393a:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## btagc.c:354:5
 1e1393e:    00 fd 0a 0b       	r0 = r0 | 655360			  ## btagc.c:354:5
 1e13942:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:354:5
 1e13946:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:355:5
 1e1394a:    70 ba             	r0 &= 4293918719			  ## btagc.c:355:5
 1e1394c:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:355:5
 1e13950:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:356:5
 1e13954:    30 fd 70 06       	r0 = r0 & 4232052735			  ## btagc.c:356:5
 1e13958:    00 fd c0 0b       	r0 = r0 | 12582912			  ## btagc.c:356:5
 1e1395c:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:356:5
 1e13960:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:357:5
 1e13964:    30 fd 3c 0c       	r0 = r0 & 3288334335			  ## btagc.c:357:5
 1e13968:    10 bd             	r0 |= 67108864			  ## btagc.c:357:5
 1e1396a:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:357:5
 1e1396e:    01 f4 40 8c       	[r8 + 4] |= 1073741824			  ## btagc.c:358:5
 1e13972:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:360:5
 1e13976:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:360:5
 1e1397a:    00 fd 29 09       	r0 = r0 | 41			  ## btagc.c:360:5
 1e1397e:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:360:5
 1e13982:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:361:5
 1e13986:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:361:5
 1e1398a:    00 fd 24 00       	r0 = r0 | 2624			  ## btagc.c:361:5
 1e1398e:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:361:5
 1e13992:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:362:5
 1e13996:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:362:5
 1e1399a:    00 fd a4 02       	r0 = r0 | 167936			  ## btagc.c:362:5
 1e1399e:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:362:5
 1e139a2:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:363:5
 1e139a6:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:363:5
 1e139aa:    00 fd ac 0b       	r0 = r0 | 11272192			  ## btagc.c:363:5
 1e139ae:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:363:5
 1e139b2:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:364:5
 1e139b6:    30 fd 3f 0c       	r0 = r0 & 3238002687			  ## btagc.c:364:5
 1e139ba:    00 fd 2d 0c       	r0 = r0 | 754974720			  ## btagc.c:364:5
 1e139be:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:364:5
 1e139c2:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:365:5
 1e139c6:    30 fd c0 0c       	r0 = r0 & 1073741823			  ## btagc.c:365:5
 1e139ca:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:365:5
 1e139ce:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:367:5
 1e139d2:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:367:5
 1e139d6:    00 fd 2f 09       	r0 = r0 | 47			  ## btagc.c:367:5
 1e139da:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:367:5
 1e139de:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:368:5
 1e139e2:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:368:5
 1e139e6:    00 fd 5c 00       	r0 = r0 | 3520			  ## btagc.c:368:5
 1e139ea:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:368:5
 1e139ee:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:369:5
 1e139f2:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:369:5
 1e139f6:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:369:5
 1e139fa:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:370:5
 1e139fe:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:370:5
 1e13a02:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:370:5
 1e13a06:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:371:5
 1e13a0a:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## btagc.c:371:5
 1e13a0e:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:371:5
 1e13a12:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:372:5
 1e13a16:    30 fd fc 0c       	r0 = r0 & 67108863			  ## btagc.c:372:5
 1e13a1a:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:372:5
 1e13a1e:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:374:5
 1e13a22:    f0 b7             	r0 &= 4294934527			  ## btagc.c:374:5
 1e13a24:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:374:5
 1e13a28:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:375:5
 1e13a2c:    59 01             	{pc, r9-r4} = [sp++]			  ## btagc.c:376:1


bt_enter_deepsleep:
 1e13a2e:    74 01             	[--sp] = {rets, r4}			  ## RF.c:527:0
 1e13a30:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## RF.c:528:12
 1e13a36:    90 60             	r0 = b[r0 + 9] (u)			  ## RF.c:528:12
 1e13a38:    3e 20             	if (r0 == 0) goto 124 <bt_enter_deepsleep+0x88 : 1e13ab6 >			  ## RF.c:528:12
 1e13a3a:    00 fb fc 03       	r0 = 1020 <BTCTLER_LE_RAM_TOTAL+0x24 : 3fc >			  ## RF.c:532:25
 1e13a3e:    bf f3 e8 ce       	call -25136 <malloc : 1e0d812 >			  ## RF.c:532:25
 1e13a42:    04 08             	r4 = r0			  ## RF.c:532:25
 1e13a44:    c0 ff 20 2d 00 00 	r0 = 11552 <rf_pwr_off_info_p : 2d20 >			  ## RF.c:532:23
 1e13a4a:    0c 40             	[r0 + 0] = r4			  ## RF.c:532:23
 1e13a4c:    02 38             	if (r4 != 0) goto 4 <bt_enter_deepsleep+0x24 : 1e13a52 >			  ## RF.c:532:23
 1e13a4e:    8f f3 22 7d       	call 2030148 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e13a52:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## RF.c:535:5
 1e13a58:    02 7a             	r2 = 160			  ## RF.c:535:5
 1e13a5a:    40 08             	r0 = r4			  ## RF.c:535:5
 1e13a5c:    97 f3 42 9a       	call 3093636 <memcpy : 106ee4 >			  ## RF.c:535:5
 1e13a60:    40 fc a0 00       	r0 = r4 + 160			  ## RF.c:537:37
 1e13a64:    20 fb 1c 1b       	r1 = 1835008			  ## RF.c:537:5
 1e13a68:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:537:5
 1e13a6c:    97 f3 3a 9a       	call 3093620 <memcpy : 106ee4 >			  ## RF.c:537:5
 1e13a70:    40 fc e0 01       	r0 = r4 + 480			  ## RF.c:539:37
 1e13a74:    c1 ff 00 fc 1c 00 	r1 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:539:5
 1e13a7a:    02 fb 10 02       	r2 = 528 <BTCTLER_CONTROLLER_BSS_SIZE+0x50 : 210 >			  ## RF.c:539:5
 1e13a7e:    97 f3 31 9a       	call 3093602 <memcpy : 106ee4 >			  ## RF.c:539:5
 1e13a82:    c0 ff b4 00 1c 00 	r0 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## RF.c:539:5
 1e13a88:    21 40             	r1 = [r0 + 8]			  ## RF.c:541:44
 1e13a8a:    42 fc f0 03       	r2 = r4 + 1008			  ## RF.c:541:44
 1e13a8e:    09 44             	[r2 + 0] = r1			  ## RF.c:541:42
 1e13a90:    01 40             	r1 = [r0 + 0]			  ## RF.c:542:45
 1e13a92:    19 44             	[r2 + 4] = r1			  ## RF.c:542:43
 1e13a94:    10 40             	r0 = [r0 + 4]			  ## RF.c:543:45
 1e13a96:    28 44             	[r2 + 8] = r0			  ## RF.c:543:43
 1e13a98:    00 fb 60 01       	r0 = 352 <DRIVER_RAM_TOTAL+0x6E : 160 >			  ## RF.c:548:29
 1e13a9c:    bf f3 b9 ce       	call -25230 <malloc : 1e0d812 >			  ## RF.c:548:29
 1e13aa0:    02 08             	r2 = r0			  ## RF.c:548:29
 1e13aa2:    c0 ff 24 2d 00 00 	r0 = 11556 <ble_pwr_off_store : 2d24 >			  ## RF.c:548:27
 1e13aa8:    0a 40             	[r0 + 0] = r2			  ## RF.c:548:27
 1e13aaa:    02 34             	if (r2 != 0) goto 4 <bt_enter_deepsleep+0x82 : 1e13ab0 >			  ## RF.c:548:27
 1e13aac:    8f f3 f3 7c       	call 2030054 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e13ab0:    20 08             	r0 = r2			  ## RF.c:551:9
 1e13ab2:    80 f3 93 12       	call 9510 <ble_enter_deepsleep : 1e15fdc >			  ## RF.c:551:9
 1e13ab6:    54 01             	{pc, r4} = [sp++]			  ## RF.c:553:1


bt_exit_deepsleep:
 1e13ab8:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:556:0
 1e13aba:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF.c:556:0
 1e13ac0:    90 62             	r0 = b[r1 + 9] (u)			  ## RF.c:557:12
 1e13ac2:    7d 20             	if (r0 == 0) goto 250 <bt_exit_deepsleep+0x106 : 1e13bbe >			  ## RF.c:557:12
 1e13ac4:    10 70             	r0 = 1			  ## RF.c:567:21
 1e13ac6:    c2 ff 00 21 1f 00 	r2 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:567:21
 1e13acc:    10 f6 00 21       	[r2 + 256] = r0			  ## RF.c:567:21
 1e13ad0:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:567:21
 1e13ad6:    03 40             	r3 = [r0 + 0]			  ## RF.c:570:5
 1e13ad8:    33 fd c0 3a       	r3 = r3 & 4294918143			  ## RF.c:570:5
 1e13adc:    13 b7             	r3 |= 16384			  ## RF.c:570:5
 1e13ade:    0b 40             	[r0 + 0] = r3			  ## RF.c:570:5
 1e13ae0:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:572:11
 1e13ae2:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:572:24
 1e13ae6:    8f f3 b4 83       	call 2033512 <delay : 4252 >			  ## RF.c:572:5
 1e13aea:    00 f4 80 29       	[r2 + 0] |= 128			  ## RF.c:573:5
 1e13aee:    00 44             	r0 = [r2 + 0]			  ## RF.c:574:5
 1e13af0:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:574:5
 1e13af4:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:574:5
 1e13af8:    08 44             	[r2 + 0] = r0			  ## RF.c:574:5
 1e13afa:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:576:11
 1e13afc:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:576:24
 1e13b00:    8f f3 a7 83       	call 2033486 <delay : 4252 >			  ## RF.c:576:5
 1e13b04:    00 44             	r0 = [r2 + 0]			  ## RF.c:577:5
 1e13b06:    70 b0             	r0 &= 4294967294			  ## RF.c:577:5
 1e13b08:    08 44             	[r2 + 0] = r0			  ## RF.c:577:5
 1e13b0a:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:578:11
 1e13b0c:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:578:24
 1e13b10:    8f f3 9f 83       	call 2033470 <delay : 4252 >			  ## RF.c:578:5
 1e13b14:    00 f4 01 29       	[r2 + 0] |= 1			  ## RF.c:579:5
 1e13b18:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:581:11
 1e13b1a:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:581:24
 1e13b1e:    8f f3 98 83       	call 2033456 <delay : 4252 >			  ## RF.c:581:5
 1e13b22:    c0 ff 7c fc 1c 00 	r0 = 1899644 <uECC_vli_cmp_unsafe+0xC8C80 : 1cfc7c >			  ## RF.c:582:5
 1e13b28:    00 f4 40 09       	[r0 + 0] |= 64			  ## RF.c:582:5
 1e13b2c:    c4 ff 20 01 1c 00 	r4 = 1835296 <uECC_vli_cmp_unsafe+0xB9124 : 1c0120 >			  ## RF.c:582:5
 1e13b32:    03 f4 01 49       	[r4 + 12] |= 1			  ## RF.c:584:22
 1e13b36:    c5 ff 20 2d 00 00 	r5 = 11552 <rf_pwr_off_info_p : 2d20 >
 1e13b3c:    00 4a             	r0 = [r5 + 0]
 1e13b3e:    01 70             	r1 = 0
 1e13b40:    c2 ff 00 19 1e 00 	r2 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e13b46:    33 fd 01 19       	r3 = r1 & 4294967294			  ## RF.c:591:22
 1e13b4a:    83 e0 02 00       	if (r3 == 8) goto 4 <bt_exit_deepsleep+0x9A : 1e13b52 >			  ## RF.c:591:22
 1e13b4e:    03 40             	r3 = [r0 + 0]			  ## RF.c:592:34
 1e13b50:    0b 44             	[r2 + 0] = r3			  ## RF.c:592:32
 1e13b52:    40 80             	r0 += 4			  ## RF.c:590:19
 1e13b54:    11 80             	r1 += 1			  ## RF.c:590:62
 1e13b56:    42 80             	r2 += 4			  ## RF.c:590:19
 1e13b58:    81 e2 f5 1f       	if (r1 != 40) goto -22 <bt_exit_deepsleep+0x8E : 1e13b46 >			  ## RF.c:590:19
 1e13b5c:    06 4a             	r6 = [r5 + 0]			  ## RF.c:599:41
 1e13b5e:    61 fc a0 00       	r1 = r6 + 160			  ## RF.c:599:5
 1e13b62:    20 fb 1c 0b       	r0 = 1835008			  ## RF.c:599:5
 1e13b66:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:599:5
 1e13b6a:    97 f3 bb 99       	call 3093366 <memcpy : 106ee4 >			  ## RF.c:599:5
 1e13b6e:    60 fc e0 01       	r0 = r6 + 480			  ## RF.c:601:5
 1e13b72:    01 fb d5 ff       	r1 = -43 <bank_code_load_addr+0x1E13C1 : 1ffffd5 >			  ## RF.c:601:5
 1e13b76:    c2 ff 00 fc 1c 00 	r2 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:601:5
 1e13b7c:    21 e0 02 30       	if (r1 < 2) goto 4 <bt_exit_deepsleep+0xCC : 1e13b84 >
 1e13b80:    03 40             	r3 = [r0 + 0]			  ## RF.c:604:65
 1e13b82:    0b 44             	[r2 + 0] = r3			  ## RF.c:604:63
 1e13b84:    40 80             	r0 += 4			  ## RF.c:601:19
 1e13b86:    11 80             	r1 += 1			  ## RF.c:601:19
 1e13b88:    42 80             	r2 += 4			  ## RF.c:601:19
 1e13b8a:    91 e5 f7 1f       	if (r1 != 89) goto -18 <bt_exit_deepsleep+0xC4 : 1e13b7c >			  ## RF.c:601:19
 1e13b8e:    00 4a             	r0 = [r5 + 0]			  ## RF.c:609:23
 1e13b90:    01 fc f0 03       	r1 = r0 + 1008			  ## RF.c:609:23
 1e13b94:    12 42             	r2 = [r1 + 4]			  ## RF.c:609:42
 1e13b96:    0a 48             	[r4 + 0] = r2			  ## RF.c:609:21
 1e13b98:    22 42             	r2 = [r1 + 8]			  ## RF.c:610:42
 1e13b9a:    1a 48             	[r4 + 4] = r2			  ## RF.c:610:21
 1e13b9c:    01 42             	r1 = [r1 + 0]			  ## RF.c:611:44
 1e13b9e:    29 48             	[r4 + 8] = r1			  ## RF.c:611:23
 1e13ba0:    01 f4 80 4a       	[r4 + 4] |= 32768			  ## RF.c:613:21
 1e13ba4:    02 f4 80 4a       	[r4 + 8] |= 32768			  ## RF.c:614:23
 1e13ba8:    bf f3 38 ce       	call -25488 <free : 1e0d81c >			  ## RF.c:623:5
 1e13bac:    c4 ff 24 2d 00 00 	r4 = 11556 <ble_pwr_off_store : 2d24 >			  ## RF.c:629:28
 1e13bb2:    00 48             	r0 = [r4 + 0]			  ## RF.c:629:28
 1e13bb4:    80 f3 33 12       	call 9318 <ble_exit_deepsleep : 1e1601e >			  ## RF.c:629:9
 1e13bb8:    00 48             	r0 = [r4 + 0]			  ## RF.c:631:14
 1e13bba:    bf f3 2f ce       	call -25506 <free : 1e0d81c >			  ## RF.c:631:9
 1e13bbe:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:633:1


get_bt_osc_offset_flag:
 1e13bc0:    34 00             	[--sp] = rets			  ## analog.c:114:0
 1e13bc2:    e0 76             	r0 = 110			  ## analog.c:115:9
 1e13bc4:    bf f3 f1 db       	call -18462 <btif_eara_check_id : 1e0f3aa >			  ## analog.c:115:9
 1e13bc8:    01 70             	r1 = 0			  ## analog.c:115:9
 1e13bca:    04 20             	if (r0 == 0) goto 8 <get_bt_osc_offset_flag+0x14 : 1e13bd4 >			  ## analog.c:115:9
 1e13bcc:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## analog.c:117:19
 1e13bd2:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:117:19
 1e13bd4:    40 04             	r0 = r1.b0 (u)			  ## analog.c:122:1
 1e13bd6:    30 00             	pc = [sp++]			  ## analog.c:122:1


bt_fre_offset_value_init:
 1e13bd8:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:211:0
 1e13bda:    fc 0b             	sp += -8			  ## analog.c:211:0
 1e13bdc:    c4 ff f4 09 00 00 	r4 = 2548 <system_data_end : 9f4 >			  ## analog.c:211:0
 1e13be2:    00 70             	r0 = 0			  ## analog.c:211:0
 1e13be4:    58 58             	h[r4 + 10] = r0			  ## analog.c:213:19
 1e13be6:    c8 68             	b[r4 + 12] = r0			  ## analog.c:214:24
 1e13be8:    01 a0             	r1 = sp + 0			  ## analog.c:214:24
 1e13bea:    e0 76             	r0 = 110			  ## analog.c:218:11
 1e13bec:    62 70             	r2 = 6			  ## analog.c:218:11
 1e13bee:    bf f3 7e d9       	call -19716 <syscfg_read : 1e0eeee >			  ## analog.c:218:11
 1e13bf2:    00 04             	r0 = r0.b0 (u)			  ## analog.c:219:10
 1e13bf4:    60 e0 1b 10       	if (r0 != 6) goto 54 <bt_fre_offset_value_init+0x56 : 1e13c2e >			  ## analog.c:219:10
 1e13bf8:    85 f5 00 00       	r5 = h[sp] (u)			  ## analog.c:219:28
 1e13bfc:    00 a0             	r0 = sp + 0			  ## analog.c:219:28
 1e13bfe:    90 b0             	r0 |= 2			  ## analog.c:219:52
 1e13c00:    41 70             	r1 = 4			  ## analog.c:219:35
 1e13c02:    bf f3 0a 6b       	call -76268 <CRC16 : 1e0121a >			  ## analog.c:219:35
 1e13c06:    05 f2 12 10       	if (r5 != r0) goto 36 <bt_fre_offset_value_init+0x56 : 1e13c2e >			  ## analog.c:219:35
 1e13c0a:    80 f5 04 00       	r0 = h[sp+4] (u)			  ## analog.c:220:29
 1e13c0e:    81 f5 02 00       	r1 = h[sp+2] (u)			  ## analog.c:220:29
 1e13c12:    d0 fd 80 10       	r1 <= insert(r0, p:16, l:16)			  ## analog.c:220:29
 1e13c16:    59 58             	h[r4 + 10] = r1			  ## analog.c:220:23
 1e13c18:    10 70             	r0 = 1			  ## analog.c:221:28
 1e13c1a:    09 c4             	r1 = r1 << 16			  ## analog.c:222:14
 1e13c1c:    41 fb c8 1b       	r1 = r1 + 13107200			  ## analog.c:222:35
 1e13c20:    42 fb c8 05       	r2 = r0 + 26214400			  ## analog.c:222:35
 1e13c24:    c8 68             	b[r4 + 12] = r0			  ## analog.c:221:28
 1e13c26:    21 f2 02 30       	if (r1 < r2) goto 4 <bt_fre_offset_value_init+0x56 : 1e13c2e >			  ## analog.c:221:28
 1e13c2a:    00 70             	r0 = 0			  ## analog.c:223:27
 1e13c2c:    58 58             	h[r4 + 10] = r0			  ## analog.c:223:27
 1e13c2e:    04 0a             	sp += 8
 1e13c30:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:229:1


bt_osc_offset_set:
 1e13c32:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## analog.c:125:0
 1e13c38:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:126:12
 1e13c3a:    03 34             	if (r2 != 0) goto 6 <bt_osc_offset_set+0x10 : 1e13c42 >			  ## analog.c:126:12
 1e13c3c:    52 52             	r2 = h[r1 + 10] (u)			  ## analog.c:130:9
 1e13c3e:    20 09             	r0 += r2			  ## analog.c:130:9
 1e13c40:    58 52             	h[r1 + 10] = r0
 1e13c42:    20 00             	rts			  ## analog.c:137:1


bt_osc_offset_save:
 1e13c44:    74 01             	[--sp] = {rets, r4}			  ## analog.c:193:0
 1e13c46:    fc 0b             	sp += -8			  ## analog.c:193:0
 1e13c48:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## analog.c:193:0
 1e13c4e:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:196:12
 1e13c50:    13 32             	if (r1 != 0) goto 38 <bt_osc_offset_save+0x34 : 1e13c78 >			  ## analog.c:196:12
 1e13c52:    21 f7 0a 00       	r1 = h[r0 + 10] (s)			  ## analog.c:200:18
 1e13c56:    04 a0             	r4 = sp + 0			  ## analog.c:200:18
 1e13c58:    00 fd 02 49       	r0 = r4 | 2			  ## analog.c:200:9
 1e13c5c:    0a d4             	r2 = r1 >> 16			  ## analog.c:200:16
 1e13c5e:    1a 50             	h[r0 + 2] = r2			  ## analog.c:200:16
 1e13c60:    91 f5 02 00       	h[sp+2] = r1			  ## analog.c:200:16
 1e13c64:    41 70             	r1 = 4			  ## analog.c:201:15
 1e13c66:    bf f3 d8 6a       	call -76368 <CRC16 : 1e0121a >			  ## analog.c:201:15
 1e13c6a:    90 f5 00 00       	h[sp] = r0			  ## analog.c:201:13
 1e13c6e:    e0 76             	r0 = 110			  ## analog.c:206:5
 1e13c70:    62 70             	r2 = 6			  ## analog.c:206:5
 1e13c72:    41 08             	r1 = r4			  ## analog.c:206:5
 1e13c74:    bf f3 de d8       	call -20036 <syscfg_write : 1e0ee34 >			  ## analog.c:206:5
 1e13c78:    04 0a             	sp += 8
 1e13c7a:    54 01             	{pc, r4} = [sp++]			  ## analog.c:208:1


bt_fre_offset_get:
 1e13c7c:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## analog.c:187:0
 1e13c82:    20 f7 0a 00       	r0 = h[r0 + 10] (s)			  ## analog.c:188:12
 1e13c86:    20 00             	rts			  ## analog.c:188:5


bt_get_fine_cnt:
 1e13c88:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:496:0
 1e13c8a:    c1 ff 80 48 00 00 	r1 = 18560 <tws_sync_channel_end : 4880 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1898:23
 1e13c90:    01 f9 47 10       	r1 = b[r1 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1898:23
 1e13c94:    04 08             	r4 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1898:23
 1e13c96:    00 70             	r0 = 0
 1e13c98:    37 32             	if (r1 != 0) goto 110 <bt_get_fine_cnt+0x80 : 1e13d08 >
 1e13c9a:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >
 1e13ca0:    01 f9 cc 60       	r1 = b[r6 + 204] (u)
 1e13ca4:    31 22             	if (r1 == 0) goto 98 <bt_get_fine_cnt+0x80 : 1e13d08 >
 1e13ca6:    05 f6 d0 60       	r5 = [r6 + 208]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:272:25
 1e13caa:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e13cac:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e13cae:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e13cb0:    42 08             	r2 = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e13cb2:    bf f3 b3 9d       	call -50330 <__muldi3 : 1e0781c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e13cb6:    c2 ff 00 48 e8 01 	r2 = 32000000 <bank_code_load_addr+0x65BEC : 1e84800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e13cbc:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e13cbe:    bf f3 cc 9d       	call -50280 <__udivdi3 : 1e0785a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e13cc2:    01 f6 d8 60       	r1 = [r6 + 216]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:269:26
 1e13cc6:    c2 ff 00 ca 9a 3b 	r2 = 1000000000 <uECC_vli_cmp_unsafe+0x18A5A04 : 19aca00 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e13ccc:    c0 fe 50 32       	r3 = r2 / r5 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:64
 1e13cd0:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e13cd4:    e1 b2             	r1 = r1 - r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:49
 1e13cd6:    40 0e             	r0 = r0 * r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:283:34
 1e13cd8:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e13cdc:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e13ce0:    bf f3 42 9d       	call -50556 <__floatsisf : 1e07768 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e13ce4:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e13ce6:    00 fb d4 30       	r0 = 12500 <bredr_link_v+0x6C : 30d4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e13cea:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e13cee:    bf f3 6b 9d       	call -50474 <__floatunsisf : 1e077c8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:14
 1e13cf2:    c1 ff 00 00 20 c0 	r1 = 3223322624 <uECC_vli_cmp_unsafe+0xF9004 : 200000 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e13cf8:    bf f3 5b 9c       	call -51018 <__addsf3 : 1e075b2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e13cfc:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e13cfe:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e13d00:    bf f3 a7 9d       	call -50354 <__subsf3 : 1e07852 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e13d04:    bf f3 0a 9d       	call -50668 <__fixsfsi : 1e0771c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e13d08:    c1 ff 6c fc 1c 00 	r1 = 1899628 <uECC_vli_cmp_unsafe+0xC8C70 : 1cfc6c >			  ## RF.c:503:19
 1e13d0e:    01 42             	r1 = [r1 + 0]			  ## RF.c:503:19
 1e13d10:    40 09             	r0 += r4			  ## RF.c:503:61
 1e13d12:    02 fb ff 07       	r2 = 2047 <DRIVER_CODE_TOTAL+0x6D : 7ff >			  ## RF.c:503:32
 1e13d16:    51 b5             	r1 &= r2			  ## RF.c:503:32
 1e13d18:    c2 70             	r2 = 12			  ## RF.c:503:41
 1e13d1a:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## RF.c:503:41
 1e13d1e:    10 09             	r0 += r1			  ## RF.c:503:14
 1e13d20:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:505:5


bt_analog_part_init:
 1e13d22:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1650:0
 1e13d28:    15 f4 10 0a       	[r0 + 84] |= 4096			  ## analog.c:1656:23
 1e13d2c:    51 41             	r1 = [r0 + 84]			  ## analog.c:1657:23
 1e13d2e:    f1 b5             	r1 &= 4294965247			  ## analog.c:1657:23
 1e13d30:    59 41             	[r0 + 84] = r1			  ## analog.c:1657:23
 1e13d32:    51 41             	r1 = [r0 + 84]			  ## analog.c:1658:23
 1e13d34:    f1 b6             	r1 &= 4294959103			  ## analog.c:1658:23
 1e13d36:    59 41             	[r0 + 84] = r1			  ## analog.c:1658:23
 1e13d38:    15 f4 40 0a       	[r0 + 84] |= 16384			  ## analog.c:1659:23
 1e13d3c:    15 f4 80 09       	[r0 + 84] |= 128			  ## analog.c:1663:23
 1e13d40:    c1 ff e5 83 80 48 	r1 = 1216381925 <uECC_vli_cmp_unsafe+0x7013E9 : 8083e5 >			  ## analog.c:1665:22
 1e13d46:    09 40             	[r0 + 0] = r1			  ## analog.c:1665:22
 1e13d48:    c1 ff 16 80 1c 04 	r1 = 68976662 <uECC_vli_cmp_unsafe+0xC101A : 1c8016 >			  ## analog.c:1681:22
 1e13d4e:    19 40             	[r0 + 4] = r1			  ## analog.c:1681:22
 1e13d50:    c1 ff d8 85 00 00 	r1 = 34264 <BTCTLER_CODE_TOTAL+0x240 : 85d8 >			  ## analog.c:1696:22
 1e13d56:    29 40             	[r0 + 8] = r1			  ## analog.c:1696:22
 1e13d58:    c1 ff 00 3e 88 00 	r1 = 8928768 <uECC_vli_cmp_unsafe+0x77CE04 : 883e00 >			  ## analog.c:1708:22
 1e13d5e:    39 40             	[r0 + 12] = r1			  ## analog.c:1708:22
 1e13d60:    c1 ff 62 2e 40 01 	r1 = 20983394 <uECC_vli_cmp_unsafe+0x12FBE66 : 1402e62 >			  ## analog.c:1719:22
 1e13d66:    49 40             	[r0 + 16] = r1			  ## analog.c:1719:22
 1e13d68:    01 40             	r1 = [r0 + 0]			  ## analog.c:1719:22
 1e13d6a:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1E0C2B : 1fff83f >			  ## analog.c:1719:22
 1e13d6e:    51 b5             	r1 &= r2			  ## analog.c:1719:22
 1e13d70:    09 40             	[r0 + 0] = r1			  ## analog.c:1719:22
 1e13d72:    11 40             	r1 = [r0 + 4]			  ## analog.c:1719:22
 1e13d74:    c2 ff ff 0f c7 ff 	r2 = 4291235839 <uECC_vli_cmp_unsafe+0x1B6A003 : 1c70fff >			  ## analog.c:1719:22
 1e13d7a:    51 b5             	r1 &= r2			  ## analog.c:1719:22
 1e13d7c:    19 40             	[r0 + 4] = r1			  ## analog.c:1719:22
 1e13d7e:    01 40             	r1 = [r0 + 0]			  ## analog.c:1719:22
 1e13d80:    02 fb 40 03       	r2 = 832 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x38 : 340 >			  ## analog.c:1719:22
 1e13d84:    51 b4             	r1 |= r2			  ## analog.c:1719:22
 1e13d86:    09 40             	[r0 + 0] = r1			  ## analog.c:1719:22
 1e13d88:    01 f4 44 04       	[r0 + 4] |= 1605632			  ## analog.c:1719:22
 1e13d8c:    c1 ff 18 05 d0 00 	r1 = 13632792 <uECC_vli_cmp_unsafe+0xBF951C : d00518 >			  ## analog.c:1741:23
 1e13d92:    59 40             	[r0 + 20] = r1			  ## analog.c:1741:23
 1e13d94:    c1 ff 5a d3 e6 ff 	r1 = 4293317466 <bank_code_load_addr+0x4E746 : 1e6d35a >			  ## analog.c:1764:22
 1e13d9a:    69 40             	[r0 + 24] = r1			  ## analog.c:1764:22
 1e13d9c:    c7 f4 0f 09       	[r0 + 28] = 15			  ## analog.c:1776:22
 1e13da0:    81 40             	r1 = [r0 + 32]			  ## analog.c:1790:22
 1e13da2:    31 fd 7f 13       	r1 = r1 & 4294445055			  ## analog.c:1790:22
 1e13da6:    89 40             	[r0 + 32] = r1			  ## analog.c:1790:22
 1e13da8:    08 f4 2a 03       	[r0 + 32] |= 348160			  ## analog.c:1793:22
 1e13dac:    c1 ff df 06 a9 02 	r1 = 44631775 <uECC_vli_cmp_unsafe+0x9896E3 : a906df >			  ## analog.c:1797:23
 1e13db2:    a9 40             	[r0 + 40] = r1			  ## analog.c:1797:23
 1e13db4:    c1 ff 01 b4 06 42 	r1 = 1107735553 <text_size+0x4E70D : 6b401 >			  ## analog.c:1817:23
 1e13dba:    b9 40             	[r0 + 44] = r1			  ## analog.c:1817:23
 1e13dbc:    20 00             	rts			  ## analog.c:1834:1


get_bta_pll_bank:
 1e13dbe:    74 01             	[--sp] = {rets, r4}			  ## analog.c:301:0
 1e13dc0:    01 70             	r1 = 0			  ## analog.c:301:0
 1e13dc2:    43 71             	r3 = 20			  ## analog.c:301:0
 1e13dc4:    c2 ff f4 09 00 00 	r2 = 2548 <system_data_end : 9f4 >			  ## analog.c:301:0
 1e13dca:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## analog.c:305:24
 1e13dce:    04 f2 08 80       	if (r4 > r0) goto 16 <get_bta_pll_bank+0x24 : 1e13de2 >			  ## analog.c:305:24
 1e13dd2:    34 fc ee ff       	r4 = r3 + -18			  ## analog.c:304:19
 1e13dd6:    13 80             	r3 += 1			  ## analog.c:304:19
 1e13dd8:    11 80             	r1 += 1			  ## analog.c:304:19
 1e13dda:    f4 e1 f6 3f       	if (r4 < 31) goto -20 <get_bta_pll_bank+0xC : 1e13dca >			  ## analog.c:304:19
 1e13dde:    00 70             	r0 = 0
 1e13de0:    03 18             	goto 6 <get_bta_pll_bank+0x2A : 1e13de8 >
 1e13de2:    00 f9 32 20       	r0 = b[r2 + 50] (u)			  ## analog.c:297:12
 1e13de6:    60 b0             	r0 = r0 - r1			  ## analog.c:306:13
 1e13de8:    00 04             	r0 = r0.b0 (u)			  ## analog.c:311:1
 1e13dea:    54 01             	{pc, r4} = [sp++]			  ## analog.c:311:1


reset_trim_info:
 1e13dec:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:77:0
 1e13dee:    c0 ff 08 fc 1c 00 	r0 = 1899528 <uECC_vli_cmp_unsafe+0xC8C0C : 1cfc08 >			  ## analog.c:77:0
 1e13df4:    01 40             	r1 = [r0 + 0]			  ## analog.c:86:17
 1e13df6:    02 fb 00 fc       	r2 = -1024 <bank_code_load_addr+0x1E0FEC : 1fffc00 >			  ## analog.c:86:17
 1e13dfa:    51 b5             	r1 &= r2			  ## analog.c:86:17
 1e13dfc:    09 40             	[r0 + 0] = r1			  ## analog.c:86:17
 1e13dfe:    c1 ff fc 2c 00 00 	r1 = 11516 <tws_bulk_pool_end : 2cfc >			  ## analog.c:109:21
 1e13e04:    12 62             	r2 = b[r1 + 1] (u)			  ## analog.c:87:20
 1e13e06:    03 62             	r3 = b[r1 + 0] (u)			  ## analog.c:87:20
 1e13e08:    04 40             	r4 = [r0 + 0]			  ## analog.c:87:17
 1e13e0a:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:87:20
 1e13e0e:    02 fb ff 03       	r2 = 1023 <BTCTLER_LE_RAM_TOTAL+0x27 : 3ff >			  ## analog.c:87:20
 1e13e12:    53 b5             	r3 &= r2			  ## analog.c:87:20
 1e13e14:    53 b8             	r3 |= r4			  ## analog.c:87:17
 1e13e16:    0b 40             	[r0 + 0] = r3			  ## analog.c:87:17
 1e13e18:    03 40             	r3 = [r0 + 0]			  ## analog.c:88:17
 1e13e1a:    c4 ff ff 03 f0 ff 	r4 = 4293919743 <bank_code_load_addr+0xE17EB : 1f003ff >			  ## analog.c:88:17
 1e13e20:    53 b9             	r3 &= r4			  ## analog.c:88:17
 1e13e22:    0b 40             	[r0 + 0] = r3			  ## analog.c:88:17
 1e13e24:    33 62             	r3 = b[r1 + 3] (u)			  ## analog.c:89:20
 1e13e26:    24 62             	r4 = b[r1 + 2] (u)			  ## analog.c:89:20
 1e13e28:    05 40             	r5 = [r0 + 0]			  ## analog.c:89:17
 1e13e2a:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## analog.c:89:20
 1e13e2e:    52 b9             	r2 &= r4			  ## analog.c:89:20
 1e13e30:    92 c2             	r2 = r2 << 10			  ## analog.c:89:20
 1e13e32:    52 ba             	r2 |= r5			  ## analog.c:89:17
 1e13e34:    0a 40             	[r0 + 0] = r2			  ## analog.c:89:17
 1e13e36:    22 40             	r2 = [r0 + 8]			  ## analog.c:92:17
 1e13e38:    32 fd ff 29       	r2 = r2 & 4294967040			  ## analog.c:92:17
 1e13e3c:    2a 40             	[r0 + 8] = r2			  ## analog.c:92:17
 1e13e3e:    42 62             	r2 = b[r1 + 4] (u)			  ## analog.c:93:21
 1e13e40:    23 40             	r3 = [r0 + 8]			  ## analog.c:93:17
 1e13e42:    52 b6             	r2 |= r3			  ## analog.c:93:17
 1e13e44:    2a 40             	[r0 + 8] = r2			  ## analog.c:93:17
 1e13e46:    22 40             	r2 = [r0 + 8]			  ## analog.c:94:17
 1e13e48:    32 fd ff 2a       	r2 = r2 & 4294902015			  ## analog.c:94:17
 1e13e4c:    2a 40             	[r0 + 8] = r2			  ## analog.c:94:17
 1e13e4e:    72 62             	r2 = b[r1 + 7] (u)			  ## analog.c:95:21
 1e13e50:    63 62             	r3 = b[r1 + 6] (u)			  ## analog.c:95:21
 1e13e52:    24 40             	r4 = [r0 + 8]			  ## analog.c:95:17
 1e13e54:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## analog.c:95:21
 1e13e58:    1a c2             	r2 = r3 << 8			  ## analog.c:95:21
 1e13e5a:    a2 04             	r2 = r2.l (u)			  ## analog.c:95:21
 1e13e5c:    52 b8             	r2 |= r4			  ## analog.c:95:17
 1e13e5e:    2a 40             	[r0 + 8] = r2			  ## analog.c:95:17
 1e13e60:    22 40             	r2 = [r0 + 8]			  ## analog.c:96:17
 1e13e62:    32 fd ff 2b       	r2 = r2 & 4278255615			  ## analog.c:96:17
 1e13e66:    2a 40             	[r0 + 8] = r2			  ## analog.c:96:17
 1e13e68:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:97:21
 1e13e6a:    23 40             	r3 = [r0 + 8]			  ## analog.c:97:17
 1e13e6c:    12 c4             	r2 = r2 << 16			  ## analog.c:97:21
 1e13e6e:    52 b6             	r2 |= r3			  ## analog.c:97:17
 1e13e70:    2a 40             	[r0 + 8] = r2			  ## analog.c:97:17
 1e13e72:    c2 ff 08 19 1e 00 	r2 = 1972488 <uECC_vli_cmp_unsafe+0xDA90C : 1e1908 >			  ## analog.c:97:17
 1e13e78:    03 44             	r3 = [r2 + 0]			  ## analog.c:100:22
 1e13e7a:    33 fd ff 35       	r3 = r3 & 4261543935			  ## analog.c:100:22
 1e13e7e:    0b 44             	[r2 + 0] = r3			  ## analog.c:100:22
 1e13e80:    e3 62             	r3 = b[r1 + 14] (u)			  ## analog.c:101:25
 1e13e82:    04 44             	r4 = [r2 + 0]			  ## analog.c:101:22
 1e13e84:    5b c4             	r3 = r3 << 17			  ## analog.c:101:25
 1e13e86:    53 b8             	r3 |= r4			  ## analog.c:101:22
 1e13e88:    0b 44             	[r2 + 0] = r3			  ## analog.c:101:22
 1e13e8a:    13 44             	r3 = [r2 + 4]			  ## analog.c:102:22
 1e13e8c:    33 fd ff 39       	r3 = r3 & 4294967040			  ## analog.c:102:22
 1e13e90:    1b 44             	[r2 + 4] = r3			  ## analog.c:102:22
 1e13e92:    03 63             	r3 = b[r1 + 16] (u)			  ## analog.c:103:25
 1e13e94:    14 44             	r4 = [r2 + 4]			  ## analog.c:103:22
 1e13e96:    53 b8             	r3 |= r4			  ## analog.c:103:22
 1e13e98:    1b 44             	[r2 + 4] = r3			  ## analog.c:103:22
 1e13e9a:    32 40             	r2 = [r0 + 12]			  ## analog.c:106:17
 1e13e9c:    03 fb 00 fe       	r3 = -512 <bank_code_load_addr+0x1E11EC : 1fffe00 >			  ## analog.c:106:17
 1e13ea0:    52 b7             	r2 &= r3			  ## analog.c:106:17
 1e13ea2:    3a 40             	[r0 + 12] = r2			  ## analog.c:106:17
 1e13ea4:    32 63             	r2 = b[r1 + 19] (u)			  ## analog.c:107:21
 1e13ea6:    23 63             	r3 = b[r1 + 18] (u)			  ## analog.c:107:21
 1e13ea8:    34 40             	r4 = [r0 + 12]			  ## analog.c:107:17
 1e13eaa:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:107:21
 1e13eae:    02 fb ff 01       	r2 = 511 <BTCTLER_CONTROLLER_BSS_SIZE+0x3F : 1ff >			  ## analog.c:107:21
 1e13eb2:    53 b5             	r3 &= r2			  ## analog.c:107:21
 1e13eb4:    53 b8             	r3 |= r4			  ## analog.c:107:17
 1e13eb6:    3b 40             	[r0 + 12] = r3			  ## analog.c:107:17
 1e13eb8:    33 40             	r3 = [r0 + 12]			  ## analog.c:108:17
 1e13eba:    c4 ff ff 01 fc ff 	r4 = 4294705663 <bank_code_load_addr+0x1A15EB : 1fc01ff >			  ## analog.c:108:17
 1e13ec0:    53 b9             	r3 &= r4			  ## analog.c:108:17
 1e13ec2:    3b 40             	[r0 + 12] = r3			  ## analog.c:108:17
 1e13ec4:    53 63             	r3 = b[r1 + 21] (u)			  ## analog.c:109:21
 1e13ec6:    41 63             	r1 = b[r1 + 20] (u)			  ## analog.c:109:21
 1e13ec8:    34 40             	r4 = [r0 + 12]			  ## analog.c:109:17
 1e13eca:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## analog.c:109:21
 1e13ece:    51 b5             	r1 &= r2			  ## analog.c:109:21
 1e13ed0:    49 c2             	r1 = r1 << 9			  ## analog.c:109:21
 1e13ed2:    51 b8             	r1 |= r4			  ## analog.c:109:17
 1e13ed4:    39 40             	[r0 + 12] = r1			  ## analog.c:109:17
 1e13ed6:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:110:1


txtrim_analog_init:
 1e13ed8:    34 00             	[--sp] = rets			  ## analog.c:1060:0
 1e13eda:    23 17             	call -442 <bt_analog_part_init : 1e13d22 >			  ## analog.c:1061:5
 1e13edc:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1061:5
 1e13ee2:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:1063:22
 1e13ee6:    11 40             	r1 = [r0 + 4]			  ## analog.c:1066:22
 1e13ee8:    f1 b5             	r1 &= 4294965247			  ## analog.c:1066:22
 1e13eea:    19 40             	[r0 + 4] = r1			  ## analog.c:1066:22
 1e13eec:    21 40             	r1 = [r0 + 8]			  ## analog.c:1067:22
 1e13eee:    71 b0             	r1 &= 4294967294			  ## analog.c:1067:22
 1e13ef0:    29 40             	[r0 + 8] = r1			  ## analog.c:1067:22
 1e13ef2:    21 40             	r1 = [r0 + 8]			  ## analog.c:1068:22
 1e13ef4:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1E122B : 1fffe3f >			  ## analog.c:1068:22
 1e13ef8:    51 b5             	r1 &= r2			  ## analog.c:1068:22
 1e13efa:    29 40             	[r0 + 8] = r1			  ## analog.c:1068:22
 1e13efc:    21 40             	r1 = [r0 + 8]			  ## analog.c:1069:22
 1e13efe:    71 b0             	r1 &= 4294967294			  ## analog.c:1069:22
 1e13f00:    29 40             	[r0 + 8] = r1			  ## analog.c:1069:22
 1e13f02:    31 40             	r1 = [r0 + 12]			  ## analog.c:1070:22
 1e13f04:    31 fd 1e 1b       	r1 = r1 & 4293001215			  ## analog.c:1070:22
 1e13f08:    39 40             	[r0 + 12] = r1			  ## analog.c:1070:22
 1e13f0a:    31 40             	r1 = [r0 + 12]			  ## analog.c:1071:22
 1e13f0c:    31 fd 7c 1a       	r1 = r1 & 4294935551			  ## analog.c:1071:22
 1e13f10:    39 40             	[r0 + 12] = r1			  ## analog.c:1071:22
 1e13f12:    41 40             	r1 = [r0 + 16]			  ## analog.c:1072:22
 1e13f14:    71 b1             	r1 &= 4294967291			  ## analog.c:1072:22
 1e13f16:    49 40             	[r0 + 16] = r1			  ## analog.c:1072:22
 1e13f18:    41 40             	r1 = [r0 + 16]			  ## analog.c:1073:22
 1e13f1a:    71 b8             	r1 &= 4294901759			  ## analog.c:1073:22
 1e13f1c:    49 40             	[r0 + 16] = r1			  ## analog.c:1073:22
 1e13f1e:    31 40             	r1 = [r0 + 12]			  ## analog.c:1076:22
 1e13f20:    c2 ff 00 04 16 00 	r2 = 1442816 <uECC_vli_cmp_unsafe+0x59404 : 160400 >			  ## analog.c:1076:22
 1e13f26:    51 b4             	r1 |= r2			  ## analog.c:1076:22
 1e13f28:    39 40             	[r0 + 12] = r1			  ## analog.c:1076:22
 1e13f2a:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:1079:22
 1e13f2e:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:1082:22
 1e13f32:    03 f4 01 0b       	[r0 + 12] |= 65536			  ## analog.c:1084:22
 1e13f36:    05 f4 0f 09       	[r0 + 20] |= 15			  ## analog.c:1089:22
 1e13f3a:    51 40             	r1 = [r0 + 20]			  ## analog.c:1094:22
 1e13f3c:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:1094:22
 1e13f42:    51 b4             	r1 |= r2			  ## analog.c:1094:22
 1e13f44:    59 40             	[r0 + 20] = r1			  ## analog.c:1094:22
 1e13f46:    61 40             	r1 = [r0 + 24]			  ## analog.c:1098:22
 1e13f48:    69 40             	[r0 + 24] = r1			  ## analog.c:1098:22
 1e13f4a:    71 40             	r1 = [r0 + 28]			  ## analog.c:1100:22
 1e13f4c:    c2 ff 10 00 18 00 	r2 = 1572880 <uECC_vli_cmp_unsafe+0x79014 : 180010 >			  ## analog.c:1100:22
 1e13f52:    51 b4             	r1 |= r2			  ## analog.c:1100:22
 1e13f54:    79 40             	[r0 + 28] = r1			  ## analog.c:1100:22
 1e13f56:    30 00             	pc = [sp++]			  ## analog.c:1103:1


rxtrim_analog_init:
 1e13f58:    34 00             	[--sp] = rets			  ## analog.c:606:0
 1e13f5a:    e3 16             	call -570 <bt_analog_part_init : 1e13d22 >			  ## analog.c:607:5
 1e13f5c:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:607:5
 1e13f62:    01 40             	r1 = [r0 + 0]			  ## analog.c:609:22
 1e13f64:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1E0C2B : 1fff83f >			  ## analog.c:609:22
 1e13f68:    51 b5             	r1 &= r2			  ## analog.c:609:22
 1e13f6a:    09 40             	[r0 + 0] = r1			  ## analog.c:609:22
 1e13f6c:    01 40             	r1 = [r0 + 0]			  ## analog.c:610:22
 1e13f6e:    02 fb c0 03       	r2 = 960 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0xB8 : 3c0 >			  ## analog.c:610:22
 1e13f72:    51 b4             	r1 |= r2			  ## analog.c:610:22
 1e13f74:    09 40             	[r0 + 0] = r1			  ## analog.c:610:22
 1e13f76:    61 40             	r1 = [r0 + 24]			  ## analog.c:612:22
 1e13f78:    c2 ff ff ff 1f 00 	r2 = 2097151 <uECC_vli_cmp_unsafe+0xF9003 : 1fffff >			  ## analog.c:612:22
 1e13f7e:    51 b5             	r1 &= r2			  ## analog.c:612:22
 1e13f80:    69 40             	[r0 + 24] = r1			  ## analog.c:612:22
 1e13f82:    06 f4 fc 06       	[r0 + 24] |= 132120576			  ## analog.c:613:22
 1e13f86:    21 40             	r1 = [r0 + 8]			  ## analog.c:615:22
 1e13f88:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1E122B : 1fffe3f >			  ## analog.c:615:22
 1e13f8c:    51 b5             	r1 &= r2			  ## analog.c:615:22
 1e13f8e:    29 40             	[r0 + 8] = r1			  ## analog.c:615:22
 1e13f90:    11 40             	r1 = [r0 + 4]			  ## analog.c:616:22
 1e13f92:    31 fd f0 1a       	r1 = r1 & 4294905855			  ## analog.c:616:22
 1e13f96:    19 40             	[r0 + 4] = r1			  ## analog.c:616:22
 1e13f98:    31 40             	r1 = [r0 + 12]			  ## analog.c:618:22
 1e13f9a:    c2 ff ff 83 e1 ff 	r2 = 4292969471 <le_hw_init+0xF3 : 1e183ff >			  ## analog.c:618:22
 1e13fa0:    51 b5             	r1 &= r2			  ## analog.c:618:22
 1e13fa2:    39 40             	[r0 + 12] = r1			  ## analog.c:618:22
 1e13fa4:    21 40             	r1 = [r0 + 8]			  ## analog.c:621:22
 1e13fa6:    02 fb c0 01       	r2 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:621:22
 1e13faa:    51 b4             	r1 |= r2			  ## analog.c:621:22
 1e13fac:    29 40             	[r0 + 8] = r1			  ## analog.c:621:22
 1e13fae:    01 f4 50 0a       	[r0 + 4] |= 20480			  ## analog.c:622:22
 1e13fb2:    31 40             	r1 = [r0 + 12]			  ## analog.c:624:22
 1e13fb4:    c2 ff 00 7c 15 00 	r2 = 1408000 <uECC_vli_cmp_unsafe+0x50C04 : 157c00 >			  ## analog.c:624:22
 1e13fba:    51 b4             	r1 |= r2			  ## analog.c:624:22
 1e13fbc:    39 40             	[r0 + 12] = r1			  ## analog.c:624:22
 1e13fbe:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:628:22
 1e13fc2:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:631:22
 1e13fc6:    01 f4 08 0a       	[r0 + 4] |= 2048			  ## analog.c:633:22
 1e13fca:    02 f4 01 09       	[r0 + 8] |= 1			  ## analog.c:634:22
 1e13fce:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:635:22
 1e13fd2:    01 f4 01 09       	[r0 + 4] |= 1			  ## analog.c:638:22
 1e13fd6:    05 f4 0d 09       	[r0 + 20] |= 13			  ## analog.c:640:22
 1e13fda:    51 40             	r1 = [r0 + 20]			  ## analog.c:645:22
 1e13fdc:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:645:22
 1e13fe2:    51 b4             	r1 |= r2			  ## analog.c:645:22
 1e13fe4:    59 40             	[r0 + 20] = r1			  ## analog.c:645:22
 1e13fe6:    06 f4 10 0b       	[r0 + 24] |= 1048576			  ## analog.c:649:22
 1e13fea:    30 00             	pc = [sp++]			  ## analog.c:651:1


get_ldo_voltage:
 1e13fec:    77 01             	[--sp] = {rets, r7-r4}			  ## analog.c:3184:0
 1e13fee:    c7 ff 00 19 1e 00 	r7 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3184:0
 1e13ff4:    01 4e             	r1 = [r7 + 0]			  ## analog.c:3180:5
 1e13ff6:    04 08             	r4 = r0			  ## analog.c:3180:5
 1e13ff8:    30 fd 38 1a       	r0 = r1 & 4294952959			  ## analog.c:3180:5
 1e13ffc:    08 4e             	[r7 + 0] = r0			  ## analog.c:3180:5
 1e13ffe:    bf f3 10 88       	call -61408 <adc_pmu_detect_en : 1e05022 >			  ## analog.c:3189:5
 1e14002:    d0 70             	r0 = 13			  ## analog.c:3190:5
 1e14004:    bf f3 4b 61       	call -81258 <adc_sample : 1e0029e >			  ## analog.c:3190:5
 1e14008:    05 70             	r5 = 0
 1e1400a:    76 fc 00 18       	r6 = r7 + 6144
 1e1400e:    00 70             	r0 = 0
 1e14010:    01 4c             	r1 = [r6 + 0]			  ## analog.c:3192:26
 1e14012:    51 04             	r1 = r1.b0 (s)			  ## analog.c:3192:16
 1e14014:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <get_ldo_voltage+0x24 : 1e14010 >			  ## analog.c:3192:9
 1e14018:    11 4c             	r1 = [r6 + 4]			  ## analog.c:3194:30
 1e1401a:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3195:21
 1e1401e:    10 80             	r0 += 1			  ## analog.c:3191:30
 1e14020:    15 09             	r5 += r1			  ## analog.c:3194:19
 1e14022:    a0 e0 f5 1f       	if (r0 != 10) goto -22 <get_ldo_voltage+0x24 : 1e14010 >
 1e14026:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3180:5
 1e14028:    21 fd 07 49       	r1 = r4 & 7			  ## analog.c:3180:5
 1e1402c:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3180:5
 1e14030:    c3 fd 58 01       	r0 <= insert(r1, p:11, l:3)			  ## analog.c:3180:5
 1e14034:    08 4e             	[r7 + 0] = r0			  ## analog.c:3180:5
 1e14036:    80 7c             	r0 = 200			  ## analog.c:3199:5
 1e14038:    8f f3 0b 81       	call 2032150 <delay : 4252 >			  ## analog.c:3199:5
 1e1403c:    f0 70             	r0 = 15			  ## analog.c:3201:5
 1e1403e:    bf f3 2e 61       	call -81316 <adc_sample : 1e0029e >			  ## analog.c:3201:5
 1e14042:    00 70             	r0 = 0
 1e14044:    01 70             	r1 = 0
 1e14046:    02 4c             	r2 = [r6 + 0]			  ## analog.c:3203:26
 1e14048:    92 04             	r2 = r2.b0 (s)			  ## analog.c:3203:16
 1e1404a:    f2 ef fc cf       	ifs (r2 > -1) goto -8 <get_ldo_voltage+0x5A : 1e14046 >			  ## analog.c:3203:9
 1e1404e:    12 4c             	r2 = [r6 + 4]			  ## analog.c:3205:30
 1e14050:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3206:21
 1e14054:    11 80             	r1 += 1			  ## analog.c:3202:30
 1e14056:    20 09             	r0 += r2			  ## analog.c:3205:19
 1e14058:    a1 e0 f5 1f       	if (r1 != 10) goto -22 <get_ldo_voltage+0x5A : 1e14046 >
 1e1405c:    c1 ff 00 08 00 00 	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e14062:    f1 52             	r1 = h[r1 + 30] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e14064:    a2 70             	r2 = 10			  ## analog.c:3210:29
 1e14066:    c0 fe 20 35       	r3 = r5 / r2 (u)			  ## analog.c:3209:29
 1e1406a:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## analog.c:3210:29
 1e1406e:    85 fd 20 11       	r1 = uextra(r1, p:4, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:40
 1e14072:    01 fe 03 19       	r1 = r1 * 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:40
 1e14076:    11 fc 21 03       	r1 = r1 + 801			  ## analog.c:3168:11
 1e1407a:    08 0e             	r0 = r1 * r0			  ## analog.c:3169:23
 1e1407c:    c0 fe 30 00       	r0 = r0 / r3 (u)			  ## analog.c:3169:29
 1e14080:    57 01             	{pc, r7-r4} = [sp++]			  ## analog.c:3217:5


bta_pll_config_init:
 1e14082:    7c 01             	[--sp] = {rets, r12-r4}			  ## analog.c:2453:0
 1e14084:    04 70             	r4 = 0			  ## analog.c:2453:0
 1e14086:    cc ff ac fc 1c 00 	r12 = 1899692 <uECC_vli_cmp_unsafe+0xC8CB0 : 1cfcac >			  ## analog.c:2453:0
 1e1408c:    14 f6 00 c0       	[r12 + 0] = r4			  ## analog.c:2459:19
 1e14090:    c6 ff 80 33 e1 01 	r6 = 31536000 <m_code_addr : 1e13380 >			  ## analog.c:2459:19
 1e14096:    f7 74             	r7 = 79			  ## analog.c:2459:19
 1e14098:    c8 ff cc 34 e1 01 	r8 = 31536332 <bt_frac_pll_int_48m : 1e134cc >			  ## analog.c:2459:19
 1e1409e:    c9 ff 24 01 08 00 	r9 = 524580 <text_size+0x63430 : 80124 >			  ## analog.c:2459:19
 1e140a4:    4a fb 10 9b       	r10 = r9 + 1048576			  ## analog.c:2459:19
 1e140a8:    cb ff ff ff 7f 00 	r11 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >			  ## analog.c:2459:19
 1e140ae:    05 fa 00 48       	r5 = b[r4+r8] (u)			  ## analog.c:2466:32
 1e140b2:    c0 05             	r0 = r7.b0 (u)			  ## analog.c:2463:16
 1e140b4:    84 16             	call -760 <get_bta_pll_bank : 1e13dbe >			  ## analog.c:2463:16
 1e140b6:    41 f6 04 60       	r1 = [r6 ++= 4]			  ## analog.c:2465:32
 1e140ba:    52 fb 40 1b       	r2 = r1 - 4194304			  ## analog.c:2468:64
 1e140be:    00 c3             	r0 = r0 << 12			  ## analog.c:2468:64
 1e140c0:    23 ff 80 2b 05 00 	if (r2 < 8388608) goto 10 <bta_pll_config_init+0x4E : 1e140d0 >			  ## analog.c:2468:64
 1e140c6:    e0 fd 90 00       	r0 = r0 | r9			  ## analog.c:2470:126
 1e140ca:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2470:28
 1e140ce:    0c 18             	goto 24 <bta_pll_config_init+0x66 : 1e140e8 >			  ## analog.c:2470:28
 1e140d0:    e0 fd a0 00       	r0 = r0 | r10			  ## analog.c:2473:126
 1e140d4:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2473:28
 1e140d8:    b1 f2 04 c0       	ifs (r1 > r11) goto 8 <bta_pll_config_init+0x62 : 1e140e4 >			  ## analog.c:2475:17
 1e140dc:    41 fb 80 1b       	r1 = r1 + 8388608			  ## analog.c:2477:38
 1e140e0:    f5 8f             	r5 += -1			  ## analog.c:2476:38
 1e140e2:    02 18             	goto 4 <bta_pll_config_init+0x66 : 1e140e8 >
 1e140e4:    51 fb 80 1b       	r1 = r1 - 8388608			  ## analog.c:2479:38
 1e140e8:    08 d9             	r0 = r1 >>> 4			  ## analog.c:2482:77
 1e140ea:    29 c5             	r1 = r5 << 20			  ## analog.c:2482:46
 1e140ec:    50 b2             	r0 |= r1			  ## analog.c:2482:53
 1e140ee:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2482:23
 1e140f2:    14 80             	r4 += 1			  ## analog.c:2462:26
 1e140f4:    17 80             	r7 += 1			  ## analog.c:2462:19
 1e140f6:    14 e5 da 1f       	if (r4 != 81) goto -76 <bta_pll_config_init+0x2C : 1e140ae >			  ## analog.c:2462:19
 1e140fa:    5c 01             	{pc, r12-r4} = [sp++]			  ## analog.c:2484:1


bt_rf_init:
 1e140fc:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF.c:395:0
 1e140fe:    64 0b             	sp += -312			  ## RF.c:395:0
 1e14100:    10 70             	r0 = 1			  ## RF.c:398:21
 1e14102:    c1 ff 00 21 1f 00 	r1 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:398:21
 1e14108:    10 f6 00 11       	[r1 + 256] = r0			  ## RF.c:398:21
 1e1410c:    cc ff f4 09 00 00 	r12 = 2548 <system_data_end : 9f4 >			  ## RF.c:398:21
 1e14112:    08 70             	r8 = 0			  ## RF.c:398:21
 1e14114:    18 f9 0f c0       	b[r12 + 15] = r8			  ## RF.c:96:17
 1e14118:    80 71             	r0 = 24			  ## RF.c:99:18
 1e1411a:    10 f9 06 c0       	b[r12 + 6] = r0			  ## RF.c:99:18
 1e1411e:    a0 70             	r0 = 10			  ## RF.c:99:18
 1e14120:    10 f9 07 c0       	b[r12 + 7] = r0			  ## RF.c:100:17
 1e14124:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:100:17
 1e1412a:    02 40             	r2 = [r0 + 0]			  ## RF.c:405:5
 1e1412c:    32 fd c0 2a       	r2 = r2 & 4294918143			  ## RF.c:405:5
 1e14130:    12 b7             	r2 |= 16384			  ## RF.c:405:5
 1e14132:    0a 40             	[r0 + 0] = r2			  ## RF.c:405:5
 1e14134:    00 7f             	r0 = 240			  ## RF.c:407:5
 1e14136:    8f f3 8c 80       	call 2031896 <delay : 4252 >			  ## RF.c:407:5
 1e1413a:    00 f4 80 19       	[r1 + 0] |= 128			  ## RF.c:408:5
 1e1413e:    00 42             	r0 = [r1 + 0]			  ## RF.c:409:5
 1e14140:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:409:5
 1e14144:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:409:5
 1e14148:    08 42             	[r1 + 0] = r0			  ## RF.c:409:5
 1e1414a:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:411:11
 1e1414e:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:411:24
 1e14152:    8f f3 7e 80       	call 2031868 <delay : 4252 >			  ## RF.c:411:5
 1e14156:    00 f4 01 19       	[r1 + 0] |= 1			  ## RF.c:412:5
 1e1415a:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:413:11
 1e1415e:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:413:24
 1e14162:    8f f3 76 80       	call 2031852 <delay : 4252 >			  ## RF.c:413:5
 1e14166:    c4 ff 00 fc 1c 00 	r4 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:413:5
 1e1416c:    10 f4 04 4a       	[r4 + 64] |= 1024			  ## RF.c:414:16
 1e14170:    cd ff 00 19 1e 00 	r13 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e14176:    18 f6 50 d0       	[r13 + 80] = r8
 1e1417a:    d5 f4 80 d9       	[r13 + 84] = 128
 1e1417e:    14 f4 40 49       	[r4 + 80] |= 64			  ## analog.c:2791:16
 1e14182:    47 fc 98 00       	r7 = r4 + 152
 1e14186:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2599:20
 1e14188:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## analog.c:2599:20
 1e1418c:    18 4e             	[r7 + 4] = r0			  ## analog.c:2599:20
 1e1418e:    01 f4 08 79       	[r7 + 4] |= 8			  ## analog.c:2600:20
 1e14192:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2601:20
 1e14194:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2601:20
 1e14198:    08 4e             	[r7 + 0] = r0			  ## analog.c:2601:20
 1e1419a:    00 f4 32 79       	[r7 + 0] |= 50			  ## analog.c:2602:20
 1e1419e:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2603:21
 1e141a0:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2603:21
 1e141a4:    08 4e             	[r7 + 0] = r0			  ## analog.c:2603:21
 1e141a6:    00 f4 32 7b       	[r7 + 0] |= 3276800			  ## analog.c:2604:21
 1e141aa:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2605:21
 1e141ac:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2605:21
 1e141b0:    08 4e             	[r7 + 0] = r0			  ## analog.c:2605:21
 1e141b2:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2606:21
 1e141b4:    08 4e             	[r7 + 0] = r0			  ## analog.c:2606:21
 1e141b6:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2607:21
 1e141b8:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2607:21
 1e141bc:    08 4e             	[r7 + 0] = r0			  ## analog.c:2607:21
 1e141be:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2608:21
 1e141c0:    08 4e             	[r7 + 0] = r0			  ## analog.c:2608:21
 1e141c2:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2609:21
 1e141c4:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2609:21
 1e141c8:    18 4e             	[r7 + 4] = r0			  ## analog.c:2609:21
 1e141ca:    01 f4 0a 7b       	[r7 + 4] |= 655360			  ## analog.c:2610:21
 1e141ce:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2611:21
 1e141d0:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2611:21
 1e141d4:    18 4e             	[r7 + 4] = r0			  ## analog.c:2611:21
 1e141d6:    01 f4 0a 7c       	[r7 + 4] |= 167772160			  ## analog.c:2612:21
 1e141da:    a0 70             	r0 = 10			  ## analog.c:2613:5
 1e141dc:    8f f3 39 80       	call 2031730 <delay : 4252 >			  ## analog.c:2613:5
 1e141e0:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2616:20
 1e141e2:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2616:20
 1e141e6:    28 4e             	[r7 + 8] = r0			  ## analog.c:2616:20
 1e141e8:    02 f4 0a 79       	[r7 + 8] |= 10			  ## analog.c:2617:20
 1e141ec:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2618:20
 1e141ee:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2618:20
 1e141f2:    28 4e             	[r7 + 8] = r0			  ## analog.c:2618:20
 1e141f4:    02 f4 0a 7a       	[r7 + 8] |= 2560			  ## analog.c:2619:20
 1e141f8:    d2 f4 b9 49       	[r4 + 72] = 185			  ## analog.c:2639:17
 1e141fc:    c0 ff 44 d1 ff 0c 	r0 = 218091844 <uECC_vli_cmp_unsafe+0xEF6148 : ffd144 >			  ## analog.c:2641:18
 1e14202:    08 48             	[r4 + 0] = r0			  ## analog.c:2641:18
 1e14204:    c0 ff de 3c 00 6e 	r0 = 1845509342 <delay_p11_tmr1_lrc+0x38 : 3cde >			  ## analog.c:2656:18
 1e1420a:    18 48             	[r4 + 4] = r0			  ## analog.c:2656:18
 1e1420c:    c0 ff 00 00 10 32 	r0 = 839909376 <text_size+0xE330C : 100000 >			  ## analog.c:2671:18
 1e14212:    28 48             	[r4 + 8] = r0			  ## analog.c:2671:18
 1e14214:    c3 f4 80 4f       	[r4 + 12] = 2155905152			  ## analog.c:2677:18
 1e14218:    00 fb 78 78       	r0 = 30840 <nvbss_size+0x5F8 : 7878 >			  ## analog.c:2682:18
 1e1421c:    48 48             	[r4 + 16] = r0			  ## analog.c:2682:18
 1e1421e:    c0 ff ff 00 fc 23 	r0 = 603717887 <bank_code_load_addr+0x1A14EB : 1fc00ff >			  ## analog.c:2686:18
 1e14224:    58 48             	[r4 + 20] = r0			  ## analog.c:2686:18
 1e14226:    18 f6 18 40       	[r4 + 24] = r8			  ## analog.c:2692:18
 1e1422a:    18 f6 1c 40       	[r4 + 28] = r8			  ## analog.c:2694:18
 1e1422e:    c0 ff 37 55 55 36 	r0 = 911562039 <uECC_vli_cmp_unsafe+0x44E53B : 555537 >			  ## analog.c:2696:18
 1e14234:    88 48             	[r4 + 32] = r0			  ## analog.c:2696:18
 1e14236:    c0 ff 40 80 6d 7c 	r0 = 2087551040 <uECC_vli_cmp_unsafe+0x5D1044 : 6d8040 >			  ## analog.c:2702:18
 1e1423c:    98 48             	[r4 + 36] = r0			  ## analog.c:2702:18
 1e1423e:    c0 ff 20 c8 05 06 	r0 = 101042208 <text_size+0x3FB2C : 5c820 >			  ## analog.c:2718:18
 1e14244:    a8 48             	[r4 + 40] = r0			  ## analog.c:2718:18
 1e14246:    c0 ff b8 00 20 03 	r0 = 52428984 <uECC_vli_cmp_unsafe+0x10F90BC : 12000b8 >			  ## analog.c:2728:18
 1e1424c:    b8 48             	[r4 + 44] = r0			  ## analog.c:2728:18
 1e1424e:    4e fc c0 01       	r14 = r4 + 448			  ## analog.c:2728:18
 1e14252:    18 f6 24 e0       	[r14 + 36] = r8			  ## analog.c:2733:18
 1e14256:    18 f6 28 e0       	[r14 + 40] = r8			  ## analog.c:2743:18
 1e1425a:    18 f6 2c e0       	[r14 + 44] = r8			  ## analog.c:2746:18
 1e1425e:    18 f6 30 e0       	[r14 + 48] = r8			  ## analog.c:2749:18
 1e14262:    18 f6 34 e0       	[r14 + 52] = r8			  ## analog.c:2752:18
 1e14266:    18 f6 38 e0       	[r14 + 56] = r8			  ## analog.c:2755:18
 1e1426a:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2760:18
 1e1426c:    70 be             	r0 &= 4026531839			  ## analog.c:2760:18
 1e1426e:    a8 48             	[r4 + 40] = r0			  ## analog.c:2760:18
 1e14270:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2761:18
 1e14272:    f0 be             	r0 &= 3758096383			  ## analog.c:2761:18
 1e14274:    a8 48             	[r4 + 40] = r0			  ## analog.c:2761:18
 1e14276:    55 15             	call -1366 <bt_analog_part_init : 1e13d22 >			  ## analog.c:1844:5
 1e14278:    00 f6 2c d0       	r0 = [r13 + 44]			  ## analog.c:370:23
 1e1427c:    30 fd f0 0c       	r0 = r0 & 268435455			  ## analog.c:370:23
 1e14280:    10 f6 2c d0       	[r13 + 44] = r0			  ## analog.c:370:23
 1e14284:    0b f4 40 dc       	[r13 + 44] |= 1073741824			  ## analog.c:371:23
 1e14288:    c0 ff 52 52 dd 00 	r0 = 14504530 <uECC_vli_cmp_unsafe+0xCCE256 : dd5252 >			  ## analog.c:373:23
 1e1428e:    10 f6 30 d0       	[r13 + 48] = r0			  ## analog.c:373:23
 1e14292:    c0 ff 77 a0 01 00 	r0 = 106615 <_IRQ_MEM_ADDR+0xA177 : 1a077 >			  ## analog.c:382:23
 1e14298:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:382:23
 1e1429c:    0a f4 08 dc       	[r13 + 40] |= 134217728			  ## analog.c:391:23
 1e142a0:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:393:23
 1e142a4:    01 fb 7f f8       	r1 = -1921 <bank_code_load_addr+0x1E0C6B : 1fff87f >			  ## analog.c:393:23
 1e142a8:    50 b3             	r0 &= r1			  ## analog.c:393:23
 1e142aa:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:393:23
 1e142ae:    15 f4 80 d9       	[r13 + 84] |= 128			  ## analog.c:394:23
 1e142b2:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:317:23
 1e142b6:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:317:23
 1e142ba:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:317:23
 1e142be:    0d f4 4a d9       	[r13 + 52] |= 74			  ## analog.c:318:23
 1e142c2:    7a 70             	r10 = 7			  ## analog.c:318:23
 1e142c4:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## analog.c:318:23
 1e142ca:    05 70             	r5 = 0
 1e142cc:    89 08             	r9 = r8
 1e142ce:    83 08             	r3 = r8
 1e142d0:    56 fc ff ff       	r6 = r5 + -1			  ## analog.c:327:31
 1e142d4:    00 f6 30 d0       	r0 = [r13 + 48]			  ## analog.c:327:31
 1e142d8:    30 fd fe 05       	r0 = r0 & 4261675007			  ## analog.c:327:31
 1e142dc:    a5 05             	r5 = r6.l (u)			  ## analog.c:328:19
 1e142de:    10 f6 30 d0       	[r13 + 48] = r0			  ## analog.c:327:31
 1e142e2:    a0 08             	r0 = r10			  ## analog.c:327:31
 1e142e4:    b5 f2 05 00       	if (r5 == r11) goto 10 <bt_rf_init+0x1F6 : 1e142f2 >			  ## analog.c:327:31
 1e142e8:    90 07             	r0 = -7			  ## analog.c:330:24
 1e142ea:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x1F4 : 1e142f0 >			  ## analog.c:330:24
 1e142ee:    80 70             	r0 = 8			  ## analog.c:330:24
 1e142f0:    a0 09             	r0 += r10			  ## analog.c:330:24
 1e142f2:    01 f6 30 d0       	r1 = [r13 + 48]
 1e142f6:    80 c4             	r0 = r0 << 18
 1e142f8:    20 fd fe 05       	r0 = r0 & 33292288
 1e142fc:    50 b2             	r0 |= r1
 1e142fe:    10 f6 30 d0       	[r13 + 48] = r0
 1e14302:    00 f6 28 d0       	r0 = [r13 + 40]			  ## analog.c:335:31
 1e14306:    70 b1             	r0 &= 4294967291			  ## analog.c:335:31
 1e14308:    10 f6 28 d0       	[r13 + 40] = r0			  ## analog.c:335:31
 1e1430c:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:336:19
 1e14310:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:336:32
 1e14314:    8f f3 9d 7f       	call 2031418 <delay : 4252 >			  ## analog.c:336:13
 1e14318:    0a f4 04 d9       	[r13 + 40] |= 4			  ## analog.c:337:31
 1e1431c:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:338:19
 1e14320:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:338:32
 1e14324:    8f f3 95 7f       	call 2031402 <delay : 4252 >			  ## analog.c:338:13
 1e14328:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:340:30
 1e1432c:    01 f6 78 d0       	r1 = [r13 + 120]			  ## analog.c:341:30
 1e14330:    02 f6 78 d0       	r2 = [r13 + 120]			  ## analog.c:342:30
 1e14334:    50 b2             	r0 |= r1			  ## analog.c:341:18
 1e14336:    50 b4             	r0 |= r2			  ## analog.c:342:18
 1e14338:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:342:18
 1e1433c:    b5 f2 0c 00       	if (r5 == r11) goto 24 <bt_rf_init+0x25C : 1e14358 >			  ## analog.c:342:18
 1e14340:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x24A : 1e14346 >
 1e14344:    09 08             	r9 = r0			  ## analog.c:348:13
 1e14346:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x250 : 1e1434c >
 1e1434a:    30 08             	r0 = r3			  ## analog.c:348:13
 1e1434c:    16 80             	r6 += 1			  ## analog.c:326:23
 1e1434e:    a1 05             	r1 = r6.l (u)			  ## analog.c:326:23
 1e14350:    03 08             	r3 = r0			  ## analog.c:326:23
 1e14352:    21 e0 bf 1f       	if (r1 != 2) goto -130 <bt_rf_init+0x1D8 : 1e142d4 >			  ## analog.c:326:23
 1e14356:    03 18             	goto 6 <bt_rf_init+0x262 : 1e1435e >			  ## analog.c:326:23
 1e14358:    15 70             	r5 = 1
 1e1435a:    08 08             	r8 = r0
 1e1435c:    b9 1f             	goto -142 <bt_rf_init+0x1D4 : 1e142d0 >
 1e1435e:    e6 fd 00 38       	r3 = r8.l (u)			  ## analog.c:352:20
 1e14362:    e6 fd 00 19       	r1 = r9.l (u)			  ## analog.c:352:20
 1e14366:    31 f2 09 10       	if (r1 != r3) goto 18 <bt_rf_init+0x280 : 1e1437c >			  ## analog.c:352:20
 1e1436a:    21 04             	r1 = r0.l (u)
 1e1436c:    a0 08             	r0 = r10
 1e1436e:    31 f2 06 10       	if (r1 != r3) goto 12 <bt_rf_init+0x282 : 1e1437e >
 1e14372:    0a 91             	r10 = r0 + 16			  ## analog.c:325:51
 1e14374:    80 08             	r0 = r8			  ## analog.c:325:51
 1e14376:    8a e7 a8 3f       	if (r10 < 120) goto -176 <bt_rf_init+0x1CE : 1e142ca >			  ## analog.c:325:51
 1e1437a:    01 18             	goto 2 <bt_rf_init+0x282 : 1e1437e >			  ## analog.c:325:51
 1e1437c:    a0 08             	r0 = r10
 1e1437e:    00 fd 0f 09       	r0 = r0 | 15			  ## analog.c:360:12
 1e14382:    10 f9 32 c0       	b[r12 + 50] = r0			  ## analog.c:396:45
 1e14386:    a8 74             	r8 = 74
 1e14388:    01 70             	r1 = 0
 1e1438a:    a2 74             	r2 = 74
 1e1438c:    03 18             	goto 6 <bt_rf_init+0x298 : 1e14394 >
 1e1438e:    00 f9 32 c0       	r0 = b[r12 + 50] (u)
 1e14392:    58 08             	r8 = r5
 1e14394:    05 f6 30 d0       	r5 = [r13 + 48]			  ## analog.c:402:27
 1e14398:    35 fd fe 55       	r5 = r5 & 4261675007			  ## analog.c:402:27
 1e1439c:    15 f6 30 d0       	[r13 + 48] = r5			  ## analog.c:402:27
 1e143a0:    05 f6 30 d0       	r5 = [r13 + 48]			  ## analog.c:403:27
 1e143a4:    60 b0             	r0 = r0 - r1			  ## analog.c:297:52
 1e143a6:    80 c4             	r0 = r0 << 18			  ## analog.c:403:31
 1e143a8:    20 fd fe 05       	r0 = r0 & 33292288			  ## analog.c:403:31
 1e143ac:    50 ba             	r0 |= r5			  ## analog.c:403:27
 1e143ae:    10 f6 30 d0       	[r13 + 48] = r0			  ## analog.c:403:27
 1e143b2:    25 08             	r5 = r2			  ## analog.c:403:27
 1e143b4:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:408:31
 1e143b8:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:408:31
 1e143bc:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:408:31
 1e143c0:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:409:31
 1e143c4:    46 05             	r6 = r5.b0 (u)			  ## analog.c:409:35
 1e143c6:    50 bc             	r0 |= r6			  ## analog.c:409:31
 1e143c8:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:409:31
 1e143cc:    00 f6 28 d0       	r0 = [r13 + 40]			  ## analog.c:416:31
 1e143d0:    70 b1             	r0 &= 4294967291			  ## analog.c:416:31
 1e143d2:    10 f6 28 d0       	[r13 + 40] = r0			  ## analog.c:416:31
 1e143d6:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:417:19
 1e143da:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:417:32
 1e143de:    8f f3 38 7f       	call 2031216 <delay : 4252 >			  ## analog.c:417:13
 1e143e2:    0a f4 04 d9       	[r13 + 40] |= 4			  ## analog.c:418:31
 1e143e6:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:419:19
 1e143ea:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:419:32
 1e143ee:    8f f3 30 7f       	call 2031200 <delay : 4252 >			  ## analog.c:419:13
 1e143f2:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:421:30
 1e143f6:    06 f6 78 d0       	r6 = [r13 + 120]			  ## analog.c:422:30
 1e143fa:    03 f6 78 d0       	r3 = [r13 + 120]			  ## analog.c:423:30
 1e143fe:    50 bc             	r0 |= r6			  ## analog.c:422:18
 1e14400:    50 b6             	r0 |= r3			  ## analog.c:423:18
 1e14402:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:425:17
 1e14406:    10 e0 0f 00       	if (r0 == 1) goto 30 <bt_rf_init+0x32C : 1e14428 >			  ## analog.c:425:17
 1e1440a:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_rf_init+0x31C : 1e14418 >
 1e1440e:    15 80             	r5 += 1			  ## analog.c:438:25
 1e14410:    40 05             	r0 = r5.b0 (u)			  ## analog.c:438:25
 1e14412:    70 ea cf 9f       	if (r0 <= 167) goto -98 <bt_rf_init+0x2B8 : 1e143b4 >			  ## analog.c:438:25
 1e14416:    07 18             	goto 14 <bt_rf_init+0x32A : 1e14426 >			  ## analog.c:438:25
 1e14418:    10 9a             	r0 = r5 + 1			  ## analog.c:430:25
 1e1441a:    03 04             	r3 = r0.b0 (u)			  ## analog.c:430:25
 1e1441c:    52 08             	r2 = r5			  ## analog.c:430:25
 1e1441e:    05 08             	r5 = r0			  ## analog.c:430:25
 1e14420:    73 ea c8 9f       	if (r3 <= 167) goto -112 <bt_rf_init+0x2B8 : 1e143b4 >			  ## analog.c:430:25
 1e14424:    72 7a             	r2 = 167
 1e14426:    75 7a             	r5 = 167
 1e14428:    80 fb c0 01       	r0 = r1 + r12			  ## analog.c:446:9
 1e1442c:    83 04             	r3 = r2.b0 (u)			  ## analog.c:446:48
 1e1442e:    e4 fd 00 68       	r6 = r8.b0 (u)			  ## analog.c:446:37
 1e14432:    63 09             	r3 += r6			  ## analog.c:446:46
 1e14434:    33 80             	r3 += 3			  ## analog.c:446:54
 1e14436:    5b d0             	r3 = r3 >> 1			  ## analog.c:446:59
 1e14438:    11 80             	r1 += 1			  ## analog.c:400:42
 1e1443a:    3b 61             	b[r0 + 19] = r3			  ## analog.c:446:34
 1e1443c:    f1 e1 a7 1f       	if (r1 != 31) goto -178 <bt_rf_init+0x292 : 1e1438e >			  ## analog.c:446:34
 1e14440:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:450:23
 1e14444:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:450:23
 1e14448:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:450:23
 1e1444c:    0d f4 9b d9       	[r13 + 52] |= 155			  ## analog.c:451:23
 1e14450:    b0 79             	r0 = 155			  ## analog.c:452:13
 1e14452:    b5 14             	call -1686 <get_bta_pll_bank : 1e13dbe >			  ## analog.c:452:13
 1e14454:    01 f6 30 d0       	r1 = [r13 + 48]			  ## analog.c:453:23
 1e14458:    31 fd fe 15       	r1 = r1 & 4261675007			  ## analog.c:453:23
 1e1445c:    11 f6 30 d0       	[r13 + 48] = r1			  ## analog.c:453:23
 1e14460:    01 f6 30 d0       	r1 = [r13 + 48]			  ## analog.c:454:23
 1e14464:    82 c4             	r2 = r0 << 18			  ## analog.c:454:27
 1e14466:    22 fd fe 25       	r2 = r2 & 33292288			  ## analog.c:454:27
 1e1446a:    51 b4             	r1 |= r2			  ## analog.c:454:23
 1e1446c:    11 f6 30 d0       	[r13 + 48] = r1			  ## analog.c:454:23
 1e14470:    01 f6 28 d0       	r1 = [r13 + 40]			  ## analog.c:456:23
 1e14474:    f1 bd             	r1 &= 4160749567			  ## analog.c:456:23
 1e14476:    11 f6 28 d0       	[r13 + 40] = r1			  ## analog.c:456:23
 1e1447a:    f0 b3             	r0 &= 4294967167			  ## analog.c:1862:26
 1e1447c:    b1 fc 53 46       	r1 = r11 + 18003			  ## analog.c:1861:53
 1e14480:    c7 fd 90 10       	r1 <= insert(r0, p:18, l:7)			  ## analog.c:1861:53
 1e14484:    11 f6 30 d0       	[r13 + 48] = r1			  ## analog.c:1855:23
 1e14488:    c0 ff 77 e0 39 03 	r0 = 54124663 <uECC_vli_cmp_unsafe+0x129707B : 139e077 >			  ## analog.c:1864:23
 1e1448e:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:1864:23
 1e14492:    8e f4 ff dc       	[r13 + 56] &= 4278190080			  ## analog.c:1873:23
 1e14496:    00 f6 38 d0       	r0 = [r13 + 56]			  ## analog.c:1874:23
 1e1449a:    c1 ff 55 55 25 00 	r1 = 2446677 <uECC_vli_cmp_unsafe+0x14E559 : 255555 >			  ## analog.c:1874:23
 1e144a0:    50 b2             	r0 |= r1			  ## analog.c:1874:23
 1e144a2:    10 f6 38 d0       	[r13 + 56] = r0			  ## analog.c:1874:23
 1e144a6:    0a f4 01 d9       	[r13 + 40] |= 1			  ## analog.c:1876:23
 1e144aa:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:1877:17
 1e144ae:    00 fe 96 09       	r0 = r0 * 150			  ## analog.c:1877:15
 1e144b2:    8f f3 ce 7e       	call 2031004 <delay : 4252 >			  ## analog.c:1877:5
 1e144b6:    0d f4 80 dc       	[r13 + 52] |= 2147483648			  ## analog.c:1878:23
 1e144ba:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:1879:16
 1e144be:    00 fe 0a 09       	r0 = r0 * 10			  ## analog.c:1879:14
 1e144c2:    8f f3 c6 7e       	call 2030988 <delay : 4252 >			  ## analog.c:1879:5
 1e144c6:    0a f4 04 d9       	[r13 + 40] |= 4			  ## analog.c:1880:23
 1e144ca:    bf f3 85 fb       	call -2294 <bt_fre_offset_value_init : 1e13bd8 >			  ## analog.c:238:5
 1e144ce:    11 a1             	r1 = sp + 17			  ## analog.c:238:5
 1e144d0:    d0 75             	r0 = 93			  ## analog.c:242:21
 1e144d2:    32 72             	r2 = 35			  ## analog.c:242:21
 1e144d4:    bf f3 0b d5       	call -21994 <syscfg_read : 1e0eeee >			  ## analog.c:242:21
 1e144d8:    01 04             	r1 = r0.b0 (u)			  ## analog.c:243:13
 1e144da:    c0 ff fc 2c 00 00 	r0 = 11516 <tws_bulk_pool_end : 2cfc >			  ## analog.c:243:13
 1e144e0:    c5 ff 13 2d 00 00 	r5 = 11539 <ldo_trim_res : 2d13 >			  ## analog.c:243:13
 1e144e6:    31 e2 0d 10       	if (r1 != 35) goto 26 <bt_rf_init+0x408 : 1e14504 >			  ## analog.c:243:13
 1e144ea:    14 a1             	r4 = sp + 17
 1e144ec:    62 71             	r2 = 22			  ## analog.c:244:13
 1e144ee:    41 08             	r1 = r4			  ## analog.c:244:13
 1e144f0:    97 f3 f8 94       	call 3090928 <memcpy : 106ee4 >			  ## analog.c:244:13
 1e144f4:    61 99             	r1 = r4 + 22			  ## analog.c:245:56
 1e144f6:    d2 70             	r2 = 13			  ## analog.c:245:13
 1e144f8:    50 08             	r0 = r5			  ## analog.c:245:13
 1e144fa:    97 f3 f3 94       	call 3090918 <memcpy : 106ee4 >			  ## analog.c:245:13
 1e144fe:    76 14             	call -1812 <reset_trim_info : 1e13dec >			  ## analog.c:246:13
 1e14500:    c0 f3 58 09       	goto 4784 <.GJTIE841_1_1_+0x1108 : 1e157b4 >			  ## analog.c:246:13
 1e14504:    e9 14             	call -1582 <txtrim_analog_init : 1e13ed8 >			  ## analog.c:1107:5
 1e14506:    01 70             	r1 = 0			  ## analog.c:1107:5
 1e14508:    11 f6 08 e0       	[r14 + 8] = r1			  ## analog.c:1109:17
 1e1450c:    20 70             	r0 = 2			  ## analog.c:1110:5
 1e1450e:    8f f3 a0 7e       	call 2030912 <delay : 4252 >			  ## analog.c:1110:5
 1e14512:    11 f6 04 e0       	[r14 + 4] = r1			  ## analog.c:1111:17
 1e14516:    20 70             	r0 = 2			  ## analog.c:1112:5
 1e14518:    8f f3 9b 7e       	call 2030902 <delay : 4252 >			  ## analog.c:1112:5
 1e1451c:    11 f6 00 e0       	[r14 + 0] = r1			  ## analog.c:1113:17
 1e14520:    20 70             	r0 = 2			  ## analog.c:1114:5
 1e14522:    8f f3 96 7e       	call 2030892 <delay : 4252 >			  ## analog.c:1114:5
 1e14526:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1115:20
 1e1452a:    20 70             	r0 = 2			  ## analog.c:1116:5
 1e1452c:    8f f3 91 7e       	call 2030882 <delay : 4252 >			  ## analog.c:1116:5
 1e14530:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1117:13
 1e14534:    20 70             	r0 = 2			  ## analog.c:1118:5
 1e14536:    8f f3 8c 7e       	call 2030872 <delay : 4252 >			  ## analog.c:1118:5
 1e1453a:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1119:13
 1e1453e:    20 70             	r0 = 2			  ## analog.c:1120:5
 1e14540:    8f f3 87 7e       	call 2030862 <delay : 4252 >			  ## analog.c:1120:5
 1e14544:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:1121:17
 1e14548:    20 70             	r0 = 2			  ## analog.c:1122:5
 1e1454a:    8f f3 82 7e       	call 2030852 <delay : 4252 >			  ## analog.c:1122:5
 1e1454e:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1123:17
 1e14552:    20 70             	r0 = 2			  ## analog.c:1124:5
 1e14554:    8f f3 7d 7e       	call 2030842 <delay : 4252 >			  ## analog.c:1124:5
 1e14558:    20 70             	r0 = 2			  ## analog.c:1126:5
 1e1455a:    8f f3 7a 7e       	call 2030836 <delay : 4252 >			  ## analog.c:1126:5
 1e1455e:    20 70             	r0 = 2			  ## analog.c:1128:5
 1e14560:    8f f3 77 7e       	call 2030830 <delay : 4252 >			  ## analog.c:1128:5
 1e14564:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:1129:17
 1e14568:    20 70             	r0 = 2			  ## analog.c:1130:5
 1e1456a:    8f f3 72 7e       	call 2030820 <delay : 4252 >			  ## analog.c:1130:5
 1e1456e:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1131:17
 1e14572:    20 70             	r0 = 2			  ## analog.c:1132:5
 1e14574:    8f f3 6d 7e       	call 2030810 <delay : 4252 >			  ## analog.c:1132:5
 1e14578:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1133:17
 1e1457c:    f0 b4             	r0 &= 4294966783			  ## analog.c:1133:17
 1e1457e:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1133:17
 1e14582:    20 70             	r0 = 2			  ## analog.c:1134:5
 1e14584:    8f f3 65 7e       	call 2030794 <delay : 4252 >			  ## analog.c:1134:5
 1e14588:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1135:17
 1e1458c:    20 70             	r0 = 2			  ## analog.c:1136:5
 1e1458e:    8f f3 60 7e       	call 2030784 <delay : 4252 >			  ## analog.c:1136:5
 1e14592:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1137:17
 1e14596:    20 70             	r0 = 2			  ## analog.c:1138:5
 1e14598:    8f f3 5b 7e       	call 2030774 <delay : 4252 >			  ## analog.c:1138:5
 1e1459c:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1139:17
 1e145a0:    20 70             	r0 = 2			  ## analog.c:1140:5
 1e145a2:    8f f3 56 7e       	call 2030764 <delay : 4252 >			  ## analog.c:1140:5
 1e145a6:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1141:17
 1e145aa:    20 70             	r0 = 2			  ## analog.c:1142:5
 1e145ac:    8f f3 51 7e       	call 2030754 <delay : 4252 >			  ## analog.c:1142:5
 1e145b0:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1143:17
 1e145b4:    20 70             	r0 = 2			  ## analog.c:1144:5
 1e145b6:    8f f3 4c 7e       	call 2030744 <delay : 4252 >			  ## analog.c:1144:5
 1e145ba:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1145:17
 1e145be:    20 70             	r0 = 2			  ## analog.c:1146:5
 1e145c0:    8f f3 47 7e       	call 2030734 <delay : 4252 >			  ## analog.c:1146:5
 1e145c4:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1147:17
 1e145c8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1154:17
 1e145cc:    f0 b8             	r0 &= 4294836223			  ## analog.c:1154:17
 1e145ce:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1154:17
 1e145d2:    50 70             	r0 = 5			  ## analog.c:1155:5
 1e145d4:    8f f3 3d 7e       	call 2030714 <delay : 4252 >			  ## analog.c:1155:5
 1e145d8:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1156:17
 1e145dc:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1157:13
 1e145e0:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <bt_rf_init+0x4E0 : 1e145dc >			  ## analog.c:1157:5
 1e145e4:    00 70             	r0 = 0
 1e145e6:    38 02             	[sp+12] = r0
 1e145e8:    f3 07             	r3 = -1
 1e145ea:    3f 70             	r15 = 3
 1e145ec:    0d fb 00 fc       	r13 = -1024 <bank_code_load_addr+0x1E0FEC : 1fffc00 >
 1e145f0:    09 fb ff 03       	r9 = 1023 <BTCTLER_LE_RAM_TOTAL+0x27 : 3ff >
 1e145f4:    cb ff ff 03 f0 ff 	r11 = 4293919743 <bank_code_load_addr+0xE17EB : 1f003ff >
 1e145fa:    4c fb 10 db       	r12 = r13 + 1048576
 1e145fe:    0a 70             	r10 = 0
 1e14600:    01 fb 9c ff       	r1 = -100 <bank_code_load_addr+0x1E1388 : 1ffff9c >
 1e14604:    32 08             	r2 = r3
 1e14606:    06 08             	r6 = r0
 1e14608:    e4 fd 00 5f       	r5 = r15.b0 (u)
 1e1460c:    35 e0 24 80       	if (r5 > 3) goto 72 <.GJTIE841_0_0_+0x42 : 1e14658 >
 1e14610:    a5 00             	tbb [r5]


.GJTIS841_0_0_:
 1e14612:    02     < 2 : 0x2 >
 1e14613:    0b     < 11 : 0xB >
 1e14614:    02     < 2 : 0x2 >
 1e14615:    15     < 21 : 0x15 >
 1e14616:    20 48             	r0 = [r4 + 8]
 1e14618:    e2 fd d0 00       	r0 = r0 & r13
 1e1461c:    28 48             	[r4 + 8] = r0
 1e1461e:    20 48             	r0 = [r4 + 8]
 1e14620:    e2 fd 90 31       	r3 = r1 & r9
 1e14624:    50 b6             	r0 |= r3
 1e14626:    17 18             	goto 46 <.GJTIE841_0_0_+0x40 : 1e14656 >
 1e14628:    20 48             	r0 = [r4 + 8]			  ## analog.c:1165:29
 1e1462a:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1165:29
 1e1462e:    28 48             	[r4 + 8] = r0			  ## analog.c:1165:29
 1e14630:    20 48             	r0 = [r4 + 8]			  ## analog.c:1166:29
 1e14632:    8b c2             	r3 = r1 << 10			  ## analog.c:1166:32
 1e14634:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1166:32
 1e14638:    50 b6             	r0 |= r3			  ## analog.c:1166:29
 1e1463a:    0d 18             	goto 26 <.GJTIE841_0_0_+0x40 : 1e14656 >			  ## analog.c:1166:29
 1e1463c:    20 48             	r0 = [r4 + 8]			  ## analog.c:1171:29
 1e1463e:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1171:29
 1e14642:    28 48             	[r4 + 8] = r0			  ## analog.c:1171:29
 1e14644:    20 48             	r0 = [r4 + 8]			  ## analog.c:1172:29
 1e14646:    8b c2             	r3 = r1 << 10			  ## analog.c:1172:32
 1e14648:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1172:32
 1e1464c:    50 b6             	r0 |= r3			  ## analog.c:1172:29
 1e1464e:    28 48             	[r4 + 8] = r0			  ## analog.c:1172:29
 1e14650:    20 48             	r0 = [r4 + 8]			  ## analog.c:1173:29
 1e14652:    e2 fd d0 00       	r0 = r0 & r13			  ## analog.c:1173:29
 1e14656:    28 48             	[r4 + 8] = r0
 1e14658:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1177:25
 1e1465c:    f0 b8             	r0 &= 4294836223			  ## analog.c:1177:25
 1e1465e:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1177:25
 1e14662:    50 70             	r0 = 5			  ## analog.c:1178:13
 1e14664:    8f f3 f5 7d       	call 2030570 <delay : 4252 >			  ## analog.c:1178:13
 1e14668:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1179:25
 1e1466c:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1180:21
 1e14670:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE841_0_0_+0x56 : 1e1466c >			  ## analog.c:1180:13
 1e14674:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1183:24
 1e14678:    03 f6 14 e0       	r3 = [r14 + 20]			  ## analog.c:1185:24
 1e1467c:    b0 fd 40 83       	r8 = sextra(r3, p:8, l:16)			  ## analog.c:1186:29
 1e14680:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1184:29
 1e14684:    03 0e             	r3 = r0 * r0			  ## analog.c:1187:28
 1e14686:    80 fe 80 38       	r3 += r8 * r8			  ## analog.c:1187:37
 1e1468a:    10 08             	r0 = r1			  ## analog.c:1189:17
 1e1468c:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE841_0_0_+0x7C : 1e14692 >
 1e14690:    60 08             	r0 = r6			  ## analog.c:1189:17
 1e14692:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE841_0_0_+0x82 : 1e14698 >
 1e14696:    23 08             	r3 = r2			  ## analog.c:1189:17
 1e14698:    11 80             	r1 += 1			  ## analog.c:1160:34
 1e1469a:    32 08             	r2 = r3			  ## analog.c:1160:34
 1e1469c:    06 08             	r6 = r0			  ## analog.c:1160:34
 1e1469e:    41 e6 b3 1f       	if (r1 != 100) goto -154 <bt_rf_init+0x50C : 1e14608 >			  ## analog.c:1160:34
 1e146a2:    35 e0 17 80       	if (r5 > 3) goto 46 <.GJTIE841_1_1_+0x28 : 1e146d4 >
 1e146a6:    a5 00             	tbb [r5]


.GJTIS841_1_1_:
 1e146a8:    02     < 2 : 0x2 >
 1e146a9:    0a     < 10 : 0xA >
 1e146aa:    02     < 2 : 0x2 >
 1e146ab:    0a     < 10 : 0xA >
 1e146ac:    21 48             	r1 = [r4 + 8]			  ## analog.c:1195:25
 1e146ae:    e2 fd d0 11       	r1 = r1 & r13			  ## analog.c:1195:25
 1e146b2:    29 48             	[r4 + 8] = r1			  ## analog.c:1195:25
 1e146b4:    e2 fd 90 10       	r1 = r0 & r9			  ## analog.c:1196:28
 1e146b8:    0a 08             	r10 = r0			  ## analog.c:1196:28
 1e146ba:    08 18             	goto 16 <.GJTIE841_1_1_+0x20 : 1e146cc >			  ## analog.c:1196:28
 1e146bc:    21 48             	r1 = [r4 + 8]			  ## analog.c:1201:25
 1e146be:    e2 fd b0 11       	r1 = r1 & r11			  ## analog.c:1201:25
 1e146c2:    29 48             	[r4 + 8] = r1			  ## analog.c:1201:25
 1e146c4:    81 c2             	r1 = r0 << 10			  ## analog.c:1202:28
 1e146c6:    e2 fd c0 11       	r1 = r1 & r12			  ## analog.c:1202:28
 1e146ca:    38 02             	[sp+12] = r0			  ## analog.c:1202:28
 1e146cc:    22 48             	r2 = [r4 + 8]
 1e146ce:    51 b4             	r1 |= r2
 1e146d0:    29 48             	[r4 + 8] = r1
 1e146d2:    f3 07             	r3 = -1
 1e146d4:    f1 fc ff ff       	r1 = r15 + -1			  ## analog.c:1159:26
 1e146d8:    5f 04             	r15 = r1.b0 (s)			  ## analog.c:1159:26
 1e146da:    ff ef 91 cf       	ifs (r15 > -1) goto -222 <bt_rf_init+0x504 : 1e14600 >			  ## analog.c:1159:26
 1e146de:    cb ff fc 2c 00 00 	r11 = 11516 <tws_bulk_pool_end : 2cfc >
 1e146e4:    1a f9 00 b0       	b[r11 + 0] = r10			  ## analog.c:1212:22
 1e146e8:    f2 fd 40 0a       	r0 = r10 >> 8			  ## analog.c:1212:22
 1e146ec:    10 f9 01 b0       	b[r11 + 1] = r0			  ## analog.c:1212:22
 1e146f0:    31 02             	r1 = [sp+12]			  ## analog.c:1212:22
 1e146f2:    08 d2             	r0 = r1 >> 8			  ## analog.c:1213:22
 1e146f4:    10 f9 03 b0       	b[r11 + 3] = r0			  ## analog.c:1213:22
 1e146f8:    11 f9 02 b0       	b[r11 + 2] = r1			  ## analog.c:1213:22
 1e146fc:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1215:20
 1e146fe:    70 b8             	r0 &= 4294901759			  ## analog.c:1215:20
 1e14700:    28 4e             	[r7 + 8] = r0			  ## analog.c:1215:20
 1e14702:    20 70             	r0 = 2			  ## analog.c:1216:5
 1e14704:    8f f3 a5 7d       	call 2030410 <delay : 4252 >			  ## analog.c:1216:5
 1e14708:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1217:13
 1e1470a:    f0 b0             	r0 &= 4294967293			  ## analog.c:1217:13
 1e1470c:    f8 49             	[r4 + 124] = r0			  ## analog.c:1217:13
 1e1470e:    20 70             	r0 = 2			  ## analog.c:1218:5
 1e14710:    8f f3 9f 7d       	call 2030398 <delay : 4252 >			  ## analog.c:1218:5
 1e14714:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1219:13
 1e14716:    70 b1             	r0 &= 4294967291			  ## analog.c:1219:13
 1e14718:    f8 49             	[r4 + 124] = r0			  ## analog.c:1219:13
 1e1471a:    20 70             	r0 = 2			  ## analog.c:1220:5
 1e1471c:    8f f3 99 7d       	call 2030386 <delay : 4252 >			  ## analog.c:1220:5
 1e14720:    03 70             	r3 = 0			  ## analog.c:1220:5
 1e14722:    13 f6 00 e0       	[r14 + 0] = r3			  ## analog.c:1221:45
 1e14726:    13 f6 04 e0       	[r14 + 4] = r3			  ## analog.c:1221:31
 1e1472a:    13 f6 08 e0       	[r14 + 8] = r3			  ## analog.c:1221:17
 1e1472e:    20 70             	r0 = 2			  ## analog.c:1222:5
 1e14730:    8f f3 8f 7d       	call 2030366 <delay : 4252 >			  ## analog.c:1222:5
 1e14734:    90 48             	r0 = [r4 + 36]			  ## analog.c:1223:17
 1e14736:    f0 b5             	r0 &= 4294965247			  ## analog.c:1223:17
 1e14738:    98 48             	[r4 + 36] = r0			  ## analog.c:1223:17
 1e1473a:    bf f3 cd fb       	call -2150 <txtrim_analog_init : 1e13ed8 >			  ## analog.c:1231:5
 1e1473e:    13 f6 00 e0       	[r14 + 0] = r3			  ## analog.c:1232:45
 1e14742:    13 f6 04 e0       	[r14 + 4] = r3			  ## analog.c:1232:31
 1e14746:    13 f6 08 e0       	[r14 + 8] = r3			  ## analog.c:1232:17
 1e1474a:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1234:20
 1e1474e:    20 70             	r0 = 2			  ## analog.c:1235:5
 1e14750:    8f f3 7f 7d       	call 2030334 <delay : 4252 >			  ## analog.c:1235:5
 1e14754:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1236:13
 1e14758:    20 70             	r0 = 2			  ## analog.c:1237:5
 1e1475a:    8f f3 7a 7d       	call 2030324 <delay : 4252 >			  ## analog.c:1237:5
 1e1475e:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1238:13
 1e14762:    20 70             	r0 = 2			  ## analog.c:1239:5
 1e14764:    8f f3 75 7d       	call 2030314 <delay : 4252 >			  ## analog.c:1239:5
 1e14768:    02 f4 15 e9       	[r14 + 8] |= 21			  ## analog.c:1240:17
 1e1476c:    20 70             	r0 = 2			  ## analog.c:1241:5
 1e1476e:    8f f3 70 7d       	call 2030304 <delay : 4252 >			  ## analog.c:1241:5
 1e14772:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1242:17
 1e14776:    20 70             	r0 = 2			  ## analog.c:1243:5
 1e14778:    8f f3 6b 7d       	call 2030294 <delay : 4252 >			  ## analog.c:1243:5
 1e1477c:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1244:17
 1e14780:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1244:17
 1e14784:    20 70             	r0 = 2			  ## analog.c:1245:5
 1e14786:    8f f3 64 7d       	call 2030280 <delay : 4252 >			  ## analog.c:1245:5
 1e1478a:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1246:17
 1e1478e:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1246:17
 1e14792:    20 70             	r0 = 2			  ## analog.c:1247:5
 1e14794:    8f f3 5d 7d       	call 2030266 <delay : 4252 >			  ## analog.c:1247:5
 1e14798:    00 f4 2a e9       	[r14 + 0] |= 42			  ## analog.c:1248:17
 1e1479c:    20 70             	r0 = 2			  ## analog.c:1249:5
 1e1479e:    8f f3 58 7d       	call 2030256 <delay : 4252 >			  ## analog.c:1249:5
 1e147a2:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1250:17
 1e147a6:    20 70             	r0 = 2			  ## analog.c:1251:5
 1e147a8:    8f f3 53 7d       	call 2030246 <delay : 4252 >			  ## analog.c:1251:5
 1e147ac:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1252:17
 1e147b0:    f0 b4             	r0 &= 4294966783			  ## analog.c:1252:17
 1e147b2:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1252:17
 1e147b6:    20 70             	r0 = 2			  ## analog.c:1253:5
 1e147b8:    8f f3 4b 7d       	call 2030230 <delay : 4252 >			  ## analog.c:1253:5
 1e147bc:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1254:17
 1e147c0:    20 70             	r0 = 2			  ## analog.c:1255:5
 1e147c2:    8f f3 46 7d       	call 2030220 <delay : 4252 >			  ## analog.c:1255:5
 1e147c6:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1256:17
 1e147ca:    20 70             	r0 = 2			  ## analog.c:1257:5
 1e147cc:    8f f3 41 7d       	call 2030210 <delay : 4252 >			  ## analog.c:1257:5
 1e147d0:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1258:17
 1e147d4:    20 70             	r0 = 2			  ## analog.c:1259:5
 1e147d6:    8f f3 3c 7d       	call 2030200 <delay : 4252 >			  ## analog.c:1259:5
 1e147da:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1260:17
 1e147de:    20 70             	r0 = 2			  ## analog.c:1261:5
 1e147e0:    8f f3 37 7d       	call 2030190 <delay : 4252 >			  ## analog.c:1261:5
 1e147e4:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1262:17
 1e147e8:    20 70             	r0 = 2			  ## analog.c:1263:5
 1e147ea:    8f f3 32 7d       	call 2030180 <delay : 4252 >			  ## analog.c:1263:5
 1e147ee:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1264:17
 1e147f2:    20 70             	r0 = 2			  ## analog.c:1265:5
 1e147f4:    8f f3 2d 7d       	call 2030170 <delay : 4252 >			  ## analog.c:1265:5
 1e147f8:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1266:17
 1e147fc:    40 48             	r0 = [r4 + 16]			  ## analog.c:1274:17
 1e147fe:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1274:17
 1e14802:    48 48             	[r4 + 16] = r0			  ## analog.c:1274:17
 1e14804:    04 f4 40 4a       	[r4 + 16] |= 16384			  ## analog.c:1275:17
 1e14808:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1279:17
 1e1480c:    f0 b8             	r0 &= 4294836223			  ## analog.c:1279:17
 1e1480e:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1279:17
 1e14812:    20 70             	r0 = 2			  ## analog.c:1280:5
 1e14814:    8f f3 1d 7d       	call 2030138 <delay : 4252 >			  ## analog.c:1280:5
 1e14818:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1281:17
 1e1481c:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1282:13
 1e14820:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE841_1_1_+0x170 : 1e1481c >			  ## analog.c:1282:5
 1e14824:    40 48             	r0 = [r4 + 16]
 1e14826:    30 fd ff 09       	r0 = r0 & 4294967040
 1e1482a:    48 48             	[r4 + 16] = r0
 1e1482c:    08 70             	r8 = 0
 1e1482e:    f3 07             	r3 = -1
 1e14830:    e2 71             	r2 = 30
 1e14832:    ca ff 00 19 1e 00 	r10 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e14838:    40 48             	r0 = [r4 + 16]			  ## analog.c:1286:21
 1e1483a:    50 b4             	r0 |= r2			  ## analog.c:1286:21
 1e1483c:    48 48             	[r4 + 16] = r0			  ## analog.c:1286:21
 1e1483e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1288:21
 1e14842:    85 08             	r5 = r8			  ## analog.c:1288:21
 1e14844:    f0 b8             	r0 &= 4294836223			  ## analog.c:1288:21
 1e14846:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1288:21
 1e1484a:    20 70             	r0 = 2			  ## analog.c:1289:9
 1e1484c:    8f f3 01 7d       	call 2030082 <delay : 4252 >			  ## analog.c:1289:9
 1e14850:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1290:21
 1e14854:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1291:17
 1e14858:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE841_1_1_+0x1A8 : 1e14854 >			  ## analog.c:1291:9
 1e1485c:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1294:20
 1e14860:    01 f6 14 e0       	r1 = [r14 + 20]			  ## analog.c:1296:20
 1e14864:    46 48             	r6 = [r4 + 16]			  ## analog.c:1296:20
 1e14866:    36 fd ff 69       	r6 = r6 & 4294967040			  ## analog.c:1296:20
 1e1486a:    b0 fd 40 11       	r1 = sextra(r1, p:8, l:16)			  ## analog.c:1297:25
 1e1486e:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1295:25
 1e14872:    00 0e             	r0 = r0 * r0			  ## analog.c:1298:24
 1e14874:    80 fe 10 01       	r0 += r1 * r1			  ## analog.c:1298:33
 1e14878:    4e 48             	[r4 + 16] = r6
 1e1487a:    28 08             	r8 = r2			  ## analog.c:1300:13
 1e1487c:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE841_1_1_+0x1D6 : 1e14882 >			  ## analog.c:1300:13
 1e14880:    58 08             	r8 = r5			  ## analog.c:1300:13
 1e14882:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE841_1_1_+0x1DC : 1e14888 >
 1e14886:    30 08             	r0 = r3			  ## analog.c:1300:13
 1e14888:    12 80             	r2 += 1			  ## analog.c:1284:27
 1e1488a:    03 08             	r3 = r0			  ## analog.c:1284:27
 1e1488c:    a2 e5 d4 1f       	if (r2 != 90) goto -88 <.GJTIE841_1_1_+0x18C : 1e14838 >
 1e14890:    40 48             	r0 = [r4 + 16]			  ## analog.c:1309:17
 1e14892:    e4 fd 00 28       	r2 = r8.b0 (u)			  ## analog.c:1309:21
 1e14896:    50 b4             	r0 |= r2			  ## analog.c:1309:17
 1e14898:    48 48             	[r4 + 16] = r0			  ## analog.c:1309:17
 1e1489a:    f2 fd 40 08       	r0 = r8 >> 8			  ## analog.c:1315:22
 1e1489e:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1315:22
 1e148a2:    18 f9 04 b0       	b[r11 + 4] = r8			  ## analog.c:1315:22
 1e148a6:    40 48             	r0 = [r4 + 16]			  ## analog.c:1317:17
 1e148a8:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:1317:17
 1e148ac:    48 48             	[r4 + 16] = r0			  ## analog.c:1317:17
 1e148ae:    40 48             	r0 = [r4 + 16]			  ## analog.c:1318:17
 1e148b0:    48 48             	[r4 + 16] = r0			  ## analog.c:1318:17
 1e148b2:    40 48             	r0 = [r4 + 16]
 1e148b4:    30 fd ff 0b       	r0 = r0 & 4278255615
 1e148b8:    48 48             	[r4 + 16] = r0
 1e148ba:    f3 07             	r3 = -1
 1e148bc:    c2 ff e2 ff 00 00 	r2 = 65506 <_IRQ_MEM_ADDR+0xE2 : ffe2 >
 1e148c2:    80 08             	r0 = r8
 1e148c4:    45 48             	r5 = [r4 + 16]			  ## analog.c:1323:21
 1e148c6:    86 04             	r6 = r2.b0 (u)			  ## analog.c:1323:24
 1e148c8:    36 c4             	r6 = r6 << 16			  ## analog.c:1323:24
 1e148ca:    55 bc             	r5 |= r6			  ## analog.c:1323:21
 1e148cc:    4d 48             	[r4 + 16] = r5			  ## analog.c:1323:21
 1e148ce:    06 f6 00 e0       	r6 = [r14 + 0]			  ## analog.c:1325:21
 1e148d2:    09 08             	r9 = r0			  ## analog.c:1325:21
 1e148d4:    30 fd 02 6b       	r0 = r6 & 4294836223			  ## analog.c:1325:21
 1e148d8:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1325:21
 1e148dc:    20 70             	r0 = 2			  ## analog.c:1326:9
 1e148de:    8f f3 b8 7c       	call 2029936 <delay : 4252 >			  ## analog.c:1326:9
 1e148e2:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1327:21
 1e148e6:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1328:17
 1e148ea:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE841_1_1_+0x23A : 1e148e6 >			  ## analog.c:1328:9
 1e148ee:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1331:20
 1e148f2:    06 f6 14 e0       	r6 = [r14 + 20]			  ## analog.c:1333:20
 1e148f6:    41 48             	r1 = [r4 + 16]			  ## analog.c:1333:20
 1e148f8:    31 fd ff 1b       	r1 = r1 & 4278255615			  ## analog.c:1333:20
 1e148fc:    b0 fd 40 56       	r5 = sextra(r6, p:8, l:16)			  ## analog.c:1334:25
 1e14900:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1332:25
 1e14904:    06 0e             	r6 = r0 * r0			  ## analog.c:1335:24
 1e14906:    80 fe 50 65       	r6 += r5 * r5			  ## analog.c:1335:33
 1e1490a:    49 48             	[r4 + 16] = r1
 1e1490c:    20 08             	r0 = r2			  ## analog.c:1337:13
 1e1490e:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE841_1_1_+0x268 : 1e14914 >
 1e14912:    90 08             	r0 = r9			  ## analog.c:1337:13
 1e14914:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE841_1_1_+0x26E : 1e1491a >
 1e14918:    36 08             	r6 = r3			  ## analog.c:1337:13
 1e1491a:    12 80             	r2 += 1			  ## analog.c:1321:28
 1e1491c:    a1 04             	r1 = r2.l (u)			  ## analog.c:1321:28
 1e1491e:    63 08             	r3 = r6			  ## analog.c:1321:28
 1e14920:    e1 e1 d0 1f       	if (r1 != 30) goto -96 <.GJTIE841_1_1_+0x218 : 1e148c4 >
 1e14924:    41 48             	r1 = [r4 + 16]			  ## analog.c:1346:17
 1e14926:    02 c4             	r2 = r0 << 16			  ## analog.c:1346:20
 1e14928:    42 fb ff 2b       	r2 = r2 + 16711680			  ## analog.c:1346:20
 1e1492c:    22 fd ff 2b       	r2 = r2 & 16711680			  ## analog.c:1346:20
 1e14930:    51 b4             	r1 |= r2			  ## analog.c:1346:17
 1e14932:    e6 fd 00 28       	r2 = r8.l (u)			  ## analog.c:1348:14
 1e14936:    49 48             	[r4 + 16] = r1			  ## analog.c:1346:17
 1e14938:    f2 e3 04 80       	if (r2 > 63) goto 8 <.GJTIE841_1_1_+0x298 : 1e14944 >			  ## analog.c:1348:9
 1e1493c:    01 74             	r1 = 64			  ## analog.c:1349:24
 1e1493e:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1349:24
 1e14942:    02 18             	goto 4 <.GJTIE841_1_1_+0x29C : 1e14948 >			  ## analog.c:1349:24
 1e14944:    8a fd 30 18       	r1 = uextra(r8, p:6, l:10)			  ## analog.c:1351:24
 1e14948:    01 fe 0a 19       	r1 = r1 * 10
 1e1494c:    62 04             	r2 = r1.l (u)
 1e1494e:    01 fb b0 04       	r1 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD8 : 4b0 >			  ## analog.c:1353:26
 1e14952:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1353:26
 1e14956:    63 07             	r3 = -10			  ## analog.c:1354:15
 1e14958:    ce 0e             	r6 = r1 * r3			  ## analog.c:1354:15
 1e1495a:    a5 70             	r5 = 10			  ## analog.c:1354:15
 1e1495c:    80 fe 50 61       	r6 += r1 * r5			  ## analog.c:1354:15
 1e14960:    56 e0 06 b0       	ifs (r6 < 5) goto 12 <.GJTIE841_1_1_+0x2C4 : 1e14970 >			  ## analog.c:1354:15
 1e14964:    01 fe 0a 19       	r1 = r1 * 10			  ## analog.c:1353:37
 1e14968:    a1 80             	r1 += 10			  ## analog.c:1355:22
 1e1496a:    61 04             	r1 = r1.l (u)			  ## analog.c:1355:22
 1e1496c:    c0 fe 50 11       	r1 = r1 / r5 (u)			  ## analog.c:1355:28
 1e14970:    06 fb dc 05       	r6 = 1500 <BTCTLER_CONTROLLER_DATA_SIZE+0x120 : 5dc >			  ## analog.c:1360:30
 1e14974:    c0 fe 20 26       	r2 = r6 / r2 (u)			  ## analog.c:1360:30
 1e14978:    d3 0e             	r3 = r2 * r3			  ## analog.c:1361:17
 1e1497a:    80 fe 50 32       	r3 += r2 * r5			  ## analog.c:1361:17
 1e1497e:    53 e0 07 b0       	ifs (r3 < 5) goto 14 <.GJTIE841_1_1_+0x2E4 : 1e14990 >			  ## analog.c:1361:17
 1e14982:    02 fe 0a 29       	r2 = r2 * 10			  ## analog.c:1360:41
 1e14986:    a2 80             	r2 += 10			  ## analog.c:1362:26
 1e14988:    a2 04             	r2 = r2.l (u)			  ## analog.c:1362:26
 1e1498a:    a3 70             	r3 = 10			  ## analog.c:1362:26
 1e1498c:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## analog.c:1362:32
 1e14990:    10 f9 0c b0       	b[r11 + 12] = r0			  ## analog.c:1368:22
 1e14994:    00 d2             	r0 = r0 >> 8			  ## analog.c:1368:22
 1e14996:    10 f9 0d b0       	b[r11 + 13] = r0			  ## analog.c:1368:22
 1e1499a:    40 48             	r0 = [r4 + 16]			  ## analog.c:1369:17
 1e1499c:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1369:17
 1e149a0:    48 48             	[r4 + 16] = r0			  ## analog.c:1369:17
 1e149a2:    04 f4 78 4a       	[r4 + 16] |= 30720			  ## analog.c:1370:17
 1e149a6:    40 48             	r0 = [r4 + 16]			  ## analog.c:1371:17
 1e149a8:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1371:17
 1e149ac:    48 48             	[r4 + 16] = r0			  ## analog.c:1371:17
 1e149ae:    40 48             	r0 = [r4 + 16]			  ## analog.c:1372:17
 1e149b0:    43 04             	r3 = r1.b0 (u)			  ## analog.c:1372:20
 1e149b2:    50 b6             	r0 |= r3			  ## analog.c:1372:17
 1e149b4:    48 48             	[r4 + 16] = r0			  ## analog.c:1372:17
 1e149b6:    05 70             	r5 = 0			  ## analog.c:1372:17
 1e149b8:    15 f9 07 b0       	b[r11 + 7] = r5			  ## analog.c:1374:22
 1e149bc:    80 77             	r0 = 120			  ## analog.c:1374:22
 1e149be:    10 f9 06 b0       	b[r11 + 6] = r0			  ## analog.c:1374:22
 1e149c2:    08 d2             	r0 = r1 >> 8			  ## analog.c:1375:22
 1e149c4:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1375:22
 1e149c8:    11 f9 04 b0       	b[r11 + 4] = r1			  ## analog.c:1375:22
 1e149cc:    15 f9 0b b0       	b[r11 + 11] = r5			  ## analog.c:1377:24
 1e149d0:    60 79             	r0 = 150			  ## analog.c:1377:24
 1e149d2:    10 f9 0a b0       	b[r11 + 10] = r0			  ## analog.c:1377:24
 1e149d6:    10 d2             	r0 = r2 >> 8			  ## analog.c:1378:24
 1e149d8:    10 f9 09 b0       	b[r11 + 9] = r0			  ## analog.c:1378:24
 1e149dc:    12 f9 08 b0       	b[r11 + 8] = r2			  ## analog.c:1378:24
 1e149e0:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1381:20
 1e149e2:    70 b8             	r0 &= 4294901759			  ## analog.c:1381:20
 1e149e4:    28 4e             	[r7 + 8] = r0			  ## analog.c:1381:20
 1e149e6:    20 70             	r0 = 2			  ## analog.c:1382:5
 1e149e8:    8f f3 33 7c       	call 2029670 <delay : 4252 >			  ## analog.c:1382:5
 1e149ec:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1383:13
 1e149ee:    f0 b0             	r0 &= 4294967293			  ## analog.c:1383:13
 1e149f0:    f8 49             	[r4 + 124] = r0			  ## analog.c:1383:13
 1e149f2:    20 70             	r0 = 2			  ## analog.c:1384:5
 1e149f4:    8f f3 2d 7c       	call 2029658 <delay : 4252 >			  ## analog.c:1384:5
 1e149f8:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1385:13
 1e149fa:    70 b1             	r0 &= 4294967291			  ## analog.c:1385:13
 1e149fc:    f8 49             	[r4 + 124] = r0			  ## analog.c:1385:13
 1e149fe:    20 70             	r0 = 2			  ## analog.c:1386:5
 1e14a00:    8f f3 27 7c       	call 2029646 <delay : 4252 >			  ## analog.c:1386:5
 1e14a04:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1387:45
 1e14a08:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1387:31
 1e14a0c:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1387:17
 1e14a10:    20 70             	r0 = 2			  ## analog.c:1388:5
 1e14a12:    8f f3 1e 7c       	call 2029628 <delay : 4252 >			  ## analog.c:1388:5
 1e14a16:    90 48             	r0 = [r4 + 36]			  ## analog.c:1389:17
 1e14a18:    f0 b5             	r0 &= 4294965247			  ## analog.c:1389:17
 1e14a1a:    98 48             	[r4 + 36] = r0			  ## analog.c:1389:17
 1e14a1c:    bf f3 9c fa       	call -2760 <rxtrim_analog_init : 1e13f58 >			  ## analog.c:903:5
 1e14a20:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:905:22
 1e14a24:    01 fb 3f fe       	r1 = -449 <bank_code_load_addr+0x1E122B : 1fffe3f >			  ## analog.c:905:22
 1e14a28:    50 b3             	r0 &= r1			  ## analog.c:905:22
 1e14a2a:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:905:22
 1e14a2e:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:906:22
 1e14a32:    01 fb c0 01       	r1 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:906:22
 1e14a36:    50 b2             	r0 |= r1			  ## analog.c:906:22
 1e14a38:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:906:22
 1e14a3c:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:908:22
 1e14a40:    30 fd 1e 0b       	r0 = r0 & 4293001215			  ## analog.c:908:22
 1e14a44:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:908:22
 1e14a48:    03 f4 15 ab       	[r10 + 12] |= 1376256			  ## analog.c:909:22
 1e14a4c:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:912:22
 1e14a50:    f0 b5             	r0 &= 4294965247			  ## analog.c:912:22
 1e14a52:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:912:22
 1e14a56:    02 f4 01 a9       	[r10 + 8] |= 1			  ## analog.c:913:22
 1e14a5a:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:914:22
 1e14a5e:    70 b0             	r0 &= 4294967294			  ## analog.c:914:22
 1e14a60:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:914:22
 1e14a64:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:916:13
 1e14a68:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:917:20
 1e14a6c:    1f f4 10 49       	[r4 + 124] |= 16			  ## analog.c:918:13
 1e14a70:    90 48             	r0 = [r4 + 36]			  ## analog.c:919:17
 1e14a72:    98 48             	[r4 + 36] = r0			  ## analog.c:919:17
 1e14a74:    00 48             	r0 = [r4 + 0]			  ## analog.c:920:17
 1e14a76:    30 fd 0c 0c       	r0 = r0 & 4093640703			  ## analog.c:920:17
 1e14a7a:    08 48             	[r4 + 0] = r0			  ## analog.c:920:17
 1e14a7c:    40 a3             	r0 = sp + 52			  ## analog.c:920:17
 1e14a7e:    98 4e             	[r7 + 36] = r0			  ## analog.c:922:19
 1e14a80:    01 70             	r1 = 0			  ## analog.c:925:20
 1e14a82:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## analog.c:925:20
 1e14a86:    97 f3 33 92       	call 3089510 <memset : 106ef0 >			  ## analog.c:925:20
 1e14a8a:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:928:22
 1e14a8e:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:928:22
 1e14a92:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:928:22
 1e14a96:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:929:22
 1e14a9a:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:929:22
 1e14a9e:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:931:22
 1e14aa2:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:931:22
 1e14aa6:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:931:22
 1e14aaa:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:932:22
 1e14aae:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:932:22
 1e14ab2:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:934:22
 1e14ab6:    f0 b4             	r0 &= 4294966783			  ## analog.c:934:22
 1e14ab8:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:934:22
 1e14abc:    03 f4 02 aa       	[r10 + 12] |= 512			  ## analog.c:935:22
 1e14ac0:    c8 f4 40 7b       	[r7 + 32] = 4194304			  ## analog.c:938:23
 1e14ac4:    80 4e             	r0 = [r7 + 32]			  ## analog.c:939:16
 1e14ac6:    00 d4             	r0 = r0 >> 16			  ## analog.c:939:9
 1e14ac8:    fd 31             	if (r0 != 0) goto -6 <.GJTIE841_1_1_+0x418 : 1e14ac4 >			  ## analog.c:939:9
 1e14aca:    15 80             	r5 += 1			  ## analog.c:937:26
 1e14acc:    60 05             	r0 = r5.l (u)			  ## analog.c:937:26
 1e14ace:    40 e1 f7 1f       	if (r0 != 20) goto -18 <.GJTIE841_1_1_+0x414 : 1e14ac0 >			  ## analog.c:937:26
 1e14ad2:    40 a3             	r0 = sp + 52
 1e14ad4:    00 fc fc 00       	r0 = r0 + 252
 1e14ad8:    18 02             	[sp+4] = r0
 1e14ada:    08 70             	r8 = 0
 1e14adc:    02 fb f8 0f       	r2 = 4088 <sys_clock_limit+0x48 : ff8 >
 1e14ae0:    83 94             	r3 = r2 + 8
 1e14ae2:    00 70             	r0 = 0
 1e14ae4:    28 02             	[sp+8] = r0
 1e14ae6:    08 02             	[sp] = r0
 1e14ae8:    09 fd 40 8b       	r9 = r8 | 4194304
 1e14aec:    ac 08             	r12 = r10
 1e14aee:    00 70             	r0 = 0
 1e14af0:    0b 70             	r11 = 0
 1e14af2:    38 02             	[sp+12] = r0
 1e14af4:    00 70             	r0 = 0
 1e14af6:    19 f6 20 70       	[r7 + 32] = r9			  ## analog.c:955:31
 1e14afa:    81 4e             	r1 = [r7 + 32]			  ## analog.c:956:24
 1e14afc:    09 d4             	r1 = r1 >> 16			  ## analog.c:956:17
 1e14afe:    fd 33             	if (r1 != 0) goto -6 <.GJTIE841_1_1_+0x44E : 1e14afa >			  ## analog.c:956:17
 1e14b00:    10 80             	r0 += 1			  ## analog.c:954:36
 1e14b02:    21 04             	r1 = r0.l (u)			  ## analog.c:954:36
 1e14b04:    21 e0 f7 1f       	if (r1 != 2) goto -18 <.GJTIE841_1_1_+0x44A : 1e14af6 >			  ## analog.c:954:36
 1e14b08:    01 70             	r1 = 0
 1e14b0a:    f0 73             	r0 = 63
 1e14b0c:    16 02             	r6 = [sp+4]
 1e14b0e:    45 f6 fc 6f       	r5 = [r6 ++= -4]			  ## analog.c:967:24
 1e14b12:    2c c4             	r4 = r5 << 16			  ## analog.c:967:35
 1e14b14:    e4 d8             	r4 = r4 >>> 3			  ## analog.c:969:67
 1e14b16:    80 fe 20 41       	r4 += r1 * r2			  ## analog.c:969:50
 1e14b1a:    e0 fe 30 14       	r1 = r4 / r3 (s)			  ## analog.c:969:75
 1e14b1e:    2c dc             	r4 = r5 >>> 16			  ## analog.c:968:34
 1e14b20:    f0 fd 68 f4       	r15 = r4 << 13			  ## analog.c:970:67
 1e14b24:    80 fe 20 f1       	r15 += r1 * r2			  ## analog.c:970:50
 1e14b28:    f0 8f             	r0 += -1			  ## analog.c:965:42
 1e14b2a:    e0 fe 30 1f       	r1 = r15 / r3 (s)			  ## analog.c:970:75
 1e14b2e:    00 e0 ee cf       	ifs (r0 > 0) goto -36 <.GJTIE841_1_1_+0x462 : 1e14b0e >			  ## analog.c:965:13
 1e14b32:    20 fb 08 0b       	r0 = 524288			  ## analog.c:972:21
 1e14b36:    e0 fe 00 af       	r10 = r15 / r0 (s)			  ## analog.c:972:21
 1e14b3a:    6d fb 00 a9       	r13 = 0 - r10			  ## analog.c:975:23
 1e14b3e:    d1 08             	r1 = r13			  ## analog.c:974:17
 1e14b40:    c0 ff 01 00 f8 ff 	r0 = 4294443009 <bank_code_load_addr+0x1613ED : 1f80001 >			  ## analog.c:974:17
 1e14b46:    0f f2 01 b0       	ifs (r15 < r0) goto 2 <.GJTIE841_1_1_+0x4A0 : 1e14b4c >			  ## analog.c:974:17
 1e14b4a:    a1 08             	r1 = r10			  ## analog.c:974:17
 1e14b4c:    26 70             	r6 = 2			  ## analog.c:984:13
 1e14b4e:    c1 e3 01 c0       	ifs (r1 > 60) goto 2 <.GJTIE841_1_1_+0x4A8 : 1e14b54 >			  ## analog.c:984:13
 1e14b52:    16 70             	r6 = 1			  ## analog.c:984:13
 1e14b54:    40 70             	r0 = 4			  ## analog.c:980:17
 1e14b56:    81 e7 01 c0       	ifs (r1 > 120) goto 2 <.GJTIE841_1_1_+0x4B0 : 1e14b5c >			  ## analog.c:980:17
 1e14b5a:    60 08             	r0 = r6			  ## analog.c:980:17
 1e14b5c:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e14b62:    08 e0 19 00       	if (r8 == 0) goto 50 <.GJTIE841_1_1_+0x4EC : 1e14b98 >
 1e14b66:    31 42             	r1 = [r1 + 12]
 1e14b68:    36 fd 01 1a       	r6 = r1 & 4294967039			  ## analog.c:1006:38
 1e14b6c:    11 b4             	r1 |= 256			  ## analog.c:1004:38
 1e14b6e:    c4 ff 01 00 f8 ff 	r4 = 4294443009 <bank_code_load_addr+0x1613ED : 1f80001 >			  ## analog.c:1003:21
 1e14b74:    4f f2 01 b0       	ifs (r15 < r4) goto 2 <.GJTIE841_1_1_+0x4CE : 1e14b7a >			  ## analog.c:1003:21
 1e14b78:    61 08             	r1 = r6			  ## analog.c:1003:21
 1e14b7a:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e14b80:    39 48             	[r4 + 12] = r1
 1e14b82:    31 48             	r1 = [r4 + 12]			  ## analog.c:1009:34
 1e14b84:    31 fd ff 19       	r1 = r1 & 4294967040			  ## analog.c:1009:34
 1e14b88:    39 48             	[r4 + 12] = r1			  ## analog.c:1009:34
 1e14b8a:    21 02             	r1 = [sp+8]			  ## analog.c:1008:30
 1e14b8c:    61 04             	r1 = r1.l (u)			  ## analog.c:1008:30
 1e14b8e:    01 09             	r1 += r0			  ## analog.c:1008:41
 1e14b90:    00 70             	r0 = 0			  ## analog.c:1008:41
 1e14b92:    29 02             	[sp+8] = r1
 1e14b94:    c6 98             	r6 = r4 + 12
 1e14b96:    18 18             	goto 48 <.GJTIE841_1_1_+0x51C : 1e14bc8 >
 1e14b98:    21 42             	r1 = [r1 + 8]
 1e14b9a:    36 fd 02 1c       	r6 = r1 & 4261412863			  ## analog.c:995:38
 1e14b9e:    91 bc             	r1 |= 33554432			  ## analog.c:993:38
 1e14ba0:    c4 ff 01 00 f8 ff 	r4 = 4294443009 <bank_code_load_addr+0x1613ED : 1f80001 >			  ## analog.c:992:21
 1e14ba6:    4f f2 01 b0       	ifs (r15 < r4) goto 2 <.GJTIE841_1_1_+0x500 : 1e14bac >			  ## analog.c:992:21
 1e14baa:    61 08             	r1 = r6			  ## analog.c:992:21
 1e14bac:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e14bb2:    29 48             	[r4 + 8] = r1
 1e14bb4:    21 48             	r1 = [r4 + 8]			  ## analog.c:999:34
 1e14bb6:    31 fd ff 15       	r1 = r1 & 4261543935			  ## analog.c:999:34
 1e14bba:    29 48             	[r4 + 8] = r1			  ## analog.c:999:34
 1e14bbc:    01 02             	r1 = [sp]			  ## analog.c:998:30
 1e14bbe:    61 04             	r1 = r1.l (u)			  ## analog.c:998:30
 1e14bc0:    01 09             	r1 += r0			  ## analog.c:998:41
 1e14bc2:    10 71             	r0 = 17			  ## analog.c:998:41
 1e14bc4:    09 02             	[sp] = r1
 1e14bc6:    86 98             	r6 = r4 + 8
 1e14bc8:    04 4c             	r4 = [r6 + 0]
 1e14bca:    41 04             	r1 = r1.b0 (u)
 1e14bcc:    f8 fd 00 01       	r0 = r1 << r0
 1e14bd0:    50 b8             	r0 |= r4
 1e14bd2:    08 4c             	[r6 + 0] = r0
 1e14bd4:    a1 08             	r1 = r10			  ## analog.c:1024:17
 1e14bd6:    c0 ff 00 00 f8 ff 	r0 = 4294443008 <bank_code_load_addr+0x1613EC : 1f80000 >			  ## analog.c:1024:17
 1e14bdc:    0f f2 01 c0       	ifs (r15 > r0) goto 2 <.GJTIE841_1_1_+0x536 : 1e14be2 >			  ## analog.c:1024:17
 1e14be0:    d1 08             	r1 = r13			  ## analog.c:1024:17
 1e14be2:    10 70             	r0 = 1			  ## analog.c:1024:25
 1e14be4:    74 fc 68 ff       	r4 = r7 + -152			  ## analog.c:1024:25
 1e14be8:    a1 e1 01 b0       	ifs (r1 < 26) goto 2 <.GJTIE841_1_1_+0x542 : 1e14bee >			  ## analog.c:1024:25
 1e14bec:    00 70             	r0 = 0
 1e14bee:    40 fe c0 1a       	r1 = r10 * r12			  ## analog.c:1024:38
 1e14bf2:    c9 d7             	r1 = r1 >> 31			  ## analog.c:1024:45
 1e14bf4:    e2 fd b0 11       	r1 = r1 & r11			  ## analog.c:1024:50
 1e14bf8:    50 b2             	r0 |= r1			  ## analog.c:1024:31
 1e14bfa:    cd ff 00 19 1e 00 	r13 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1024:31
 1e14c00:    1c 30             	if (r0 != 0) goto 56 <.GJTIE841_1_1_+0x58E : 1e14c3a >			  ## analog.c:1024:31
 1e14c02:    36 02             	r6 = [sp+12]
 1e14c04:    10 9c             	r0 = r6 + 1			  ## analog.c:1038:23
 1e14c06:    1b 70             	r11 = 1
 1e14c08:    ac 08             	r12 = r10
 1e14c0a:    01 fb b9 0b       	r1 = 3001 <BTCTLER_CL_CODE_TOTAL+0x27 : bb9 >			  ## analog.c:1038:17
 1e14c0e:    16 f2 70 bf       	ifs (r6 < r1) goto -288 <.GJTIE841_1_1_+0x446 : 1e14af2 >			  ## analog.c:1038:17
 1e14c12:    00 f6 08 d0       	r0 = [r13 + 8]			  ## analog.c:1040:34
 1e14c16:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:1040:34
 1e14c1a:    10 f6 08 d0       	[r13 + 8] = r0			  ## analog.c:1040:34
 1e14c1e:    00 f6 08 d0       	r0 = [r13 + 8]			  ## analog.c:1041:34
 1e14c22:    10 f6 08 d0       	[r13 + 8] = r0			  ## analog.c:1041:34
 1e14c26:    00 f6 0c d0       	r0 = [r13 + 12]			  ## analog.c:1042:34
 1e14c2a:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1042:34
 1e14c2e:    10 f6 0c d0       	[r13 + 12] = r0			  ## analog.c:1042:34
 1e14c32:    00 f6 0c d0       	r0 = [r13 + 12]			  ## analog.c:1043:34
 1e14c36:    10 f6 0c d0       	[r13 + 12] = r0			  ## analog.c:1043:34
 1e14c3a:    18 80             	r8 += 1			  ## analog.c:946:25
 1e14c3c:    28 e0 54 1f       	if (r8 != 2) goto -344 <.GJTIE841_1_1_+0x43C : 1e14ae8 >			  ## analog.c:946:25
 1e14c40:    cb ff fc 2c 00 00 	r11 = 11516 <tws_bulk_pool_end : 2cfc >
 1e14c46:    00 02             	r0 = [sp]
 1e14c48:    10 f9 0e b0       	b[r11 + 14] = r0			  ## analog.c:1049:28
 1e14c4c:    00 d2             	r0 = r0 >> 8			  ## analog.c:1049:28
 1e14c4e:    10 f9 0f b0       	b[r11 + 15] = r0			  ## analog.c:1049:28
 1e14c52:    21 02             	r1 = [sp+8]			  ## analog.c:1049:28
 1e14c54:    08 d2             	r0 = r1 >> 8			  ## analog.c:1050:28
 1e14c56:    10 f9 11 b0       	b[r11 + 17] = r0			  ## analog.c:1050:28
 1e14c5a:    11 f9 10 b0       	b[r11 + 16] = r1			  ## analog.c:1050:28
 1e14c5e:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1052:13
 1e14c60:    f0 b0             	r0 &= 4294967293			  ## analog.c:1052:13
 1e14c62:    f8 49             	[r4 + 124] = r0			  ## analog.c:1052:13
 1e14c64:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1053:20
 1e14c66:    70 b8             	r0 &= 4294901759			  ## analog.c:1053:20
 1e14c68:    28 4e             	[r7 + 8] = r0			  ## analog.c:1053:20
 1e14c6a:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1054:13
 1e14c6c:    70 b2             	r0 &= 4294967279			  ## analog.c:1054:13
 1e14c6e:    f8 49             	[r4 + 124] = r0			  ## analog.c:1054:13
 1e14c70:    00 f4 0c 4c       	[r4 + 0] |= 201326592			  ## analog.c:1055:17
 1e14c74:    bf f3 70 f9       	call -3360 <rxtrim_analog_init : 1e13f58 >			  ## analog.c:721:5
 1e14c78:    02 70             	r2 = 0			  ## analog.c:721:5
 1e14c7a:    12 f6 08 e0       	[r14 + 8] = r2			  ## analog.c:723:17
 1e14c7e:    20 70             	r0 = 2			  ## analog.c:724:5
 1e14c80:    8f f3 e7 7a       	call 2029006 <delay : 4252 >			  ## analog.c:724:5
 1e14c84:    12 f6 04 e0       	[r14 + 4] = r2			  ## analog.c:725:17
 1e14c88:    20 70             	r0 = 2			  ## analog.c:726:5
 1e14c8a:    8f f3 e2 7a       	call 2028996 <delay : 4252 >			  ## analog.c:726:5
 1e14c8e:    12 f6 00 e0       	[r14 + 0] = r2			  ## analog.c:727:17
 1e14c92:    20 70             	r0 = 2			  ## analog.c:728:5
 1e14c94:    8f f3 dd 7a       	call 2028986 <delay : 4252 >			  ## analog.c:728:5
 1e14c98:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:729:20
 1e14c9c:    20 70             	r0 = 2			  ## analog.c:730:5
 1e14c9e:    8f f3 d8 7a       	call 2028976 <delay : 4252 >			  ## analog.c:730:5
 1e14ca2:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:731:13
 1e14ca6:    20 70             	r0 = 2			  ## analog.c:732:5
 1e14ca8:    8f f3 d3 7a       	call 2028966 <delay : 4252 >			  ## analog.c:732:5
 1e14cac:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:733:13
 1e14cb0:    20 70             	r0 = 2			  ## analog.c:734:5
 1e14cb2:    8f f3 ce 7a       	call 2028956 <delay : 4252 >			  ## analog.c:734:5
 1e14cb6:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:735:17
 1e14cba:    20 70             	r0 = 2			  ## analog.c:736:5
 1e14cbc:    8f f3 c9 7a       	call 2028946 <delay : 4252 >			  ## analog.c:736:5
 1e14cc0:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:737:17
 1e14cc4:    20 70             	r0 = 2			  ## analog.c:738:5
 1e14cc6:    8f f3 c4 7a       	call 2028936 <delay : 4252 >			  ## analog.c:738:5
 1e14cca:    02 f4 01 eb       	[r14 + 8] |= 65536			  ## analog.c:739:17
 1e14cce:    20 70             	r0 = 2			  ## analog.c:740:5
 1e14cd0:    8f f3 bf 7a       	call 2028926 <delay : 4252 >			  ## analog.c:740:5
 1e14cd4:    02 f4 10 eb       	[r14 + 8] |= 1048576			  ## analog.c:741:17
 1e14cd8:    20 70             	r0 = 2			  ## analog.c:742:5
 1e14cda:    8f f3 ba 7a       	call 2028916 <delay : 4252 >			  ## analog.c:742:5
 1e14cde:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:743:17
 1e14ce2:    20 70             	r0 = 2			  ## analog.c:744:5
 1e14ce4:    8f f3 b5 7a       	call 2028906 <delay : 4252 >			  ## analog.c:744:5
 1e14ce8:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:745:17
 1e14cec:    20 70             	r0 = 2			  ## analog.c:746:5
 1e14cee:    8f f3 b0 7a       	call 2028896 <delay : 4252 >			  ## analog.c:746:5
 1e14cf2:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:747:17
 1e14cf6:    f0 b4             	r0 &= 4294966783			  ## analog.c:747:17
 1e14cf8:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:747:17
 1e14cfc:    20 70             	r0 = 2			  ## analog.c:748:5
 1e14cfe:    8f f3 a8 7a       	call 2028880 <delay : 4252 >			  ## analog.c:748:5
 1e14d02:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:749:17
 1e14d06:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:749:17
 1e14d0a:    20 70             	r0 = 2			  ## analog.c:750:5
 1e14d0c:    8f f3 a1 7a       	call 2028866 <delay : 4252 >			  ## analog.c:750:5
 1e14d10:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:751:17
 1e14d14:    20 70             	r0 = 2			  ## analog.c:752:5
 1e14d16:    8f f3 9c 7a       	call 2028856 <delay : 4252 >			  ## analog.c:752:5
 1e14d1a:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:753:17
 1e14d1e:    20 70             	r0 = 2			  ## analog.c:754:5
 1e14d20:    8f f3 97 7a       	call 2028846 <delay : 4252 >			  ## analog.c:754:5
 1e14d24:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:755:17
 1e14d28:    20 70             	r0 = 2			  ## analog.c:756:5
 1e14d2a:    8f f3 92 7a       	call 2028836 <delay : 4252 >			  ## analog.c:756:5
 1e14d2e:    20 70             	r0 = 2			  ## analog.c:757:5
 1e14d30:    8f f3 8f 7a       	call 2028830 <delay : 4252 >			  ## analog.c:757:5
 1e14d34:    00 f4 01 ec       	[r14 + 0] |= 16777216			  ## analog.c:758:17
 1e14d38:    20 70             	r0 = 2			  ## analog.c:759:5
 1e14d3a:    8f f3 8a 7a       	call 2028820 <delay : 4252 >			  ## analog.c:759:5
 1e14d3e:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:760:17
 1e14d42:    20 70             	r0 = 2			  ## analog.c:761:5
 1e14d44:    8f f3 85 7a       	call 2028810 <delay : 4252 >			  ## analog.c:761:5
 1e14d48:    00 f4 20 ec       	[r14 + 0] |= 536870912			  ## analog.c:762:17
 1e14d4c:    20 70             	r0 = 2			  ## analog.c:763:5
 1e14d4e:    8f f3 80 7a       	call 2028800 <delay : 4252 >			  ## analog.c:763:5
 1e14d52:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:765:17
 1e14d56:    20 70             	r0 = 2			  ## analog.c:766:5
 1e14d58:    8f f3 7b 7a       	call 2028790 <delay : 4252 >			  ## analog.c:766:5
 1e14d5c:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:767:17
 1e14d60:    20 70             	r0 = 2			  ## analog.c:769:5
 1e14d62:    8f f3 76 7a       	call 2028780 <delay : 4252 >			  ## analog.c:769:5
 1e14d66:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:770:17
 1e14d6a:    50 48             	r0 = [r4 + 20]			  ## analog.c:776:17
 1e14d6c:    c1 ff ff ff 03 f8 	r1 = 4161011711 <text_size+0x2330B : 3ffff >			  ## analog.c:776:17
 1e14d72:    50 b3             	r0 &= r1			  ## analog.c:776:17
 1e14d74:    58 48             	[r4 + 20] = r0			  ## analog.c:776:17
 1e14d76:    50 70             	r0 = 5			  ## analog.c:777:5
 1e14d78:    8f f3 6b 7a       	call 2028758 <delay : 4252 >			  ## analog.c:777:5
 1e14d7c:    05 f4 7f 46       	[r4 + 20] |= 66846720			  ## analog.c:778:17
 1e14d80:    50 70             	r0 = 5			  ## analog.c:779:5
 1e14d82:    8f f3 66 7a       	call 2028748 <delay : 4252 >			  ## analog.c:779:5
 1e14d86:    50 48             	r0 = [r4 + 20]			  ## analog.c:780:17
 1e14d88:    c8 ff ff 01 fc ff 	r8 = 4294705663 <bank_code_load_addr+0x1A15EB : 1fc01ff >			  ## analog.c:780:17
 1e14d8e:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:780:17
 1e14d92:    58 48             	[r4 + 20] = r0			  ## analog.c:780:17
 1e14d94:    40 71             	r0 = 20			  ## analog.c:781:5
 1e14d96:    49 71             	r9 = 20			  ## analog.c:781:5
 1e14d98:    8f f3 5b 7a       	call 2028726 <delay : 4252 >			  ## analog.c:781:5
 1e14d9c:    50 48             	r0 = [r4 + 20]
 1e14d9e:    0a fb 00 fe       	r10 = -512 <bank_code_load_addr+0x1E11EC : 1fffe00 >
 1e14da2:    e2 fd a0 00       	r0 = r0 & r10
 1e14da6:    58 48             	[r4 + 20] = r0
 1e14da8:    50 70             	r0 = 5			  ## analog.c:785:9
 1e14daa:    8f f3 52 7a       	call 2028708 <delay : 4252 >			  ## analog.c:785:9
 1e14dae:    f6 07             	r6 = -1			  ## analog.c:785:9
 1e14db0:    c5 7d             	r5 = 220			  ## analog.c:785:9
 1e14db2:    50 48             	r0 = [r4 + 20]			  ## analog.c:786:21
 1e14db4:    21 08             	r1 = r2			  ## analog.c:786:21
 1e14db6:    50 ba             	r0 |= r5			  ## analog.c:786:21
 1e14db8:    58 48             	[r4 + 20] = r0			  ## analog.c:786:21
 1e14dba:    40 71             	r0 = 20			  ## analog.c:787:9
 1e14dbc:    8f f3 49 7a       	call 2028690 <delay : 4252 >			  ## analog.c:787:9
 1e14dc0:    02 70             	r2 = 0
 1e14dc2:    03 70             	r3 = 0
 1e14dc4:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:791:25
 1e14dc8:    f0 bc             	r0 &= 4261412863			  ## analog.c:791:25
 1e14dca:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:791:25
 1e14dce:    50 70             	r0 = 5			  ## analog.c:792:13
 1e14dd0:    8f f3 3f 7a       	call 2028670 <delay : 4252 >			  ## analog.c:792:13
 1e14dd4:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:793:25
 1e14dd8:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:794:21
 1e14ddc:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE841_1_1_+0x72C : 1e14dd8 >			  ## analog.c:794:13
 1e14de0:    00 f6 1c e0       	r0 = [r14 + 28]			  ## analog.c:796:24
 1e14de4:    04 f6 20 e0       	r4 = [r14 + 32]			  ## analog.c:798:24
 1e14de8:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:797:29
 1e14dec:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:38
 1e14df0:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:799:29
 1e14df4:    13 80             	r3 += 1			  ## analog.c:790:30
 1e14df6:    e4 04             	r4 = r3.l (u)			  ## analog.c:790:30
 1e14df8:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:19
 1e14dfc:    44 e1 e2 1f       	if (r4 != 20) goto -60 <.GJTIE841_1_1_+0x718 : 1e14dc4 >
 1e14e00:    74 fc 68 ff       	r4 = r7 + -152
 1e14e04:    50 48             	r0 = [r4 + 20]
 1e14e06:    e2 fd a0 00       	r0 = r0 & r10
 1e14e0a:    58 48             	[r4 + 20] = r0
 1e14e0c:    50 70             	r0 = 5			  ## analog.c:785:9
 1e14e0e:    8f f3 20 7a       	call 2028608 <delay : 4252 >			  ## analog.c:785:9
 1e14e12:    e0 fe 90 02       	r0 = r2 / r9 (s)			  ## analog.c:802:14
 1e14e16:    52 08             	r2 = r5			  ## analog.c:804:13
 1e14e18:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE841_1_1_+0x772 : 1e14e1e >			  ## analog.c:804:13
 1e14e1c:    12 08             	r2 = r1			  ## analog.c:804:13
 1e14e1e:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE841_1_1_+0x778 : 1e14e24 >
 1e14e22:    60 08             	r0 = r6			  ## analog.c:804:13
 1e14e24:    15 80             	r5 += 1			  ## analog.c:783:29
 1e14e26:    06 08             	r6 = r0			  ## analog.c:783:29
 1e14e28:    01 ff 18 51 c2 ff 	if (r5 != 280) goto -124 <.GJTIE841_1_1_+0x706 : 1e14db2 >
 1e14e2e:    50 48             	r0 = [r4 + 20]			  ## analog.c:815:17
 1e14e30:    09 fb ff 01       	r9 = 511 <BTCTLER_CONTROLLER_BSS_SIZE+0x3F : 1ff >			  ## analog.c:815:21
 1e14e34:    e2 fd 90 12       	r1 = r2 & r9			  ## analog.c:815:21
 1e14e38:    50 b2             	r0 |= r1			  ## analog.c:815:17
 1e14e3a:    58 48             	[r4 + 20] = r0			  ## analog.c:815:17
 1e14e3c:    40 71             	r0 = 20			  ## analog.c:816:5
 1e14e3e:    4a 71             	r10 = 20			  ## analog.c:816:5
 1e14e40:    8f f3 07 7a       	call 2028558 <delay : 4252 >			  ## analog.c:816:5
 1e14e44:    10 d2             	r0 = r2 >> 8			  ## analog.c:820:22
 1e14e46:    10 f9 13 b0       	b[r11 + 19] = r0			  ## analog.c:820:22
 1e14e4a:    12 f9 12 b0       	b[r11 + 18] = r2			  ## analog.c:820:22
 1e14e4e:    50 48             	r0 = [r4 + 20]			  ## analog.c:824:17
 1e14e50:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:824:17
 1e14e54:    58 48             	[r4 + 20] = r0			  ## analog.c:824:17
 1e14e56:    50 48             	r0 = [r4 + 20]			  ## analog.c:825:17
 1e14e58:    58 48             	[r4 + 20] = r0			  ## analog.c:825:17
 1e14e5a:    50 48             	r0 = [r4 + 20]
 1e14e5c:    e2 fd 80 00       	r0 = r0 & r8
 1e14e60:    58 48             	[r4 + 20] = r0
 1e14e62:    c1 ff d8 ff 00 00 	r1 = 65496 <_IRQ_MEM_ADDR+0xD8 : ffd8 >
 1e14e68:    f3 07             	r3 = -1
 1e14e6a:    2b 08             	r11 = r2
 1e14e6c:    50 70             	r0 = 5			  ## analog.c:828:9
 1e14e6e:    8f f3 f0 79       	call 2028512 <delay : 4252 >			  ## analog.c:828:9
 1e14e72:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:828:9
 1e14e76:    04 08             	r4 = r0			  ## analog.c:828:9
 1e14e78:    50 48             	r0 = [r4 + 20]			  ## analog.c:829:21
 1e14e7a:    e2 fd 90 21       	r2 = r1 & r9			  ## analog.c:829:24
 1e14e7e:    52 c2             	r2 = r2 << 9			  ## analog.c:829:24
 1e14e80:    50 b4             	r0 |= r2			  ## analog.c:829:21
 1e14e82:    58 48             	[r4 + 20] = r0			  ## analog.c:829:21
 1e14e84:    40 71             	r0 = 20			  ## analog.c:830:9
 1e14e86:    8f f3 e4 79       	call 2028488 <delay : 4252 >			  ## analog.c:830:9
 1e14e8a:    02 70             	r2 = 0
 1e14e8c:    05 70             	r5 = 0
 1e14e8e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:833:25
 1e14e92:    f0 bc             	r0 &= 4261412863			  ## analog.c:833:25
 1e14e94:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:833:25
 1e14e98:    50 70             	r0 = 5			  ## analog.c:834:13
 1e14e9a:    8f f3 da 79       	call 2028468 <delay : 4252 >			  ## analog.c:834:13
 1e14e9e:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:835:25
 1e14ea2:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:836:21
 1e14ea6:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE841_1_1_+0x7F6 : 1e14ea2 >			  ## analog.c:836:13
 1e14eaa:    04 f6 1c e0       	r4 = [r14 + 28]			  ## analog.c:838:24
 1e14eae:    50 70             	r0 = 5			  ## analog.c:839:13
 1e14eb0:    8f f3 cf 79       	call 2028446 <delay : 4252 >			  ## analog.c:839:13
 1e14eb4:    06 f6 20 e0       	r6 = [r14 + 32]			  ## analog.c:841:24
 1e14eb8:    50 70             	r0 = 5			  ## analog.c:842:13
 1e14eba:    8f f3 ca 79       	call 2028436 <delay : 4252 >			  ## analog.c:842:13
 1e14ebe:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:840:29
 1e14ec2:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:38
 1e14ec6:    b0 fd 40 06       	r0 = sextra(r6, p:8, l:16)			  ## analog.c:843:29
 1e14eca:    15 80             	r5 += 1			  ## analog.c:832:30
 1e14ecc:    64 05             	r4 = r5.l (u)			  ## analog.c:832:30
 1e14ece:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:19
 1e14ed2:    44 e1 dc 1f       	if (r4 != 20) goto -72 <.GJTIE841_1_1_+0x7E2 : 1e14e8e >
 1e14ed6:    70 fc 68 ff       	r0 = r7 + -152
 1e14eda:    05 08             	r5 = r0
 1e14edc:    50 4a             	r0 = [r5 + 20]
 1e14ede:    e2 fd 80 40       	r4 = r0 & r8
 1e14ee2:    e0 fe a0 02       	r0 = r2 / r10 (s)			  ## analog.c:846:14
 1e14ee6:    5c 4a             	[r5 + 20] = r4
 1e14ee8:    12 08             	r2 = r1			  ## analog.c:848:13
 1e14eea:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE841_1_1_+0x844 : 1e14ef0 >			  ## analog.c:848:13
 1e14eee:    b2 08             	r2 = r11			  ## analog.c:848:13
 1e14ef0:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE841_1_1_+0x84A : 1e14ef6 >
 1e14ef4:    30 08             	r0 = r3			  ## analog.c:848:13
 1e14ef6:    11 80             	r1 += 1			  ## analog.c:826:28
 1e14ef8:    64 04             	r4 = r1.l (u)			  ## analog.c:826:28
 1e14efa:    03 08             	r3 = r0			  ## analog.c:826:28
 1e14efc:    84 e2 b5 1f       	if (r4 != 40) goto -150 <.GJTIE841_1_1_+0x7BE : 1e14e6a >
 1e14f00:    54 08             	r4 = r5
 1e14f02:    50 48             	r0 = [r4 + 20]			  ## analog.c:856:17
 1e14f04:    51 c2             	r1 = r2 << 9			  ## analog.c:856:21
 1e14f06:    c3 ff 00 fe 03 00 	r3 = 261632 <text_size+0x2310C : 3fe00 >			  ## analog.c:856:21
 1e14f0c:    51 b7             	r1 &= r3			  ## analog.c:856:21
 1e14f0e:    50 b2             	r0 |= r1			  ## analog.c:856:17
 1e14f10:    58 48             	[r4 + 20] = r0			  ## analog.c:856:17
 1e14f12:    10 d2             	r0 = r2 >> 8			  ## analog.c:860:22
 1e14f14:    c1 ff fc 2c 00 00 	r1 = 11516 <tws_bulk_pool_end : 2cfc >			  ## analog.c:860:22
 1e14f1a:    58 63             	b[r1 + 21] = r0			  ## analog.c:860:22
 1e14f1c:    4a 63             	b[r1 + 20] = r2			  ## analog.c:860:22
 1e14f1e:    20 4e             	r0 = [r7 + 8]			  ## analog.c:875:20
 1e14f20:    70 b8             	r0 &= 4294901759			  ## analog.c:875:20
 1e14f22:    28 4e             	[r7 + 8] = r0			  ## analog.c:875:20
 1e14f24:    20 70             	r0 = 2			  ## analog.c:876:5
 1e14f26:    8f f3 94 79       	call 2028328 <delay : 4252 >			  ## analog.c:876:5
 1e14f2a:    f0 49             	r0 = [r4 + 124]			  ## analog.c:877:13
 1e14f2c:    f0 b0             	r0 &= 4294967293			  ## analog.c:877:13
 1e14f2e:    f8 49             	[r4 + 124] = r0			  ## analog.c:877:13
 1e14f30:    20 70             	r0 = 2			  ## analog.c:878:5
 1e14f32:    8f f3 8e 79       	call 2028316 <delay : 4252 >			  ## analog.c:878:5
 1e14f36:    f0 49             	r0 = [r4 + 124]			  ## analog.c:879:13
 1e14f38:    70 b1             	r0 &= 4294967291			  ## analog.c:879:13
 1e14f3a:    f8 49             	[r4 + 124] = r0			  ## analog.c:879:13
 1e14f3c:    20 70             	r0 = 2			  ## analog.c:880:5
 1e14f3e:    8f f3 88 79       	call 2028304 <delay : 4252 >			  ## analog.c:880:5
 1e14f42:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:881:17
 1e14f46:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## analog.c:881:17
 1e14f4a:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:881:17
 1e14f4e:    20 70             	r0 = 2			  ## analog.c:882:5
 1e14f50:    8f f3 7f 79       	call 2028286 <delay : 4252 >			  ## analog.c:882:5
 1e14f54:    90 48             	r0 = [r4 + 36]			  ## analog.c:883:17
 1e14f56:    f0 b5             	r0 &= 4294965247			  ## analog.c:883:17
 1e14f58:    98 48             	[r4 + 36] = r0			  ## analog.c:883:17
 1e14f5a:    bf f3 e2 f6       	call -4668 <bt_analog_part_init : 1e13d22 >			  ## analog.c:266:9
 1e14f5e:    bf f3 45 f7       	call -4470 <reset_trim_info : 1e13dec >			  ## analog.c:268:9
 1e14f62:    09 f6 00 d0       	r9 = [r13 + 0]			  ## analog.c:3725:29
 1e14f66:    40 71             	r0 = 20			  ## analog.c:3726:5
 1e14f68:    8f f3 73 79       	call 2028262 <delay : 4252 >			  ## analog.c:3726:5
 1e14f6c:    0b f6 04 d0       	r11 = [r13 + 4]			  ## analog.c:3727:29
 1e14f70:    40 71             	r0 = 20			  ## analog.c:3728:5
 1e14f72:    8f f3 6e 79       	call 2028252 <delay : 4252 >			  ## analog.c:3728:5
 1e14f76:    00 f6 08 d0       	r0 = [r13 + 8]			  ## analog.c:3729:29
 1e14f7a:    38 02             	[sp+12] = r0			  ## analog.c:3730:5
 1e14f7c:    40 71             	r0 = 20			  ## analog.c:3730:5
 1e14f7e:    8f f3 68 79       	call 2028240 <delay : 4252 >			  ## analog.c:3730:5
 1e14f82:    08 f6 0c d0       	r8 = [r13 + 12]			  ## analog.c:3731:29
 1e14f86:    40 71             	r0 = 20			  ## analog.c:3732:5
 1e14f88:    8f f3 63 79       	call 2028230 <delay : 4252 >			  ## analog.c:3732:5
 1e14f8c:    0c f6 10 d0       	r12 = [r13 + 16]			  ## analog.c:3733:29
 1e14f90:    40 71             	r0 = 20			  ## analog.c:3734:5
 1e14f92:    8f f3 5e 79       	call 2028220 <delay : 4252 >			  ## analog.c:3734:5
 1e14f96:    00 f6 14 d0       	r0 = [r13 + 20]			  ## analog.c:3735:29
 1e14f9a:    28 02             	[sp+8] = r0			  ## analog.c:3736:5
 1e14f9c:    40 71             	r0 = 20			  ## analog.c:3736:5
 1e14f9e:    8f f3 58 79       	call 2028208 <delay : 4252 >			  ## analog.c:3736:5
 1e14fa2:    0f f6 18 d0       	r15 = [r13 + 24]			  ## analog.c:3737:29
 1e14fa6:    40 71             	r0 = 20			  ## analog.c:3738:5
 1e14fa8:    8f f3 53 79       	call 2028198 <delay : 4252 >			  ## analog.c:3738:5
 1e14fac:    d4 08             	r4 = r13			  ## analog.c:3738:5
 1e14fae:    0d f6 20 40       	r13 = [r4 + 32]			  ## analog.c:3739:29
 1e14fb2:    40 71             	r0 = 20			  ## analog.c:3740:5
 1e14fb4:    8f f3 4d 79       	call 2028186 <delay : 4252 >			  ## analog.c:3740:5
 1e14fb8:    90 48             	r0 = [r4 + 36]			  ## analog.c:3741:29
 1e14fba:    40 71             	r0 = 20			  ## analog.c:3742:5
 1e14fbc:    8f f3 49 79       	call 2028178 <delay : 4252 >			  ## analog.c:3742:5
 1e14fc0:    a0 48             	r0 = [r4 + 40]			  ## analog.c:3743:30
 1e14fc2:    40 71             	r0 = 20			  ## analog.c:3744:5
 1e14fc4:    8f f3 45 79       	call 2028170 <delay : 4252 >			  ## analog.c:3744:5
 1e14fc8:    00 70             	r0 = 0			  ## analog.c:3744:5
 1e14fca:    ce ff 13 2d 00 00 	r14 = 11539 <ldo_trim_res : 2d13 >			  ## analog.c:3744:5
 1e14fd0:    10 f9 09 e0       	b[r14 + 9] = r0			  ## analog.c:3765:29
 1e14fd4:    10 f9 07 e0       	b[r14 + 7] = r0			  ## analog.c:3758:34
 1e14fd8:    10 f9 06 e0       	b[r14 + 6] = r0			  ## analog.c:3758:34
 1e14fdc:    10 f9 05 e0       	b[r14 + 5] = r0			  ## analog.c:3758:34
 1e14fe0:    10 f9 04 e0       	b[r14 + 4] = r0			  ## analog.c:3758:34
 1e14fe4:    10 f9 03 e0       	b[r14 + 3] = r0			  ## analog.c:3758:34
 1e14fe8:    10 f9 02 e0       	b[r14 + 2] = r0			  ## analog.c:3758:34
 1e14fec:    10 f9 01 e0       	b[r14 + 1] = r0			  ## analog.c:3758:34
 1e14ff0:    10 f9 00 e0       	b[r14 + 0] = r0			  ## analog.c:3758:34
 1e14ff4:    00 f9 0c e0       	r0 = b[r14 + 12] (u)			  ## analog.c:3767:35
 1e14ff8:    01 f9 0b e0       	r1 = b[r14 + 11] (u)			  ## analog.c:3767:35
 1e14ffc:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## analog.c:3767:35
 1e15000:    20 fd fd 1a       	r0 = r1 & 64768			  ## analog.c:3775:28
 1e15004:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3775:28
 1e15008:    00 d2             	r0 = r0 >> 8			  ## analog.c:3775:28
 1e1500a:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3775:28
 1e1500e:    97 f3 c5 8e       	call 3087754 <local_irq_disable : 106d9c >			  ## analog.c:3777:5
 1e15012:    b0 48             	r0 = [r4 + 44]			  ## analog.c:3222:23
 1e15014:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e15018:    b8 48             	[r4 + 44] = r0			  ## analog.c:3222:23
 1e1501a:    0b f4 28 4b       	[r4 + 44] |= 2621440			  ## analog.c:3222:23
 1e1501e:    40 71             	r0 = 20			  ## analog.c:3781:5
 1e15020:    8f f3 17 79       	call 2028078 <delay : 4252 >			  ## analog.c:3781:5
 1e15024:    00 f9 00 e0       	r0 = b[r14 + 0] (u)			  ## analog.c:3781:5
 1e15028:    c4 ff ff 03 f8 ff 	r4 = 4294444031 <bank_code_load_addr+0x1617EB : 1f803ff >			  ## analog.c:3781:5
 1e1502e:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e15034:    12 08             	r2 = r1
 1e15036:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3235:23
 1e15038:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3235:23
 1e1503c:    a9 44             	[r2 + 40] = r1			  ## analog.c:3235:23
 1e1503e:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3237:23
 1e15040:    51 b9             	r1 &= r4			  ## analog.c:3237:23
 1e15042:    b9 44             	[r2 + 44] = r1			  ## analog.c:3237:23
 1e15044:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3241:23
 1e15048:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3243:23
 1e1504a:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3243:29
 1e1504e:    80 c2             	r0 = r0 << 10			  ## analog.c:3243:29
 1e15050:    50 b2             	r0 |= r1			  ## analog.c:3243:23
 1e15052:    00 fd 54 03       	r0 = r0 | 434176			  ## analog.c:3243:23
 1e15056:    b8 44             	[r2 + 44] = r0			  ## analog.c:3243:23
 1e15058:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3785:9
 1e1505c:    8f f3 f9 78       	call 2028018 <delay : 4252 >			  ## analog.c:3785:9
 1e15060:    20 70             	r0 = 2			  ## analog.c:3786:13
 1e15062:    bf f3 c3 f7       	call -4218 <get_ldo_voltage : 1e13fec >			  ## analog.c:3786:13
 1e15066:    01 f9 00 e0       	r1 = b[r14 + 0] (u)			  ## analog.c:3786:13
 1e1506a:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE841_1_1_+0x9D2 : 1e1507e >			  ## analog.c:3786:13
 1e15070:    10 92             	r0 = r1 + 1			  ## analog.c:3789:40
 1e15072:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3789:40
 1e15074:    10 f9 00 e0       	b[r14 + 0] = r0			  ## analog.c:3789:40
 1e15078:    81 e0 d9 3f       	if (r1 < 8) goto -78 <.GJTIE841_1_1_+0x982 : 1e1502e >			  ## analog.c:3789:40
 1e1507c:    02 18             	goto 4 <.GJTIE841_1_1_+0x9D6 : 1e15082 >			  ## analog.c:3789:40
 1e1507e:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0x9DC : 1e15088 >
 1e15082:    71 70             	r1 = 7
 1e15084:    11 f9 00 e0       	b[r14 + 0] = r1			  ## analog.c:3793:40
 1e15088:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e1508c:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e15090:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e15094:    03 fd 01 29       	r3 = r2 | 1			  ## analog.c:3800:39
 1e15098:    30 fd 01 29       	r0 = r2 & 4294967294			  ## analog.c:3797:39
 1e1509c:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:3796:85
 1e150a0:    02 08             	r2 = r0			  ## analog.c:3796:71
 1e150a2:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE841_1_1_+0x9FC : 1e150a8 >			  ## analog.c:3796:71
 1e150a6:    32 08             	r2 = r3			  ## analog.c:3796:71
 1e150a8:    d1 8f             	r1 += -3			  ## analog.c:3796:41
 1e150aa:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xA04 : 1e150b0 >			  ## analog.c:3796:41
 1e150ae:    20 08             	r0 = r2			  ## analog.c:3796:71
 1e150b0:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3797:39
 1e150b4:    00 d2             	r0 = r0 >> 8			  ## analog.c:3797:39
 1e150b6:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3797:39
 1e150ba:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e150c0:    01 08             	r1 = r0
 1e150c2:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e150c4:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e150c8:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e150ca:    0b f4 38 1b       	[r1 + 44] |= 3670016			  ## analog.c:3222:23
 1e150ce:    40 71             	r0 = 20			  ## analog.c:3810:5
 1e150d0:    8f f3 bf 78       	call 2027902 <delay : 4252 >			  ## analog.c:3810:5
 1e150d4:    00 f9 01 e0       	r0 = b[r14 + 1] (u)			  ## analog.c:3810:5
 1e150d8:    c5 ff 00 14 06 00 	r5 = 398336 <text_size+0x4470C : 61400 >			  ## analog.c:3810:5
 1e150de:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e150e4:    12 08             	r2 = r1
 1e150e6:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3250:23
 1e150e8:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3250:23
 1e150ec:    a9 44             	[r2 + 40] = r1			  ## analog.c:3250:23
 1e150ee:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3252:23
 1e150f0:    51 b9             	r1 &= r4			  ## analog.c:3252:23
 1e150f2:    b9 44             	[r2 + 44] = r1			  ## analog.c:3252:23
 1e150f4:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3256:23
 1e150f8:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3258:23
 1e150fa:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3259:29
 1e150fe:    40 c3             	r0 = r0 << 13			  ## analog.c:3259:29
 1e15100:    50 b2             	r0 |= r1			  ## analog.c:3258:23
 1e15102:    50 ba             	r0 |= r5			  ## analog.c:3258:23
 1e15104:    b8 44             	[r2 + 44] = r0			  ## analog.c:3258:23
 1e15106:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3814:9
 1e1510a:    8f f3 a2 78       	call 2027844 <delay : 4252 >			  ## analog.c:3814:9
 1e1510e:    20 70             	r0 = 2			  ## analog.c:3815:13
 1e15110:    bf f3 6c f7       	call -4392 <get_ldo_voltage : 1e13fec >			  ## analog.c:3815:13
 1e15114:    01 f9 01 e0       	r1 = b[r14 + 1] (u)			  ## analog.c:3815:13
 1e15118:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE841_1_1_+0xA80 : 1e1512c >			  ## analog.c:3815:13
 1e1511e:    10 92             	r0 = r1 + 1			  ## analog.c:3818:38
 1e15120:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3818:38
 1e15122:    10 f9 01 e0       	b[r14 + 1] = r0			  ## analog.c:3818:38
 1e15126:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE841_1_1_+0xA32 : 1e150de >			  ## analog.c:3818:38
 1e1512a:    02 18             	goto 4 <.GJTIE841_1_1_+0xA84 : 1e15130 >			  ## analog.c:3818:38
 1e1512c:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0xA8A : 1e15136 >
 1e15130:    71 70             	r1 = 7
 1e15132:    11 f9 01 e0       	b[r14 + 1] = r1			  ## analog.c:3822:38
 1e15136:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e1513a:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e1513e:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e15142:    03 fd 02 29       	r3 = r2 | 2			  ## analog.c:3829:37
 1e15146:    30 fd 02 29       	r0 = r2 & 4294967293			  ## analog.c:3826:37
 1e1514a:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:3825:93
 1e1514e:    02 08             	r2 = r0			  ## analog.c:3825:74
 1e15150:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE841_1_1_+0xAAA : 1e15156 >			  ## analog.c:3825:74
 1e15154:    32 08             	r2 = r3			  ## analog.c:3825:74
 1e15156:    d1 8f             	r1 += -3			  ## analog.c:3825:39
 1e15158:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xAB2 : 1e1515e >			  ## analog.c:3825:39
 1e1515c:    20 08             	r0 = r2			  ## analog.c:3825:74
 1e1515e:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3826:37
 1e15162:    00 d2             	r0 = r0 >> 8			  ## analog.c:3826:37
 1e15164:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3826:37
 1e15168:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1516e:    01 08             	r1 = r0
 1e15170:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e15172:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e15176:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e15178:    0b f4 48 1b       	[r1 + 44] |= 4718592			  ## analog.c:3222:23
 1e1517c:    40 71             	r0 = 20			  ## analog.c:3839:5
 1e1517e:    8f f3 68 78       	call 2027728 <delay : 4252 >			  ## analog.c:3839:5
 1e15182:    00 f9 02 e0       	r0 = b[r14 + 2] (u)			  ## analog.c:3839:5
 1e15186:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1518c:    12 08             	r2 = r1
 1e1518e:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3265:23
 1e15190:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3265:23
 1e15194:    a9 44             	[r2 + 40] = r1			  ## analog.c:3265:23
 1e15196:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3267:23
 1e15198:    51 b9             	r1 &= r4			  ## analog.c:3267:23
 1e1519a:    b9 44             	[r2 + 44] = r1			  ## analog.c:3267:23
 1e1519c:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3271:23
 1e151a0:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3273:23
 1e151a2:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3275:29
 1e151a6:    00 c4             	r0 = r0 << 16			  ## analog.c:3275:29
 1e151a8:    50 b2             	r0 |= r1			  ## analog.c:3273:23
 1e151aa:    00 fd b4 0a       	r0 = r0 | 46080			  ## analog.c:3273:23
 1e151ae:    b8 44             	[r2 + 44] = r0			  ## analog.c:3273:23
 1e151b0:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3843:9
 1e151b4:    8f f3 4d 78       	call 2027674 <delay : 4252 >			  ## analog.c:3843:9
 1e151b8:    20 70             	r0 = 2			  ## analog.c:3844:13
 1e151ba:    bf f3 17 f7       	call -4562 <get_ldo_voltage : 1e13fec >			  ## analog.c:3844:13
 1e151be:    01 f9 02 e0       	r1 = b[r14 + 2] (u)			  ## analog.c:3844:13
 1e151c2:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE841_1_1_+0xB2A : 1e151d6 >			  ## analog.c:3844:13
 1e151c8:    10 92             	r0 = r1 + 1			  ## analog.c:3847:35
 1e151ca:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3847:35
 1e151cc:    10 f9 02 e0       	b[r14 + 2] = r0			  ## analog.c:3847:35
 1e151d0:    81 e0 d9 3f       	if (r1 < 8) goto -78 <.GJTIE841_1_1_+0xADA : 1e15186 >			  ## analog.c:3847:35
 1e151d4:    02 18             	goto 4 <.GJTIE841_1_1_+0xB2E : 1e151da >			  ## analog.c:3847:35
 1e151d6:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0xB34 : 1e151e0 >
 1e151da:    71 70             	r1 = 7
 1e151dc:    11 f9 02 e0       	b[r14 + 2] = r1			  ## analog.c:3851:35
 1e151e0:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e151e4:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e151e8:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e151ec:    03 fd 04 29       	r3 = r2 | 4			  ## analog.c:3858:34
 1e151f0:    30 fd 04 29       	r0 = r2 & 4294967291			  ## analog.c:3855:34
 1e151f4:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:3854:86
 1e151f8:    02 08             	r2 = r0			  ## analog.c:3854:69
 1e151fa:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE841_1_1_+0xB54 : 1e15200 >			  ## analog.c:3854:69
 1e151fe:    32 08             	r2 = r3			  ## analog.c:3854:69
 1e15200:    d1 8f             	r1 += -3			  ## analog.c:3854:36
 1e15202:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xB5C : 1e15208 >			  ## analog.c:3854:36
 1e15206:    20 08             	r0 = r2			  ## analog.c:3854:69
 1e15208:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3855:34
 1e1520c:    00 d2             	r0 = r0 >> 8			  ## analog.c:3855:34
 1e1520e:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3855:34
 1e15212:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e15218:    01 08             	r1 = r0
 1e1521a:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e1521c:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e15220:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e15222:    0b f4 58 1b       	[r1 + 44] |= 5767168			  ## analog.c:3222:23
 1e15226:    40 71             	r0 = 20			  ## analog.c:3868:5
 1e15228:    8f f3 13 78       	call 2027558 <delay : 4252 >			  ## analog.c:3868:5
 1e1522c:    00 f9 03 e0       	r0 = b[r14 + 3] (u)			  ## analog.c:3868:5
 1e15230:    c5 ff 00 b4 06 00 	r5 = 439296 <text_size+0x4E70C : 6b400 >			  ## analog.c:3868:5
 1e15236:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1523c:    12 08             	r2 = r1
 1e1523e:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3281:23
 1e15240:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3281:23
 1e15244:    a9 44             	[r2 + 40] = r1			  ## analog.c:3281:23
 1e15246:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3283:23
 1e15248:    51 b9             	r1 &= r4			  ## analog.c:3283:23
 1e1524a:    b9 44             	[r2 + 44] = r1			  ## analog.c:3283:23
 1e1524c:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3287:23
 1e1524e:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3287:29
 1e15252:    00 c6             	r0 = r0 << 24			  ## analog.c:3287:29
 1e15254:    50 b2             	r0 |= r1			  ## analog.c:3287:23
 1e15256:    a8 44             	[r2 + 40] = r0			  ## analog.c:3287:23
 1e15258:    b0 44             	r0 = [r2 + 44]			  ## analog.c:3289:23
 1e1525a:    50 ba             	r0 |= r5			  ## analog.c:3289:23
 1e1525c:    b8 44             	[r2 + 44] = r0			  ## analog.c:3289:23
 1e1525e:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3872:9
 1e15262:    8f f3 f6 77       	call 2027500 <delay : 4252 >			  ## analog.c:3872:9
 1e15266:    20 70             	r0 = 2			  ## analog.c:3873:13
 1e15268:    bf f3 c0 f6       	call -4736 <get_ldo_voltage : 1e13fec >			  ## analog.c:3873:13
 1e1526c:    01 f9 03 e0       	r1 = b[r14 + 3] (u)			  ## analog.c:3873:13
 1e15270:    08 ff 84 03 07 00 	if (r0 > 900) goto 14 <.GJTIE841_1_1_+0xBD8 : 1e15284 >			  ## analog.c:3873:13
 1e15276:    10 92             	r0 = r1 + 1			  ## analog.c:3876:35
 1e15278:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3876:35
 1e1527a:    10 f9 03 e0       	b[r14 + 3] = r0			  ## analog.c:3876:35
 1e1527e:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE841_1_1_+0xB8A : 1e15236 >			  ## analog.c:3876:35
 1e15282:    02 18             	goto 4 <.GJTIE841_1_1_+0xBDC : 1e15288 >			  ## analog.c:3876:35
 1e15284:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0xBE2 : 1e1528e >
 1e15288:    71 70             	r1 = 7
 1e1528a:    11 f9 03 e0       	b[r14 + 3] = r1			  ## analog.c:3880:35
 1e1528e:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e15292:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e15296:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e1529a:    03 fd 08 29       	r3 = r2 | 8			  ## analog.c:3887:34
 1e1529e:    30 fd 08 29       	r0 = r2 & 4294967287			  ## analog.c:3884:34
 1e152a2:    64 fb 02 19       	r4 = 2 - r1			  ## analog.c:3883:86
 1e152a6:    02 08             	r2 = r0			  ## analog.c:3883:69
 1e152a8:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE841_1_1_+0xC02 : 1e152ae >			  ## analog.c:3883:69
 1e152ac:    32 08             	r2 = r3			  ## analog.c:3883:69
 1e152ae:    e1 8f             	r1 += -2			  ## analog.c:3883:36
 1e152b0:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xC0A : 1e152b6 >			  ## analog.c:3883:36
 1e152b4:    20 08             	r0 = r2			  ## analog.c:3883:69
 1e152b6:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3884:34
 1e152ba:    00 d2             	r0 = r0 >> 8			  ## analog.c:3884:34
 1e152bc:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3884:34
 1e152c0:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e152c6:    01 08             	r1 = r0
 1e152c8:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e152ca:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e152ce:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e152d0:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3228:27
 1e152d2:    b8 42             	[r1 + 44] = r0			  ## analog.c:3228:27
 1e152d4:    40 71             	r0 = 20			  ## analog.c:3898:5
 1e152d6:    8f f3 bc 77       	call 2027384 <delay : 4252 >			  ## analog.c:3898:5
 1e152da:    00 f9 04 e0       	r0 = b[r14 + 4] (u)			  ## analog.c:3898:5
 1e152de:    c4 ff e1 ff 1f ff 	r4 = 4280287201 <uECC_vli_cmp_unsafe+0x10F8FE5 : 11fffe1 >			  ## analog.c:3898:5
 1e152e4:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e152ea:    12 08             	r2 = r1
 1e152ec:    81 44             	r1 = [r2 + 32]			  ## analog.c:3332:22
 1e152ee:    51 b9             	r1 &= r4			  ## analog.c:3332:22
 1e152f0:    89 44             	[r2 + 32] = r1			  ## analog.c:3332:22
 1e152f2:    81 44             	r1 = [r2 + 32]			  ## analog.c:3337:22
 1e152f4:    80 c0             	r0 = r0 << 2			  ## analog.c:3338:25
 1e152f6:    20 fd 1c 09       	r0 = r0 & 28			  ## analog.c:3338:25
 1e152fa:    50 b2             	r0 |= r1			  ## analog.c:3337:22
 1e152fc:    00 fd 60 0b       	r0 = r0 | 6291456			  ## analog.c:3337:22
 1e15300:    88 44             	[r2 + 32] = r0			  ## analog.c:3337:22
 1e15302:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3902:9
 1e15306:    8f f3 a4 77       	call 2027336 <delay : 4252 >			  ## analog.c:3902:9
 1e1530a:    10 70             	r0 = 1			  ## analog.c:3903:13
 1e1530c:    bf f3 6e f6       	call -4900 <get_ldo_voltage : 1e13fec >			  ## analog.c:3903:13
 1e15310:    01 f9 04 e0       	r1 = b[r14 + 4] (u)			  ## analog.c:3903:13
 1e15314:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE841_1_1_+0xC7C : 1e15328 >			  ## analog.c:3903:13
 1e1531a:    10 92             	r0 = r1 + 1			  ## analog.c:3906:35
 1e1531c:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3906:35
 1e1531e:    10 f9 04 e0       	b[r14 + 4] = r0			  ## analog.c:3906:35
 1e15322:    81 e0 df 3f       	if (r1 < 8) goto -66 <.GJTIE841_1_1_+0xC38 : 1e152e4 >			  ## analog.c:3906:35
 1e15326:    02 18             	goto 4 <.GJTIE841_1_1_+0xC80 : 1e1532c >			  ## analog.c:3906:35
 1e15328:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0xC86 : 1e15332 >
 1e1532c:    71 70             	r1 = 7
 1e1532e:    11 f9 04 e0       	b[r14 + 4] = r1			  ## analog.c:3910:35
 1e15332:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e15336:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e1533a:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e1533e:    03 fd 10 29       	r3 = r2 | 16			  ## analog.c:3917:34
 1e15342:    30 fd 10 29       	r0 = r2 & 4294967279			  ## analog.c:3914:34
 1e15346:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:3913:84
 1e1534a:    02 08             	r2 = r0			  ## analog.c:3913:68
 1e1534c:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE841_1_1_+0xCA6 : 1e15352 >			  ## analog.c:3913:68
 1e15350:    32 08             	r2 = r3			  ## analog.c:3913:68
 1e15352:    d1 8f             	r1 += -3			  ## analog.c:3913:36
 1e15354:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xCAE : 1e1535a >			  ## analog.c:3913:36
 1e15358:    20 08             	r0 = r2			  ## analog.c:3913:68
 1e1535a:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3914:34
 1e1535e:    00 d2             	r0 = r0 >> 8			  ## analog.c:3914:34
 1e15360:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3914:34
 1e15364:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3914:34
 1e1536a:    1d f6 20 00       	[r0 + 32] = r13			  ## analog.c:3923:22
 1e1536e:    05 08             	r5 = r0			  ## analog.c:3923:22
 1e15370:    80 7c             	r0 = 200			  ## analog.c:3932:5
 1e15372:    8f f3 6e 77       	call 2027228 <delay : 4252 >			  ## analog.c:3932:5
 1e15376:    00 f9 05 e0       	r0 = b[r14 + 5] (u)			  ## analog.c:3932:5
 1e1537a:    ca ff e5 53 a7 44 	r10 = 1151816677 <uECC_vli_cmp_unsafe+0x96E3E9 : a753e5 >			  ## analog.c:3932:5
 1e15380:    c4 ff 00 3e 0d 02 	r4 = 34422272 <text_size+0xB710C : d3e00 >			  ## analog.c:3932:5
 1e15386:    c6 ff 05 16 6d 01 	r6 = 23926277 <uECC_vli_cmp_unsafe+0x15CA609 : 16d1605 >			  ## analog.c:3932:5
 1e1538c:    1a f6 00 50       	[r5 + 0] = r10			  ## analog.c:3350:22
 1e15390:    3c 4a             	[r5 + 12] = r4			  ## analog.c:3365:22
 1e15392:    40 c1             	r0 = r0 << 5			  ## analog.c:3380:25
 1e15394:    00 04             	r0 = r0.b0 (u)			  ## analog.c:3379:52
 1e15396:    50 bc             	r0 |= r6			  ## analog.c:3390:52
 1e15398:    48 4a             	[r5 + 16] = r0			  ## analog.c:3376:22
 1e1539a:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3936:9
 1e1539e:    8f f3 58 77       	call 2027184 <delay : 4252 >			  ## analog.c:3936:9
 1e153a2:    20 70             	r0 = 2			  ## analog.c:3937:13
 1e153a4:    bf f3 22 f6       	call -5052 <get_ldo_voltage : 1e13fec >			  ## analog.c:3937:13
 1e153a8:    01 f9 05 e0       	r1 = b[r14 + 5] (u)			  ## analog.c:3937:13
 1e153ac:    08 ff 4c 04 07 00 	if (r0 > 1100) goto 14 <.GJTIE841_1_1_+0xD14 : 1e153c0 >			  ## analog.c:3937:13
 1e153b2:    10 92             	r0 = r1 + 1			  ## analog.c:3940:36
 1e153b4:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3940:36
 1e153b6:    10 f9 05 e0       	b[r14 + 5] = r0			  ## analog.c:3940:36
 1e153ba:    81 e0 e7 3f       	if (r1 < 8) goto -50 <.GJTIE841_1_1_+0xCE0 : 1e1538c >			  ## analog.c:3940:36
 1e153be:    02 18             	goto 4 <.GJTIE841_1_1_+0xD18 : 1e153c4 >			  ## analog.c:3940:36
 1e153c0:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0xD1E : 1e153ca >
 1e153c4:    71 70             	r1 = 7
 1e153c6:    11 f9 05 e0       	b[r14 + 5] = r1			  ## analog.c:3944:36
 1e153ca:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e153ce:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e153d2:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e153d6:    03 fd 20 29       	r3 = r2 | 32			  ## analog.c:3951:35
 1e153da:    30 fd 20 29       	r0 = r2 & 4294967263			  ## analog.c:3948:35
 1e153de:    66 fb 04 19       	r6 = 4 - r1			  ## analog.c:3947:95
 1e153e2:    02 08             	r2 = r0			  ## analog.c:3947:74
 1e153e4:    16 e0 01 c0       	ifs (r6 > 1) goto 2 <.GJTIE841_1_1_+0xD3E : 1e153ea >			  ## analog.c:3947:74
 1e153e8:    32 08             	r2 = r3			  ## analog.c:3947:74
 1e153ea:    c1 8f             	r1 += -4			  ## analog.c:3947:37
 1e153ec:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xD46 : 1e153f2 >			  ## analog.c:3947:37
 1e153f0:    20 08             	r0 = r2			  ## analog.c:3947:74
 1e153f2:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3948:35
 1e153f6:    00 d2             	r0 = r0 >> 8			  ## analog.c:3948:35
 1e153f8:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3948:35
 1e153fc:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:3955:22
 1e15400:    18 f6 0c 50       	[r5 + 12] = r8			  ## analog.c:3956:22
 1e15404:    1c f6 10 50       	[r5 + 16] = r12			  ## analog.c:3957:22
 1e15408:    40 71             	r0 = 20			  ## analog.c:3966:5
 1e1540a:    8f f3 22 77       	call 2027076 <delay : 4252 >			  ## analog.c:3966:5
 1e1540e:    00 f9 06 e0       	r0 = b[r14 + 6] (u)			  ## analog.c:3966:5
 1e15412:    c6 ff a5 16 0d 01 	r6 = 17634981 <uECC_vli_cmp_unsafe+0xFCA6A9 : 10d16a5 >			  ## analog.c:3966:5
 1e15418:    1a f6 00 50       	[r5 + 0] = r10			  ## analog.c:3403:22
 1e1541c:    3c 4a             	[r5 + 12] = r4			  ## analog.c:3418:22
 1e1541e:    80 c5             	r0 = r0 << 22			  ## analog.c:3443:26
 1e15420:    20 fd c0 0b       	r0 = r0 & 12582912			  ## analog.c:3443:26
 1e15424:    50 bc             	r0 |= r6			  ## analog.c:3443:55
 1e15426:    48 4a             	[r5 + 16] = r0			  ## analog.c:3429:22
 1e15428:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3970:9
 1e1542c:    8f f3 11 77       	call 2027042 <delay : 4252 >			  ## analog.c:3970:9
 1e15430:    20 70             	r0 = 2			  ## analog.c:3971:13
 1e15432:    bf f3 db f5       	call -5194 <get_ldo_voltage : 1e13fec >			  ## analog.c:3971:13
 1e15436:    01 f9 06 e0       	r1 = b[r14 + 6] (u)			  ## analog.c:3971:13
 1e1543a:    08 ff 52 03 07 00 	if (r0 > 850) goto 14 <.GJTIE841_1_1_+0xDA2 : 1e1544e >			  ## analog.c:3971:13
 1e15440:    10 92             	r0 = r1 + 1			  ## analog.c:3974:36
 1e15442:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3974:36
 1e15444:    10 f9 06 e0       	b[r14 + 6] = r0			  ## analog.c:3974:36
 1e15448:    41 e0 e6 3f       	if (r1 < 4) goto -52 <.GJTIE841_1_1_+0xD6C : 1e15418 >			  ## analog.c:3974:36
 1e1544c:    02 18             	goto 4 <.GJTIE841_1_1_+0xDA6 : 1e15452 >			  ## analog.c:3974:36
 1e1544e:    41 e0 03 30       	if (r1 < 4) goto 6 <.GJTIE841_1_1_+0xDAC : 1e15458 >
 1e15452:    31 70             	r1 = 3
 1e15454:    11 f9 06 e0       	b[r14 + 6] = r1			  ## analog.c:3978:36
 1e15458:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e1545c:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e15460:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)
 1e15464:    c0 ff bf ff 00 00 	r0 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## analog.c:3982:35
 1e1546a:    50 b5             	r0 &= r2			  ## analog.c:3982:35
 1e1546c:    12 b3             	r2 |= 64			  ## analog.c:3985:35
 1e1546e:    f1 8f             	r1 += -1			  ## analog.c:3981:37
 1e15470:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xDCA : 1e15476 >			  ## analog.c:3981:37
 1e15474:    20 08             	r0 = r2			  ## analog.c:3981:74
 1e15476:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3982:35
 1e1547a:    00 d2             	r0 = r0 >> 8			  ## analog.c:3982:35
 1e1547c:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3982:35
 1e15480:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:3989:22
 1e15484:    18 f6 0c 50       	[r5 + 12] = r8			  ## analog.c:3990:22
 1e15488:    1c f6 10 50       	[r5 + 16] = r12			  ## analog.c:3991:22
 1e1548c:    40 71             	r0 = 20			  ## analog.c:4000:5
 1e1548e:    8f f3 e0 76       	call 2026944 <delay : 4252 >			  ## analog.c:4000:5
 1e15492:    00 f9 07 e0       	r0 = b[r14 + 7] (u)			  ## analog.c:4000:5
 1e15496:    c4 ff 96 18 1a 00 	r4 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## analog.c:4000:5
 1e1549c:    a8 fc 00 80       	r8 = r10 + -32768			  ## analog.c:4000:5
 1e154a0:    ca ff 9b c5 d0 08 	r10 = 147899803 <uECC_vli_cmp_unsafe+0xC0559F : d0c59b >			  ## analog.c:4000:5
 1e154a6:    c6 ff 5a 13 e6 ff 	r6 = 4293268314 <bank_code_load_addr+0x42746 : 1e6135a >			  ## analog.c:4000:5
 1e154ac:    01 68             	r1 = b[r4 + 0] (u)			  ## analog.c:3455:5
 1e154ae:    21 fd f8 19       	r1 = r1 & 248			  ## analog.c:3455:5
 1e154b2:    11 b1             	r1 |= 4			  ## analog.c:3455:5
 1e154b4:    09 68             	b[r4 + 0] = r1			  ## analog.c:3455:5
 1e154b6:    18 f6 00 50       	[r5 + 0] = r8			  ## analog.c:3457:22
 1e154ba:    1a f6 14 50       	[r5 + 20] = r10			  ## analog.c:3472:23
 1e154be:    80 c3             	r0 = r0 << 14			  ## analog.c:3500:25
 1e154c0:    20 fd 60 02       	r0 = r0 & 114688			  ## analog.c:3500:25
 1e154c4:    50 bc             	r0 |= r6			  ## analog.c:3504:52
 1e154c6:    68 4a             	[r5 + 24] = r0			  ## analog.c:3495:22
 1e154c8:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:4004:9
 1e154cc:    8f f3 c1 76       	call 2026882 <delay : 4252 >			  ## analog.c:4004:9
 1e154d0:    20 70             	r0 = 2			  ## analog.c:4005:13
 1e154d2:    bf f3 8b f5       	call -5354 <get_ldo_voltage : 1e13fec >			  ## analog.c:4005:13
 1e154d6:    01 f9 07 e0       	r1 = b[r14 + 7] (u)			  ## analog.c:4005:13
 1e154da:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE841_1_1_+0xE42 : 1e154ee >			  ## analog.c:4005:13
 1e154e0:    10 92             	r0 = r1 + 1			  ## analog.c:4008:35
 1e154e2:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4008:35
 1e154e4:    10 f9 07 e0       	b[r14 + 7] = r0			  ## analog.c:4008:35
 1e154e8:    81 e0 e0 3f       	if (r1 < 8) goto -64 <.GJTIE841_1_1_+0xE00 : 1e154ac >			  ## analog.c:4008:35
 1e154ec:    02 18             	goto 4 <.GJTIE841_1_1_+0xE46 : 1e154f2 >			  ## analog.c:4008:35
 1e154ee:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0xE4C : 1e154f8 >
 1e154f2:    71 70             	r1 = 7
 1e154f4:    11 f9 07 e0       	b[r14 + 7] = r1			  ## analog.c:4012:35
 1e154f8:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e154fc:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e15500:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e15504:    03 fd 80 29       	r3 = r2 | 128			  ## analog.c:4019:34
 1e15508:    30 fd 80 29       	r0 = r2 & 4294967167			  ## analog.c:4016:34
 1e1550c:    66 fb 03 19       	r6 = 3 - r1			  ## analog.c:4015:92
 1e15510:    02 08             	r2 = r0			  ## analog.c:4015:72
 1e15512:    16 e0 01 c0       	ifs (r6 > 1) goto 2 <.GJTIE841_1_1_+0xE6C : 1e15518 >			  ## analog.c:4015:72
 1e15516:    32 08             	r2 = r3			  ## analog.c:4015:72
 1e15518:    d1 8f             	r1 += -3			  ## analog.c:4015:36
 1e1551a:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xE74 : 1e15520 >			  ## analog.c:4015:36
 1e1551e:    20 08             	r0 = r2			  ## analog.c:4015:72
 1e15520:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:4016:34
 1e15524:    00 d2             	r0 = r0 >> 8			  ## analog.c:4016:34
 1e15526:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:4016:34
 1e1552a:    00 68             	r0 = b[r4 + 0] (u)			  ## analog.c:4023:5
 1e1552c:    20 fd f8 09       	r0 = r0 & 248			  ## analog.c:4023:5
 1e15530:    00 fd 03 09       	r0 = r0 | 3			  ## analog.c:4023:5
 1e15534:    08 68             	b[r4 + 0] = r0			  ## analog.c:4023:5
 1e15536:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:4024:22
 1e1553a:    20 02             	r0 = [sp+8]			  ## analog.c:4025:22
 1e1553c:    58 4a             	[r5 + 20] = r0			  ## analog.c:4025:22
 1e1553e:    1f f6 18 50       	[r5 + 24] = r15			  ## analog.c:4026:22
 1e15542:    40 71             	r0 = 20			  ## analog.c:4035:5
 1e15544:    8f f3 85 76       	call 2026762 <delay : 4252 >			  ## analog.c:4035:5
 1e15548:    00 f9 09 e0       	r0 = b[r14 + 9] (u)			  ## analog.c:4035:5
 1e1554c:    c4 ff e5 d2 0f 49 	r4 = 1225773797 <uECC_vli_cmp_unsafe+0xFF62E9 : 10fd2e5 >			  ## analog.c:4035:5
 1e15552:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3522:24
 1e15556:    41 08             	r1 = r4			  ## analog.c:3524:51
 1e15558:    c3 fd a8 10       	r1 <= insert(r0, p:21, l:3)			  ## analog.c:3524:51
 1e1555c:    09 4a             	[r5 + 0] = r1			  ## analog.c:3512:22
 1e1555e:    01 f4 40 5b       	[r5 + 4] |= 4194304			  ## analog.c:3527:22
 1e15562:    02 f4 01 59       	[r5 + 8] |= 1			  ## analog.c:3529:22
 1e15566:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:4039:9
 1e1556a:    8f f3 72 76       	call 2026724 <delay : 4252 >			  ## analog.c:4039:9
 1e1556e:    20 70             	r0 = 2			  ## analog.c:4040:13
 1e15570:    bf f3 3c f5       	call -5512 <get_ldo_voltage : 1e13fec >			  ## analog.c:4040:13
 1e15574:    01 f9 09 e0       	r1 = b[r14 + 9] (u)			  ## analog.c:4040:13
 1e15578:    08 ff 4c 04 07 00 	if (r0 > 1100) goto 14 <.GJTIE841_1_1_+0xEE0 : 1e1558c >			  ## analog.c:4040:13
 1e1557e:    10 92             	r0 = r1 + 1			  ## analog.c:4043:33
 1e15580:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4043:33
 1e15582:    10 f9 09 e0       	b[r14 + 9] = r0			  ## analog.c:4043:33
 1e15586:    81 e0 e4 3f       	if (r1 < 8) goto -56 <.GJTIE841_1_1_+0xEA6 : 1e15552 >			  ## analog.c:4043:33
 1e1558a:    02 18             	goto 4 <.GJTIE841_1_1_+0xEE4 : 1e15590 >			  ## analog.c:4043:33
 1e1558c:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE841_1_1_+0xEEA : 1e15596 >
 1e15590:    71 70             	r1 = 7
 1e15592:    11 f9 09 e0       	b[r14 + 9] = r1			  ## analog.c:4047:33
 1e15596:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e1559a:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e1559e:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e155a2:    03 fd 02 2a       	r3 = r2 | 512			  ## analog.c:4054:32
 1e155a6:    30 fd 02 2a       	r0 = r2 & 4294966783			  ## analog.c:4051:32
 1e155aa:    64 fb 04 19       	r4 = 4 - r1			  ## analog.c:4050:86
 1e155ae:    02 08             	r2 = r0			  ## analog.c:4050:68
 1e155b0:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE841_1_1_+0xF0A : 1e155b6 >			  ## analog.c:4050:68
 1e155b4:    32 08             	r2 = r3			  ## analog.c:4050:68
 1e155b6:    c1 8f             	r1 += -4			  ## analog.c:4050:34
 1e155b8:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE841_1_1_+0xF12 : 1e155be >			  ## analog.c:4050:34
 1e155bc:    20 08             	r0 = r2			  ## analog.c:4050:68
 1e155be:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:4051:32
 1e155c2:    00 d2             	r0 = r0 >> 8			  ## analog.c:4051:32
 1e155c4:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:4051:32
 1e155c8:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:4058:22
 1e155cc:    1b f6 04 50       	[r5 + 4] = r11			  ## analog.c:4059:22
 1e155d0:    30 02             	r0 = [sp+12]			  ## analog.c:4060:22
 1e155d2:    28 4a             	[r5 + 8] = r0			  ## analog.c:4060:22
 1e155d4:    00 4a             	r0 = [r5 + 0]			  ## analog.c:3180:5
 1e155d6:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3180:5
 1e155da:    08 4a             	[r5 + 0] = r0			  ## analog.c:3180:5
 1e155dc:    97 f3 dc 8b       	call 3086264 <local_irq_enable : 106d98 >			  ## analog.c:4069:5
 1e155e0:    bf f3 9f f3       	call -6338 <bt_analog_part_init : 1e13d22 >			  ## analog.c:278:9
 1e155e4:    bf f3 02 f4       	call -6140 <reset_trim_info : 1e13dec >			  ## analog.c:281:9
 1e155e8:    0c f9 0c e0       	r12 = b[r14 + 12] (u)			  ## analog.c:3533:43
 1e155ec:    02 f9 0b e0       	r2 = b[r14 + 11] (u)			  ## analog.c:3533:43
 1e155f0:    08 f9 09 e0       	r8 = b[r14 + 9] (u)			  ## analog.c:3533:43
 1e155f4:    09 f9 07 e0       	r9 = b[r14 + 7] (u)			  ## analog.c:3533:43
 1e155f8:    0a f9 06 e0       	r10 = b[r14 + 6] (u)			  ## analog.c:3533:43
 1e155fc:    0b f9 05 e0       	r11 = b[r14 + 5] (u)			  ## analog.c:3533:43
 1e15600:    0d f9 04 e0       	r13 = b[r14 + 4] (u)			  ## analog.c:3533:43
 1e15604:    0f f9 03 e0       	r15 = b[r14 + 3] (u)			  ## analog.c:3533:43
 1e15608:    04 f9 02 e0       	r4 = b[r14 + 2] (u)			  ## analog.c:3533:43
 1e1560c:    05 f9 01 e0       	r5 = b[r14 + 1] (u)			  ## analog.c:3533:43
 1e15610:    01 f9 00 e0       	r1 = b[r14 + 0] (u)			  ## analog.c:3533:43
 1e15614:    40 71             	r0 = 20			  ## analog.c:3566:5
 1e15616:    8f f3 1c 76       	call 2026552 <delay : 4252 >			  ## analog.c:3566:5
 1e1561a:    10 70             	r0 = 1			  ## analog.c:3566:5
 1e1561c:    13 70             	r3 = 1			  ## analog.c:3537:31
 1e1561e:    01 22             	if (r1 == 0) goto 2 <.GJTIE841_1_1_+0xF76 : 1e15622 >			  ## analog.c:3537:31
 1e15620:    03 70             	r3 = 0			  ## analog.c:3537:31
 1e15622:    26 70             	r6 = 2
 1e15624:    01 22             	if (r1 == 0) goto 2 <.GJTIE841_1_1_+0xF7C : 1e15628 >
 1e15626:    16 70             	r6 = 1			  ## analog.c:3541:18
 1e15628:    01 2a             	if (r5 == 0) goto 2 <.GJTIE841_1_1_+0xF80 : 1e1562c >
 1e1562a:    36 08             	r6 = r3			  ## analog.c:3540:9
 1e1562c:    13 70             	r3 = 1			  ## analog.c:3533:43
 1e1562e:    01 28             	if (r4 == 0) goto 2 <.GJTIE841_1_1_+0xF86 : 1e15632 >			  ## analog.c:3533:43
 1e15630:    03 70             	r3 = 0			  ## analog.c:3533:43
 1e15632:    63 09             	r3 += r6			  ## analog.c:3543:9
 1e15634:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e15636:    0f e0 01 00       	if (r15 == 0) goto 2 <.GJTIE841_1_1_+0xF90 : 1e1563c >			  ## analog.c:3533:43
 1e1563a:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e1563c:    63 09             	r3 += r6			  ## analog.c:3546:9
 1e1563e:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e15640:    0d e0 01 00       	if (r13 == 0) goto 2 <.GJTIE841_1_1_+0xF9A : 1e15646 >			  ## analog.c:3533:43
 1e15644:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e15646:    63 09             	r3 += r6			  ## analog.c:3549:9
 1e15648:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e1564a:    0b e0 01 00       	if (r11 == 0) goto 2 <.GJTIE841_1_1_+0xFA4 : 1e15650 >			  ## analog.c:3533:43
 1e1564e:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e15650:    63 09             	r3 += r6			  ## analog.c:3552:9
 1e15652:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e15654:    0a e0 01 00       	if (r10 == 0) goto 2 <.GJTIE841_1_1_+0xFAE : 1e1565a >			  ## analog.c:3533:43
 1e15658:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e1565a:    63 09             	r3 += r6			  ## analog.c:3555:9
 1e1565c:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e1565e:    09 e0 01 00       	if (r9 == 0) goto 2 <.GJTIE841_1_1_+0xFB8 : 1e15664 >			  ## analog.c:3533:43
 1e15662:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e15664:    63 09             	r3 += r6			  ## analog.c:3558:9
 1e15666:    08 e0 01 00       	if (r8 == 0) goto 2 <.GJTIE841_1_1_+0xFC0 : 1e1566c >			  ## analog.c:3558:9
 1e1566a:    00 70             	r0 = 0			  ## analog.c:3533:43
 1e1566c:    30 09             	r0 += r3			  ## analog.c:3561:9
 1e1566e:    20 e0 89 80       	if (r0 > 2) goto 274 <.GJTIE841_1_1_+0x10D8 : 1e15784 >			  ## analog.c:3561:9
 1e15672:    c8 fd 40 2c       	r2 <= insert(r12, p:8, l:8)			  ## analog.c:3533:43
 1e15676:    00 f3 0e 20       	if ((r2 & 1) == 0) goto 28 <.GJTIE841_1_1_+0xFEA : 1e15696 >			  ## analog.c:3533:43
 1e1567a:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e15680:    03 08             	r3 = r0
 1e15682:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3585:31
 1e15684:    30 fd 1c 0a       	r0 = r0 & 4294960127			  ## analog.c:3585:31
 1e15688:    b8 46             	[r3 + 44] = r0			  ## analog.c:3585:31
 1e1568a:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3586:31
 1e1568c:    21 fd 07 19       	r1 = r1 & 7			  ## analog.c:3586:34
 1e15690:    89 c2             	r1 = r1 << 10			  ## analog.c:3586:34
 1e15692:    50 b2             	r0 |= r1			  ## analog.c:3586:31
 1e15694:    b8 46             	[r3 + 44] = r0			  ## analog.c:3586:31
 1e15696:    01 f3 0e 20       	if ((r2 & 2) == 0) goto 28 <.GJTIE841_1_1_+0x100A : 1e156b6 >
 1e1569a:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e156a0:    03 08             	r3 = r0
 1e156a2:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3596:31
 1e156a4:    30 fd e0 0a       	r0 = r0 & 4294909951			  ## analog.c:3596:31
 1e156a8:    b8 46             	[r3 + 44] = r0			  ## analog.c:3596:31
 1e156aa:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3597:31
 1e156ac:    21 fd 07 59       	r1 = r5 & 7			  ## analog.c:3597:34
 1e156b0:    49 c3             	r1 = r1 << 13			  ## analog.c:3597:34
 1e156b2:    50 b2             	r0 |= r1			  ## analog.c:3597:31
 1e156b4:    b8 46             	[r3 + 44] = r0			  ## analog.c:3597:31
 1e156b6:    02 f3 0e 20       	if ((r2 & 4) == 0) goto 28 <.GJTIE841_1_1_+0x102A : 1e156d6 >
 1e156ba:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e156c0:    03 08             	r3 = r0
 1e156c2:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3607:31
 1e156c4:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3607:31
 1e156c8:    b8 46             	[r3 + 44] = r0			  ## analog.c:3607:31
 1e156ca:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3608:31
 1e156cc:    21 fd 07 49       	r1 = r4 & 7			  ## analog.c:3608:34
 1e156d0:    09 c4             	r1 = r1 << 16			  ## analog.c:3608:34
 1e156d2:    50 b2             	r0 |= r1			  ## analog.c:3608:31
 1e156d4:    b8 46             	[r3 + 44] = r0			  ## analog.c:3608:31
 1e156d6:    03 f3 0e 20       	if ((r2 & 8) == 0) goto 28 <.GJTIE841_1_1_+0x104A : 1e156f6 >
 1e156da:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e156e0:    03 08             	r3 = r0
 1e156e2:    a0 46             	r0 = [r3 + 40]			  ## analog.c:3618:31
 1e156e4:    30 fd 07 0c       	r0 = r0 & 4177526783			  ## analog.c:3618:31
 1e156e8:    a8 46             	[r3 + 40] = r0			  ## analog.c:3618:31
 1e156ea:    a0 46             	r0 = [r3 + 40]			  ## analog.c:3619:31
 1e156ec:    21 fd 07 f9       	r1 = r15 & 7			  ## analog.c:3619:34
 1e156f0:    09 c6             	r1 = r1 << 24			  ## analog.c:3619:34
 1e156f2:    50 b2             	r0 |= r1			  ## analog.c:3619:31
 1e156f4:    a8 46             	[r3 + 40] = r0			  ## analog.c:3619:31
 1e156f6:    04 f3 0f 20       	if ((r2 & 16) == 0) goto 30 <.GJTIE841_1_1_+0x106C : 1e15718 >
 1e156fa:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e15700:    03 08             	r3 = r0
 1e15702:    80 46             	r0 = [r3 + 32]			  ## analog.c:3629:30
 1e15704:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## analog.c:3629:30
 1e15708:    88 46             	[r3 + 32] = r0			  ## analog.c:3629:30
 1e1570a:    80 46             	r0 = [r3 + 32]			  ## analog.c:3630:30
 1e1570c:    f0 fd 10 1d       	r1 = r13 << 2			  ## analog.c:3630:33
 1e15710:    21 fd 1c 19       	r1 = r1 & 28			  ## analog.c:3630:33
 1e15714:    50 b2             	r0 |= r1			  ## analog.c:3630:30
 1e15716:    88 46             	[r3 + 32] = r0			  ## analog.c:3630:30
 1e15718:    c3 ff 00 19 1e 00 	r3 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1571e:    05 f3 0a 20       	if ((r2 & 32) == 0) goto 20 <.GJTIE841_1_1_+0x108A : 1e15736 >
 1e15722:    40 46             	r0 = [r3 + 16]			  ## analog.c:3640:30
 1e15724:    30 fd e0 09       	r0 = r0 & 4294967071			  ## analog.c:3640:30
 1e15728:    48 46             	[r3 + 16] = r0			  ## analog.c:3640:30
 1e1572a:    40 46             	r0 = [r3 + 16]			  ## analog.c:3641:30
 1e1572c:    f0 fd 28 1b       	r1 = r11 << 5			  ## analog.c:3641:33
 1e15730:    41 04             	r1 = r1.b0 (u)			  ## analog.c:3641:33
 1e15732:    50 b2             	r0 |= r1			  ## analog.c:3641:30
 1e15734:    48 46             	[r3 + 16] = r0			  ## analog.c:3641:30
 1e15736:    06 f3 0a 20       	if ((r2 & 64) == 0) goto 20 <.GJTIE841_1_1_+0x10A2 : 1e1574e >
 1e1573a:    40 46             	r0 = [r3 + 16]			  ## analog.c:3651:30
 1e1573c:    30 fd c0 0b       	r0 = r0 & 4282384383			  ## analog.c:3651:30
 1e15740:    48 46             	[r3 + 16] = r0			  ## analog.c:3651:30
 1e15742:    40 46             	r0 = [r3 + 16]			  ## analog.c:3652:30
 1e15744:    21 fd 03 a9       	r1 = r10 & 3			  ## analog.c:3652:33
 1e15748:    89 c5             	r1 = r1 << 22			  ## analog.c:3652:33
 1e1574a:    50 b2             	r0 |= r1			  ## analog.c:3652:30
 1e1574c:    48 46             	[r3 + 16] = r0			  ## analog.c:3652:30
 1e1574e:    90 04             	r0 = r2.b0 (s)			  ## analog.c:3660:13
 1e15750:    f0 ef 0a c0       	ifs (r0 > -1) goto 20 <.GJTIE841_1_1_+0x10BC : 1e15768 >			  ## analog.c:3660:13
 1e15754:    60 46             	r0 = [r3 + 24]			  ## analog.c:3662:30
 1e15756:    30 fd 60 02       	r0 = r0 & 4294852607			  ## analog.c:3662:30
 1e1575a:    68 46             	[r3 + 24] = r0			  ## analog.c:3662:30
 1e1575c:    60 46             	r0 = [r3 + 24]			  ## analog.c:3663:30
 1e1575e:    21 fd 07 99       	r1 = r9 & 7			  ## analog.c:3663:33
 1e15762:    89 c3             	r1 = r1 << 14			  ## analog.c:3663:33
 1e15764:    50 b2             	r0 |= r1			  ## analog.c:3663:30
 1e15766:    68 46             	[r3 + 24] = r0			  ## analog.c:3663:30
 1e15768:    09 f3 0c 20       	if ((r2 & 512) == 0) goto 24 <.GJTIE841_1_1_+0x10D8 : 1e15784 >
 1e1576c:    30 08             	r0 = r3
 1e1576e:    02 08             	r2 = r0
 1e15770:    00 44             	r0 = [r2 + 0]			  ## analog.c:3674:30
 1e15772:    30 fd e0 0b       	r0 = r0 & 4280287231			  ## analog.c:3674:30
 1e15776:    08 44             	[r2 + 0] = r0			  ## analog.c:3674:30
 1e15778:    00 44             	r0 = [r2 + 0]			  ## analog.c:3675:30
 1e1577a:    21 fd 07 89       	r1 = r8 & 7			  ## analog.c:3675:33
 1e1577e:    49 c5             	r1 = r1 << 21			  ## analog.c:3675:33
 1e15780:    50 b2             	r0 |= r1			  ## analog.c:3675:30
 1e15782:    08 44             	[r2 + 0] = r0			  ## analog.c:3675:30
 1e15784:    14 a1             	r4 = sp + 17
 1e15786:    62 71             	r2 = 22			  ## analog.c:285:9
 1e15788:    40 08             	r0 = r4			  ## analog.c:285:9
 1e1578a:    c1 ff fc 2c 00 00 	r1 = 11516 <tws_bulk_pool_end : 2cfc >			  ## analog.c:285:9
 1e15790:    97 f3 a8 8b       	call 3086160 <memcpy : 106ee4 >			  ## analog.c:285:9
 1e15794:    60 99             	r0 = r4 + 22			  ## analog.c:286:31
 1e15796:    d2 70             	r2 = 13			  ## analog.c:286:9
 1e15798:    e1 08             	r1 = r14			  ## analog.c:286:9
 1e1579a:    97 f3 a3 8b       	call 3086150 <memcpy : 106ee4 >			  ## analog.c:286:9
 1e1579e:    d0 75             	r0 = 93			  ## analog.c:287:9
 1e157a0:    32 72             	r2 = 35			  ## analog.c:287:9
 1e157a2:    41 08             	r1 = r4			  ## analog.c:287:9
 1e157a4:    bf f3 46 cb       	call -26996 <syscfg_write : 1e0ee34 >			  ## analog.c:287:9
 1e157a8:    cc ff f4 09 00 00 	r12 = 2548 <system_data_end : 9f4 >			  ## analog.c:287:9
 1e157ae:    cd ff 00 19 1e 00 	r13 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:287:9
 1e157b4:    15 f4 80 d9       	[r13 + 84] |= 128			  ## analog.c:1446:23
 1e157b8:    00 f6 00 d0       	r0 = [r13 + 0]			  ## analog.c:1448:22
 1e157bc:    c1 ff 21 00 0c 00 	r1 = 786465 <text_size+0xA332D : c0021 >			  ## analog.c:1448:22
 1e157c2:    50 b2             	r0 |= r1			  ## analog.c:1448:22
 1e157c4:    10 f6 00 d0       	[r13 + 0] = r0			  ## analog.c:1448:22
 1e157c8:    01 f4 40 db       	[r13 + 4] |= 4194304			  ## analog.c:1453:22
 1e157cc:    00 f6 04 d0       	r0 = [r13 + 4]			  ## analog.c:1455:22
 1e157d0:    f0 b5             	r0 &= 4294965247			  ## analog.c:1455:22
 1e157d2:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1455:22
 1e157d6:    02 70             	r2 = 0
 1e157d8:    01 70             	r1 = 0
 1e157da:    00 70             	r0 = 0
 1e157dc:    03 f6 04 d0       	r3 = [r13 + 4]			  ## analog.c:1458:26
 1e157e0:    33 fd 1e 3c       	r3 = r3 & 3791650815			  ## analog.c:1458:26
 1e157e4:    13 f6 04 d0       	[r13 + 4] = r3			  ## analog.c:1458:26
 1e157e8:    03 f6 04 d0       	r3 = [r13 + 4]			  ## analog.c:1459:26
 1e157ec:    04 08             	r4 = r0			  ## analog.c:1459:26
 1e157ee:    e0 fd 20 03       	r0 = r3 | r2			  ## analog.c:1459:26
 1e157f2:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1459:26
 1e157f6:    00 fb 58 02       	r0 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## analog.c:1460:9
 1e157fa:    8f f3 2a 75       	call 2026068 <delay : 4252 >			  ## analog.c:1460:9
 1e157fe:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:1461:25
 1e15802:    00 fb 58 02       	r0 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## analog.c:1462:9
 1e15806:    8f f3 24 75       	call 2026056 <delay : 4252 >			  ## analog.c:1462:9
 1e1580a:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:1463:25
 1e1580e:    00 fb 58 02       	r0 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## analog.c:1464:9
 1e15812:    8f f3 1e 75       	call 2026044 <delay : 4252 >			  ## analog.c:1464:9
 1e15816:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:1465:25
 1e1581a:    81 fd 18 00       	r0 = uextra(r0, p:3, l:1)			  ## analog.c:1465:16
 1e1581e:    60 ff ff 49 01 00 	if ((r4 & 255) == 0) goto 2 <.GJTIE841_1_1_+0x117A : 1e15826 >			  ## analog.c:1465:16
 1e15824:    06 20             	if (r0 == 0) goto 12 <.GJTIE841_1_1_+0x1186 : 1e15832 >
 1e15826:    11 80             	r1 += 1			  ## analog.c:1457:26
 1e15828:    42 fb 02 2c       	r2 = r2 + 33554432			  ## analog.c:1457:19
 1e1582c:    01 e1 d6 3f       	if (r1 < 16) goto -84 <.GJTIE841_1_1_+0x1130 : 1e157dc >			  ## analog.c:1457:19
 1e15830:    0d 18             	goto 26 <.GJTIE841_1_1_+0x11A0 : 1e1584c >			  ## analog.c:1457:19
 1e15832:    00 f6 04 d0       	r0 = [r13 + 4]			  ## analog.c:1469:30
 1e15836:    30 fd 1e 0c       	r0 = r0 & 3791650815			  ## analog.c:1469:30
 1e1583a:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1469:30
 1e1583e:    00 f6 04 d0       	r0 = [r13 + 4]			  ## analog.c:1470:30
 1e15842:    50 b4             	r0 |= r2			  ## analog.c:1470:30
 1e15844:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1470:30
 1e15848:    01 f4 08 da       	[r13 + 4] |= 2048			  ## analog.c:1471:30
 1e1584c:    10 fc ff ff       	r0 = r1 + -1			  ## analog.c:1477:18
 1e15850:    01 04             	r1 = r0.b0 (u)			  ## analog.c:1477:18
 1e15852:    04 70             	r4 = 0			  ## analog.c:1477:18
 1e15854:    10 70             	r0 = 1			  ## analog.c:1477:18
 1e15856:    91 e0 01 30       	if (r1 < 9) goto 2 <.GJTIE841_1_1_+0x11B0 : 1e1585c >			  ## analog.c:1477:18
 1e1585a:    00 70             	r0 = 0			  ## analog.c:1477:18
 1e1585c:    c5 ff 12 2d 00 00 	r5 = 11538 <lnav_flag : 2d12 >
 1e15862:    08 6a             	b[r5 + 0] = r0
 1e15864:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:1896:23
 1e15868:    70 b7             	r0 &= 4294950911			  ## analog.c:1896:23
 1e1586a:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:1896:23
 1e1586e:    c0 ff ee ff b5 fe 	r0 = 4273340398 <uECC_vli_cmp_unsafe+0xA58FF2 : b5ffee >			  ## analog.c:1896:23
 1e15874:    10 f6 50 d0       	[r13 + 80] = r0			  ## analog.c:1896:23
 1e15878:    c0 ff 61 90 ff 01 	r0 = 33525857 <bank_code_load_addr+0x1DA44D : 1ff9061 >			  ## analog.c:1896:23
 1e1587e:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:1896:23
 1e15882:    bf f3 fe f3       	call -6148 <bta_pll_config_init : 1e14082 >			  ## analog.c:2797:5
 1e15886:    c5 f4 b4 79       	[r7 + 20] = 180			  ## analog.c:2977:19
 1e1588a:    c1 ff 20 35 e1 01 	r1 = 31536416 <TXPWR_table : 1e13520 >			  ## analog.c:2977:19
 1e15890:    c2 ff 4c 35 e1 01 	r2 = 31536460 <TXSET_table : 1e1354c >			  ## analog.c:2977:19
 1e15896:    03 70             	r3 = 0			  ## analog.c:2977:19
 1e15898:    6c 4e             	[r7 + 24] = r4			  ## analog.c:2979:23
 1e1589a:    a0 70             	r0 = 10			  ## analog.c:2980:9
 1e1589c:    8f f3 d9 74       	call 2025906 <delay : 4252 >			  ## analog.c:2980:9
 1e158a0:    80 f6 00 31       	r0 = [r3+r1]			  ## analog.c:2980:9
 1e158a4:    68 4e             	[r7 + 24] = r0			  ## analog.c:2980:9
 1e158a6:    a0 70             	r0 = 10			  ## analog.c:2992:9
 1e158a8:    8f f3 d3 74       	call 2025894 <delay : 4252 >			  ## analog.c:2992:9
 1e158ac:    80 f6 00 32       	r0 = [r3+r2]			  ## analog.c:2993:25
 1e158b0:    68 4e             	[r7 + 24] = r0			  ## analog.c:2993:23
 1e158b2:    a0 70             	r0 = 10			  ## analog.c:2994:9
 1e158b4:    8f f3 cd 74       	call 2025882 <delay : 4252 >			  ## analog.c:2994:9
 1e158b8:    43 80             	r3 += 4			  ## analog.c:2978:19
 1e158ba:    c3 e2 ed 1f       	if (r3 != 44) goto -38 <.GJTIE841_1_1_+0x11EC : 1e15898 >			  ## analog.c:2978:5
 1e158be:    00 6a             	r0 = b[r5 + 0] (u)			  ## analog.c:2803:16
 1e158c0:    01 70             	r1 = 0			  ## analog.c:2803:5
 1e158c2:    bf f3 72 ef       	call -8476 <btagc_init : 1e137aa >			  ## analog.c:2803:5
 1e158c6:    15 f4 10 da       	[r13 + 84] |= 4096			  ## analog.c:2810:23
 1e158ca:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:2811:23
 1e158ce:    f0 b5             	r0 &= 4294965247			  ## analog.c:2811:23
 1e158d0:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:2811:23
 1e158d4:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:2812:23
 1e158d8:    f0 b6             	r0 &= 4294959103			  ## analog.c:2812:23
 1e158da:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:2812:23
 1e158de:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:2812:23
 1e158e2:    01 08             	r1 = r0			  ## analog.c:2812:23
 1e158e4:    40 43             	r0 = [r1 + 80]			  ## analog.c:2814:16
 1e158e6:    70 b3             	r0 &= 4294967231			  ## analog.c:2814:16
 1e158e8:    48 43             	[r1 + 80] = r0			  ## analog.c:2814:16
 1e158ea:    1f f4 40 19       	[r1 + 124] |= 64			  ## RF.c:361:5
 1e158ee:    10 70             	r0 = 1			  ## RF.c:448:14
 1e158f0:    10 f9 09 c0       	b[r12 + 9] = r0			  ## RF.c:448:14
 1e158f4:    9c 0a             	sp += 312			  ## RF.c:448:14
 1e158f6:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF.c:449:1


hci_transport_controller:
 1e158f8:    63 28             	if (r4 == 0) goto 198 <bredr_link_event+0x18 : 1e159c0 >
 1e158fa:    e1 01             	[--sp] = {psr, reti}
 1e158fc:    26 5c             	r6 = h[r6 + 4] (u)
 1e158fe:    e1 01             	[--sp] = {psr, reti}
 1e15900:    28 5c             	h[r6 + 4] = r0
 1e15902:    e1 01             	[--sp] = {psr, reti}
 1e15904:    2c 5c             	h[r6 + 4] = r4
 1e15906:    e1 01             	[--sp] = {psr, reti}
 1e15908:    30 5c             	r0 = h[r6 + 6] (u)
 1e1590a:    e1 01             	[--sp] = {psr, reti}
 1e1590c:    3a 5c             	h[r6 + 6] = r2
 1e1590e:    e1 01             	[--sp] = {psr, reti}
 1e15910:    3e 5c             	h[r6 + 6] = r6
 1e15912:    e1 01             	[--sp] = {psr, reti}
 1e15914:    00 00             	nop
 1e15916:    00 00             	nop
 1e15918:    00 00             	nop
 1e1591a:    00 00             	nop
 1e1591c:    00 00             	nop
 1e1591e:    00 00             	nop


btctrler_testbox_update_msg_handle_register:
 1e15920:    c0 ff f4 0d 00 00 	r0 = 3572 <bt_testbox_update_msg_handle : df4 >			  ## btctrler_task.c:85:0
 1e15926:    c1 ff 22 16 e0 01 	r1 = 31462946 <testbox_update_msg_handle : 1e01622 >			  ## btctrler_task.c:86:34
 1e1592c:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:86:34
 1e1592e:    20 00             	rts			  ## btctrler_task.c:87:1


btctrler_task_init:
 1e15930:    c0 ff 28 2d 00 00 	r0 = 11560 <h4_transport : 2d28 >			  ## btctrler_task.c:461:0
 1e15936:    c1 ff f8 58 e1 01 	r1 = 31545592 <hci_transport_controller : 1e158f8 >			  ## btctrler_task.c:469:20
 1e1593c:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:469:20
 1e1593e:    c0 ff a2 5b e1 01 	r0 = 31546274 <btctrler_task : 1e15ba2 >			  ## btctrler_task.c:473:5
 1e15944:    c2 ff 5a 28 e1 01 	r2 = 31533146 <update_target_end+0x262A : 1e1285a >			  ## btctrler_task.c:473:5
 1e1594a:    01 70             	r1 = 0			  ## btctrler_task.c:473:5
 1e1594c:    ff f3 fd c8       	goto -28166 <task_create : 1e0eb4a >			  ## btctrler_task.c:473:5


btctrler_task_ready:
 1e15950:    74 01             	[--sp] = {rets, r4}			  ## btctrler_task.c:350:0
 1e15952:    fe 0b             	sp += -4			  ## btctrler_task.c:350:0
 1e15954:    00 75             	r0 = 80			  ## btctrler_task.c:353:19
 1e15956:    bf f3 5c bf       	call -33096 <malloc : 1e0d812 >			  ## btctrler_task.c:353:19
 1e1595a:    02 08             	r2 = r0			  ## btctrler_task.c:353:19
 1e1595c:    0a 02             	[sp] = r2			  ## btctrler_task.c:353:13
 1e1595e:    02 34             	if (r2 != 0) goto 4 <btctrler_task_ready+0x14 : 1e15964 >			  ## btctrler_task.c:353:13
 1e15960:    8f f3 99 6d       	call 2022194 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e15964:    01 70             	r1 = 0			  ## btctrler_task.c:356:5
 1e15966:    20 08             	r0 = r2			  ## btctrler_task.c:356:5
 1e15968:    97 f3 4a 8a       	call 3085460 <os_sem_create : 106e00 >			  ## btctrler_task.c:356:5
 1e1596c:    c0 ff 5a 28 e1 01 	r0 = 31533146 <update_target_end+0x262A : 1e1285a >			  ## btctrler_task.c:358:11
 1e15972:    c1 ff 0c 00 40 00 	r1 = 4194316 <uECC_vli_cmp_unsafe+0x2F9010 : 40000c >			  ## btctrler_task.c:358:11
 1e15978:    03 a0             	r3 = sp + 0			  ## btctrler_task.c:358:11
 1e1597a:    12 70             	r2 = 1			  ## btctrler_task.c:358:11
 1e1597c:    14 70             	r4 = 1			  ## btctrler_task.c:358:11
 1e1597e:    97 f3 2f 8a       	call 3085406 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:358:11
 1e15982:    02 02             	r2 = [sp]			  ## btctrler_task.c:358:11
 1e15984:    05 20             	if (r0 == 0) goto 10 <btctrler_task_ready+0x40 : 1e15990 >
 1e15986:    20 08             	r0 = r2			  ## btctrler_task.c:364:5
 1e15988:    bf f3 48 bf       	call -33136 <free : 1e0d81c >			  ## btctrler_task.c:364:5
 1e1598c:    04 70             	r4 = 0
 1e1598e:    07 18             	goto 14 <btctrler_task_ready+0x4E : 1e1599e >
 1e15990:    01 70             	r1 = 0			  ## btctrler_task.c:360:9
 1e15992:    20 08             	r0 = r2			  ## btctrler_task.c:360:9
 1e15994:    97 f3 38 8a       	call 3085424 <os_sem_pend : 106e08 >			  ## btctrler_task.c:360:9
 1e15998:    00 02             	r0 = [sp]			  ## btctrler_task.c:361:14
 1e1599a:    bf f3 3f bf       	call -33154 <free : 1e0d81c >			  ## btctrler_task.c:361:9
 1e1599e:    40 08             	r0 = r4			  ## btctrler_task.c:366:1
 1e159a0:    02 0a             	sp += 4			  ## btctrler_task.c:366:1
 1e159a2:    54 01             	{pc, r4} = [sp++]			  ## btctrler_task.c:366:1


lmp_hci_cmd_to_conn_for_handle:
 1e159a4:    cf f3 77 6d       	goto 2022126 <p33_soft_reset : 3496 >			  ## btctrler_task.c:244:0


bredr_link_event:
 1e159a8:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:341:0
 1e159aa:    77 01             	[--sp] = {rets, r7-r4}			  ## btctrler_task.c:341:0
 1e159ac:    f4 0b             	sp += -24			  ## btctrler_task.c:341:0
 1e159ae:    c2 a2             	r2 = sp + 44			  ## btctrler_task.c:341:0
 1e159b0:    0a 02             	[sp] = r2			  ## btctrler_task.c:344:5
 1e159b2:    5a 02             	[sp+20] = r2
 1e159b4:    18 02             	[sp+4] = r0			  ## btctrler_task.c:313:13
 1e159b6:    14 92             	r4 = r1 + 1
 1e159b8:    11 e0 0a b0       	ifs (r1 < 1) goto 20 <bredr_link_event+0x28 : 1e159d0 >
 1e159bc:    40 a0             	r0 = sp + 4
 1e159be:    40 80             	r0 += 4			  ## btctrler_task.c:316:19
 1e159c0:    52 02             	r2 = [sp+20]			  ## btctrler_task.c:316:19
 1e159c2:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:316:19
 1e159c4:    5b 02             	[sp+20] = r3			  ## btctrler_task.c:316:19
 1e159c6:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:316:19
 1e159c8:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:316:17
 1e159cc:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <bredr_link_event+0x18 : 1e159c0 >			  ## btctrler_task.c:316:17
 1e159d0:    c5 ff 5a 28 e1 01 	r5 = 31533146 <update_target_end+0x262A : 1e1285a >
 1e159d6:    c1 ff 01 00 40 00 	r1 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >			  ## btctrler_task.c:321:15
 1e159dc:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:321:15
 1e159de:    50 08             	r0 = r5			  ## btctrler_task.c:321:15
 1e159e0:    42 08             	r2 = r4			  ## btctrler_task.c:321:15
 1e159e2:    97 f3 fd 89       	call 3085306 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:321:15
 1e159e6:    07 08             	r7 = r0			  ## btctrler_task.c:321:15
 1e159e8:    57 e1 22 10       	if (r7 != 21) goto 68 <bredr_link_event+0x88 : 1e15a30 >
 1e159ec:    c6 ff 01 00 40 00 	r6 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >
 1e159f2:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e159f6:    57 71             	r7 = 21
 1e159f8:    61 ff ff 09 19 00 	if ((r0 & 255) != 0) goto 50 <bredr_link_event+0x88 : 1e15a30 >
 1e159fe:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e15a02:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e15a06:    01 ff 00 03 12 00 	if (r0 != 768) goto 36 <bredr_link_event+0x88 : 1e15a30 >
 1e15a0c:    8f f3 38 6c       	call 2021488 <report_data_code_begin : 3280 >			  ## btctrler_task.c:329:21
 1e15a10:    51 08             	r1 = r5			  ## btctrler_task.c:329:14
 1e15a12:    97 f3 6f 8a       	call 3085534 <strcmp : 106ef4 >			  ## btctrler_task.c:329:14
 1e15a16:    0c 20             	if (r0 == 0) goto 24 <bredr_link_event+0x88 : 1e15a30 >			  ## btctrler_task.c:329:14
 1e15a18:    20 70             	r0 = 2			  ## btctrler_task.c:334:9
 1e15a1a:    97 f3 cd 89       	call 3085210 <os_time_dly : 106db8 >			  ## btctrler_task.c:334:9
 1e15a1e:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:334:9
 1e15a20:    50 08             	r0 = r5			  ## btctrler_task.c:321:15
 1e15a22:    61 08             	r1 = r6			  ## btctrler_task.c:321:15
 1e15a24:    42 08             	r2 = r4			  ## btctrler_task.c:321:15
 1e15a26:    97 f3 db 89       	call 3085238 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:321:15
 1e15a2a:    07 08             	r7 = r0			  ## btctrler_task.c:321:15
 1e15a2c:    57 e1 e1 0f       	if (r7 == 21) goto -62 <bredr_link_event+0x4A : 1e159f2 >
 1e15a30:    70 08             	r0 = r7			  ## btctrler_task.c:346:5
 1e15a32:    0c 0a             	sp += 24			  ## btctrler_task.c:346:5
 1e15a34:    17 01             	{rets, r7-r4} = [sp++]			  ## btctrler_task.c:346:5
 1e15a36:    04 0a             	sp += 8			  ## btctrler_task.c:346:5
 1e15a38:    20 00             	rts			  ## btctrler_task.c:346:5


lmp_hci_cmd_to_conn_for_addr:
 1e15a3a:    cf f3 2c 6d       	goto 2021976 <p33_soft_reset : 3496 >			  ## btctrler_task.c:227:0


le_hci_send_acl_packet:
 1e15a3e:    c2 ff 2c 2d 00 00 	r2 = 11564 <__h4_send_packet : 2d2c >			  ## hci_controller.c:338:0
 1e15a44:    03 44             	r3 = [r2 + 0]			  ## hci_controller.c:341:5
 1e15a46:    12 08             	r2 = r1			  ## hci_controller.c:341:5
 1e15a48:    01 08             	r1 = r0			  ## hci_controller.c:341:5
 1e15a4a:    20 70             	r0 = 2			  ## hci_controller.c:341:5
 1e15a4c:    93 00             	goto r3			  ## hci_controller.c:341:5


btctrler_hci_cmd_to_task:
 1e15a4e:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:277:0
 1e15a50:    76 01             	[--sp] = {rets, r6-r4}			  ## btctrler_task.c:277:0
 1e15a52:    de 0b             	sp += -68			  ## btctrler_task.c:277:0
 1e15a54:    14 08             	r4 = r1			  ## btctrler_task.c:277:0
 1e15a56:    05 08             	r5 = r0			  ## btctrler_task.c:277:0
 1e15a58:    04 e1 02 30       	if (r4 < 16) goto 4 <btctrler_hci_cmd_to_task+0x12 : 1e15a60 >			  ## btctrler_task.c:277:0
 1e15a5c:    8f f3 1b 6d       	call 2021942 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e15a60:    40 a5             	r0 = sp + 84
 1e15a62:    08 02             	[sp] = r0			  ## btctrler_task.c:285:5
 1e15a64:    14 e0 0a b0       	ifs (r4 < 1) goto 20 <btctrler_hci_cmd_to_task+0x2E : 1e15a7c >			  ## btctrler_task.c:285:5
 1e15a68:    40 a0             	r0 = sp + 4
 1e15a6a:    41 08             	r1 = r4
 1e15a6c:    02 02             	r2 = [sp]			  ## btctrler_task.c:287:19
 1e15a6e:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:287:19
 1e15a70:    0b 02             	[sp] = r3			  ## btctrler_task.c:287:19
 1e15a72:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:287:19
 1e15a74:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:287:17
 1e15a78:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <btctrler_hci_cmd_to_task+0x1E : 1e15a6c >			  ## btctrler_task.c:287:17
 1e15a7c:    c6 ff 5a 28 e1 01 	r6 = 31533146 <update_target_end+0x262A : 1e1285a >
 1e15a82:    0f 18             	goto 30 <btctrler_hci_cmd_to_task+0x54 : 1e15aa2 >
 1e15a84:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e15a88:    61 ff ff 09 12 00 	if ((r0 & 255) != 0) goto 36 <btctrler_hci_cmd_to_task+0x64 : 1e15ab2 >
 1e15a8e:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e15a92:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e15a96:    01 ff 00 03 0b 00 	if (r0 != 768) goto 22 <btctrler_hci_cmd_to_task+0x64 : 1e15ab2 >
 1e15a9c:    20 70             	r0 = 2			  ## btctrler_task.c:302:9
 1e15a9e:    97 f3 8b 89       	call 3085078 <os_time_dly : 106db8 >			  ## btctrler_task.c:302:9
 1e15aa2:    43 a0             	r3 = sp + 4
 1e15aa4:    60 08             	r0 = r6
 1e15aa6:    51 08             	r1 = r5
 1e15aa8:    42 08             	r2 = r4
 1e15aaa:    97 f3 99 89       	call 3085106 <os_taskq_post_type : 106de0 >
 1e15aae:    50 e1 e9 0f       	if (r0 == 21) goto -46 <btctrler_hci_cmd_to_task+0x36 : 1e15a84 >
 1e15ab2:    22 0a             	sp += 68
 1e15ab4:    16 01             	{rets, r6-r4} = [sp++]
 1e15ab6:    04 0a             	sp += 8
 1e15ab8:    20 00             	rts


hci_send_event:
 1e15aba:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:683:0
 1e15abc:    34 00             	[--sp] = rets			  ## hci_controller.c:683:0
 1e15abe:    7c 0b             	sp += -264			  ## hci_controller.c:683:0
 1e15ac0:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:687:15
 1e15ac4:    e2 fb 0c 01       	r2 = sp + 268			  ## hci_controller.c:687:15
 1e15ac8:    0a 02             	[sp] = r2			  ## hci_controller.c:689:5
 1e15aca:    40 a0             	r0 = sp + 4			  ## hci_controller.c:689:5
 1e15acc:    90 b0             	r0 |= 2			  ## hci_controller.c:690:29
 1e15ace:    bf f3 9a 7e       	call -66252 <__vsprintf : 1e05806 >			  ## hci_controller.c:690:17
 1e15ad2:    02 08             	r2 = r0			  ## hci_controller.c:690:17
 1e15ad4:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event+0x24 : 1e15ade >
 1e15ada:    8f f3 dc 6c       	call 2021816 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e15ade:    c0 ff 28 2d 00 00 	r0 = 11560 <h4_transport : 2d28 >			  ## hci_controller.c:651:9
 1e15ae4:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:651:9
 1e15ae6:    d2 f5 05 00       	b[sp+5] = r2			  ## hci_controller.c:692:16
 1e15aea:    08 20             	if (r0 == 0) goto 16 <hci_send_event+0x42 : 1e15afc >
 1e15aec:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:651:39
 1e15aee:    06 26             	if (r3 == 0) goto 12 <hci_send_event+0x42 : 1e15afc >			  ## hci_controller.c:651:39
 1e15af0:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:695:68
 1e15af4:    22 90             	r2 = r0 + 2			  ## hci_controller.c:695:66
 1e15af6:    41 a0             	r1 = sp + 4
 1e15af8:    40 70             	r0 = 4			  ## hci_controller.c:652:16
 1e15afa:    83 00             	call r3			  ## hci_controller.c:652:16
 1e15afc:    84 0a             	sp += 264
 1e15afe:    88 01             	{rets} = [sp++]
 1e15b00:    04 0a             	sp += 8
 1e15b02:    20 00             	rts


hci_controller_init:
 1e15b04:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:820:0
 1e15b06:    bf f3 f9 f2       	call -6670 <bt_rf_init : 1e140fc >			  ## hci_controller.c:826:5
 1e15b0a:    c4 ff 28 2d 00 00 	r4 = 11560 <h4_transport : 2d28 >			  ## hci_controller.c:826:5
 1e15b10:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:794:9
 1e15b12:    c1 ff f8 0d 00 00 	r1 = 3576 <bt_task_thread : df8 >			  ## list.h:189:16
 1e15b18:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e15b1a:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e15b1c:    0f 20             	if (r0 == 0) goto 30 <hci_controller_init+0x38 : 1e15b3c >			  ## list.h:189:16
 1e15b1e:    11 40             	r1 = [r0 + 4]			  ## hci_controller.c:798:23
 1e15b20:    03 22             	if (r1 == 0) goto 6 <hci_controller_init+0x24 : 1e15b28 >			  ## hci_controller.c:798:23
 1e15b22:    00 70             	r0 = 0			  ## hci_controller.c:799:9
 1e15b24:    81 00             	call r1			  ## hci_controller.c:799:9
 1e15b26:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:799:9
 1e15b28:    21 40             	r1 = [r0 + 8]			  ## hci_controller.c:802:23
 1e15b2a:    02 22             	if (r1 == 0) goto 4 <hci_controller_init+0x2C : 1e15b30 >			  ## hci_controller.c:802:23
 1e15b2c:    81 00             	call r1			  ## hci_controller.c:803:9
 1e15b2e:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:803:9
 1e15b30:    41 40             	r1 = [r0 + 16]			  ## hci_controller.c:806:23
 1e15b32:    04 22             	if (r1 == 0) goto 8 <hci_controller_init+0x38 : 1e15b3c >			  ## hci_controller.c:806:23
 1e15b34:    c0 ff 4c 5c e1 01 	r0 = 31546444 <hci_h4_download_data : 1e15c4c >			  ## hci_controller.c:807:9
 1e15b3a:    81 00             	call r1			  ## hci_controller.c:807:9
 1e15b3c:    14 01             	{rets, r4} = [sp++]			  ## hci_controller.c:888:9
 1e15b3e:    c0 f3 f6 20       	goto 16876 <ll_init : 1e19d2e >			  ## hci_controller.c:888:9


hci_send_event_cmd_complete:
 1e15b42:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:713:0
 1e15b44:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:713:0
 1e15b46:    7c 0b             	sp += -264			  ## hci_controller.c:713:0
 1e15b48:    04 08             	r4 = r0			  ## hci_controller.c:713:0
 1e15b4a:    e0 70             	r0 = 14			  ## hci_controller.c:717:15
 1e15b4c:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:717:15
 1e15b50:    e2 fb 10 01       	r2 = sp + 272			  ## hci_controller.c:717:15
 1e15b54:    0a 02             	[sp] = r2			  ## hci_controller.c:719:5
 1e15b56:    40 a0             	r0 = sp + 4			  ## hci_controller.c:719:5
 1e15b58:    50 80             	r0 += 5			  ## hci_controller.c:720:29
 1e15b5a:    bf f3 54 7e       	call -66392 <__vsprintf : 1e05806 >			  ## hci_controller.c:720:17
 1e15b5e:    02 08             	r2 = r0			  ## hci_controller.c:720:17
 1e15b60:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event_cmd_complete+0x28 : 1e15b6a >
 1e15b66:    8f f3 96 6c       	call 2021676 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e15b6a:    30 94             	r0 = r2 + 3			  ## hci_controller.c:722:20
 1e15b6c:    d0 f5 05 00       	b[sp+5] = r0			  ## hci_controller.c:722:16
 1e15b70:    11 70             	r1 = 1			  ## hci_controller.c:722:16
 1e15b72:    c0 ff 28 2d 00 00 	r0 = 11560 <h4_transport : 2d28 >			  ## hci_controller.c:651:9
 1e15b78:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:651:9
 1e15b7a:    d1 f5 06 00       	b[sp+6] = r1			  ## hci_controller.c:725:17
 1e15b7e:    d4 f5 07 00       	b[sp+7] = r4			  ## hci_controller.c:726:17
 1e15b82:    21 d2             	r1 = r4 >> 8			  ## hci_controller.c:727:26
 1e15b84:    d1 f5 08 00       	b[sp+8] = r1			  ## hci_controller.c:727:17
 1e15b88:    08 20             	if (r0 == 0) goto 16 <hci_send_event_cmd_complete+0x58 : 1e15b9a >
 1e15b8a:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:651:39
 1e15b8c:    06 26             	if (r3 == 0) goto 12 <hci_send_event_cmd_complete+0x58 : 1e15b9a >			  ## hci_controller.c:651:39
 1e15b8e:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:729:68
 1e15b92:    22 90             	r2 = r0 + 2			  ## hci_controller.c:729:66
 1e15b94:    41 a0             	r1 = sp + 4
 1e15b96:    40 70             	r0 = 4			  ## hci_controller.c:652:16
 1e15b98:    83 00             	call r3			  ## hci_controller.c:652:16
 1e15b9a:    84 0a             	sp += 264
 1e15b9c:    14 01             	{rets, r4} = [sp++]
 1e15b9e:    04 0a             	sp += 8
 1e15ba0:    20 00             	rts


btctrler_task:
 1e15ba2:    e4 0b             	sp += -56			  ## btctrler_task.c:90:0
 1e15ba4:    af 17             	call -162 <hci_controller_init : 1e15b04 >			  ## btctrler_task.c:93:5
 1e15ba6:    00 a0             	r0 = sp + 0			  ## btctrler_task.c:93:5
 1e15ba8:    48 90             	r8 = r0 + 4
 1e15baa:    c6 ff f8 ff bf ff 	r6 = 4290772984 <uECC_vli_cmp_unsafe+0x1AF8FFC : 1bffff8 >
 1e15bb0:    c7 ff f4 0d 00 00 	r7 = 3572 <bt_testbox_update_msg_handle : df4 >
 1e15bb6:    c5 ff f8 0d 00 00 	r5 = 3576 <bt_task_thread : df8 >
 1e15bbc:    c4 ff 0c 00 40 00 	r4 = 4194316 <uECC_vli_cmp_unsafe+0x2F9010 : 40000c >
 1e15bc2:    49 fc fa ff       	r9 = r4 + -6
 1e15bc6:    01 a0             	r1 = sp + 0
 1e15bc8:    00 70             	r0 = 0			  ## btctrler_task.c:96:19
 1e15bca:    e2 70             	r2 = 14			  ## btctrler_task.c:96:19
 1e15bcc:    97 f3 00 89       	call 3084800 <os_taskq_pend : 106dd0 >			  ## btctrler_task.c:96:19
 1e15bd0:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btctrler_task+0x24 : 1e15bc6 >			  ## btctrler_task.c:97:13
 1e15bd4:    00 02             	r0 = [sp]			  ## btctrler_task.c:101:17
 1e15bd6:    81 b1             	r1 = r0 + r6			  ## btctrler_task.c:101:9
 1e15bd8:    41 e0 05 20       	if (r1 >= 4) goto 10 <btctrler_task+0x44 : 1e15be6 >			  ## btctrler_task.c:101:9
 1e15bdc:    01 4e             	r1 = [r7 + 0]			  ## btctrler_task.c:160:17
 1e15bde:    0e 22             	if (r1 == 0) goto 28 <btctrler_task+0x5A : 1e15bfc >			  ## btctrler_task.c:160:17
 1e15be0:    bf f3 1f 5d       	call -83394 <testbox_update_msg_handle : 1e01622 >			  ## btctrler_task.c:161:17
 1e15be4:    0b 18             	goto 22 <btctrler_task+0x5A : 1e15bfc >			  ## btctrler_task.c:161:17
 1e15be6:    40 f2 06 00       	if (r0 == r4) goto 12 <btctrler_task+0x54 : 1e15bf6 >
 1e15bea:    90 f2 07 10       	if (r0 != r9) goto 14 <btctrler_task+0x5A : 1e15bfc >
 1e15bee:    80 08             	r0 = r8			  ## btctrler_task.c:139:21
 1e15bf0:    80 f3 3e 25       	call 19068 <ll_hci_cmd_handler : 1e1a670 >			  ## btctrler_task.c:139:21
 1e15bf4:    03 18             	goto 6 <btctrler_task+0x5A : 1e15bfc >			  ## btctrler_task.c:139:21
 1e15bf6:    10 02             	r0 = [sp+4]			  ## btctrler_task.c:146:35
 1e15bf8:    97 f3 08 89       	call 3084816 <os_sem_post : 106e0c >			  ## btctrler_task.c:146:13
 1e15bfc:    50 08             	r0 = r5			  ## hci_controller.c:815:5
 1e15bfe:    bf f3 ec 87       	call -61480 <thread_run : 1e06bda >			  ## hci_controller.c:815:5
 1e15c02:    e1 1f             	goto -62 <btctrler_task+0x24 : 1e15bc6 >			  ## hci_controller.c:815:5


bt_task_create:
 1e15c04:    00 70             	r0 = 0			  ## btctrler_task.c:41:0
 1e15c06:    20 00             	rts			  ## btctrler_task.c:43:5


bt_task_delete:
 1e15c08:    00 70             	r0 = 0			  ## btctrler_task.c:47:0
 1e15c0a:    20 00             	rts			  ## btctrler_task.c:48:5


bt_task_suspend:
 1e15c0c:    00 70             	r0 = 0			  ## btctrler_task.c:52:0
 1e15c0e:    20 00             	rts			  ## btctrler_task.c:61:5


bt_task_resume:
 1e15c10:    34 00             	[--sp] = rets			  ## btctrler_task.c:65:0
 1e15c12:    c0 ff 5a 28 e1 01 	r0 = 31533146 <update_target_end+0x262A : 1e1285a >			  ## btctrler_task.c:71:5
 1e15c18:    f1 7f             	r1 = 255			  ## btctrler_task.c:71:5
 1e15c1a:    02 70             	r2 = 0			  ## btctrler_task.c:71:5
 1e15c1c:    03 70             	r3 = 0			  ## btctrler_task.c:71:5
 1e15c1e:    97 f3 df 88       	call 3084734 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:71:5
 1e15c22:    00 70             	r0 = 0			  ## btctrler_task.c:73:5
 1e15c24:    30 00             	pc = [sp++]			  ## btctrler_task.c:73:5


h4_controller_init:
 1e15c26:    20 00             	rts			  ## h4_controller_interface.c:26:0


h4_controller_open:
 1e15c28:    00 70             	r0 = 0			  ## h4_controller_interface.c:31:0
 1e15c2a:    20 00             	rts			  ## h4_controller_interface.c:33:5


h4_controller_close:
 1e15c2c:    00 70             	r0 = 0			  ## h4_controller_interface.c:37:0
 1e15c2e:    20 00             	rts			  ## h4_controller_interface.c:39:5


h4_controller_register_packet_handler:
 1e15c30:    c1 ff 2c 2d 00 00 	r1 = 11564 <__h4_send_packet : 2d2c >			  ## h4_controller_interface.c:43:0
 1e15c36:    08 42             	[r1 + 0] = r0			  ## h4_controller_interface.c:45:22
 1e15c38:    20 00             	rts			  ## h4_controller_interface.c:47:1


h4_controller_can_send_now:
 1e15c3a:    00 70             	r0 = 0			  ## h4_controller_interface.c:54:0
 1e15c3c:    20 00             	rts			  ## h4_controller_interface.c:55:5


h4_controller_send_packet:
 1e15c3e:    34 00             	[--sp] = rets			  ## h4_controller_interface.c:62:0
 1e15c40:    00 04             	r0 = r0.b0 (u)			  ## h4_controller_interface.c:65:5
 1e15c42:    a2 04             	r2 = r2.l (u)			  ## h4_controller_interface.c:65:5
 1e15c44:    bf f3 a5 aa       	call -43702 <hci_packet_handler : 1e0b192 >			  ## h4_controller_interface.c:65:5
 1e15c48:    00 70             	r0 = 0			  ## h4_controller_interface.c:66:5
 1e15c4a:    30 00             	pc = [sp++]			  ## h4_controller_interface.c:66:5


hci_h4_download_data:
 1e15c4c:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_controller.c:596:0
 1e15c4e:    25 08             	r5 = r2			  ## hci_controller.c:596:0
 1e15c50:    14 08             	r4 = r1			  ## hci_controller.c:596:0
 1e15c52:    20 e0 1d 00       	if (r0 == 2) goto 58 <hci_h4_download_data+0x44 : 1e15c90 >			  ## hci_controller.c:600:5
 1e15c56:    10 e0 27 10       	if (r0 != 1) goto 78 <hci_h4_download_data+0x5C : 1e15ca8 >
 1e15c5a:    0b ff ff 50 02 00 	ifs (r5 < 255) goto 4 <hci_h4_download_data+0x18 : 1e15c64 >
 1e15c60:    8f f3 19 6c       	call 2021426 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e15c64:    c7 ff 30 2d 00 00 	r7 = 11568 <hdl.4803 : 2d30 >
 1e15c6a:    20 4e             	r0 = [r7 + 8]			  ## hci_controller.c:569:39
 1e15c6c:    21 9a             	r1 = r5 + 2			  ## hci_controller.c:569:45
 1e15c6e:    bf f3 c0 85       	call -62592 <lbuf_alloc_btctrler : 1e067f2 >			  ## hci_controller.c:569:11
 1e15c72:    06 08             	r6 = r0			  ## hci_controller.c:569:11
 1e15c74:    19 2c             	if (r6 == 0) goto 50 <hci_h4_download_data+0x5C : 1e15ca8 >			  ## hci_controller.c:569:11
 1e15c76:    0d 5c             	h[r6 + 0] = r5			  ## hci_controller.c:575:15
 1e15c78:    20 9c             	r0 = r6 + 2			  ## hci_controller.c:576:17
 1e15c7a:    41 08             	r1 = r4			  ## hci_controller.c:576:5
 1e15c7c:    52 08             	r2 = r5			  ## hci_controller.c:576:5
 1e15c7e:    97 f3 31 89       	call 3084898 <memcpy : 106ee4 >			  ## hci_controller.c:576:5
 1e15c82:    60 08             	r0 = r6			  ## hci_controller.c:586:5
 1e15c84:    bf f3 eb 85       	call -62506 <lbuf_push_btctrler : 1e0685e >			  ## hci_controller.c:586:5
 1e15c88:    80 9f             	r0 = r7 + 24			  ## hci_controller.c:588:5
 1e15c8a:    17 01             	{rets, r7-r4} = [sp++]			  ## hci_controller.c:588:5
 1e15c8c:    ff f3 fc 85       	goto -62472 <thread_resume : 1e06888 >			  ## hci_controller.c:588:5
 1e15c90:    01 70             	r1 = 0			  ## hci_controller.c:610:18
 1e15c92:    40 08             	r0 = r4			  ## hci_controller.c:610:18
 1e15c94:    bf f3 cf 7e       	call -66146 <btctler_little_endian_read_16 : 1e05a36 >			  ## hci_controller.c:610:18
 1e15c98:    30 fd f0 0a       	r0 = r0 & 4294905855			  ## hci_controller.c:613:36
 1e15c9c:    80 f3 44 14       	call 10376 <ll_link_for_handle : 1e18528 >			  ## hci_controller.c:613:17
 1e15ca0:    03 20             	if (r0 == 0) goto 6 <hci_h4_download_data+0x5C : 1e15ca8 >			  ## hci_controller.c:613:17
 1e15ca2:    40 08             	r0 = r4			  ## hci_controller.c:615:21
 1e15ca4:    80 f3 b1 25       	call 19298 <ll_push_acl_data : 1e1a80a >			  ## hci_controller.c:615:21
 1e15ca8:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_controller.c:641:1


BTCTLER_LE_CONTROLLER_CODE_START:
 1e15caa:    00 00             	nop


ble_power_ops:
 1e15cac:    60 27             	if (r3 == 0) goto -320 <hci_send_event_cmd_complete+0x2C : 1e15b6e >
 1e15cae:    e1 01             	[--sp] = {psr, reti}
 1e15cb0:    b4 7f             	r4 = 251
 1e15cb2:    e1 01             	[--sp] = {psr, reti}
 1e15cb4:    86 80             	r6 += 8
 1e15cb6:    e1 01             	[--sp] = {psr, reti}
 1e15cb8:    b6 80             	r6 += 11
 1e15cba:    e1 01             	[--sp] = {psr, reti}
 1e15cbc:    84 81             	r4 += 24
 1e15cbe:    e1 01             	[--sp] = {psr, reti}
 1e15cc0:    e8 82             	r8 += 46
 1e15cc2:    e1 01             	[--sp] = {psr, reti}


ble_power_put:
 1e15cc4:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:695:0
 1e15cc6:    04 08             	r4 = r0			  ## le_low_power.c:695:0
 1e15cc8:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:696:13
 1e15cca:    08 20             	if (r0 == 0) goto 16 <ble_power_put+0x18 : 1e15cdc >
 1e15ccc:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:171:36
 1e15cce:    12 40             	r2 = [r0 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:171:23
 1e15cd0:    1a 42             	[r1 + 4] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:159:16
 1e15cd2:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:160:16
 1e15cd4:    bf f3 a2 bd       	call -33980 <free : 1e0d81c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:704:5
 1e15cd8:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:698:24
 1e15cdc:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:700:1


ble_hw_disable:
 1e15cde:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:620:0
 1e15ce0:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:620:0
 1e15ce6:    c1 f4 00 19       	[r1 + 4] = 0			  ## RF_ble.c:263:21
 1e15cea:    08 00             	csync			  ## RF_ble.c:264:5
 1e15cec:    c2 ff 64 30 00 00 	r2 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e15cf2:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:134:19
 1e15cf4:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e15cf6:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:134:17
 1e15cf8:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e15cfa:    e0 fe 20 00       	r0 = r0 / r2 (s)			  ## RF_ble.c:134:17
 1e15cfe:    02 c1             	r2 = r0 << 4			  ## RF_ble.c:265:50
 1e15d00:    03 fb f0 07       	r3 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e15d04:    52 b7             	r2 &= r3			  ## RF_ble.c:265:50
 1e15d06:    03 fb 05 38       	r3 = 14341 <.GJTIE114_0_0_+0x197 : 3805 >			  ## RF_ble.c:265:67
 1e15d0a:    52 b6             	r2 |= r3			  ## RF_ble.c:265:67
 1e15d0c:    0a 42             	[r1 + 0] = r2			  ## RF_ble.c:265:21
 1e15d0e:    72 42             	r2 = [r1 + 28]			  ## RF_ble.c:624:16
 1e15d10:    21 f3 fd 2f       	if ((r2 & 2) != 0) goto -6 <ble_hw_disable+0x30 : 1e15d0e >			  ## RF_ble.c:624:9
 1e15d14:    32 42             	r2 = [r1 + 12]			  ## RF_ble.c:630:5
 1e15d16:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:630:5
 1e15d18:    13 70             	r3 = 1			  ## RF_ble.c:630:5
 1e15d1a:    03 0c             	r3 <<= r0			  ## RF_ble.c:630:5
 1e15d1c:    e3 fd 30 22       	r2 = r2 & ~r3			  ## RF_ble.c:630:5
 1e15d20:    3a 42             	[r1 + 12] = r2			  ## RF_ble.c:630:5
 1e15d22:    32 42             	r2 = [r1 + 12]			  ## RF_ble.c:631:5
 1e15d24:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:631:5
 1e15d28:    f8 fd 00 04       	r0 = r4 << r0			  ## RF_ble.c:631:5
 1e15d2c:    e3 fd 00 02       	r0 = r2 & ~r0			  ## RF_ble.c:631:5
 1e15d30:    38 42             	[r1 + 12] = r0			  ## RF_ble.c:631:5
 1e15d32:    c0 42             	r0 = [r1 + 48]			  ## RF_ble.c:632:5
 1e15d34:    e3 fd 30 00       	r0 = r0 & ~r3			  ## RF_ble.c:632:5
 1e15d38:    c8 42             	[r1 + 48] = r0			  ## RF_ble.c:632:5
 1e15d3a:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:634:1


clear_all_anchor_cnt:
 1e15d3c:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:1402:0
 1e15d3e:    01 70             	r1 = 0			  ## RF_ble.c:1402:0
 1e15d40:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:1402:0
 1e15d46:    c3 ff 64 30 00 00 	r3 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:1402:0
 1e15d4c:    c4 71             	r4 = 28			  ## RF_ble.c:1402:0
 1e15d4e:    05 70             	r5 = 0			  ## RF_ble.c:1402:0
 1e15d50:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e15d52:    08 00             	csync			  ## RF_ble.c:264:5
 1e15d54:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:134:19
 1e15d56:    46 4c             	r6 = [r6 + 16]			  ## RF_ble.c:134:35
 1e15d58:    a6 b1             	r6 = r0 - r6			  ## RF_ble.c:134:17
 1e15d5a:    e0 fe 40 66       	r6 = r6 / r4 (s)			  ## RF_ble.c:134:17
 1e15d5e:    36 c1             	r6 = r6 << 4			  ## RF_ble.c:265:50
 1e15d60:    26 fd 7f 60       	r6 = r6 & 4080			  ## RF_ble.c:265:50
 1e15d64:    56 ba             	r6 |= r5			  ## RF_ble.c:265:67
 1e15d66:    06 fd 05 69       	r6 = r6 | 5			  ## RF_ble.c:265:67
 1e15d6a:    55 fc 00 04       	r5 = r5 + 1024			  ## RF_ble.c:1403:22
 1e15d6e:    0e 44             	[r2 + 0] = r6			  ## RF_ble.c:265:21
 1e15d70:    21 ff 44 5a ed ff 	if (r5 != 17408) goto -38 <clear_all_anchor_cnt+0x14 : 1e15d50 >			  ## RF_ble.c:1403:5
 1e15d76:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:1406:1


hw_entity_free:
 1e15d78:    03 20             	if (r0 == 0) goto 6 <hw_entity_free+0x8 : 1e15d80 >			  ## RF_ble.c:2880:0
 1e15d7a:    01 70             	r1 = 0			  ## RF_ble.c:2890:17
 1e15d7c:    11 f9 5c 02       	b[r0 + 604] = r1			  ## RF_ble.c:2890:17
 1e15d80:    20 00             	rts			  ## RF_ble.c:2891:1


__set_ble_hw_irq_init:
 1e15d82:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:600:0
 1e15d84:    c1 ff 28 80 1c 00 	r1 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >			  ## RF_ble.c:600:0
 1e15d8a:    12 42             	r2 = [r1 + 4]			  ## RF_ble.c:601:5
 1e15d8c:    c3 ff 64 30 00 00 	r3 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e15d92:    03 46             	r3 = [r3 + 0]			  ## RF_ble.c:134:19
 1e15d94:    43 46             	r3 = [r3 + 16]			  ## RF_ble.c:134:35
 1e15d96:    e0 b0             	r0 = r0 - r3			  ## RF_ble.c:134:17
 1e15d98:    c3 71             	r3 = 28			  ## RF_ble.c:134:17
 1e15d9a:    e0 fe 30 00       	r0 = r0 / r3 (s)			  ## RF_ble.c:134:17
 1e15d9e:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:601:5
 1e15da0:    13 70             	r3 = 1			  ## RF_ble.c:601:5
 1e15da2:    03 0c             	r3 <<= r0			  ## RF_ble.c:601:5
 1e15da4:    e3 fd 30 22       	r2 = r2 & ~r3			  ## RF_ble.c:601:5
 1e15da8:    52 b6             	r2 |= r3			  ## RF_ble.c:601:5
 1e15daa:    1a 42             	[r1 + 4] = r2			  ## RF_ble.c:601:5
 1e15dac:    12 42             	r2 = [r1 + 4]			  ## RF_ble.c:602:5
 1e15dae:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:602:5
 1e15db2:    f8 fd 00 04       	r0 = r4 << r0			  ## RF_ble.c:602:5
 1e15db6:    e3 fd 00 22       	r2 = r2 & ~r0			  ## RF_ble.c:602:5
 1e15dba:    52 b0             	r2 |= r0			  ## RF_ble.c:602:5
 1e15dbc:    1a 42             	[r1 + 4] = r2			  ## RF_ble.c:602:5
 1e15dbe:    92 42             	r2 = [r1 + 36]			  ## RF_ble.c:603:5
 1e15dc0:    e3 fd 00 22       	r2 = r2 & ~r0			  ## RF_ble.c:603:5
 1e15dc4:    52 b0             	r2 |= r0			  ## RF_ble.c:603:5
 1e15dc6:    9a 42             	[r1 + 36] = r2			  ## RF_ble.c:603:5
 1e15dc8:    02 42             	r2 = [r1 + 0]			  ## RF_ble.c:605:5
 1e15dca:    e3 fd 30 22       	r2 = r2 & ~r3			  ## RF_ble.c:605:5
 1e15dce:    52 b6             	r2 |= r3			  ## RF_ble.c:605:5
 1e15dd0:    0a 42             	[r1 + 0] = r2			  ## RF_ble.c:605:5
 1e15dd2:    02 42             	r2 = [r1 + 0]			  ## RF_ble.c:606:5
 1e15dd4:    e3 fd 00 22       	r2 = r2 & ~r0			  ## RF_ble.c:606:5
 1e15dd8:    50 b4             	r0 |= r2			  ## RF_ble.c:606:5
 1e15dda:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:606:5
 1e15ddc:    90 42             	r0 = [r1 + 36]			  ## RF_ble.c:607:5
 1e15dde:    e3 fd 30 00       	r0 = r0 & ~r3			  ## RF_ble.c:607:5
 1e15de2:    50 b6             	r0 |= r3			  ## RF_ble.c:607:5
 1e15de4:    98 42             	[r1 + 36] = r0			  ## RF_ble.c:607:5
 1e15de6:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:608:1


__set_anchor_cnt:
 1e15de8:    78 01             	[--sp] = {rets, r8-r4}			  ## RF_ble.c:270:0
 1e15dea:    05 70             	r5 = 0			  ## RF_ble.c:270:0
 1e15dec:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:270:0
 1e15df2:    1d 44             	[r2 + 4] = r5			  ## RF_ble.c:263:21
 1e15df4:    08 00             	csync			  ## RF_ble.c:264:5
 1e15df6:    c3 ff 64 30 00 00 	r3 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e15dfc:    04 46             	r4 = [r3 + 0]			  ## RF_ble.c:134:19
 1e15dfe:    44 48             	r4 = [r4 + 16]			  ## RF_ble.c:134:35
 1e15e00:    26 b1             	r6 = r0 - r4			  ## RF_ble.c:134:17
 1e15e02:    c4 71             	r4 = 28			  ## RF_ble.c:134:17
 1e15e04:    e0 fe 40 66       	r6 = r6 / r4 (s)			  ## RF_ble.c:134:17
 1e15e08:    36 c1             	r6 = r6 << 4			  ## RF_ble.c:265:50
 1e15e0a:    07 fb f0 03       	r7 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e15e0e:    56 bf             	r6 &= r7			  ## RF_ble.c:265:50
 1e15e10:    07 fb 05 1c       	r7 = 7173 <btstack_stack+0x1 : 1c05 >			  ## RF_ble.c:265:67
 1e15e14:    56 be             	r6 |= r7			  ## RF_ble.c:265:67
 1e15e16:    0e 44             	[r2 + 0] = r6			  ## RF_ble.c:265:21
 1e15e18:    1d 44             	[r2 + 4] = r5			  ## RF_ble.c:263:21
 1e15e1a:    08 00             	csync			  ## RF_ble.c:264:5
 1e15e1c:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:134:19
 1e15e1e:    46 4c             	r6 = [r6 + 16]			  ## RF_ble.c:134:35
 1e15e20:    a6 b1             	r6 = r0 - r6			  ## RF_ble.c:134:17
 1e15e22:    e0 fe 40 66       	r6 = r6 / r4 (s)			  ## RF_ble.c:134:17
 1e15e26:    36 c1             	r6 = r6 << 4			  ## RF_ble.c:265:50
 1e15e28:    26 fd 7f 60       	r6 = r6 & 4080			  ## RF_ble.c:265:50
 1e15e2c:    06 fd 05 69       	r6 = r6 | 5			  ## RF_ble.c:265:67
 1e15e30:    0e 44             	[r2 + 0] = r6			  ## RF_ble.c:265:21
 1e15e32:    1d 44             	[r2 + 4] = r5			  ## RF_ble.c:263:21
 1e15e34:    08 00             	csync			  ## RF_ble.c:264:5
 1e15e36:    05 46             	r5 = [r3 + 0]			  ## RF_ble.c:134:19
 1e15e38:    45 4a             	r5 = [r5 + 16]			  ## RF_ble.c:134:35
 1e15e3a:    65 b1             	r5 = r0 - r5			  ## RF_ble.c:134:17
 1e15e3c:    e0 fe 40 55       	r5 = r5 / r4 (s)			  ## RF_ble.c:134:17
 1e15e40:    2e c1             	r6 = r5 << 4			  ## RF_ble.c:265:50
 1e15e42:    08 fb f0 07       	r8 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e15e46:    e2 fd 80 76       	r7 = r6 & r8			  ## RF_ble.c:265:50
 1e15e4a:    06 fb 05 38       	r6 = 14341 <.GJTIE114_0_0_+0x197 : 3805 >			  ## RF_ble.c:265:67
 1e15e4e:    e0 fd 60 57       	r5 = r7 | r6			  ## RF_ble.c:265:67
 1e15e52:    17 fc ff ff       	r7 = r1 + -1			  ## RF_ble.c:281:39
 1e15e56:    0d 44             	[r2 + 0] = r5			  ## RF_ble.c:265:21
 1e15e58:    01 32             	if (r1 != 0) goto 2 <__set_anchor_cnt+0x74 : 1e15e5c >			  ## RF_ble.c:265:21
 1e15e5a:    07 70             	r7 = 0			  ## RF_ble.c:281:39
 1e15e5c:    e1 05             	r1 = r7.l (u)			  ## RF_ble.c:281:44
 1e15e5e:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e15e60:    08 00             	csync			  ## RF_ble.c:264:5
 1e15e62:    01 46             	r1 = [r3 + 0]			  ## RF_ble.c:134:19
 1e15e64:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e15e66:    61 b0             	r1 = r0 - r1			  ## RF_ble.c:134:17
 1e15e68:    e0 fe 40 11       	r1 = r1 / r4 (s)			  ## RF_ble.c:134:17
 1e15e6c:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e15e6e:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:265:50
 1e15e72:    01 fd 05 19       	r1 = r1 | 5			  ## RF_ble.c:265:67
 1e15e76:    09 44             	[r2 + 0] = r1			  ## RF_ble.c:265:21
 1e15e78:    39 d4             	r1 = r7 >> 16			  ## RF_ble.c:283:58
 1e15e7a:    91 b7             	r1 |= 32768			  ## RF_ble.c:283:44
 1e15e7c:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e15e7e:    08 00             	csync			  ## RF_ble.c:264:5
 1e15e80:    01 46             	r1 = [r3 + 0]			  ## RF_ble.c:134:19
 1e15e82:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e15e84:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e15e86:    e0 fe 40 00       	r0 = r0 / r4 (s)			  ## RF_ble.c:134:17
 1e15e8a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e15e8c:    e2 fd 80 00       	r0 = r0 & r8			  ## RF_ble.c:265:50
 1e15e90:    50 bc             	r0 |= r6			  ## RF_ble.c:265:67
 1e15e92:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e15e94:    58 01             	{pc, r8-r4} = [sp++]			  ## RF_ble.c:284:1


le_hw_resume:
 1e15e96:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:3720:0
 1e15e98:    04 08             	r4 = r0			  ## RF_ble.c:3720:0
 1e15e9a:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3721:13
 1e15e9c:    02 f9 53 01       	r2 = b[r0 + 339] (u)			  ## RF_ble.c:3721:22
 1e15ea0:    15 08             	r5 = r1			  ## RF_ble.c:3721:22
 1e15ea2:    22 e0 0e 00       	if (r2 == 2) goto 28 <le_hw_resume+0x2C : 1e15ec2 >
 1e15ea6:    32 e0 04 10       	if (r2 != 3) goto 8 <le_hw_resume+0x1C : 1e15eb2 >
 1e15eaa:    80 74             	r0 = 72			  ## RF_ble.c:3727:9
 1e15eac:    15 01             	{rets, r5, r4} = [sp++]			  ## RF_ble.c:3727:9
 1e15eae:    ff f3 f8 b8       	goto -36368 <putchar : 1e0d0a2 >			  ## RF_ble.c:3727:9
 1e15eb2:    21 70             	r1 = 2			  ## RF_ble.c:3732:28
 1e15eb4:    11 f9 53 01       	b[r0 + 339] = r1			  ## RF_ble.c:3732:28
 1e15eb8:    40 08             	r0 = r4			  ## RF_ble.c:613:5
 1e15eba:    63 17             	call -314 <__set_ble_hw_irq_init : 1e15d82 >			  ## RF_ble.c:613:5
 1e15ebc:    40 08             	r0 = r4			  ## RF_ble.c:614:5
 1e15ebe:    51 08             	r1 = r5			  ## RF_ble.c:614:5
 1e15ec0:    93 17             	call -218 <__set_anchor_cnt : 1e15de8 >			  ## RF_ble.c:614:5
 1e15ec2:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:3734:1


le_hw_close:
 1e15ec4:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:3764:0
 1e15ec6:    04 08             	r4 = r0			  ## RF_ble.c:3764:0
 1e15ec8:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:3765:31
 1e15eca:    57 2a             	if (r5 == 0) goto 174 <le_hw_close+0xB6 : 1e15f7a >
 1e15ecc:    fb 16             	call -522 <ble_power_put : 1e15cc4 >			  ## RF_ble.c:3777:5
 1e15ece:    40 08             	r0 = r4			  ## RF_ble.c:3779:5
 1e15ed0:    06 17             	call -500 <ble_hw_disable : 1e15cde >			  ## RF_ble.c:3779:5
 1e15ed2:    56 fc 78 01       	r6 = r5 + 376			  ## RF_ble.c:3779:5
 1e15ed6:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:3783:17
 1e15ed8:    bf f3 b4 5c       	call -83608 <hw_dma_free : 1e01844 >			  ## RF_ble.c:3783:5
 1e15edc:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:3784:17
 1e15ede:    bf f3 b1 5c       	call -83614 <hw_dma_free : 1e01844 >			  ## RF_ble.c:3784:5
 1e15ee2:    05 70             	r5 = 0			  ## RF_ble.c:3784:5
 1e15ee4:    2d 4c             	[r6 + 8] = r5			  ## RF_ble.c:214:15
 1e15ee6:    3d 4c             	[r6 + 12] = r5			  ## RF_ble.c:215:15
 1e15ee8:    10 4c             	r0 = [r6 + 4]			  ## RF_ble.c:3786:17
 1e15eea:    bf f3 ab 5c       	call -83626 <hw_dma_free : 1e01844 >			  ## RF_ble.c:3786:5
 1e15eee:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:3787:17
 1e15ef0:    bf f3 a8 5c       	call -83632 <hw_dma_free : 1e01844 >			  ## RF_ble.c:3787:5
 1e15ef4:    0d 4c             	[r6 + 0] = r5			  ## RF_ble.c:196:15
 1e15ef6:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:197:15
 1e15ef8:    60 fc 20 00       	r0 = r6 + 32			  ## RF_ble.c:3790:24
 1e15efc:    bf f3 a3 5c       	call -83642 <hw_dma_clear : 1e01846 >			  ## RF_ble.c:3790:5
 1e15f00:    80 9d             	r0 = r6 + 24			  ## RF_ble.c:3791:24
 1e15f02:    bf f3 a0 5c       	call -83648 <hw_dma_clear : 1e01846 >			  ## RF_ble.c:3791:5
 1e15f06:    00 9d             	r0 = r6 + 16			  ## RF_ble.c:3792:24
 1e15f08:    bf f3 9d 5c       	call -83654 <hw_dma_clear : 1e01846 >			  ## RF_ble.c:3792:5
 1e15f0c:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:2955:21
 1e15f0e:    c6 ff 64 30 00 00 	r6 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:2955:21
 1e15f14:    19 20             	if (r0 == 0) goto 50 <le_hw_close+0x84 : 1e15f48 >			  ## RF_ble.c:2955:21
 1e15f16:    40 08             	r0 = r4			  ## RF_ble.c:2960:5
 1e15f18:    11 17             	call -478 <clear_all_anchor_cnt : 1e15d3c >			  ## RF_ble.c:2960:5
 1e15f1a:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:2962:32
 1e15f1c:    00 f6 e4 01       	r0 = [r0 + 484]			  ## RF_ble.c:2962:41
 1e15f20:    bf f3 a1 5c       	call -83646 <btctler_nv_memory_free : 1e01866 >			  ## RF_ble.c:2962:5
 1e15f24:    02 4c             	r2 = [r6 + 0]			  ## RF_ble.c:2963:5
 1e15f26:    40 44             	r0 = [r2 + 16]			  ## RF_ble.c:134:35
 1e15f28:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e15f2a:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e15f2c:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e15f30:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:2963:5
 1e15f32:    55 f8 00 20       	h[r2+r0<<1] = r5			  ## RF_ble.c:2963:37
 1e15f36:    00 f9 20 20       	r0 = b[r2 + 32] (u)			  ## RF_ble.c:2964:19
 1e15f3a:    f0 8f             	r0 += -1			  ## RF_ble.c:2964:19
 1e15f3c:    10 f9 20 20       	b[r2 + 32] = r0			  ## RF_ble.c:2964:19
 1e15f40:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:2966:24
 1e15f42:    1a 17             	call -460 <hw_entity_free : 1e15d78 >			  ## RF_ble.c:2966:5
 1e15f44:    0d 48             	[r4 + 0] = r5			  ## RF_ble.c:2967:17
 1e15f46:    01 18             	goto 2 <le_hw_close+0x86 : 1e15f4a >
 1e15f48:    02 4c             	r2 = [r6 + 0]
 1e15f4a:    00 70             	r0 = 0
 1e15f4c:    21 08             	r1 = r2
 1e15f4e:    03 70             	r3 = 0
 1e15f50:    84 f7 02 10       	r4 = h[r1 ++= 2] (u)			  ## RF_ble.c:4478:13
 1e15f54:    0e 28             	if (r4 == 0) goto 28 <le_hw_close+0xAE : 1e15f72 >
 1e15f56:    44 44             	r4 = [r2 + 16]			  ## RF_ble.c:4479:35
 1e15f58:    85 f6 00 40       	r5 = [r4+r0]			  ## RF_ble.c:4480:29
 1e15f5c:    0a 2a             	if (r5 == 0) goto 20 <le_hw_close+0xAE : 1e15f72 >			  ## RF_ble.c:4480:29
 1e15f5e:    56 fc 52 01       	r6 = r5 + 338
 1e15f62:    07 6c             	r7 = b[r6 + 0] (u)			  ## RF_ble.c:4484:31
 1e15f64:    37 e0 02 00       	if (r7 == 3) goto 4 <le_hw_close+0xA8 : 1e15f6c >			  ## RF_ble.c:4484:31
 1e15f68:    17 e0 03 10       	if (r7 != 1) goto 6 <le_hw_close+0xAE : 1e15f72 >
 1e15f6c:    16 6c             	r6 = b[r6 + 1] (u)
 1e15f6e:    16 e0 05 00       	if (r6 == 1) goto 10 <le_hw_close+0xB8 : 1e15f7c >
 1e15f72:    13 80             	r3 += 1			  ## RF_ble.c:4477:42
 1e15f74:    c0 81             	r0 += 28			  ## RF_ble.c:4477:22
 1e15f76:    83 e0 eb 3f       	if (r3 < 8) goto -42 <le_hw_close+0x8C : 1e15f50 >			  ## RF_ble.c:4477:22
 1e15f7a:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:3802:1
 1e15f7c:    01 f7 5a 52       	r1 = h[r5 + 602] (u)
 1e15f80:    40 09             	r0 += r4
 1e15f82:    17 01             	{rets, r7-r4} = [sp++]
 1e15f84:    88 1f             	goto -240 <le_hw_resume : 1e15e96 >


le_hw_destroy:
 1e15f86:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:4289:0
 1e15f88:    c4 ff 64 30 00 00 	r4 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:4289:0
 1e15f8e:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4292:11
 1e15f90:    24 20             	if (r0 == 0) goto 72 <le_hw_destroy+0x54 : 1e15fda >			  ## RF_ble.c:4292:11
 1e15f92:    05 70             	r5 = 0
 1e15f94:    06 70             	r6 = 0			  ## RF_ble.c:4299:13
 1e15f96:    03 18             	goto 6 <le_hw_destroy+0x18 : 1e15f9e >			  ## RF_ble.c:4299:13
 1e15f98:    00 48             	r0 = [r4 + 0]
 1e15f9a:    c5 81             	r5 += 28			  ## RF_ble.c:4298:5
 1e15f9c:    26 80             	r6 += 2			  ## RF_ble.c:4298:5
 1e15f9e:    01 f8 00 06       	r1 = h[r0+r6] (u)			  ## RF_ble.c:4299:13
 1e15fa2:    03 22             	if (r1 == 0) goto 6 <le_hw_destroy+0x24 : 1e15faa >			  ## RF_ble.c:4299:13
 1e15fa4:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:4300:42
 1e15fa6:    50 09             	r0 += r5			  ## RF_ble.c:4300:13
 1e15fa8:    8d 17             	call -230 <le_hw_close : 1e15ec4 >			  ## RF_ble.c:4300:13
 1e15faa:    e6 e0 f5 1f       	if (r6 != 14) goto -22 <le_hw_destroy+0x12 : 1e15f98 >
 1e15fae:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >
 1e15fb4:    00 f6 10 51       	r0 = [r5 + 272]			  ## hw_dma.c:109:17
 1e15fb8:    09 20             	if (r0 == 0) goto 18 <le_hw_destroy+0x46 : 1e15fcc >			  ## hw_dma.c:109:17
 1e15fba:    01 f6 0c 51       	r1 = [r5 + 268]			  ## hw_dma.c:109:31
 1e15fbe:    06 22             	if (r1 == 0) goto 12 <le_hw_destroy+0x46 : 1e15fcc >			  ## hw_dma.c:109:31
 1e15fc0:    bf f3 70 5c       	call -83744 <lbuf_clear_btctrler : 1e018a4 >			  ## hw_dma.c:110:9
 1e15fc4:    00 f6 0c 51       	r0 = [r5 + 268]			  ## hw_dma.c:111:37
 1e15fc8:    bf f3 6c 5c       	call -83752 <lbuf_clear_btctrler : 1e018a4 >			  ## hw_dma.c:111:9
 1e15fcc:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4307:10
 1e15fce:    bf f3 25 bc       	call -34742 <free : 1e0d81c >			  ## RF_ble.c:4307:5
 1e15fd2:    20 fb 64 04       	r0 = 1867776			  ## RF_ble.c:4309:14
 1e15fd6:    c0 f4 00 09       	[r0 + 0] = 0			  ## RF_ble.c:4309:14
 1e15fda:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:4313:1


ble_enter_deepsleep:
 1e15fdc:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:721:0
 1e15fde:    04 08             	r4 = r0			  ## le_low_power.c:721:0
 1e15fe0:    20 fb 64 14       	r1 = 1867776			  ## le_low_power.c:722:5
 1e15fe4:    c2 75             	r2 = 92			  ## le_low_power.c:722:5
 1e15fe6:    97 f3 7d 87       	call 3084026 <memcpy : 106ee4 >			  ## le_low_power.c:722:5
 1e15fea:    40 fc 5c 00       	r0 = r4 + 92			  ## le_low_power.c:727:9
 1e15fee:    22 70             	r2 = 2			  ## le_low_power.c:727:9
 1e15ff0:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:727:9
 1e15ff6:    03 fb 02 40       	r3 = 16386 <low_power_system_down+0x10A : 4002 >			  ## le_low_power.c:727:9
 1e15ffa:    0a 42             	[r1 + 0] = r2			  ## le_low_power.c:705:21
 1e15ffc:    08 00             	csync			  ## le_low_power.c:706:5
 1e15ffe:    25 42             	r5 = [r1 + 8]			  ## le_low_power.c:708:12
 1e16000:    22 fc 00 04       	r2 = r2 + 1024			  ## le_low_power.c:727:27
 1e16004:    95 f7 02 00       	h[r0 ++= 2] = r5			  ## le_low_power.c:728:45
 1e16008:    32 f2 f7 1f       	if (r2 != r3) goto -18 <ble_enter_deepsleep+0x1E : 1e15ffa >			  ## le_low_power.c:727:9
 1e1600c:    b0 42             	r0 = [r1 + 44]			  ## le_low_power.c:732:39
 1e1600e:    10 f6 5c 41       	[r4 + 348] = r0			  ## le_low_power.c:732:37
 1e16012:    c0 ff 7c 0f 00 00 	r0 = 3964 <ble_finetimecnt_poweroff_sfr : f7c >			  ## le_low_power.c:734:34
 1e16018:    c0 f4 00 09       	[r0 + 0] = 0			  ## le_low_power.c:734:34
 1e1601c:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:735:1


ble_exit_deepsleep:
 1e1601e:    77 01             	[--sp] = {rets, r7-r4}			  ## le_low_power.c:759:0
 1e16020:    04 08             	r4 = r0			  ## le_low_power.c:759:0
 1e16022:    20 fb 64 04       	r0 = 1867776			  ## le_low_power.c:760:5
 1e16026:    c2 75             	r2 = 92			  ## le_low_power.c:760:5
 1e16028:    41 08             	r1 = r4			  ## le_low_power.c:760:5
 1e1602a:    97 f3 5b 87       	call 3083958 <memcpy : 106ee4 >			  ## le_low_power.c:760:5
 1e1602e:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:760:5
 1e16034:    07 f4 01 09       	[r0 + 28] |= 1			  ## le_low_power.c:764:5
 1e16038:    07 f4 04 09       	[r0 + 28] |= 4			  ## le_low_power.c:766:5
 1e1603c:    41 fc 5c 00       	r1 = r4 + 92
 1e16040:    02 70             	r2 = 0
 1e16042:    53 70             	r3 = 5
 1e16044:    05 fb 05 40       	r5 = 16389 <low_power_system_down+0x10D : 4005 >
 1e16048:    16 08             	r6 = r1
 1e1604a:    22 e0 06 00       	if (r2 == 2) goto 12 <ble_exit_deepsleep+0x3C : 1e1605a >
 1e1604e:    92 e0 04 00       	if (r2 == 9) goto 8 <ble_exit_deepsleep+0x3C : 1e1605a >
 1e16052:    07 5c             	r7 = h[r6 + 0] (u)			  ## le_low_power.c:772:51
 1e16054:    1f 40             	[r0 + 4] = r7			  ## le_low_power.c:714:21
 1e16056:    08 00             	csync			  ## le_low_power.c:715:5
 1e16058:    0b 40             	[r0 + 0] = r3			  ## le_low_power.c:716:21
 1e1605a:    26 80             	r6 += 2			  ## le_low_power.c:769:27
 1e1605c:    33 fc 00 04       	r3 = r3 + 1024			  ## le_low_power.c:769:27
 1e16060:    12 80             	r2 += 1			  ## le_low_power.c:769:72
 1e16062:    53 f2 f2 1f       	if (r3 != r5) goto -28 <ble_exit_deepsleep+0x2C : 1e1604a >
 1e16066:    92 52             	r2 = h[r1 + 18] (u)			  ## le_low_power.c:744:18
 1e16068:    21 52             	r1 = h[r1 + 4] (u)			  ## le_low_power.c:746:18
 1e1606a:    d3 d1             	r3 = r2 >> 7			  ## le_low_power.c:748:42
 1e1606c:    21 fd fe 1a       	r1 = r1 & 65024			  ## le_low_power.c:748:31
 1e16070:    51 b6             	r1 |= r3			  ## le_low_power.c:748:31
 1e16072:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e16074:    08 00             	csync			  ## le_low_power.c:715:5
 1e16076:    01 fb 05 08       	r1 = 2053 <report_mmu_tlb_size+0x5 : 805 >			  ## le_low_power.c:716:21
 1e1607a:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e1607c:    01 fd 40 29       	r1 = r2 | 64			  ## le_low_power.c:754:49
 1e16080:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e16082:    08 00             	csync			  ## le_low_power.c:715:5
 1e16084:    01 fb 05 24       	r1 = 9221 <Hall_timer_id+0x1 : 2405 >			  ## le_low_power.c:716:21
 1e16088:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e1608a:    00 f6 5c 41       	r0 = [r4 + 348]			  ## le_low_power.c:779:48
 1e1608e:    c1 ff 7c 0f 00 00 	r1 = 3964 <ble_finetimecnt_poweroff_sfr : f7c >			  ## le_low_power.c:779:34
 1e16094:    08 42             	[r1 + 0] = r0			  ## le_low_power.c:779:34
 1e16096:    57 01             	{pc, r7-r4} = [sp++]			  ## le_low_power.c:780:1


__set_local_addr:
 1e16098:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:696:0
 1e1609a:    05 08             	r5 = r0			  ## RF_ble.c:696:0
 1e1609c:    30 5a             	r0 = h[r5 + 6] (u)			  ## RF_ble.c:699:23
 1e1609e:    24 08             	r4 = r2			  ## RF_ble.c:699:23
 1e160a0:    90 b1             	r0 |= 8			  ## RF_ble.c:699:23
 1e160a2:    38 5a             	h[r5 + 6] = r0			  ## RF_ble.c:699:23
 1e160a4:    10 70             	r0 = 1			  ## RF_ble.c:699:23
 1e160a6:    01 32             	if (r1 != 0) goto 2 <__set_local_addr+0x12 : 1e160aa >			  ## RF_ble.c:699:23
 1e160a8:    00 70             	r0 = 0			  ## RF_ble.c:701:27
 1e160aa:    10 f9 68 51       	b[r5 + 360] = r0			  ## RF_ble.c:701:25
 1e160ae:    50 fc 69 01       	r0 = r5 + 361			  ## RF_ble.c:703:5
 1e160b2:    62 70             	r2 = 6			  ## RF_ble.c:703:5
 1e160b4:    41 08             	r1 = r4			  ## RF_ble.c:703:5
 1e160b6:    97 f3 15 87       	call 3083818 <memcpy : 106ee4 >			  ## RF_ble.c:703:5
 1e160ba:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:705:29
 1e160bc:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:705:45
 1e160be:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:705:43
 1e160c2:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:705:43
 1e160c6:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:705:26
 1e160c8:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:706:29
 1e160ca:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:706:45
 1e160cc:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:706:43
 1e160d0:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:706:26
 1e160d2:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:707:29
 1e160d4:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:707:45
 1e160d6:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:707:43
 1e160da:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:707:26
 1e160dc:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:708:1


__set_peer_addr:
 1e160de:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:742:0
 1e160e0:    24 08             	r4 = r2			  ## RF_ble.c:742:0
 1e160e2:    05 08             	r5 = r0			  ## RF_ble.c:742:0
 1e160e4:    10 70             	r0 = 1			  ## RF_ble.c:742:0
 1e160e6:    01 32             	if (r1 != 0) goto 2 <__set_peer_addr+0xC : 1e160ea >			  ## RF_ble.c:742:0
 1e160e8:    00 70             	r0 = 0			  ## RF_ble.c:743:26
 1e160ea:    10 f9 6f 51       	b[r5 + 367] = r0			  ## RF_ble.c:743:24
 1e160ee:    50 fc 70 01       	r0 = r5 + 368			  ## RF_ble.c:745:5
 1e160f2:    62 70             	r2 = 6			  ## RF_ble.c:745:5
 1e160f4:    41 08             	r1 = r4			  ## RF_ble.c:745:5
 1e160f6:    97 f3 f5 86       	call 3083754 <memcpy : 106ee4 >			  ## RF_ble.c:745:5
 1e160fa:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:747:30
 1e160fc:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:747:46
 1e160fe:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:747:44
 1e16102:    50 fc 4c 00       	r0 = r5 + 76			  ## RF_ble.c:747:44
 1e16106:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:747:27
 1e16108:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:748:30
 1e1610a:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:748:46
 1e1610c:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:748:44
 1e16110:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:748:27
 1e16112:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:749:30
 1e16114:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:749:46
 1e16116:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:749:44
 1e1611a:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:749:27
 1e1611c:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:750:1


__set_channel_map:
 1e1611e:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:754:0
 1e16120:    08 70             	r8 = 0			  ## RF_ble.c:754:0
 1e16122:    19 70             	r9 = 1			  ## RF_ble.c:754:0
 1e16124:    0a 70             	r10 = 0			  ## RF_ble.c:754:0
 1e16126:    04 70             	r4 = 0			  ## RF_ble.c:754:0
 1e16128:    62 c0             	r2 = r4 << 1			  ## RF_ble.c:755:9
 1e1612a:    27 94             	r7 = r2 + 2			  ## RF_ble.c:755:9
 1e1612c:    46 08             	r6 = r4			  ## RF_ble.c:755:9
 1e1612e:    54 e2 23 a0       	ifs (r4 >= 37) goto 70 <__set_channel_map+0x5A : 1e16178 >
 1e16132:    04 28             	if (r4 == 0) goto 8 <__set_channel_map+0x1E : 1e1613c >
 1e16134:    b4 e0 03 10       	if (r4 != 11) goto 6 <__set_channel_map+0x20 : 1e1613e >
 1e16138:    2a 70             	r10 = 2
 1e1613a:    01 18             	goto 2 <__set_channel_map+0x20 : 1e1613e >
 1e1613c:    0a 70             	r10 = 0
 1e1613e:    03 b1             	r3 = r0 + r4			  ## RF_ble.c:777:29
 1e16140:    16 f9 68 30       	b[r3 + 104] = r6			  ## RF_ble.c:777:29
 1e16144:    80 fb 70 2a       	r2 = r10 + r7			  ## RF_ble.c:778:31
 1e16148:    12 f9 b8 30       	b[r3 + 184] = r2			  ## RF_ble.c:778:29
 1e1614c:    23 fd 07 49       	r3 = r4 & 7			  ## RF_ble.c:779:31
 1e16150:    e5 d8             	r5 = r4 >>> 3			  ## RF_ble.c:779:23
 1e16152:    05 fa 00 15       	r5 = b[r1+r5] (u)			  ## RF_ble.c:779:13
 1e16156:    f8 fd 30 39       	r3 = r9 << r3			  ## RF_ble.c:779:31
 1e1615a:    16 80             	r6 += 1			  ## RF_ble.c:779:13
 1e1615c:    27 80             	r7 += 2			  ## RF_ble.c:779:13
 1e1615e:    14 80             	r4 += 1			  ## RF_ble.c:778:34
 1e16160:    35 f0 e5 ff       	if ((r5 & r3) == 0) goto -54 <__set_channel_map+0x10 : 1e1612e >
 1e16164:    80 fb 80 30       	r3 = r0 + r8			  ## RF_ble.c:780:13
 1e16168:    65 fc ff ff       	r5 = r6 + -1			  ## RF_ble.c:780:35
 1e1616c:    15 f9 90 30       	b[r3 + 144] = r5			  ## RF_ble.c:780:35
 1e16170:    12 f9 e0 30       	b[r3 + 224] = r2			  ## RF_ble.c:781:37
 1e16174:    18 80             	r8 += 1			  ## RF_ble.c:781:33
 1e16176:    d8 1f             	goto -80 <__set_channel_map+0xA : 1e16128 >
 1e16178:    03 fc 8d 00       	r3 = r0 + 141			  ## RF_ble.c:785:17
 1e1617c:    04 70             	r4 = 0			  ## RF_ble.c:785:17
 1e1617e:    55 72             	r5 = 37
 1e16180:    c2 ff 82 30 e1 01 	r2 = 31535234 <bluetooth_base_uuid+0x10 : 1e13082 >
 1e16186:    06 fa 00 42       	r6 = b[r4+r2] (u)			  ## RF_ble.c:785:17
 1e1618a:    07 b7             	r7 = r3 + r4			  ## RF_ble.c:789:34
 1e1618c:    0d 6e             	b[r7 + 0] = r5			  ## RF_ble.c:789:34
 1e1618e:    16 f9 50 70       	b[r7 + 80] = r6			  ## RF_ble.c:790:34
 1e16192:    15 f9 28 70       	b[r7 + 40] = r5			  ## RF_ble.c:791:34
 1e16196:    16 f9 78 70       	b[r7 + 120] = r6			  ## RF_ble.c:792:34
 1e1619a:    14 80             	r4 += 1			  ## RF_ble.c:784:25
 1e1619c:    15 80             	r5 += 1			  ## RF_ble.c:784:19
 1e1619e:    34 e0 f2 1f       	if (r4 != 3) goto -28 <__set_channel_map+0x68 : 1e16186 >			  ## RF_ble.c:784:19
 1e161a2:    12 62             	r2 = b[r1 + 1] (u)			  ## RF_ble.c:795:23
 1e161a4:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:795:42
 1e161a6:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:795:40
 1e161aa:    7b 51             	h[r0 + 46] = r3			  ## RF_ble.c:795:20
 1e161ac:    32 62             	r2 = b[r1 + 3] (u)			  ## RF_ble.c:796:23
 1e161ae:    23 62             	r3 = b[r1 + 2] (u)			  ## RF_ble.c:796:42
 1e161b0:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:796:40
 1e161b4:    8b 51             	h[r0 + 48] = r3			  ## RF_ble.c:796:20
 1e161b6:    41 62             	r1 = b[r1 + 4] (u)			  ## RF_ble.c:797:36
 1e161b8:    21 fd 1f 19       	r1 = r1 & 31			  ## RF_ble.c:797:47
 1e161bc:    db fd 28 18       	r1 <= insert(r8, p:5, l:27)			  ## RF_ble.c:797:33
 1e161c0:    99 51             	h[r0 + 50] = r1			  ## RF_ble.c:797:20
 1e161c2:    71 51             	r1 = h[r0 + 46] (u)			  ## RF_ble.c:799:28
 1e161c4:    02 fc 50 02       	r2 = r0 + 592			  ## RF_ble.c:799:28
 1e161c8:    09 54             	h[r2 + 0] = r1			  ## RF_ble.c:799:18
 1e161ca:    81 51             	r1 = h[r0 + 48] (u)			  ## RF_ble.c:800:28
 1e161cc:    19 54             	h[r2 + 2] = r1			  ## RF_ble.c:800:18
 1e161ce:    90 51             	r0 = h[r0 + 50] (u)			  ## RF_ble.c:801:28
 1e161d0:    28 54             	h[r2 + 4] = r0			  ## RF_ble.c:801:18
 1e161d2:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:802:1


__set_winoffset:
 1e161d4:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:458:0
 1e161da:    04 22             	if (r1 == 0) goto 8 <__set_winoffset+0x10 : 1e161e4 >			  ## RF_ble.c:459:9
 1e161dc:    91 b7             	r1 |= 32768			  ## RF_ble.c:460:47
 1e161de:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e161e0:    08 00             	csync			  ## RF_ble.c:264:5
 1e161e2:    03 18             	goto 6 <__set_winoffset+0x16 : 1e161ea >			  ## RF_ble.c:264:5
 1e161e4:    c1 f4 00 29       	[r2 + 4] = 0			  ## RF_ble.c:263:21
 1e161e8:    08 00             	csync			  ## RF_ble.c:264:5
 1e161ea:    c1 ff 64 30 00 00 	r1 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e161f0:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e161f2:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e161f4:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e161f6:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e161f8:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e161fc:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e161fe:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e16202:    01 fb 05 10       	r1 = 4101 <sys_clock_limit+0x55 : 1005 >			  ## RF_ble.c:265:67
 1e16206:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e16208:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e1620a:    20 00             	rts			  ## RF_ble.c:464:1


__set_hw_state:
 1e1620c:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:434:0
 1e1620e:    03 40             	r3 = [r0 + 0]			  ## RF_ble.c:435:31
 1e16210:    74 70             	r4 = 7			  ## RF_ble.c:437:22
 1e16212:    33 fc 52 01       	r3 = r3 + 338			  ## RF_ble.c:437:22
 1e16216:    0c 66             	b[r3 + 0] = r4			  ## RF_ble.c:437:22
 1e16218:    3a 56             	h[r3 + 6] = r2			  ## RF_ble.c:438:22
 1e1621a:    49 66             	b[r3 + 4] = r1			  ## RF_ble.c:439:22
 1e1621c:    04 70             	r4 = 0			  ## RF_ble.c:440:27
 1e1621e:    5c 66             	b[r3 + 5] = r4			  ## RF_ble.c:440:27
 1e16220:    c9 c2             	r1 = r1 << 11			  ## RF_ble.c:442:63
 1e16222:    51 b4             	r1 |= r2			  ## RF_ble.c:442:70
 1e16224:    01 fd 70 1a       	r1 = r1 | 28672			  ## RF_ble.c:442:70
 1e16228:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e1622e:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e16230:    08 00             	csync			  ## RF_ble.c:264:5
 1e16232:    c1 ff 64 30 00 00 	r1 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e16238:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e1623a:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e1623c:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e1623e:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e16240:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e16244:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e16246:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e1624a:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e1624c:    51 81             	r1 += 21			  ## RF_ble.c:265:67
 1e1624e:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e16250:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e16252:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:443:1


__set_interval:
 1e16254:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:288:0
 1e16256:    03 40             	r3 = [r0 + 0]			  ## RF_ble.c:289:31
 1e16258:    02 26             	if (r3 == 0) goto 4 <__set_interval+0xA : 1e1625e >
 1e1625a:    11 f6 64 31       	[r3 + 356] = r1			  ## RF_ble.c:291:23
 1e1625e:    03 fb 71 02       	r3 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:293:43
 1e16262:    e0 fe 30 11       	r1 = r1 / r3 (s)			  ## RF_ble.c:293:43
 1e16266:    63 04             	r3 = r1.l (u)			  ## RF_ble.c:293:59
 1e16268:    c4 ff 1c 80 1c 00 	r4 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e1626e:    1b 48             	[r4 + 4] = r3			  ## RF_ble.c:263:21
 1e16270:    08 00             	csync			  ## RF_ble.c:264:5
 1e16272:    c3 ff 64 30 00 00 	r3 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e16278:    05 46             	r5 = [r3 + 0]			  ## RF_ble.c:134:19
 1e1627a:    45 4a             	r5 = [r5 + 16]			  ## RF_ble.c:134:35
 1e1627c:    65 b1             	r5 = r0 - r5			  ## RF_ble.c:134:17
 1e1627e:    c6 71             	r6 = 28			  ## RF_ble.c:134:17
 1e16280:    e0 fe 60 55       	r5 = r5 / r6 (s)			  ## RF_ble.c:134:17
 1e16284:    2d c1             	r5 = r5 << 4			  ## RF_ble.c:265:50
 1e16286:    25 fd 3f 50       	r5 = r5 & 3056			  ## RF_ble.c:265:50
 1e1628a:    07 fb 05 04       	r7 = 1029 <BTCTLER_LE_RAM_TOTAL+0x2D : 405 >			  ## RF_ble.c:265:67
 1e1628e:    55 be             	r5 |= r7			  ## RF_ble.c:265:67
 1e16290:    0d 48             	[r4 + 0] = r5			  ## RF_ble.c:265:21
 1e16292:    09 dc             	r1 = r1 >>> 16			  ## RF_ble.c:296:79
 1e16294:    d2 c3             	r2 = r2 << 15			  ## RF_ble.c:296:42
 1e16296:    51 b4             	r1 |= r2			  ## RF_ble.c:296:49
 1e16298:    19 48             	[r4 + 4] = r1			  ## RF_ble.c:263:21
 1e1629a:    08 00             	csync			  ## RF_ble.c:264:5
 1e1629c:    01 46             	r1 = [r3 + 0]			  ## RF_ble.c:134:19
 1e1629e:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e162a0:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e162a2:    e0 fe 60 00       	r0 = r0 / r6 (s)			  ## RF_ble.c:134:17
 1e162a6:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e162a8:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e162ac:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e162ae:    01 fb 05 3c       	r1 = 15365 <_norflash_write+0x65 : 3c05 >			  ## RF_ble.c:265:67
 1e162b2:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e162b4:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:265:21
 1e162b6:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:298:1


le_hw_ioctrl:
 1e162b8:    62 01             	[--sp] = {r3, r2}			  ## RF_ble.c:4114:0
 1e162ba:    7d 01             	[--sp] = {rets, r13-r4}			  ## RF_ble.c:4114:0
 1e162bc:    fe 0b             	sp += -4			  ## RF_ble.c:4114:0
 1e162be:    05 08             	r5 = r0			  ## RF_ble.c:4114:0
 1e162c0:    00 a3             	r0 = sp + 48			  ## RF_ble.c:4114:0
 1e162c2:    08 02             	[sp] = r0			  ## RF_ble.c:4116:5
 1e162c4:    71 e1 16 83       	if (r1 > 23) goto 1580 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4116:5
 1e162c8:    04 4a             	r4 = [r5 + 0]			  ## RF_ble.c:4117:31
 1e162ca:    4b c0             	r3 = r1 << 1
 1e162cc:    c8 ff 64 30 00 00 	r8 = 12388 <bb_hdl : 3064 >
 1e162d2:    20 fb 64 a4       	r10 = 1867776
 1e162d6:    4d fc 40 00       	r13 = r4 + 64
 1e162da:    4b fc 10 01       	r11 = r4 + 272
 1e162de:    47 fc 50 01       	r7 = r4 + 336
 1e162e2:    40 fc a0 01       	r0 = r4 + 416
 1e162e6:    42 fc e8 01       	r2 = r4 + 488
 1e162ea:    46 fc 4c 02       	r6 = r4 + 588
 1e162ee:    b3 00             	tbh [r3]


.GJTIL729_0_0_:
 1e162f0:    18 00     < 24 : 0x18 >
 1e162f2:    39 00     < 57 : 0x39 >
 1e162f4:    43 00     < 67 : 0x43 >
 1e162f6:    4e 00     < 78 : 0x4E >
 1e162f8:    59 00     < 89 : 0x59 >
 1e162fa:    82 00     < 130 : 0x82 >
 1e162fc:    92 00     < 146 : 0x92 >
 1e162fe:    3a 01     < 314 : 0x13A >
 1e16300:    71 01     < 369 : 0x171 >
 1e16302:    78 01     < 376 : 0x178 >
 1e16304:    a3 01     < 419 : 0x1A3 >
 1e16306:    af 01     < 431 : 0x1AF >
 1e16308:    02 03     < 770 : 0x302 >
 1e1630a:    bb 01     < 443 : 0x1BB >
 1e1630c:    02 03     < 770 : 0x302 >
 1e1630e:    df 01     < 479 : 0x1DF >
 1e16310:    02 03     < 770 : 0x302 >
 1e16312:    e5 01     < 485 : 0x1E5 >
 1e16314:    eb 01     < 491 : 0x1EB >
 1e16316:    f1 01     < 497 : 0x1F1 >
 1e16318:    ff 01     < 511 : 0x1FF >
 1e1631a:    0d 02     < 525 : 0x20D >
 1e1631c:    1d 02     < 541 : 0x21D >
 1e1631e:    2e 02     < 558 : 0x22E >
 1e16320:    01 02             	r1 = [sp]			  ## RF_ble.c:4123:39
 1e16322:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4123:39
 1e16324:    0a 02             	[sp] = r2			  ## RF_ble.c:4123:39
 1e16326:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4123:39
 1e16328:    22 62             	r2 = b[r1 + 2] (u)			  ## RF_ble.c:4123:9
 1e1632a:    63 62             	r3 = b[r1 + 6] (u)			  ## RF_ble.c:4123:9
 1e1632c:    04 62             	r4 = b[r1 + 0] (u)			  ## RF_ble.c:4123:9
 1e1632e:    08 f9 01 10       	r8 = b[r1 + 1] (u)			  ## RF_ble.c:4123:9
 1e16332:    76 62             	r6 = b[r1 + 7] (u)			  ## RF_ble.c:4123:9
 1e16334:    57 62             	r7 = b[r1 + 5] (u)			  ## RF_ble.c:4123:9
 1e16336:    45 62             	r5 = b[r1 + 4] (u)			  ## RF_ble.c:4123:9
 1e16338:    31 62             	r1 = b[r1 + 3] (u)			  ## RF_ble.c:4123:9
 1e1633a:    3e 61             	b[r0 + 19] = r6			  ## RF_ble.c:4123:9
 1e1633c:    1f 61             	b[r0 + 17] = r7			  ## RF_ble.c:4123:9
 1e1633e:    0d 61             	b[r0 + 16] = r5			  ## RF_ble.c:4123:9
 1e16340:    f9 60             	b[r0 + 15] = r1			  ## RF_ble.c:4123:9
 1e16342:    18 f9 0d 00       	b[r0 + 13] = r8			  ## RF_ble.c:4123:9
 1e16346:    cc 60             	b[r0 + 12] = r4			  ## RF_ble.c:4123:9
 1e16348:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## RF_ble.c:4123:9
 1e1634c:    d0 fd 80 53       	r5 <= insert(r3, p:16, l:16)			  ## RF_ble.c:4123:9
 1e16350:    2b d4             	r3 = r5 >> 16			  ## RF_ble.c:4123:9
 1e16352:    2b 61             	b[r0 + 18] = r3			  ## RF_ble.c:4123:9
 1e16354:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## RF_ble.c:4123:9
 1e16358:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## RF_ble.c:4123:9
 1e1635c:    21 d4             	r1 = r4 >> 16			  ## RF_ble.c:4123:9
 1e1635e:    e9 60             	b[r0 + 14] = r1			  ## RF_ble.c:4123:9
 1e16360:    c9 1a             	goto 1426 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4123:9
 1e16362:    00 02             	r0 = [sp]			  ## RF_ble.c:4128:40
 1e16364:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4128:40
 1e16366:    09 02             	[sp] = r1			  ## RF_ble.c:4128:40
 1e16368:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4128:40
 1e1636a:    70 fc 64 00       	r0 = r7 + 100			  ## RF_ble.c:4128:9
 1e1636e:    02 71             	r2 = 16			  ## RF_ble.c:4128:9
 1e16370:    97 f3 b8 85       	call 3083120 <memcpy : 106ee4 >			  ## RF_ble.c:4128:9
 1e16374:    bf 1a             	goto 1406 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4128:9
 1e16376:    00 02             	r0 = [sp]			  ## RF_ble.c:4131:31
 1e16378:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4131:31
 1e1637a:    09 02             	[sp] = r1			  ## RF_ble.c:4131:31
 1e1637c:    02 02             	r2 = [sp]			  ## RF_ble.c:4131:58
 1e1637e:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4131:31
 1e16380:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4131:58
 1e16382:    08 02             	[sp] = r0			  ## RF_ble.c:4131:58
 1e16384:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4131:58
 1e16386:    40 08             	r0 = r4			  ## RF_ble.c:4131:9
 1e16388:    87 16             	call -754 <__set_local_addr : 1e16098 >			  ## RF_ble.c:4131:9
 1e1638a:    b4 1a             	goto 1384 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4131:9
 1e1638c:    00 02             	r0 = [sp]			  ## RF_ble.c:4134:30
 1e1638e:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4134:30
 1e16390:    09 02             	[sp] = r1			  ## RF_ble.c:4134:30
 1e16392:    02 02             	r2 = [sp]			  ## RF_ble.c:4134:57
 1e16394:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4134:30
 1e16396:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4134:57
 1e16398:    08 02             	[sp] = r0			  ## RF_ble.c:4134:57
 1e1639a:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4134:57
 1e1639c:    40 08             	r0 = r4			  ## RF_ble.c:4134:9
 1e1639e:    9f 16             	call -706 <__set_peer_addr : 1e160de >			  ## RF_ble.c:4134:9
 1e163a0:    a9 1a             	goto 1362 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4134:9
 1e163a2:    00 02             	r0 = [sp]			  ## RF_ble.c:4138:33
 1e163a4:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4138:33
 1e163a6:    09 02             	[sp] = r1			  ## RF_ble.c:4138:33
 1e163a8:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4138:33
 1e163aa:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e163ae:    08 00             	csync			  ## RF_ble.c:264:5
 1e163b0:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e163b4:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e163b6:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e163b8:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e163ba:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e163be:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e163c0:    21 fd 3f 10       	r1 = r1 & 3056			  ## RF_ble.c:265:50
 1e163c4:    02 fb 05 14       	r2 = 5125 <UPDATE_CODE_TOTAL_SIZE+0x171 : 1405 >			  ## RF_ble.c:265:67
 1e163c8:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e163ca:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e163ce:    78 5e             	h[r7 + 14] = r0			  ## RF_ble.c:473:18
 1e163d0:    10 70             	r0 = 1			  ## RF_ble.c:473:18
 1e163d2:    d8 6e             	b[r7 + 13] = r0			  ## RF_ble.c:474:24
 1e163d4:    00 f7 36 b0       	r0 = h[r11 + 54] (u)
 1e163d8:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e163dc:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:823:23
 1e163e0:    11 f7 36 b0       	h[r11 + 54] = r1			  ## RF_ble.c:823:23
 1e163e4:    2d f3 86 02       	if ((r0 & 8192) != 0) goto 1292 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:823:23
 1e163e8:    e0 71             	r0 = 30			  ## RF_ble.c:827:28
 1e163ea:    10 f7 20 d0       	h[r13 + 32] = r0			  ## RF_ble.c:827:28
 1e163ee:    10 f7 1e d0       	h[r13 + 30] = r0			  ## RF_ble.c:828:28
 1e163f2:    80 1a             	goto 1280 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:828:28
 1e163f4:    00 02             	r0 = [sp]			  ## RF_ble.c:4142:28
 1e163f6:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4142:28
 1e163f8:    09 02             	[sp] = r1			  ## RF_ble.c:4142:28
 1e163fa:    01 02             	r1 = [sp]			  ## RF_ble.c:4142:49
 1e163fc:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4142:28
 1e163fe:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4142:49
 1e16400:    0a 02             	[sp] = r2			  ## RF_ble.c:4142:49
 1e16402:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4142:49
 1e16404:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:663:25
 1e16406:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:665:36
 1e16408:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e1640a:    10 f7 02 b0       	h[r11 + 2] = r0			  ## RF_ble.c:666:25
 1e1640e:    11 f6 3c b0       	[r11 + 60] = r1			  ## RF_ble.c:671:16
 1e16412:    70 1a             	goto 1248 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:671:16
 1e16414:    00 02             	r0 = [sp]			  ## RF_ble.c:4150:61
 1e16416:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4150:61
 1e16418:    09 02             	[sp] = r1			  ## RF_ble.c:4150:61
 1e1641a:    09 f6 00 00       	r9 = [r0 + 0]			  ## RF_ble.c:4150:61
 1e1641e:    c0 ff 6c 0f 00 00 	r0 = 3948 <g_ble_fp : f6c >			  ## RF_ble.c:966:14
 1e16424:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:966:14
 1e16426:    00 f7 36 b0       	r0 = h[r11 + 54] (u)
 1e1642a:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e1642e:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:823:23
 1e16432:    11 f7 36 b0       	h[r11 + 54] = r1			  ## RF_ble.c:823:23
 1e16436:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <.GJTIE729_0_0_+0x124 : 1e16444 >			  ## RF_ble.c:823:23
 1e1643a:    c0 71             	r0 = 28			  ## RF_ble.c:827:28
 1e1643c:    10 f7 20 d0       	h[r13 + 32] = r0			  ## RF_ble.c:827:28
 1e16440:    10 f7 1e d0       	h[r13 + 30] = r0			  ## RF_ble.c:828:28
 1e16444:    20 fb 80 0a       	r0 = 32768			  ## RF_ble.c:970:20
 1e16448:    08 58             	h[r4 + 0] = r0			  ## RF_ble.c:970:20
 1e1644a:    70 58             	r0 = h[r4 + 14] (u)			  ## RF_ble.c:971:19
 1e1644c:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:971:19
 1e1644e:    78 58             	h[r4 + 14] = r0			  ## RF_ble.c:971:19
 1e16450:    02 70             	r2 = 0			  ## RF_ble.c:971:19
 1e16452:    8a 58             	h[r4 + 16] = r2			  ## RF_ble.c:973:19
 1e16454:    01 70             	r1 = 0			  ## RF_ble.c:975:23
 1e16456:    90 08             	r0 = r9			  ## RF_ble.c:975:23
 1e16458:    bf f3 ed 7a       	call -68134 <btctler_little_endian_read_16 : 1e05a36 >			  ## RF_ble.c:975:23
 1e1645c:    58 58             	h[r4 + 10] = r0			  ## RF_ble.c:975:21
 1e1645e:    21 70             	r1 = 2			  ## RF_ble.c:976:23
 1e16460:    90 08             	r0 = r9			  ## RF_ble.c:976:23
 1e16462:    bf f3 e8 7a       	call -68144 <btctler_little_endian_read_16 : 1e05a36 >			  ## RF_ble.c:976:23
 1e16466:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:976:21
 1e16468:    90 fc 04 00       	r0 = r9 + 4			  ## RF_ble.c:978:54
 1e1646c:    01 70             	r1 = 0			  ## RF_ble.c:978:24
 1e1646e:    bf f3 e2 7a       	call -68156 <btctler_little_endian_read_16 : 1e05a36 >			  ## RF_ble.c:978:24
 1e16472:    10 f7 04 d0       	h[r13 + 4] = r0			  ## RF_ble.c:978:22
 1e16476:    00 f9 06 90       	r0 = b[r9 + 6] (u)			  ## RF_ble.c:979:24
 1e1647a:    10 f7 06 d0       	h[r13 + 6] = r0			  ## RF_ble.c:979:22
 1e1647e:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:982:21
 1e16480:    10 b1             	r0 |= 4			  ## RF_ble.c:982:21
 1e16482:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:982:21
 1e16484:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:984:5
 1e16486:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:984:5
 1e16488:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:984:5
 1e1648a:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:985:5
 1e1648c:    00 fd 0c 0a       	r0 = r0 | 3072			  ## RF_ble.c:985:5
 1e16490:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:985:5
 1e16492:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:986:5
 1e16494:    10 b6             	r0 |= 4096			  ## RF_ble.c:986:5
 1e16496:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:986:5
 1e16498:    00 f7 22 d0       	r0 = h[r13 + 34] (u)			  ## RF_ble.c:987:5
 1e1649c:    30 fd 30 09       	r0 = r0 & 4294967247			  ## RF_ble.c:987:5
 1e164a0:    10 b2             	r0 |= 16			  ## RF_ble.c:987:5
 1e164a2:    10 f7 22 d0       	h[r13 + 34] = r0			  ## RF_ble.c:987:5
 1e164a6:    40 fc 64 00       	r0 = r4 + 100			  ## RF_ble.c:987:5
 1e164aa:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:988:5
 1e164ac:    11 b0             	r1 |= 1			  ## RF_ble.c:988:5
 1e164ae:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:988:5
 1e164b0:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:989:5
 1e164b2:    11 b0             	r1 |= 1			  ## RF_ble.c:989:5
 1e164b4:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:989:5
 1e164b6:    e1 6a             	r1 = b[r5 + 14] (u)			  ## RF_ble.c:946:21
 1e164b8:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:946:21
 1e164ba:    03 32             	if (r1 != 0) goto 6 <.GJTIE729_0_0_+0x1A2 : 1e164c2 >
 1e164bc:    01 50             	r1 = h[r0 + 0] (u)			  ## RF_ble.c:948:36
 1e164be:    11 b1             	r1 |= 4			  ## RF_ble.c:948:36
 1e164c0:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:948:36
 1e164c2:    12 f6 20 a0       	[r10 + 32] = r2			  ## RF_ble.c:263:21
 1e164c6:    08 00             	csync			  ## RF_ble.c:264:5
 1e164c8:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e164cc:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e164ce:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e164d0:    cc 71             	r12 = 28			  ## RF_ble.c:134:17
 1e164d2:    e0 fe c0 11       	r1 = r1 / r12 (s)			  ## RF_ble.c:134:17
 1e164d6:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e164d8:    21 fd 3f 10       	r1 = r1 & 3056			  ## RF_ble.c:265:50
 1e164dc:    03 fb 05 14       	r3 = 5125 <UPDATE_CODE_TOTAL_SIZE+0x171 : 1405 >			  ## RF_ble.c:265:67
 1e164e0:    51 b6             	r1 |= r3			  ## RF_ble.c:265:67
 1e164e2:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e164e6:    12 f7 5e 01       	h[r0 + 350] = r2			  ## RF_ble.c:473:18
 1e164ea:    11 70             	r1 = 1			  ## RF_ble.c:473:18
 1e164ec:    11 f9 5d 01       	b[r0 + 349] = r1			  ## RF_ble.c:474:24
 1e164f0:    da 6e             	b[r7 + 13] = r2			  ## RF_ble.c:1002:24
 1e164f2:    20 6e             	r0 = b[r7 + 2] (u)			  ## RF_ble.c:1004:14
 1e164f4:    30 e0 30 11       	if (r0 != 3) goto 608 <.GJTIE729_0_0_+0x438 : 1e16758 >			  ## RF_ble.c:1004:9
 1e164f8:    06 70             	r6 = 0
 1e164fa:    16 f6 20 a0       	[r10 + 32] = r6			  ## RF_ble.c:263:21
 1e164fe:    08 00             	csync			  ## RF_ble.c:264:5
 1e16500:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e16504:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e16506:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:134:17
 1e16508:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:134:17
 1e1650c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e1650e:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e16512:    01 fb 05 10       	r1 = 4101 <sys_clock_limit+0x55 : 1005 >			  ## RF_ble.c:265:67
 1e16516:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e16518:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:265:21
 1e1651c:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## RF_ble.c:1009:31
 1e16520:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1009:53
 1e16522:    41 90             	r1 = r0 + 4			  ## RF_ble.c:1009:61
 1e16524:    50 08             	r0 = r5			  ## RF_ble.c:1009:9
 1e16526:    60 14             	call -1856 <__set_anchor_cnt : 1e15de8 >			  ## RF_ble.c:1009:9
 1e16528:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:435:31
 1e1652a:    01 f7 0c 90       	r1 = h[r9 + 12] (u)			  ## RF_ble.c:1020:59
 1e1652e:    62 70             	r2 = 6			  ## RF_ble.c:437:22
 1e16530:    00 fc 52 01       	r0 = r0 + 338			  ## RF_ble.c:437:22
 1e16534:    0a 60             	b[r0 + 0] = r2			  ## RF_ble.c:437:22
 1e16536:    39 50             	h[r0 + 6] = r1			  ## RF_ble.c:438:22
 1e16538:    4e 60             	b[r0 + 4] = r6			  ## RF_ble.c:439:22
 1e1653a:    5e 60             	b[r0 + 5] = r6			  ## RF_ble.c:440:27
 1e1653c:    00 fd 60 1a       	r0 = r1 | 24576			  ## RF_ble.c:442:70
 1e16540:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e16544:    08 00             	csync			  ## RF_ble.c:264:5
 1e16546:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e1654a:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e1654c:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:134:17
 1e1654e:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:134:17
 1e16552:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e16554:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e16558:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e1655a:    51 81             	r1 += 21			  ## RF_ble.c:265:67
 1e1655c:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e1655e:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:265:21
 1e16562:    6e 19             	goto 732 <.GJTIE729_0_0_+0x520 : 1e16840 >			  ## RF_ble.c:265:21
 1e16564:    00 02             	r0 = [sp]			  ## RF_ble.c:4154:62
 1e16566:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4154:62
 1e16568:    09 02             	[sp] = r1			  ## RF_ble.c:4154:62
 1e1656a:    09 f6 00 00       	r9 = [r0 + 0]			  ## RF_ble.c:4154:62
 1e1656e:    21 6e             	r1 = b[r7 + 2] (u)			  ## RF_ble.c:1061:14
 1e16570:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## RF_ble.c:1061:14
 1e16574:    61 e0 f7 10       	if (r1 != 6) goto 494 <.GJTIE729_0_0_+0x446 : 1e16766 >			  ## RF_ble.c:1061:9
 1e16578:    01 f9 07 90       	r1 = b[r9 + 7] (u)			  ## RF_ble.c:1063:32
 1e1657c:    02 fb e2 04       	r2 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1063:49
 1e16580:    89 0e             	r1 = r1 * r2			  ## RF_ble.c:1063:49
 1e16582:    11 fc 71 02       	r1 = r1 + 625			  ## RF_ble.c:1063:56
 1e16586:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:663:25
 1e16588:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:665:36
 1e1658a:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e1658c:    22 73             	r2 = 50			  ## RF_ble.c:666:25
 1e1658e:    12 f7 02 b0       	h[r11 + 2] = r2			  ## RF_ble.c:666:25
 1e16592:    11 f6 3c b0       	[r11 + 60] = r1			  ## RF_ble.c:671:16
 1e16596:    01 f7 0c 90       	r1 = h[r9 + 12] (u)			  ## RF_ble.c:1064:54
 1e1659a:    62 70             	r2 = 6			  ## RF_ble.c:437:22
 1e1659c:    2a 6e             	b[r7 + 2] = r2			  ## RF_ble.c:437:22
 1e1659e:    49 5e             	h[r7 + 8] = r1			  ## RF_ble.c:438:22
 1e165a0:    02 70             	r2 = 0			  ## RF_ble.c:439:22
 1e165a2:    6a 6e             	b[r7 + 6] = r2			  ## RF_ble.c:439:22
 1e165a4:    7a 6e             	b[r7 + 7] = r2			  ## RF_ble.c:440:27
 1e165a6:    01 fd 60 1a       	r1 = r1 | 24576			  ## RF_ble.c:442:70
 1e165aa:    11 f6 20 a0       	[r10 + 32] = r1			  ## RF_ble.c:263:21
 1e165ae:    08 00             	csync			  ## RF_ble.c:264:5
 1e165b0:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e165b4:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e165b6:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e165b8:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e165ba:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e165be:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e165c0:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e165c4:    51 b5             	r1 &= r2			  ## RF_ble.c:265:50
 1e165c6:    52 81             	r2 += 21			  ## RF_ble.c:265:67
 1e165c8:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e165ca:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e165ce:    44 c0             	r4 = r0 << 1			  ## RF_ble.c:1062:38
 1e165d0:    02 19             	goto 516 <.GJTIE729_0_0_+0x4B6 : 1e167d6 >
 1e165d2:    00 02             	r0 = [sp]			  ## RF_ble.c:4146:38
 1e165d4:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4146:38
 1e165d6:    09 02             	[sp] = r1			  ## RF_ble.c:4146:38
 1e165d8:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4146:38
 1e165da:    40 08             	r0 = r4			  ## RF_ble.c:4146:9
 1e165dc:    a0 15             	call -1216 <__set_channel_map : 1e1611e >			  ## RF_ble.c:4146:9
 1e165de:    8a 19             	goto 788 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4146:9
 1e165e0:    01 02             	r1 = [sp]			  ## RF_ble.c:4157:36
 1e165e2:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4157:36
 1e165e4:    08 02             	[sp] = r0			  ## RF_ble.c:4157:36
 1e165e6:    00 02             	r0 = [sp]			  ## RF_ble.c:4157:63
 1e165e8:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4157:36
 1e165ea:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4157:63
 1e165ec:    09 02             	[sp] = r1			  ## RF_ble.c:4157:63
 1e165ee:    11 70             	r1 = 1			  ## RF_ble.c:4157:63
 1e165f0:    01 34             	if (r2 != 0) goto 2 <.GJTIE729_0_0_+0x2D4 : 1e165f4 >			  ## RF_ble.c:4157:63
 1e165f2:    01 70             	r1 = 0			  ## RF_ble.c:1112:17
 1e165f4:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4157:63
 1e165f6:    e2 59             	r2 = h[r4 + 60] (u)			  ## RF_ble.c:1113:35
 1e165f8:    22 fd 7e 29       	r2 = r2 & 126			  ## RF_ble.c:1113:46
 1e165fc:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## RF_ble.c:1113:79
 1e16600:    01 fd 01 29       	r1 = r2 | 1			  ## RF_ble.c:1113:79
 1e16604:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1113:24
 1e16606:    e1 59             	r1 = h[r4 + 60] (u)			  ## RF_ble.c:1114:24
 1e16608:    11 b2             	r1 |= 16			  ## RF_ble.c:1114:24
 1e1660a:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1114:24
 1e1660c:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:1116:28
 1e1660e:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:1116:44
 1e16610:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1116:42
 1e16614:    fa 59             	h[r4 + 62] = r2			  ## RF_ble.c:1116:25
 1e16616:    31 60             	r1 = b[r0 + 3] (u)			  ## RF_ble.c:1117:28
 1e16618:    22 60             	r2 = b[r0 + 2] (u)			  ## RF_ble.c:1117:44
 1e1661a:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1117:42
 1e1661e:    12 f7 00 d0       	h[r13 + 0] = r2			  ## RF_ble.c:1117:25
 1e16622:    51 60             	r1 = b[r0 + 5] (u)			  ## RF_ble.c:1118:28
 1e16624:    40 60             	r0 = b[r0 + 4] (u)			  ## RF_ble.c:1118:44
 1e16626:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1118:42
 1e1662a:    10 f7 02 d0       	h[r13 + 2] = r0			  ## RF_ble.c:1118:25
 1e1662e:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1096:21
 1e16630:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:1096:21
 1e16632:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1096:21
 1e16634:    5f 19             	goto 702 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:1096:21
 1e16636:    01 02             	r1 = [sp]			  ## RF_ble.c:4161:35
 1e16638:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4161:35
 1e1663a:    0a 02             	[sp] = r2			  ## RF_ble.c:4161:35
 1e1663c:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4161:35
 1e1663e:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:1143:27
 1e16640:    61 ff ff 19 57 01 	if ((r1 & 255) != 0) goto 686 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:1143:27
 1e16646:    01 70             	r1 = 0
 1e16648:    59 4f             	[r7 + 84] = r1			  ## RF_ble.c:1146:34
 1e1664a:    29 60             	b[r0 + 2] = r1			  ## RF_ble.c:1147:34
 1e1664c:    53 19             	goto 678 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:1147:34
 1e1664e:    01 02             	r1 = [sp]			  ## RF_ble.c:4165:38
 1e16650:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4165:38
 1e16652:    0a 02             	[sp] = r2			  ## RF_ble.c:4165:38
 1e16654:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4165:38
 1e16656:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:1132:27
 1e16658:    61 ff ff 19 4b 01 	if ((r1 & 255) != 0) goto 662 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:1132:27
 1e1665e:    01 70             	r1 = 0
 1e16660:    69 4f             	[r7 + 88] = r1			  ## RF_ble.c:1135:34
 1e16662:    39 60             	b[r0 + 3] = r1			  ## RF_ble.c:1136:34
 1e16664:    47 19             	goto 654 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:1136:34
 1e16666:    00 02             	r0 = [sp]			  ## RF_ble.c:4169:35
 1e16668:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4169:35
 1e1666a:    09 02             	[sp] = r1			  ## RF_ble.c:4169:35
 1e1666c:    01 02             	r1 = [sp]			  ## RF_ble.c:4169:62
 1e1666e:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:4169:35
 1e16670:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4169:62
 1e16672:    08 02             	[sp] = r0			  ## RF_ble.c:4169:62
 1e16674:    05 42             	r5 = [r1 + 0]			  ## RF_ble.c:4169:62
 1e16676:    30 58             	r0 = h[r4 + 6] (u)			  ## RF_ble.c:713:23
 1e16678:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:713:23
 1e1667a:    38 58             	h[r4 + 6] = r0			  ## RF_ble.c:713:23
 1e1667c:    10 70             	r0 = 1			  ## RF_ble.c:714:27
 1e1667e:    01 34             	if (r2 != 0) goto 2 <.GJTIE729_0_0_+0x362 : 1e16682 >			  ## RF_ble.c:714:27
 1e16680:    00 70             	r0 = 0			  ## RF_ble.c:714:27
 1e16682:    88 6f             	b[r7 + 24] = r0			  ## RF_ble.c:714:25
 1e16684:    b0 fc 59 00       	r0 = r11 + 89			  ## RF_ble.c:716:5
 1e16688:    62 70             	r2 = 6			  ## RF_ble.c:716:5
 1e1668a:    51 08             	r1 = r5			  ## RF_ble.c:716:5
 1e1668c:    97 f3 2a 84       	call 3082324 <memcpy : 106ee4 >			  ## RF_ble.c:716:5
 1e16690:    90 58             	r0 = h[r4 + 18] (u)			  ## RF_ble.c:723:19
 1e16692:    06 f6 00 80       	r6 = [r8 + 0]			  ## RF_ble.c:723:51
 1e16696:    60 09             	r0 += r6			  ## RF_ble.c:723:42
 1e16698:    62 70             	r2 = 6			  ## RF_ble.c:725:5
 1e1669a:    51 08             	r1 = r5			  ## RF_ble.c:725:5
 1e1669c:    97 f3 22 84       	call 3082308 <memcpy : 106ee4 >			  ## RF_ble.c:725:5
 1e166a0:    a0 58             	r0 = h[r4 + 20] (u)			  ## RF_ble.c:727:19
 1e166a2:    60 09             	r0 += r6			  ## RF_ble.c:727:42
 1e166a4:    62 70             	r2 = 6			  ## RF_ble.c:729:5
 1e166a6:    51 08             	r1 = r5			  ## RF_ble.c:729:5
 1e166a8:    97 f3 1c 84       	call 3082296 <memcpy : 106ee4 >			  ## RF_ble.c:729:5
 1e166ac:    23 19             	goto 582 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:729:5
 1e166ae:    00 02             	r0 = [sp]			  ## RF_ble.c:4187:30
 1e166b0:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4187:30
 1e166b2:    09 02             	[sp] = r1			  ## RF_ble.c:4187:30
 1e166b4:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4187:30
 1e166b6:    18 54             	h[r2 + 2] = r0			  ## RF_ble.c:1393:19
 1e166b8:    1d 19             	goto 570 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:1393:19
 1e166ba:    00 02             	r0 = [sp]			  ## RF_ble.c:4190:29
 1e166bc:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4190:29
 1e166be:    09 02             	[sp] = r1			  ## RF_ble.c:4190:29
 1e166c0:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4190:29
 1e166c2:    c8 64             	b[r2 + 12] = r0			  ## RF_ble.c:4190:27
 1e166c4:    17 19             	goto 558 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4190:27
 1e166c6:    00 02             	r0 = [sp]			  ## RF_ble.c:4194:31
 1e166c8:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4194:31
 1e166ca:    09 02             	[sp] = r1			  ## RF_ble.c:4194:31
 1e166cc:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4194:31
 1e166ce:    d8 64             	b[r2 + 13] = r0			  ## RF_ble.c:4194:29
 1e166d0:    11 19             	goto 546 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4194:29
 1e166d2:    00 02             	r0 = [sp]			  ## RF_ble.c:4198:17
 1e166d4:    02 f6 78 b0       	r2 = [r11 + 120]			  ## list.h:124:18
 1e166d8:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4198:17
 1e166da:    09 02             	[sp] = r1			  ## RF_ble.c:4198:17
 1e166dc:    b3 fc 78 00       	r3 = r11 + 120			  ## RF_ble.c:3897:39
 1e166e0:    11 70             	r1 = 1			  ## list.h:124:23
 1e166e2:    32 f2 01 00       	if (r2 == r3) goto 2 <.GJTIE729_0_0_+0x3C8 : 1e166e8 >			  ## list.h:124:23
 1e166e6:    01 70             	r1 = 0			  ## list.h:124:23
 1e166e8:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4198:17
 1e166ea:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:4198:37
 1e166ec:    03 19             	goto 518 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4198:37
 1e166ee:    00 02             	r0 = [sp]			  ## RF_ble.c:4201:24
 1e166f0:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4201:24
 1e166f2:    09 02             	[sp] = r1			  ## RF_ble.c:4201:24
 1e166f4:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4201:24
 1e166f6:    01 f6 00 a0       	r1 = [r10 + 0]			  ## RF_ble.c:3903:9
 1e166fa:    fc 22             	if (r1 == 0) goto 504 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:3903:9
 1e166fc:    20 04             	r0 = r0.l (u)
 1e166fe:    11 70             	r1 = 1			  ## RF_ble.c:3905:30
 1e16700:    d0 fd 40 10       	r1 <= insert(r0, p:8, l:16)			  ## RF_ble.c:3905:30
 1e16704:    11 f6 34 a0       	[r10 + 52] = r1			  ## RF_ble.c:3905:21
 1e16708:    f5 18             	goto 490 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:3905:21
 1e1670a:    01 02             	r1 = [sp]			  ## RF_ble.c:4204:39
 1e1670c:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4204:39
 1e1670e:    0a 02             	[sp] = r2			  ## RF_ble.c:4204:39
 1e16710:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4204:39
 1e16712:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3110:18
 1e16716:    f0 86             	r0 += 111			  ## RF_ble.c:3112:5
 1e16718:    52 08             	r2 = r5			  ## RF_ble.c:3112:5
 1e1671a:    97 f3 e3 83       	call 3082182 <memcpy : 106ee4 >			  ## RF_ble.c:3112:5
 1e1671e:    15 f9 0e 42       	b[r4 + 526] = r5			  ## RF_ble.c:3114:17
 1e16722:    20 6c             	r0 = b[r6 + 2] (u)			  ## RF_ble.c:3116:20
 1e16724:    10 b0             	r0 |= 1			  ## RF_ble.c:3116:20
 1e16726:    28 6c             	b[r6 + 2] = r0			  ## RF_ble.c:3116:20
 1e16728:    e5 18             	goto 458 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:3116:20
 1e1672a:    00 02             	r0 = [sp]			  ## RF_ble.c:4207:44
 1e1672c:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4207:44
 1e1672e:    09 02             	[sp] = r1			  ## RF_ble.c:4207:44
 1e16730:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4207:44
 1e16732:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3124:23
 1e16736:    20 fc 47 00       	r0 = r2 + 71			  ## RF_ble.c:3126:5
 1e1673a:    52 08             	r2 = r5			  ## RF_ble.c:3126:5
 1e1673c:    97 f3 d2 83       	call 3082148 <memcpy : 106ee4 >			  ## RF_ble.c:3126:5
 1e16740:    15 f9 2e 42       	b[r4 + 558] = r5			  ## RF_ble.c:3128:22
 1e16744:    20 6c             	r0 = b[r6 + 2] (u)			  ## RF_ble.c:3130:20
 1e16746:    90 b0             	r0 |= 2			  ## RF_ble.c:3130:20
 1e16748:    28 6c             	b[r6 + 2] = r0			  ## RF_ble.c:3130:20
 1e1674a:    d4 18             	goto 424 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:3130:20
 1e1674c:    00 02             	r0 = [sp]			  ## RF_ble.c:4210:40
 1e1674e:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4210:40
 1e16750:    09 02             	[sp] = r1			  ## RF_ble.c:4210:40
 1e16752:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4210:40
 1e16754:    58 5e             	h[r7 + 10] = r0			  ## RF_ble.c:4210:40
 1e16756:    ce 18             	goto 412 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:4210:40
 1e16758:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## RF_ble.c:1023:42
 1e1675c:    48 20             	if (r0 == 0) goto 144 <.GJTIE729_0_0_+0x4CE : 1e167ee >			  ## RF_ble.c:1023:42
 1e1675e:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1023:77
 1e16760:    01 fc ff ff       	r1 = r0 + -1			  ## RF_ble.c:1023:81
 1e16764:    45 18             	goto 138 <.GJTIE729_0_0_+0x4D0 : 1e167f0 >			  ## RF_ble.c:1023:81
 1e16766:    01 f9 07 90       	r1 = b[r9 + 7] (u)			  ## RF_ble.c:1067:33
 1e1676a:    02 f7 18 90       	r2 = h[r9 + 24] (u)			  ## RF_ble.c:1067:74
 1e1676e:    03 fb e2 04       	r3 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1067:50
 1e16772:    80 fe 30 21       	r2 += r1 * r3			  ## RF_ble.c:1067:57
 1e16776:    21 fc 71 02       	r1 = r2 + 625			  ## RF_ble.c:1067:72
 1e1677a:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:663:25
 1e1677c:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:665:36
 1e1677e:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e16780:    22 73             	r2 = 50			  ## RF_ble.c:666:25
 1e16782:    12 f7 02 b0       	h[r11 + 2] = r2			  ## RF_ble.c:666:25
 1e16786:    11 f6 3c b0       	[r11 + 60] = r1			  ## RF_ble.c:671:16
 1e1678a:    41 c0             	r1 = r0 << 1			  ## RF_ble.c:1066:59
 1e1678c:    f1 8f             	r1 += -1			  ## RF_ble.c:1066:63
 1e1678e:    04 70             	r4 = 0			  ## RF_ble.c:1066:63
 1e16790:    01 20             	if (r0 == 0) goto 2 <.GJTIE729_0_0_+0x474 : 1e16794 >
 1e16792:    14 08             	r4 = r1			  ## RF_ble.c:1066:21
 1e16794:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:1068:13
 1e16798:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1068:21
 1e1679c:    10 e0 04 90       	if (r0 <= 1) goto 8 <.GJTIE729_0_0_+0x488 : 1e167a8 >			  ## RF_ble.c:1068:21
 1e167a0:    02 70             	r2 = 0
 1e167a2:    12 f7 0c 90       	h[r9 + 12] = r2			  ## RF_ble.c:1069:28
 1e167a6:    02 18             	goto 4 <.GJTIE729_0_0_+0x48C : 1e167ac >			  ## RF_ble.c:1069:28
 1e167a8:    02 f7 0c 90       	r2 = h[r9 + 12] (u)
 1e167ac:    11 70             	r1 = 1			  ## RF_ble.c:1071:44
 1e167ae:    01 34             	if (r2 != 0) goto 2 <.GJTIE729_0_0_+0x492 : 1e167b2 >			  ## RF_ble.c:1071:44
 1e167b0:    01 70             	r1 = 0			  ## RF_ble.c:1071:44
 1e167b2:    50 08             	r0 = r5			  ## RF_ble.c:1071:9
 1e167b4:    2b 15             	call -1450 <__set_hw_state : 1e1620c >			  ## RF_ble.c:1071:9
 1e167b6:    00 f7 16 90       	r0 = h[r9 + 22] (u)			  ## RF_ble.c:1072:33
 1e167ba:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:681:19
 1e167be:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## RF_ble.c:681:19
 1e167c2:    12 f7 08 d0       	h[r13 + 8] = r2			  ## RF_ble.c:685:23
 1e167c6:    d0 fe 10 10       	r1 = r0 % r1 (u)			  ## RF_ble.c:682:17
 1e167ca:    01 fd 50 1a       	r1 = r1 | 20480			  ## RF_ble.c:688:25
 1e167ce:    11 f7 0a d0       	h[r13 + 10] = r1			  ## RF_ble.c:688:23
 1e167d2:    10 f6 38 b0       	[r11 + 56] = r0			  ## RF_ble.c:691:15
 1e167d6:    50 08             	r0 = r5			  ## RF_ble.c:1076:5
 1e167d8:    41 08             	r1 = r4			  ## RF_ble.c:1076:5
 1e167da:    fc 14             	call -1544 <__set_winoffset : 1e161d4 >			  ## RF_ble.c:1076:5
 1e167dc:    00 f7 0a 90       	r0 = h[r9 + 10] (u)			  ## RF_ble.c:1077:24
 1e167e0:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1077:40
 1e167e4:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1077:40
 1e167e6:    12 70             	r2 = 1			  ## RF_ble.c:1077:5
 1e167e8:    50 08             	r0 = r5			  ## RF_ble.c:1077:5
 1e167ea:    34 15             	call -1432 <__set_interval : 1e16254 >			  ## RF_ble.c:1077:5
 1e167ec:    83 18             	goto 262 <.GJTIE729_0_0_+0x5D4 : 1e168f4 >			  ## RF_ble.c:1077:5
 1e167ee:    01 70             	r1 = 0
 1e167f0:    50 08             	r0 = r5			  ## RF_ble.c:1023:9
 1e167f2:    f0 14             	call -1568 <__set_winoffset : 1e161d4 >			  ## RF_ble.c:1023:9
 1e167f4:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:1026:13
 1e167f8:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1026:21
 1e167fc:    10 e0 04 90       	if (r0 <= 1) goto 8 <.GJTIE729_0_0_+0x4E8 : 1e16808 >			  ## RF_ble.c:1026:21
 1e16800:    02 70             	r2 = 0
 1e16802:    12 f7 0c 90       	h[r9 + 12] = r2			  ## RF_ble.c:1027:33
 1e16806:    02 18             	goto 4 <.GJTIE729_0_0_+0x4EC : 1e1680c >			  ## RF_ble.c:1027:33
 1e16808:    02 f7 0c 90       	r2 = h[r9 + 12] (u)
 1e1680c:    11 70             	r1 = 1			  ## RF_ble.c:1029:44
 1e1680e:    01 34             	if (r2 != 0) goto 2 <.GJTIE729_0_0_+0x4F2 : 1e16812 >			  ## RF_ble.c:1029:44
 1e16810:    01 70             	r1 = 0			  ## RF_ble.c:1029:44
 1e16812:    50 08             	r0 = r5			  ## RF_ble.c:1029:9
 1e16814:    fb 14             	call -1546 <__set_hw_state : 1e1620c >			  ## RF_ble.c:1029:9
 1e16816:    00 f7 16 90       	r0 = h[r9 + 22] (u)			  ## RF_ble.c:1031:38
 1e1681a:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:681:19
 1e1681e:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## RF_ble.c:681:19
 1e16822:    12 f7 08 d0       	h[r13 + 8] = r2			  ## RF_ble.c:685:23
 1e16826:    d0 fe 10 10       	r1 = r0 % r1 (u)			  ## RF_ble.c:682:17
 1e1682a:    01 fd 50 1a       	r1 = r1 | 20480			  ## RF_ble.c:688:25
 1e1682e:    11 f7 0a d0       	h[r13 + 10] = r1			  ## RF_ble.c:688:23
 1e16832:    10 f6 38 b0       	[r11 + 56] = r0			  ## RF_ble.c:691:15
 1e16836:    00 f7 16 90       	r0 = h[r9 + 22] (u)			  ## RF_ble5.c:657:21
 1e1683a:    68 5a             	h[r5 + 12] = r0			  ## RF_ble5.c:657:19
 1e1683c:    60 70             	r0 = 6			  ## RF_ble5.c:657:19
 1e1683e:    58 5e             	h[r7 + 10] = r0			  ## RF_ble5.c:657:19
 1e16840:    00 70             	r0 = 0
 1e16842:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e16846:    08 00             	csync			  ## RF_ble.c:264:5
 1e16848:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e1684c:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e1684e:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e16850:    c6 71             	r6 = 28			  ## RF_ble.c:134:17
 1e16852:    e0 fe 60 11       	r1 = r1 / r6 (s)			  ## RF_ble.c:134:17
 1e16856:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e16858:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:265:50
 1e1685c:    02 fb 05 20       	r2 = 8197 <att_ram_buffer+0x2C1 : 2005 >			  ## RF_ble.c:265:67
 1e16860:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e16862:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e16866:    01 4a             	r1 = [r5 + 0]			  ## RF_ble.c:448:37
 1e16868:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e1686c:    08 00             	csync			  ## RF_ble.c:264:5
 1e1686e:    02 f6 00 80       	r2 = [r8 + 0]			  ## RF_ble.c:134:19
 1e16872:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e16874:    a2 ba             	r2 = r5 - r2			  ## RF_ble.c:134:17
 1e16876:    e0 fe 60 22       	r2 = r2 / r6 (s)			  ## RF_ble.c:134:17
 1e1687a:    12 c1             	r2 = r2 << 4			  ## RF_ble.c:265:50
 1e1687c:    03 fb f0 03       	r3 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e16880:    52 b7             	r2 &= r3			  ## RF_ble.c:265:50
 1e16882:    03 fb 05 0c       	r3 = 3077 <BTCTLER_RAM_TOTAL+0x19 : c05 >			  ## RF_ble.c:265:67
 1e16886:    52 b6             	r2 |= r3			  ## RF_ble.c:265:67
 1e16888:    12 f6 1c a0       	[r10 + 28] = r2			  ## RF_ble.c:265:21
 1e1688c:    10 f7 58 10       	h[r1 + 88] = r0			  ## RF_ble.c:452:22
 1e16890:    00 f9 07 90       	r0 = b[r9 + 7] (u)			  ## RF_ble.c:1041:28
 1e16894:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1041:48
 1e16898:    40 0e             	r0 = r0 * r1			  ## RF_ble.c:1041:48
 1e1689a:    00 fc e2 04       	r0 = r0 + 1250			  ## RF_ble.c:1041:55
 1e1689e:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:663:25
 1e168a0:    02 d4             	r2 = r0 >> 16			  ## RF_ble.c:665:36
 1e168a2:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e168a4:    22 73             	r2 = 50			  ## RF_ble.c:666:25
 1e168a6:    12 f7 02 b0       	h[r11 + 2] = r2			  ## RF_ble.c:666:25
 1e168aa:    10 f6 3c b0       	[r11 + 60] = r0			  ## RF_ble.c:671:16
 1e168ae:    00 f7 0a 90       	r0 = h[r9 + 10] (u)			  ## RF_ble.c:1046:24
 1e168b2:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1046:45
 1e168b4:    12 70             	r2 = 1			  ## RF_ble.c:1046:5
 1e168b6:    50 08             	r0 = r5			  ## RF_ble.c:1046:5
 1e168b8:    cd 14             	call -1638 <__set_interval : 1e16254 >			  ## RF_ble.c:1046:5
 1e168ba:    91 fc 10 00       	r1 = r9 + 16			  ## RF_ble.c:1048:28
 1e168be:    40 08             	r0 = r4			  ## RF_ble.c:1048:5
 1e168c0:    2e 14             	call -1956 <__set_channel_map : 1e1611e >			  ## RF_ble.c:1048:5
 1e168c2:    00 f9 15 90       	r0 = b[r9 + 21] (u)			  ## RF_ble.c:1050:47
 1e168c6:    20 fd 1f 09       	r0 = r0 & 31			  ## RF_ble.c:1050:35
 1e168ca:    c5 fd 40 00       	r0 <= insert(r0, p:8, l:5)			  ## RF_ble.c:550:43
 1e168ce:    90 b7             	r0 |= 32768			  ## RF_ble.c:550:43
 1e168d0:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e168d4:    08 00             	csync			  ## RF_ble.c:264:5
 1e168d6:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e168da:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e168dc:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:134:17
 1e168de:    e0 fe 60 00       	r0 = r0 / r6 (s)			  ## RF_ble.c:134:17
 1e168e2:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e168e4:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e168e8:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e168ea:    01 fb 05 18       	r1 = 6149 <report_data_code_size+0x205 : 1805 >			  ## RF_ble.c:265:67
 1e168ee:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e168f0:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:265:21
 1e168f4:    02 0a             	sp += 4
 1e168f6:    1d 01             	{rets, r13-r4} = [sp++]			  ## RF_ble.c:4218:1
 1e168f8:    04 0a             	sp += 8			  ## RF_ble.c:4218:1
 1e168fa:    20 00             	rts			  ## RF_ble.c:4218:1


le_hw_upload_data:
 1e168fc:    7c 01             	[--sp] = {rets, r12-r4}			  ## RF_ble.c:2114:0
 1e168fe:    5a 0b             	sp += -332			  ## RF_ble.c:2114:0
 1e16900:    18 08             	r8 = r1			  ## RF_ble.c:2114:0
 1e16902:    06 08             	r6 = r0			  ## RF_ble.c:2114:0
 1e16904:    67 fc 50 01       	r7 = r6 + 336			  ## RF_ble.c:2114:0
 1e16908:    70 fc 38 00       	r0 = r7 + 56			  ## RF_ble.c:2119:26
 1e1690c:    bf f3 d0 7f       	call -65632 <hw_dma_pop : 1e068b0 >			  ## RF_ble.c:2119:10
 1e16910:    04 08             	r4 = r0			  ## RF_ble.c:2119:10
 1e16912:    86 28             	if (r4 == 0) goto 268 <le_hw_upload_data+0x124 : 1e16a20 >			  ## RF_ble.c:2119:10
 1e16914:    65 fc a0 01       	r5 = r6 + 416
 1e16918:    00 6a             	r0 = b[r5 + 0] (u)			  ## RF_ble.c:1701:18
 1e1691a:    75 20             	if (r0 == 0) goto 234 <le_hw_upload_data+0x10A : 1e16a06 >			  ## RF_ble.c:1701:18
 1e1691c:    a0 68             	r0 = b[r4 + 10] (u)			  ## RF_ble.c:1701:35
 1e1691e:    73 20             	if (r0 == 0) goto 230 <le_hw_upload_data+0x10A : 1e16a06 >			  ## RF_ble.c:1701:35
 1e16920:    00 70             	r0 = 0
 1e16922:    10 f5 48 01       	[sp+328] = r0			  ## RF_ble.c:1702:12
 1e16926:    10 f5 44 01       	[sp+324] = r0			  ## RF_ble.c:1702:12
 1e1692a:    10 f5 40 01       	[sp+320] = r0			  ## RF_ble.c:1702:12
 1e1692e:    10 f5 3c 01       	[sp+316] = r0			  ## RF_ble.c:1702:12
 1e16932:    c0 a1             	r0 = sp + 28			  ## RF_ble.c:1702:12
 1e16934:    01 70             	r1 = 0			  ## RF_ble.c:1704:12
 1e16936:    02 fb 13 01       	r2 = 275 <DRIVER_RAM_TOTAL+0x21 : 113 >			  ## RF_ble.c:1704:12
 1e1693a:    97 f3 d9 82       	call 3081650 <memset : 106ef0 >			  ## RF_ble.c:1704:12
 1e1693e:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1705:23
 1e16940:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:1705:23
 1e16944:    d0 f5 1b 00       	b[sp+27] = r0			  ## RF_ble.c:1705:12
 1e16948:    60 4f             	r0 = [r7 + 88]			  ## RF_ble.c:1708:29
 1e1694a:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1708:18
 1e1694e:    01 d2             	r1 = r0 >> 8			  ## RF_ble.c:1709:42
 1e16950:    d1 f5 30 01       	b[sp+304] = r1			  ## RF_ble.c:1709:18
 1e16954:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:1710:42
 1e16956:    d1 f5 31 01       	b[sp+305] = r1			  ## RF_ble.c:1710:18
 1e1695a:    01 d6             	r1 = r0 >> 24			  ## RF_ble.c:1711:42
 1e1695c:    d1 f5 32 01       	b[sp+306] = r1			  ## RF_ble.c:1711:18
 1e16960:    31 6a             	r1 = b[r5 + 3] (u)			  ## RF_ble.c:1712:29
 1e16962:    d1 f5 33 01       	b[sp+307] = r1			  ## RF_ble.c:1712:18
 1e16966:    22 6e             	r2 = b[r7 + 2] (u)			  ## RF_ble.c:1713:17
 1e16968:    72 e0 03 10       	if (r2 != 7) goto 6 <le_hw_upload_data+0x76 : 1e16972 >			  ## RF_ble.c:1713:17
 1e1696c:    91 b3             	r1 |= 128			  ## RF_ble.c:1714:22
 1e1696e:    d1 f5 33 01       	b[sp+307] = r1			  ## RF_ble.c:1714:22
 1e16972:    0b f9 0e 50       	r11 = b[r5 + 14] (u)			  ## RF_ble.c:1716:9
 1e16976:    22 6b             	r2 = b[r5 + 18] (u)			  ## RF_ble.c:1716:9
 1e16978:    c3 6a             	r3 = b[r5 + 12] (u)			  ## RF_ble.c:1716:9
 1e1697a:    09 f9 0d 50       	r9 = b[r5 + 13] (u)			  ## RF_ble.c:1716:9
 1e1697e:    36 6b             	r6 = b[r5 + 19] (u)			  ## RF_ble.c:1716:9
 1e16980:    0a f9 11 50       	r10 = b[r5 + 17] (u)			  ## RF_ble.c:1716:9
 1e16984:    01 6b             	r1 = b[r5 + 16] (u)			  ## RF_ble.c:1716:9
 1e16986:    0c f9 0f 50       	r12 = b[r5 + 15] (u)			  ## RF_ble.c:1716:9
 1e1698a:    d6 f5 3b 01       	b[sp+315] = r6			  ## RF_ble.c:1716:9
 1e1698e:    da f5 39 01       	b[sp+313] = r10			  ## RF_ble.c:1716:9
 1e16992:    d1 f5 38 01       	b[sp+312] = r1			  ## RF_ble.c:1716:9
 1e16996:    dc f5 37 01       	b[sp+311] = r12			  ## RF_ble.c:1716:9
 1e1699a:    d9 f5 35 01       	b[sp+309] = r9			  ## RF_ble.c:1716:9
 1e1699e:    d3 f5 34 01       	b[sp+308] = r3			  ## RF_ble.c:1716:9
 1e169a2:    c8 fd 40 26       	r2 <= insert(r6, p:8, l:8)			  ## RF_ble.c:1716:9
 1e169a6:    d0 fd 80 12       	r1 <= insert(r2, p:16, l:16)			  ## RF_ble.c:1716:9
 1e169aa:    09 d4             	r1 = r1 >> 16			  ## RF_ble.c:1716:9
 1e169ac:    d1 f5 3a 01       	b[sp+314] = r1			  ## RF_ble.c:1716:9
 1e169b0:    c8 fd 40 bc       	r11 <= insert(r12, p:8, l:8)			  ## RF_ble.c:1716:9
 1e169b4:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## RF_ble.c:1716:9
 1e169b8:    19 d4             	r1 = r3 >> 16			  ## RF_ble.c:1716:9
 1e169ba:    d1 f5 36 01       	b[sp+310] = r1			  ## RF_ble.c:1716:9
 1e169be:    10 80             	r0 += 1			  ## RF_ble.c:1720:30
 1e169c0:    68 4f             	[r7 + 88] = r0			  ## RF_ble.c:1720:30
 1e169c2:    f0 ef 02 10       	if (r0 != -1) goto 4 <le_hw_upload_data+0xCE : 1e169ca >			  ## RF_ble.c:1720:30
 1e169c6:    8f f3 66 65       	call 2017996 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e169ca:    a0 68             	r0 = b[r4 + 10] (u)			  ## RF_ble.c:1727:17
 1e169cc:    c0 8f             	r0 += -4			  ## RF_ble.c:1727:17
 1e169ce:    a8 68             	b[r4 + 10] = r0			  ## RF_ble.c:1727:17
 1e169d0:    11 70             	r1 = 1			  ## RF_ble.c:1728:9
 1e169d2:    59 02             	[sp+20] = r1			  ## RF_ble.c:1728:9
 1e169d4:    41 70             	r1 = 4			  ## RF_ble.c:1728:9
 1e169d6:    49 02             	[sp+16] = r1			  ## RF_ble.c:1728:9
 1e169d8:    e1 fb 3c 01       	r1 = sp + 316			  ## RF_ble.c:1728:9
 1e169dc:    39 02             	[sp+12] = r1			  ## RF_ble.c:1728:9
 1e169de:    49 99             	r9 = r4 + 20			  ## RF_ble.c:1728:67
 1e169e0:    19 f5 08 00       	[sp+8] = r9			  ## RF_ble.c:1728:9
 1e169e4:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:1728:58
 1e169e6:    18 02             	[sp+4] = r0			  ## RF_ble.c:1728:9
 1e169e8:    c6 a1             	r6 = sp + 28			  ## RF_ble.c:1728:9
 1e169ea:    70 fc 64 00       	r0 = r7 + 100			  ## RF_ble.c:1728:23
 1e169ee:    e1 fb 2f 01       	r1 = sp + 303			  ## RF_ble.c:1728:23
 1e169f2:    b2 a1             	r2 = sp + 27			  ## RF_ble.c:1728:23
 1e169f4:    13 70             	r3 = 1			  ## RF_ble.c:1728:9
 1e169f6:    0e 02             	[sp] = r6			  ## RF_ble.c:1728:9
 1e169f8:    bf f3 f0 80       	call -65056 <ccm_memory_v2 : 1e06bdc >			  ## RF_ble.c:1728:9
 1e169fc:    a2 68             	r2 = b[r4 + 10] (u)			  ## RF_ble.c:1729:30
 1e169fe:    90 08             	r0 = r9			  ## RF_ble.c:1729:9
 1e16a00:    61 08             	r1 = r6			  ## RF_ble.c:1729:9
 1e16a02:    97 f3 6f 82       	call 3081438 <memcpy : 106ee4 >			  ## RF_ble.c:1729:9
 1e16a06:    e0 4a             	r0 = [r5 + 56]			  ## RF_ble.c:2124:24
 1e16a08:    41 08             	r1 = r4			  ## RF_ble.c:2124:9
 1e16a0a:    88 00             	call r8			  ## RF_ble.c:2124:9
 1e16a0c:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:2126:19
 1e16a0e:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:2126:19
 1e16a12:    f0 8f             	r0 += -1			  ## RF_ble.c:2126:46
 1e16a14:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2126:46
 1e16a16:    20 e0 03 30       	if (r0 < 2) goto 6 <le_hw_upload_data+0x124 : 1e16a20 >			  ## RF_ble.c:2126:46
 1e16a1a:    40 08             	r0 = r4			  ## RF_ble.c:2127:13
 1e16a1c:    bf f3 12 57       	call -86492 <hw_dma_free : 1e01844 >			  ## RF_ble.c:2127:13
 1e16a20:    a6 0a             	sp += 332
 1e16a22:    5c 01             	{pc, r12-r4} = [sp++]			  ## RF_ble.c:2131:1


hw_alloc_rx:
 1e16a24:    34 00             	[--sp] = rets			  ## RF_ble.c:156:0
 1e16a26:    41 91             	r1 = r0 + 20			  ## RF_ble.c:159:53
 1e16a28:    00 70             	r0 = 0			  ## RF_ble.c:159:27
 1e16a2a:    bf f3 53 7f       	call -65882 <hw_dma_alloc : 1e068d4 >			  ## RF_ble.c:159:27
 1e16a2e:    02 08             	r2 = r0			  ## RF_ble.c:159:27
 1e16a30:    05 24             	if (r2 == 0) goto 10 <hw_alloc_rx+0x18 : 1e16a3c >			  ## RF_ble.c:159:27
 1e16a32:    60 ff 03 29 02 00 	if ((r2 & 3) == 0) goto 4 <hw_alloc_rx+0x18 : 1e16a3c >
 1e16a38:    8f f3 2d 65       	call 2017882 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e16a3c:    20 08             	r0 = r2			  ## RF_ble.c:164:5
 1e16a3e:    30 00             	pc = [sp++]			  ## RF_ble.c:164:5


__set_latency_disable:
 1e16a40:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:301:0
 1e16a42:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:302:31
 1e16a44:    12 70             	r2 = 1			  ## RF_ble.c:305:27
 1e16a46:    12 f9 57 11       	b[r1 + 343] = r2			  ## RF_ble.c:305:27
 1e16a4a:    c1 ff 64 30 00 00 	r1 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e16a50:    02 42             	r2 = [r1 + 0]			  ## RF_ble.c:134:19
 1e16a52:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e16a54:    a2 b0             	r2 = r0 - r2			  ## RF_ble.c:134:17
 1e16a56:    c3 71             	r3 = 28			  ## RF_ble.c:134:17
 1e16a58:    e0 fe 30 22       	r2 = r2 / r3 (s)			  ## RF_ble.c:134:17
 1e16a5c:    12 c1             	r2 = r2 << 4			  ## RF_ble.c:256:50
 1e16a5e:    04 fb f0 07       	r4 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:256:50
 1e16a62:    52 b9             	r2 &= r4			  ## RF_ble.c:256:50
 1e16a64:    25 99             	r5 = r4 + 18			  ## RF_ble.c:256:56
 1e16a66:    52 ba             	r2 |= r5			  ## RF_ble.c:256:56
 1e16a68:    45 fb 64 34       	r5 = r3 + 1867776			  ## RF_ble.c:256:56
 1e16a6c:    0a 4a             	[r5 + 0] = r2			  ## RF_ble.c:256:21
 1e16a6e:    08 00             	csync			  ## RF_ble.c:257:5
 1e16a70:    22 4a             	r2 = [r5 + 8]			  ## RF_ble.c:258:12
 1e16a72:    c6 ff ff f7 00 00 	r6 = 63487 <UPDATA_BREDR_BASE_BEG+0xC9F : f7ff >			  ## RF_ble.c:310:31
 1e16a78:    52 bd             	r2 &= r6			  ## RF_ble.c:310:31
 1e16a7a:    1a 4a             	[r5 + 4] = r2			  ## RF_ble.c:263:21
 1e16a7c:    08 00             	csync			  ## RF_ble.c:264:5
 1e16a7e:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e16a80:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e16a82:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e16a84:    e0 fe 30 00       	r0 = r0 / r3 (s)			  ## RF_ble.c:134:17
 1e16a88:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e16a8a:    50 b9             	r0 &= r4			  ## RF_ble.c:265:50
 1e16a8c:    51 99             	r1 = r4 + 21			  ## RF_ble.c:265:67
 1e16a8e:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e16a90:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:265:21
 1e16a92:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:313:1


ble_latency_manualhold:
 1e16a94:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:415:0
 1e16a96:    04 08             	r4 = r0			  ## RF_ble.c:415:0
 1e16a98:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:416:34
 1e16a9a:    97 f3 7f 81       	call 3080958 <local_irq_disable : 106d9c >			  ## RF_ble.c:418:5
 1e16a9e:    08 00             	csync			  ## RF_ble.c:418:5
 1e16aa0:    00 f9 56 51       	r0 = b[r5 + 342] (u)			  ## RF_ble.c:420:13
 1e16aa4:    02 20             	if (r0 == 0) goto 4 <ble_latency_manualhold+0x16 : 1e16aaa >			  ## RF_ble.c:420:13
 1e16aa6:    40 08             	r0 = r4			  ## RF_ble.c:426:5
 1e16aa8:    cb 17             	call -106 <__set_latency_disable : 1e16a40 >			  ## RF_ble.c:426:5
 1e16aaa:    15 01             	{rets, r5, r4} = [sp++]
 1e16aac:    d7 f3 74 81       	goto 3080936 <local_irq_enable : 106d98 >


le_hw_send_packet_high:
 1e16ab0:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:3864:0
 1e16ab2:    08 08             	r8 = r0			  ## RF_ble.c:3864:0
 1e16ab4:    07 40             	r7 = [r0 + 0]			  ## RF_ble.c:3865:34
 1e16ab6:    00 f7 ea 71       	r0 = h[r7 + 490] (u)
 1e16aba:    85 02             	r5 = [sp+32]
 1e16abc:    39 08             	r9 = r3
 1e16abe:    2a 08             	r10 = r2
 1e16ac0:    16 08             	r6 = r1
 1e16ac2:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet_high+0x1A : 1e16aca >
 1e16ac6:    8f f3 e6 64       	call 2017740 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e16aca:    b0 71             	r0 = 27			  ## RF_ble.c:3868:27
 1e16acc:    ab 17             	call -170 <hw_alloc_rx : 1e16a24 >			  ## RF_ble.c:3868:27
 1e16ace:    04 08             	r4 = r0			  ## RF_ble.c:3868:27
 1e16ad0:    03 38             	if (r4 != 0) goto 6 <le_hw_send_packet_high+0x28 : 1e16ad8 >			  ## RF_ble.c:3868:27
 1e16ad2:    8f f3 e0 64       	call 2017728 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e16ad6:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e16ad8:    00 70             	r0 = 0
 1e16ada:    38 48             	[r4 + 12] = r0			  ## RF_ble.c:3871:5
 1e16adc:    28 48             	[r4 + 8] = r0			  ## RF_ble.c:3871:5
 1e16ade:    18 48             	[r4 + 4] = r0			  ## RF_ble.c:3871:5
 1e16ae0:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:3871:5
 1e16ae2:    2e 48             	[r4 + 8] = r6			  ## RF_ble.c:3873:25
 1e16ae4:    f0 fd 20 0a       	r0 = r10 << 4			  ## RF_ble.c:3875:5
 1e16ae8:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:3875:5
 1e16aec:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:3875:5
 1e16aee:    ed 68             	b[r4 + 14] = r5			  ## RF_ble.c:3876:5
 1e16af0:    00 99             	r0 = r4 + 16			  ## RF_ble.c:3881:5
 1e16af2:    91 08             	r1 = r9			  ## RF_ble.c:3881:5
 1e16af4:    52 08             	r2 = r5			  ## RF_ble.c:3881:5
 1e16af6:    97 f3 f5 81       	call 3081194 <memcpy : 106ee4 >			  ## RF_ble.c:3881:5
 1e16afa:    75 fc 46 01       	r5 = r7 + 326			  ## RF_ble.c:3881:5
 1e16afe:    50 fc 4a 00       	r0 = r5 + 74			  ## RF_ble.c:3885:22
 1e16b02:    41 08             	r1 = r4			  ## RF_ble.c:3885:5
 1e16b04:    bf f3 fd 7e       	call -66054 <hw_dma_push : 1e06902 >			  ## RF_ble.c:3885:5
 1e16b08:    00 5a             	r0 = h[r5 + 0] (u)
 1e16b0a:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e16b0e:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:823:23
 1e16b12:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:823:23
 1e16b14:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet_high+0x72 : 1e16b22 >			  ## RF_ble.c:823:23
 1e16b18:    e0 71             	r0 = 30			  ## RF_ble.c:827:28
 1e16b1a:    10 f7 60 70       	h[r7 + 96] = r0			  ## RF_ble.c:827:28
 1e16b1e:    10 f7 5e 70       	h[r7 + 94] = r0			  ## RF_ble.c:828:28
 1e16b22:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:365:17
 1e16b24:    20 e0 02 80       	if (r0 > 2) goto 4 <le_hw_send_packet_high+0x7C : 1e16b2c >			  ## RF_ble.c:365:17
 1e16b28:    30 70             	r0 = 3
 1e16b2a:    a8 5a             	h[r5 + 20] = r0
 1e16b2c:    80 08             	r0 = r8			  ## RF_ble.c:3892:5
 1e16b2e:    1a 01             	{rets, r10-r4} = [sp++]			  ## RF_ble.c:3892:5
 1e16b30:    b1 1f             	goto -158 <ble_latency_manualhold : 1e16a94 >			  ## RF_ble.c:3892:5


ble_pll_comp_reset:
 1e16b32:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF_ble.c:1410:0
 1e16b38:    21 f7 0a 10       	r1 = h[r1 + 10] (s)			  ## RF_ble.c:1416:24
 1e16b3c:    61 fb 00 19       	r1 = 0 - r1			  ## RF_ble.c:1416:23
 1e16b40:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:1411:53
 1e16b42:    0a c5             	r2 = r1 << 20			  ## RF_ble.c:1416:52
 1e16b44:    03 fb c0 5d       	r3 = 24000 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x123C : 5dc0 >			  ## RF_ble.c:1416:65
 1e16b48:    e0 fe 30 22       	r2 = r2 / r3 (s)			  ## RF_ble.c:1416:65
 1e16b4c:    12 f6 24 01       	[r0 + 292] = r2			  ## RF_ble.c:1418:21
 1e16b50:    c0 ff 48 27 e1 01 	r0 = 31532872 <update_target_end+0x2518 : 1e12748 >			  ## RF_ble.c:1420:5
 1e16b56:    ff f3 26 b1       	goto -40372 <printf : 1e0cda6 >			  ## RF_ble.c:1420:5


le_hw_handler_register:
 1e16b5a:    11 f6 d8 01       	[r0 + 472] = r1			  ## RF_ble.c:4223:0
 1e16b5e:    12 f6 dc 01       	[r0 + 476] = r2			  ## RF_ble.c:4225:26
 1e16b62:    20 00             	rts			  ## RF_ble.c:4226:1


ble_hw_alloc:
 1e16b64:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:2902:0
 1e16b66:    c0 ff 64 30 00 00 	r0 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:2902:0
 1e16b6c:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2902:0
 1e16b6e:    01 50             	r1 = h[r0 + 0] (u)			  ## RF_ble.c:2907:13
 1e16b70:    07 32             	if (r1 != 0) goto 14 <ble_hw_alloc+0x1C : 1e16b80 >			  ## RF_ble.c:2907:13
 1e16b72:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:2908:35
 1e16b74:    01 70             	r1 = 0			  ## RF_ble.c:2909:13
 1e16b76:    c2 71             	r2 = 28			  ## RF_ble.c:2909:13
 1e16b78:    40 08             	r0 = r4			  ## RF_ble.c:2909:13
 1e16b7a:    97 f3 b9 81       	call 3081074 <memset : 106ef0 >			  ## RF_ble.c:2909:13
 1e16b7e:    03 38             	if (r4 != 0) goto 6 <ble_hw_alloc+0x22 : 1e16b86 >			  ## RF_ble.c:2909:13
 1e16b80:    8f f3 89 64       	call 2017554 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e16b84:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e16b86:    40 08             	r0 = r4			  ## RF_ble.c:2915:5
 1e16b88:    14 01             	{rets, r4} = [sp++]			  ## RF_ble.c:2915:5
 1e16b8a:    ff f3 d7 f8       	goto -3666 <clear_all_anchor_cnt : 1e15d3c >			  ## RF_ble.c:2915:5


hw_entity_alloc:
 1e16b8e:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:2855:0
 1e16b90:    c0 ff 64 30 00 00 	r0 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:2855:0
 1e16b96:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2855:0
 1e16b98:    54 40             	r4 = [r0 + 20]			  ## RF_ble.c:2855:0
 1e16b9a:    00 f9 5c 42       	r0 = b[r4 + 604] (u)			  ## RF_ble.c:2860:42
 1e16b9e:    0a 30             	if (r0 != 0) goto 20 <hw_entity_alloc+0x26 : 1e16bb4 >
 1e16ba0:    01 70             	r1 = 0			  ## RF_ble.c:2862:13
 1e16ba2:    02 fb 60 02       	r2 = 608 <BTCTLER_CONTROLLER_BSS_SIZE+0xA0 : 260 >			  ## RF_ble.c:2862:13
 1e16ba6:    40 08             	r0 = r4			  ## RF_ble.c:2862:13
 1e16ba8:    97 f3 a2 81       	call 3081028 <memset : 106ef0 >			  ## RF_ble.c:2862:13
 1e16bac:    10 70             	r0 = 1			  ## RF_ble.c:2863:22
 1e16bae:    10 f9 5c 42       	b[r4 + 604] = r0			  ## RF_ble.c:2863:22
 1e16bb2:    03 38             	if (r4 != 0) goto 6 <hw_entity_alloc+0x2C : 1e16bba >			  ## RF_ble.c:2863:22
 1e16bb4:    8f f3 6f 64       	call 2017502 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e16bb8:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e16bba:    40 08             	r0 = r4			  ## RF_ble.c:2872:5
 1e16bbc:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:2872:5


PHY_TO_BLE:
 1e16bbe:    34 00             	[--sp] = rets			  ## RF_ble.c:122:0
 1e16bc0:    c1 ff 64 30 00 00 	r1 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:122:0
 1e16bc6:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:122:0
 1e16bc8:    62 b0             	r2 = r0 - r1			  ## RF_ble.c:122:0
 1e16bca:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## RF_ble.c:122:0
 1e16bd0:    02 f2 02 30       	if (r2 < r0) goto 4 <PHY_TO_BLE+0x1A : 1e16bd8 >			  ## RF_ble.c:122:0
 1e16bd4:    8f f3 5f 64       	call 2017470 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e16bd8:    20 08             	r0 = r2			  ## RF_ble.c:124:5
 1e16bda:    30 00             	pc = [sp++]			  ## RF_ble.c:124:5


le_hw_standby:
 1e16bdc:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:2973:0
 1e16bde:    02 70             	r2 = 0			  ## RF_ble.c:2975:24
 1e16be0:    12 f9 52 11       	b[r1 + 338] = r2			  ## RF_ble.c:2975:24
 1e16be4:    ff f3 7b f8       	goto -3850 <ble_hw_disable : 1e15cde >			  ## RF_ble.c:2976:5


le_hw_open:
 1e16be8:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:3738:0
 1e16bea:    fc 0b             	sp += -8			  ## RF_ble.c:3738:0
 1e16bec:    bb 17             	call -138 <ble_hw_alloc : 1e16b64 >			  ## RF_ble.c:2926:10
 1e16bee:    09 08             	r9 = r0			  ## RF_ble.c:2926:10
 1e16bf0:    ce 17             	call -100 <hw_entity_alloc : 1e16b8e >			  ## RF_ble.c:2927:37
 1e16bf2:    10 f6 00 90       	[r9 + 0] = r0			  ## RF_ble.c:2927:17
 1e16bf6:    c8 ff 64 30 00 00 	r8 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:2927:17
 1e16bfc:    03 f6 00 80       	r3 = [r8 + 0]			  ## RF_ble.c:134:19
 1e16c00:    41 46             	r1 = [r3 + 16]			  ## RF_ble.c:134:35
 1e16c02:    90 fb 10 19       	r1 = r9 - r1			  ## RF_ble.c:134:17
 1e16c06:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e16c08:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e16c0c:    45 04             	r5 = r1.b0 (u)			  ## RF_ble.c:2897:5
 1e16c0e:    d7 17             	call -82 <PHY_TO_BLE : 1e16bbe >			  ## RF_ble.c:2897:45
 1e16c10:    90 b7             	r0 |= 32768			  ## RF_ble.c:2897:35
 1e16c12:    50 f8 00 35       	h[r3+r5<<1] = r0			  ## RF_ble.c:2897:33
 1e16c16:    05 f6 00 90       	r5 = [r9 + 0]			  ## RF_ble.c:1426:34
 1e16c1a:    00 70             	r0 = 0			  ## RF_ble.c:1430:20
 1e16c1c:    08 5a             	h[r5 + 0] = r0			  ## RF_ble.c:1430:20
 1e16c1e:    18 5a             	h[r5 + 2] = r0			  ## RF_ble.c:1431:20
 1e16c20:    c1 ff 88 d3 00 00 	r1 = 54152 <_nv_pre_end+0x1888 : d388 >			  ## RF_ble.c:1432:20
 1e16c26:    29 5a             	h[r5 + 4] = r1			  ## RF_ble.c:1432:20
 1e16c28:    57 fc 44 00       	r7 = r5 + 68			  ## RF_ble.c:1432:20
 1e16c2c:    28 5e             	h[r7 + 4] = r0			  ## RF_ble.c:1433:20
 1e16c2e:    00 fb e7 51       	r0 = 20967 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x663 : 51e7 >			  ## RF_ble.c:1434:20
 1e16c32:    38 5e             	h[r7 + 6] = r0			  ## RF_ble.c:1434:20
 1e16c34:    00 fc ef 6c       	r0 = r0 + 27887			  ## RF_ble.c:1443:25
 1e16c38:    58 5a             	h[r5 + 10] = r0			  ## RF_ble.c:1443:25
 1e16c3a:    00 fc b3 cf       	r0 = r0 + -12365			  ## RF_ble.c:1443:25
 1e16c3e:    68 5a             	h[r5 + 12] = r0			  ## RF_ble.c:1443:25
 1e16c40:    00 fb 55 55       	r0 = 21845 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x9D1 : 5555 >			  ## RF_ble.c:1449:22
 1e16c44:    08 5e             	h[r7 + 0] = r0			  ## RF_ble.c:1449:22
 1e16c46:    50 75             	r0 = 85			  ## RF_ble.c:1450:22
 1e16c48:    18 5e             	h[r7 + 2] = r0			  ## RF_ble.c:1450:22
 1e16c4a:    80 72             	r0 = 40			  ## RF_ble.c:1452:21
 1e16c4c:    48 5a             	h[r5 + 8] = r0			  ## RF_ble.c:1452:21
 1e16c4e:    10 70             	r0 = 1			  ## RF_ble.c:1452:21
 1e16c50:    98 5a             	h[r5 + 18] = r0			  ## RF_ble.c:1453:20
 1e16c52:    a8 5a             	h[r5 + 20] = r0			  ## RF_ble.c:1454:20
 1e16c54:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:1455:5
 1e16c56:    90 b4             	r0 |= 512			  ## RF_ble.c:1455:5
 1e16c58:    48 5a             	h[r5 + 8] = r0			  ## RF_ble.c:1455:5
 1e16c5a:    f0 5e             	r0 = h[r7 + 30] (u)			  ## RF_ble.c:1456:5
 1e16c5c:    90 b0             	r0 |= 2			  ## RF_ble.c:1456:5
 1e16c5e:    f8 5e             	h[r7 + 30] = r0			  ## RF_ble.c:1456:5
 1e16c60:    f0 5e             	r0 = h[r7 + 30] (u)			  ## RF_ble.c:1457:5
 1e16c62:    10 b1             	r0 |= 4			  ## RF_ble.c:1457:5
 1e16c64:    f8 5e             	h[r7 + 30] = r0			  ## RF_ble.c:1457:5
 1e16c66:    50 fc 64 00       	r0 = r5 + 100			  ## RF_ble.c:1457:5
 1e16c6a:    21 60             	r1 = b[r0 + 2] (u)			  ## RF_ble.c:1458:5
 1e16c6c:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:1458:5
 1e16c6e:    29 60             	b[r0 + 2] = r1			  ## RF_ble.c:1458:5
 1e16c70:    31 60             	r1 = b[r0 + 3] (u)			  ## RF_ble.c:1459:5
 1e16c72:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:1459:5
 1e16c74:    39 60             	b[r0 + 3] = r1			  ## RF_ble.c:1459:5
 1e16c76:    a2 70             	r2 = 10			  ## RF_ble.c:1459:5
 1e16c78:    51 fc cc 01       	r1 = r5 + 460
 1e16c7c:    3a 62             	b[r1 + 3] = r2			  ## analog_ble.c:225:21
 1e16c7e:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## analog_ble.c:225:21
 1e16c84:    23 f9 03 00       	r3 = b[r0 + 3] (s)			  ## analog_ble.c:248:12
 1e16c88:    c6 04             	r6 = r3.b0 (u)			  ## analog_ble.c:248:12
 1e16c8a:    96 e0 02 80       	if (r6 > 9) goto 4 <le_hw_open+0xAA : 1e16c92 >			  ## analog_ble.c:248:12
 1e16c8e:    3e 62             	b[r1 + 3] = r6			  ## analog_ble.c:250:25
 1e16c90:    32 08             	r2 = r3			  ## analog_ble.c:250:25
 1e16c92:    03 50             	r3 = h[r0 + 0] (u)			  ## analog_ble.c:254:38
 1e16c94:    1b d3             	r3 = r3 >> 12			  ## analog_ble.c:254:38
 1e16c96:    32 f2 01 b0       	ifs (r2 < r3) goto 2 <le_hw_open+0xB4 : 1e16c9c >			  ## analog_ble.c:254:38
 1e16c9a:    32 08             	r2 = r3			  ## analog_ble.c:254:19
 1e16c9c:    3a 62             	b[r1 + 3] = r2			  ## analog_ble.c:254:17
 1e16c9e:    53 fc 20 01       	r3 = r5 + 288			  ## analog_ble.c:254:17
 1e16ca2:    0a 46             	[r3 + 0] = r2			  ## analog_ble.c:261:27
 1e16ca4:    21 f7 0a 00       	r1 = h[r0 + 10] (s)			  ## RF_ble.c:1477:46
 1e16ca8:    61 fb 00 19       	r1 = 0 - r1			  ## RF_ble.c:1477:45
 1e16cac:    0a c5             	r2 = r1 << 20			  ## RF_ble.c:1475:52
 1e16cae:    c4 60             	r4 = b[r0 + 12] (u)			  ## RF_ble.c:1470:12
 1e16cb0:    00 fb c0 5d       	r0 = 24000 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x123C : 5dc0 >			  ## RF_ble.c:1475:65
 1e16cb4:    e0 fe 00 22       	r2 = r2 / r0 (s)			  ## RF_ble.c:1475:65
 1e16cb8:    06 70             	r6 = 0			  ## RF_ble.c:1475:65
 1e16cba:    00 70             	r0 = 0			  ## RF_ble.c:1475:65
 1e16cbc:    01 28             	if (r4 == 0) goto 2 <le_hw_open+0xD8 : 1e16cc0 >			  ## RF_ble.c:1475:65
 1e16cbe:    20 08             	r0 = r2			  ## RF_ble.c:1475:65
 1e16cc0:    18 46             	[r3 + 4] = r0			  ## RF_ble.c:1475:21
 1e16cc2:    12 46             	r2 = [r3 + 4]			  ## RF_ble.c:1477:69
 1e16cc4:    c0 ff 43 27 e1 01 	r0 = 31532867 <update_target_end+0x2513 : 1e12743 >			  ## RF_ble.c:1477:5
 1e16cca:    bf f3 6c b0       	call -40744 <printf : 1e0cda6 >			  ## RF_ble.c:1477:5
 1e16cce:    00 fb 01 01       	r0 = 257 <DRIVER_RAM_TOTAL+0xF : 101 >			  ## RF_ble.c:1478:24
 1e16cd2:    e8 5e             	h[r7 + 28] = r0			  ## RF_ble.c:1478:24
 1e16cd4:    10 70             	r0 = 1			  ## RF_ble.c:1479:24
 1e16cd6:    d8 5e             	h[r7 + 26] = r0			  ## RF_ble.c:1479:24
 1e16cd8:    7e 5a             	h[r5 + 14] = r6			  ## RF_ble.c:1481:19
 1e16cda:    8e 5a             	h[r5 + 16] = r6			  ## RF_ble.c:1482:19
 1e16cdc:    be 5a             	h[r5 + 22] = r6			  ## RF_ble.c:1484:21
 1e16cde:    d8 5a             	h[r5 + 26] = r0			  ## RF_ble.c:1485:21
 1e16ce0:    ce 5a             	h[r5 + 24] = r6			  ## RF_ble.c:1486:21
 1e16ce2:    e8 5a             	h[r5 + 28] = r0			  ## RF_ble.c:1487:21
 1e16ce4:    f0 7f             	r0 = 255			  ## RF_ble.c:1487:21
 1e16ce6:    b8 5b             	h[r5 + 54] = r0			  ## RF_ble.c:1489:22
 1e16ce8:    c1 ff 95 82 00 00 	r1 = 33429 <nvbss_size+0x1015 : 8295 >			  ## RF_ble.c:1490:20
 1e16cee:    c9 5e             	h[r7 + 24] = r1			  ## RF_ble.c:1490:20
 1e16cf0:    ee 5b             	h[r5 + 60] = r6			  ## RF_ble.c:1491:24
 1e16cf2:    4e 5e             	h[r7 + 8] = r6			  ## RF_ble.c:1493:24
 1e16cf4:    5e 5e             	h[r7 + 10] = r6			  ## RF_ble.c:1494:24
 1e16cf6:    6e 5e             	h[r7 + 12] = r6			  ## RF_ble.c:1495:24
 1e16cf8:    d0 f5 04 00       	b[sp+4] = r0			  ## RF_ble.c:1497:5
 1e16cfc:    f0 07             	r0 = -1			  ## RF_ble.c:1497:5
 1e16cfe:    08 02             	[sp] = r0			  ## RF_ble.c:1497:5
 1e16d00:    01 a0             	r1 = sp + 0			  ## RF_ble.c:1497:5
 1e16d02:    50 08             	r0 = r5			  ## RF_ble.c:1498:5
 1e16d04:    bf f3 0b fa       	call -3050 <__set_channel_map : 1e1611e >			  ## RF_ble.c:1498:5
 1e16d08:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:2931:13
 1e16d0c:    0e 20             	if (r0 == 0) goto 28 <le_hw_open+0x142 : 1e16d2a >			  ## RF_ble.c:2931:13
 1e16d0e:    80 72             	r0 = 40			  ## RF_ble.c:2932:29
 1e16d10:    bf f3 d7 7c       	call -67154 <btctler_nv_memory_malloc : 1e066c2 >			  ## RF_ble.c:2932:29
 1e16d14:    06 f6 00 90       	r6 = [r9 + 0]			  ## RF_ble.c:2932:13
 1e16d18:    10 f6 e4 61       	[r6 + 484] = r0			  ## RF_ble.c:2932:27
 1e16d1c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2933:9
 1e16d20:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:2933:23
 1e16d24:    11 80             	r1 += 1			  ## RF_ble.c:2933:23
 1e16d26:    11 f9 20 00       	b[r0 + 32] = r1			  ## RF_ble.c:2933:23
 1e16d2a:    60 fc 78 01       	r0 = r6 + 376
 1e16d2e:    01 91             	r1 = r0 + 16			  ## RF_ble.c:3750:20
 1e16d30:    49 40             	[r0 + 16] = r1			  ## list.h:188:16
 1e16d32:    59 40             	[r0 + 20] = r1			  ## list.h:189:16
 1e16d34:    01 fc 20 00       	r1 = r0 + 32			  ## RF_ble.c:3751:20
 1e16d38:    89 40             	[r0 + 32] = r1			  ## list.h:188:16
 1e16d3a:    99 40             	[r0 + 36] = r1			  ## list.h:189:16
 1e16d3c:    81 91             	r1 = r0 + 24			  ## RF_ble.c:3752:20
 1e16d3e:    69 40             	[r0 + 24] = r1			  ## list.h:188:16
 1e16d40:    79 40             	[r0 + 28] = r1			  ## list.h:189:16
 1e16d42:    01 70             	r1 = 0			  ## list.h:189:16
 1e16d44:    39 40             	[r0 + 12] = r1			  ## RF_ble.c:197:15
 1e16d46:    29 40             	[r0 + 8] = r1			  ## RF_ble.c:197:15
 1e16d48:    19 40             	[r0 + 4] = r1			  ## RF_ble.c:197:15
 1e16d4a:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:197:15
 1e16d4c:    90 08             	r0 = r9			  ## RF_ble.c:3757:5
 1e16d4e:    46 17             	call -372 <le_hw_standby : 1e16bdc >			  ## RF_ble.c:3757:5
 1e16d50:    90 08             	r0 = r9			  ## RF_ble.c:3760:1
 1e16d52:    04 0a             	sp += 8			  ## RF_ble.c:3760:1
 1e16d54:    59 01             	{pc, r9-r4} = [sp++]			  ## RF_ble.c:3760:1


__set_adv_channel_index:
 1e16d56:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:500:0
 1e16d58:    03 70             	r3 = 0			  ## RF_ble.c:500:0
 1e16d5a:    02 fb 00 25       	r2 = 9472 <bt_res_update_flag : 2500 >			  ## RF_ble.c:500:0
 1e16d5e:    55 72             	r5 = 37			  ## RF_ble.c:500:0
 1e16d60:    16 70             	r6 = 1			  ## RF_ble.c:500:0
 1e16d62:    04 70             	r4 = 0			  ## RF_ble.c:500:0
 1e16d64:    f8 fd 30 76       	r7 = r6 << r3			  ## RF_ble.c:507:27
 1e16d68:    17 f0 05 00       	if ((r7 & r1) == 0) goto 10 <__set_adv_channel_index+0x20 : 1e16d76 >			  ## RF_ble.c:507:27
 1e16d6c:    57 08             	r7 = r5
 1e16d6e:    60 ff ff 49 02 00 	if ((r4 & 255) == 0) goto 4 <__set_adv_channel_index+0x22 : 1e16d78 >
 1e16d74:    0a 18             	goto 20 <__set_adv_channel_index+0x34 : 1e16d8a >
 1e16d76:    47 08             	r7 = r4
 1e16d78:    15 80             	r5 += 1			  ## RF_ble.c:506:19
 1e16d7a:    13 80             	r3 += 1			  ## RF_ble.c:506:25
 1e16d7c:    22 fc 00 01       	r2 = r2 + 256			  ## RF_ble.c:506:19
 1e16d80:    74 08             	r4 = r7			  ## RF_ble.c:506:19
 1e16d82:    33 e0 ef 3f       	if (r3 < 3) goto -34 <__set_adv_channel_index+0xE : 1e16d64 >			  ## RF_ble.c:506:19
 1e16d86:    02 70             	r2 = 0
 1e16d88:    04 18             	goto 8 <__set_adv_channel_index+0x3C : 1e16d92 >
 1e16d8a:    23 c2             	r3 = r4 << 8			  ## RF_ble.c:513:17
 1e16d8c:    e2 b4             	r2 = r2 - r3			  ## RF_ble.c:513:17
 1e16d8e:    22 fd ff 2a       	r2 = r2 & 65280			  ## RF_ble.c:513:17
 1e16d92:    4b c1             	r3 = r1 << 5			  ## RF_ble.c:536:38
 1e16d94:    23 fd 80 39       	r3 = r3 & 128			  ## RF_ble.c:518:14
 1e16d98:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:535:38
 1e16d9a:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:535:38
 1e16d9e:    51 b6             	r1 |= r3			  ## RF_ble.c:534:62
 1e16da0:    31 b3             	r1 ^= 64			  ## RF_ble.c:534:62
 1e16da2:    51 b8             	r1 |= r4			  ## RF_ble.c:535:56
 1e16da4:    41 04             	r1 = r1.b0 (u)			  ## RF_ble.c:535:56
 1e16da6:    51 b4             	r1 |= r2			  ## RF_ble.c:535:56
 1e16da8:    11 b7             	r1 |= 16384			  ## RF_ble.c:535:56
 1e16daa:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e16db0:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e16db2:    08 00             	csync			  ## RF_ble.c:264:5
 1e16db4:    c1 ff 64 30 00 00 	r1 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e16dba:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e16dbc:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e16dbe:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e16dc0:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e16dc2:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e16dc6:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e16dc8:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e16dcc:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e16dce:    01 fb 05 18       	r1 = 6149 <report_data_code_size+0x205 : 1805 >			  ## RF_ble.c:265:67
 1e16dd2:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e16dd4:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e16dd6:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:539:1


hw_alloc_tx:
 1e16dd8:    34 00             	[--sp] = rets			  ## RF_ble.c:180:0
 1e16dda:    41 91             	r1 = r0 + 20			  ## RF_ble.c:184:53
 1e16ddc:    10 70             	r0 = 1			  ## RF_ble.c:184:27
 1e16dde:    bf f3 79 7d       	call -66830 <hw_dma_alloc : 1e068d4 >			  ## RF_ble.c:184:27
 1e16de2:    05 20             	if (r0 == 0) goto 10 <hw_alloc_tx+0x16 : 1e16dee >			  ## RF_ble.c:184:27
 1e16de4:    01 70             	r1 = 0			  ## RF_ble.c:187:9
 1e16de6:    39 40             	[r0 + 12] = r1			  ## RF_ble.c:187:9
 1e16de8:    29 40             	[r0 + 8] = r1			  ## RF_ble.c:187:9
 1e16dea:    19 40             	[r0 + 4] = r1			  ## RF_ble.c:187:9
 1e16dec:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:187:9
 1e16dee:    30 00             	pc = [sp++]			  ## RF_ble.c:189:5


__adv_pdu:
 1e16df0:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2984:0
 1e16df2:    36 08             	r6 = r3			  ## RF_ble.c:2984:0
 1e16df4:    14 08             	r4 = r1			  ## RF_ble.c:2984:0
 1e16df6:    62 e0 48 80       	if (r2 > 6) goto 144 <.GJTIE805_0_0_+0x82 : 1e16e8a >			  ## RF_ble.c:2984:0
 1e16dfa:    05 fc 68 01       	r5 = r0 + 360			  ## RF_ble.c:2984:0
 1e16dfe:    a2 00             	tbb [r2]			  ## RF_ble.c:2984:0


.GJTIS805_0_0_:
 1e16e00:    04     < 4 : 0x4 >
 1e16e01:    22     < 34 : 0x22 >
 1e16e02:    04     < 4 : 0x4 >
 1e16e03:    45     < 69 : 0x45 >
 1e16e04:    45     < 69 : 0x45 >
 1e16e05:    45     < 69 : 0x45 >
 1e16e06:    04     < 4 : 0x4 >
 1e16e07:    00     < 0 : 0x0 >
 1e16e08:    60 58             	r0 = h[r4 + 12] (u)			  ## RF_ble.c:2993:9
 1e16e0a:    21 fd 0f 29       	r1 = r2 & 15			  ## RF_ble.c:2994:9
 1e16e0e:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:2993:9
 1e16e12:    50 b2             	r0 |= r1			  ## RF_ble.c:2994:9
 1e16e14:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:2994:9
 1e16e16:    61 9c             	r1 = r6 + 6			  ## RF_ble.c:2995:9
 1e16e18:    e9 68             	b[r4 + 14] = r1			  ## RF_ble.c:2995:9
 1e16e1a:    81 f9 01 50       	r1 = b[r5 ++= 1] (u)			  ## RF_ble.c:2997:9
 1e16e1e:    c2 ff 8f ff 00 00 	r2 = 65423 <_IRQ_MEM_ADDR+0x8F : ff8f >			  ## RF_ble.c:2997:9
 1e16e24:    50 b5             	r0 &= r2			  ## RF_ble.c:2997:9
 1e16e26:    57 02             	r7 = [sp+20]			  ## RF_ble.c:2997:9
 1e16e28:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:2997:9
 1e16e2a:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2997:9
 1e16e2e:    50 b2             	r0 |= r1			  ## RF_ble.c:2997:9
 1e16e30:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:2997:9
 1e16e32:    00 99             	r0 = r4 + 16			  ## RF_ble.c:2998:9
 1e16e34:    62 70             	r2 = 6			  ## RF_ble.c:2998:9
 1e16e36:    51 08             	r1 = r5			  ## RF_ble.c:2998:9
 1e16e38:    97 f3 54 80       	call 3080360 <memcpy : 106ee4 >			  ## RF_ble.c:2998:9
 1e16e3c:    60 99             	r0 = r4 + 22			  ## RF_ble.c:3000:25
 1e16e3e:    71 08             	r1 = r7			  ## RF_ble.c:3000:9
 1e16e40:    62 08             	r2 = r6			  ## RF_ble.c:3000:9
 1e16e42:    21 18             	goto 66 <.GJTIE805_0_0_+0x7E : 1e16e86 >			  ## RF_ble.c:3000:9
 1e16e44:    60 58             	r0 = h[r4 + 12] (u)			  ## RF_ble.c:3007:9
 1e16e46:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3007:9
 1e16e4a:    10 b0             	r0 |= 1			  ## RF_ble.c:3007:9
 1e16e4c:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:3008:9
 1e16e4e:    c1 70             	r1 = 12			  ## RF_ble.c:3008:9
 1e16e50:    e9 68             	b[r4 + 14] = r1			  ## RF_ble.c:3009:9
 1e16e52:    01 6a             	r1 = b[r5 + 0] (u)			  ## RF_ble.c:3011:9
 1e16e54:    30 fd 7e 09       	r0 = r0 & 4294967169			  ## RF_ble.c:3011:9
 1e16e58:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3011:9
 1e16e5a:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3011:9
 1e16e5e:    e0 fd 00 61       	r6 = r1 | r0			  ## RF_ble.c:3011:9
 1e16e62:    6e 58             	h[r4 + 12] = r6			  ## RF_ble.c:3011:9
 1e16e64:    00 99             	r0 = r4 + 16			  ## RF_ble.c:3012:9
 1e16e66:    11 9a             	r1 = r5 + 1			  ## RF_ble.c:3012:9
 1e16e68:    62 70             	r2 = 6			  ## RF_ble.c:3012:9
 1e16e6a:    97 f3 3b 80       	call 3080310 <memcpy : 106ee4 >			  ## RF_ble.c:3012:9
 1e16e6e:    70 6a             	r0 = b[r5 + 7] (u)			  ## RF_ble.c:3014:9
 1e16e70:    c1 ff 41 ff 00 00 	r1 = 65345 <_IRQ_MEM_ADDR+0x41 : ff41 >			  ## RF_ble.c:3014:9
 1e16e76:    51 bd             	r1 &= r6			  ## RF_ble.c:3014:9
 1e16e78:    c0 c1             	r0 = r0 << 7			  ## RF_ble.c:3014:9
 1e16e7a:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:3014:9
 1e16e7c:    50 b2             	r0 |= r1			  ## RF_ble.c:3014:9
 1e16e7e:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:3014:9
 1e16e80:    60 99             	r0 = r4 + 22			  ## RF_ble.c:3015:25
 1e16e82:    81 9a             	r1 = r5 + 8			  ## RF_ble.c:3015:9
 1e16e84:    62 70             	r2 = 6			  ## RF_ble.c:3015:9
 1e16e86:    97 f3 2d 80       	call 3080282 <memcpy : 106ee4 >
 1e16e8a:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:3018:1


ble_hw_tx:
 1e16e8c:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:220:0
 1e16e8e:    15 08             	r5 = r1			  ## RF_ble.c:220:0
 1e16e90:    03 08             	r3 = r0			  ## RF_ble.c:220:0
 1e16e92:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:220:0
 1e16e94:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:222:34
 1e16e96:    24 08             	r4 = r2
 1e16e98:    07 28             	if (r4 == 0) goto 14 <ble_hw_tx+0x1C : 1e16ea8 >
 1e16e9a:    0d 20             	if (r0 == 0) goto 26 <ble_hw_tx+0x2A : 1e16eb6 >
 1e16e9c:    00 9b             	r0 = r5 + 16			  ## RF_ble.c:234:44
 1e16e9e:    8f 16             	call -738 <PHY_TO_BLE : 1e16bbe >			  ## RF_ble.c:234:33
 1e16ea0:    a8 5c             	h[r6 + 20] = r0			  ## RF_ble.c:234:31
 1e16ea2:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:235:9
 1e16ea4:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:235:9
 1e16ea6:    08 18             	goto 16 <ble_hw_tx+0x2C : 1e16eb8 >			  ## RF_ble.c:235:9
 1e16ea8:    1d 20             	if (r0 == 0) goto 58 <ble_hw_tx+0x58 : 1e16ee4 >
 1e16eaa:    00 9b             	r0 = r5 + 16			  ## RF_ble.c:227:44
 1e16eac:    88 16             	call -752 <PHY_TO_BLE : 1e16bbe >			  ## RF_ble.c:227:33
 1e16eae:    98 5c             	h[r6 + 18] = r0			  ## RF_ble.c:227:31
 1e16eb0:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:228:9
 1e16eb2:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:228:9
 1e16eb4:    18 18             	goto 48 <ble_hw_tx+0x5A : 1e16ee6 >			  ## RF_ble.c:228:9
 1e16eb6:    00 70             	r0 = 0
 1e16eb8:    61 5a             	r1 = h[r5 + 12] (u)			  ## RF_ble.c:236:35
 1e16eba:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:236:72
 1e16ebe:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:236:41
 1e16ec0:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:236:47
 1e16ec4:    51 b4             	r1 |= r2			  ## RF_ble.c:236:66
 1e16ec6:    c9 5c             	h[r6 + 24] = r1			  ## RF_ble.c:236:28
 1e16ec8:    e1 5c             	r1 = h[r6 + 28] (u)			  ## RF_ble.c:237:25
 1e16eca:    62 5a             	r2 = h[r5 + 12] (u)			  ## RF_ble.c:238:52
 1e16ecc:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:237:14
 1e16ed0:    50 b2             	r0 |= r1			  ## RF_ble.c:238:45
 1e16ed2:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:238:55
 1e16ed4:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:238:55
 1e16ed8:    50 b2             	r0 |= r1			  ## RF_ble.c:238:61
 1e16eda:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:238:72
 1e16ede:    50 b2             	r0 |= r1			  ## RF_ble.c:238:66
 1e16ee0:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:238:28
 1e16ee2:    16 18             	goto 44 <ble_hw_tx+0x84 : 1e16f10 >			  ## RF_ble.c:238:28
 1e16ee4:    00 70             	r0 = 0
 1e16ee6:    61 5a             	r1 = h[r5 + 12] (u)			  ## RF_ble.c:229:35
 1e16ee8:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:229:72
 1e16eec:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:229:41
 1e16eee:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:229:47
 1e16ef2:    51 b4             	r1 |= r2			  ## RF_ble.c:229:66
 1e16ef4:    b9 5c             	h[r6 + 22] = r1			  ## RF_ble.c:229:28
 1e16ef6:    d1 5c             	r1 = h[r6 + 26] (u)			  ## RF_ble.c:230:25
 1e16ef8:    62 5a             	r2 = h[r5 + 12] (u)			  ## RF_ble.c:231:52
 1e16efa:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:230:14
 1e16efe:    50 b2             	r0 |= r1			  ## RF_ble.c:231:45
 1e16f00:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:231:55
 1e16f02:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:231:55
 1e16f06:    50 b2             	r0 |= r1			  ## RF_ble.c:231:61
 1e16f08:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:231:72
 1e16f0c:    50 b2             	r0 |= r1			  ## RF_ble.c:231:66
 1e16f0e:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:231:28
 1e16f10:    80 67             	r0 = b[r3 + 24] (u)			  ## RF_ble.c:244:17
 1e16f12:    09 20             	if (r0 == 0) goto 18 <ble_hw_tx+0x9A : 1e16f26 >			  ## RF_ble.c:244:17
 1e16f14:    09 28             	if (r4 == 0) goto 18 <ble_hw_tx+0x9C : 1e16f28 >
 1e16f16:    e0 5c             	r0 = h[r6 + 28] (u)			  ## RF_ble.c:246:9
 1e16f18:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:246:9
 1e16f1a:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:246:9
 1e16f1c:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:246:9
 1e16f1e:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:246:9
 1e16f22:    50 b2             	r0 |= r1			  ## RF_ble.c:246:9
 1e16f24:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:246:9
 1e16f26:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:248:1
 1e16f28:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:245:26
 1e16f2a:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:245:26
 1e16f2c:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:245:26
 1e16f2e:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:245:26
 1e16f30:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:245:26
 1e16f34:    50 b2             	r0 |= r1			  ## RF_ble.c:245:26
 1e16f36:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:245:26
 1e16f38:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:248:1


ble_power_get:
 1e16f3a:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:670:0
 1e16f3c:    04 08             	r4 = r0			  ## le_low_power.c:670:0
 1e16f3e:    00 71             	r0 = 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:684:13
 1e16f40:    bf f3 67 b4       	call -38706 <malloc : 1e0d812 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:684:13
 1e16f44:    0f 20             	if (r0 == 0) goto 30 <ble_power_get+0x2A : 1e16f64 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:685:9
 1e16f46:    c1 ff ac 5c e1 01 	r1 = 31546540 <ble_power_ops : 1e15cac >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:690:16
 1e16f4c:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:690:16
 1e16f4e:    2c 40             	[r0 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:691:17
 1e16f50:    c1 ff 80 48 00 00 	r1 = 18560 <tws_sync_channel_end : 4880 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:154:28
 1e16f56:    12 42             	r2 = [r1 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:154:28
 1e16f58:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:137:16
 1e16f5a:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:138:16
 1e16f5c:    1a 40             	[r0 + 4] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:139:16
 1e16f5e:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:140:16
 1e16f60:    58 48             	[r4 + 20] = r0			  ## le_low_power.c:672:20
 1e16f62:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:675:1
 1e16f64:    8f f3 97 62       	call 2016558 <p33_soft_reset : 3496 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e16f68:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:672:20
 1e16f6c:    14 01             	{rets, r4} = [sp++]			  ## cpu.h:148:5
 1e16f6e:    cf f3 92 62       	goto 2016548 <p33_soft_reset : 3496 >			  ## cpu.h:148:5


check_event_pending:
 1e16f72:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:4353:0
 1e16f74:    01 70             	r1 = 0			  ## RF_ble.c:4353:0
 1e16f76:    c2 ff 28 80 1c 00 	r2 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >			  ## RF_ble.c:4353:0
 1e16f7c:    10 70             	r0 = 1			  ## RF_ble.c:4353:0
 1e16f7e:    04 44             	r4 = [r2 + 0]			  ## RF_ble.c:4356:13
 1e16f80:    25 44             	r5 = [r2 + 8]			  ## RF_ble.c:4356:29
 1e16f82:    f8 fd 10 30       	r3 = r0 << r1			  ## RF_ble.c:4356:44
 1e16f86:    54 b7             	r4 &= r3			  ## RF_ble.c:4356:42
 1e16f88:    54 f1 09 00       	if ((r4 & r5) != 0) goto 18 <check_event_pending+0x2C : 1e16f9e >			  ## RF_ble.c:4356:42
 1e16f8c:    94 44             	r4 = [r2 + 36]			  ## RF_ble.c:4359:13
 1e16f8e:    a5 44             	r5 = [r2 + 40]			  ## RF_ble.c:4359:29
 1e16f90:    53 b9             	r3 &= r4			  ## RF_ble.c:4359:42
 1e16f92:    53 f1 04 00       	if ((r3 & r5) != 0) goto 8 <check_event_pending+0x2C : 1e16f9e >			  ## RF_ble.c:4359:42
 1e16f96:    11 80             	r1 += 1			  ## RF_ble.c:4355:39
 1e16f98:    71 e0 f1 9f       	if (r1 <= 7) goto -30 <check_event_pending+0xC : 1e16f7e >			  ## RF_ble.c:4355:39
 1e16f9c:    00 70             	r0 = 0
 1e16f9e:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:4364:1


le_hw_suspend:
 1e16fa0:    34 00             	[--sp] = rets			  ## RF_ble.c:3703:0
 1e16fa2:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3704:13
 1e16fa4:    02 f9 53 11       	r2 = b[r1 + 339] (u)			  ## RF_ble.c:3704:22
 1e16fa8:    12 e0 0b 00       	if (r2 == 1) goto 22 <le_hw_suspend+0x22 : 1e16fc2 >			  ## RF_ble.c:3704:22
 1e16fac:    32 e0 04 10       	if (r2 != 3) goto 8 <le_hw_suspend+0x18 : 1e16fb8 >
 1e16fb0:    80 76             	r0 = 104			  ## RF_ble.c:3710:9
 1e16fb2:    88 01             	{rets} = [sp++]			  ## RF_ble.c:3710:9
 1e16fb4:    ff f3 75 b0       	goto -40726 <putchar : 1e0d0a2 >			  ## RF_ble.c:3710:9
 1e16fb8:    12 70             	r2 = 1			  ## RF_ble.c:3715:28
 1e16fba:    12 f9 53 11       	b[r1 + 339] = r2			  ## RF_ble.c:3715:28
 1e16fbe:    bf f3 8e f6       	call -4836 <ble_hw_disable : 1e15cde >			  ## RF_ble.c:3716:5
 1e16fc2:    30 00             	pc = [sp++]			  ## RF_ble.c:3717:1


ble_slot_schedule:
 1e16fc4:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF_ble.c:4385:0
 1e16fc6:    cd ff 64 30 00 00 	r13 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:4385:0
 1e16fcc:    0b f6 00 d0       	r11 = [r13 + 0]			  ## RF_ble.c:4395:9
 1e16fd0:    00 f9 20 b0       	r0 = b[r11 + 32] (u)			  ## RF_ble.c:4395:17
 1e16fd4:    20 e0 9c 30       	if (r0 < 2) goto 312 <.GJTIE810_0_0_+0xE8 : 1e17110 >			  ## RF_ble.c:4395:17
 1e16fd8:    f5 07             	r5 = -1
 1e16fda:    07 70             	r7 = 0
 1e16fdc:    18 70             	r8 = 1
 1e16fde:    c9 ff 1c 80 1c 00 	r9 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e16fe4:    ca 71             	r10 = 28
 1e16fe6:    06 70             	r6 = 0			  ## RF_ble.c:134:19
 1e16fe8:    0e 70             	r14 = 0			  ## RF_ble.c:134:19
 1e16fea:    ff 07             	r15 = -1			  ## RF_ble.c:134:19
 1e16fec:    04 18             	goto 8 <ble_slot_schedule+0x32 : 1e16ff6 >			  ## RF_ble.c:134:19
 1e16fee:    0b f6 00 d0       	r11 = [r13 + 0]
 1e16ff2:    c7 81             	r7 += 28			  ## RF_ble.c:4400:5
 1e16ff4:    26 80             	r6 += 2			  ## RF_ble.c:4400:5
 1e16ff6:    00 f8 00 b6       	r0 = h[r11+r6] (u)			  ## RF_ble.c:4401:13
 1e16ffa:    4f 20             	if (r0 == 0) goto 158 <.GJTIE810_0_0_+0x72 : 1e1709a >			  ## RF_ble.c:4401:13
 1e16ffc:    0c f6 10 b0       	r12 = [r11 + 16]			  ## RF_ble.c:4402:35
 1e17000:    80 fb 70 4c       	r4 = r12 + r7			  ## RF_ble.c:4407:29
 1e17004:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4407:29
 1e17006:    4c 20             	if (r0 == 0) goto 152 <.GJTIE810_0_0_+0x78 : 1e170a0 >			  ## RF_ble.c:4407:29
 1e17008:    00 f9 52 01       	r0 = b[r0 + 338] (u)			  ## RF_ble.c:4410:23
 1e1700c:    f8 fd 00 18       	r1 = r8 << r0			  ## RF_ble.c:4410:23
 1e17010:    e4 fd 00 2e       	r2 = r14.b0 (u)			  ## RF_ble.c:4410:20
 1e17014:    f0 8f             	r0 += -1			  ## RF_ble.c:4411:13
 1e17016:    e0 fd 20 e1       	r14 = r1 | r2			  ## RF_ble.c:4410:20
 1e1701a:    60 e0 3e 80       	if (r0 > 6) goto 124 <.GJTIE810_0_0_+0x72 : 1e1709a >			  ## RF_ble.c:4410:20
 1e1701e:    a0 00             	tbb [r0]


.GJTIS810_0_0_:
 1e17020:    37     < 55 : 0x37 >
 1e17021:    04     < 4 : 0x4 >
 1e17022:    37     < 55 : 0x37 >
 1e17023:    3d     < 61 : 0x3D >
 1e17024:    3d     < 61 : 0x3D >
 1e17025:    04     < 4 : 0x4 >
 1e17026:    04     < 4 : 0x4 >
 1e17027:    00     < 0 : 0x0 >
 1e17028:    00 f6 1c 90       	r0 = [r9 + 28]			  ## RF_ble.c:4371:10
 1e1702c:    05 70             	r5 = 0			  ## RF_ble.c:4371:10
 1e1702e:    21 f3 34 00       	if ((r0 & 2) != 0) goto 104 <.GJTIE810_0_0_+0x72 : 1e1709a >			  ## RF_ble.c:4371:10
 1e17032:    9f 17             	call -194 <check_event_pending : 1e16f72 >			  ## RF_ble.c:4371:39
 1e17034:    32 30             	if (r0 != 0) goto 100 <.GJTIE810_0_0_+0x72 : 1e1709a >			  ## RF_ble.c:4371:39
 1e17036:    00 f6 10 b0       	r0 = [r11 + 16]			  ## RF_ble.c:134:35
 1e1703a:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e1703c:    e0 fe a0 00       	r0 = r0 / r10 (s)			  ## RF_ble.c:134:17
 1e17040:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:256:50
 1e17042:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:256:50
 1e17046:    90 b0             	r0 |= 2			  ## RF_ble.c:256:56
 1e17048:    10 f6 00 90       	[r9 + 0] = r0			  ## RF_ble.c:256:21
 1e1704c:    08 00             	csync			  ## RF_ble.c:257:5
 1e1704e:    00 f6 08 90       	r0 = [r9 + 8]			  ## RF_ble.c:258:12
 1e17052:    01 f6 00 d0       	r1 = [r13 + 0]			  ## RF_ble.c:134:19
 1e17056:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e17058:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e1705a:    e0 fe a0 11       	r1 = r1 / r10 (s)			  ## RF_ble.c:134:17
 1e1705e:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:256:50
 1e17060:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:256:50
 1e17064:    51 b5             	r1 &= r2			  ## RF_ble.c:256:50
 1e17066:    02 fb 02 38       	r2 = 14338 <.GJTIE114_0_0_+0x194 : 3802 >			  ## RF_ble.c:256:56
 1e1706a:    51 b4             	r1 |= r2			  ## RF_ble.c:256:56
 1e1706c:    11 f6 00 90       	[r9 + 0] = r1			  ## RF_ble.c:256:21
 1e17070:    08 00             	csync			  ## RF_ble.c:257:5
 1e17072:    01 f6 08 90       	r1 = [r9 + 8]			  ## RF_ble.c:258:12
 1e17076:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:4375:40
 1e17078:    09 c4             	r1 = r1 << 16			  ## RF_ble.c:4376:51
 1e1707a:    21 fd ff 1b       	r1 = r1 & 16711680			  ## RF_ble.c:4376:51
 1e1707e:    51 b0             	r1 |= r0			  ## RF_ble.c:4376:10
 1e17080:    10 fc fd ff       	r0 = r1 + -3			  ## RF_ble.c:4379:44
 1e17084:    11 80             	r1 += 1			  ## RF_ble.c:4377:9
 1e17086:    41 e0 08 30       	if (r1 < 4) goto 16 <.GJTIE810_0_0_+0x72 : 1e1709a >
 1e1708a:    05 08             	r5 = r0			  ## RF_ble.c:4379:12
 1e1708c:    06 18             	goto 12 <.GJTIE810_0_0_+0x72 : 1e1709a >			  ## RF_ble.c:4379:12
 1e1708e:    40 08             	r0 = r4
 1e17090:    87 17             	call -242 <le_hw_suspend : 1e16fa0 >
 1e17092:    80 f6 00 c7       	r0 = [r12+r7]
 1e17096:    05 f7 58 02       	r5 = h[r0 + 600] (u)
 1e1709a:    5f f2 01 30       	if (r15 < r5) goto 2 <.GJTIE810_0_0_+0x78 : 1e170a0 >
 1e1709e:    5f 08             	r15 = r5			  ## RF_ble.c:4427:21
 1e170a0:    e6 e0 a5 1f       	if (r6 != 14) goto -182 <ble_slot_schedule+0x2A : 1e16fee >
 1e170a4:    20 fd 0a e9       	r0 = r14 & 10			  ## RF_ble.c:4431:5
 1e170a8:    c1 ff 74 0f 00 00 	r1 = 3956 <ble_slot_schedule.credits : f74 >			  ## RF_ble.c:4431:5
 1e170ae:    20 e0 08 00       	if (r0 == 2) goto 16 <.GJTIE810_0_0_+0x9A : 1e170c2 >			  ## RF_ble.c:4431:5
 1e170b2:    80 e0 08 00       	if (r0 == 8) goto 16 <.GJTIE810_0_0_+0x9E : 1e170c6 >
 1e170b6:    a0 e0 0a 10       	if (r0 != 10) goto 20 <.GJTIE810_0_0_+0xA6 : 1e170ce >
 1e170ba:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4439:20
 1e170bc:    38 70             	r8 = 3			  ## RF_ble.c:4439:19
 1e170be:    12 e0 03 00       	if (r2 == 1) goto 6 <.GJTIE810_0_0_+0xA0 : 1e170c8 >			  ## RF_ble.c:4439:19
 1e170c2:    18 70             	r8 = 1
 1e170c4:    01 18             	goto 2 <.GJTIE810_0_0_+0xA0 : 1e170c8 >
 1e170c6:    38 70             	r8 = 3
 1e170c8:    18 f9 00 10       	b[r1 + 0] = r8
 1e170cc:    02 18             	goto 4 <.GJTIE810_0_0_+0xAA : 1e170d2 >
 1e170ce:    08 f9 00 10       	r8 = b[r1 + 0] (u)
 1e170d2:    01 f6 00 d0       	r1 = [r13 + 0]
 1e170d6:    02 70             	r2 = 0
 1e170d8:    13 08             	r3 = r1
 1e170da:    04 70             	r4 = 0
 1e170dc:    85 f7 02 30       	r5 = h[r3 ++= 2] (u)			  ## RF_ble.c:4445:13
 1e170e0:    13 2a             	if (r5 == 0) goto 38 <.GJTIE810_0_0_+0xE0 : 1e17108 >			  ## RF_ble.c:4445:13
 1e170e2:    45 42             	r5 = [r1 + 16]			  ## RF_ble.c:4446:35
 1e170e4:    87 f6 00 52       	r7 = [r5+r2]			  ## RF_ble.c:4447:29
 1e170e8:    0f 2e             	if (r7 == 0) goto 30 <.GJTIE810_0_0_+0xE0 : 1e17108 >			  ## RF_ble.c:4447:29
 1e170ea:    76 fc 58 02       	r6 = r7 + 600
 1e170ee:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:4457:30
 1e170f0:    0f f2 0a 30       	if (r15 < r0) goto 20 <.GJTIE810_0_0_+0xE0 : 1e17108 >			  ## RF_ble.c:4457:30
 1e170f4:    07 f9 52 71       	r7 = b[r7 + 338] (u)			  ## RF_ble.c:4458:35
 1e170f8:    17 e0 02 10       	if (r7 != 1) goto 4 <.GJTIE810_0_0_+0xD8 : 1e17100 >			  ## RF_ble.c:4458:35
 1e170fc:    18 e0 09 00       	if (r8 == 1) goto 18 <.GJTIE810_0_0_+0xEA : 1e17112 >
 1e17100:    37 e0 02 10       	if (r7 != 3) goto 4 <.GJTIE810_0_0_+0xE0 : 1e17108 >
 1e17104:    38 e0 05 00       	if (r8 == 3) goto 10 <.GJTIE810_0_0_+0xEA : 1e17112 >
 1e17108:    14 80             	r4 += 1			  ## RF_ble.c:4444:39
 1e1710a:    c2 81             	r2 += 28			  ## RF_ble.c:4444:19
 1e1710c:    84 e0 e6 3f       	if (r4 < 8) goto -52 <.GJTIE810_0_0_+0xB4 : 1e170dc >			  ## RF_ble.c:4444:19
 1e17110:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF_ble.c:4471:1
 1e17112:    11 5c             	r1 = h[r6 + 2] (u)
 1e17114:    80 ba             	r0 = r5 + r2
 1e17116:    1f 01             	{rets, r15-r4} = [sp++]
 1e17118:    ff f3 bd f6       	goto -4742 <le_hw_resume : 1e15e96 >


le_hw_advertising:
 1e1711c:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:3138:0
 1e1711e:    fe 0b             	sp += -4			  ## RF_ble.c:3138:0
 1e17120:    05 08             	r5 = r0			  ## RF_ble.c:3138:0
 1e17122:    0a f6 00 50       	r10 = [r5 + 0]			  ## RF_ble.c:3139:31
 1e17126:    a7 fc 10 01       	r7 = r10 + 272
 1e1712a:    b2 5f             	r2 = h[r7 + 54] (u)
 1e1712c:    16 08             	r6 = r1
 1e1712e:    30 fd 1f 2a       	r0 = r2 & 4294959359			  ## RF_ble.c:823:23
 1e17132:    00 fd 1a 0a       	r0 = r0 | 6656			  ## RF_ble.c:823:23
 1e17136:    b8 5f             	h[r7 + 54] = r0			  ## RF_ble.c:823:23
 1e17138:    a0 fc 44 00       	r0 = r10 + 68			  ## RF_ble.c:823:23
 1e1713c:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <le_hw_advertising+0x2A : 1e17146 >			  ## RF_ble.c:823:23
 1e17140:    a1 71             	r1 = 26			  ## RF_ble.c:827:28
 1e17142:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:827:28
 1e17144:    d9 50             	h[r0 + 26] = r1			  ## RF_ble.c:828:28
 1e17146:    01 fb 55 55       	r1 = 21845 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x9D1 : 5555 >			  ## RF_ble.c:3160:22
 1e1714a:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:3160:22
 1e1714c:    51 75             	r1 = 85			  ## RF_ble.c:3161:22
 1e1714e:    19 50             	h[r0 + 2] = r1			  ## RF_ble.c:3161:22
 1e17150:    20 73             	r0 = 50			  ## RF_ble.c:3161:22
 1e17152:    10 f7 22 a0       	h[r10 + 34] = r0			  ## RF_ble.c:663:25
 1e17156:    04 70             	r4 = 0			  ## RF_ble.c:663:25
 1e17158:    14 f7 24 a0       	h[r10 + 36] = r4			  ## RF_ble.c:665:25
 1e1715c:    18 5e             	h[r7 + 2] = r0			  ## RF_ble.c:666:25
 1e1715e:    f8 4e             	[r7 + 60] = r0			  ## RF_ble.c:671:16
 1e17160:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:3164:24
 1e17162:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:3164:38
 1e17166:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:3164:38
 1e17168:    12 70             	r2 = 1			  ## RF_ble.c:3164:5
 1e1716a:    50 08             	r0 = r5			  ## RF_ble.c:3164:5
 1e1716c:    bf f3 72 f8       	call -3868 <__set_interval : 1e16254 >			  ## RF_ble.c:3164:5
 1e17170:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:435:31
 1e17172:    21 70             	r1 = 2
 1e17174:    00 fc 52 01       	r0 = r0 + 338
 1e17178:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:437:22
 1e1717a:    3c 50             	h[r0 + 6] = r4			  ## RF_ble.c:439:22
 1e1717c:    2c 50             	h[r0 + 4] = r4			  ## RF_ble.c:439:22
 1e1717e:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:439:22
 1e17184:    c1 f4 20 0a       	[r0 + 4] = 8192			  ## RF_ble.c:263:21
 1e17188:    08 00             	csync			  ## RF_ble.c:264:5
 1e1718a:    c9 ff 64 30 00 00 	r9 = 12388 <bb_hdl : 3064 >
 1e17190:    01 f6 00 90       	r1 = [r9 + 0]			  ## RF_ble.c:134:19
 1e17194:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e17196:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e17198:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e1719a:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e1719e:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e171a0:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e171a4:    51 b5             	r1 &= r2			  ## RF_ble.c:265:50
 1e171a6:    52 81             	r2 += 21			  ## RF_ble.c:265:67
 1e171a8:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e171aa:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:265:21
 1e171ac:    62 6c             	r2 = b[r6 + 6] (u)			  ## RF_ble.c:3167:44
 1e171ae:    01 4a             	r1 = [r5 + 0]			  ## RF_ble.c:1565:37
 1e171b0:    32 e0 05 00       	if (r2 == 3) goto 10 <le_hw_advertising+0xA2 : 1e171be >			  ## RF_ble.c:1569:5
 1e171b4:    22 e0 06 00       	if (r2 == 2) goto 12 <le_hw_advertising+0xA8 : 1e171c4 >
 1e171b8:    12 e0 02 00       	if (r2 == 1) goto 4 <le_hw_advertising+0xA4 : 1e171c0 >
 1e171bc:    04 18             	goto 8 <le_hw_advertising+0xAA : 1e171c6 >
 1e171be:    04 71             	r4 = 16
 1e171c0:    82 70             	r2 = 8
 1e171c2:    02 18             	goto 4 <le_hw_advertising+0xAC : 1e171c8 >
 1e171c4:    04 71             	r4 = 16
 1e171c6:    02 70             	r2 = 0
 1e171c8:    e3 53             	r3 = h[r1 + 60] (u)			  ## RF_ble.c:1592:35
 1e171ca:    23 fd f7 39       	r3 = r3 & 247			  ## RF_ble.c:1592:46
 1e171ce:    52 b6             	r2 |= r3			  ## RF_ble.c:1592:54
 1e171d0:    ea 53             	h[r1 + 60] = r2			  ## RF_ble.c:1592:24
 1e171d2:    e2 53             	r2 = h[r1 + 60] (u)			  ## RF_ble.c:1595:35
 1e171d4:    22 fd ef 29       	r2 = r2 & 239			  ## RF_ble.c:1595:46
 1e171d8:    52 b8             	r2 |= r4			  ## RF_ble.c:1595:54
 1e171da:    ea 53             	h[r1 + 60] = r2			  ## RF_ble.c:1595:24
 1e171dc:    11 5c             	r1 = h[r6 + 2] (u)			  ## RF_ble.c:3169:54
 1e171de:    42 6c             	r2 = b[r6 + 4] (u)			  ## RF_ble.c:3169:27
 1e171e0:    03 fb 71 02       	r3 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:3169:67
 1e171e4:    c9 0e             	r1 = r1 * r3			  ## RF_ble.c:3169:67
 1e171e6:    92 c3             	r2 = r2 << 14			  ## RF_ble.c:3169:40
 1e171e8:    51 b4             	r1 |= r2			  ## RF_ble.c:3169:47
 1e171ea:    11 f7 04 a0       	h[r10 + 4] = r1			  ## RF_ble.c:3169:24
 1e171ee:    71 6c             	r1 = b[r6 + 7] (u)			  ## RF_ble.c:3175:14
 1e171f0:    21 e0 14 00       	if (r1 == 2) goto 40 <le_hw_advertising+0x100 : 1e1721c >			  ## RF_ble.c:3175:14
 1e171f4:    01 5c             	r1 = h[r6 + 0] (u)			  ## RF_ble.c:3176:18
 1e171f6:    b1 e0 11 30       	if (r1 < 11) goto 34 <le_hw_advertising+0x100 : 1e1721c >			  ## RF_ble.c:3176:18
 1e171fa:    c1 f4 c0 0a       	[r0 + 4] = 49152			  ## RF_ble.c:263:21
 1e171fe:    08 00             	csync			  ## RF_ble.c:264:5
 1e17200:    01 f6 00 90       	r1 = [r9 + 0]			  ## RF_ble.c:134:19
 1e17204:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e17206:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e17208:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e1720a:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e1720e:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e17210:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:265:50
 1e17214:    02 fb 05 20       	r2 = 8197 <att_ram_buffer+0x2C1 : 2005 >			  ## RF_ble.c:265:67
 1e17218:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e1721a:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:265:21
 1e1721c:    51 6c             	r1 = b[r6 + 5] (u)			  ## RF_ble.c:3180:5
 1e1721e:    50 08             	r0 = r5			  ## RF_ble.c:3180:5
 1e17220:    9a 15             	call -1228 <__set_adv_channel_index : 1e16d56 >			  ## RF_ble.c:3180:5
 1e17222:    f0 7f             	r0 = 255			  ## RF_ble.c:3182:18
 1e17224:    bf f3 fe fb       	call -2052 <hw_alloc_rx : 1e16a24 >			  ## RF_ble.c:3182:18
 1e17228:    a8 4f             	[r7 + 104] = r0			  ## RF_ble.c:3182:16
 1e1722a:    f0 7f             	r0 = 255			  ## RF_ble.c:3183:18
 1e1722c:    bf f3 fa fb       	call -2060 <hw_alloc_rx : 1e16a24 >			  ## RF_ble.c:3183:18
 1e17230:    b8 4f             	[r7 + 108] = r0			  ## RF_ble.c:3183:16
 1e17232:    e8 07             	r8 = -2			  ## RF_ble.c:3183:16
 1e17234:    6f 20             	if (r0 == 0) goto 222 <le_hw_advertising+0x1F8 : 1e17314 >			  ## RF_ble.c:3183:16
 1e17236:    a0 4f             	r0 = [r7 + 104]			  ## RF_ble.c:3184:10
 1e17238:    6d 20             	if (r0 == 0) goto 218 <le_hw_advertising+0x1F8 : 1e17314 >
 1e1723a:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:202:34
 1e1723c:    40 81             	r0 += 20
 1e1723e:    bf 14             	call -1666 <PHY_TO_BLE : 1e16bbe >			  ## RF_ble.c:205:29
 1e17240:    f8 56             	h[r3 + 30] = r0			  ## RF_ble.c:205:27
 1e17242:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:202:34
 1e17244:    b0 4f             	r0 = [r7 + 108]			  ## RF_ble.c:3193:19
 1e17246:    40 81             	r0 += 20
 1e17248:    ba 14             	call -1676 <PHY_TO_BLE : 1e16bbe >			  ## RF_ble.c:205:29
 1e1724a:    08 57             	h[r3 + 32] = r0			  ## RF_ble.c:207:27
 1e1724c:    50 72             	r0 = 37			  ## RF_ble.c:3196:18
 1e1724e:    c4 15             	call -1144 <hw_alloc_tx : 1e16dd8 >			  ## RF_ble.c:3196:18
 1e17250:    c8 4f             	[r7 + 112] = r0			  ## RF_ble.c:3196:16
 1e17252:    50 72             	r0 = 37			  ## RF_ble.c:3197:18
 1e17254:    c1 15             	call -1150 <hw_alloc_tx : 1e16dd8 >			  ## RF_ble.c:3197:18
 1e17256:    d8 4f             	[r7 + 116] = r0			  ## RF_ble.c:3197:16
 1e17258:    5d 20             	if (r0 == 0) goto 186 <le_hw_advertising+0x1F8 : 1e17314 >			  ## RF_ble.c:3197:16
 1e1725a:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3198:10
 1e1725c:    5b 22             	if (r1 == 0) goto 182 <le_hw_advertising+0x1F8 : 1e17314 >			  ## RF_ble.c:3198:10
 1e1725e:    a4 fc 0c 02       	r4 = r10 + 524
 1e17262:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3203:5
 1e17264:    72 6c             	r2 = b[r6 + 7] (u)			  ## RF_ble.c:3203:5
 1e17266:    38 98             	r8 = r4 + 3			  ## RF_ble.c:3203:61
 1e17268:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3203:5
 1e1726c:    a0 08             	r0 = r10			  ## RF_ble.c:3203:5
 1e1726e:    c0 15             	call -1152 <__adv_pdu : 1e16df0 >			  ## RF_ble.c:3203:5
 1e17270:    70 6c             	r0 = b[r6 + 7] (u)			  ## RF_ble.c:3204:14
 1e17272:    d6 4f             	r6 = [r7 + 116]			  ## RF_ble.c:3204:14
 1e17274:    10 e0 08 10       	if (r0 != 1) goto 16 <le_hw_advertising+0x16C : 1e17288 >			  ## RF_ble.c:3204:9
 1e17278:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3205:9
 1e1727a:    12 70             	r2 = 1			  ## RF_ble.c:3205:9
 1e1727c:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3205:9
 1e17280:    a0 08             	r0 = r10			  ## RF_ble.c:3205:9
 1e17282:    61 08             	r1 = r6			  ## RF_ble.c:3205:9
 1e17284:    b5 15             	call -1174 <__adv_pdu : 1e16df0 >			  ## RF_ble.c:3205:9
 1e17286:    21 18             	goto 66 <le_hw_advertising+0x1AE : 1e172ca >			  ## RF_ble.c:3205:9
 1e17288:    60 5c             	r0 = h[r6 + 12] (u)			  ## RF_ble.c:3059:5
 1e1728a:    08 f9 2e a2       	r8 = b[r10 + 558] (u)			  ## RF_ble.c:3207:46
 1e1728e:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3059:5
 1e17292:    10 b1             	r0 |= 4			  ## RF_ble.c:3059:5
 1e17294:    68 5c             	h[r6 + 12] = r0			  ## RF_ble.c:3060:5
 1e17296:    81 fc 06 00       	r1 = r8 + 6			  ## RF_ble.c:3061:5
 1e1729a:    e9 6c             	b[r6 + 14] = r1			  ## RF_ble.c:3061:5
 1e1729c:    01 f9 68 a1       	r1 = b[r10 + 360] (u)			  ## RF_ble.c:3064:5
 1e172a0:    c2 ff 84 ff 00 00 	r2 = 65412 <_IRQ_MEM_ADDR+0x84 : ff84 >			  ## RF_ble.c:3064:5
 1e172a6:    50 b5             	r0 &= r2			  ## RF_ble.c:3064:5
 1e172a8:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3064:5
 1e172aa:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3064:5
 1e172ae:    50 b2             	r0 |= r1			  ## RF_ble.c:3064:5
 1e172b0:    68 5c             	h[r6 + 12] = r0			  ## RF_ble.c:3064:5
 1e172b2:    00 9d             	r0 = r6 + 16			  ## RF_ble.c:3065:5
 1e172b4:    71 fc 59 00       	r1 = r7 + 89			  ## RF_ble.c:3065:5
 1e172b8:    62 70             	r2 = 6			  ## RF_ble.c:3065:5
 1e172ba:    97 f3 13 7e       	call 3079206 <memcpy : 106ee4 >			  ## RF_ble.c:3065:5
 1e172be:    60 9d             	r0 = r6 + 22			  ## RF_ble.c:3066:21
 1e172c0:    41 fc 23 00       	r1 = r4 + 35			  ## RF_ble.c:3207:60
 1e172c4:    82 08             	r2 = r8			  ## RF_ble.c:3066:5
 1e172c6:    97 f3 0d 7e       	call 3079194 <memcpy : 106ee4 >			  ## RF_ble.c:3066:5
 1e172ca:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3213:19
 1e172cc:    02 70             	r2 = 0			  ## RF_ble.c:3213:5
 1e172ce:    08 70             	r8 = 0			  ## RF_ble.c:3213:5
 1e172d0:    50 08             	r0 = r5			  ## RF_ble.c:3213:5
 1e172d2:    dc 15             	call -1096 <ble_hw_tx : 1e16e8c >			  ## RF_ble.c:3213:5
 1e172d4:    d1 4f             	r1 = [r7 + 116]			  ## RF_ble.c:3214:19
 1e172d6:    12 70             	r2 = 1			  ## RF_ble.c:3214:5
 1e172d8:    50 08             	r0 = r5			  ## RF_ble.c:3214:5
 1e172da:    d8 15             	call -1104 <ble_hw_tx : 1e16e8c >			  ## RF_ble.c:3214:5
 1e172dc:    18 f9 4e a2       	b[r10 + 590] = r8			  ## RF_ble.c:3216:21
 1e172e0:    00 f7 08 a0       	r0 = h[r10 + 8] (u)			  ## RF_ble.c:1084:21
 1e172e4:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1084:21
 1e172e6:    10 f7 08 a0       	h[r10 + 8] = r0			  ## RF_ble.c:1084:21
 1e172ea:    50 08             	r0 = r5			  ## RF_ble.c:3231:5
 1e172ec:    26 16             	call -948 <ble_power_get : 1e16f3a >			  ## RF_ble.c:3231:5
 1e172ee:    50 08             	r0 = r5			  ## RF_ble.c:613:5
 1e172f0:    bf f3 47 f5       	call -5490 <__set_ble_hw_irq_init : 1e15d82 >			  ## RF_ble.c:613:5
 1e172f4:    11 70             	r1 = 1			  ## RF_ble.c:614:5
 1e172f6:    50 08             	r0 = r5			  ## RF_ble.c:614:5
 1e172f8:    bf f3 76 f5       	call -5396 <__set_anchor_cnt : 1e15de8 >			  ## RF_ble.c:614:5
 1e172fc:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:3235:9
 1e17300:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:3235:17
 1e17304:    20 e0 01 30       	if (r0 < 2) goto 2 <le_hw_advertising+0x1EE : 1e1730a >			  ## RF_ble.c:3235:17
 1e17308:    5d 16             	call -838 <ble_slot_schedule : 1e16fc4 >			  ## RF_ble.c:3236:9
 1e1730a:    00 f7 06 a0       	r0 = h[r10 + 6] (u)			  ## RF_ble.c:3239:24
 1e1730e:    10 b1             	r0 |= 4			  ## RF_ble.c:3239:24
 1e17310:    10 f7 06 a0       	h[r10 + 6] = r0			  ## RF_ble.c:3239:24
 1e17314:    80 08             	r0 = r8			  ## RF_ble.c:3243:1
 1e17316:    02 0a             	sp += 4			  ## RF_ble.c:3243:1
 1e17318:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:3243:1


__get_ble_anchor_con:
 1e1731a:    c2 ff 64 30 00 00 	r2 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:255:0
 1e17320:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:134:19
 1e17322:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e17324:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:134:17
 1e17326:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e17328:    e0 fe 20 00       	r0 = r0 / r2 (s)			  ## RF_ble.c:134:17
 1e1732c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:256:50
 1e1732e:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:256:50
 1e17332:    89 c2             	r1 = r1 << 10			  ## RF_ble.c:256:30
 1e17334:    50 b2             	r0 |= r1			  ## RF_ble.c:256:56
 1e17336:    90 b0             	r0 |= 2			  ## RF_ble.c:256:56
 1e17338:    41 fb 64 24       	r1 = r2 + 1867776			  ## RF_ble.c:256:56
 1e1733c:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:256:21
 1e1733e:    08 00             	csync			  ## RF_ble.c:257:5
 1e17340:    20 42             	r0 = [r1 + 8]			  ## RF_ble.c:258:12
 1e17342:    20 00             	rts			  ## RF_ble.c:258:5


__get_clkn:
 1e17344:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:49:0
 1e17346:    03 08             	r3 = r0			  ## le_low_power.c:49:0
 1e17348:    01 70             	r1 = 0			  ## le_low_power.c:50:13
 1e1734a:    e7 17             	call -50 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:50:13
 1e1734c:    24 04             	r4 = r0.l (u)			  ## le_low_power.c:50:41
 1e1734e:    e1 70             	r1 = 14			  ## le_low_power.c:50:54
 1e17350:    30 08             	r0 = r3			  ## le_low_power.c:50:54
 1e17352:    e3 17             	call -58 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:50:54
 1e17354:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:50:91
 1e17356:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:50:91
 1e1735a:    50 b8             	r0 |= r4			  ## le_low_power.c:50:51
 1e1735c:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:50:5


ble_event_irq_handler:
 1e1735e:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:2755:0
 1e17360:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## RF_ble.c:2756:9
 1e17364:    c8 ff 64 30 00 00 	r8 = 12388 <bb_hdl : 3064 >
 1e1736a:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2762:15
 1e1736e:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:2762:31
 1e17370:    cc ff 0c 80 1c 00 	r12 = 1867788 <uECC_vli_cmp_unsafe+0xC1010 : 1c800c >
 1e17376:    00 f6 1c c0       	r0 = [r12 + 28]			  ## RF_ble.c:2763:13
 1e1737a:    01 f6 24 c0       	r1 = [r12 + 36]			  ## RF_ble.c:2763:28
 1e1737e:    50 b3             	r0 &= r1			  ## RF_ble.c:2763:26
 1e17380:    00 f3 34 02       	if ((r0 & 1) == 0) goto 1128 <ble_event_irq_handler+0x48E : 1e177ec >			  ## RF_ble.c:2763:26
 1e17384:    08 f4 01 c9       	[r12 + 32] |= 1			  ## RF_ble.c:2764:26
 1e17388:    10 48             	r0 = [r4 + 4]			  ## RF_ble5.c:185:18
 1e1738a:    9a 30             	if (r0 != 0) goto 308 <ble_event_irq_handler+0x162 : 1e174c0 >			  ## RF_ble5.c:185:18
 1e1738c:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:2619:34
 1e1738e:    98 2c             	if (r6 == 0) goto 304 <ble_event_irq_handler+0x162 : 1e174c0 >
 1e17390:    65 fc d8 01       	r5 = r6 + 472
 1e17394:    e0 6b             	r0 = b[r5 + 30] (u)			  ## RF_ble.c:2631:13
 1e17396:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x3E : 1e1739c >			  ## RF_ble.c:2631:13
 1e17398:    f0 8f             	r0 += -1			  ## RF_ble.c:2632:24
 1e1739a:    e8 6b             	b[r5 + 30] = r0			  ## RF_ble.c:2632:24
 1e1739c:    67 fc 44 01       	r7 = r6 + 324
 1e173a0:    e0 6e             	r0 = b[r7 + 14] (u)			  ## RF_ble.c:2637:14
 1e173a2:    69 fc 58 00       	r9 = r6 + 88			  ## RF_ble.c:2637:14
 1e173a6:    70 e0 63 00       	if (r0 == 7) goto 198 <ble_event_irq_handler+0x112 : 1e17470 >			  ## RF_ble.c:2637:14
 1e173aa:    60 e0 59 00       	if (r0 == 6) goto 178 <ble_event_irq_handler+0x102 : 1e17460 >
 1e173ae:    20 e0 87 10       	if (r0 != 2) goto 270 <ble_event_irq_handler+0x162 : 1e174c0 >
 1e173b2:    0a f7 0e 60       	r10 = h[r6 + 14] (u)			  ## RF_ble.c:2644:21
 1e173b6:    6b fc 4c 02       	r11 = r6 + 588
 1e173ba:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3041:13
 1e173be:    00 f3 1a 00       	if ((r0 & 1) == 0) goto 52 <ble_event_irq_handler+0x98 : 1e173f6 >			  ## RF_ble.c:3041:13
 1e173c2:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:3043:31
 1e173c4:    62 52             	r2 = h[r1 + 12] (u)			  ## RF_ble.c:3023:13
 1e173c6:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3023:5
 1e173ca:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0x92 : 1e173f0 >			  ## RF_ble.c:3023:5
 1e173ce:    13 70             	r3 = 1
 1e173d0:    f8 fd 20 23       	r2 = r3 << r2
 1e173d4:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0x92 : 1e173f0 >
 1e173da:    02 f9 0e 62       	r2 = b[r6 + 526] (u)			  ## RF_ble.c:3043:60
 1e173de:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3027:9
 1e173e0:    e8 62             	b[r1 + 14] = r0			  ## RF_ble.c:3027:9
 1e173e2:    60 93             	r0 = r1 + 22			  ## RF_ble.c:3029:25
 1e173e4:    51 fc 37 00       	r1 = r5 + 55			  ## RF_ble.c:3043:42
 1e173e8:    97 f3 7c 7d       	call 3078904 <memcpy : 106ee4 >			  ## RF_ble.c:3029:9
 1e173ec:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3029:9
 1e173f0:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:3045:24
 1e173f2:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3045:24
 1e173f6:    2a fd 01 a9       	r10 = r10 & 1			  ## RF_ble.c:2644:27
 1e173fa:    01 f3 1a 00       	if ((r0 & 2) == 0) goto 52 <ble_event_irq_handler+0xD4 : 1e17432 >			  ## RF_ble.c:2644:27
 1e173fe:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:3050:31
 1e17400:    62 52             	r2 = h[r1 + 12] (u)			  ## RF_ble.c:3023:13
 1e17402:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3023:5
 1e17406:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0xCE : 1e1742c >			  ## RF_ble.c:3023:5
 1e1740a:    13 70             	r3 = 1
 1e1740c:    f8 fd 20 23       	r2 = r3 << r2
 1e17410:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0xCE : 1e1742c >
 1e17416:    02 f9 2e 62       	r2 = b[r6 + 558] (u)			  ## RF_ble.c:3050:65
 1e1741a:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3027:9
 1e1741c:    e8 62             	b[r1 + 14] = r0			  ## RF_ble.c:3027:9
 1e1741e:    60 93             	r0 = r1 + 22			  ## RF_ble.c:3029:25
 1e17420:    51 fc 57 00       	r1 = r5 + 87			  ## RF_ble.c:3050:42
 1e17424:    97 f3 5e 7d       	call 3078844 <memcpy : 106ee4 >			  ## RF_ble.c:3029:9
 1e17428:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3029:9
 1e1742c:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:3052:24
 1e1742e:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3052:24
 1e17432:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:2652:27
 1e17434:    40 08             	r0 = r4			  ## RF_ble.c:2652:9
 1e17436:    a2 08             	r2 = r10			  ## RF_ble.c:2652:9
 1e17438:    29 15             	call -1454 <ble_hw_tx : 1e16e8c >			  ## RF_ble.c:2652:9
 1e1743a:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:2653:27
 1e1743c:    12 fd 01 a9       	r2 = r10 ^ 1			  ## RF_ble.c:2653:38
 1e17440:    40 08             	r0 = r4			  ## RF_ble.c:2653:9
 1e17442:    24 15             	call -1464 <ble_hw_tx : 1e16e8c >			  ## RF_ble.c:2653:9
 1e17444:    10 5e             	r0 = h[r7 + 2] (u)
 1e17446:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e1744a:    01 fd 1a 1a       	r1 = r1 | 6656			  ## RF_ble.c:823:23
 1e1744e:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:823:23
 1e17450:    2d f3 36 00       	if ((r0 & 8192) != 0) goto 108 <ble_event_irq_handler+0x162 : 1e174c0 >			  ## RF_ble.c:823:23
 1e17454:    a0 71             	r0 = 26			  ## RF_ble.c:827:28
 1e17456:    10 f7 08 90       	h[r9 + 8] = r0			  ## RF_ble.c:827:28
 1e1745a:    10 f7 06 90       	h[r9 + 6] = r0			  ## RF_ble.c:828:28
 1e1745e:    30 18             	goto 96 <ble_event_irq_handler+0x162 : 1e174c0 >			  ## RF_ble.c:828:28
 1e17460:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2677:17
 1e17462:    06 20             	if (r0 == 0) goto 12 <ble_event_irq_handler+0x112 : 1e17470 >			  ## RF_ble.c:2677:17
 1e17464:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2677:41
 1e17466:    04 26             	if (r3 == 0) goto 8 <ble_event_irq_handler+0x112 : 1e17470 >			  ## RF_ble.c:2677:41
 1e17468:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2678:50
 1e1746a:    a2 5d             	r2 = h[r6 + 52] (u)			  ## RF_ble.c:2678:76
 1e1746c:    11 70             	r1 = 1			  ## RF_ble.c:2678:13
 1e1746e:    83 00             	call r3			  ## RF_ble.c:2678:13
 1e17470:    90 6f             	r0 = b[r7 + 25] (u)			  ## RF_ble.c:2683:21
 1e17472:    1d 20             	if (r0 == 0) goto 58 <ble_event_irq_handler+0x150 : 1e174ae >			  ## RF_ble.c:2683:21
 1e17474:    00 f7 00 90       	r0 = h[r9 + 0] (u)			  ## RF_ble.c:2684:43
 1e17478:    d1 5e             	r1 = h[r7 + 26] (u)			  ## RF_ble.c:2685:31
 1e1747a:    d0 b1             	r0 = ~r0			  ## RF_ble.c:2685:39
 1e1747c:    10 09             	r0 += r1			  ## RF_ble.c:2686:32
 1e1747e:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2686:32
 1e17480:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0xD7E : 7ffe >			  ## RF_ble.c:2686:32
 1e17484:    10 f2 13 30       	if (r0 < r1) goto 38 <ble_event_irq_handler+0x150 : 1e174ae >			  ## RF_ble.c:2686:32
 1e17488:    30 72             	r0 = 35			  ## RF_ble.c:2687:21
 1e1748a:    bf f3 0a ae       	call -41964 <putchar : 1e0d0a2 >			  ## RF_ble.c:2687:21
 1e1748e:    00 70             	r0 = 0			  ## RF_ble.c:2687:21
 1e17490:    98 6f             	b[r7 + 25] = r0			  ## RF_ble.c:2688:39
 1e17492:    d8 5e             	h[r7 + 26] = r0			  ## RF_ble.c:2689:33
 1e17494:    10 5e             	r0 = h[r7 + 2] (u)
 1e17496:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e1749a:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:823:23
 1e1749e:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:823:23
 1e174a0:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <ble_event_irq_handler+0x150 : 1e174ae >			  ## RF_ble.c:823:23
 1e174a4:    c0 71             	r0 = 28			  ## RF_ble.c:827:28
 1e174a6:    10 f7 08 90       	h[r9 + 8] = r0			  ## RF_ble.c:827:28
 1e174aa:    10 f7 06 90       	h[r9 + 6] = r0			  ## RF_ble.c:828:28
 1e174ae:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2693:21
 1e174b0:    07 20             	if (r0 == 0) goto 14 <ble_event_irq_handler+0x162 : 1e174c0 >			  ## RF_ble.c:2693:21
 1e174b2:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2693:45
 1e174b4:    05 26             	if (r3 == 0) goto 10 <ble_event_irq_handler+0x162 : 1e174c0 >			  ## RF_ble.c:2693:45
 1e174b6:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2694:54
 1e174b8:    02 f7 00 90       	r2 = h[r9 + 0] (u)			  ## RF_ble.c:2694:78
 1e174bc:    01 70             	r1 = 0			  ## RF_ble.c:2694:17
 1e174be:    83 00             	call r3			  ## RF_ble.c:2694:17
 1e174c0:    81 15             	call -1278 <ble_slot_schedule : 1e16fc4 >			  ## RF_ble.c:2779:13
 1e174c2:    01 48             	r1 = [r4 + 0]			  ## RF_ble.c:846:34
 1e174c4:    01 e0 8e 01       	if (r1 == 0) goto 796 <ble_event_irq_handler+0x486 : 1e177e4 >
 1e174c8:    10 fc 44 01       	r0 = r1 + 324
 1e174cc:    e2 60             	r2 = b[r0 + 14] (u)			  ## RF_ble.c:852:20
 1e174ce:    72 b0             	r2 &= 4294967294			  ## RF_ble.c:856:32
 1e174d0:    62 e0 45 10       	if (r2 != 6) goto 138 <ble_event_irq_handler+0x200 : 1e1755e >			  ## RF_ble.c:856:32
 1e174d4:    12 50             	r2 = h[r0 + 2] (u)			  ## RF_ble.c:858:23
 1e174d6:    85 fd 40 32       	r3 = uextra(r2, p:8, l:5)			  ## RF_ble.c:858:23
 1e174da:    21 f3 0a 20       	if ((r2 & 2) != 0) goto 20 <ble_event_irq_handler+0x194 : 1e174f2 >			  ## RF_ble.c:858:23
 1e174de:    35 fd fc 29       	r5 = r2 & 4294967043			  ## RF_ble.c:866:34
 1e174e2:    42 80             	r2 += 4			  ## RF_ble.c:866:34
 1e174e4:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:866:34
 1e174e8:    52 ba             	r2 |= r5			  ## RF_ble.c:866:34
 1e174ea:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:866:34
 1e174ec:    e3 e1 04 10       	if (r3 != 30) goto 8 <ble_event_irq_handler+0x19A : 1e174f8 >			  ## RF_ble.c:866:34
 1e174f0:    36 18             	goto 108 <ble_event_irq_handler+0x200 : 1e1755e >			  ## RF_ble.c:866:34
 1e174f2:    32 fd fc 29       	r2 = r2 & 4294967043			  ## RF_ble.c:863:35
 1e174f6:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:863:35
 1e174f8:    25 61             	r5 = b[r0 + 18] (u)			  ## RF_ble.c:874:17
 1e174fa:    c1 85             	r1 += 92			  ## RF_ble.c:874:17
 1e174fc:    02 2a             	if (r5 == 0) goto 4 <ble_event_irq_handler+0x1A4 : 1e17502 >
 1e174fe:    35 61             	r5 = b[r0 + 19] (u)			  ## RF_ble.c:874:35
 1e17500:    21 2a             	if (r5 == 0) goto 66 <ble_event_irq_handler+0x1E6 : 1e17544 >			  ## RF_ble.c:874:35
 1e17502:    35 41             	r5 = [r0 + 76]			  ## list.h:124:18
 1e17504:    06 fc 4c 00       	r6 = r0 + 76			  ## RF_ble.c:884:31
 1e17508:    65 f2 1f 10       	if (r5 != r6) goto 62 <ble_event_irq_handler+0x1EC : 1e1754a >
 1e1750c:    61 ff f0 29 1c 00 	if ((r2 & 240) != 0) goto 56 <ble_event_irq_handler+0x1EC : 1e1754a >
 1e17512:    55 41             	r5 = [r0 + 84]			  ## list.h:124:18
 1e17514:    06 fc 54 00       	r6 = r0 + 84			  ## RF_ble.c:911:31
 1e17518:    65 f2 7c 01       	if (r5 == r6) goto 760 <ble_event_irq_handler+0x4B6 : 1e17814 >			  ## RF_ble.c:911:13
 1e1751c:    33 fd 1f 2a       	r3 = r2 & 4294959359			  ## RF_ble.c:823:23
 1e17520:    03 fd 1c 3a       	r3 = r3 | 7168			  ## RF_ble.c:823:23
 1e17524:    1b 50             	h[r0 + 2] = r3			  ## RF_ble.c:823:23
 1e17526:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x1D2 : 1e17530 >			  ## RF_ble.c:823:23
 1e1752a:    c5 71             	r5 = 28			  ## RF_ble.c:827:28
 1e1752c:    2d 52             	h[r1 + 4] = r5			  ## RF_ble.c:827:28
 1e1752e:    1d 52             	h[r1 + 2] = r5			  ## RF_ble.c:828:28
 1e17530:    c1 ff 03 fc 00 00 	r1 = 64515 <boot_arg_list+0x3 : fc03 >			  ## RF_ble.c:913:34
 1e17536:    51 b7             	r1 &= r3			  ## RF_ble.c:913:34
 1e17538:    42 80             	r2 += 4			  ## RF_ble.c:913:34
 1e1753a:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:913:34
 1e1753e:    51 b4             	r1 |= r2			  ## RF_ble.c:913:34
 1e17540:    19 50             	h[r0 + 2] = r1			  ## RF_ble.c:913:34
 1e17542:    0d 18             	goto 26 <ble_event_irq_handler+0x200 : 1e1755e >			  ## RF_ble.c:913:34
 1e17544:    60 ff fc 29 0a 00 	if ((r2 & 252) == 0) goto 20 <ble_event_irq_handler+0x200 : 1e1755e >
 1e1754a:    33 fd 1f 2a       	r3 = r2 & 4294959359
 1e1754e:    03 fd 1e 3a       	r3 = r3 | 7680
 1e17552:    1b 50             	h[r0 + 2] = r3
 1e17554:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x200 : 1e1755e >
 1e17558:    e0 71             	r0 = 30
 1e1755a:    28 52             	h[r1 + 4] = r0
 1e1755c:    18 52             	h[r1 + 2] = r0
 1e1755e:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:376:34
 1e17560:    00 e0 40 01       	if (r0 == 0) goto 640 <ble_event_irq_handler+0x486 : 1e177e4 >
 1e17564:    00 fc 44 01       	r0 = r0 + 324
 1e17568:    e1 60             	r1 = b[r0 + 14] (u)			  ## RF_ble.c:381:20
 1e1756a:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:383:32
 1e1756c:    61 e0 6e 10       	if (r1 != 6) goto 220 <ble_event_irq_handler+0x2EE : 1e1764c >			  ## RF_ble.c:383:32
 1e17570:    21 61             	r1 = b[r0 + 18] (u)			  ## RF_ble.c:384:17
 1e17572:    6c 22             	if (r1 == 0) goto 216 <ble_event_irq_handler+0x2EE : 1e1764c >			  ## RF_ble.c:384:17
 1e17574:    f1 40             	r1 = [r0 + 60]			  ## RF_ble.c:388:14
 1e17576:    03 32             	if (r1 != 0) goto 6 <ble_event_irq_handler+0x220 : 1e1757e >			  ## RF_ble.c:388:14
 1e17578:    01 41             	r1 = [r0 + 64]			  ## RF_ble.c:388:37
 1e1757a:    01 e0 1a 01       	if (r1 == 0) goto 564 <ble_event_irq_handler+0x454 : 1e177b2 >			  ## RF_ble.c:388:37
 1e1757e:    b1 50             	r1 = h[r0 + 22] (u)			  ## RF_ble.c:365:17
 1e17580:    65 91             	r5 = r0 + 22			  ## RF_ble.c:365:17
 1e17582:    21 e0 02 80       	if (r1 > 2) goto 4 <ble_event_irq_handler+0x22C : 1e1758a >			  ## RF_ble.c:365:17
 1e17586:    31 70             	r1 = 3
 1e17588:    b9 50             	h[r0 + 22] = r1
 1e1758a:    00 5a             	r0 = h[r5 + 0] (u)			  ## RF_ble.c:400:17
 1e1758c:    06 20             	if (r0 == 0) goto 12 <ble_event_irq_handler+0x23C : 1e1759a >			  ## RF_ble.c:400:13
 1e1758e:    f0 8f             	r0 += -1			  ## RF_ble.c:401:25
 1e17590:    08 5a             	h[r5 + 0] = r0			  ## RF_ble.c:401:25
 1e17592:    40 08             	r0 = r4			  ## RF_ble.c:403:13
 1e17594:    bf f3 54 fa       	call -2904 <__set_latency_disable : 1e16a40 >			  ## RF_ble.c:403:13
 1e17598:    59 18             	goto 178 <ble_event_irq_handler+0x2EE : 1e1764c >			  ## RF_ble.c:403:13
 1e1759a:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:317:31
 1e1759c:    01 70             	r1 = 0
 1e1759e:    02 fc 46 01       	r2 = r0 + 326
 1e175a2:    19 65             	b[r2 + 17] = r1			  ## RF_ble.c:322:27
 1e175a4:    01 54             	r1 = h[r2 + 0] (u)
 1e175a6:    33 fd 1f 1a       	r3 = r1 & 4294959359			  ## RF_ble.c:823:23
 1e175aa:    03 fd 1e 3a       	r3 = r3 | 7680			  ## RF_ble.c:823:23
 1e175ae:    0b 54             	h[r2 + 0] = r3			  ## RF_ble.c:823:23
 1e175b0:    2d f3 05 10       	if ((r1 & 8192) != 0) goto 10 <ble_event_irq_handler+0x260 : 1e175be >			  ## RF_ble.c:823:23
 1e175b4:    e1 71             	r1 = 30			  ## RF_ble.c:827:28
 1e175b6:    11 f7 60 00       	h[r0 + 96] = r1			  ## RF_ble.c:827:28
 1e175ba:    11 f7 5e 00       	h[r0 + 94] = r1			  ## RF_ble.c:828:28
 1e175be:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e175c2:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e175c4:    21 b8             	r1 = r4 - r0			  ## RF_ble.c:134:17
 1e175c6:    c0 71             	r0 = 28			  ## RF_ble.c:134:17
 1e175c8:    e0 fe 00 11       	r1 = r1 / r0 (s)			  ## RF_ble.c:134:17
 1e175cc:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:256:50
 1e175ce:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:256:50
 1e175d2:    51 b5             	r1 &= r2			  ## RF_ble.c:256:50
 1e175d4:    23 95             	r3 = r2 + 18			  ## RF_ble.c:256:56
 1e175d6:    51 b6             	r1 |= r3			  ## RF_ble.c:256:56
 1e175d8:    11 f6 10 c0       	[r12 + 16] = r1			  ## RF_ble.c:256:21
 1e175dc:    08 00             	csync			  ## RF_ble.c:257:5
 1e175de:    01 f6 18 c0       	r1 = [r12 + 24]			  ## RF_ble.c:258:12
 1e175e2:    c3 ff ff f7 00 00 	r3 = 63487 <UPDATA_BREDR_BASE_BEG+0xC9F : f7ff >			  ## RF_ble.c:336:33
 1e175e8:    51 b7             	r1 &= r3			  ## RF_ble.c:336:33
 1e175ea:    91 b5             	r1 |= 2048			  ## RF_ble.c:336:33
 1e175ec:    11 f6 14 c0       	[r12 + 20] = r1			  ## RF_ble.c:263:21
 1e175f0:    08 00             	csync			  ## RF_ble.c:264:5
 1e175f2:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e175f6:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e175f8:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e175fa:    e0 fe 00 11       	r1 = r1 / r0 (s)			  ## RF_ble.c:134:17
 1e175fe:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e17600:    52 b3             	r2 &= r1			  ## RF_ble.c:265:50
 1e17602:    03 fb 05 08       	r3 = 2053 <report_mmu_tlb_size+0x5 : 805 >			  ## RF_ble.c:265:67
 1e17606:    52 b6             	r2 |= r3			  ## RF_ble.c:265:67
 1e17608:    12 f6 10 c0       	[r12 + 16] = r2			  ## RF_ble.c:265:21
 1e1760c:    21 fd 3f 10       	r1 = r1 & 3056			  ## RF_ble.c:256:50
 1e17610:    02 fb 02 24       	r2 = 9218 <g_auto_shutdown_timer : 2402 >			  ## RF_ble.c:256:56
 1e17614:    51 b4             	r1 |= r2			  ## RF_ble.c:256:56
 1e17616:    11 f6 10 c0       	[r12 + 16] = r1			  ## RF_ble.c:256:21
 1e1761a:    08 00             	csync			  ## RF_ble.c:257:5
 1e1761c:    01 f6 18 c0       	r1 = [r12 + 24]			  ## RF_ble.c:258:12
 1e17620:    c2 ff bf ff 00 00 	r2 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## RF_ble.c:343:33
 1e17626:    51 b5             	r1 &= r2			  ## RF_ble.c:343:33
 1e17628:    11 b3             	r1 |= 64			  ## RF_ble.c:343:33
 1e1762a:    11 f6 14 c0       	[r12 + 20] = r1			  ## RF_ble.c:263:21
 1e1762e:    08 00             	csync			  ## RF_ble.c:264:5
 1e17630:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e17634:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e17636:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e17638:    e0 fe 00 01       	r0 = r1 / r0 (s)			  ## RF_ble.c:134:17
 1e1763c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e1763e:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:265:50
 1e17642:    01 fb 05 24       	r1 = 9221 <Hall_timer_id+0x1 : 2405 >			  ## RF_ble.c:265:67
 1e17646:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e17648:    10 f6 10 c0       	[r12 + 16] = r0			  ## RF_ble.c:265:21
 1e1764c:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:4564:31
 1e1764e:    ca 2e             	if (r7 == 0) goto 404 <ble_event_irq_handler+0x486 : 1e177e4 >
 1e17650:    75 fc 44 01       	r5 = r7 + 324
 1e17654:    10 6a             	r0 = b[r5 + 1] (u)			  ## RF_ble.c:4572:14
 1e17656:    9c 20             	if (r0 == 0) goto 312 <ble_event_irq_handler+0x432 : 1e17790 >			  ## RF_ble.c:4572:14
 1e17658:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:4580:21
 1e1765a:    70 e0 bf 10       	if (r0 != 7) goto 382 <ble_event_irq_handler+0x47E : 1e177dc >			  ## RF_ble.c:4580:21
 1e1765e:    20 6a             	r0 = b[r5 + 2] (u)			  ## RF_ble.c:4584:13
 1e17660:    c9 ff 78 0f 00 00 	r9 = 3960 <ble_window_autozoom.widen : f78 >			  ## RF_ble.c:4584:13
 1e17666:    20 f3 99 00       	if ((r0 & 1) != 0) goto 306 <ble_event_irq_handler+0x43E : 1e1779c >			  ## RF_ble.c:4584:13
 1e1766a:    0a f6 00 90       	r10 = [r9 + 0]			  ## RF_ble.c:4594:31
 1e1766e:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:4594:23
 1e17670:    a0 09             	r0 += r10			  ## RF_ble.c:4594:29
 1e17672:    40 86             	r0 += 100			  ## RF_ble.c:4594:37
 1e17674:    08 ff cf 07 b1 00 	if (r0 > 1999) goto 354 <ble_event_irq_handler+0x47E : 1e177dc >			  ## RF_ble.c:4594:37
 1e1767a:    0b f6 08 50       	r11 = [r5 + 8]			  ## RF_ble.c:4597:71
 1e1767e:    40 08             	r0 = r4			  ## RF_ble.c:4510:16
 1e17680:    61 16             	call -830 <__get_clkn : 1e17344 >			  ## RF_ble.c:4510:16
 1e17682:    03 f6 00 c0       	r3 = [r12 + 0]			  ## RF_ble.c:4512:22
 1e17686:    0e f6 08 c0       	r14 = [r12 + 8]			  ## RF_ble.c:4512:49
 1e1768a:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e1768e:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e17690:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e17692:    c6 71             	r6 = 28			  ## RF_ble.c:134:17
 1e17694:    e0 fe 60 11       	r1 = r1 / r6 (s)			  ## RF_ble.c:134:17
 1e17698:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:256:50
 1e1769a:    06 fb f0 03       	r6 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:256:50
 1e1769e:    51 bd             	r1 &= r6			  ## RF_ble.c:256:50
 1e176a0:    06 fb 02 1c       	r6 = 7170 <profile_l2cap_hdl+0x36 : 1c02 >			  ## RF_ble.c:256:56
 1e176a4:    51 bc             	r1 |= r6			  ## RF_ble.c:256:56
 1e176a6:    11 f6 10 c0       	[r12 + 16] = r1			  ## RF_ble.c:256:21
 1e176aa:    08 00             	csync			  ## RF_ble.c:257:5
 1e176ac:    01 f6 18 c0       	r1 = [r12 + 24]			  ## RF_ble.c:258:12
 1e176b0:    72 04             	r2 = r1.l (s)			  ## RF_ble.c:4516:9
 1e176b2:    06 fd f8 2a       	r6 = r2 | 63488			  ## RF_ble.c:4517:21
 1e176b6:    0b f3 01 20       	if ((r2 & 2048) == 0) goto 2 <ble_event_irq_handler+0x35E : 1e176bc >
 1e176ba:    61 08             	r1 = r6			  ## RF_ble.c:4516:9
 1e176bc:    7d 04             	r13 = r1.l (s)			  ## RF_ble.c:4520:21
 1e176be:    01 fb ff 03       	r1 = 1023 <BTCTLER_LE_RAM_TOTAL+0x27 : 3ff >			  ## RF_ble.c:4512:37
 1e176c2:    51 b7             	r1 &= r3			  ## RF_ble.c:4512:37
 1e176c4:    02 fb 71 02       	r2 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:4512:19
 1e176c8:    61 b4             	r1 = r2 - r1			  ## RF_ble.c:4512:19
 1e176ca:    e4 fd 00 2e       	r2 = r14.b0 (u)			  ## RF_ble.c:4512:64
 1e176ce:    a1 b2             	r1 = r1 - r2			  ## RF_ble.c:4512:46
 1e176d0:    61 04             	r1 = r1.l (u)			  ## RF_ble.c:4520:11
 1e176d2:    80 fb 10 6d       	r6 = r13 + r1			  ## RF_ble.c:4520:19
 1e176d6:    1f 70             	r15 = 1			  ## RF_ble.c:4520:19
 1e176d8:    12 70             	r2 = 1			  ## RF_ble.c:4520:34
 1e176da:    0c ff 70 62 01 00 	ifs (r6 > 624) goto 2 <ble_event_irq_handler+0x384 : 1e176e2 >			  ## RF_ble.c:4520:34
 1e176e0:    02 70             	r2 = 0			  ## RF_ble.c:4520:34
 1e176e2:    61 fc 9c ff       	r1 = r6 + -100			  ## RF_ble.c:4520:69
 1e176e6:    13 70             	r3 = 1			  ## RF_ble.c:4520:85
 1e176e8:    0b ff 71 12 01 00 	ifs (r1 < 625) goto 2 <ble_event_irq_handler+0x392 : 1e176f0 >			  ## RF_ble.c:4520:85
 1e176ee:    03 70             	r3 = 0			  ## RF_ble.c:4520:85
 1e176f0:    0e fb 9c ff       	r14 = -100 <bank_code_load_addr+0x1E1388 : 1ffff9c >
 1e176f4:    32 f1 10 00       	if ((r2 & r3) != 0) goto 32 <ble_event_irq_handler+0x3BA : 1e17718 >
 1e176f8:    46 e6 0e 30       	if (r6 < 100) goto 28 <ble_event_irq_handler+0x3BA : 1e17718 >
 1e176fc:    13 70             	r3 = 1
 1e176fe:    0b ff 8f 1d 01 00 	ifs (r1 < -625) goto 2 <ble_event_irq_handler+0x3A8 : 1e17706 >
 1e17704:    03 70             	r3 = 0
 1e17706:    f1 d7             	r1 = r6 >> 31			  ## RF_ble.c:4526:41
 1e17708:    0e fb 0d 02       	r14 = 525 <BTCTLER_CONTROLLER_BSS_SIZE+0x4D : 20d >			  ## RF_ble.c:4529:5
 1e1770c:    31 f1 02 00       	if ((r1 & r3) != 0) goto 4 <ble_event_irq_handler+0x3B6 : 1e17714 >			  ## RF_ble.c:4529:5
 1e17710:    0e fb 9c ff       	r14 = -100 <bank_code_load_addr+0x1E1388 : 1ffff9c >			  ## RF_ble.c:4529:5
 1e17714:    e2 fd 30 f1       	r15 = r1 & r3			  ## RF_ble.c:4526:46
 1e17718:    0f f2 57 20       	if (r15 >= r0) goto 174 <ble_event_irq_handler+0x46C : 1e177ca >
 1e1771c:    1f f6 14 c0       	[r12 + 20] = r15			  ## RF_ble.c:263:21
 1e17720:    08 00             	csync			  ## RF_ble.c:264:5
 1e17722:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e17726:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e17728:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e1772a:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e1772c:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e17730:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e17732:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e17736:    02 fb 05 40       	r2 = 16389 <low_power_system_down+0x10D : 4005 >			  ## RF_ble.c:265:67
 1e1773a:    50 b4             	r0 |= r2			  ## RF_ble.c:265:67
 1e1773c:    10 f6 10 c0       	[r12 + 16] = r0			  ## RF_ble.c:265:21
 1e17740:    80 fb e0 0d       	r0 = r13 + r14			  ## RF_ble.c:265:21
 1e17744:    30 04             	r0 = r0.l (s)			  ## RF_ble.c:4540:44
 1e17746:    90 b7             	r0 |= 32768			  ## RF_ble.c:4540:42
 1e17748:    10 f6 14 c0       	[r12 + 20] = r0			  ## RF_ble.c:263:21
 1e1774c:    08 00             	csync			  ## RF_ble.c:264:5
 1e1774e:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e17752:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e17754:    f0 fd 08 2a       	r2 = r10 << 1			  ## RF_ble.c:4597:106
 1e17758:    b2 09             	r2 += r11			  ## RF_ble.c:4597:106
 1e1775a:    22 fc c8 00       	r2 = r2 + 200			  ## RF_ble.c:4597:78
 1e1775e:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e17760:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e17764:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e17766:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e1776a:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e1776c:    01 fb 05 1c       	r1 = 7173 <btstack_stack+0x1 : 1c05 >			  ## RF_ble.c:265:67
 1e17770:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e17772:    10 f6 10 c0       	[r12 + 16] = r0			  ## RF_ble.c:265:21
 1e17776:    1a 5f             	h[r7 + 34] = r2			  ## RF_ble.c:4542:26
 1e17778:    10 d4             	r0 = r2 >> 16			  ## RF_ble.c:4544:35
 1e1777a:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4544:26
 1e1777c:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:4599:27
 1e17780:    40 86             	r0 += 100			  ## RF_ble.c:4599:27
 1e17782:    10 f6 00 90       	[r9 + 0] = r0			  ## RF_ble.c:4599:27
 1e17786:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4544:17
 1e1778a:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4542:17
 1e1778e:    24 18             	goto 72 <ble_event_irq_handler+0x47A : 1e177d8 >			  ## RF_ble.c:4542:17
 1e17790:    00 f7 58 70       	r0 = h[r7 + 88] (u)			  ## RF_ble.c:4573:35
 1e17794:    61 21             	if (r0 == 0) goto -318 <ble_event_irq_handler+0x2FA : 1e17658 >			  ## RF_ble.c:4573:35
 1e17796:    10 70             	r0 = 1			  ## RF_ble.c:4575:23
 1e17798:    18 6a             	b[r5 + 1] = r0			  ## RF_ble.c:4575:23
 1e1779a:    24 18             	goto 72 <ble_event_irq_handler+0x486 : 1e177e4 >			  ## RF_ble.c:4575:23
 1e1779c:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:4586:17
 1e177a0:    40 e6 1c 30       	if (r0 < 100) goto 56 <ble_event_irq_handler+0x47E : 1e177dc >			  ## RF_ble.c:4586:17
 1e177a4:    c0 f4 00 99       	[r9 + 0] = 0			  ## RF_ble.c:4587:23
 1e177a8:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:4589:42
 1e177aa:    18 5f             	h[r7 + 34] = r0			  ## RF_ble.c:4553:26
 1e177ac:    00 d4             	r0 = r0 >> 16			  ## RF_ble.c:4555:35
 1e177ae:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4555:26
 1e177b0:    15 18             	goto 42 <ble_event_irq_handler+0x47E : 1e177dc >			  ## RF_ble.c:4555:26
 1e177b2:    21 60             	r1 = b[r0 + 2] (u)			  ## RF_ble.c:391:20
 1e177b4:    65 91             	r5 = r0 + 22			  ## RF_ble.c:391:20
 1e177b6:    21 f3 e8 1e       	if ((r1 & 2) != 0) goto -560 <ble_event_irq_handler+0x22C : 1e1758a >			  ## RF_ble.c:391:20
 1e177ba:    b1 50             	r1 = h[r0 + 22] (u)			  ## RF_ble.c:365:17
 1e177bc:    02 32             	if (r1 != 0) goto 4 <ble_event_irq_handler+0x464 : 1e177c2 >			  ## RF_ble.c:365:17
 1e177be:    11 70             	r1 = 1
 1e177c0:    b9 50             	h[r0 + 22] = r1
 1e177c2:    40 72             	r0 = 36			  ## RF_ble.c:394:13
 1e177c4:    bf f3 6d ac       	call -42790 <putchar : 1e0d0a2 >			  ## RF_ble.c:394:13
 1e177c8:    e0 1e             	goto -576 <ble_event_irq_handler+0x22C : 1e1758a >			  ## RF_ble.c:394:13
 1e177ca:    80 75             	r0 = 88			  ## RF_ble.c:4534:9
 1e177cc:    bf f3 69 ac       	call -42798 <putchar : 1e0d0a2 >			  ## RF_ble.c:4534:9
 1e177d0:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4601:74
 1e177d4:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4601:43
 1e177d8:    01 52             	r1 = h[r1 + 0] (u)			  ## RF_ble.c:4601:43
 1e177da:    00 50             	r0 = h[r0 + 0] (u)			  ## RF_ble.c:4601:74
 1e177dc:    10 5a             	r0 = h[r5 + 2] (u)			  ## RF_ble.c:4613:19
 1e177de:    30 fd 03 09       	r0 = r0 & 4294967292			  ## RF_ble.c:4614:26
 1e177e2:    18 5a             	h[r5 + 2] = r0			  ## RF_ble.c:4614:26
 1e177e4:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:688:13
 1e177e6:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x48E : 1e177ec >			  ## le_low_power.c:688:13
 1e177e8:    bf f3 55 79       	call -68950 <low_power_request : 1e06a96 >			  ## le_low_power.c:689:9
 1e177ec:    00 f6 44 c0       	r0 = [r12 + 68]			  ## RF_ble.c:2798:13
 1e177f0:    01 f6 40 c0       	r1 = [r12 + 64]			  ## RF_ble.c:2798:28
 1e177f4:    50 b3             	r0 &= r1			  ## RF_ble.c:2798:26
 1e177f6:    00 f3 02 00       	if ((r0 & 1) == 0) goto 4 <ble_event_irq_handler+0x4A0 : 1e177fe >			  ## RF_ble.c:2798:26
 1e177fa:    10 f4 01 ca       	[r12 + 64] |= 256			  ## RF_ble.c:2799:26
 1e177fe:    00 f6 2c c0       	r0 = [r12 + 44]			  ## RF_ble.c:2807:9
 1e17802:    10 04             	r0 = r0.b0 (s)			  ## RF_ble.c:2807:24
 1e17804:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <ble_event_irq_handler+0x4AE : 1e1780c >			  ## RF_ble.c:2807:24
 1e17808:    0b f4 40 c9       	[r12 + 44] |= 64			  ## RF_ble.c:2808:25
 1e1780c:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## RF_ble.c:2817:1
 1e17810:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:2817:1
 1e17812:    22 00             	rti			  ## RF_ble.c:2817:1
 1e17814:    35 fc ff ff       	r5 = r3 + -1			  ## RF_ble.c:918:9
 1e17818:    46 05             	r6 = r5.b0 (u)			  ## RF_ble.c:918:9
 1e1781a:    b3 71             	r3 = 27			  ## RF_ble.c:918:9
 1e1781c:    b6 e1 0b 80       	if (r6 > 27) goto 22 <ble_event_irq_handler+0x4D8 : 1e17836 >			  ## RF_ble.c:918:9
 1e17820:    33 71             	r3 = 19
 1e17822:    96 e1 08 00       	if (r6 == 25) goto 16 <ble_event_irq_handler+0x4D8 : 1e17836 >
 1e17826:    53 08             	r3 = r5
 1e17828:    36 e1 05 80       	if (r6 > 19) goto 10 <ble_event_irq_handler+0x4D8 : 1e17836 >
 1e1782c:    33 71             	r3 = 19			  ## RF_ble.c:930:13
 1e1782e:    60 ff fc 29 01 00 	if ((r2 & 252) == 0) goto 2 <ble_event_irq_handler+0x4D8 : 1e17836 >			  ## RF_ble.c:930:13
 1e17834:    c3 71             	r3 = 28			  ## RF_ble.c:930:13
 1e17836:    25 fd 1f 39       	r5 = r3 & 31			  ## RF_ble.c:823:23
 1e1783a:    36 fd 1f 2a       	r6 = r2 & 4294959359			  ## RF_ble.c:823:23
 1e1783e:    c5 fd 40 65       	r6 <= insert(r5, p:8, l:5)			  ## RF_ble.c:823:23
 1e17842:    1e 50             	h[r0 + 2] = r6			  ## RF_ble.c:823:23
 1e17844:    2d f3 8b 2e       	if ((r2 & 8192) != 0) goto -746 <ble_event_irq_handler+0x200 : 1e1755e >			  ## RF_ble.c:823:23
 1e17848:    c0 04             	r0 = r3.b0 (u)			  ## RF_ble.c:827:30
 1e1784a:    87 1e             	goto -754 <ble_event_irq_handler+0x1FC : 1e1755a >			  ## RF_ble.c:827:30


__ble_rx_buf_process_conn:
 1e1784c:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2072:0
 1e1784e:    04 08             	r4 = r0			  ## RF_ble.c:2072:0
 1e17850:    40 fc 66 00       	r0 = r4 + 102			  ## RF_ble.c:2078:47
 1e17854:    46 fc 67 00       	r6 = r4 + 103			  ## RF_ble.c:2078:26
 1e17858:    15 08             	r5 = r1			  ## RF_ble.c:2078:26
 1e1785a:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x12 : 1e1785e >
 1e1785c:    06 08             	r6 = r0			  ## RF_ble.c:2078:10
 1e1785e:    00 6c             	r0 = b[r6 + 0] (u)
 1e17860:    03 70             	r3 = 0
 1e17862:    00 f3 14 00       	if ((r0 & 1) == 0) goto 40 <__ble_rx_buf_process_conn+0x42 : 1e1788e >
 1e17866:    a8 c0             	r0 = r5 << 2			  ## RF_ble.c:2087:9
 1e17868:    07 b8             	r7 = r4 + r0			  ## RF_ble.c:2087:9
 1e1786a:    f0 7f             	r0 = 255			  ## RF_ble.c:2087:23
 1e1786c:    bf f3 da f8       	call -3660 <hw_alloc_rx : 1e16a24 >			  ## RF_ble.c:2087:23
 1e17870:    10 f6 78 71       	[r7 + 376] = r0			  ## RF_ble.c:2087:21
 1e17874:    13 70             	r3 = 1			  ## RF_ble.c:2087:21
 1e17876:    0b 20             	if (r0 == 0) goto 22 <__ble_rx_buf_process_conn+0x42 : 1e1788e >			  ## RF_ble.c:2087:21
 1e17878:    e1 99             	r1 = r4 + 30			  ## RF_ble.c:2086:67
 1e1787a:    04 82             	r4 += 32			  ## RF_ble.c:2086:42
 1e1787c:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x34 : 1e17880 >
 1e1787e:    14 08             	r4 = r1			  ## RF_ble.c:2086:18
 1e17880:    40 81             	r0 += 20			  ## RF_ble.c:2095:33
 1e17882:    bf f3 9c f9       	call -3272 <PHY_TO_BLE : 1e16bbe >			  ## RF_ble.c:2095:22
 1e17886:    08 58             	h[r4 + 0] = r0			  ## RF_ble.c:2095:20
 1e17888:    00 6c             	r0 = b[r6 + 0] (u)			  ## RF_ble.c:2101:9
 1e1788a:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2101:9
 1e1788c:    08 6c             	b[r6 + 0] = r0			  ## RF_ble.c:2101:9
 1e1788e:    30 08             	r0 = r3			  ## RF_ble.c:2107:1
 1e17890:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2107:1


__hw_rx_buf_process:
 1e17892:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:2368:0
 1e17894:    0a 08             	r10 = r0			  ## RF_ble.c:2368:0
 1e17896:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2369:31
 1e17898:    04 fc 38 00       	r4 = r0 + 56			  ## RF_ble.c:2376:69
 1e1789c:    03 fc 3a 00       	r3 = r0 + 58			  ## RF_ble.c:2376:40
 1e178a0:    19 08             	r9 = r1			  ## RF_ble.c:2376:40
 1e178a2:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x14 : 1e178a6 >
 1e178a4:    43 08             	r3 = r4			  ## RF_ble.c:2376:14
 1e178a6:    01 56             	r1 = h[r3 + 0] (u)
 1e178a8:    04 fc 26 00       	r4 = r0 + 38			  ## RF_ble.c:2374:69
 1e178ac:    03 fc 28 00       	r3 = r0 + 40			  ## RF_ble.c:2374:40
 1e178b0:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x22 : 1e178b4 >			  ## RF_ble.c:2374:40
 1e178b2:    43 08             	r3 = r4			  ## RF_ble.c:2374:14
 1e178b4:    03 56             	r3 = h[r3 + 0] (u)
 1e178b6:    06 fc 2a 00       	r6 = r0 + 42			  ## RF_ble.c:2375:69
 1e178ba:    04 fc 2c 00       	r4 = r0 + 44			  ## RF_ble.c:2375:40
 1e178be:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x30 : 1e178c2 >			  ## RF_ble.c:2375:40
 1e178c0:    64 08             	r4 = r6			  ## RF_ble.c:2375:14
 1e178c2:    02 58             	r2 = h[r4 + 0] (u)
 1e178c4:    14 d2             	r4 = r2 >> 8			  ## RF_ble.c:2388:5
 1e178c6:    9b fc f8 ff       	r11 = r9 + -8			  ## RF_ble.c:2388:5
 1e178ca:    06 f7 10 b0       	r6 = h[r11 + 16] (u)			  ## RF_ble.c:2379:5
 1e178ce:    14 f9 12 b0       	b[r11 + 18] = r4			  ## RF_ble.c:2388:5
 1e178d2:    14 c1             	r4 = r2 << 4			  ## RF_ble.c:2389:5
 1e178d4:    24 fd 30 49       	r4 = r4 & 48			  ## RF_ble.c:2389:5
 1e178d8:    92 c1             	r2 = r2 << 6			  ## RF_ble.c:2382:5
 1e178da:    25 fd 02 2a       	r5 = r2 & 512			  ## RF_ble.c:2390:5
 1e178de:    54 ba             	r4 |= r5			  ## RF_ble.c:2389:5
 1e178e0:    25 fd 01 2a       	r5 = r2 & 256			  ## RF_ble.c:2391:5
 1e178e4:    54 ba             	r4 |= r5			  ## RF_ble.c:2390:5
 1e178e6:    25 fd 0f 39       	r5 = r3 & 15			  ## RF_ble.c:2379:5
 1e178ea:    5f d0             	r7 = r3 >> 1			  ## RF_ble.c:2380:5
 1e178ec:    27 fd 40 79       	r7 = r7 & 64			  ## RF_ble.c:2380:5
 1e178f0:    55 be             	r5 |= r7			  ## RF_ble.c:2379:5
 1e178f2:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2381:5
 1e178f4:    23 fd 80 39       	r3 = r3 & 128			  ## RF_ble.c:2381:5
 1e178f8:    53 ba             	r3 |= r5			  ## RF_ble.c:2380:5
 1e178fa:    22 fd 04 2a       	r2 = r2 & 1024			  ## RF_ble.c:2382:5
 1e178fe:    52 b6             	r2 |= r3			  ## RF_ble.c:2381:5
 1e17900:    23 fd f8 6a       	r3 = r6 & 63488			  ## RF_ble.c:2389:5
 1e17904:    52 b6             	r2 |= r3			  ## RF_ble.c:2389:5
 1e17906:    52 b8             	r2 |= r4			  ## RF_ble.c:2391:5
 1e17908:    12 f7 10 b0       	h[r11 + 16] = r2			  ## RF_ble.c:2391:5
 1e1790c:    0b d2             	r3 = r1 >> 8			  ## RF_ble.c:2396:20
 1e1790e:    22 fd 01 39       	r2 = r3 & 1			  ## RF_ble.c:2396:20
 1e17912:    06 fc 2c 01       	r6 = r0 + 300			  ## RF_ble.c:2396:20
 1e17916:    8a 6d             	b[r6 + 24] = r2			  ## RF_ble.c:2396:18
 1e17918:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:2377:24
 1e1791c:    00 f3 03 30       	if ((r3 & 1) == 0) goto 6 <__hw_rx_buf_process+0x94 : 1e17926 >
 1e17920:    d3 5c             	r3 = h[r6 + 26] (u)			  ## RF_ble.c:2399:30
 1e17922:    93 b0             	r3 |= 2			  ## RF_ble.c:2399:30
 1e17924:    db 5c             	h[r6 + 26] = r3			  ## RF_ble.c:2399:30
 1e17926:    03 f7 58 00       	r3 = h[r0 + 88] (u)			  ## RF_ble.c:2402:31
 1e1792a:    13 f7 16 b0       	h[r11 + 22] = r3			  ## RF_ble.c:2402:21
 1e1792e:    a3 51             	r3 = h[r0 + 52] (u)			  ## RF_ble.c:2403:31
 1e17930:    13 f9 13 b0       	b[r11 + 19] = r3			  ## RF_ble.c:2403:21
 1e17934:    03 4c             	r3 = [r6 + 0]			  ## analog_ble.c:168:40
 1e17936:    1c d4             	r4 = r3 >> 16			  ## analog_ble.c:169:88
 1e17938:    1b d2             	r3 = r3 >> 8			  ## analog_ble.c:169:54
 1e1793a:    03 fd c0 39       	r3 = r3 | 192			  ## analog_ble.c:169:34
 1e1793e:    13 fd 3f 39       	r3 = r3 ^ 63			  ## analog_ble.c:169:34
 1e17942:    23 b7             	r3 = r3 - r4			  ## analog_ble.c:169:68
 1e17944:    13 f9 14 b0       	b[r11 + 20] = r3			  ## RF_ble.c:2404:21
 1e17948:    04 f7 10 b0       	r4 = h[r11 + 16] (u)			  ## RF_ble.c:2405:21
 1e1794c:    33 fd 08 4a       	r3 = r4 & 4294965247			  ## RF_ble.c:2405:21
 1e17950:    13 f7 10 b0       	h[r11 + 16] = r3			  ## RF_ble.c:2405:21
 1e17954:    08 fc d8 01       	r8 = r0 + 472			  ## RF_ble.c:2405:21
 1e17958:    12 e0 1e 10       	if (r2 != 1) goto 60 <__hw_rx_buf_process+0x106 : 1e17998 >			  ## RF_ble.c:2405:21
 1e1795c:    00 fc 50 01       	r0 = r0 + 336
 1e17960:    21 60             	r1 = b[r0 + 2] (u)			  ## RF_ble.c:1848:17
 1e17962:    11 e0 34 00       	if (r1 == 1) goto 104 <__hw_rx_buf_process+0x13C : 1e179ce >			  ## RF_ble.c:1848:5
 1e17966:    31 e0 39 00       	if (r1 == 3) goto 114 <__hw_rx_buf_process+0x14A : 1e179dc >
 1e1796a:    21 e0 59 10       	if (r1 != 2) goto 178 <__hw_rx_buf_process+0x18E : 1e17a20 >
 1e1796e:    21 fd 0f 49       	r1 = r4 & 15			  ## RF_ble.c:1749:5
 1e17972:    61 e0 55 80       	if (r1 > 6) goto 170 <__hw_rx_buf_process+0x18E : 1e17a20 >			  ## RF_ble.c:1749:5
 1e17976:    12 70             	r2 = 1
 1e17978:    42 0c             	r2 <<= r1
 1e1797a:    61 ff 57 29 49 00 	if ((r2 & 87) != 0) goto 146 <__hw_rx_buf_process+0x180 : 1e17a12 >
 1e17980:    51 e0 4e 10       	if (r1 != 5) goto 156 <__hw_rx_buf_process+0x18E : 1e17a20 >
 1e17984:    01 f9 10 80       	r1 = b[r8 + 16] (u)			  ## RF_ble.c:1759:18
 1e17988:    4b 32             	if (r1 != 0) goto 150 <__hw_rx_buf_process+0x18E : 1e17a20 >			  ## RF_ble.c:1759:18
 1e1798a:    51 4d             	r1 = [r6 + 84]			  ## RF_ble.c:1760:17
 1e1798c:    61 52             	r1 = h[r1 + 12] (u)			  ## RF_ble.c:1760:28
 1e1798e:    21 fd 0f 19       	r1 = r1 & 15			  ## RF_ble.c:1760:28
 1e17992:    11 e0 2d 00       	if (r1 == 1) goto 90 <__hw_rx_buf_process+0x15E : 1e179f0 >			  ## RF_ble.c:1760:28
 1e17996:    44 18             	goto 136 <__hw_rx_buf_process+0x18E : 1e17a20 >			  ## RF_ble.c:1760:28
 1e17998:    22 f3 0c 10       	if ((r1 & 4) != 0) goto 24 <__hw_rx_buf_process+0x122 : 1e179b4 >
 1e1799c:    03 f3 93 10       	if ((r1 & 8) == 0) goto 294 <__hw_rx_buf_process+0x234 : 1e17ac6 >
 1e179a0:    00 70             	r0 = 0			  ## RF_ble.c:2423:13
 1e179a2:    10 f9 12 b0       	b[r11 + 18] = r0			  ## RF_ble.c:2423:13
 1e179a6:    30 fd 03 40       	r0 = r4 & 4294965199			  ## RF_ble.c:2423:13
 1e179aa:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2423:13
 1e179ae:    10 f7 10 b0       	h[r11 + 16] = r0			  ## RF_ble.c:2423:13
 1e179b2:    6b 18             	goto 214 <__hw_rx_buf_process+0x1F8 : 1e17a8a >			  ## RF_ble.c:2423:13
 1e179b4:    00 70             	r0 = 0			  ## RF_ble.c:2414:13
 1e179b6:    10 f9 12 b0       	b[r11 + 18] = r0			  ## RF_ble.c:2414:13
 1e179ba:    30 fd 03 40       	r0 = r4 & 4294965199			  ## RF_ble.c:2414:13
 1e179be:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2414:13
 1e179c2:    10 f7 10 b0       	h[r11 + 16] = r0			  ## RF_ble.c:2414:13
 1e179c6:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:2415:34
 1e179c8:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:2415:34
 1e179ca:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:2415:34
 1e179cc:    5e 18             	goto 188 <__hw_rx_buf_process+0x1F8 : 1e17a8a >			  ## RF_ble.c:2415:34
 1e179ce:    20 fd 0f 49       	r0 = r4 & 15			  ## RF_ble.c:1781:5
 1e179d2:    30 e0 1e 00       	if (r0 == 3) goto 60 <__hw_rx_buf_process+0x180 : 1e17a12 >			  ## RF_ble.c:1781:5
 1e179d6:    50 e0 1c 00       	if (r0 == 5) goto 56 <__hw_rx_buf_process+0x180 : 1e17a12 >
 1e179da:    22 18             	goto 68 <__hw_rx_buf_process+0x18E : 1e17a20 >
 1e179dc:    21 fd 0f 49       	r1 = r4 & 15			  ## RF_ble.c:1799:5
 1e179e0:    61 e0 1e 80       	if (r1 > 6) goto 60 <__hw_rx_buf_process+0x18E : 1e17a20 >			  ## RF_ble.c:1799:5
 1e179e4:    12 70             	r2 = 1
 1e179e6:    f8 fd 10 12       	r1 = r2 << r1
 1e179ea:    60 ff 55 19 0e 00 	if ((r1 & 85) == 0) goto 28 <__hw_rx_buf_process+0x17A : 1e17a0c >
 1e179f0:    f0 61             	r0 = b[r0 + 31] (u)
 1e179f2:    81 fd 38 14       	r1 = uextra(r4, p:7, l:1)
 1e179f6:    10 f2 0c 10       	if (r0 != r1) goto 24 <__hw_rx_buf_process+0x180 : 1e17a12 >
 1e179fa:    60 fc 44 00       	r0 = r6 + 68
 1e179fe:    b1 fc 1c 00       	r1 = r11 + 28
 1e17a02:    62 70             	r2 = 6
 1e17a04:    97 f3 72 7a       	call 3077348 <memcmp : 106eec >
 1e17a08:    04 30             	if (r0 != 0) goto 8 <__hw_rx_buf_process+0x180 : 1e17a12 >
 1e17a0a:    0a 18             	goto 20 <__hw_rx_buf_process+0x18E : 1e17a20 >
 1e17a0c:    60 ff 28 19 04 00 	if ((r1 & 40) == 0) goto 8 <__hw_rx_buf_process+0x188 : 1e17a1a >
 1e17a12:    e0 77             	r0 = 126			  ## RF_ble.c:2443:13
 1e17a14:    bf f3 45 ab       	call -43382 <putchar : 1e0d0a2 >			  ## RF_ble.c:2443:13
 1e17a18:    56 18             	goto 172 <__hw_rx_buf_process+0x234 : 1e17ac6 >			  ## RF_ble.c:2443:13
 1e17a1a:    01 f9 10 80       	r1 = b[r8 + 16] (u)			  ## RF_ble.c:1802:17
 1e17a1e:    bc 22             	if (r1 == 0) goto 376 <__hw_rx_buf_process+0x306 : 1e17b98 >			  ## RF_ble.c:1802:17
 1e17a20:    00 f6 00 a0       	r0 = [r10 + 0]			  ## RF_ble.c:2020:31
 1e17a24:    05 fc 50 01       	r5 = r0 + 336
 1e17a28:    21 6a             	r1 = b[r5 + 2] (u)			  ## RF_ble.c:2021:18
 1e17a2a:    21 e0 2e 10       	if (r1 != 2) goto 92 <__hw_rx_buf_process+0x1F8 : 1e17a8a >			  ## RF_ble.c:2021:18
 1e17a2e:    21 fd 0f 49       	r1 = r4 & 15			  ## RF_ble.c:1875:9
 1e17a32:    51 e0 09 00       	if (r1 == 5) goto 18 <__hw_rx_buf_process+0x1B6 : 1e17a48 >			  ## RF_ble.c:1875:9
 1e17a36:    31 e0 26 10       	if (r1 != 3) goto 76 <__hw_rx_buf_process+0x1F4 : 1e17a86 >
 1e17a3a:    81 fd 38 14       	r1 = uextra(r4, p:7, l:1)			  ## RF_ble.c:1876:9
 1e17a3e:    b2 fc 1c 00       	r2 = r11 + 28			  ## RF_ble.c:1876:41
 1e17a42:    bf f3 4c f3       	call -6504 <__set_peer_addr : 1e160de >			  ## RF_ble.c:1876:9
 1e17a46:    21 18             	goto 66 <__hw_rx_buf_process+0x1F8 : 1e17a8a >			  ## RF_ble.c:1876:9
 1e17a48:    71 50             	r1 = h[r0 + 14] (u)			  ## RF_ble.c:1879:27
 1e17a4a:    a2 d0             	r2 = r4 >> 2			  ## RF_ble.c:1882:37
 1e17a4c:    22 fd 10 29       	r2 = r2 & 16			  ## RF_ble.c:1882:37
 1e17a50:    ba 50             	h[r0 + 22] = r2			  ## RF_ble.c:1882:25
 1e17a52:    89 c0             	r1 = r1 << 2			  ## RF_ble.c:1883:42
 1e17a54:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:1883:42
 1e17a58:    02 fd 01 19       	r2 = r1 | 1			  ## RF_ble.c:1883:48
 1e17a5c:    da 50             	h[r0 + 26] = r2			  ## RF_ble.c:1883:25
 1e17a5e:    02 f7 10 b0       	r2 = h[r11 + 16] (u)			  ## RF_ble.c:1884:31
 1e17a62:    92 d0             	r2 = r2 >> 2			  ## RF_ble.c:1884:37
 1e17a64:    22 fd 10 29       	r2 = r2 & 16			  ## RF_ble.c:1884:37
 1e17a68:    ca 50             	h[r0 + 24] = r2			  ## RF_ble.c:1884:25
 1e17a6a:    11 fd 05 19       	r1 = r1 ^ 5			  ## RF_ble.c:1885:49
 1e17a6e:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:1885:25
 1e17a70:    04 70             	r4 = 0			  ## RF_ble.c:1885:25
 1e17a72:    0c 6a             	b[r5 + 0] = r4			  ## RF_ble.c:1887:22
 1e17a74:    c0 4a             	r0 = [r5 + 48]			  ## RF_ble.c:1889:21
 1e17a76:    bf f3 e5 4e       	call -90678 <hw_dma_free : 1e01844 >			  ## RF_ble.c:1889:9
 1e17a7a:    d0 4a             	r0 = [r5 + 52]			  ## RF_ble.c:1890:21
 1e17a7c:    bf f3 e2 4e       	call -90684 <hw_dma_free : 1e01844 >			  ## RF_ble.c:1890:9
 1e17a80:    cc 4a             	[r5 + 48] = r4			  ## RF_ble.c:214:15
 1e17a82:    dc 4a             	[r5 + 52] = r4			  ## RF_ble.c:215:15
 1e17a84:    02 18             	goto 4 <__hw_rx_buf_process+0x1F8 : 1e17a8a >			  ## RF_ble.c:215:15
 1e17a86:    8f f3 06 5d       	call 2013708 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e17a8a:    00 f6 04 80       	r0 = [r8 + 4]			  ## RF_ble.c:2452:14
 1e17a8e:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x20A : 1e17a9c >			  ## RF_ble.c:2452:14
 1e17a90:    12 40             	r2 = [r0 + 4]			  ## RF_ble.c:2452:39
 1e17a92:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x20A : 1e17a9c >			  ## RF_ble.c:2452:39
 1e17a94:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2453:49
 1e17a98:    91 08             	r1 = r9			  ## RF_ble.c:2453:9
 1e17a9a:    82 00             	call r2			  ## RF_ble.c:2453:9
 1e17a9c:    00 f7 10 b0       	r0 = h[r11 + 16] (u)			  ## RF_ble.c:2456:9
 1e17aa0:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2456:9
 1e17aa4:    00 e1 03 10       	if (r0 != 16) goto 6 <__hw_rx_buf_process+0x21C : 1e17aae >			  ## RF_ble.c:2456:9
 1e17aa8:    00 f9 12 b0       	r0 = b[r11 + 18] (u)			  ## RF_ble.c:2456:9
 1e17aac:    62 20             	if (r0 == 0) goto 196 <__hw_rx_buf_process+0x2E0 : 1e17b72 >			  ## RF_ble.c:2456:9
 1e17aae:    c0 ff 70 0f 00 00 	r0 = 3952 <rx_update_handle : f70 >			  ## RF_ble.c:2460:13
 1e17ab4:    03 40             	r3 = [r0 + 0]			  ## RF_ble.c:2460:13
 1e17ab6:    0b 26             	if (r3 == 0) goto 22 <__hw_rx_buf_process+0x23C : 1e17ace >			  ## RF_ble.c:2460:13
 1e17ab8:    02 f9 12 b0       	r2 = b[r11 + 18] (u)			  ## RF_ble.c:2461:51
 1e17abc:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2461:35
 1e17ac0:    b1 fc 1c 00       	r1 = r11 + 28			  ## RF_ble.c:2461:41
 1e17ac4:    83 00             	call r3			  ## RF_ble.c:2461:13
 1e17ac6:    90 08             	r0 = r9
 1e17ac8:    bf f3 bc 4e       	call -90760 <hw_dma_free : 1e01844 >
 1e17acc:    5b 01             	{pc, r11-r4} = [sp++]			  ## RF_ble.c:2485:1
 1e17ace:    00 f9 12 b0       	r0 = b[r11 + 18] (u)			  ## RF_ble.c:2465:36
 1e17ad2:    40 81             	r0 += 20			  ## RF_ble.c:170:46
 1e17ad4:    21 fd 03 09       	r1 = r0 & 3			  ## lbuf.c:125:14
 1e17ad8:    61 fb 04 19       	r1 = 4 - r1			  ## lbuf.c:126:19
 1e17adc:    02 70             	r2 = 0			  ## lbuf.c:126:19
 1e17ade:    60 ff 03 09 01 00 	if ((r0 & 3) == 0) goto 2 <__hw_rx_buf_process+0x254 : 1e17ae6 >			  ## lbuf.c:126:19
 1e17ae4:    12 08             	r2 = r1			  ## lbuf.c:125:9
 1e17ae6:    01 f7 04 b0       	r1 = h[r11 + 4] (u)
 1e17aea:    04 b4             	r4 = r2 + r0			  ## lbuf.c:125:9
 1e17aec:    14 f2 04 30       	if (r4 < r1) goto 8 <__hw_rx_buf_process+0x266 : 1e17af8 >
 1e17af0:    8f f3 d1 5c       	call 2013602 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e17af4:    01 f7 04 b0       	r1 = h[r11 + 4] (u)
 1e17af8:    10 fc f0 ff       	r0 = r1 + -16			  ## lbuf.c:131:28
 1e17afc:    05 70             	r5 = 0			  ## lbuf.c:131:28
 1e17afe:    04 f2 20 80       	if (r4 > r0) goto 64 <__hw_rx_buf_process+0x2B0 : 1e17b42 >			  ## lbuf.c:131:28
 1e17b02:    97 f3 4b 79       	call 3076758 <local_irq_disable : 106d9c >			  ## lbuf.c:140:5
 1e17b06:    00 f7 04 b0       	r0 = h[r11 + 4] (u)			  ## lbuf.c:143:48
 1e17b0a:    41 fc 20 00       	r1 = r4 + 32			  ## lbuf.c:143:29
 1e17b0e:    01 f2 15 20       	if (r1 >= r0) goto 42 <__hw_rx_buf_process+0x2AA : 1e17b3c >			  ## lbuf.c:143:29
 1e17b12:    01 f6 00 b0       	r1 = [r11 + 0]			  ## lbuf.c:145:28
 1e17b16:    80 fb 40 29       	r2 = r9 + r4			  ## lbuf.c:144:44
 1e17b1a:    29 44             	[r2 + 8] = r1			  ## lbuf.c:145:19
 1e17b1c:    c1 ff f0 ff 00 00 	r1 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## lbuf.c:146:31
 1e17b22:    21 b3             	r1 = r1 - r4			  ## lbuf.c:146:31
 1e17b24:    10 09             	r0 += r1			  ## lbuf.c:146:48
 1e17b26:    68 54             	h[r2 + 12] = r0			  ## lbuf.c:146:18
 1e17b28:    00 70             	r0 = 0			  ## lbuf.c:147:18
 1e17b2a:    f8 64             	b[r2 + 15] = r0			  ## lbuf.c:147:18
 1e17b2c:    0a 44             	[r2 + 0] = r2			  ## list.h:188:16
 1e17b2e:    1a 44             	[r2 + 4] = r2			  ## list.h:189:16
 1e17b30:    00 99             	r0 = r4 + 16			  ## lbuf.c:143:14
 1e17b32:    10 f7 04 b0       	h[r11 + 4] = r0			  ## lbuf.c:149:20
 1e17b36:    00 95             	r0 = r2 + 16			  ## lbuf.c:157:32
 1e17b38:    bf f3 3f 4e       	call -91010 <lbuf_free_btctrler : 1e017ba >			  ## lbuf.c:157:9
 1e17b3c:    97 f3 2c 79       	call 3076696 <local_irq_enable : 106d98 >			  ## lbuf.c:159:5
 1e17b40:    95 08             	r5 = r9			  ## lbuf.c:159:5
 1e17b42:    60 ff 03 59 02 00 	if ((r5 & 3) == 0) goto 4 <__hw_rx_buf_process+0x2BA : 1e17b4c >
 1e17b48:    8f f3 a5 5c       	call 2013514 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e17b4c:    02 3a             	if (r5 != 0) goto 4 <__hw_rx_buf_process+0x2C0 : 1e17b52 >
 1e17b4e:    8f f3 a2 5c       	call 2013508 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e17b52:    60 fc 5c 00       	r0 = r6 + 92			  ## RF_ble.c:2466:31
 1e17b56:    51 08             	r1 = r5			  ## RF_ble.c:2466:13
 1e17b58:    bf f3 d3 76       	call -70234 <hw_dma_push : 1e06902 >			  ## RF_ble.c:2466:13
 1e17b5c:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2470:17
 1e17b5e:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2470:17
 1e17b62:    00 e3 07 00       	if (r0 == 48) goto 14 <__hw_rx_buf_process+0x2E2 : 1e17b74 >			  ## RF_ble.c:2470:17
 1e17b66:    70 5d             	r0 = h[r6 + 46] (u)			  ## RF_ble.c:365:17
 1e17b68:    20 e0 04 80       	if (r0 > 2) goto 8 <__hw_rx_buf_process+0x2E2 : 1e17b74 >			  ## RF_ble.c:365:17
 1e17b6c:    30 70             	r0 = 3
 1e17b6e:    78 5d             	h[r6 + 46] = r0
 1e17b70:    01 18             	goto 2 <__hw_rx_buf_process+0x2E2 : 1e17b74 >
 1e17b72:    95 08             	r5 = r9
 1e17b74:    00 f6 04 80       	r0 = [r8 + 4]			  ## RF_ble.c:2477:14
 1e17b78:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x2F4 : 1e17b86 >			  ## RF_ble.c:2477:14
 1e17b7a:    02 40             	r2 = [r0 + 0]			  ## RF_ble.c:2477:39
 1e17b7c:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x2F4 : 1e17b86 >			  ## RF_ble.c:2477:39
 1e17b7e:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2478:45
 1e17b82:    51 08             	r1 = r5			  ## RF_ble.c:2478:9
 1e17b84:    82 00             	call r2			  ## RF_ble.c:2478:9
 1e17b86:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2481:10
 1e17b88:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2481:10
 1e17b8c:    00 e1 9e 1f       	if (r0 != 16) goto -196 <__hw_rx_buf_process+0x23A : 1e17acc >			  ## RF_ble.c:2481:10
 1e17b90:    a0 6a             	r0 = b[r5 + 10] (u)			  ## RF_ble.c:2481:10
 1e17b92:    9c 31             	if (r0 != 0) goto -200 <__hw_rx_buf_process+0x23A : 1e17acc >			  ## RF_ble.c:2481:10
 1e17b94:    50 08             	r0 = r5			  ## RF_ble.c:2483:9
 1e17b96:    98 1f             	goto -208 <__hw_rx_buf_process+0x236 : 1e17ac8 >			  ## RF_ble.c:2483:9
 1e17b98:    80 61             	r0 = b[r0 + 24] (u)			  ## RF_ble.c:1803:18
 1e17b9a:    81 fd 30 14       	r1 = uextra(r4, p:6, l:1)			  ## RF_ble.c:1803:45
 1e17b9e:    10 f2 38 1f       	if (r0 != r1) goto -400 <__hw_rx_buf_process+0x180 : 1e17a12 >			  ## RF_ble.c:1803:45
 1e17ba2:    60 fc 3d 00       	r0 = r6 + 61			  ## RF_ble.c:1804:28
 1e17ba6:    b1 fc 22 00       	r1 = r11 + 34			  ## RF_ble.c:1804:53
 1e17baa:    2b 1f             	goto -426 <__hw_rx_buf_process+0x170 : 1e17a02 >			  ## RF_ble.c:1804:53


__hw_tx_buf_proess:
 1e17bac:    7e 01             	[--sp] = {rets, r14-r4}			  ## RF_ble.c:2156:0
 1e17bae:    5c 0b             	sp += -328			  ## RF_ble.c:2156:0
 1e17bb0:    08 08             	r8 = r0			  ## RF_ble.c:2156:0
 1e17bb2:    07 40             	r7 = [r0 + 0]			  ## RF_ble.c:2157:34
 1e17bb4:    19 08             	r9 = r1
 1e17bb6:    88 c0             	r0 = r1 << 2
 1e17bb8:    70 09             	r0 += r7
 1e17bba:    0a fc 80 01       	r10 = r0 + 384
 1e17bbe:    01 f6 00 a0       	r1 = [r10 + 0]
 1e17bc2:    7e fc 50 01       	r14 = r7 + 336
 1e17bc6:    de 24             	if (r2 == 0) goto 444 <__hw_tx_buf_proess+0x1D8 : 1e17d84 >			  ## RF_ble.c:2163:9
 1e17bc8:    7d fc a0 01       	r13 = r7 + 416
 1e17bcc:    0d 22             	if (r1 == 0) goto 26 <__hw_tx_buf_proess+0x3C : 1e17be8 >
 1e17bce:    00 f6 3c d0       	r0 = [r13 + 60]			  ## RF_ble.c:2137:13
 1e17bd2:    07 20             	if (r0 == 0) goto 14 <__hw_tx_buf_proess+0x36 : 1e17be2 >			  ## RF_ble.c:2137:13
 1e17bd4:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:2137:37
 1e17bd6:    05 24             	if (r2 == 0) goto 10 <__hw_tx_buf_proess+0x36 : 1e17be2 >
 1e17bd8:    00 f6 38 d0       	r0 = [r13 + 56]			  ## RF_ble.c:2138:43
 1e17bdc:    82 00             	call r2			  ## RF_ble.c:2138:9
 1e17bde:    01 f6 00 a0       	r1 = [r10 + 0]
 1e17be2:    10 08             	r0 = r1			  ## RF_ble.c:2166:13
 1e17be4:    bf f3 2e 4e       	call -91044 <hw_dma_free : 1e01844 >			  ## RF_ble.c:2166:13
 1e17be8:    00 f9 f5 71       	r0 = b[r7 + 501] (u)			  ## RF_ble.c:2169:17
 1e17bec:    06 70             	r6 = 0			  ## RF_ble.c:2169:17
 1e17bee:    05 30             	if (r0 != 0) goto 10 <__hw_tx_buf_proess+0x4E : 1e17bfa >			  ## RF_ble.c:2169:17
 1e17bf0:    e0 fc 40 00       	r0 = r14 + 64			  ## RF_ble.c:2171:38
 1e17bf4:    bf f3 5c 76       	call -70472 <hw_dma_pop : 1e068b0 >			  ## RF_ble.c:2171:22
 1e17bf8:    06 08             	r6 = r0			  ## RF_ble.c:2171:22
 1e17bfa:    08 3c             	if (r6 != 0) goto 16 <__hw_tx_buf_proess+0x60 : 1e17c0c >
 1e17bfc:    00 f9 f4 71       	r0 = b[r7 + 500] (u)			  ## RF_ble.c:2175:13
 1e17c00:    05 30             	if (r0 != 0) goto 10 <__hw_tx_buf_proess+0x60 : 1e17c0c >			  ## RF_ble.c:2175:13
 1e17c02:    e0 fc 48 00       	r0 = r14 + 72			  ## RF_ble.c:2177:38
 1e17c06:    bf f3 53 76       	call -70490 <hw_dma_pop : 1e068b0 >			  ## RF_ble.c:2177:22
 1e17c0a:    06 08             	r6 = r0			  ## RF_ble.c:2177:22
 1e17c0c:    7c fc 60 00       	r12 = r7 + 96
 1e17c10:    ce 2c             	if (r6 == 0) goto 412 <__hw_tx_buf_proess+0x202 : 1e17dae >
 1e17c12:    02 f6 48 e0       	r2 = [r14 + 72]			  ## list.h:124:18
 1e17c16:    e3 fc 48 00       	r3 = r14 + 72			  ## RF_ble.c:2198:13
 1e17c1a:    00 70             	r0 = 0
 1e17c1c:    11 70             	r1 = 1
 1e17c1e:    32 f2 01 10       	if (r2 != r3) goto 2 <__hw_tx_buf_proess+0x78 : 1e17c24 >
 1e17c22:    01 70             	r1 = 0			  ## RF_ble.c:2198:13
 1e17c24:    62 5c             	r2 = h[r6 + 12] (u)			  ## RF_ble.c:2198:13
 1e17c26:    f2 b4             	r2 &= 4294966783			  ## RF_ble.c:2198:13
 1e17c28:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## RF_ble.c:2198:13
 1e17c2c:    6a 5c             	h[r6 + 12] = r2			  ## RF_ble.c:2198:13
 1e17c2e:    10 f5 44 01       	[sp+324] = r0			  ## RF_ble.c:1661:8
 1e17c32:    10 f5 40 01       	[sp+320] = r0			  ## RF_ble.c:1661:8
 1e17c36:    10 f5 3c 01       	[sp+316] = r0			  ## RF_ble.c:1661:8
 1e17c3a:    10 f5 38 01       	[sp+312] = r0			  ## RF_ble.c:1661:8
 1e17c3e:    c0 a1             	r0 = sp + 28			  ## RF_ble.c:1661:8
 1e17c40:    01 70             	r1 = 0			  ## RF_ble.c:1663:8
 1e17c42:    02 fb 0f 01       	r2 = 271 <DRIVER_RAM_TOTAL+0x1D : 10f >			  ## RF_ble.c:1663:8
 1e17c46:    97 f3 53 79       	call 3076774 <memset : 106ef0 >			  ## RF_ble.c:1663:8
 1e17c4a:    60 5c             	r0 = h[r6 + 12] (u)			  ## RF_ble.c:1664:19
 1e17c4c:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:1664:19
 1e17c50:    d0 f5 1b 00       	b[sp+27] = r0			  ## RF_ble.c:1664:8
 1e17c54:    00 f9 01 d0       	r0 = b[r13 + 1] (u)			  ## RF_ble.c:1667:19
 1e17c58:    73 20             	if (r0 == 0) goto 230 <__hw_tx_buf_proess+0x194 : 1e17d40 >			  ## RF_ble.c:1667:19
 1e17c5a:    00 f6 54 e0       	r0 = [r14 + 84]			  ## RF_ble.c:1671:25
 1e17c5e:    d0 f5 2b 01       	b[sp+299] = r0			  ## RF_ble.c:1671:14
 1e17c62:    01 d2             	r1 = r0 >> 8			  ## RF_ble.c:1672:38
 1e17c64:    d1 f5 2c 01       	b[sp+300] = r1			  ## RF_ble.c:1672:14
 1e17c68:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:1673:38
 1e17c6a:    d1 f5 2d 01       	b[sp+301] = r1			  ## RF_ble.c:1673:14
 1e17c6e:    00 d6             	r0 = r0 >> 24			  ## RF_ble.c:1674:38
 1e17c70:    d0 f5 2e 01       	b[sp+302] = r0			  ## RF_ble.c:1674:14
 1e17c74:    00 f9 02 d0       	r0 = b[r13 + 2] (u)			  ## RF_ble.c:1675:25
 1e17c78:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1675:14
 1e17c7c:    01 f9 02 e0       	r1 = b[r14 + 2] (u)			  ## RF_ble.c:1676:13
 1e17c80:    61 e0 03 10       	if (r1 != 6) goto 6 <__hw_tx_buf_proess+0xDE : 1e17c8a >			  ## RF_ble.c:1676:13
 1e17c84:    90 b3             	r0 |= 128			  ## RF_ble.c:1678:18
 1e17c86:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1678:18
 1e17c8a:    00 f9 0e d0       	r0 = b[r13 + 14] (u)			  ## RF_ble.c:1680:5
 1e17c8e:    01 f9 12 d0       	r1 = b[r13 + 18] (u)			  ## RF_ble.c:1680:5
 1e17c92:    02 f9 0c d0       	r2 = b[r13 + 12] (u)			  ## RF_ble.c:1680:5
 1e17c96:    0b f9 0d d0       	r11 = b[r13 + 13] (u)			  ## RF_ble.c:1680:5
 1e17c9a:    03 f9 13 d0       	r3 = b[r13 + 19] (u)			  ## RF_ble.c:1680:5
 1e17c9e:    07 f9 11 d0       	r7 = b[r13 + 17] (u)			  ## RF_ble.c:1680:5
 1e17ca2:    04 f9 10 d0       	r4 = b[r13 + 16] (u)			  ## RF_ble.c:1680:5
 1e17ca6:    05 f9 0f d0       	r5 = b[r13 + 15] (u)			  ## RF_ble.c:1680:5
 1e17caa:    d3 f5 37 01       	b[sp+311] = r3			  ## RF_ble.c:1680:5
 1e17cae:    d7 f5 35 01       	b[sp+309] = r7			  ## RF_ble.c:1680:5
 1e17cb2:    d4 f5 34 01       	b[sp+308] = r4			  ## RF_ble.c:1680:5
 1e17cb6:    d5 f5 33 01       	b[sp+307] = r5			  ## RF_ble.c:1680:5
 1e17cba:    db f5 31 01       	b[sp+305] = r11			  ## RF_ble.c:1680:5
 1e17cbe:    d2 f5 30 01       	b[sp+304] = r2			  ## RF_ble.c:1680:5
 1e17cc2:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## RF_ble.c:1680:5
 1e17cc6:    d0 fd 80 41       	r4 <= insert(r1, p:16, l:16)			  ## RF_ble.c:1680:5
 1e17cca:    21 d4             	r1 = r4 >> 16			  ## RF_ble.c:1680:5
 1e17ccc:    d1 f5 36 01       	b[sp+310] = r1			  ## RF_ble.c:1680:5
 1e17cd0:    c8 fd 40 05       	r0 <= insert(r5, p:8, l:8)			  ## RF_ble.c:1680:5
 1e17cd4:    d0 fd 80 20       	r2 <= insert(r0, p:16, l:16)			  ## RF_ble.c:1680:5
 1e17cd8:    10 d4             	r0 = r2 >> 16			  ## RF_ble.c:1680:5
 1e17cda:    d0 f5 32 01       	b[sp+306] = r0			  ## RF_ble.c:1680:5
 1e17cde:    e0 6c             	r0 = b[r6 + 14] (u)			  ## RF_ble.c:1684:60
 1e17ce0:    01 70             	r1 = 0			  ## RF_ble.c:1684:60
 1e17ce2:    59 02             	[sp+20] = r1			  ## RF_ble.c:1684:5
 1e17ce4:    41 70             	r1 = 4			  ## RF_ble.c:1684:5
 1e17ce6:    49 02             	[sp+16] = r1			  ## RF_ble.c:1684:5
 1e17ce8:    e1 fb 38 01       	r1 = sp + 312			  ## RF_ble.c:1684:5
 1e17cec:    39 02             	[sp+12] = r1			  ## RF_ble.c:1684:5
 1e17cee:    c1 a1             	r1 = sp + 28			  ## RF_ble.c:1684:5
 1e17cf0:    29 02             	[sp+8] = r1			  ## RF_ble.c:1684:5
 1e17cf2:    18 02             	[sp+4] = r0			  ## RF_ble.c:1684:5
 1e17cf4:    0b 9d             	r11 = r6 + 16			  ## RF_ble.c:1684:50
 1e17cf6:    e0 fc 64 00       	r0 = r14 + 100			  ## RF_ble.c:1684:19
 1e17cfa:    e1 fb 2b 01       	r1 = sp + 299			  ## RF_ble.c:1684:19
 1e17cfe:    b2 a1             	r2 = sp + 27			  ## RF_ble.c:1684:19
 1e17d00:    13 70             	r3 = 1			  ## RF_ble.c:1684:5
 1e17d02:    1b f5 00 00       	[sp] = r11			  ## RF_ble.c:1684:5
 1e17d06:    bf f3 69 77       	call -69934 <ccm_memory_v2 : 1e06bdc >			  ## RF_ble.c:1684:5
 1e17d0a:    00 f6 54 e0       	r0 = [r14 + 84]			  ## RF_ble.c:1687:26
 1e17d0e:    10 80             	r0 += 1			  ## RF_ble.c:1687:26
 1e17d10:    10 f6 54 e0       	[r14 + 84] = r0			  ## RF_ble.c:1687:26
 1e17d14:    f0 ef 02 10       	if (r0 != -1) goto 4 <__hw_tx_buf_proess+0x170 : 1e17d1c >			  ## RF_ble.c:1687:26
 1e17d18:    8f f3 bd 5b       	call 2013050 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e17d1c:    e5 6c             	r5 = b[r6 + 14] (u)			  ## RF_ble.c:1689:30
 1e17d1e:    c1 a1             	r1 = sp + 28			  ## RF_ble.c:1689:30
 1e17d20:    b0 08             	r0 = r11			  ## RF_ble.c:1689:5
 1e17d22:    52 08             	r2 = r5			  ## RF_ble.c:1689:5
 1e17d24:    97 f3 de 78       	call 3076540 <memcpy : 106ee4 >			  ## RF_ble.c:1689:5
 1e17d28:    00 f5 38 01       	r0 = [sp+312]			  ## RF_ble.c:1690:5
 1e17d2c:    41 bd             	r1 = r6 + r5			  ## RF_ble.c:1690:21
 1e17d2e:    08 63             	b[r1 + 16] = r0			  ## RF_ble.c:1690:5
 1e17d30:    02 d6             	r2 = r0 >> 24			  ## RF_ble.c:1690:5
 1e17d32:    3a 63             	b[r1 + 19] = r2			  ## RF_ble.c:1690:5
 1e17d34:    02 d4             	r2 = r0 >> 16			  ## RF_ble.c:1690:5
 1e17d36:    2a 63             	b[r1 + 18] = r2			  ## RF_ble.c:1690:5
 1e17d38:    00 d2             	r0 = r0 >> 8			  ## RF_ble.c:1690:5
 1e17d3a:    18 63             	b[r1 + 17] = r0			  ## RF_ble.c:1690:5
 1e17d3c:    40 9a             	r0 = r5 + 4			  ## RF_ble.c:1691:13
 1e17d3e:    e8 6c             	b[r6 + 14] = r0			  ## RF_ble.c:1691:13
 1e17d40:    16 f6 00 a0       	[r10 + 0] = r6			  ## RF_ble.c:2205:23
 1e17d44:    80 08             	r0 = r8			  ## RF_ble.c:2208:9
 1e17d46:    61 08             	r1 = r6			  ## RF_ble.c:2208:9
 1e17d48:    92 08             	r2 = r9			  ## RF_ble.c:2208:9
 1e17d4a:    bf f3 9f f8       	call -3778 <ble_hw_tx : 1e16e8c >			  ## RF_ble.c:2208:9
 1e17d4e:    00 f7 02 c0       	r0 = h[r12 + 2] (u)			  ## RF_ble.c:2211:9
 1e17d52:    61 5c             	r1 = h[r6 + 12] (u)			  ## RF_ble.c:2211:9
 1e17d54:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2211:9
 1e17d56:    c9 d0             	r1 = r1 >> 3			  ## RF_ble.c:2211:9
 1e17d58:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2211:9
 1e17d5c:    e0 fd 00 21       	r2 = r1 | r0			  ## RF_ble.c:2211:9
 1e17d60:    c1 fc 04 00       	r1 = r12 + 4			  ## RF_ble.c:2214:62
 1e17d64:    c0 fc 05 00       	r0 = r12 + 5			  ## RF_ble.c:2214:40
 1e17d68:    12 f7 02 c0       	h[r12 + 2] = r2			  ## RF_ble.c:2211:9
 1e17d6c:    09 e0 01 10       	if (r9 != 0) goto 2 <__hw_tx_buf_proess+0x1C6 : 1e17d72 >			  ## RF_ble.c:2211:9
 1e17d70:    10 08             	r0 = r1			  ## RF_ble.c:2214:21
 1e17d72:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:2215:9
 1e17d74:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:2215:9
 1e17d76:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:2215:9
 1e17d78:    21 4c             	r1 = [r6 + 8]			  ## RF_ble.c:2217:17
 1e17d7a:    20 22             	if (r1 == 0) goto 64 <__hw_tx_buf_proess+0x210 : 1e17dbc >			  ## RF_ble.c:2217:17
 1e17d7c:    00 f6 38 d0       	r0 = [r13 + 56]			  ## RF_ble.c:2218:30
 1e17d80:    81 00             	call r1			  ## RF_ble.c:2218:13
 1e17d82:    1c 18             	goto 56 <__hw_tx_buf_proess+0x210 : 1e17dbc >			  ## RF_ble.c:2218:13
 1e17d84:    1b 22             	if (r1 == 0) goto 54 <__hw_tx_buf_proess+0x210 : 1e17dbc >
 1e17d86:    60 52             	r0 = h[r1 + 12] (u)			  ## RF_ble.c:2224:22
 1e17d88:    29 f3 18 00       	if ((r0 & 512) != 0) goto 48 <__hw_tx_buf_proess+0x210 : 1e17dbc >			  ## RF_ble.c:2224:22
 1e17d8c:    03 f6 48 e0       	r3 = [r14 + 72]			  ## list.h:124:18
 1e17d90:    e4 fc 48 00       	r4 = r14 + 72			  ## RF_ble.c:2225:17
 1e17d94:    12 70             	r2 = 1			  ## RF_ble.c:2225:17
 1e17d96:    43 f2 01 10       	if (r3 != r4) goto 2 <__hw_tx_buf_proess+0x1F0 : 1e17d9c >
 1e17d9a:    02 70             	r2 = 0			  ## RF_ble.c:2225:17
 1e17d9c:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:2225:17
 1e17d9e:    c1 fd 48 02       	r0 <= insert(r2, p:9, l:1)			  ## RF_ble.c:2225:17
 1e17da2:    68 52             	h[r1 + 12] = r0			  ## RF_ble.c:2225:17
 1e17da4:    80 08             	r0 = r8			  ## RF_ble.c:2229:17
 1e17da6:    92 08             	r2 = r9			  ## RF_ble.c:2229:17
 1e17da8:    bf f3 70 f8       	call -3872 <ble_hw_tx : 1e16e8c >			  ## RF_ble.c:2229:17
 1e17dac:    07 18             	goto 14 <__hw_tx_buf_proess+0x210 : 1e17dbc >
 1e17dae:    00 f7 02 c0       	r0 = h[r12 + 2] (u)			  ## RF_ble.c:2184:13
 1e17db2:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2184:13
 1e17db4:    10 f7 02 c0       	h[r12 + 2] = r0			  ## RF_ble.c:2184:13
 1e17db8:    c0 f4 00 a9       	[r10 + 0] = 0			  ## RF_ble.c:2188:27
 1e17dbc:    a4 0a             	sp += 328
 1e17dbe:    5e 01             	{pc, r14-r4} = [sp++]			  ## RF_ble.c:2235:1


__hw_tx_process:
 1e17dc0:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2274:0
 1e17dc2:    fe 0b             	sp += -4			  ## RF_ble.c:2274:0
 1e17dc4:    04 08             	r4 = r0			  ## RF_ble.c:2274:0
 1e17dc6:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:2275:34
 1e17dc8:    61 2e             	if (r7 == 0) goto 194 <__hw_tx_process+0xCC : 1e17e8c >
 1e17dca:    00 f9 52 71       	r0 = b[r7 + 338] (u)			  ## RF_ble.c:2284:13
 1e17dce:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2284:36
 1e17dd0:    60 e0 5c 10       	if (r0 != 6) goto 184 <__hw_tx_process+0xCC : 1e17e8c >			  ## RF_ble.c:2284:36
 1e17dd4:    97 f3 e2 77       	call 3076036 <local_irq_disable : 106d9c >			  ## RF_ble.c:2288:5
 1e17dd8:    08 00             	csync			  ## RF_ble.c:2288:5
 1e17dda:    08 00             	csync			  ## RF_ble.c:2289:9
 1e17ddc:    76 fc ec 01       	r6 = r7 + 492			  ## RF_ble.c:2289:9
 1e17de0:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:2289:9
 1e17de2:    10 e0 51 00       	if (r0 == 1) goto 162 <__hw_tx_process+0xC8 : 1e17e88 >			  ## RF_ble.c:2289:9
 1e17de6:    97 f3 d9 77       	call 3076018 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e17dea:    08 00             	csync			  ## atomic.h:47:5
 1e17dec:    15 70             	r5 = 1			  ## atomic.h:47:5
 1e17dee:    0d 4c             	[r6 + 0] = r5			  ## atomic.h:49:16
 1e17df0:    97 f3 d2 77       	call 3076004 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e17df4:    97 f3 d0 77       	call 3076000 <local_irq_enable : 106d98 >			  ## RF_ble.c:2295:5
 1e17df8:    70 5e             	r0 = h[r7 + 14] (u)			  ## RF_ble.c:2307:41
 1e17dfa:    71 fc 64 00       	r1 = r7 + 100			  ## RF_ble.c:2307:41
 1e17dfe:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:2308:42
 1e17e00:    20 fd 01 09       	r0 = r0 & 1			  ## RF_ble.c:2307:31
 1e17e04:    13 62             	r3 = b[r1 + 1] (u)			  ## RF_ble.c:2309:42
 1e17e06:    52 c0             	r2 = r2 << 1			  ## RF_ble.c:2308:32
 1e17e08:    22 fd 02 29       	r2 = r2 & 2			  ## RF_ble.c:2308:32
 1e17e0c:    50 b4             	r0 |= r2			  ## RF_ble.c:2308:32
 1e17e0e:    9a c0             	r2 = r3 << 2			  ## RF_ble.c:2309:32
 1e17e10:    22 fd 04 29       	r2 = r2 & 4			  ## RF_ble.c:2309:32
 1e17e14:    50 b4             	r0 |= r2			  ## RF_ble.c:2309:32
 1e17e16:    d0 f5 02 00       	b[sp+2] = r0			  ## RF_ble.c:2309:32
 1e17e1a:    72 5e             	r2 = h[r7 + 14] (u)			  ## RF_ble.c:2312:41
 1e17e1c:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:2313:42
 1e17e1e:    22 fd 01 29       	r2 = r2 & 1			  ## RF_ble.c:2312:31
 1e17e22:    11 62             	r1 = b[r1 + 1] (u)			  ## RF_ble.c:2314:42
 1e17e24:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2313:32
 1e17e26:    23 fd 02 39       	r3 = r3 & 2			  ## RF_ble.c:2313:32
 1e17e2a:    52 b6             	r2 |= r3			  ## RF_ble.c:2313:32
 1e17e2c:    89 c0             	r1 = r1 << 2			  ## RF_ble.c:2314:32
 1e17e2e:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:2314:32
 1e17e32:    51 b4             	r1 |= r2			  ## RF_ble.c:2314:32
 1e17e34:    d0 b2             	r0 ^= r1			  ## RF_ble.c:2316:34
 1e17e36:    d1 f5 03 00       	b[sp+3] = r1			  ## RF_ble.c:2314:32
 1e17e3a:    70 e0 06 80       	if (r0 > 7) goto 12 <__hw_tx_process+0x8A : 1e17e4a >			  ## RF_ble.c:2314:32
 1e17e3e:    11 70             	r1 = 1
 1e17e40:    f8 fd 00 01       	r0 = r1 << r0
 1e17e44:    61 ff 8a 09 01 00 	if ((r0 & 138) != 0) goto 2 <__hw_tx_process+0x8C : 1e17e4c >
 1e17e4a:    05 70             	r5 = 0
 1e17e4c:    20 a0             	r0 = sp + 2
 1e17e4e:    50 ba             	r0 |= r5			  ## RF_ble.c:2335:46
 1e17e50:    07 60             	r7 = b[r0 + 0] (u)			  ## RF_ble.c:2335:46
 1e17e52:    25 fd 01 79       	r5 = r7 & 1			  ## RF_ble.c:2335:46
 1e17e56:    10 9a             	r0 = r5 + 1			  ## RF_ble.c:2336:20
 1e17e58:    fa fd 00 07       	r0 = r7 >> r0			  ## RF_ble.c:2336:20
 1e17e5c:    22 fd 01 09       	r2 = r0 & 1			  ## RF_ble.c:2336:20
 1e17e60:    40 08             	r0 = r4			  ## RF_ble.c:2340:5
 1e17e62:    51 08             	r1 = r5			  ## RF_ble.c:2340:5
 1e17e64:    a3 16             	call -698 <__hw_tx_buf_proess : 1e17bac >			  ## RF_ble.c:2340:5
 1e17e66:    20 70             	r0 = 2			  ## RF_ble.c:2344:20
 1e17e68:    00 f3 01 70       	if ((r7 & 1) == 0) goto 2 <__hw_tx_process+0xAE : 1e17e6e >			  ## RF_ble.c:2344:20
 1e17e6c:    10 70             	r0 = 1
 1e17e6e:    fa fd 00 07       	r0 = r7 >> r0
 1e17e72:    22 fd 01 09       	r2 = r0 & 1
 1e17e76:    11 fd 01 59       	r1 = r5 ^ 1			  ## RF_ble.c:2343:20
 1e17e7a:    40 08             	r0 = r4			  ## RF_ble.c:2348:5
 1e17e7c:    97 16             	call -722 <__hw_tx_buf_proess : 1e17bac >			  ## RF_ble.c:2348:5
 1e17e7e:    97 f3 8d 77       	call 3075866 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e17e82:    08 00             	csync			  ## atomic.h:47:5
 1e17e84:    c0 f4 00 69       	[r6 + 0] = 0			  ## atomic.h:49:16
 1e17e88:    97 f3 86 77       	call 3075852 <local_irq_enable : 106d98 >
 1e17e8c:    02 0a             	sp += 4
 1e17e8e:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2352:1


ble_rx_irq_handler:
 1e17e90:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:2821:0
 1e17e92:    78 f3 ff 03       	[--sp] = {r9-r0}			  ## RF_ble.c:2822:9
 1e17e96:    fc 0b             	sp += -8			  ## RF_ble.c:2822:9
 1e17e98:    c0 ff 64 30 00 00 	r0 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:2829:15
 1e17e9e:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2829:15
 1e17ea0:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:2829:31
 1e17ea2:    c0 ff 28 80 1c 00 	r0 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >
 1e17ea8:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:2831:13
 1e17eaa:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:2831:28
 1e17eac:    51 b5             	r1 &= r2			  ## RF_ble.c:2831:26
 1e17eae:    08 f3 52 10       	if ((r1 & 256) == 0) goto 164 <ble_rx_irq_handler+0xC6 : 1e17f56 >			  ## RF_ble.c:2831:26
 1e17eb2:    01 f4 01 0a       	[r0 + 4] |= 256			  ## RF_ble.c:2832:26
 1e17eb6:    10 48             	r0 = [r4 + 4]			  ## RF_ble5.c:185:18
 1e17eb8:    4e 30             	if (r0 != 0) goto 156 <ble_rx_irq_handler+0xC6 : 1e17f56 >			  ## RF_ble5.c:185:18
 1e17eba:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:2557:34
 1e17ebc:    56 fc 44 01       	r6 = r5 + 324
 1e17ec0:    d0 4c             	r0 = [r6 + 52]			  ## RF_ble.c:2577:13
 1e17ec2:    08 02             	[sp] = r0			  ## RF_ble.c:2577:11
 1e17ec4:    e0 4c             	r0 = [r6 + 56]			  ## RF_ble.c:2578:13
 1e17ec6:    18 02             	[sp+4] = r0			  ## RF_ble.c:2578:11
 1e17ec8:    e0 6c             	r0 = b[r6 + 14] (u)			  ## RF_ble.c:2581:20
 1e17eca:    81 5a             	r1 = h[r5 + 16] (u)			  ## RF_ble.c:2581:20
 1e17ecc:    38 fd 01 09       	r8 = r0 & 4294967294			  ## RF_ble.c:2583:32
 1e17ed0:    27 fd 01 19       	r7 = r1 & 1			  ## RF_ble.c:2583:32
 1e17ed4:    68 e0 0c 10       	if (r8 != 6) goto 24 <ble_rx_irq_handler+0x60 : 1e17ef0 >			  ## RF_ble.c:2583:32
 1e17ed8:    50 08             	r0 = r5			  ## RF_ble.c:2585:15
 1e17eda:    71 08             	r1 = r7			  ## RF_ble.c:2585:15
 1e17edc:    b7 14             	call -1682 <__ble_rx_buf_process_conn : 1e1784c >			  ## RF_ble.c:2585:15
 1e17ede:    11 5c             	r1 = h[r6 + 2] (u)			  ## RF_ble.c:2586:22
 1e17ee0:    11 b0             	r1 |= 1			  ## RF_ble.c:2586:22
 1e17ee2:    19 5c             	h[r6 + 2] = r1			  ## RF_ble.c:2586:22
 1e17ee4:    11 70             	r1 = 1			  ## RF_ble.c:2586:22
 1e17ee6:    10 e0 01 00       	if (r0 == 1) goto 2 <ble_rx_irq_handler+0x5C : 1e17eec >			  ## RF_ble.c:2586:22
 1e17eea:    01 70             	r1 = 0			  ## RF_ble.c:2589:5
 1e17eec:    76 08             	r6 = r7
 1e17eee:    16 18             	goto 44 <ble_rx_irq_handler+0x8C : 1e17f1c >
 1e17ef0:    16 fd 01 79       	r6 = r7 ^ 1			  ## RF_ble.c:2590:15
 1e17ef4:    b0 c0             	r0 = r6 << 2			  ## RF_ble.c:2056:5
 1e17ef6:    09 ba             	r9 = r5 + r0			  ## RF_ble.c:2056:5
 1e17ef8:    f0 7f             	r0 = 255			  ## RF_ble.c:2056:19
 1e17efa:    bf f3 93 f5       	call -5338 <hw_alloc_rx : 1e16a24 >			  ## RF_ble.c:2056:19
 1e17efe:    e1 9b             	r1 = r5 + 30			  ## RF_ble.c:2055:63
 1e17f00:    53 fc 20 00       	r3 = r5 + 32			  ## RF_ble.c:2055:38
 1e17f04:    10 f6 78 91       	[r9 + 376] = r0			  ## RF_ble.c:2056:17
 1e17f08:    01 2e             	if (r7 == 0) goto 2 <ble_rx_irq_handler+0x7C : 1e17f0c >			  ## RF_ble.c:2056:17
 1e17f0a:    13 08             	r3 = r1			  ## RF_ble.c:2055:14
 1e17f0c:    04 20             	if (r0 == 0) goto 8 <ble_rx_irq_handler+0x86 : 1e17f16 >
 1e17f0e:    40 81             	r0 += 20			  ## RF_ble.c:2064:25
 1e17f10:    bf f3 55 f6       	call -4950 <PHY_TO_BLE : 1e16bbe >			  ## RF_ble.c:2064:14
 1e17f14:    01 18             	goto 2 <ble_rx_irq_handler+0x88 : 1e17f18 >			  ## RF_ble.c:2064:14
 1e17f16:    00 70             	r0 = 0
 1e17f18:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:2060:16
 1e17f1a:    11 70             	r1 = 1
 1e17f1c:    00 a0             	r0 = sp + 0
 1e17f1e:    06 22             	if (r1 == 0) goto 12 <ble_rx_irq_handler+0x9C : 1e17f2c >
 1e17f20:    a1 f6 00 06       	r1 = [r0+r6<<2]			  ## RF_ble.c:2594:11
 1e17f24:    03 22             	if (r1 == 0) goto 6 <ble_rx_irq_handler+0x9C : 1e17f2c >
 1e17f26:    40 08             	r0 = r4			  ## RF_ble.c:2596:9
 1e17f28:    62 08             	r2 = r6			  ## RF_ble.c:2596:9
 1e17f2a:    b3 14             	call -1690 <__hw_rx_buf_process : 1e17892 >			  ## RF_ble.c:2596:9
 1e17f2c:    68 e0 11 10       	if (r8 != 6) goto 34 <ble_rx_irq_handler+0xC2 : 1e17f52 >
 1e17f30:    11 70             	r1 = 1			  ## RF_ble.c:2601:18
 1e17f32:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0xA6 : 1e17f36 >			  ## RF_ble.c:2601:18
 1e17f34:    01 70             	r1 = 0
 1e17f36:    00 a0             	r0 = sp + 0
 1e17f38:    a7 f6 00 01       	r7 = [r0+r1<<2]			  ## RF_ble.c:2601:15
 1e17f3c:    50 08             	r0 = r5			  ## RF_ble.c:2602:15
 1e17f3e:    86 14             	call -1780 <__ble_rx_buf_process_conn : 1e1784c >			  ## RF_ble.c:2602:15
 1e17f40:    08 2e             	if (r7 == 0) goto 16 <ble_rx_irq_handler+0xC2 : 1e17f52 >			  ## RF_ble.c:2602:15
 1e17f42:    10 e0 06 10       	if (r0 != 1) goto 12 <ble_rx_irq_handler+0xC2 : 1e17f52 >
 1e17f46:    12 70             	r2 = 1			  ## RF_ble.c:2601:18
 1e17f48:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0xBC : 1e17f4c >			  ## RF_ble.c:2601:18
 1e17f4a:    02 70             	r2 = 0
 1e17f4c:    40 08             	r0 = r4			  ## RF_ble.c:2604:13
 1e17f4e:    71 08             	r1 = r7			  ## RF_ble.c:2604:13
 1e17f50:    a0 14             	call -1728 <__hw_rx_buf_process : 1e17892 >			  ## RF_ble.c:2604:13
 1e17f52:    40 08             	r0 = r4			  ## RF_ble.c:2609:5
 1e17f54:    35 17             	call -406 <__hw_tx_process : 1e17dc0 >			  ## RF_ble.c:2609:5
 1e17f56:    04 0a             	sp += 8
 1e17f58:    70 f3 ff 03       	{r9-r0} = [sp++]			  ## RF_ble.c:2847:1
 1e17f5c:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:2847:1
 1e17f5e:    22 00             	rti			  ## RF_ble.c:2847:1


__get_latency_valid:
 1e17f60:    34 00             	[--sp] = rets			  ## le_low_power.c:230:0
 1e17f62:    02 08             	r2 = r0			  ## le_low_power.c:230:0
 1e17f64:    01 44             	r1 = [r2 + 0]			  ## le_low_power.c:231:31
 1e17f66:    03 f9 56 11       	r3 = b[r1 + 342] (u)			  ## le_low_power.c:233:14
 1e17f6a:    00 70             	r0 = 0			  ## le_low_power.c:233:14
 1e17f6c:    10 26             	if (r3 == 0) goto 32 <__get_latency_valid+0x2E : 1e17f8e >			  ## le_low_power.c:233:14
 1e17f6e:    01 f9 57 11       	r1 = b[r1 + 343] (u)			  ## le_low_power.c:237:14
 1e17f72:    11 e0 0c 00       	if (r1 == 1) goto 24 <__get_latency_valid+0x2E : 1e17f8e >
 1e17f76:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e17f78:    20 08             	r0 = r2			  ## le_low_power.c:72:18
 1e17f7a:    bf f3 ce f9       	call -3172 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:72:18
 1e17f7e:    01 08             	r1 = r0			  ## le_low_power.c:72:18
 1e17f80:    c2 ff 80 ff 00 00 	r2 = 65408 <_IRQ_MEM_ADDR+0x80 : ff80 >			  ## le_low_power.c:241:31
 1e17f86:    10 70             	r0 = 1			  ## le_low_power.c:242:9
 1e17f88:    21 f1 01 00       	if ((r1 & r2) != 0) goto 2 <__get_latency_valid+0x2E : 1e17f8e >			  ## le_low_power.c:242:9
 1e17f8c:    00 70             	r0 = 0			  ## le_low_power.c:242:9
 1e17f8e:    30 00             	pc = [sp++]			  ## le_low_power.c:246:1


__get_interval:
 1e17f90:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:55:0
 1e17f92:    03 08             	r3 = r0			  ## le_low_power.c:55:0
 1e17f94:    11 70             	r1 = 1			  ## le_low_power.c:56:13
 1e17f96:    bf f3 c0 f9       	call -3200 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:56:13
 1e17f9a:    01 fb ff 7f       	r1 = 32767 <nvbss_size+0xD7F : 7fff >			  ## le_low_power.c:56:41
 1e17f9e:    e2 fd 10 40       	r4 = r0 & r1			  ## le_low_power.c:56:41
 1e17fa2:    f1 70             	r1 = 15			  ## le_low_power.c:56:54
 1e17fa4:    30 08             	r0 = r3			  ## le_low_power.c:56:54
 1e17fa6:    bf f3 b8 f9       	call -3216 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:56:54
 1e17faa:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:56:91
 1e17fac:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:56:91
 1e17fb0:    50 b8             	r0 |= r4			  ## le_low_power.c:56:51
 1e17fb2:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:56:5


__power_get_timeout.3564:
 1e17fb4:    7b 01             	[--sp] = {rets, r11-r4}			  ## le_low_power.c:254:0
 1e17fb6:    05 08             	r5 = r0			  ## le_low_power.c:254:0
 1e17fb8:    0a f6 00 50       	r10 = [r5 + 0]			  ## le_low_power.c:257:31
 1e17fbc:    c9 ff 38 80 1c 00 	r9 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e17fc2:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e17fc8:    08 70             	r8 = 0
 1e17fca:    00 f6 00 90       	r0 = [r9 + 0]			  ## le_low_power.c:262:9
 1e17fce:    21 f3 58 00       	if ((r0 & 2) != 0) goto 176 <__power_get_timeout.3564+0xCE : 1e18082 >			  ## le_low_power.c:262:9
 1e17fd2:    bf f3 ce f7       	call -4196 <check_event_pending : 1e16f72 >			  ## le_low_power.c:262:32
 1e17fd6:    55 30             	if (r0 != 0) goto 170 <__power_get_timeout.3564+0xCE : 1e18082 >			  ## le_low_power.c:262:32
 1e17fd8:    00 f9 5d a1       	r0 = b[r10 + 349] (u)			  ## le_low_power.c:269:14
 1e17fdc:    0e 20             	if (r0 == 0) goto 28 <__power_get_timeout.3564+0x46 : 1e17ffa >			  ## le_low_power.c:269:14
 1e17fde:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e17fe0:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e17fe2:    bf f3 9a f9       	call -3276 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:63:12
 1e17fe6:    b0 09             	r0 += r11			  ## le_low_power.c:63:40
 1e17fe8:    23 04             	r3 = r0.l (u)			  ## le_low_power.c:270:13
 1e17fea:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e17fec:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e17fee:    bf f3 94 f9       	call -3288 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:81:13
 1e17ff2:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:270:44
 1e17ff4:    f0 8f             	r0 += -1			  ## le_low_power.c:270:68
 1e17ff6:    03 f2 44 00       	if (r3 == r0) goto 136 <__power_get_timeout.3564+0xCE : 1e18082 >			  ## le_low_power.c:270:68
 1e17ffa:    50 08             	r0 = r5			  ## le_low_power.c:275:16
 1e17ffc:    bf f3 a2 f9       	call -3260 <__get_clkn : 1e17344 >			  ## le_low_power.c:275:16
 1e18000:    06 08             	r6 = r0			  ## le_low_power.c:275:16
 1e18002:    50 08             	r0 = r5			  ## le_low_power.c:279:9
 1e18004:    ad 17             	call -166 <__get_latency_valid : 1e17f60 >			  ## le_low_power.c:279:9
 1e18006:    64 08             	r4 = r6			  ## le_low_power.c:279:9
 1e18008:    25 20             	if (r0 == 0) goto 74 <__power_get_timeout.3564+0xA0 : 1e18054 >			  ## le_low_power.c:279:9
 1e1800a:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e1800c:    50 08             	r0 = r5			  ## le_low_power.c:72:18
 1e1800e:    bf f3 84 f9       	call -3320 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:72:18
 1e18012:    04 08             	r4 = r0			  ## le_low_power.c:72:18
 1e18014:    50 08             	r0 = r5			  ## le_low_power.c:284:27
 1e18016:    bc 17             	call -136 <__get_interval : 1e17f90 >			  ## le_low_power.c:284:27
 1e18018:    03 08             	r3 = r0			  ## le_low_power.c:284:27
 1e1801a:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e1801c:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e1801e:    bf f3 7c f9       	call -3336 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:81:13
 1e18022:    07 08             	r7 = r0			  ## le_low_power.c:81:13
 1e18024:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e18026:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e18028:    bf f3 77 f9       	call -3346 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:63:12
 1e1802c:    02 f9 5d a1       	r2 = b[r10 + 349] (u)			  ## le_low_power.c:292:18
 1e18030:    89 fd 38 14       	r1 = uextra(r4, p:7, l:9)			  ## le_low_power.c:289:32
 1e18034:    64 08             	r4 = r6			  ## le_low_power.c:289:30
 1e18036:    80 fe 30 41       	r4 += r1 * r3			  ## le_low_power.c:289:30
 1e1803a:    0c 24             	if (r2 == 0) goto 24 <__power_get_timeout.3564+0xA0 : 1e18054 >
 1e1803c:    b0 09             	r0 += r11			  ## le_low_power.c:63:40
 1e1803e:    20 be             	r0 = r7 - r0			  ## le_low_power.c:293:50
 1e18040:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:293:50
 1e18042:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_get_timeout.3564+0xA0 : 1e18054 >			  ## le_low_power.c:293:50
 1e18046:    11 80             	r1 += 1			  ## le_low_power.c:294:30
 1e18048:    01 f2 04 30       	if (r1 < r0) goto 8 <__power_get_timeout.3564+0xA0 : 1e18054 >			  ## le_low_power.c:294:30
 1e1804c:    e0 8f             	r0 += -2			  ## le_low_power.c:297:68
 1e1804e:    64 08             	r4 = r6			  ## le_low_power.c:297:42
 1e18050:    80 fe 30 40       	r4 += r0 * r3			  ## le_low_power.c:297:42
 1e18054:    50 08             	r0 = r5			  ## le_low_power.c:304:20
 1e18056:    bf f3 75 f9       	call -3350 <__get_clkn : 1e17344 >			  ## le_low_power.c:304:20
 1e1805a:    02 3c             	if (r6 != 0) goto 4 <__power_get_timeout.3564+0xAC : 1e18060 >
 1e1805c:    60 f2 b5 8f       	if (r0 > r6) goto -150 <__power_get_timeout.3564+0x16 : 1e17fca >
 1e18060:    50 e0 0f 30       	if (r0 < 5) goto 30 <__power_get_timeout.3564+0xCE : 1e18082 >
 1e18064:    00 f6 00 90       	r0 = [r9 + 0]			  ## le_low_power.c:316:9
 1e18068:    21 f3 0b 00       	if ((r0 & 2) != 0) goto 22 <__power_get_timeout.3564+0xCE : 1e18082 >
 1e1806c:    bf f3 81 f7       	call -4350 <check_event_pending : 1e16f72 >			  ## le_low_power.c:316:32
 1e18070:    08 30             	if (r0 != 0) goto 16 <__power_get_timeout.3564+0xCE : 1e18082 >			  ## le_low_power.c:316:32
 1e18072:    00 fb 71 02       	r0 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## le_low_power.c:323:46
 1e18076:    20 0e             	r0 = r4 * r0			  ## le_low_power.c:323:46
 1e18078:    00 fc 3c f6       	r0 = r0 + -2500			  ## le_low_power.c:323:46
 1e1807c:    44 e0 01 30       	if (r4 < 4) goto 2 <__power_get_timeout.3564+0xCE : 1e18082 >			  ## le_low_power.c:323:46
 1e18080:    08 08             	r8 = r0			  ## le_low_power.c:323:12
 1e18082:    80 08             	r0 = r8			  ## le_low_power.c:324:1
 1e18084:    5b 01             	{pc, r11-r4} = [sp++]			  ## le_low_power.c:324:1


__power_suspend_probe:
 1e18086:    34 00             	[--sp] = rets			  ## le_low_power.c:366:0
 1e18088:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:366:0
 1e1808e:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:367:5
 1e18090:    71 b1             	r1 &= 4294967291			  ## le_low_power.c:367:5
 1e18092:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:367:5
 1e18094:    00 f4 20 09       	[r0 + 0] |= 32			  ## le_low_power.c:368:5
 1e18098:    00 f4 01 09       	[r0 + 0] |= 1			  ## le_low_power.c:369:5
 1e1809c:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:374:9
 1e1809e:    08 f3 09 10       	if ((r1 & 256) == 0) goto 18 <__power_suspend_probe+0x2E : 1e180b4 >			  ## le_low_power.c:374:9
 1e180a2:    00 40             	r0 = [r0 + 0]
 1e180a4:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1E0FEC : 1fffc00 >
 1e180a8:    50 b3             	r0 &= r1
 1e180aa:    20 ff 18 0a 02 00 	if (r0 == 6144) goto 4 <__power_suspend_probe+0x2E : 1e180b4 >
 1e180b0:    8f f3 f1 59       	call 2012130 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e180b4:    30 00             	pc = [sp++]			  ## le_low_power.c:377:1


__power_suspend_post.3565:
 1e180b6:    79 01             	[--sp] = {rets, r9-r4}			  ## le_low_power.c:381:0
 1e180b8:    04 08             	r4 = r0			  ## le_low_power.c:381:0
 1e180ba:    09 f6 00 40       	r9 = [r4 + 0]			  ## le_low_power.c:384:31
 1e180be:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e180c4:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:387:12
 1e180c6:    03 f3 fd 2f       	if ((r2 & 8) == 0) goto -6 <__power_suspend_post.3565+0xE : 1e180c4 >			  ## le_low_power.c:387:5
 1e180ca:    00 fc 34 7c       	r0 = r0 + 31796
 1e180ce:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:389:12
 1e180d0:    2b f3 fd 2f       	if ((r2 & 2048) != 0) goto -6 <__power_suspend_post.3565+0x18 : 1e180ce >			  ## le_low_power.c:389:5
 1e180d4:    00 40             	r0 = [r0 + 0]			  ## le_low_power.c:391:24
 1e180d6:    02 fb ff 07       	r2 = 2047 <DRIVER_CODE_TOTAL+0x6D : 7ff >			  ## le_low_power.c:391:37
 1e180da:    50 b5             	r0 &= r2			  ## le_low_power.c:391:37
 1e180dc:    c2 70             	r2 = 12			  ## le_low_power.c:391:46
 1e180de:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## le_low_power.c:391:46
 1e180e2:    10 09             	r0 += r1			  ## le_low_power.c:391:21
 1e180e4:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## le_low_power.c:392:25
 1e180e8:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## le_low_power.c:392:25
 1e180ec:    18 90             	r8 = r0 + 1			  ## le_low_power.c:392:40
 1e180ee:    40 08             	r0 = r4			  ## le_low_power.c:396:16
 1e180f0:    bf f3 28 f9       	call -3504 <__get_clkn : 1e17344 >			  ## le_low_power.c:396:16
 1e180f4:    05 08             	r5 = r0			  ## le_low_power.c:396:16
 1e180f6:    40 08             	r0 = r4			  ## le_low_power.c:400:9
 1e180f8:    33 17             	call -410 <__get_latency_valid : 1e17f60 >			  ## le_low_power.c:400:9
 1e180fa:    27 20             	if (r0 == 0) goto 78 <__power_suspend_post.3565+0x94 : 1e1814a >			  ## le_low_power.c:400:9
 1e180fc:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e180fe:    40 08             	r0 = r4			  ## le_low_power.c:72:18
 1e18100:    bf f3 0b f9       	call -3562 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:72:18
 1e18104:    07 08             	r7 = r0			  ## le_low_power.c:72:18
 1e18106:    40 08             	r0 = r4			  ## le_low_power.c:402:27
 1e18108:    43 17             	call -378 <__get_interval : 1e17f90 >			  ## le_low_power.c:402:27
 1e1810a:    03 08             	r3 = r0			  ## le_low_power.c:402:27
 1e1810c:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e1810e:    40 08             	r0 = r4			  ## le_low_power.c:81:13
 1e18110:    bf f3 03 f9       	call -3578 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:81:13
 1e18114:    06 08             	r6 = r0			  ## le_low_power.c:81:13
 1e18116:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e18118:    40 08             	r0 = r4			  ## le_low_power.c:63:12
 1e1811a:    bf f3 fe f8       	call -3588 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:63:12
 1e1811e:    04 f9 5d 91       	r4 = b[r9 + 349] (u)			  ## le_low_power.c:410:18
 1e18122:    89 fd 38 27       	r2 = uextra(r7, p:7, l:9)			  ## le_low_power.c:407:32
 1e18126:    51 08             	r1 = r5			  ## le_low_power.c:407:30
 1e18128:    80 fe 30 12       	r1 += r2 * r3			  ## le_low_power.c:407:30
 1e1812c:    0f 28             	if (r4 == 0) goto 30 <__power_suspend_post.3565+0x96 : 1e1814c >
 1e1812e:    c4 ff ff ff 00 00 	r4 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e18134:    40 09             	r0 += r4			  ## le_low_power.c:63:40
 1e18136:    20 bc             	r0 = r6 - r0			  ## le_low_power.c:411:50
 1e18138:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:411:50
 1e1813a:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_suspend_post.3565+0x96 : 1e1814c >			  ## le_low_power.c:411:50
 1e1813e:    12 80             	r2 += 1			  ## le_low_power.c:412:30
 1e18140:    02 f2 04 30       	if (r2 < r0) goto 8 <__power_suspend_post.3565+0x96 : 1e1814c >			  ## le_low_power.c:412:30
 1e18144:    e0 8f             	r0 += -2			  ## le_low_power.c:415:68
 1e18146:    80 fe 30 50       	r5 += r0 * r3			  ## le_low_power.c:415:42
 1e1814a:    51 08             	r1 = r5
 1e1814c:    81 f2 02 80       	if (r1 > r8) goto 4 <__power_suspend_post.3565+0x9E : 1e18154 >
 1e18150:    8f f3 a1 59       	call 2011970 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18154:    59 01             	{pc, r9-r4} = [sp++]			  ## le_low_power.c:428:1


__set_ble_anchor_con:
 1e18156:    c3 ff 1c 80 1c 00 	r3 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:262:0
 1e1815c:    1a 46             	[r3 + 4] = r2			  ## RF_ble.c:263:21
 1e1815e:    08 00             	csync			  ## RF_ble.c:264:5
 1e18160:    c2 ff 64 30 00 00 	r2 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:134:19
 1e18166:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:134:19
 1e18168:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e1816a:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:134:17
 1e1816c:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e1816e:    e0 fe 20 00       	r0 = r0 / r2 (s)			  ## RF_ble.c:134:17
 1e18172:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e18174:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e18178:    89 c2             	r1 = r1 << 10			  ## RF_ble.c:265:30
 1e1817a:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e1817c:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:265:67
 1e18180:    08 46             	[r3 + 0] = r0			  ## RF_ble.c:265:21
 1e18182:    20 00             	rts			  ## RF_ble.c:266:1


__power_resume.3566:
 1e18184:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_low_power.c:439:0
 1e18186:    04 08             	r4 = r0			  ## le_low_power.c:439:0
 1e18188:    07 48             	r7 = [r4 + 0]			  ## le_low_power.c:442:31
 1e1818a:    10 08             	r0 = r1			  ## le_low_power.c:446:16
 1e1818c:    bf f3 7c dd       	call -17672 <bt_get_fine_cnt : 1e13c88 >			  ## le_low_power.c:446:16
 1e18190:    c1 ff 7c 0f 00 00 	r1 = 3964 <ble_finetimecnt_poweroff_sfr : f7c >			  ## le_low_power.c:434:12
 1e18196:    01 42             	r1 = [r1 + 0]			  ## le_low_power.c:434:12
 1e18198:    09 b2             	r9 = r1 + r0			  ## le_low_power.c:448:14
 1e1819a:    40 08             	r0 = r4			  ## le_low_power.c:450:16
 1e1819c:    bf f3 d2 f8       	call -3676 <__get_clkn : 1e17344 >			  ## le_low_power.c:450:16
 1e181a0:    05 08             	r5 = r0			  ## le_low_power.c:450:16
 1e181a2:    02 3a             	if (r5 != 0) goto 4 <__power_resume.3566+0x24 : 1e181a8 >
 1e181a4:    8f f3 77 59       	call 2011886 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e181a8:    00 fb 71 02       	r0 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >
 1e181ac:    c0 fe 00 69       	r6 = r9 / r0 (u)
 1e181b0:    40 08             	r0 = r4			  ## le_low_power.c:454:23
 1e181b2:    ee 16             	call -548 <__get_interval : 1e17f90 >			  ## le_low_power.c:454:23
 1e181b4:    01 f9 52 71       	r1 = b[r7 + 338] (u)			  ## le_low_power.c:474:31
 1e181b8:    71 e0 02 10       	if (r1 != 7) goto 4 <__power_resume.3566+0x3C : 1e181c0 >
 1e181bc:    d0 fe 00 66       	r6 = r6 % r0 (u)			  ## le_low_power.c:475:47
 1e181c0:    12 9c             	r2 = r6 + 1
 1e181c2:    25 f2 01 30       	if (r5 < r2) goto 2 <__power_resume.3566+0x44 : 1e181c8 >
 1e181c6:    00 70             	r0 = 0
 1e181c8:    27 b4             	r7 = r2 - r0			  ## le_low_power.c:479:9
 1e181ca:    c8 ff 38 80 1c 00 	r8 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e181d0:    17 f6 08 80       	[r8 + 8] = r7			  ## le_low_power.c:483:22
 1e181d4:    38 dc             	r0 = r7 >>> 16			  ## le_low_power.c:484:34
 1e181d6:    10 f6 0c 80       	[r8 + 12] = r0			  ## le_low_power.c:484:22
 1e181da:    06 fb 71 02       	r6 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## le_low_power.c:485:32
 1e181de:    d0 fe 60 09       	r0 = r9 % r6 (u)			  ## le_low_power.c:485:32
 1e181e2:    71 b0             	r1 &= 4294967294			  ## le_low_power.c:487:39
 1e181e4:    10 f6 04 80       	[r8 + 4] = r0			  ## le_low_power.c:485:21
 1e181e8:    61 e0 7b 10       	if (r1 != 6) goto 246 <__power_resume.3566+0x15E : 1e182e2 >			  ## le_low_power.c:485:21
 1e181ec:    40 08             	r0 = r4			  ## le_low_power.c:130:23
 1e181ee:    d0 16             	call -608 <__get_interval : 1e17f90 >			  ## le_low_power.c:130:23
 1e181f0:    01 f6 10 80       	r1 = [r8 + 16]			  ## le_low_power.c:131:55
 1e181f4:    61 bc             	r1 = r6 - r1			  ## le_low_power.c:131:53
 1e181f6:    62 05             	r2 = r5.l (u)			  ## le_low_power.c:131:13
 1e181f8:    80 fe 60 12       	r1 += r2 * r6			  ## le_low_power.c:131:37
 1e181fc:    e2 bb             	r2 = r5 - r7			  ## le_low_power.c:133:25
 1e181fe:    a2 04             	r2 = r2.l (u)			  ## le_low_power.c:133:10
 1e18200:    03 fc ff ff       	r3 = r0 + -1			  ## le_low_power.c:133:54
 1e18204:    05 70             	r5 = 0			  ## le_low_power.c:133:54
 1e18206:    32 f2 0a 10       	if (r2 != r3) goto 20 <__power_resume.3566+0x9A : 1e1821e >
 1e1820a:    02 f6 10 80       	r2 = [r8 + 16]			  ## le_low_power.c:133:80
 1e1820e:    03 f6 04 80       	r3 = [r8 + 4]			  ## le_low_power.c:133:98
 1e18212:    32 09             	r2 += r3			  ## le_low_power.c:133:96
 1e18214:    15 70             	r5 = 1			  ## le_low_power.c:133:77
 1e18216:    03 ff 71 22 01 00 	if (r2 < 625) goto 2 <__power_resume.3566+0x9A : 1e1821e >
 1e1821c:    05 70             	r5 = 0			  ## le_low_power.c:133:77
 1e1821e:    19 f2 09 30       	if (r9 < r1) goto 18 <__power_resume.3566+0xB0 : 1e18234 >
 1e18222:    90 fb 10 19       	r1 = r9 - r1			  ## le_low_power.c:144:25
 1e18226:    62 08             	r2 = r6			  ## le_low_power.c:145:57
 1e18228:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## le_low_power.c:145:57
 1e1822c:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## le_low_power.c:145:73
 1e18230:    50 09             	r0 += r5			  ## le_low_power.c:145:73
 1e18232:    15 90             	r5 = r0 + 1			  ## le_low_power.c:145:87
 1e18234:    40 08             	r0 = r4			  ## le_low_power.c:496:13
 1e18236:    94 16             	call -728 <__get_latency_valid : 1e17f60 >			  ## le_low_power.c:496:13
 1e18238:    18 20             	if (r0 == 0) goto 48 <__power_resume.3566+0xE6 : 1e1826a >			  ## le_low_power.c:496:13
 1e1823a:    61 70             	r1 = 6			  ## le_low_power.c:157:18
 1e1823c:    40 08             	r0 = r4			  ## le_low_power.c:157:18
 1e1823e:    bf f3 6c f8       	call -3880 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:157:18
 1e18242:    85 fd 40 10       	r1 = uextra(r0, p:8, l:5)			  ## le_low_power.c:162:87
 1e18246:    22 fd 3f 09       	r2 = r0 & 63			  ## le_low_power.c:162:40
 1e1824a:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:162:57
 1e1824c:    80 fe a0 21       	r2 += r1 * r10			  ## le_low_power.c:162:54
 1e18250:    51 72             	r1 = 37			  ## le_low_power.c:162:97
 1e18252:    d0 fe 10 12       	r1 = r2 % r1 (u)			  ## le_low_power.c:162:97
 1e18256:    c2 ff c0 ff 00 00 	r2 = 65472 <_IRQ_MEM_ADDR+0xC0 : ffc0 >			  ## le_low_power.c:162:28
 1e1825c:    50 b5             	r0 &= r2			  ## le_low_power.c:162:28
 1e1825e:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:162:28
 1e18262:    61 70             	r1 = 6			  ## le_low_power.c:164:5
 1e18264:    40 08             	r0 = r4			  ## le_low_power.c:164:5
 1e18266:    77 17             	call -274 <__set_ble_anchor_con : 1e18156 >			  ## le_low_power.c:164:5
 1e18268:    01 18             	goto 2 <__power_resume.3566+0xE8 : 1e1826c >			  ## le_low_power.c:164:5
 1e1826a:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:178:33
 1e1826c:    09 f6 00 40       	r9 = [r4 + 0]			  ## le_low_power.c:171:31
 1e18270:    91 70             	r1 = 9			  ## le_low_power.c:177:18
 1e18272:    40 08             	r0 = r4			  ## le_low_power.c:177:18
 1e18274:    bf f3 51 f8       	call -3934 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:177:18
 1e18278:    05 08             	r5 = r0			  ## le_low_power.c:177:18
 1e1827a:    89 fd 38 05       	r0 = uextra(r5, p:7, l:9)			  ## le_low_power.c:178:9
 1e1827e:    a0 f2 03 20       	if (r0 >= r10) goto 6 <__power_resume.3566+0x104 : 1e18288 >			  ## le_low_power.c:178:9
 1e18282:    01 f7 58 91       	r1 = h[r9 + 344] (u)			  ## le_low_power.c:181:32
 1e18286:    10 09             	r0 += r1			  ## le_low_power.c:181:45
 1e18288:    90 fb a0 70       	r7 = r0 - r10
 1e1828c:    21 70             	r1 = 2			  ## le_low_power.c:185:18
 1e1828e:    40 08             	r0 = r4			  ## le_low_power.c:185:18
 1e18290:    bf f3 43 f8       	call -3962 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:185:18
 1e18294:    06 08             	r6 = r0			  ## le_low_power.c:185:18
 1e18296:    00 fb ff 01       	r0 = 511 <BTCTLER_CONTROLLER_BSS_SIZE+0x3F : 1ff >			  ## le_low_power.c:187:31
 1e1829a:    50 bf             	r0 &= r7			  ## le_low_power.c:187:31
 1e1829c:    21 fd fe 6a       	r1 = r6 & 65024			  ## le_low_power.c:187:31
 1e182a0:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:187:31
 1e182a4:    21 70             	r1 = 2			  ## le_low_power.c:189:5
 1e182a6:    40 08             	r0 = r4			  ## le_low_power.c:189:5
 1e182a8:    56 17             	call -340 <__set_ble_anchor_con : 1e18156 >			  ## le_low_power.c:189:5
 1e182aa:    f8 c1             	r0 = r7 << 7			  ## le_low_power.c:189:5
 1e182ac:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:197:33
 1e182ae:    21 fd 3f 59       	r1 = r5 & 63			  ## le_low_power.c:197:33
 1e182b2:    50 b2             	r0 |= r1			  ## le_low_power.c:197:33
 1e182b4:    02 fd 40 09       	r2 = r0 | 64			  ## le_low_power.c:197:33
 1e182b8:    91 70             	r1 = 9			  ## le_low_power.c:197:5
 1e182ba:    40 08             	r0 = r4			  ## le_low_power.c:197:5
 1e182bc:    4c 17             	call -360 <__set_ble_anchor_con : 1e18156 >			  ## le_low_power.c:197:5
 1e182be:    00 f7 58 91       	r0 = h[r9 + 344] (u)			  ## le_low_power.c:202:38
 1e182c2:    c9 fd 00 60       	r6 <= insert(r0, p:0, l:9)			  ## le_low_power.c:202:31
 1e182c6:    a2 05             	r2 = r6.l (u)			  ## le_low_power.c:206:33
 1e182c8:    21 70             	r1 = 2			  ## le_low_power.c:206:5
 1e182ca:    40 08             	r0 = r4			  ## le_low_power.c:206:5
 1e182cc:    44 17             	call -376 <__set_ble_anchor_con : 1e18156 >			  ## le_low_power.c:206:5
 1e182ce:    31 70             	r1 = 3			  ## le_low_power.c:221:24
 1e182d0:    40 08             	r0 = r4			  ## le_low_power.c:221:24
 1e182d2:    bf f3 22 f8       	call -4028 <__get_ble_anchor_con : 1e1731a >			  ## le_low_power.c:221:24
 1e182d6:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:226:33
 1e182d8:    80 fb a0 20       	r2 = r0 + r10			  ## le_low_power.c:226:50
 1e182dc:    31 70             	r1 = 3			  ## le_low_power.c:226:5
 1e182de:    40 08             	r0 = r4			  ## le_low_power.c:226:5
 1e182e0:    3a 17             	call -396 <__set_ble_anchor_con : 1e18156 >			  ## le_low_power.c:226:5
 1e182e2:    00 f4 04 89       	[r8 + 0] |= 4			  ## le_low_power.c:507:5
 1e182e6:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_low_power.c:508:1


__power_resume_post:
 1e182e8:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:511:0
 1e182ea:    c4 ff 38 80 1c 00 	r4 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:511:0
 1e182f0:    01 48             	r1 = [r4 + 0]			  ## le_low_power.c:519:12
 1e182f2:    23 f3 fd 1f       	if ((r1 & 8) != 0) goto -6 <__power_resume_post+0x8 : 1e182f0 >			  ## le_low_power.c:519:5
 1e182f6:    bf f3 25 f8       	call -4022 <__get_clkn : 1e17344 >			  ## le_low_power.c:521:16
 1e182fa:    00 48             	r0 = [r4 + 0]			  ## le_low_power.c:524:9
 1e182fc:    10 04             	r0 = r0.b0 (s)			  ## le_low_power.c:524:9
 1e182fe:    f0 ef 04 c0       	ifs (r0 > -1) goto 8 <__power_resume_post+0x22 : 1e1830a >			  ## le_low_power.c:524:9
 1e18302:    40 fc 38 7c       	r0 = r4 + 31800			  ## le_low_power.c:525:19
 1e18306:    00 f4 02 09       	[r0 + 0] |= 2			  ## le_low_power.c:525:19
 1e1830a:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:529:1


le_hw_init:
 1e1830c:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:4270:0
 1e1830e:    c7 ff 80 fc 1c 00 	r7 = 1899648 <uECC_vli_cmp_unsafe+0xC8C84 : 1cfc80 >			  ## RF_ble.c:4270:0
 1e18314:    00 f4 01 79       	[r7 + 0] |= 1			  ## RF_ble.c:4273:16
 1e18318:    20 fb 64 64       	r6 = 1867776			  ## RF_ble.c:4273:16
 1e1831c:    c0 f4 01 69       	[r6 + 0] = 1			  ## RF_ble.c:4275:15
 1e18320:    00 fb 01 13       	r0 = 4865 <UPDATE_CODE_TOTAL_SIZE+0x6D : 1301 >			  ## RF_ble.c:4278:17
 1e18324:    d8 4c             	[r6 + 52] = r0			  ## RF_ble.c:4278:17
 1e18326:    00 fb 68 0f       	r0 = 3944 <config_hci_ll_param.0 : f68 >			  ## RF_ble.c:4246:14
 1e1832a:    bf f3 72 aa       	call -43804 <malloc : 1e0d812 >			  ## RF_ble.c:4246:14
 1e1832e:    04 08             	r4 = r0			  ## RF_ble.c:4246:14
 1e18330:    c0 ff 64 30 00 00 	r0 = 12388 <bb_hdl : 3064 >			  ## RF_ble.c:4246:12
 1e18336:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:4246:12
 1e18338:    02 38             	if (r4 != 0) goto 4 <le_hw_init+0x32 : 1e1833e >			  ## RF_ble.c:4246:12
 1e1833a:    8f f3 ac 58       	call 2011480 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1833e:    01 70             	r1 = 0			  ## RF_ble.c:4248:5
 1e18340:    02 fb 68 0f       	r2 = 3944 <config_hci_ll_param.0 : f68 >			  ## RF_ble.c:4248:5
 1e18344:    40 08             	r0 = r4			  ## RF_ble.c:4248:5
 1e18346:    97 f3 d3 75       	call 3074982 <memset : 106ef0 >			  ## RF_ble.c:4248:5
 1e1834a:    40 fc 24 00       	r0 = r4 + 36			  ## RF_ble.c:4250:58
 1e1834e:    48 48             	[r4 + 16] = r0			  ## RF_ble.c:4250:24
 1e18350:    40 fc 40 00       	r0 = r4 + 64			  ## RF_ble.c:4251:69
 1e18354:    58 48             	[r4 + 20] = r0			  ## RF_ble.c:4251:31
 1e18356:    40 fc a0 02       	r0 = r4 + 672			  ## RF_ble.c:4252:51
 1e1835a:    68 48             	[r4 + 24] = r0			  ## RF_ble.c:4252:28
 1e1835c:    45 fc 7d 08       	r5 = r4 + 2173			  ## RF_ble.c:4253:51
 1e18360:    7d 48             	[r4 + 28] = r5			  ## RF_ble.c:4253:28
 1e18362:    1c 4e             	[r7 + 4] = r4			  ## RF_ble.c:4261:19
 1e18364:    41 fc 68 0f       	r1 = r4 + 3944			  ## RF_ble.c:4263:45
 1e18368:    09 4f             	[r7 + 64] = r1			  ## RF_ble.c:4263:19
 1e1836a:    01 fb dd 05       	r1 = 1501 <BTCTLER_CONTROLLER_DATA_SIZE+0x121 : 5dd >			  ## hw_dma.c:34:18
 1e1836e:    bf f3 9c 73       	call -71880 <lbuf_init_btctrler : 1e06aaa >			  ## hw_dma.c:34:18
 1e18372:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## hw_dma.c:36:16
 1e18378:    10 f6 0c 41       	[r4 + 268] = r0			  ## hw_dma.c:34:16
 1e1837c:    01 fb eb 06       	r1 = 1771 <BTCTLER_COMMON_RAM_TOTAL+0x6F : 6eb >			  ## hw_dma.c:36:18
 1e18380:    50 08             	r0 = r5			  ## hw_dma.c:36:18
 1e18382:    bf f3 92 73       	call -71900 <lbuf_init_btctrler : 1e06aaa >			  ## hw_dma.c:36:18
 1e18386:    10 f6 10 41       	[r4 + 272] = r0			  ## hw_dma.c:36:16
 1e1838a:    c2 ff 5e 73 e1 01 	r2 = 31552350 <ble_event_irq_handler : 1e1735e >			  ## RF_ble.c:4282:5
 1e18390:    70 72             	r0 = 39			  ## RF_ble.c:4282:5
 1e18392:    21 70             	r1 = 2			  ## RF_ble.c:4282:5
 1e18394:    bf f3 f9 aa       	call -43534 <request_irq : 1e0d98a >			  ## RF_ble.c:4282:5
 1e18398:    c2 ff 90 7e e1 01 	r2 = 31555216 <ble_rx_irq_handler : 1e17e90 >			  ## RF_ble.c:4283:5
 1e1839e:    60 72             	r0 = 38			  ## RF_ble.c:4283:5
 1e183a0:    21 70             	r1 = 2			  ## RF_ble.c:4283:5
 1e183a2:    bf f3 f2 aa       	call -43548 <request_irq : 1e0d98a >			  ## RF_ble.c:4283:5
 1e183a6:    00 f4 20 6a       	[r6 + 0] |= 8192			  ## RF_ble.c:1515:5
 1e183aa:    00 f4 40 6a       	[r6 + 0] |= 16384			  ## RF_ble.c:1516:5
 1e183ae:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:1517:5
 1e183b0:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1517:5
 1e183b2:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:1517:5
 1e183b4:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:1529:5
 1e183b6:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1E0FEC : 1fffc00 >			  ## RF_ble.c:1529:5
 1e183ba:    50 b3             	r0 &= r1			  ## RF_ble.c:1529:5
 1e183bc:    00 fd 78 09       	r0 = r0 | 120			  ## RF_ble.c:1529:5
 1e183c0:    28 4c             	[r6 + 8] = r0			  ## RF_ble.c:1529:5
 1e183c2:    02 f4 f0 6a       	[r6 + 8] |= 61440			  ## RF_ble.c:1530:5
 1e183c6:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:1531:5
 1e183c8:    50 b3             	r0 &= r1			  ## RF_ble.c:1531:5
 1e183ca:    00 fd 64 09       	r0 = r0 | 100			  ## RF_ble.c:1531:5
 1e183ce:    38 4c             	[r6 + 12] = r0			  ## RF_ble.c:1531:5
 1e183d0:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1534:5
 1e183d2:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1534:5
 1e183d6:    00 fd 5a 09       	r0 = r0 | 90			  ## RF_ble.c:1534:5
 1e183da:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1534:5
 1e183dc:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1535:5
 1e183de:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1535:5
 1e183e2:    00 fd 78 0a       	r0 = r0 | 30720			  ## RF_ble.c:1535:5
 1e183e6:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1535:5
 1e183e8:    50 4c             	r0 = [r6 + 20]			  ## RF_ble.c:1538:5
 1e183ea:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1538:5
 1e183ee:    00 fd 1e 09       	r0 = r0 | 30			  ## RF_ble.c:1538:5
 1e183f2:    58 4c             	[r6 + 20] = r0			  ## RF_ble.c:1538:5
 1e183f4:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1541:5
 1e183f6:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1541:5
 1e183fa:    00 fd 0a 09       	r0 = r0 | 10			  ## RF_ble.c:1541:5
 1e183fe:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1541:5
 1e18400:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1542:5
 1e18402:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1542:5
 1e18406:    00 fd 0a 0a       	r0 = r0 | 2560			  ## RF_ble.c:1542:5
 1e1840a:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1542:5
 1e1840c:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:4286:1


le_hw_send_packet:
 1e1840e:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:3828:0
 1e18410:    04 08             	r4 = r0			  ## RF_ble.c:3828:0
 1e18412:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:3829:34
 1e18414:    00 f7 ea 61       	r0 = h[r6 + 490] (u)
 1e18418:    77 02             	r7 = [sp+28]
 1e1841a:    35 08             	r5 = r3
 1e1841c:    28 08             	r8 = r2
 1e1841e:    19 08             	r9 = r1
 1e18420:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet+0x1A : 1e18428 >
 1e18424:    8f f3 37 58       	call 2011246 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18428:    70 08             	r0 = r7			  ## RF_ble.c:3832:27
 1e1842a:    bf f3 d5 f4       	call -5718 <hw_alloc_tx : 1e16dd8 >			  ## RF_ble.c:3832:27
 1e1842e:    07 08             	r7 = r0			  ## RF_ble.c:3832:27
 1e18430:    03 3e             	if (r7 != 0) goto 6 <le_hw_send_packet+0x2A : 1e18438 >
 1e18432:    8f f3 30 58       	call 2011232 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18436:    07 70             	r7 = 0			  ## cpu.h:148:5
 1e18438:    00 70             	r0 = 0
 1e1843a:    38 4e             	[r7 + 12] = r0			  ## RF_ble.c:3837:25
 1e1843c:    28 4e             	[r7 + 8] = r0			  ## RF_ble.c:3837:25
 1e1843e:    18 4e             	[r7 + 4] = r0			  ## RF_ble.c:3837:25
 1e18440:    08 4e             	[r7 + 0] = r0			  ## RF_ble.c:3837:25
 1e18442:    f0 fd 20 09       	r0 = r9 << 4			  ## RF_ble.c:3839:5
 1e18446:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:3839:5
 1e1844a:    68 5e             	h[r7 + 12] = r0			  ## RF_ble.c:3839:5
 1e1844c:    ed 6e             	b[r7 + 14] = r5			  ## RF_ble.c:3840:5
 1e1844e:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <le_hw_send_packet+0x4A : 1e18458 >			  ## RF_ble.c:3840:5
 1e18454:    8f f3 1f 58       	call 2011198 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18458:    00 9f             	r0 = r7 + 16			  ## RF_ble.c:3846:5
 1e1845a:    81 08             	r1 = r8			  ## RF_ble.c:3846:5
 1e1845c:    52 08             	r2 = r5			  ## RF_ble.c:3846:5
 1e1845e:    97 f3 41 75       	call 3074690 <memcpy : 106ee4 >			  ## RF_ble.c:3846:5
 1e18462:    65 fc 46 01       	r5 = r6 + 326			  ## RF_ble.c:3846:5
 1e18466:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:3850:22
 1e1846a:    71 08             	r1 = r7			  ## RF_ble.c:3850:5
 1e1846c:    bf f3 49 72       	call -72558 <hw_dma_push : 1e06902 >			  ## RF_ble.c:3850:5
 1e18470:    00 5a             	r0 = h[r5 + 0] (u)
 1e18472:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e18476:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:823:23
 1e1847a:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:823:23
 1e1847c:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet+0x7C : 1e1848a >			  ## RF_ble.c:823:23
 1e18480:    c0 71             	r0 = 28			  ## RF_ble.c:827:28
 1e18482:    10 f7 60 60       	h[r6 + 96] = r0			  ## RF_ble.c:827:28
 1e18486:    10 f7 5e 60       	h[r6 + 94] = r0			  ## RF_ble.c:828:28
 1e1848a:    40 08             	r0 = r4			  ## RF_ble.c:3854:5
 1e1848c:    99 14             	call -1742 <__hw_tx_process : 1e17dc0 >			  ## RF_ble.c:3854:5
 1e1848e:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:365:17
 1e18490:    20 e0 02 80       	if (r0 > 2) goto 4 <le_hw_send_packet+0x8A : 1e18498 >			  ## RF_ble.c:365:17
 1e18494:    30 70             	r0 = 3
 1e18496:    a8 5a             	h[r5 + 20] = r0
 1e18498:    40 08             	r0 = r4			  ## RF_ble.c:3859:5
 1e1849a:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:3859:5
 1e1849c:    ff f3 fa f2       	goto -6668 <ble_latency_manualhold : 1e16a94 >			  ## RF_ble.c:3859:5


ble_rx_update_handle_register:
 1e184a0:    c1 ff 70 0f 00 00 	r1 = 3952 <rx_update_handle : f70 >			  ## RF_ble.c:2355:0
 1e184a6:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:2363:22
 1e184a8:    20 00             	rts			  ## RF_ble.c:2364:1
 1e184aa:    00 00             	nop


master_sca:
 1e184ac:    f4 01             	[--sp] = {psr, sr4, retx}
 1e184ae:    fa 00             	flushinv [r10]
 1e184b0:    96 00             	goto r6
 1e184b2:    64 00             	cli r4
 1e184b4:    4b 00             	testset b[r11]
 1e184b6:    32 00             	pc = [sp++]
 1e184b8:    1e 00             	sti
 1e184ba:    14 00             	lockset


conn_handler:
 1e184bc:    de 88             	r14 += -115
 1e184be:    e1 01             	[--sp] = {psr, reti}
 1e184c0:    00 00             	nop
 1e184c2:    00 00             	nop
 1e184c4:    8e 89             	r14 += -104
 1e184c6:    e1 01             	[--sp] = {psr, reti}
 1e184c8:    d0 89             	r0 += -99
 1e184ca:    e1 01             	[--sp] = {psr, reti}
 1e184cc:    00 00             	nop
 1e184ce:    00 00             	nop


master_features_exchange_steps:
 1e184d0:    08 00             	csync
 1e184d2:    09 40             	[r0 + 0] = r1
 1e184d4:    ff 06             	r15 = -17


disconnect_steps:
 1e184d6:    02 00             	idle
 1e184d8:    00 80             	r0 += 0
 1e184da:    ff 0e             	r7 = r7 * r3


version_ind_steps:
 1e184dc:    0c 00             	syscall
 1e184de:    0c 40             	[r0 + 0] = r4
 1e184e0:    ff 08             	r15 = r15


restart_encryption_steps:
 1e184e2:    0a 00             	ssync
 1e184e4:    0b 40             	[r0 + 0] = r3
 1e184e6:    0b 00             	ssync
 1e184e8:    00 80             	r0 += 0
 1e184ea:    03 00             	idle
 1e184ec:    04 40             	r4 = [r0 + 0]
 1e184ee:    05 40             	r5 = [r0 + 0]
 1e184f0:    06 00             	hbkpt
 1e184f2:    06 40             	r6 = [r0 + 0]
 1e184f4:    ff 0a             	sp += 508


start_encryption_steps:
 1e184f6:    03 00             	idle
 1e184f8:    04 40             	r4 = [r0 + 0]
 1e184fa:    05 40             	r5 = [r0 + 0]
 1e184fc:    06 00             	hbkpt
 1e184fe:    06 40             	r6 = [r0 + 0]
 1e18500:    ff 09             	r15 += r15


restart_encryption_req_steps:
 1e18502:    05 00             	bkpt
 1e18504:    06 40             	r6 = [r0 + 0]
 1e18506:    06 00             	hbkpt
 1e18508:    ff 0c             	r15 >>>= r3


start_encryption_req_steps:
 1e1850a:    05 00             	bkpt
 1e1850c:    06 40             	r6 = [r0 + 0]
 1e1850e:    06 00             	hbkpt
 1e18510:    ff 0b             	sp += -4
 1e18512:    00 00             	nop


adv_handler:
 1e18514:    e2 9b             	r2 = r5 + 30
 1e18516:    e1 01             	[--sp] = {psr, reti}
 1e18518:    00 00             	nop
 1e1851a:    00 00             	nop
 1e1851c:    00 00             	nop
 1e1851e:    00 00             	nop
 1e18520:    00 00             	nop
 1e18522:    00 00             	nop
 1e18524:    00 00             	nop
 1e18526:    00 00             	nop


ll_link_for_handle:
 1e18528:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:759:0
 1e1852a:    c3 ff e0 2d 00 00 	r3 = 11744 <ll_hdl : 2de0 >			  ## link_layer.c:759:0
 1e18530:    02 f9 22 30       	r2 = b[r3 + 34] (u)			  ## link_layer.c:760:17
 1e18534:    01 08             	r1 = r0			  ## link_layer.c:760:17
 1e18536:    00 70             	r0 = 0
 1e18538:    0e 24             	if (r2 == 0) goto 28 <ll_link_for_handle+0x2E : 1e18556 >
 1e1853a:    92 46             	r2 = [r3 + 36]
 1e1853c:    43 82             	r3 += 36
 1e1853e:    32 f2 0a 00       	if (r2 == r3) goto 20 <ll_link_for_handle+0x2E : 1e18556 >
 1e18542:    04 f7 c4 20       	r4 = h[r2 + 196] (u)			  ## link_layer.c:769:13
 1e18546:    14 f2 04 00       	if (r4 == r1) goto 8 <ll_link_for_handle+0x2A : 1e18552 >			  ## link_layer.c:769:13
 1e1854a:    02 44             	r2 = [r2 + 0]
 1e1854c:    32 f2 f9 1f       	if (r2 != r3) goto -14 <ll_link_for_handle+0x1A : 1e18542 >
 1e18550:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:775:1
 1e18552:    20 fc cc ff       	r0 = r2 + -52
 1e18556:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:775:1


ll_adv_close:
 1e18558:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:843:0
 1e1855a:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:843:0
 1e18560:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:849:9
 1e18562:    17 20             	if (r0 == 0) goto 46 <ll_adv_close+0x3A : 1e18592 >			  ## ll_adv.c:849:9
 1e18564:    14 40             	r4 = [r0 + 4]			  ## ll_adv.c:855:44
 1e18566:    15 28             	if (r4 == 0) goto 42 <ll_adv_close+0x3A : 1e18592 >
 1e18568:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:865:19
 1e1856a:    02 20             	if (r0 == 0) goto 4 <ll_adv_close+0x18 : 1e18570 >			  ## ll_adv.c:865:19
 1e1856c:    bf f3 aa ec       	call -9900 <le_hw_close : 1e15ec4 >			  ## ll_adv.c:866:9
 1e18570:    50 48             	r0 = [r4 + 20]			  ## ll_adv.c:92:19
 1e18572:    04 20             	if (r0 == 0) goto 8 <ll_adv_close+0x24 : 1e1857c >			  ## ll_adv.c:92:19
 1e18574:    bf f3 7c 49       	call -93448 <sys_timer_remove : 1e01870 >			  ## ll_adv.c:93:9
 1e18578:    c5 f4 00 49       	[r4 + 20] = 0			  ## ll_adv.c:94:27
 1e1857c:    40 08             	r0 = r4			  ## ll_adv.c:871:5
 1e1857e:    bf f3 7a 49       	call -93452 <__bt_free : 1e01876 >			  ## ll_adv.c:871:5
 1e18582:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:873:5
 1e18584:    04 70             	r4 = 0			  ## ll_adv.c:873:5
 1e18586:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:873:22
 1e18588:    0c 60             	b[r0 + 0] = r4			  ## ll_adv.c:875:20
 1e1858a:    03 20             	if (r0 == 0) goto 6 <ll_adv_close+0x3A : 1e18592 >			  ## ll_adv.c:875:20
 1e1858c:    bf f3 73 49       	call -93466 <__bt_free : 1e01876 >			  ## ll_adv.c:70:9
 1e18590:    0c 4a             	[r5 + 0] = r4			  ## ll_adv.c:71:16
 1e18592:    55 01             	{pc, r5, r4} = [sp++]


ll_response_timeout_stop:
 1e18594:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1367:0
 1e18596:    04 08             	r4 = r0			  ## link_layer.c:1367:0
 1e18598:    00 f6 4c 41       	r0 = [r4 + 332]			  ## link_layer.c:1368:15
 1e1859c:    05 20             	if (r0 == 0) goto 10 <ll_response_timeout_stop+0x14 : 1e185a8 >			  ## link_layer.c:1368:15
 1e1859e:    bf f3 67 49       	call -93490 <sys_timer_remove : 1e01870 >			  ## link_layer.c:1369:9
 1e185a2:    00 70             	r0 = 0			  ## link_layer.c:1370:32
 1e185a4:    10 f6 4c 41       	[r4 + 332] = r0			  ## link_layer.c:1370:32
 1e185a8:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1372:1


ll_supervision_timeout_stop:
 1e185aa:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1193:0
 1e185ac:    04 08             	r4 = r0			  ## link_layer.c:1193:0
 1e185ae:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1194:15
 1e185b2:    05 20             	if (r0 == 0) goto 10 <ll_supervision_timeout_stop+0x14 : 1e185be >			  ## link_layer.c:1194:15
 1e185b4:    bf f3 5c 49       	call -93512 <sys_timer_remove : 1e01870 >			  ## link_layer.c:1195:9
 1e185b8:    00 70             	r0 = 0			  ## link_layer.c:1196:35
 1e185ba:    10 f6 50 41       	[r4 + 336] = r0			  ## link_layer.c:1196:35
 1e185be:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1198:1


ll_close_conn_link:
 1e185c0:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:893:0
 1e185c2:    04 08             	r4 = r0			  ## link_layer.c:893:0
 1e185c4:    45 fc f8 00       	r5 = r4 + 248			  ## link_layer.c:893:0
 1e185c8:    f0 4a             	r0 = [r5 + 60]			  ## link_layer.c:234:5
 1e185ca:    56 fc 3c 00       	r6 = r5 + 60			  ## link_layer.c:234:5
 1e185ce:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x2A : 1e185ea >			  ## link_layer.c:234:5
 1e185d2:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e185d4:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e185d6:    07 40             	r7 = [r0 + 0]
 1e185d8:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e185da:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e185dc:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e185de:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e185e0:    bf f3 49 49       	call -93550 <__bt_free : 1e01876 >			  ## link_layer.c:236:9
 1e185e4:    70 08             	r0 = r7
 1e185e6:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x12 : 1e185d2 >
 1e185ea:    10 4b             	r0 = [r5 + 68]			  ## link_layer.c:199:5
 1e185ec:    56 fc 44 00       	r6 = r5 + 68			  ## link_layer.c:199:5
 1e185f0:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x4C : 1e1860c >			  ## link_layer.c:199:5
 1e185f4:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e185f6:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e185f8:    07 40             	r7 = [r0 + 0]
 1e185fa:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e185fc:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e185fe:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e18600:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e18602:    bf f3 38 49       	call -93584 <__bt_free : 1e01876 >			  ## link_layer.c:201:9
 1e18606:    70 08             	r0 = r7
 1e18608:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x34 : 1e185f4 >
 1e1860c:    30 4b             	r0 = [r5 + 76]			  ## link_layer.c:319:5
 1e1860e:    56 fc 4c 00       	r6 = r5 + 76			  ## link_layer.c:319:5
 1e18612:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x6E : 1e1862e >			  ## link_layer.c:319:5
 1e18616:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e18618:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e1861a:    07 40             	r7 = [r0 + 0]
 1e1861c:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e1861e:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e18620:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e18622:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e18624:    bf f3 27 49       	call -93618 <__bt_free : 1e01876 >			  ## link_layer.c:321:9
 1e18628:    70 08             	r0 = r7
 1e1862a:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x56 : 1e18616 >
 1e1862e:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:1105:5
 1e18630:    c6 9a             	r6 = r5 + 12			  ## link_layer.c:1105:5
 1e18632:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x8E : 1e1864e >			  ## link_layer.c:1105:5
 1e18636:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e18638:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e1863a:    07 40             	r7 = [r0 + 0]
 1e1863c:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e1863e:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e18640:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e18642:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e18644:    bf f3 17 49       	call -93650 <__bt_free : 1e01876 >			  ## link_layer.c:1107:9
 1e18648:    70 08             	r0 = r7
 1e1864a:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x76 : 1e18636 >
 1e1864e:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:916:15
 1e18650:    02 20             	if (r0 == 0) goto 4 <ll_close_conn_link+0x96 : 1e18656 >			  ## link_layer.c:916:15
 1e18652:    bf f3 37 ec       	call -10130 <le_hw_close : 1e15ec4 >			  ## link_layer.c:917:9
 1e18656:    d0 48             	r0 = [r4 + 52]			  ## list.h:171:36
 1e18658:    e1 48             	r1 = [r4 + 56]			  ## list.h:171:23
 1e1865a:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e1865c:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e1865e:    40 fc 34 00       	r0 = r4 + 52			  ## link_layer.c:923:21
 1e18662:    d8 48             	[r4 + 52] = r0			  ## list.h:172:17
 1e18664:    e8 48             	[r4 + 56] = r0			  ## list.h:173:17
 1e18666:    00 5a             	r0 = h[r5 + 0] (u)			  ## link_layer.c:925:28
 1e18668:    c1 ff e0 2d 00 00 	r1 = 11744 <ll_hdl : 2de0 >			  ## link_layer.c:927:19
 1e1866e:    02 53             	r2 = h[r1 + 32] (u)			  ## link_layer.c:788:20
 1e18670:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:788:24
 1e18674:    13 70             	r3 = 1			  ## link_layer.c:788:24
 1e18676:    f8 fd 00 03       	r0 = r3 << r0			  ## link_layer.c:788:24
 1e1867a:    e3 fd 00 02       	r0 = r2 & ~r0			  ## link_layer.c:788:20
 1e1867e:    08 53             	h[r1 + 32] = r0			  ## link_layer.c:788:20
 1e18680:    00 f9 22 10       	r0 = b[r1 + 34] (u)			  ## link_layer.c:927:19
 1e18684:    f0 8f             	r0 += -1			  ## link_layer.c:927:19
 1e18686:    10 f9 22 10       	b[r1 + 34] = r0			  ## link_layer.c:927:19
 1e1868a:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:929:25
 1e1868e:    01 70             	r1 = 0			  ## link_layer.c:929:5
 1e18690:    97 f3 c6 73       	call 3073932 <os_mutex_del : 106e20 >			  ## link_layer.c:929:5
 1e18694:    40 08             	r0 = r4			  ## link_layer.c:931:5
 1e18696:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:931:5
 1e18698:    ff f3 ed 48       	goto -93734 <__bt_free : 1e01876 >			  ## link_layer.c:931:5


ll_delete_link:
 1e1869c:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:935:0
 1e1869e:    04 08             	r4 = r0			  ## link_layer.c:935:0
 1e186a0:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:938:26
 1e186a4:    01 70             	r1 = 0			  ## link_layer.c:938:5
 1e186a6:    05 70             	r5 = 0			  ## link_layer.c:938:5
 1e186a8:    97 f3 bc 73       	call 3073912 <os_mutex_pend : 106e24 >			  ## link_layer.c:938:5
 1e186ac:    40 08             	r0 = r4			  ## link_layer.c:940:5
 1e186ae:    72 17             	call -284 <ll_response_timeout_stop : 1e18594 >			  ## link_layer.c:940:5
 1e186b0:    40 08             	r0 = r4			  ## link_layer.c:942:5
 1e186b2:    7b 17             	call -266 <ll_supervision_timeout_stop : 1e185aa >			  ## link_layer.c:942:5
 1e186b4:    40 fc 98 00       	r0 = r4 + 152
 1e186b8:    4d 51             	h[r0 + 40] = r5			  ## link_layer.c:710:19
 1e186ba:    4d 60             	b[r0 + 4] = r5			  ## link_layer.c:712:5
 1e186bc:    0d 40             	[r0 + 0] = r5			  ## link_layer.c:712:5
 1e186be:    40 08             	r0 = r4			  ## link_layer.c:948:5
 1e186c0:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:948:5
 1e186c2:    7e 1f             	goto -260 <ll_close_conn_link : 1e185c0 >			  ## link_layer.c:948:5


ll_destroy:
 1e186c4:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:3219:0
 1e186c6:    48 17             	call -368 <ll_adv_close : 1e18558 >			  ## link_layer.c:3230:5
 1e186c8:    c4 ff e0 2d 00 00 	r4 = 11744 <ll_hdl : 2de0 >			  ## link_layer.c:3230:5
 1e186ce:    00 f9 22 40       	r0 = b[r4 + 34] (u)			  ## link_layer.c:3239:17
 1e186d2:    0b 20             	if (r0 == 0) goto 22 <ll_destroy+0x26 : 1e186ea >			  ## link_layer.c:3239:17
 1e186d4:    90 48             	r0 = [r4 + 36]			  ## link_layer.c:3241:9
 1e186d6:    45 fc 24 00       	r5 = r4 + 36			  ## link_layer.c:3241:9
 1e186da:    50 f2 06 00       	if (r0 == r5) goto 12 <ll_destroy+0x26 : 1e186ea >			  ## link_layer.c:3241:9
 1e186de:    46 f6 cc 0f       	r6 = [r0 ++= -52]
 1e186e2:    dc 17             	call -72 <ll_delete_link : 1e1869c >			  ## link_layer.c:3243:13
 1e186e4:    60 08             	r0 = r6			  ## link_layer.c:3243:13
 1e186e6:    56 f2 fa 1f       	if (r6 != r5) goto -12 <ll_destroy+0x1A : 1e186de >			  ## link_layer.c:3243:13
 1e186ea:    60 48             	r0 = [r4 + 24]			  ## link_layer.c:3248:24
 1e186ec:    03 20             	if (r0 == 0) goto 6 <ll_destroy+0x30 : 1e186f4 >			  ## link_layer.c:3248:24
 1e186ee:    80 98             	r0 = r4 + 8			  ## link_layer.c:3249:9
 1e186f0:    bf f3 c6 48       	call -93812 <thread_delete : 1e01880 >			  ## link_layer.c:3249:9
 1e186f4:    bf f3 47 ec       	call -10098 <le_hw_destroy : 1e15f86 >			  ## link_layer.c:3253:5
 1e186f8:    10 48             	r0 = [r4 + 4]			  ## link_layer.c:3256:17
 1e186fa:    02 20             	if (r0 == 0) goto 4 <ll_destroy+0x3C : 1e18700 >			  ## link_layer.c:3256:17
 1e186fc:    bf f3 d2 48       	call -93788 <lbuf_clear_btctrler : 1e018a4 >			  ## link_layer.c:3257:9
 1e18700:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:3265:1


__rx_oneshot_add:
 1e18702:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:207:0
 1e18704:    04 08             	r4 = r0			  ## link_layer.c:207:0
 1e18706:    c0 70             	r0 = 12			  ## link_layer.c:208:25
 1e18708:    bf f3 f1 6f       	call -73758 <__bt_malloc : 1e066ee >			  ## link_layer.c:208:25
 1e1870c:    0c 20             	if (r0 == 0) goto 24 <__rx_oneshot_add+0x24 : 1e18726 >			  ## link_layer.c:208:25
 1e1870e:    c1 ff 7e 88 e1 01 	r1 = 31557758 <__set_conn_winsize : 1e1887e >			  ## link_layer.c:213:17
 1e18714:    29 40             	[r0 + 8] = r1			  ## link_layer.c:213:17
 1e18716:    41 fc 34 01       	r1 = r4 + 308			  ## link_layer.c:213:17
 1e1871a:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e1871c:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e1871e:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e18720:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e18722:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e18724:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:216:1
 1e18726:    14 01             	{rets, r4} = [sp++]			  ## cpu.h:148:5
 1e18728:    cf f3 b5 56       	goto 2010474 <p33_soft_reset : 3496 >			  ## cpu.h:148:5


__connection_upadte:
 1e1872c:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1554:0
 1e1872e:    04 08             	r4 = r0			  ## link_layer.c:1554:0
 1e18730:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1555:29
 1e18732:    42 99             	r2 = r4 + 20			  ## link_layer.c:1555:57
 1e18734:    71 70             	r1 = 7			  ## link_layer.c:1555:5
 1e18736:    bf f3 bf ed       	call -9346 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:1555:5
 1e1873a:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1531:29
 1e1873c:    21 71             	r1 = 18			  ## link_layer.c:1531:5
 1e1873e:    02 70             	r2 = 0			  ## link_layer.c:1531:5
 1e18740:    bf f3 ba ed       	call -9356 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:1531:5
 1e18744:    00 f6 c4 40       	r0 = [r4 + 196]			  ## link_layer.c:446:15
 1e18748:    00 f3 03 00       	if ((r0 & 1) == 0) goto 6 <__connection_upadte+0x26 : 1e18752 >			  ## link_layer.c:446:15
 1e1874c:    70 b0             	r0 &= 4294967294			  ## link_layer.c:449:33
 1e1874e:    10 f6 c4 40       	[r4 + 196] = r0			  ## link_layer.c:449:33
 1e18752:    40 08             	r0 = r4			  ## link_layer.c:1559:5
 1e18754:    d6 17             	call -84 <__rx_oneshot_add : 1e18702 >			  ## link_layer.c:1559:5
 1e18756:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1247:15
 1e1875a:    06 20             	if (r0 == 0) goto 12 <__connection_upadte+0x3C : 1e18768 >
 1e1875c:    11 59             	r1 = h[r4 + 34] (u)			  ## link_layer.c:1564:47
 1e1875e:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:53:5
 1e18760:    01 fe 0a 19       	r1 = r1 * 10			  ## link_layer.c:1564:69
 1e18764:    bf f3 7c 9d       	call -50440 <sys_timer_modify : 1e0c260 >			  ## sys_timer.c:53:5
 1e18768:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1568:1


__hci_emit_le_meta_event:
 1e1876a:    62 01             	[--sp] = {r3, r2}			  ## link_layer.c:364:0
 1e1876c:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:364:0
 1e1876e:    fe 0b             	sp += -4			  ## link_layer.c:364:0
 1e18770:    14 08             	r4 = r1			  ## link_layer.c:364:0
 1e18772:    05 08             	r5 = r0			  ## link_layer.c:364:0
 1e18774:    f5 ee 18 80       	if (r5 > 239) goto 48 <__hci_emit_le_meta_event+0x3E : 1e187a8 >			  ## link_layer.c:364:0
 1e18778:    c0 ff 10 0e 00 00 	r0 = 3600 <hci_param : e10 >			  ## link_layer.c:351:9
 1e1877e:    71 60             	r1 = b[r0 + 7] (u)			  ## link_layer.c:351:9
 1e18780:    00 70             	r0 = 0			  ## link_layer.c:351:9
 1e18782:    05 f3 3b 10       	if ((r1 & 32) == 0) goto 118 <__hci_emit_le_meta_event+0x92 : 1e187fc >			  ## link_layer.c:351:9
 1e18786:    51 fc ff ff       	r1 = r5 + -1			  ## link_layer.c:352:23
 1e1878a:    82 70             	r2 = 8			  ## link_layer.c:353:47
 1e1878c:    e0 fe 20 21       	r2 = r1 / r2 (s)			  ## link_layer.c:353:47
 1e18790:    c3 ff bc 0e 00 00 	r3 = 3772 <le_param : ebc >			  ## link_layer.c:353:13
 1e18796:    02 fa 00 23       	r2 = b[r2+r3] (u)			  ## link_layer.c:353:13
 1e1879a:    21 fd 07 19       	r1 = r1 & 7			  ## link_layer.c:353:54
 1e1879e:    13 70             	r3 = 1			  ## link_layer.c:353:54
 1e187a0:    f8 fd 10 13       	r1 = r3 << r1			  ## link_layer.c:353:54
 1e187a4:    12 f0 2a 00       	if ((r2 & r1) == 0) goto 84 <__hci_emit_le_meta_event+0x92 : 1e187fc >			  ## link_layer.c:353:54
 1e187a8:    c1 a1             	r1 = sp + 28
 1e187aa:    09 02             	[sp] = r1			  ## link_layer.c:372:5
 1e187ac:    40 08             	r0 = r4			  ## link_layer.c:337:12
 1e187ae:    bf f3 a6 6f       	call -73908 <__vsprintf_len : 1e066fe >			  ## link_layer.c:337:12
 1e187b2:    c8 ff e0 2d 00 00 	r8 = 11744 <ll_hdl : 2de0 >
 1e187b8:    02 f6 04 80       	r2 = [r8 + 4]			  ## link_layer.c:338:41
 1e187bc:    07 08             	r7 = r0			  ## link_layer.c:337:12
 1e187be:    31 9e             	r1 = r7 + 3			  ## link_layer.c:338:62
 1e187c0:    20 08             	r0 = r2			  ## link_layer.c:338:13
 1e187c2:    bf f3 16 70       	call -73684 <lbuf_alloc_btctrler : 1e067f2 >			  ## link_layer.c:338:13
 1e187c6:    06 08             	r6 = r0			  ## link_layer.c:338:13
 1e187c8:    03 2c             	if (r6 == 0) goto 6 <__hci_emit_le_meta_event+0x66 : 1e187d0 >			  ## link_layer.c:339:9
 1e187ca:    10 9e             	r0 = r7 + 1			  ## link_layer.c:337:9
 1e187cc:    18 6c             	b[r6 + 1] = r0			  ## link_layer.c:343:16
 1e187ce:    05 18             	goto 10 <__hci_emit_le_meta_event+0x70 : 1e187da >			  ## link_layer.c:343:16
 1e187d0:    8f f3 61 56       	call 2010306 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e187d4:    8f f3 5f 56       	call 2010302 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e187d8:    06 70             	r6 = 0			  ## cpu.h:148:5
 1e187da:    e0 73             	r0 = 62			  ## link_layer.c:377:18
 1e187dc:    08 6c             	b[r6 + 0] = r0			  ## link_layer.c:377:18
 1e187de:    2d 6c             	b[r6 + 2] = r5			  ## link_layer.c:378:20
 1e187e0:    c2 a1             	r2 = sp + 28			  ## link_layer.c:378:20
 1e187e2:    0a 02             	[sp] = r2			  ## link_layer.c:380:5
 1e187e4:    30 9c             	r0 = r6 + 3			  ## link_layer.c:381:28
 1e187e6:    41 08             	r1 = r4			  ## link_layer.c:381:5
 1e187e8:    bf f3 0d 68       	call -77798 <__vsprintf : 1e05806 >			  ## link_layer.c:381:5
 1e187ec:    60 08             	r0 = r6			  ## link_layer.c:388:5
 1e187ee:    bf f3 36 70       	call -73620 <lbuf_push_btctrler : 1e0685e >			  ## link_layer.c:388:5
 1e187f2:    80 fc 08 00       	r0 = r8 + 8			  ## link_layer.c:391:5
 1e187f6:    bf f3 47 70       	call -73586 <thread_resume : 1e06888 >			  ## link_layer.c:391:5
 1e187fa:    10 70             	r0 = 1			  ## link_layer.c:391:5
 1e187fc:    02 0a             	sp += 4
 1e187fe:    18 01             	{rets, r8-r4} = [sp++]			  ## link_layer.c:396:1
 1e18800:    04 0a             	sp += 8			  ## link_layer.c:396:1
 1e18802:    20 00             	rts			  ## link_layer.c:396:1


le_connection_update_complete_event:
 1e18804:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:40:0
 1e18806:    fa 0b             	sp += -12			  ## ll_events.c:40:0
 1e18808:    14 08             	r4 = r1			  ## ll_events.c:40:0
 1e1880a:    05 08             	r5 = r0			  ## ll_events.c:40:0
 1e1880c:    32 e0 0a 80       	if (r2 > 3) goto 20 <.GJTIE739_0_0_+0xA : 1e18824 >			  ## ll_events.c:41:5
 1e18810:    20 08             	r0 = r2			  ## ll_events.c:41:5
 1e18812:    02 70             	r2 = 0			  ## ll_events.c:41:5
 1e18814:    a0 00             	tbb [r0]


.GJTIS739_0_0_:
 1e18816:    10     < 16 : 0x10 >
 1e18817:    02     < 2 : 0x2 >
 1e18818:    0a     < 10 : 0xA >
 1e18819:    0f     < 15 : 0xF >
 1e1881a:    02 38             	if (r4 != 0) goto 4 <.GJTIE739_0_0_+0x6 : 1e18820 >
 1e1881c:    8f f3 3b 56       	call 2010230 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18820:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_events.c:50:18
 1e18822:    09 18             	goto 18 <.GJTIE739_0_0_+0x1C : 1e18836 >
 1e18824:    8f f3 37 56       	call 2010222 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18828:    06 18             	goto 12 <.GJTIE739_0_0_+0x1C : 1e18836 >			  ## cpu.h:148:5
 1e1882a:    02 38             	if (r4 != 0) goto 4 <.GJTIE739_0_0_+0x16 : 1e18830 >
 1e1882c:    8f f3 33 56       	call 2010214 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18830:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_events.c:54:18
 1e18832:    01 18             	goto 2 <.GJTIE739_0_0_+0x1C : 1e18836 >
 1e18834:    a2 71             	r2 = 26
 1e18836:    03 f7 f8 50       	r3 = h[r5 + 248] (u)			  ## ll_events.c:65:30
 1e1883a:    f4 5a             	r4 = h[r5 + 30] (u)			  ## ll_events.c:66:30
 1e1883c:    00 5b             	r0 = h[r5 + 32] (u)			  ## ll_events.c:67:30
 1e1883e:    11 5b             	r1 = h[r5 + 34] (u)			  ## ll_events.c:68:30
 1e18840:    29 02             	[sp+8] = r1			  ## ll_events.c:62:5
 1e18842:    18 02             	[sp+4] = r0			  ## ll_events.c:62:5
 1e18844:    c1 ff 0d 27 e1 01 	r1 = 31532813 <update_target_end+0x24DD : 1e1270d >			  ## ll_events.c:62:5
 1e1884a:    30 70             	r0 = 3			  ## ll_events.c:62:5
 1e1884c:    0c 02             	[sp] = r4			  ## ll_events.c:62:5
 1e1884e:    8d 17             	call -230 <__hci_emit_le_meta_event : 1e1876a >			  ## ll_events.c:62:5
 1e18850:    06 0a             	sp += 12
 1e18852:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_events.c:75:1


__master_ll_send_conn_update_done:
 1e18854:    01 70             	r1 = 0			  ## link_layer.c:1571:0
 1e18856:    02 70             	r2 = 0			  ## link_layer.c:1572:5
 1e18858:    d5 1f             	goto -86 <le_connection_update_complete_event : 1e18804 >			  ## link_layer.c:1572:5


__channel_map_upadte:
 1e1885a:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1885:0
 1e1885c:    04 08             	r4 = r0			  ## link_layer.c:1885:0
 1e1885e:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1886:29
 1e18860:    42 fc 24 00       	r2 = r4 + 36			  ## link_layer.c:1886:50
 1e18864:    81 70             	r1 = 8			  ## link_layer.c:1886:5
 1e18866:    bf f3 27 ed       	call -9650 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:1886:5
 1e1886a:    00 f9 3d 40       	r0 = b[r4 + 61] (u)			  ## link_layer.c:1888:9
 1e1886e:    10 e0 05 00       	if (r0 == 1) goto 10 <__channel_map_upadte+0x22 : 1e1887c >			  ## link_layer.c:1888:9
 1e18872:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1877:29
 1e18874:    21 71             	r1 = 18			  ## link_layer.c:1877:5
 1e18876:    02 70             	r2 = 0			  ## link_layer.c:1877:5
 1e18878:    bf f3 1e ed       	call -9668 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:1877:5
 1e1887c:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1893:1


__set_conn_winsize:
 1e1887e:    01 08             	r1 = r0			  ## link_layer.c:1255:0
 1e18880:    02 f9 3d 10       	r2 = b[r1 + 61] (u)			  ## link_layer.c:1256:9
 1e18884:    00 42             	r0 = [r1 + 0]			  ## link_layer.c:1256:9
 1e18886:    12 e0 07 10       	if (r2 != 1) goto 14 <__set_conn_winsize+0x1A : 1e18898 >			  ## link_layer.c:1256:9
 1e1888a:    51 53             	r1 = h[r1 + 42] (u)			  ## link_layer.c:1257:58
 1e1888c:    49 c0             	r1 = r1 << 1			  ## link_layer.c:1257:81
 1e1888e:    13 fc 32 00       	r3 = r1 + 50			  ## link_layer.c:1257:85
 1e18892:    51 70             	r1 = 5			  ## link_layer.c:1257:9
 1e18894:    22 73             	r2 = 50			  ## link_layer.c:1257:9
 1e18896:    03 18             	goto 6 <__set_conn_winsize+0x20 : 1e1889e >			  ## link_layer.c:1257:9
 1e18898:    51 70             	r1 = 5			  ## link_layer.c:1259:9
 1e1889a:    e2 71             	r2 = 30			  ## link_layer.c:1259:9
 1e1889c:    03 70             	r3 = 0			  ## link_layer.c:1259:9
 1e1889e:    ff f3 0b ed       	goto -9706 <le_hw_ioctrl : 1e162b8 >


ll_disconnect_process:
 1e188a2:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1168:0
 1e188a4:    fe 0b             	sp += -4			  ## link_layer.c:1168:0
 1e188a6:    02 f9 3c 00       	r2 = b[r0 + 60] (u)			  ## link_layer.c:1171:9
 1e188aa:    14 08             	r4 = r1			  ## link_layer.c:1171:9
 1e188ac:    82 e0 13 00       	if (r2 == 8) goto 38 <ll_disconnect_process+0x34 : 1e188d6 >
 1e188b0:    05 f9 f8 00       	r5 = b[r0 + 248] (u)			  ## link_layer.c:1169:24
 1e188b4:    81 70             	r1 = 8			  ## link_layer.c:1169:24
 1e188b6:    11 f9 3c 00       	b[r0 + 60] = r1			  ## link_layer.c:1176:17
 1e188ba:    c0 ff e8 2d 00 00 	r0 = 11752 <ll_hdl+0x8 : 2de8 >			  ## link_layer.c:1179:5
 1e188c0:    bf f3 e2 6f       	call -73788 <thread_resume : 1e06888 >			  ## link_layer.c:1179:5
 1e188c4:    c1 ff 64 27 e1 01 	r1 = 31532900 <update_target_end+0x2534 : 1e12764 >			  ## ll_events.c:382:5
 1e188ca:    50 70             	r0 = 5			  ## ll_events.c:382:5
 1e188cc:    02 70             	r2 = 0			  ## ll_events.c:382:5
 1e188ce:    0c 02             	[sp] = r4			  ## ll_events.c:382:5
 1e188d0:    53 08             	r3 = r5			  ## ll_events.c:382:5
 1e188d2:    bf f3 f2 e8       	call -11804 <hci_send_event : 1e15aba >			  ## ll_events.c:382:5
 1e188d6:    02 0a             	sp += 4
 1e188d8:    55 01             	{pc, r5, r4} = [sp++]			  ## link_layer.c:1182:1


ll_conn_fast_supervision_timer_handler:
 1e188da:    e1 73             	r1 = 62			  ## link_layer.c:1187:0
 1e188dc:    e2 1f             	goto -60 <ll_disconnect_process : 1e188a2 >			  ## link_layer.c:1188:5


conn_rx_probe_handler:
 1e188de:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:2953:0
 1e188e0:    05 08             	r5 = r0			  ## link_layer.c:2953:0
 1e188e2:    00 f9 3c 50       	r0 = b[r5 + 60] (u)			  ## link_layer.c:2956:15
 1e188e6:    18 08             	r8 = r1			  ## link_layer.c:2956:15
 1e188e8:    57 fc 34 01       	r7 = r5 + 308
 1e188ec:    60 e0 20 10       	if (r0 != 6) goto 64 <conn_rx_probe_handler+0x52 : 1e18930 >
 1e188f0:    70 70             	r0 = 7			  ## link_layer.c:2960:21
 1e188f2:    10 f9 3c 50       	b[r5 + 60] = r0			  ## link_layer.c:2960:21
 1e188f6:    44 4e             	r4 = [r7 + 16]			  ## link_layer.c:305:5
 1e188f8:    06 9f             	r6 = r7 + 16			  ## link_layer.c:305:5
 1e188fa:    64 f2 17 00       	if (r4 == r6) goto 46 <conn_rx_probe_handler+0x4E : 1e1892c >			  ## link_layer.c:305:5
 1e188fe:    c9 ff da 88 e1 01 	r9 = 31557850 <ll_conn_fast_supervision_timer_handler : 1e188da >
 1e18904:    41 08             	r1 = r4
 1e18906:    40 08             	r0 = r4
 1e18908:    22 40             	r2 = [r0 + 8]			  ## link_layer.c:306:25
 1e1890a:    04 40             	r4 = [r0 + 0]			  ## link_layer.c:306:25
 1e1890c:    92 f2 0b 10       	if (r2 != r9) goto 22 <conn_rx_probe_handler+0x48 : 1e18926 >
 1e18910:    32 40             	r2 = [r0 + 12]			  ## link_layer.c:306:46
 1e18912:    62 e0 08 10       	if (r2 != 6) goto 16 <conn_rx_probe_handler+0x48 : 1e18926 >			  ## link_layer.c:306:46
 1e18916:    02 42             	r2 = [r1 + 0]			  ## list.h:171:36
 1e18918:    13 42             	r3 = [r1 + 4]			  ## list.h:171:23
 1e1891a:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e1891c:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e1891e:    09 42             	[r1 + 0] = r1			  ## list.h:172:17
 1e18920:    19 42             	[r1 + 4] = r1			  ## list.h:173:17
 1e18922:    bf f3 a8 47       	call -94384 <__bt_free : 1e01876 >			  ## link_layer.c:308:13
 1e18926:    41 08             	r1 = r4
 1e18928:    64 f2 ed 1f       	if (r4 != r6) goto -38 <conn_rx_probe_handler+0x28 : 1e18906 >
 1e1892c:    50 08             	r0 = r5			  ## link_layer.c:2962:9
 1e1892e:    e9 16             	call -558 <__rx_oneshot_add : 1e18702 >			  ## link_layer.c:2962:9
 1e18930:    70 4e             	r0 = [r7 + 28]			  ## link_layer.c:1240:15
 1e18932:    03 20             	if (r0 == 0) goto 6 <conn_rx_probe_handler+0x5C : 1e1893a >
 1e18934:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:48:5
 1e18936:    bf f3 e3 9e       	call -49722 <sys_timer_re_run : 1e0c700 >			  ## sys_timer.c:48:5
 1e1893a:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:223:5
 1e1893c:    76 f2 10 00       	if (r6 == r7) goto 32 <conn_rx_probe_handler+0x82 : 1e18960 >
 1e18940:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e18942:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e18944:    04 4c             	r4 = [r6 + 0]
 1e18946:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e18948:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e1894a:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e1894c:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e1894e:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:225:12
 1e18950:    50 08             	r0 = r5			  ## link_layer.c:225:9
 1e18952:    81 00             	call r1			  ## link_layer.c:225:9
 1e18954:    60 08             	r0 = r6			  ## link_layer.c:226:9
 1e18956:    bf f3 8e 47       	call -94436 <__bt_free : 1e01876 >			  ## link_layer.c:226:9
 1e1895a:    46 08             	r6 = r4
 1e1895c:    74 f2 f0 1f       	if (r4 != r7) goto -32 <conn_rx_probe_handler+0x62 : 1e18940 >
 1e18960:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:2969:9
 1e18964:    2b f3 06 00       	if ((r0 & 2048) != 0) goto 12 <conn_rx_probe_handler+0x96 : 1e18974 >			  ## link_layer.c:2969:9
 1e18968:    00 f9 0c 80       	r0 = b[r8 + 12] (u)			  ## link_layer.c:2970:26
 1e1896c:    10 f9 88 51       	b[r5 + 392] = r0			  ## link_layer.c:2970:20
 1e18970:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:2970:20
 1e18974:    20 fd 30 09       	r0 = r0 & 48			  ## link_layer.c:2975:9
 1e18978:    00 e1 03 10       	if (r0 != 16) goto 6 <conn_rx_probe_handler+0xA4 : 1e18982 >			  ## link_layer.c:2975:9
 1e1897c:    00 f9 0a 80       	r0 = b[r8 + 10] (u)			  ## link_layer.c:2975:9
 1e18980:    05 20             	if (r0 == 0) goto 10 <conn_rx_probe_handler+0xAE : 1e1898c >			  ## link_layer.c:2975:9
 1e18982:    c0 ff e8 2d 00 00 	r0 = 11752 <ll_hdl+0x8 : 2de8 >			  ## link_layer.c:2980:9
 1e18988:    bf f3 7e 6f       	call -73988 <thread_resume : 1e06888 >			  ## link_layer.c:2980:9
 1e1898c:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:2982:1


conn_tx_probe_handler:
 1e1898e:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:2985:0
 1e18990:    61 52             	r1 = h[r1 + 12] (u)			  ## link_layer.c:2988:17
 1e18992:    82 fd 20 11       	r1 = uextra(r1, p:4, l:2)
 1e18996:    12 fc ff ff       	r2 = r1 + -1			  ## link_layer.c:2988:5
 1e1899a:    04 fc fc 00       	r4 = r0 + 252			  ## link_layer.c:2988:5
 1e1899e:    22 e0 07 20       	if (r2 >= 2) goto 14 <conn_tx_probe_handler+0x22 : 1e189b0 >			  ## link_layer.c:2988:5
 1e189a2:    97 f3 fb 71       	call 3073014 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e189a6:    08 00             	csync			  ## atomic.h:16:5
 1e189a8:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e189aa:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e189ac:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e189ae:    08 18             	goto 16 <conn_tx_probe_handler+0x32 : 1e189c0 >			  ## atomic.h:19:16
 1e189b0:    31 e0 08 10       	if (r1 != 3) goto 16 <conn_tx_probe_handler+0x36 : 1e189c4 >
 1e189b4:    97 f3 f2 71       	call 3072996 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e189b8:    08 00             	csync			  ## atomic.h:16:5
 1e189ba:    10 48             	r0 = [r4 + 4]			  ## atomic.h:18:14
 1e189bc:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e189be:    18 48             	[r4 + 4] = r0			  ## atomic.h:19:16
 1e189c0:    97 f3 ea 71       	call 3072980 <local_irq_enable : 106d98 >
 1e189c4:    c0 ff e8 2d 00 00 	r0 = 11752 <ll_hdl+0x8 : 2de8 >			  ## link_layer.c:3003:5
 1e189ca:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:3003:5
 1e189cc:    ff f3 5c 6f       	goto -74056 <thread_resume : 1e06888 >			  ## link_layer.c:3003:5


conn_evt_probe_handler:
 1e189d0:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:3024:0
 1e189d2:    24 08             	r4 = r2			  ## link_layer.c:3024:0
 1e189d4:    09 08             	r9 = r0			  ## link_layer.c:3024:0
 1e189d6:    01 22             	if (r1 == 0) goto 2 <conn_evt_probe_handler+0xA : 1e189da >			  ## link_layer.c:3024:0
 1e189d8:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3032:1
 1e189da:    02 30             	if (r0 != 0) goto 4 <conn_evt_probe_handler+0x10 : 1e189e0 >
 1e189dc:    8f f3 5b 55       	call 2009782 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e189e0:    14 f7 90 90       	h[r9 + 144] = r4			  ## link_layer.c:161:21
 1e189e4:    97 fc 3c 01       	r7 = r9 + 316			  ## link_layer.c:161:21
 1e189e8:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:163:5
 1e189ea:    76 f2 18 00       	if (r6 == r7) goto 48 <conn_evt_probe_handler+0x4E : 1e18a1e >
 1e189ee:    08 fb fd 7f       	r8 = 32765 <nvbss_size+0xD7D : 7ffd >
 1e189f2:    30 4c             	r0 = [r6 + 12]			  ## link_layer.c:164:15
 1e189f4:    20 b1             	r0 = r0 - r4			  ## link_layer.c:164:26
 1e189f6:    05 4c             	r5 = [r6 + 0]			  ## link_layer.c:164:26
 1e189f8:    20 04             	r0 = r0.l (u)			  ## link_layer.c:167:14
 1e189fa:    f0 8f             	r0 += -1			  ## link_layer.c:167:28
 1e189fc:    80 f2 0c 90       	if (r0 <= r8) goto 24 <conn_evt_probe_handler+0x48 : 1e18a18 >			  ## link_layer.c:167:28
 1e18a00:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e18a02:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e18a04:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e18a06:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e18a08:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e18a0a:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e18a0c:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:169:16
 1e18a0e:    90 08             	r0 = r9			  ## link_layer.c:169:13
 1e18a10:    81 00             	call r1			  ## link_layer.c:169:13
 1e18a12:    60 08             	r0 = r6			  ## link_layer.c:170:13
 1e18a14:    bf f3 2f 47       	call -94626 <__bt_free : 1e01876 >			  ## link_layer.c:170:13
 1e18a18:    56 08             	r6 = r5
 1e18a1a:    75 f2 ea 1f       	if (r5 != r7) goto -44 <conn_evt_probe_handler+0x22 : 1e189f2 >
 1e18a1e:    01 f9 8c 91       	r1 = b[r9 + 396] (u)			  ## link_layer.c:3010:15
 1e18a22:    c0 ff e8 2d 00 00 	r0 = 11752 <ll_hdl+0x8 : 2de8 >			  ## link_layer.c:3010:15
 1e18a28:    60 ff 0f 19 08 00 	if ((r1 & 15) == 0) goto 16 <conn_evt_probe_handler+0x6E : 1e18a3e >			  ## link_layer.c:3010:9
 1e18a2e:    21 fd 0f 19       	r1 = r1 & 15			  ## link_layer.c:3010:15
 1e18a32:    11 b2             	r1 |= 16			  ## link_layer.c:3011:35
 1e18a34:    11 f9 8c 91       	b[r9 + 396] = r1			  ## link_layer.c:3011:35
 1e18a38:    19 01             	{rets, r9-r4} = [sp++]
 1e18a3a:    ff f3 25 6f       	goto -74166 <thread_resume : 1e06888 >
 1e18a3e:    21 4e             	r1 = [r7 + 8]
 1e18a40:    82 9e             	r2 = r7 + 8			  ## link_layer.c:266:5
 1e18a42:    21 f2 c9 0f       	if (r1 == r2) goto -110 <conn_evt_probe_handler+0x8 : 1e189d8 >			  ## link_layer.c:266:5
 1e18a46:    03 fb fd 7f       	r3 = 32765 <nvbss_size+0xD7D : 7ffd >
 1e18a4a:    35 42             	r5 = [r1 + 12]			  ## link_layer.c:267:15
 1e18a4c:    25 bb             	r5 = r5 - r4			  ## link_layer.c:267:26
 1e18a4e:    65 05             	r5 = r5.l (u)			  ## link_layer.c:268:14
 1e18a50:    f5 8f             	r5 += -1			  ## link_layer.c:268:28
 1e18a52:    35 f2 f1 8f       	if (r5 > r3) goto -30 <conn_evt_probe_handler+0x68 : 1e18a38 >			  ## link_layer.c:268:28
 1e18a56:    01 42             	r1 = [r1 + 0]
 1e18a58:    21 f2 f7 1f       	if (r1 != r2) goto -18 <conn_evt_probe_handler+0x7A : 1e18a4a >
 1e18a5c:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3032:1


ll_conn_supervision_timer_handler:
 1e18a5e:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1202:0
 1e18a60:    04 08             	r4 = r0			  ## link_layer.c:1202:0
 1e18a62:    0b 28             	if (r4 == 0) goto 22 <ll_conn_supervision_timer_handler+0x1C : 1e18a7a >			  ## link_layer.c:1202:0
 1e18a64:    a2 15             	call -1212 <ll_supervision_timeout_stop : 1e185aa >			  ## link_layer.c:1214:5
 1e18a66:    00 f9 3c 40       	r0 = b[r4 + 60] (u)			  ## link_layer.c:1220:14
 1e18a6a:    10 b0             	r0 |= 1			  ## link_layer.c:1220:14
 1e18a6c:    00 04             	r0 = r0.b0 (u)			  ## link_layer.c:1220:14
 1e18a6e:    81 70             	r1 = 8			  ## link_layer.c:1220:14
 1e18a70:    70 e0 01 00       	if (r0 == 7) goto 2 <ll_conn_supervision_timer_handler+0x18 : 1e18a76 >			  ## link_layer.c:1220:14
 1e18a74:    e1 73             	r1 = 62
 1e18a76:    40 08             	r0 = r4			  ## link_layer.c:1223:5
 1e18a78:    14 17             	call -472 <ll_disconnect_process : 1e188a2 >			  ## link_layer.c:1223:5
 1e18a7a:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1225:1


__event_oneshot_add:
 1e18a7c:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:139:0
 1e18a7e:    24 08             	r4 = r2			  ## link_layer.c:139:0
 1e18a80:    16 08             	r6 = r1			  ## link_layer.c:139:0
 1e18a82:    05 08             	r5 = r0			  ## link_layer.c:139:0
 1e18a84:    00 71             	r0 = 16			  ## link_layer.c:140:25
 1e18a86:    bf f3 32 6e       	call -74652 <__bt_malloc : 1e066ee >			  ## link_layer.c:140:25
 1e18a8a:    0a 20             	if (r0 == 0) goto 20 <__event_oneshot_add+0x24 : 1e18aa0 >			  ## link_layer.c:140:25
 1e18a8c:    2e 40             	[r0 + 8] = r6			  ## link_layer.c:145:17
 1e18a8e:    3c 40             	[r0 + 12] = r4			  ## link_layer.c:146:20
 1e18a90:    51 fc 3c 01       	r1 = r5 + 316			  ## link_layer.c:146:20
 1e18a94:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e18a96:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e18a98:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e18a9a:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e18a9c:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e18a9e:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:149:1
 1e18aa0:    16 01             	{rets, r6-r4} = [sp++]			  ## cpu.h:148:5
 1e18aa2:    cf f3 f8 54       	goto 2009584 <p33_soft_reset : 3496 >			  ## cpu.h:148:5


__event_oneshot_post_add:
 1e18aa6:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:244:0
 1e18aa8:    24 08             	r4 = r2			  ## link_layer.c:244:0
 1e18aaa:    16 08             	r6 = r1			  ## link_layer.c:244:0
 1e18aac:    05 08             	r5 = r0			  ## link_layer.c:244:0
 1e18aae:    00 71             	r0 = 16			  ## link_layer.c:245:25
 1e18ab0:    bf f3 1d 6e       	call -74694 <__bt_malloc : 1e066ee >			  ## link_layer.c:245:25
 1e18ab4:    0a 20             	if (r0 == 0) goto 20 <__event_oneshot_post_add+0x24 : 1e18aca >			  ## link_layer.c:245:25
 1e18ab6:    2e 40             	[r0 + 8] = r6			  ## link_layer.c:250:17
 1e18ab8:    3c 40             	[r0 + 12] = r4			  ## link_layer.c:251:20
 1e18aba:    51 fc 44 01       	r1 = r5 + 324			  ## link_layer.c:251:20
 1e18abe:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e18ac0:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e18ac2:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e18ac4:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e18ac6:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e18ac8:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:254:1
 1e18aca:    16 01             	{rets, r6-r4} = [sp++]			  ## cpu.h:148:5
 1e18acc:    cf f3 e3 54       	goto 2009542 <p33_soft_reset : 3496 >			  ## cpu.h:148:5


le_read_remote_used_features_complete_event:
 1e18ad0:    74 01             	[--sp] = {rets, r4}			  ## ll_events.c:78:0
 1e18ad2:    fe 0b             	sp += -4			  ## ll_events.c:78:0
 1e18ad4:    14 08             	r4 = r1			  ## ll_events.c:78:0
 1e18ad6:    03 08             	r3 = r0			  ## ll_events.c:78:0
 1e18ad8:    04 24             	if (r2 == 0) goto 8 <le_read_remote_used_features_complete_event+0x12 : 1e18ae2 >			  ## ll_events.c:78:0
 1e18ada:    32 e0 04 10       	if (r2 != 3) goto 8 <le_read_remote_used_features_complete_event+0x16 : 1e18ae6 >			  ## ll_events.c:78:0
 1e18ade:    a2 71             	r2 = 26			  ## ll_events.c:78:0
 1e18ae0:    04 18             	goto 8 <le_read_remote_used_features_complete_event+0x1A : 1e18aea >			  ## ll_events.c:78:0
 1e18ae2:    02 70             	r2 = 0			  ## ll_events.c:78:0
 1e18ae4:    02 18             	goto 4 <le_read_remote_used_features_complete_event+0x1A : 1e18aea >			  ## ll_events.c:78:0
 1e18ae6:    8f f3 d6 54       	call 2009516 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18aea:    03 f7 f8 30       	r3 = h[r3 + 248] (u)
 1e18aee:    c1 ff 13 27 e1 01 	r1 = 31532819 <update_target_end+0x24E3 : 1e12713 >
 1e18af4:    02 28             	if (r4 == 0) goto 4 <le_read_remote_used_features_complete_event+0x2A : 1e18afa >
 1e18af6:    54 81             	r4 += 21			  ## ll_events.c:99:43
 1e18af8:    01 18             	goto 2 <le_read_remote_used_features_complete_event+0x2C : 1e18afc >
 1e18afa:    04 70             	r4 = 0			  ## ll_events.c:93:9
 1e18afc:    40 70             	r0 = 4
 1e18afe:    0c 02             	[sp] = r4
 1e18b00:    34 16             	call -920 <__hci_emit_le_meta_event : 1e1876a >
 1e18b02:    02 0a             	sp += 4
 1e18b04:    54 01             	{pc, r4} = [sp++]			  ## ll_events.c:104:1


hci_event_encryption_change:
 1e18b06:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:312:0
 1e18b08:    fe 0b             	sp += -4			  ## ll_events.c:312:0
 1e18b0a:    c3 ff 10 0e 00 00 	r3 = 3600 <hci_param : e10 >			  ## ll_events.c:313:19
 1e18b10:    05 f9 91 30       	r5 = b[r3 + 145] (u)			  ## ll_events.c:313:19
 1e18b14:    14 08             	r4 = r1			  ## ll_events.c:313:19
 1e18b16:    03 08             	r3 = r0
 1e18b18:    26 3a             	if (r5 != 0) goto 76 <.GJTIE754_0_0_+0x3C : 1e18b66 >
 1e18b1a:    42 e0 0b 80       	if (r2 > 4) goto 22 <.GJTIE754_0_0_+0xA : 1e18b34 >			  ## ll_events.c:316:5
 1e18b1e:    20 08             	r0 = r2			  ## ll_events.c:316:5
 1e18b20:    02 70             	r2 = 0			  ## ll_events.c:316:5
 1e18b22:    a0 00             	tbb [r0]


.GJTIS754_0_0_:
 1e18b24:    13     < 19 : 0x13 >
 1e18b25:    03     < 3 : 0x3 >
 1e18b26:    0b     < 11 : 0xB >
 1e18b27:    10     < 16 : 0x10 >
 1e18b28:    12     < 18 : 0x12 >
 1e18b29:    00     < 0 : 0x0 >
 1e18b2a:    02 38             	if (r4 != 0) goto 4 <.GJTIE754_0_0_+0x6 : 1e18b30 >
 1e18b2c:    8f f3 b3 54       	call 2009446 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18b30:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_events.c:327:18
 1e18b32:    0b 18             	goto 22 <.GJTIE754_0_0_+0x20 : 1e18b4a >			  ## ll_events.c:327:18
 1e18b34:    8f f3 af 54       	call 2009438 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18b38:    08 18             	goto 16 <.GJTIE754_0_0_+0x20 : 1e18b4a >			  ## cpu.h:148:5
 1e18b3a:    02 38             	if (r4 != 0) goto 4 <.GJTIE754_0_0_+0x16 : 1e18b40 >
 1e18b3c:    8f f3 ab 54       	call 2009430 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18b40:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_events.c:331:18
 1e18b42:    03 18             	goto 6 <.GJTIE754_0_0_+0x20 : 1e18b4a >			  ## ll_events.c:331:18
 1e18b44:    a2 71             	r2 = 26
 1e18b46:    01 18             	goto 2 <.GJTIE754_0_0_+0x20 : 1e18b4a >
 1e18b48:    22 72             	r2 = 34
 1e18b4a:    00 f9 93 30       	r0 = b[r3 + 147] (u)			  ## ll_events.c:340:5
 1e18b4e:    14 70             	r4 = 1			  ## ll_events.c:340:5
 1e18b50:    01 30             	if (r0 != 0) goto 2 <.GJTIE754_0_0_+0x2A : 1e18b54 >
 1e18b52:    04 70             	r4 = 0			  ## ll_events.c:340:5
 1e18b54:    03 f7 f8 30       	r3 = h[r3 + 248] (u)			  ## ll_events.c:340:5
 1e18b58:    c1 ff 64 27 e1 01 	r1 = 31532900 <update_target_end+0x2534 : 1e12764 >			  ## ll_events.c:340:5
 1e18b5e:    80 70             	r0 = 8			  ## ll_events.c:340:5
 1e18b60:    0c 02             	[sp] = r4			  ## ll_events.c:340:5
 1e18b62:    bf f3 aa e7       	call -12460 <hci_send_event : 1e15aba >			  ## ll_events.c:340:5
 1e18b66:    02 0a             	sp += 4
 1e18b68:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_events.c:349:1


hci_event_encryption_refresh_complete:
 1e18b6a:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:352:0
 1e18b6c:    25 08             	r5 = r2			  ## ll_events.c:352:0
 1e18b6e:    13 08             	r3 = r1			  ## ll_events.c:352:0
 1e18b70:    04 08             	r4 = r0			  ## ll_events.c:352:0
 1e18b72:    45 e0 0a 80       	if (r5 > 4) goto 20 <.GJTIE755_0_0_+0xA : 1e18b8a >			  ## ll_events.c:353:5
 1e18b76:    02 70             	r2 = 0
 1e18b78:    a5 00             	tbb [r5]


.GJTIS755_0_0_:
 1e18b7a:    13     < 19 : 0x13 >
 1e18b7b:    03     < 3 : 0x3 >
 1e18b7c:    0b     < 11 : 0xB >
 1e18b7d:    10     < 16 : 0x10 >
 1e18b7e:    12     < 18 : 0x12 >
 1e18b7f:    00     < 0 : 0x0 >
 1e18b80:    02 36             	if (r3 != 0) goto 4 <.GJTIE755_0_0_+0x6 : 1e18b86 >
 1e18b82:    8f f3 88 54       	call 2009360 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18b86:    52 67             	r2 = b[r3 + 21] (u)			  ## ll_events.c:364:18
 1e18b88:    0b 18             	goto 22 <.GJTIE755_0_0_+0x20 : 1e18ba0 >			  ## ll_events.c:364:18
 1e18b8a:    8f f3 84 54       	call 2009352 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18b8e:    08 18             	goto 16 <.GJTIE755_0_0_+0x20 : 1e18ba0 >			  ## cpu.h:148:5
 1e18b90:    02 36             	if (r3 != 0) goto 4 <.GJTIE755_0_0_+0x16 : 1e18b96 >
 1e18b92:    8f f3 80 54       	call 2009344 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18b96:    62 67             	r2 = b[r3 + 22] (u)			  ## ll_events.c:368:18
 1e18b98:    03 18             	goto 6 <.GJTIE755_0_0_+0x20 : 1e18ba0 >			  ## ll_events.c:368:18
 1e18b9a:    a2 71             	r2 = 26
 1e18b9c:    01 18             	goto 2 <.GJTIE755_0_0_+0x20 : 1e18ba0 >
 1e18b9e:    22 72             	r2 = 34
 1e18ba0:    03 f7 f8 40       	r3 = h[r4 + 248] (u)			  ## ll_events.c:375:5
 1e18ba4:    c1 ff 68 27 e1 01 	r1 = 31532904 <update_target_end+0x2538 : 1e12768 >			  ## ll_events.c:375:5
 1e18baa:    00 73             	r0 = 48			  ## ll_events.c:375:5
 1e18bac:    15 01             	{rets, r5, r4} = [sp++]			  ## ll_events.c:375:5
 1e18bae:    ff f3 84 e7       	goto -12536 <hci_send_event : 1e15aba >			  ## ll_events.c:375:5


ll_control_procedure_finish:
 1e18bb2:    7a 01             	[--sp] = {rets, r10-r4}			  ## link_layer.c:500:0
 1e18bb4:    fa 0b             	sp += -12			  ## link_layer.c:500:0
 1e18bb6:    05 08             	r5 = r0			  ## link_layer.c:500:0
 1e18bb8:    57 fc c0 00       	r7 = r5 + 192			  ## link_layer.c:500:0
 1e18bbc:    00 6e             	r0 = b[r7 + 0] (u)			  ## link_layer.c:501:39
 1e18bbe:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:504:25
 1e18bc0:    50 09             	r0 += r5			  ## link_layer.c:504:25
 1e18bc2:    0a fc 98 00       	r10 = r0 + 152			  ## link_layer.c:504:25
 1e18bc6:    03 f9 04 a0       	r3 = b[r10 + 4] (u)			  ## link_layer.c:504:25
 1e18bca:    00 f6 00 a0       	r0 = [r10 + 0]			  ## link_layer.c:504:25
 1e18bce:    46 f8 00 03       	r6 = h[r0+r3<<1] (u)			  ## link_layer.c:504:25
 1e18bd2:    84 05             	r4 = r6.b0 (u)			  ## link_layer.c:506:10
 1e18bd4:    28 08             	r8 = r2			  ## link_layer.c:506:10
 1e18bd6:    19 08             	r9 = r1
 1e18bd8:    00 ff ff 40 13 00 	if (r4 == 255) goto 38 <ll_control_procedure_finish+0x52 : 1e18c04 >
 1e18bde:    11 96             	r1 = r3 + 1			  ## link_layer.c:489:33
 1e18be0:    42 04             	r2 = r1.b0 (u)
 1e18be2:    46 f8 00 02       	r6 = h[r0+r2<<1] (u)
 1e18be6:    82 05             	r2 = r6.b0 (u)			  ## link_layer.c:490:32
 1e18be8:    11 80             	r1 += 1			  ## link_layer.c:490:13
 1e18bea:    01 ff ff 20 f8 ff 	if (r2 != 255) goto -16 <ll_control_procedure_finish+0x2E : 1e18be0 >			  ## link_layer.c:490:13
 1e18bf0:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:509:33
 1e18bf2:    11 71             	r1 = 17			  ## link_layer.c:509:9
 1e18bf4:    02 70             	r2 = 0			  ## link_layer.c:509:9
 1e18bf6:    bf f3 5f eb       	call -10562 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:509:9
 1e18bfa:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:510:33
 1e18bfc:    21 71             	r1 = 18			  ## link_layer.c:510:9
 1e18bfe:    02 70             	r2 = 0			  ## link_layer.c:510:9
 1e18c00:    bf f3 5a eb       	call -10572 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:510:9
 1e18c04:    30 d2             	r0 = r6 >> 8
 1e18c06:    e0 e0 7c 80       	if (r0 > 14) goto 248 <.GJTIE756_0_0_+0xE6 : 1e18d02 >
 1e18c0a:    a0 00             	tbb [r0]


.GJTIS756_0_0_:
 1e18c0c:    08     < 8 : 0x8 >
 1e18c0d:    08     < 8 : 0x8 >
 1e18c0e:    28     < 40 : 0x28 >
 1e18c0f:    7b     < 123 : 0x7B >
 1e18c10:    7b     < 123 : 0x7B >
 1e18c11:    3c     < 60 : 0x3C >
 1e18c12:    0d     < 13 : 0xD >
 1e18c13:    0d     < 13 : 0xD >
 1e18c14:    4a     < 74 : 0x4A >
 1e18c15:    12     < 18 : 0x12 >
 1e18c16:    1d     < 29 : 0x1D >
 1e18c17:    12     < 18 : 0x12 >
 1e18c18:    1d     < 29 : 0x1D >
 1e18c19:    7b     < 123 : 0x7B >
 1e18c1a:    50     < 80 : 0x50 >
 1e18c1b:    00     < 0 : 0x0 >
 1e18c1c:    50 08             	r0 = r5
 1e18c1e:    91 08             	r1 = r9
 1e18c20:    82 08             	r2 = r8
 1e18c22:    f0 15             	call -1056 <le_connection_update_complete_event : 1e18804 >
 1e18c24:    6e 18             	goto 220 <.GJTIE756_0_0_+0xE6 : 1e18d02 >
 1e18c26:    50 08             	r0 = r5
 1e18c28:    91 08             	r1 = r9
 1e18c2a:    82 08             	r2 = r8
 1e18c2c:    51 17             	call -350 <le_read_remote_used_features_complete_event : 1e18ad0 >
 1e18c2e:    69 18             	goto 210 <.GJTIE756_0_0_+0xE6 : 1e18d02 >
 1e18c30:    00 4a             	r0 = [r5 + 0]
 1e18c32:    11 71             	r1 = 17
 1e18c34:    02 70             	r2 = 0
 1e18c36:    bf f3 3f eb       	call -10626 <le_hw_ioctrl : 1e162b8 >
 1e18c3a:    e4 fd 00 28       	r2 = r8.b0 (u)
 1e18c3e:    50 08             	r0 = r5
 1e18c40:    91 08             	r1 = r9
 1e18c42:    61 17             	call -318 <hci_event_encryption_change : 1e18b06 >
 1e18c44:    5e 18             	goto 188 <.GJTIE756_0_0_+0xE6 : 1e18d02 >
 1e18c46:    00 4a             	r0 = [r5 + 0]
 1e18c48:    11 71             	r1 = 17
 1e18c4a:    02 70             	r2 = 0
 1e18c4c:    bf f3 34 eb       	call -10648 <le_hw_ioctrl : 1e162b8 >
 1e18c50:    e4 fd 00 28       	r2 = r8.b0 (u)
 1e18c54:    50 08             	r0 = r5
 1e18c56:    91 08             	r1 = r9
 1e18c58:    88 17             	call -240 <hci_event_encryption_refresh_complete : 1e18b6a >
 1e18c5a:    53 18             	goto 166 <.GJTIE756_0_0_+0xE6 : 1e18d02 >
 1e18c5c:    d6 5f             	r6 = h[r7 + 58] (u)			  ## link_layer.c:1579:50
 1e18c5e:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1579:29
 1e18c60:    41 70             	r1 = 4			  ## link_layer.c:1579:5
 1e18c62:    62 08             	r2 = r6			  ## link_layer.c:1579:5
 1e18c64:    bf f3 28 eb       	call -10672 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:1579:5
 1e18c68:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:1583:60
 1e18c6c:    c1 ff 2c 87 e1 01 	r1 = 31557420 <__connection_upadte : 1e1872c >			  ## link_layer.c:1583:5
 1e18c72:    50 08             	r0 = r5			  ## link_layer.c:1583:5
 1e18c74:    03 17             	call -506 <__event_oneshot_add : 1e18a7c >			  ## link_layer.c:1583:5
 1e18c76:    c1 ff 54 88 e1 01 	r1 = 31557716 <__master_ll_send_conn_update_done : 1e18854 >			  ## link_layer.c:1585:5
 1e18c7c:    50 08             	r0 = r5			  ## link_layer.c:1585:5
 1e18c7e:    62 08             	r2 = r6			  ## link_layer.c:1585:5
 1e18c80:    12 17             	call -476 <__event_oneshot_post_add : 1e18aa6 >			  ## link_layer.c:1585:5
 1e18c82:    3f 18             	goto 126 <.GJTIE756_0_0_+0xE6 : 1e18d02 >			  ## link_layer.c:1585:5
 1e18c84:    d6 5f             	r6 = h[r7 + 58] (u)			  ## link_layer.c:1900:50
 1e18c86:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1900:29
 1e18c88:    41 70             	r1 = 4			  ## link_layer.c:1900:5
 1e18c8a:    62 08             	r2 = r6			  ## link_layer.c:1900:5
 1e18c8c:    bf f3 14 eb       	call -10712 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:1900:5
 1e18c90:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:1902:61
 1e18c94:    c1 ff 5a 88 e1 01 	r1 = 31557722 <__channel_map_upadte : 1e1885a >			  ## link_layer.c:1902:5
 1e18c9a:    50 08             	r0 = r5			  ## link_layer.c:1902:5
 1e18c9c:    ef 16             	call -546 <__event_oneshot_add : 1e18a7c >			  ## link_layer.c:1902:5
 1e18c9e:    31 18             	goto 98 <.GJTIE756_0_0_+0xE6 : 1e18d02 >			  ## link_layer.c:1902:5
 1e18ca0:    08 e0 0a 00       	if (r8 == 0) goto 20 <.GJTIE756_0_0_+0x9C : 1e18cb8 >
 1e18ca4:    48 e0 0a 10       	if (r8 != 4) goto 20 <.GJTIE756_0_0_+0xA0 : 1e18cbc >
 1e18ca8:    28 72             	r8 = 34
 1e18caa:    0a 18             	goto 20 <.GJTIE756_0_0_+0xA4 : 1e18cc0 >
 1e18cac:    08 e0 21 00       	if (r8 == 0) goto 66 <.GJTIE756_0_0_+0xD6 : 1e18cf2 >
 1e18cb0:    48 e0 21 10       	if (r8 != 4) goto 66 <.GJTIE756_0_0_+0xDA : 1e18cf6 >
 1e18cb4:    28 72             	r8 = 34
 1e18cb6:    21 18             	goto 66 <.GJTIE756_0_0_+0xDE : 1e18cfa >
 1e18cb8:    08 70             	r8 = 0
 1e18cba:    02 18             	goto 4 <.GJTIE756_0_0_+0xA4 : 1e18cc0 >
 1e18cbc:    8f f3 eb 53       	call 2009046 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18cc0:    c3 5f             	r3 = h[r7 + 56] (u)			  ## ll_events.c:431:5
 1e18cc2:    04 f9 15 90       	r4 = b[r9 + 21] (u)			  ## ll_events.c:431:5
 1e18cc6:    92 fc 15 00       	r2 = r9 + 21			  ## ll_events.c:430:17
 1e18cca:    11 70             	r1 = 1			  ## ll_events.c:431:5
 1e18ccc:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e18cce:    bf f3 b2 66       	call -78492 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_events.c:431:5
 1e18cd2:    05 08             	r5 = r0			  ## ll_events.c:431:5
 1e18cd4:    31 70             	r1 = 3			  ## ll_events.c:431:5
 1e18cd6:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e18cd8:    bf f3 ad 66       	call -78502 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_events.c:431:5
 1e18cdc:    28 02             	[sp+8] = r0			  ## ll_events.c:431:5
 1e18cde:    1d 02             	[sp+4] = r5			  ## ll_events.c:431:5
 1e18ce0:    c1 ff 74 27 e1 01 	r1 = 31532916 <update_target_end+0x2544 : 1e12774 >			  ## ll_events.c:431:5
 1e18ce6:    c0 70             	r0 = 12			  ## ll_events.c:431:5
 1e18ce8:    0c 02             	[sp] = r4			  ## ll_events.c:431:5
 1e18cea:    82 08             	r2 = r8			  ## ll_events.c:431:5
 1e18cec:    bf f3 e5 e6       	call -12854 <hci_send_event : 1e15aba >			  ## ll_events.c:431:5
 1e18cf0:    08 18             	goto 16 <.GJTIE756_0_0_+0xE6 : 1e18d02 >
 1e18cf2:    68 71             	r8 = 22
 1e18cf4:    02 18             	goto 4 <.GJTIE756_0_0_+0xDE : 1e18cfa >
 1e18cf6:    8f f3 ce 53       	call 2008988 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18cfa:    e4 fd 00 18       	r1 = r8.b0 (u)			  ## ll_events.c:301:5
 1e18cfe:    50 08             	r0 = r5			  ## ll_events.c:301:5
 1e18d00:    d0 15             	call -1120 <ll_disconnect_process : 1e188a2 >			  ## ll_events.c:301:5
 1e18d02:    00 70             	r0 = 0
 1e18d04:    10 f6 00 a0       	[r10 + 0] = r0			  ## link_layer.c:579:18
 1e18d08:    02 6e             	r2 = b[r7 + 0] (u)			  ## link_layer.c:581:28
 1e18d0a:    11 94             	r1 = r2 + 1			  ## link_layer.c:581:91
 1e18d0c:    42 e0 01 00       	if (r2 == 4) goto 2 <.GJTIE756_0_0_+0xF6 : 1e18d12 >			  ## link_layer.c:581:91
 1e18d10:    10 08             	r0 = r1			  ## link_layer.c:581:21
 1e18d12:    08 6e             	b[r7 + 0] = r0			  ## link_layer.c:581:19
 1e18d14:    06 0a             	sp += 12			  ## link_layer.c:581:19
 1e18d16:    5a 01             	{pc, r10-r4} = [sp++]			  ## link_layer.c:584:1


ll_response_timeout_handler:
 1e18d18:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1347:0
 1e18d1a:    04 08             	r4 = r0			  ## link_layer.c:1347:0
 1e18d1c:    08 28             	if (r4 == 0) goto 16 <ll_response_timeout_handler+0x16 : 1e18d2e >			  ## link_layer.c:1347:0
 1e18d1e:    3a 14             	call -1932 <ll_response_timeout_stop : 1e18594 >			  ## link_layer.c:1357:5
 1e18d20:    01 70             	r1 = 0			  ## link_layer.c:1360:5
 1e18d22:    42 70             	r2 = 4			  ## link_layer.c:1360:5
 1e18d24:    40 08             	r0 = r4			  ## link_layer.c:1360:5
 1e18d26:    45 17             	call -374 <ll_control_procedure_finish : 1e18bb2 >			  ## link_layer.c:1360:5
 1e18d28:    21 72             	r1 = 34			  ## link_layer.c:1362:5
 1e18d2a:    40 08             	r0 = r4			  ## link_layer.c:1362:5
 1e18d2c:    ba 15             	call -1164 <ll_disconnect_process : 1e188a2 >			  ## link_layer.c:1362:5
 1e18d2e:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1364:1


ll_control_step_verify:
 1e18d30:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:589:0
 1e18d32:    14 08             	r4 = r1			  ## link_layer.c:589:0
 1e18d34:    01 f9 c0 40       	r1 = b[r4 + 192] (u)			  ## link_layer.c:590:39
 1e18d38:    c9 c0             	r1 = r1 << 3			  ## link_layer.c:595:12
 1e18d3a:    43 b8             	r3 = r4 + r1			  ## link_layer.c:595:12
 1e18d3c:    01 f6 98 30       	r1 = [r3 + 152]			  ## link_layer.c:595:12
 1e18d40:    28 08             	r8 = r2			  ## link_layer.c:595:12
 1e18d42:    06 08             	r6 = r0
 1e18d44:    41 22             	if (r1 == 0) goto 130 <ll_control_step_verify+0x98 : 1e18dc8 >
 1e18d46:    00 fb 07 40       	r0 = 16391 <low_power_system_down+0x10F : 4007 >			  ## link_layer.c:601:9
 1e18d4a:    06 f2 06 00       	if (r6 == r0) goto 12 <ll_control_step_verify+0x2A : 1e18d5a >			  ## link_layer.c:601:9
 1e18d4e:    60 80             	r0 += 6
 1e18d50:    06 f2 1e 00       	if (r6 == r0) goto 60 <ll_control_step_verify+0x60 : 1e18d90 >
 1e18d54:    40 80             	r0 += 4
 1e18d56:    06 f2 1f 10       	if (r6 != r0) goto 62 <ll_control_step_verify+0x68 : 1e18d98 >
 1e18d5a:    30 fc 9c 00       	r0 = r3 + 156
 1e18d5e:    02 60             	r2 = b[r0 + 0] (u)			  ## link_layer.c:611:19
 1e18d60:    f2 8f             	r2 += -1			  ## link_layer.c:611:19
 1e18d62:    03 f9 15 80       	r3 = b[r8 + 21] (u)			  ## link_layer.c:614:13
 1e18d66:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:611:19
 1e18d68:    87 04             	r7 = r2.b0 (u)			  ## link_layer.c:612:23
 1e18d6a:    47 f8 00 17       	r7 = h[r1+r7<<1] (u)			  ## link_layer.c:612:23
 1e18d6e:    c5 05             	r5 = r7.b0 (u)			  ## link_layer.c:614:23
 1e18d70:    53 f2 18 10       	if (r3 != r5) goto 48 <ll_control_step_verify+0x74 : 1e18da4 >			  ## link_layer.c:614:23
 1e18d74:    40 08             	r0 = r4			  ## link_layer.c:615:13
 1e18d76:    0e 14             	call -2020 <ll_response_timeout_stop : 1e18594 >			  ## link_layer.c:615:13
 1e18d78:    01 fb 07 40       	r1 = 16391 <low_power_system_down+0x10F : 4007 >			  ## link_layer.c:461:9
 1e18d7c:    30 70             	r0 = 3			  ## link_layer.c:461:9
 1e18d7e:    16 f2 01 00       	if (r6 == r1) goto 2 <ll_control_step_verify+0x54 : 1e18d84 >			  ## link_layer.c:461:9
 1e18d82:    10 70             	r0 = 1			  ## link_layer.c:461:9
 1e18d84:    a1 80             	r1 += 10			  ## link_layer.c:461:9
 1e18d86:    22 70             	r2 = 2			  ## link_layer.c:461:9
 1e18d88:    16 f2 1b 00       	if (r6 == r1) goto 54 <ll_control_step_verify+0x92 : 1e18dc2 >			  ## link_layer.c:461:9
 1e18d8c:    02 08             	r2 = r0			  ## link_layer.c:461:9
 1e18d8e:    19 18             	goto 50 <ll_control_step_verify+0x92 : 1e18dc2 >			  ## link_layer.c:461:9
 1e18d90:    40 08             	r0 = r4			  ## link_layer.c:602:9
 1e18d92:    00 14             	call -2048 <ll_response_timeout_stop : 1e18594 >			  ## link_layer.c:602:9
 1e18d94:    12 70             	r2 = 1			  ## link_layer.c:603:9
 1e18d96:    15 18             	goto 42 <ll_control_step_verify+0x92 : 1e18dc2 >			  ## link_layer.c:603:9
 1e18d98:    02 f9 9c 30       	r2 = b[r3 + 156] (u)
 1e18d9c:    47 f8 00 12       	r7 = h[r1+r2<<1] (u)
 1e18da0:    30 fc 9c 00       	r0 = r3 + 156
 1e18da4:    67 f2 10 10       	if (r7 != r6) goto 32 <ll_control_step_verify+0x98 : 1e18dc8 >
 1e18da8:    12 80             	r2 += 1			  ## link_layer.c:625:19
 1e18daa:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:625:19
 1e18dac:    80 04             	r0 = r2.b0 (u)			  ## link_layer.c:629:13
 1e18dae:    40 c0             	r0 = r0 << 1			  ## link_layer.c:629:13
 1e18db0:    00 fa 00 10       	r0 = b[r1+r0] (u)			  ## link_layer.c:629:13
 1e18db4:    01 ff ff 00 07 00 	if (r0 != 255) goto 14 <ll_control_step_verify+0x98 : 1e18dc8 >			  ## link_layer.c:629:13
 1e18dba:    40 08             	r0 = r4			  ## link_layer.c:631:13
 1e18dbc:    bf f3 ea fb       	call -2092 <ll_response_timeout_stop : 1e18594 >			  ## link_layer.c:631:13
 1e18dc0:    02 70             	r2 = 0			  ## link_layer.c:632:13
 1e18dc2:    40 08             	r0 = r4
 1e18dc4:    81 08             	r1 = r8
 1e18dc6:    f5 16             	call -534 <ll_control_procedure_finish : 1e18bb2 >
 1e18dc8:    58 01             	{pc, r8-r4} = [sp++]			  ## link_layer.c:639:1


ll_send_control_data:
 1e18dca:    63 01             	[--sp] = {r3}			  ## link_layer.c:957:0
 1e18dcc:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:957:0
 1e18dce:    fc 0b             	sp += -8			  ## link_layer.c:957:0
 1e18dd0:    26 08             	r6 = r2			  ## link_layer.c:957:0
 1e18dd2:    17 08             	r7 = r1			  ## link_layer.c:957:0
 1e18dd4:    04 08             	r4 = r0			  ## link_layer.c:957:0
 1e18dd6:    c1 a1             	r1 = sp + 28			  ## link_layer.c:957:0
 1e18dd8:    19 02             	[sp+4] = r1			  ## link_layer.c:961:5
 1e18dda:    60 08             	r0 = r6			  ## link_layer.c:962:5
 1e18ddc:    bf f3 8f 6c       	call -75490 <__vsprintf_len : 1e066fe >			  ## link_layer.c:962:5
 1e18de0:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data+0x1E : 1e18de8 >
 1e18de4:    8f f3 57 53       	call 2008750 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e18de8:    45 fc c8 00       	r5 = r4 + 200
 1e18dec:    0f 6a             	b[r5 + 0] = r7			  ## link_layer.c:964:23
 1e18dee:    08 2c             	if (r6 == 0) goto 16 <ll_send_control_data+0x36 : 1e18e00 >			  ## link_layer.c:964:23
 1e18df0:    c2 a1             	r2 = sp + 28
 1e18df2:    1a 02             	[sp+4] = r2			  ## link_layer.c:967:9
 1e18df4:    10 9a             	r0 = r5 + 1			  ## link_layer.c:968:42
 1e18df6:    61 08             	r1 = r6			  ## link_layer.c:968:16
 1e18df8:    bf f3 05 65       	call -79350 <__vsprintf : 1e05806 >			  ## link_layer.c:968:16
 1e18dfc:    13 90             	r3 = r0 + 1			  ## link_layer.c:968:13
 1e18dfe:    01 18             	goto 2 <ll_send_control_data+0x38 : 1e18e02 >
 1e18e00:    13 70             	r3 = 1
 1e18e02:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:974:39
 1e18e04:    01 70             	r1 = 0			  ## link_layer.c:974:5
 1e18e06:    32 70             	r2 = 3			  ## link_layer.c:974:5
 1e18e08:    0b 02             	[sp] = r3			  ## link_layer.c:974:5
 1e18e0a:    53 08             	r3 = r5			  ## link_layer.c:974:5
 1e18e0c:    bf f3 50 ee       	call -9056 <le_hw_send_packet_high : 1e16ab0 >			  ## link_layer.c:974:5
 1e18e10:    04 0a             	sp += 8			  ## link_layer.c:974:5
 1e18e12:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:975:1
 1e18e14:    02 0a             	sp += 4			  ## link_layer.c:975:1
 1e18e16:    20 00             	rts			  ## link_layer.c:975:1


ll_send_control_data_state_machine:
 1e18e18:    7b 01             	[--sp] = {rets, r11-r4}			  ## link_layer.c:657:0
 1e18e1a:    e8 0b             	sp += -48			  ## link_layer.c:657:0
 1e18e1c:    04 08             	r4 = r0			  ## link_layer.c:657:0
 1e18e1e:    00 f9 c0 40       	r0 = b[r4 + 192] (u)			  ## link_layer.c:658:39
 1e18e22:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:662:12
 1e18e24:    02 b8             	r2 = r4 + r0			  ## link_layer.c:662:12
 1e18e26:    00 f6 98 20       	r0 = [r2 + 152]			  ## link_layer.c:662:12
 1e18e2a:    19 08             	r9 = r1			  ## link_layer.c:662:12
 1e18e2c:    e2 20             	if (r0 == 0) goto 452 <ll_send_control_data_state_machine+0x1DA : 1e18ff2 >
 1e18e2e:    01 f9 9c 20       	r1 = b[r2 + 156] (u)			  ## link_layer.c:666:15
 1e18e32:    40 f8 00 01       	r0 = h[r0+r1<<1] (u)			  ## link_layer.c:666:15
 1e18e36:    81 d3             	r1 = r0 >> 14			  ## link_layer.c:669:9
 1e18e38:    dc 32             	if (r1 != 0) goto 440 <ll_send_control_data_state_machine+0x1DA : 1e18ff2 >			  ## link_layer.c:669:9
 1e18e3a:    06 04             	r6 = r0.b0 (u)			  ## link_layer.c:2748:13
 1e18e3c:    c7 ff 10 0e 00 00 	r7 = 3600 <hci_param : e10 >			  ## link_layer.c:2748:13
 1e18e42:    ca ff bc 0e 00 00 	r10 = 3772 <le_param : ebc >			  ## link_layer.c:2748:13
 1e18e48:    76 e0 13 d0       	ifs (r6 <= 7) goto 38 <ll_send_control_data_state_machine+0x5A : 1e18e72 >			  ## link_layer.c:2748:13
 1e18e4c:    86 e0 8f 00       	if (r6 == 8) goto 286 <ll_send_control_data_state_machine+0x156 : 1e18f6e >
 1e18e50:    c6 e0 9d 00       	if (r6 == 12) goto 314 <ll_send_control_data_state_machine+0x176 : 1e18f8e >
 1e18e54:    86 e4 c9 10       	if (r6 != 72) goto 402 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >
 1e18e58:    10 70             	r0 = 1			  ## link_layer.c:2737:12
 1e18e5a:    15 70             	r5 = 1			  ## link_layer.c:2737:12
 1e18e5c:    bf f3 64 fb       	call -2360 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2737:12
 1e18e60:    bc 20             	if (r0 == 0) goto 376 <ll_send_control_data_state_machine+0x1C2 : 1e18fda >
 1e18e62:    01 70             	r1 = 0			  ## link_layer.c:2742:5
 1e18e64:    19 02             	[sp+4] = r1			  ## link_layer.c:2742:5
 1e18e66:    c2 ff 6b 27 e1 01 	r2 = 31532907 <update_target_end+0x253B : 1e1276b >			  ## link_layer.c:2742:5
 1e18e6c:    81 74             	r1 = 72			  ## link_layer.c:2742:5
 1e18e6e:    f3 70             	r3 = 15			  ## link_layer.c:2742:5
 1e18e70:    a2 18             	goto 324 <ll_send_control_data_state_machine+0x19E : 1e18fb6 >			  ## link_layer.c:2742:5
 1e18e72:    26 e0 a2 00       	if (r6 == 2) goto 324 <ll_send_control_data_state_machine+0x1A2 : 1e18fba >
 1e18e76:    56 e0 b8 10       	if (r6 != 5) goto 368 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >
 1e18e7a:    00 f7 7a a0       	r0 = h[r10 + 122] (u)			  ## link_layer.c:2261:47
 1e18e7e:    bf f3 53 fb       	call -2394 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2261:28
 1e18e82:    08 08             	r8 = r0			  ## link_layer.c:2261:28
 1e18e84:    b2 20             	if (r0 == 0) goto 356 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >
 1e18e86:    00 fc 2c 01       	r0 = r0 + 300
 1e18e8a:    31 60             	r1 = b[r0 + 3] (u)			  ## link_layer.c:2273:5
 1e18e8c:    22 60             	r2 = b[r0 + 2] (u)			  ## link_layer.c:2273:5
 1e18e8e:    13 60             	r3 = b[r0 + 1] (u)			  ## link_layer.c:2273:5
 1e18e90:    07 60             	r7 = b[r0 + 0] (u)			  ## link_layer.c:2273:5
 1e18e92:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## link_layer.c:2273:5
 1e18e96:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## link_layer.c:2273:5
 1e18e9a:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## link_layer.c:2273:5
 1e18e9e:    af 02             	[sp+40] = r7			  ## link_layer.c:2273:5
 1e18ea0:    71 60             	r1 = b[r0 + 7] (u)			  ## link_layer.c:2275:5
 1e18ea2:    62 60             	r2 = b[r0 + 6] (u)			  ## link_layer.c:2275:5
 1e18ea4:    53 60             	r3 = b[r0 + 5] (u)			  ## link_layer.c:2275:5
 1e18ea6:    40 60             	r0 = b[r0 + 4] (u)			  ## link_layer.c:2275:5
 1e18ea8:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## link_layer.c:2275:5
 1e18eac:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## link_layer.c:2275:5
 1e18eb0:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## link_layer.c:2275:5
 1e18eb4:    b8 02             	[sp+44] = r0			  ## link_layer.c:2275:5
 1e18eb6:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2278:29
 1e18eba:    82 a2             	r2 = sp + 40			  ## link_layer.c:2278:29
 1e18ebc:    01 70             	r1 = 0			  ## link_layer.c:2278:5
 1e18ebe:    bf f3 fb e9       	call -11274 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:2278:5
 1e18ec2:    87 fc 0c 01       	r7 = r8 + 268			  ## link_layer.c:2278:5
 1e18ec6:    70 6f             	r0 = b[r7 + 23] (u)			  ## link_layer.c:2284:5
 1e18ec8:    61 6f             	r1 = b[r7 + 22] (u)			  ## link_layer.c:2284:5
 1e18eca:    52 6f             	r2 = b[r7 + 21] (u)			  ## link_layer.c:2284:5
 1e18ecc:    43 6f             	r3 = b[r7 + 20] (u)			  ## link_layer.c:2284:5
 1e18ece:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## link_layer.c:2284:5
 1e18ed2:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## link_layer.c:2284:5
 1e18ed6:    0b f9 11 70       	r11 = b[r7 + 17] (u)			  ## link_layer.c:2284:5
 1e18eda:    32 6f             	r2 = b[r7 + 19] (u)			  ## link_layer.c:2284:5
 1e18edc:    25 6f             	r5 = b[r7 + 18] (u)			  ## link_layer.c:2284:5
 1e18ede:    00 6f             	r0 = b[r7 + 16] (u)			  ## link_layer.c:2284:5
 1e18ee0:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## link_layer.c:2284:5
 1e18ee4:    3b 02             	[sp+12] = r3			  ## link_layer.c:2284:5
 1e18ee6:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## link_layer.c:2284:5
 1e18eea:    c8 fd 40 0b       	r0 <= insert(r11, p:8, l:8)			  ## link_layer.c:2284:5
 1e18eee:    d0 fd 80 05       	r0 <= insert(r5, p:16, l:16)			  ## link_layer.c:2284:5
 1e18ef2:    28 02             	[sp+8] = r0			  ## link_layer.c:2284:5
 1e18ef4:    f0 6f             	r0 = b[r7 + 31] (u)			  ## link_layer.c:2286:5
 1e18ef6:    e1 6f             	r1 = b[r7 + 30] (u)			  ## link_layer.c:2286:5
 1e18ef8:    d2 6f             	r2 = b[r7 + 29] (u)			  ## link_layer.c:2286:5
 1e18efa:    c3 6f             	r3 = b[r7 + 28] (u)			  ## link_layer.c:2286:5
 1e18efc:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## link_layer.c:2286:5
 1e18f00:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## link_layer.c:2286:5
 1e18f04:    0b f9 19 70       	r11 = b[r7 + 25] (u)			  ## link_layer.c:2286:5
 1e18f08:    b2 6f             	r2 = b[r7 + 27] (u)			  ## link_layer.c:2286:5
 1e18f0a:    a5 6f             	r5 = b[r7 + 26] (u)			  ## link_layer.c:2286:5
 1e18f0c:    80 6f             	r0 = b[r7 + 24] (u)			  ## link_layer.c:2286:5
 1e18f0e:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## link_layer.c:2286:5
 1e18f12:    5b 02             	[sp+20] = r3			  ## link_layer.c:2286:5
 1e18f14:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## link_layer.c:2286:5
 1e18f18:    c8 fd 40 0b       	r0 <= insert(r11, p:8, l:8)			  ## link_layer.c:2286:5
 1e18f1c:    d0 fd 80 05       	r0 <= insert(r5, p:16, l:16)			  ## link_layer.c:2286:5
 1e18f20:    48 02             	[sp+16] = r0			  ## link_layer.c:2286:5
 1e18f22:    a1 fc 7c 00       	r1 = r10 + 124			  ## link_layer.c:2287:5
 1e18f26:    02 71             	r2 = 16			  ## link_layer.c:2287:5
 1e18f28:    70 08             	r0 = r7			  ## link_layer.c:2287:5
 1e18f2a:    97 f3 db 6f       	call 3071926 <memcpy : 106ee4 >			  ## link_layer.c:2287:5
 1e18f2e:    81 a0             	r1 = sp + 8			  ## link_layer.c:2287:5
 1e18f30:    85 a1             	r5 = sp + 24
 1e18f32:    70 08             	r0 = r7			  ## link_layer.c:2290:5
 1e18f34:    52 08             	r2 = r5			  ## link_layer.c:2290:5
 1e18f36:    bf f3 f1 6c       	call -75294 <aes128_start : 1e0691c >			  ## link_layer.c:2290:5
 1e18f3a:    f0 70             	r0 = 15
 1e18f3c:    81 f9 01 50       	r1 = b[r5 ++= 1] (u)			  ## btcontroller_util.c:117:28
 1e18f40:    82 a0             	r2 = sp + 8
 1e18f42:    11 fa 00 20       	b[r2+r0] = r1			  ## btcontroller_util.c:117:26
 1e18f46:    f0 8f             	r0 += -1			  ## btcontroller_util.c:116:19
 1e18f48:    f0 ef f8 1f       	if (r0 != -1) goto -16 <ll_send_control_data_state_machine+0x124 : 1e18f3c >			  ## btcontroller_util.c:116:19
 1e18f4c:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2296:29
 1e18f50:    82 a0             	r2 = sp + 8			  ## link_layer.c:2296:29
 1e18f52:    11 70             	r1 = 1			  ## link_layer.c:2296:5
 1e18f54:    bf f3 b0 e9       	call -11424 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:2296:5
 1e18f58:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2298:31
 1e18f5c:    b1 70             	r1 = 11			  ## link_layer.c:2300:5
 1e18f5e:    12 70             	r2 = 1			  ## link_layer.c:2300:5
 1e18f60:    bf f3 aa e9       	call -11436 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:2300:5
 1e18f64:    51 70             	r1 = 5			  ## link_layer.c:2302:5
 1e18f66:    02 70             	r2 = 0			  ## link_layer.c:2302:5
 1e18f68:    80 08             	r0 = r8			  ## link_layer.c:2302:5
 1e18f6a:    2f 17             	call -418 <ll_send_control_data : 1e18dca >			  ## link_layer.c:2302:5
 1e18f6c:    3e 18             	goto 124 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >			  ## link_layer.c:2302:5
 1e18f6e:    00 f7 5c a0       	r0 = h[r10 + 92] (u)			  ## link_layer.c:1981:47
 1e18f72:    bf f3 d9 fa       	call -2638 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:1981:28
 1e18f76:    39 20             	if (r0 == 0) goto 114 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >
 1e18f78:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:1990:9
 1e18f7c:    c2 ff 3f 27 e1 01 	r2 = 31532863 <update_target_end+0x250F : 1e1273f >			  ## link_layer.c:1990:9
 1e18f82:    a3 fc 22 00       	r3 = r10 + 34			  ## link_layer.c:1994:9
 1e18f86:    11 e0 2e 10       	if (r1 != 1) goto 92 <ll_send_control_data_state_machine+0x1CE : 1e18fe6 >			  ## link_layer.c:1990:9
 1e18f8a:    e1 70             	r1 = 14			  ## link_layer.c:1991:9
 1e18f8c:    2d 18             	goto 90 <ll_send_control_data_state_machine+0x1D0 : 1e18fe8 >			  ## link_layer.c:1991:9
 1e18f8e:    01 f9 9c 70       	r1 = b[r7 + 156] (u)			  ## link_layer.c:2059:47
 1e18f92:    00 f9 9b 70       	r0 = b[r7 + 155] (u)			  ## link_layer.c:2059:47
 1e18f96:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2059:47
 1e18f9a:    bf f3 c5 fa       	call -2678 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2059:28
 1e18f9e:    25 20             	if (r0 == 0) goto 74 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >
 1e18fa0:    03 f9 32 a0       	r3 = b[r10 + 50] (u)			  ## link_layer.c:2070:26
 1e18fa4:    05 f7 34 a0       	r5 = h[r10 + 52] (u)			  ## link_layer.c:2071:26
 1e18fa8:    01 f7 36 a0       	r1 = h[r10 + 54] (u)			  ## link_layer.c:2072:26
 1e18fac:    19 02             	[sp+4] = r1			  ## link_layer.c:2068:5
 1e18fae:    c2 ff 76 27 e1 01 	r2 = 31532918 <update_target_end+0x2546 : 1e12776 >			  ## link_layer.c:2068:5
 1e18fb4:    c1 70             	r1 = 12			  ## link_layer.c:2068:5
 1e18fb6:    0d 02             	[sp] = r5
 1e18fb8:    17 18             	goto 46 <ll_send_control_data_state_machine+0x1D0 : 1e18fe8 >
 1e18fba:    01 f9 9e 70       	r1 = b[r7 + 158] (u)			  ## link_layer.c:2407:47
 1e18fbe:    00 f9 9d 70       	r0 = b[r7 + 157] (u)			  ## link_layer.c:2407:47
 1e18fc2:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2407:47
 1e18fc6:    bf f3 af fa       	call -2722 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2407:28
 1e18fca:    0f 20             	if (r0 == 0) goto 30 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >
 1e18fcc:    03 f9 9f 70       	r3 = b[r7 + 159] (u)			  ## link_layer.c:2416:55
 1e18fd0:    c2 ff 6d 27 e1 01 	r2 = 31532909 <update_target_end+0x253D : 1e1276d >			  ## link_layer.c:2416:5
 1e18fd6:    21 70             	r1 = 2			  ## link_layer.c:2416:5
 1e18fd8:    07 18             	goto 14 <ll_send_control_data_state_machine+0x1D0 : 1e18fe8 >			  ## link_layer.c:2416:5
 1e18fda:    c0 ff f5 26 e1 01 	r0 = 31532789 <update_target_end+0x24C5 : 1e126f5 >			  ## link_layer.c:2739:9
 1e18fe0:    bf f3 c2 9f       	call -49276 <puts : 1e0cf68 >			  ## link_layer.c:2739:9
 1e18fe4:    02 18             	goto 4 <ll_send_control_data_state_machine+0x1D2 : 1e18fea >			  ## link_layer.c:2739:9
 1e18fe6:    81 70             	r1 = 8			  ## link_layer.c:1994:9
 1e18fe8:    f0 16             	call -544 <ll_send_control_data : 1e18dca >
 1e18fea:    60 08             	r0 = r6			  ## link_layer.c:682:5
 1e18fec:    41 08             	r1 = r4			  ## link_layer.c:682:5
 1e18fee:    92 08             	r2 = r9			  ## link_layer.c:682:5
 1e18ff0:    9f 16             	call -706 <ll_control_step_verify : 1e18d30 >			  ## link_layer.c:682:5
 1e18ff2:    18 0a             	sp += 48
 1e18ff4:    5b 01             	{pc, r11-r4} = [sp++]			  ## link_layer.c:683:1


ll_thread_process:
 1e18ff6:    7f 01             	[--sp] = {rets, r15-r4}			  ## link_layer.c:3041:0
 1e18ff8:    f6 0b             	sp += -20			  ## link_layer.c:3041:0
 1e18ffa:    c7 ff e0 2d 00 00 	r7 = 11744 <ll_hdl : 2de0 >			  ## link_layer.c:3041:0
 1e19000:    15 4e             	r5 = [r7 + 4]			  ## link_layer.c:408:39
 1e19002:    06 08             	r6 = r0
 1e19004:    97 f3 ca 6e       	call 3071380 <local_irq_disable : 106d9c >			  ## lbuf.c:236:5
 1e19008:    04 4a             	r4 = [r5 + 0]			  ## lbuf.c:236:5
 1e1900a:    54 f2 05 00       	if (r4 == r5) goto 10 <ll_thread_process+0x22 : 1e19018 >
 1e1900e:    e0 68             	r0 = b[r4 + 14] (u)			  ## lbuf.c:242:16
 1e19010:    06 20             	if (r0 == 0) goto 12 <ll_thread_process+0x28 : 1e1901e >			  ## lbuf.c:242:13
 1e19012:    04 48             	r4 = [r4 + 0]
 1e19014:    54 f2 fb 1f       	if (r4 != r5) goto -10 <ll_thread_process+0x18 : 1e1900e >
 1e19018:    97 f3 be 6e       	call 3071356 <local_irq_enable : 106d98 >			  ## lbuf.c:249:5
 1e1901c:    12 18             	goto 36 <ll_thread_process+0x4C : 1e19042 >			  ## lbuf.c:249:5
 1e1901e:    10 70             	r0 = 1			  ## lbuf.c:243:22
 1e19020:    e8 68             	b[r4 + 14] = r0			  ## lbuf.c:243:22
 1e19022:    97 f3 b9 6e       	call 3071346 <local_irq_enable : 106d98 >			  ## lbuf.c:244:13
 1e19026:    c0 ff 28 2d 00 00 	r0 = 11560 <h4_transport : 2d28 >			  ## link_layer.c:412:9
 1e1902c:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:412:9
 1e1902e:    63 40             	r3 = [r0 + 24]			  ## link_layer.c:412:24
 1e19030:    10 69             	r0 = b[r4 + 17] (u)			  ## link_layer.c:412:84
 1e19032:    04 81             	r4 += 16			  ## lbuf.c:245:22
 1e19034:    22 90             	r2 = r0 + 2			  ## link_layer.c:412:82
 1e19036:    40 70             	r0 = 4			  ## link_layer.c:412:9
 1e19038:    41 08             	r1 = r4			  ## link_layer.c:412:9
 1e1903a:    83 00             	call r3			  ## link_layer.c:412:9
 1e1903c:    40 08             	r0 = r4			  ## link_layer.c:413:9
 1e1903e:    bf f3 bc 43       	call -96392 <lbuf_free_btctrler : 1e017ba >			  ## link_layer.c:413:9
 1e19042:    c0 ff b0 0e 00 00 	r0 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:557:9
 1e19048:    00 40             	r0 = [r0 + 0]			  ## ll_adv.c:557:9
 1e1904a:    11 70             	r1 = 1			  ## ll_adv.c:557:9
 1e1904c:    12 20             	if (r0 == 0) goto 36 <ll_thread_process+0x7C : 1e19072 >			  ## ll_adv.c:557:9
 1e1904e:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:561:44
 1e19050:    10 20             	if (r0 == 0) goto 32 <ll_thread_process+0x7C : 1e19072 >
 1e19052:    04 40             	r4 = [r0 + 0]			  ## ll_adv.c:567:19
 1e19054:    0e 28             	if (r4 == 0) goto 28 <ll_thread_process+0x7C : 1e19072 >
 1e19056:    00 48             	r0 = [r4 + 0]
 1e19058:    c1 ff 22 98 e1 01 	r1 = 31561762 <__adv_rx_post_handler : 1e19822 >			  ## ll_adv.c:573:5
 1e1905e:    bf f3 4d ec       	call -10086 <le_hw_upload_data : 1e168fc >			  ## ll_adv.c:573:5
 1e19062:    02 a1             	r2 = sp + 16			  ## ll_adv.c:573:5
 1e19064:    31 71             	r1 = 19			  ## ll_adv.c:577:5
 1e19066:    40 08             	r0 = r4			  ## ll_adv.c:577:5
 1e19068:    bf f3 26 e9       	call -11700 <le_hw_ioctrl : 1e162b8 >			  ## ll_adv.c:577:5
 1e1906c:    40 02             	r0 = [sp+16]			  ## ll_adv.c:579:12
 1e1906e:    21 fd 01 09       	r1 = r0 & 1
 1e19072:    0e f6 24 70       	r14 = [r7 + 36]			  ## link_layer.c:3060:5
 1e19076:    7b fc 24 00       	r11 = r7 + 36			  ## link_layer.c:3060:5
 1e1907a:    1e 02             	[sp+4] = r6			  ## link_layer.c:3060:5
 1e1907c:    be f2 c3 00       	if (r14 == r11) goto 390 <ll_thread_process+0x210 : 1e19206 >			  ## link_layer.c:3060:5
 1e19080:    08 fb fd 7f       	r8 = 32765 <nvbss_size+0xD7D : 7ffd >
 1e19084:    29 02             	[sp+8] = r1
 1e19086:    e9 08             	r9 = r14
 1e19088:    0e f6 00 90       	r14 = [r9 + 0]
 1e1908c:    08 00             	csync			  ## link_layer.c:2911:12
 1e1908e:    9c fc 5c 00       	r12 = r9 + 92			  ## link_layer.c:2911:12
 1e19092:    00 f6 6c c0       	r0 = [r12 + 108]			  ## link_layer.c:2911:12
 1e19096:    9f fc cc ff       	r15 = r9 + -52			  ## link_layer.c:2911:12
 1e1909a:    9a fc c4 00       	r10 = r9 + 196			  ## link_layer.c:2911:12
 1e1909e:    38 20             	if (r0 == 0) goto 112 <ll_thread_process+0x11A : 1e19110 >			  ## link_layer.c:2911:12
 1e190a0:    cd fc 74 00       	r13 = r12 + 116
 1e190a4:    05 70             	r5 = 0
 1e190a6:    00 f6 74 c0       	r0 = [r12 + 116]			  ## list.h:124:18
 1e190aa:    d0 f2 49 00       	if (r0 == r13) goto 146 <ll_thread_process+0x14A : 1e19140 >			  ## list.h:124:18
 1e190ae:    97 f3 75 6e       	call 3071210 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e190b2:    08 00             	csync			  ## atomic.h:32:5
 1e190b4:    00 f6 6c c0       	r0 = [r12 + 108]			  ## atomic.h:34:14
 1e190b8:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e190ba:    10 f6 6c c0       	[r12 + 108] = r0			  ## atomic.h:35:16
 1e190be:    97 f3 6b 6e       	call 3071190 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e190c2:    00 f6 74 c0       	r0 = [r12 + 116]			  ## link_layer.c:1087:5
 1e190c6:    01 70             	r1 = 0			  ## link_layer.c:1087:5
 1e190c8:    d0 f2 0f 00       	if (r0 == r13) goto 30 <ll_thread_process+0xF4 : 1e190ea >			  ## link_layer.c:1087:5
 1e190cc:    82 60             	r2 = b[r0 + 8] (u)			  ## link_layer.c:1090:32
 1e190ce:    f2 8f             	r2 += -1			  ## link_layer.c:1090:32
 1e190d0:    8a 60             	b[r0 + 8] = r2			  ## link_layer.c:1090:32
 1e190d2:    61 ff ff 29 09 00 	if ((r2 & 255) != 0) goto 18 <ll_thread_process+0xF4 : 1e190ea >			  ## link_layer.c:1090:32
 1e190d8:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e190da:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e190dc:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e190de:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e190e0:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e190e2:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e190e4:    bf f3 c7 43       	call -96370 <__bt_free : 1e01876 >			  ## link_layer.c:1093:13
 1e190e8:    11 70             	r1 = 1
 1e190ea:    08 00             	csync			  ## link_layer.c:2911:12
 1e190ec:    00 f6 6c c0       	r0 = [r12 + 108]			  ## link_layer.c:2911:12
 1e190f0:    15 09             	r5 += r1			  ## link_layer.c:2918:22
 1e190f2:    d9 31             	if (r0 != 0) goto -78 <ll_thread_process+0xB0 : 1e190a6 >			  ## link_layer.c:2918:22
 1e190f4:    60 ff ff 59 0b 00 	if ((r5 & 255) == 0) goto 22 <ll_thread_process+0x11A : 1e19110 >
 1e190fa:    03 f7 00 a0       	r3 = h[r10 + 0] (u)			  ## ll_events.c:408:5
 1e190fe:    41 05             	r1 = r5.b0 (u)			  ## ll_events.c:408:5
 1e19100:    30 71             	r0 = 19			  ## ll_events.c:408:5
 1e19102:    12 70             	r2 = 1			  ## ll_events.c:408:5
 1e19104:    09 02             	[sp] = r1			  ## ll_events.c:408:5
 1e19106:    c1 ff 2b 27 e1 01 	r1 = 31532843 <update_target_end+0x24FB : 1e1272b >			  ## ll_events.c:408:5
 1e1910c:    bf f3 d5 e4       	call -13910 <hci_send_event : 1e15aba >			  ## ll_events.c:408:5
 1e19110:    08 00             	csync			  ## link_layer.c:2924:12
 1e19112:    13 18             	goto 38 <ll_thread_process+0x144 : 1e1913a >			  ## link_layer.c:2924:12
 1e19114:    97 f3 42 6e       	call 3071108 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e19118:    08 00             	csync			  ## atomic.h:32:5
 1e1911a:    00 f6 70 c0       	r0 = [r12 + 112]			  ## atomic.h:34:14
 1e1911e:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e19120:    10 f6 70 c0       	[r12 + 112] = r0			  ## atomic.h:35:16
 1e19124:    97 f3 38 6e       	call 3071088 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e19128:    20 fb 80 0a       	r0 = 32768			  ## link_layer.c:2897:5
 1e1912c:    02 70             	r2 = 0			  ## link_layer.c:2897:5
 1e1912e:    f1 08             	r1 = r15			  ## link_layer.c:2897:5
 1e19130:    ff 15             	call -1026 <ll_control_step_verify : 1e18d30 >			  ## link_layer.c:2897:5
 1e19132:    01 70             	r1 = 0			  ## link_layer.c:2900:5
 1e19134:    f0 08             	r0 = r15			  ## link_layer.c:2900:5
 1e19136:    70 16             	call -800 <ll_send_control_data_state_machine : 1e18e18 >			  ## link_layer.c:2900:5
 1e19138:    08 00             	csync			  ## link_layer.c:2924:12
 1e1913a:    00 f6 70 c0       	r0 = [r12 + 112]
 1e1913e:    ea 31             	if (r0 != 0) goto -44 <ll_thread_process+0x11E : 1e19114 >
 1e19140:    00 f6 cc 9f       	r0 = [r9 + -52]
 1e19144:    01 f9 09 90       	r1 = b[r9 + 9] (u)			  ## link_layer.c:2875:9
 1e19148:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:2875:9
 1e1914a:    11 e0 04 10       	if (r1 != 1) goto 8 <ll_thread_process+0x160 : 1e19156 >			  ## link_layer.c:2875:9
 1e1914e:    c1 ff d8 92 e1 01 	r1 = 31560408 <__conn_slave_rx_post_handler : 1e192d8 >			  ## ll_slave.c:726:5
 1e19154:    03 18             	goto 6 <ll_thread_process+0x166 : 1e1915c >			  ## ll_slave.c:726:5
 1e19156:    c1 ff cc a1 e1 01 	r1 = 31564236 <__conn_master_rx_post_handler : 1e1a1cc >			  ## ll_master.c:582:5
 1e1915c:    bf f3 ce eb       	call -10340 <le_hw_upload_data : 1e168fc >
 1e19160:    07 f7 00 c0       	r7 = h[r12 + 0] (u)			  ## link_layer.c:2887:36
 1e19164:    05 f6 4c a0       	r5 = [r10 + 76]			  ## link_layer.c:285:5
 1e19168:    a6 fc 4c 00       	r6 = r10 + 76			  ## link_layer.c:285:5
 1e1916c:    65 f2 16 00       	if (r5 == r6) goto 44 <ll_thread_process+0x1A6 : 1e1919c >
 1e19170:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:286:15
 1e19172:    e0 b1             	r0 = r0 - r7			  ## link_layer.c:286:26
 1e19174:    04 4a             	r4 = [r5 + 0]			  ## link_layer.c:286:26
 1e19176:    20 04             	r0 = r0.l (u)			  ## link_layer.c:287:14
 1e19178:    f0 8f             	r0 += -1			  ## link_layer.c:287:28
 1e1917a:    80 f2 0c 90       	if (r0 <= r8) goto 24 <ll_thread_process+0x1A0 : 1e19196 >			  ## link_layer.c:287:28
 1e1917e:    00 4a             	r0 = [r5 + 0]			  ## list.h:171:36
 1e19180:    11 4a             	r1 = [r5 + 4]			  ## list.h:171:23
 1e19182:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e19184:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e19186:    0d 4a             	[r5 + 0] = r5			  ## list.h:172:17
 1e19188:    1d 4a             	[r5 + 4] = r5			  ## list.h:173:17
 1e1918a:    21 4a             	r1 = [r5 + 8]			  ## link_layer.c:289:16
 1e1918c:    f0 08             	r0 = r15			  ## link_layer.c:289:13
 1e1918e:    81 00             	call r1			  ## link_layer.c:289:13
 1e19190:    50 08             	r0 = r5			  ## link_layer.c:290:13
 1e19192:    bf f3 70 43       	call -96544 <__bt_free : 1e01876 >			  ## link_layer.c:290:13
 1e19196:    45 08             	r5 = r4
 1e19198:    64 f2 ea 1f       	if (r4 != r6) goto -44 <ll_thread_process+0x17A : 1e19170 >
 1e1919c:    00 f9 08 90       	r0 = b[r9 + 8] (u)			  ## link_layer.c:3072:19
 1e191a0:    80 e0 0f 10       	if (r0 != 8) goto 30 <ll_thread_process+0x1CC : 1e191c2 >			  ## link_layer.c:3072:13
 1e191a4:    f0 08             	r0 = r15			  ## link_layer.c:3074:13
 1e191a6:    bf f3 79 fa       	call -2830 <ll_delete_link : 1e1869c >			  ## link_layer.c:3074:13
 1e191aa:    e0 7f             	r0 = 254			  ## link_layer.c:3075:13
 1e191ac:    02 70             	r2 = 0			  ## link_layer.c:3075:13
 1e191ae:    03 70             	r3 = 0			  ## link_layer.c:3075:13
 1e191b0:    c1 ff 6c 27 e1 01 	r1 = 31532908 <update_target_end+0x253C : 1e1276c >			  ## link_layer.c:3075:13
 1e191b6:    bf f3 80 e4       	call -14080 <hci_send_event : 1e15aba >			  ## link_layer.c:3075:13
 1e191ba:    e9 08             	r9 = r14			  ## link_layer.c:3075:13
 1e191bc:    b9 f2 64 1f       	if (r9 != r11) goto -312 <ll_thread_process+0x92 : 1e19088 >			  ## link_layer.c:3075:13
 1e191c0:    21 18             	goto 66 <ll_thread_process+0x20E : 1e19204 >			  ## link_layer.c:3075:13
 1e191c2:    00 f6 cc 9f       	r0 = [r9 + -52]			  ## link_layer.c:3082:33
 1e191c6:    c2 a0             	r2 = sp + 12			  ## link_layer.c:3082:33
 1e191c8:    31 71             	r1 = 19			  ## link_layer.c:3082:9
 1e191ca:    bf f3 75 e8       	call -12054 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:3082:9
 1e191ce:    00 f9 58 91       	r0 = b[r9 + 344] (u)			  ## link_layer.c:3087:19
 1e191d2:    34 02             	r4 = [sp+12]			  ## link_layer.c:3085:18
 1e191d4:    00 e1 11 30       	if (r0 < 16) goto 34 <ll_thread_process+0x204 : 1e191fa >
 1e191d8:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:3087:19
 1e191dc:    0e 20             	if (r0 == 0) goto 28 <ll_thread_process+0x204 : 1e191fa >			  ## link_layer.c:3087:19
 1e191de:    10 f9 58 91       	b[r9 + 344] = r0			  ## link_layer.c:3088:39
 1e191e2:    03 f7 00 a0       	r3 = h[r10 + 0] (u)			  ## ll_events.c:679:34
 1e191e6:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## ll_events.c:680:34
 1e191ea:    00 7f             	r0 = 240			  ## ll_events.c:676:9
 1e191ec:    02 70             	r2 = 0			  ## ll_events.c:676:9
 1e191ee:    09 02             	[sp] = r1			  ## ll_events.c:676:9
 1e191f0:    c1 ff 2f 27 e1 01 	r1 = 31532847 <update_target_end+0x24FF : 1e1272f >			  ## ll_events.c:676:9
 1e191f6:    bf f3 b8 fa       	call -2704 <__hci_emit_le_meta_event : 1e1876a >			  ## ll_events.c:676:9
 1e191fa:    21 02             	r1 = [sp+8]
 1e191fc:    51 b9             	r1 &= r4			  ## link_layer.c:3085:15
 1e191fe:    be f2 41 1f       	if (r14 != r11) goto -382 <ll_thread_process+0x8E : 1e19084 >
 1e19202:    01 18             	goto 2 <ll_thread_process+0x210 : 1e19206 >
 1e19204:    21 02             	r1 = [sp+8]
 1e19206:    0f 22             	if (r1 == 0) goto 30 <ll_thread_process+0x230 : 1e19226 >
 1e19208:    c0 ff e0 2d 00 00 	r0 = 11744 <ll_hdl : 2de0 >			  ## link_layer.c:3112:47
 1e1920e:    14 40             	r4 = [r0 + 4]			  ## link_layer.c:3112:47
 1e19210:    97 f3 c4 6d       	call 3070856 <local_irq_disable : 106d9c >			  ## lbuf.c:169:5
 1e19214:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e19216:    97 f3 bf 6d       	call 3070846 <local_irq_enable : 106d98 >			  ## lbuf.c:171:9
 1e1921a:    45 f2 04 10       	if (r5 != r4) goto 8 <ll_thread_process+0x230 : 1e19226 >			  ## lbuf.c:171:9
 1e1921e:    01 70             	r1 = 0			  ## link_layer.c:3114:9
 1e19220:    10 02             	r0 = [sp+4]			  ## link_layer.c:3114:9
 1e19222:    bf f3 16 6c       	call -75732 <thread_suspend : 1e06a52 >			  ## link_layer.c:3114:9
 1e19226:    0a 0a             	sp += 20
 1e19228:    5f 01             	{pc, r15-r4} = [sp++]			  ## link_layer.c:3116:1


conn_rx_acl_u_post_handler:
 1e1922a:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1318:0
 1e1922c:    a2 62             	r2 = b[r1 + 10] (u)			  ## link_layer.c:1319:13
 1e1922e:    1e 24             	if (r2 == 0) goto 60 <conn_rx_acl_u_post_handler+0x42 : 1e1926c >			  ## link_layer.c:1319:13
 1e19230:    03 f9 f8 00       	r3 = b[r0 + 248] (u)			  ## link_layer.c:1323:25
 1e19234:    0b 63             	b[r1 + 16] = r3			  ## link_layer.c:1323:17
 1e19236:    43 52             	r3 = h[r1 + 8] (u)			  ## link_layer.c:1326:13
 1e19238:    82 fd 20 43       	r4 = uextra(r3, p:4, l:2)			  ## link_layer.c:1326:9
 1e1923c:    03 93             	r3 = r1 + 16			  ## link_layer.c:1323:5
 1e1923e:    24 e0 04 00       	if (r4 == 2) goto 8 <conn_rx_acl_u_post_handler+0x20 : 1e1924a >			  ## link_layer.c:1323:5
 1e19242:    14 e0 07 10       	if (r4 != 1) goto 14 <conn_rx_acl_u_post_handler+0x2A : 1e19254 >
 1e19246:    04 71             	r4 = 16
 1e19248:    01 18             	goto 2 <conn_rx_acl_u_post_handler+0x22 : 1e1924c >
 1e1924a:    04 72             	r4 = 32
 1e1924c:    00 f9 f9 00       	r0 = b[r0 + 249] (u)
 1e19250:    50 b8             	r0 |= r4
 1e19252:    18 63             	b[r1 + 17] = r0
 1e19254:    2a 63             	b[r1 + 18] = r2			  ## link_layer.c:1332:17
 1e19256:    00 70             	r0 = 0			  ## link_layer.c:1333:17
 1e19258:    38 63             	b[r1 + 19] = r0			  ## link_layer.c:1333:17
 1e1925a:    c0 ff 28 2d 00 00 	r0 = 11560 <h4_transport : 2d28 >			  ## link_layer.c:1337:5
 1e19260:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:1337:5
 1e19262:    64 40             	r4 = [r0 + 24]			  ## link_layer.c:1337:20
 1e19264:    42 80             	r2 += 4			  ## link_layer.c:1337:71
 1e19266:    20 70             	r0 = 2			  ## link_layer.c:1337:5
 1e19268:    31 08             	r1 = r3			  ## link_layer.c:1337:5
 1e1926a:    84 00             	call r4			  ## link_layer.c:1337:5
 1e1926c:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1338:1


__instant_link_lost:
 1e1926e:    12 70             	r2 = 1			  ## link_layer.c:1269:0
 1e19270:    13 70             	r3 = 1			  ## link_layer.c:1276:35
 1e19272:    10 f2 01 00       	if (r0 == r1) goto 2 <__instant_link_lost+0xA : 1e19278 >			  ## link_layer.c:1276:35
 1e19276:    03 70             	r3 = 0			  ## link_layer.c:1276:35
 1e19278:    60 b0             	r0 = r0 - r1			  ## link_layer.c:1274:19
 1e1927a:    20 04             	r0 = r0.l (u)			  ## link_layer.c:1274:19
 1e1927c:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0xD7E : 7ffe >			  ## link_layer.c:1276:14
 1e19280:    10 f2 01 80       	if (r0 > r1) goto 2 <__instant_link_lost+0x18 : 1e19286 >
 1e19284:    02 70             	r2 = 0			  ## link_layer.c:1276:14
 1e19286:    e0 fd 20 03       	r0 = r3 | r2			  ## link_layer.c:1276:23
 1e1928a:    20 00             	rts			  ## link_layer.c:1281:1


ll_send_control_data_callback:
 1e1928c:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:979:0
 1e1928e:    fc 0b             	sp += -8			  ## link_layer.c:979:0
 1e19290:    04 08             	r4 = r0			  ## link_layer.c:979:0
 1e19292:    81 a1             	r1 = sp + 24			  ## link_layer.c:979:0
 1e19294:    19 02             	[sp+4] = r1			  ## link_layer.c:983:5
 1e19296:    c5 ff 33 27 e1 01 	r5 = 31532851 <update_target_end+0x2503 : 1e12733 >			  ## link_layer.c:983:5
 1e1929c:    50 08             	r0 = r5			  ## link_layer.c:984:5
 1e1929e:    bf f3 2e 6a       	call -76708 <__vsprintf_len : 1e066fe >			  ## link_layer.c:984:5
 1e192a2:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data_callback+0x1E : 1e192aa >
 1e192a6:    8f f3 f6 50       	call 2007532 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e192aa:    40 70             	r0 = 4			  ## link_layer.c:986:23
 1e192ac:    46 fc c8 00       	r6 = r4 + 200			  ## link_layer.c:986:23
 1e192b0:    08 6c             	b[r6 + 0] = r0			  ## link_layer.c:986:23
 1e192b2:    82 a1             	r2 = sp + 24			  ## link_layer.c:986:23
 1e192b4:    1a 02             	[sp+4] = r2			  ## link_layer.c:989:9
 1e192b6:    10 9c             	r0 = r6 + 1			  ## link_layer.c:990:42
 1e192b8:    51 08             	r1 = r5			  ## link_layer.c:990:16
 1e192ba:    bf f3 a4 62       	call -80568 <__vsprintf : 1e05806 >			  ## link_layer.c:990:16
 1e192be:    03 48             	r3 = [r4 + 0]			  ## link_layer.c:996:39
 1e192c0:    10 80             	r0 += 1			  ## link_layer.c:990:13
 1e192c2:    c1 ff ba 97 e1 01 	r1 = 31561658 <__slave_ll_send_enc_rsp_callback : 1e197ba >			  ## link_layer.c:996:5
 1e192c8:    32 70             	r2 = 3			  ## link_layer.c:996:5
 1e192ca:    08 02             	[sp] = r0			  ## link_layer.c:996:5
 1e192cc:    30 08             	r0 = r3			  ## link_layer.c:996:5
 1e192ce:    63 08             	r3 = r6			  ## link_layer.c:996:5
 1e192d0:    bf f3 ee eb       	call -10276 <le_hw_send_packet_high : 1e16ab0 >			  ## link_layer.c:996:5
 1e192d4:    04 0a             	sp += 8
 1e192d6:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:997:1


__conn_slave_rx_post_handler:
 1e192d8:    7f 01             	[--sp] = {rets, r15-r4}			  ## ll_slave.c:705:0
 1e192da:    f6 0b             	sp += -20			  ## ll_slave.c:705:0
 1e192dc:    14 08             	r4 = r1			  ## ll_slave.c:705:0
 1e192de:    87 98             	r7 = r4 + 8			  ## ll_slave.c:705:0
 1e192e0:    01 5e             	r1 = h[r7 + 0] (u)			  ## ll_slave.c:708:17
 1e192e2:    09 d1             	r1 = r1 >> 4			  ## ll_slave.c:708:17
 1e192e4:    05 08             	r5 = r0			  ## ll_slave.c:708:17
 1e192e6:    60 ff 03 19 5d 02 	if ((r1 & 3) == 0) goto 1210 <.GJTIE782_0_0_+0x3F4 : 1e197a6 >
 1e192ec:    20 fd 03 19       	r0 = r1 & 3			  ## ll_slave.c:708:5
 1e192f0:    30 e0 04 00       	if (r0 == 3) goto 8 <__conn_slave_rx_post_handler+0x24 : 1e192fc >			  ## ll_slave.c:708:5
 1e192f4:    50 08             	r0 = r5			  ## ll_slave.c:714:9
 1e192f6:    41 08             	r1 = r4			  ## ll_slave.c:714:9
 1e192f8:    98 17             	call -208 <conn_rx_acl_u_post_handler : 1e1922a >			  ## ll_slave.c:714:9
 1e192fa:    55 1a             	goto 1194 <.GJTIE782_0_0_+0x3F4 : 1e197a6 >			  ## ll_slave.c:714:9
 1e192fc:    c3 6e             	r3 = b[r7 + 12] (u)			  ## ll_slave.c:503:17
 1e192fe:    c8 ff 6d 27 e1 01 	r8 = 31532909 <update_target_end+0x253D : 1e1276d >			  ## ll_slave.c:503:17
 1e19304:    53 e4 5d 80       	if (r3 > 69) goto 186 <.GJTIE782_0_0_+0x10 : 1e193c2 >			  ## ll_slave.c:503:17
 1e19308:    da 9e             	r10 = r7 + 13			  ## ll_slave.c:504:23
 1e1930a:    58 c0             	r0 = r3 << 1
 1e1930c:    c2 ff bc 0e 00 00 	r2 = 3772 <le_param : ebc >
 1e19312:    c9 ff 6b 27 e1 01 	r9 = 31532907 <update_target_end+0x253B : 1e1276b >
 1e19318:    5c fc 28 00       	r12 = r5 + 40
 1e1931c:    56 fc 90 00       	r6 = r5 + 144
 1e19320:    5b fc c0 00       	r11 = r5 + 192
 1e19324:    b0 00             	tbh [r0]


.GJTIL782_0_0_:
 1e19326:    72 00     < 114 : 0x72 >
 1e19328:    dc 00     < 220 : 0xDC >
 1e1932a:    ea 00     < 234 : 0xEA >
 1e1932c:    f2 00     < 242 : 0xF2 >
 1e1932e:    4b 00     < 75 : 0x4B >
 1e19330:    4b 00     < 75 : 0x4B >
 1e19332:    6b 01     < 363 : 0x16B >
 1e19334:    36 02     < 566 : 0x236 >
 1e19336:    75 01     < 373 : 0x175 >
 1e19338:    a0 01     < 416 : 0x1A0 >
 1e1933a:    c5 01     < 453 : 0x1C5 >
 1e1933c:    d0 01     < 464 : 0x1D0 >
 1e1933e:    d9 01     < 473 : 0x1D9 >
 1e19340:    4b 00     < 75 : 0x4B >
 1e19342:    4b 00     < 75 : 0x4B >
 1e19344:    46 00     < 70 : 0x46 >
 1e19346:    4b 00     < 75 : 0x4B >
 1e19348:    36 02     < 566 : 0x236 >
 1e1934a:    46 00     < 70 : 0x46 >
 1e1934c:    36 02     < 566 : 0x236 >
 1e1934e:    46 00     < 70 : 0x46 >
 1e19350:    46 00     < 70 : 0x46 >
 1e19352:    46 00     < 70 : 0x46 >
 1e19354:    46 00     < 70 : 0x46 >
 1e19356:    36 02     < 566 : 0x236 >
 1e19358:    46 00     < 70 : 0x46 >
 1e1935a:    46 00     < 70 : 0x46 >
 1e1935c:    46 00     < 70 : 0x46 >
 1e1935e:    46 00     < 70 : 0x46 >
 1e19360:    46 00     < 70 : 0x46 >
 1e19362:    46 00     < 70 : 0x46 >
 1e19364:    36 02     < 566 : 0x236 >
 1e19366:    46 00     < 70 : 0x46 >
 1e19368:    36 02     < 566 : 0x236 >
 1e1936a:    46 00     < 70 : 0x46 >
 1e1936c:    46 00     < 70 : 0x46 >
 1e1936e:    46 00     < 70 : 0x46 >
 1e19370:    46 00     < 70 : 0x46 >
 1e19372:    46 00     < 70 : 0x46 >
 1e19374:    46 00     < 70 : 0x46 >
 1e19376:    46 00     < 70 : 0x46 >
 1e19378:    46 00     < 70 : 0x46 >
 1e1937a:    46 00     < 70 : 0x46 >
 1e1937c:    46 00     < 70 : 0x46 >
 1e1937e:    46 00     < 70 : 0x46 >
 1e19380:    46 00     < 70 : 0x46 >
 1e19382:    46 00     < 70 : 0x46 >
 1e19384:    46 00     < 70 : 0x46 >
 1e19386:    46 00     < 70 : 0x46 >
 1e19388:    46 00     < 70 : 0x46 >
 1e1938a:    46 00     < 70 : 0x46 >
 1e1938c:    46 00     < 70 : 0x46 >
 1e1938e:    46 00     < 70 : 0x46 >
 1e19390:    46 00     < 70 : 0x46 >
 1e19392:    46 00     < 70 : 0x46 >
 1e19394:    46 00     < 70 : 0x46 >
 1e19396:    46 00     < 70 : 0x46 >
 1e19398:    46 00     < 70 : 0x46 >
 1e1939a:    46 00     < 70 : 0x46 >
 1e1939c:    46 00     < 70 : 0x46 >
 1e1939e:    46 00     < 70 : 0x46 >
 1e193a0:    46 00     < 70 : 0x46 >
 1e193a2:    46 00     < 70 : 0x46 >
 1e193a4:    46 00     < 70 : 0x46 >
 1e193a6:    f8 01     < 504 : 0x1F8 >
 1e193a8:    46 00     < 70 : 0x46 >
 1e193aa:    46 00     < 70 : 0x46 >
 1e193ac:    46 00     < 70 : 0x46 >
 1e193ae:    46 00     < 70 : 0x46 >
 1e193b0:    12 02     < 530 : 0x212 >
 1e193b2:    71 70             	r1 = 7
 1e193b4:    50 08             	r0 = r5
 1e193b6:    82 08             	r2 = r8
 1e193b8:    08 15             	call -1520 <ll_send_control_data : 1e18dca >
 1e193ba:    eb 19             	goto 982 <.GJTIE782_0_0_+0x3E0 : 1e19792 >
 1e193bc:    8f f3 6b 50       	call 2007254 <p33_soft_reset : 3496 >
 1e193c0:    e8 19             	goto 976 <.GJTIE782_0_0_+0x3E0 : 1e19792 >
 1e193c2:    93 e4 f6 1f       	if (r3 != 73) goto -20 <.GJTIE782_0_0_ : 1e193b2 >
 1e193c6:    bf f3 fb d3       	call -22538 <get_bt_osc_offset_flag : 1e13bc0 >			  ## ll_slave.c:479:9
 1e193ca:    00 e0 e2 11       	if (r0 != 0) goto 964 <.GJTIE782_0_0_+0x3E0 : 1e19792 >			  ## ll_slave.c:479:9
 1e193ce:    00 6f             	r0 = b[r7 + 16] (u)			  ## ll_slave.c:478:24
 1e193d0:    f1 6e             	r1 = b[r7 + 15] (u)			  ## ll_slave.c:478:46
 1e193d2:    e2 6e             	r2 = b[r7 + 14] (u)			  ## ll_slave.c:478:68
 1e193d4:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:478:88
 1e193d6:    00 c6             	r0 = r0 << 24			  ## ll_slave.c:478:36
 1e193d8:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## ll_slave.c:478:43
 1e193dc:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## ll_slave.c:478:65
 1e193e0:    50 b6             	r0 |= r3			  ## ll_slave.c:478:86
 1e193e2:    bf f3 26 d4       	call -22452 <bt_osc_offset_set : 1e13c32 >			  ## ll_slave.c:485:5
 1e193e6:    10 6f             	r0 = b[r7 + 17] (u)			  ## ll_slave.c:487:9
 1e193e8:    0b 20             	if (r0 == 0) goto 22 <.GJTIE782_0_0_+0x4E : 1e19400 >			  ## ll_slave.c:487:9
 1e193ea:    bf f3 2b d4       	call -22442 <bt_osc_offset_save : 1e13c44 >			  ## ll_slave.c:489:9
 1e193ee:    bf f3 45 d4       	call -22390 <bt_fre_offset_get : 1e13c7c >			  ## ll_slave.c:490:63
 1e193f2:    02 08             	r2 = r0			  ## ll_slave.c:490:63
 1e193f4:    c1 ff 1f 27 e1 01 	r1 = 31532831 <update_target_end+0x24EF : 1e1271f >			  ## ll_slave.c:490:9
 1e193fa:    60 7f             	r0 = 246			  ## ll_slave.c:490:9
 1e193fc:    bf f3 5d e3       	call -14662 <hci_send_event : 1e15aba >			  ## ll_slave.c:490:9
 1e19400:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:494:30
 1e19402:    bf f3 96 eb       	call -10452 <ble_pll_comp_reset : 1e16b32 >			  ## ll_slave.c:494:5
 1e19406:    01 75             	r1 = 80			  ## ll_slave.c:495:5
 1e19408:    59 19             	goto 690 <.GJTIE782_0_0_+0x30A : 1e196bc >			  ## ll_slave.c:495:5
 1e1940a:    91 70             	r1 = 9			  ## ll_slave.c:52:19
 1e1940c:    a0 08             	r0 = r10			  ## ll_slave.c:52:19
 1e1940e:    bf f3 12 63       	call -80348 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:52:19
 1e19412:    31 5e             	r1 = h[r7 + 6] (u)			  ## ll_slave.c:55:9
 1e19414:    09 08             	r9 = r0			  ## ll_slave.c:52:19
 1e19416:    2b 17             	call -426 <__instant_link_lost : 1e1926e >			  ## ll_slave.c:55:9
 1e19418:    10 e0 6a 00       	if (r0 == 1) goto 212 <.GJTIE782_0_0_+0x13E : 1e194f0 >
 1e1941c:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:64:29
 1e1941e:    0b f7 1e 50       	r11 = h[r5 + 30] (u)			  ## ll_slave.c:71:69
 1e19422:    b8 6b             	b[r5 + 27] = r0			  ## ll_slave.c:64:27
 1e19424:    11 70             	r1 = 1			  ## ll_slave.c:65:29
 1e19426:    a0 08             	r0 = r10			  ## ll_slave.c:65:29
 1e19428:    bf f3 05 63       	call -80374 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:65:29
 1e1942c:    08 08             	r8 = r0			  ## ll_slave.c:65:29
 1e1942e:    e8 5a             	h[r5 + 28] = r0			  ## ll_slave.c:65:27
 1e19430:    31 70             	r1 = 3			  ## ll_slave.c:66:29
 1e19432:    a0 08             	r0 = r10			  ## ll_slave.c:66:29
 1e19434:    bf f3 ff 62       	call -80386 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:66:29
 1e19438:    03 08             	r3 = r0			  ## ll_slave.c:66:29
 1e1943a:    fb 5a             	h[r5 + 30] = r3			  ## ll_slave.c:66:27
 1e1943c:    51 70             	r1 = 5			  ## ll_slave.c:67:29
 1e1943e:    a0 08             	r0 = r10			  ## ll_slave.c:67:29
 1e19440:    bf f3 f9 62       	call -80398 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:67:29
 1e19444:    02 08             	r2 = r0			  ## ll_slave.c:67:29
 1e19446:    0a 5b             	h[r5 + 32] = r2			  ## ll_slave.c:67:27
 1e19448:    71 70             	r1 = 7			  ## ll_slave.c:68:29
 1e1944a:    a0 08             	r0 = r10			  ## ll_slave.c:68:29
 1e1944c:    bf f3 f3 62       	call -80410 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:68:29
 1e19450:    18 5b             	h[r5 + 34] = r0			  ## ll_slave.c:68:27
 1e19452:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## ll_slave.c:71:54
 1e19456:    00 d1             	r0 = r0 >> 4			  ## ll_slave.c:71:31
 1e19458:    20 fd 0e 09       	r0 = r0 & 14			  ## ll_slave.c:71:54
 1e1945c:    c1 ff ac 84 e1 01 	r1 = 31556780 <master_sca : 1e184ac >			  ## ll_slave.c:71:31
 1e19462:    00 f8 00 01       	r0 = h[r0+r1] (u)			  ## ll_slave.c:71:31
 1e19466:    00 fc f4 01       	r0 = r0 + 500			  ## ll_slave.c:71:59
 1e1946a:    19 0e             	r1 = r3 * r0			  ## ll_slave.c:73:67
 1e1946c:    12 80             	r2 += 1			  ## ll_slave.c:73:113
 1e1946e:    8a 0e             	r2 = r1 * r2			  ## ll_slave.c:73:90
 1e19470:    01 fb 20 03       	r1 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x18 : 320 >			  ## ll_slave.c:71:115
 1e19474:    c0 fe 10 22       	r2 = r2 / r1 (u)			  ## ll_slave.c:73:126
 1e19478:    52 c0             	r2 = r2 << 1			  ## ll_slave.c:74:26
 1e1947a:    22 80             	r2 += 2			  ## ll_slave.c:74:26
 1e1947c:    a6 04             	r6 = r2.l (u)			  ## ll_slave.c:77:54
 1e1947e:    03 fb c4 09       	r3 = 2500 <system_data_start+0x10 : 9c4 >			  ## ll_slave.c:77:54
 1e19482:    08 ff c4 69 01 00 	if (r6 > 2500) goto 2 <.GJTIE782_0_0_+0xD8 : 1e1948a >			  ## ll_slave.c:77:54
 1e19488:    23 08             	r3 = r2			  ## ll_slave.c:77:9
 1e1948a:    52 5b             	r2 = h[r5 + 42] (u)			  ## ll_slave.c:81:9
 1e1948c:    5b 5b             	h[r5 + 42] = r3			  ## ll_slave.c:74:26
 1e1948e:    80 fb b0 38       	r3 = r8 + r11			  ## ll_slave.c:71:82
 1e19492:    18 0e             	r0 = r3 * r0			  ## ll_slave.c:71:66
 1e19494:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## ll_slave.c:71:115
 1e19498:    40 c0             	r0 = r0 << 1			  ## ll_slave.c:72:22
 1e1949a:    21 90             	r1 = r0 + 2			  ## ll_slave.c:72:22
 1e1949c:    61 04             	r1 = r1.l (u)			  ## ll_slave.c:81:24
 1e1949e:    03 70             	r3 = 0			  ## ll_slave.c:81:24
 1e194a0:    12 f2 07 90       	if (r2 <= r1) goto 14 <.GJTIE782_0_0_+0x100 : 1e194b2 >			  ## ll_slave.c:81:24
 1e194a4:    c3 ff fe ff 00 00 	r3 = 65534 <_IRQ_MEM_ADDR+0xFE : fffe >
 1e194aa:    32 09             	r2 += r3
 1e194ac:    20 b4             	r0 = r2 - r0			  ## ll_slave.c:82:52
 1e194ae:    49 c0             	r1 = r1 << 1			  ## ll_slave.c:83:42
 1e194b0:    43 b0             	r3 = r0 + r1			  ## ll_slave.c:83:37
 1e194b2:    6b 5b             	h[r5 + 44] = r3			  ## ll_slave.c:85:37
 1e194b4:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:94:29
 1e194b6:    41 70             	r1 = 4			  ## ll_slave.c:94:5
 1e194b8:    92 08             	r2 = r9			  ## ll_slave.c:94:5
 1e194ba:    bf f3 fd e6       	call -12806 <le_hw_ioctrl : 1e162b8 >			  ## ll_slave.c:94:5
 1e194be:    92 fc ff ff       	r2 = r9 + -1			  ## ll_slave.c:96:60
 1e194c2:    c1 ff 2c 87 e1 01 	r1 = 31557420 <__connection_upadte : 1e1872c >			  ## ll_slave.c:96:5
 1e194c8:    50 08             	r0 = r5			  ## ll_slave.c:96:5
 1e194ca:    bf f3 d7 fa       	call -2642 <__event_oneshot_add : 1e18a7c >			  ## ll_slave.c:96:5
 1e194ce:    c1 ff aa 97 e1 01 	r1 = 31561642 <__slave_ll_receive_conn_update_req_done : 1e197aa >			  ## ll_slave.c:98:5
 1e194d4:    50 08             	r0 = r5			  ## ll_slave.c:98:5
 1e194d6:    92 08             	r2 = r9			  ## ll_slave.c:98:5
 1e194d8:    bf f3 e5 fa       	call -2614 <__event_oneshot_post_add : 1e18aa6 >			  ## ll_slave.c:98:5
 1e194dc:    5a 19             	goto 692 <.GJTIE782_0_0_+0x3E0 : 1e19792 >			  ## ll_slave.c:98:5
 1e194de:    51 70             	r1 = 5			  ## ll_slave.c:107:19
 1e194e0:    a0 08             	r0 = r10			  ## ll_slave.c:107:19
 1e194e2:    bf f3 a8 62       	call -80560 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:107:19
 1e194e6:    31 5e             	r1 = h[r7 + 6] (u)			  ## ll_slave.c:109:9
 1e194e8:    08 08             	r8 = r0			  ## ll_slave.c:107:19
 1e194ea:    c1 16             	call -638 <__instant_link_lost : 1e1926e >			  ## ll_slave.c:109:9
 1e194ec:    10 e0 3e 11       	if (r0 != 1) goto 636 <.GJTIE782_0_0_+0x3BA : 1e1976c >
 1e194f0:    81 72             	r1 = 40
 1e194f2:    50 08             	r0 = r5
 1e194f4:    bf f3 d5 f9       	call -3158 <ll_disconnect_process : 1e188a2 >
 1e194f8:    4c 19             	goto 664 <.GJTIE782_0_0_+0x3E0 : 1e19792 >
 1e194fa:    02 5c             	r2 = h[r6 + 0] (u)			  ## ll_slave.c:134:66
 1e194fc:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:133:20
 1e194fe:    10 f9 89 51       	b[r5 + 393] = r0			  ## ll_slave.c:133:18
 1e19502:    c1 ff b2 97 e1 01 	r1 = 31561650 <__slave_receive_terminte_ind_done : 1e197b2 >			  ## ll_slave.c:134:5
 1e19508:    41 19             	goto 642 <.GJTIE782_0_0_+0x3DA : 1e1978c >			  ## ll_slave.c:134:5
 1e1950a:    01 f9 15 c0       	r1 = b[r12 + 21] (u)
 1e1950e:    19 70             	r9 = 1
 1e19510:    11 e0 07 00       	if (r1 == 1) goto 14 <.GJTIE782_0_0_+0x170 : 1e19522 >
 1e19514:    8f f3 bf 4f       	call 2006910 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19518:    01 f9 15 c0       	r1 = b[r12 + 21] (u)			  ## cpu.h:148:5
 1e1951c:    11 e0 01 00       	if (r1 == 1) goto 2 <.GJTIE782_0_0_+0x170 : 1e19522 >			  ## cpu.h:148:5
 1e19520:    09 70             	r9 = 0			  ## ll_slave.c:180:5
 1e19522:    0f f9 19 70       	r15 = b[r7 + 25] (u)			  ## ll_slave.c:184:5
 1e19526:    d2 6f             	r2 = b[r7 + 29] (u)			  ## ll_slave.c:184:5
 1e19528:    73 6f             	r3 = b[r7 + 23] (u)			  ## ll_slave.c:184:5
 1e1952a:    0c f9 18 70       	r12 = b[r7 + 24] (u)			  ## ll_slave.c:184:5
 1e1952e:    0d f9 1a 70       	r13 = b[r7 + 26] (u)			  ## ll_slave.c:184:5
 1e19532:    e0 6f             	r0 = b[r7 + 30] (u)			  ## ll_slave.c:184:5
 1e19534:    0e f9 1c 70       	r14 = b[r7 + 28] (u)			  ## ll_slave.c:184:5
 1e19538:    b1 6f             	r1 = b[r7 + 27] (u)			  ## ll_slave.c:184:5
 1e1953a:    56 fc 1c 01       	r6 = r5 + 284			  ## ll_slave.c:184:5
 1e1953e:    78 6c             	b[r6 + 7] = r0			  ## ll_slave.c:184:5
 1e19540:    1e f9 05 60       	b[r6 + 5] = r14			  ## ll_slave.c:184:5
 1e19544:    49 6c             	b[r6 + 4] = r1			  ## ll_slave.c:184:5
 1e19546:    1d f9 03 60       	b[r6 + 3] = r13			  ## ll_slave.c:184:5
 1e1954a:    1c f9 01 60       	b[r6 + 1] = r12			  ## ll_slave.c:184:5
 1e1954e:    0b 6c             	b[r6 + 0] = r3			  ## ll_slave.c:184:5
 1e19550:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)			  ## ll_slave.c:184:5
 1e19554:    d0 fd 80 12       	r1 <= insert(r2, p:16, l:16)			  ## ll_slave.c:184:5
 1e19558:    08 d4             	r0 = r1 >> 16			  ## ll_slave.c:184:5
 1e1955a:    68 6c             	b[r6 + 6] = r0			  ## ll_slave.c:184:5
 1e1955c:    c8 fd 40 fd       	r15 <= insert(r13, p:8, l:8)			  ## ll_slave.c:184:5
 1e19560:    d0 fd 80 3f       	r3 <= insert(r15, p:16, l:16)			  ## ll_slave.c:184:5
 1e19564:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:184:5
 1e19566:    28 6c             	b[r6 + 2] = r0			  ## ll_slave.c:184:5
 1e19568:    40 fc 28 00       	r0 = r4 + 40			  ## ll_slave.c:184:5
 1e1956c:    21 60             	r1 = b[r0 + 2] (u)			  ## ll_slave.c:186:5
 1e1956e:    02 60             	r2 = b[r0 + 0] (u)			  ## ll_slave.c:186:5
 1e19570:    f3 6f             	r3 = b[r7 + 31] (u)			  ## ll_slave.c:186:5
 1e19572:    10 60             	r0 = b[r0 + 1] (u)			  ## ll_slave.c:186:5
 1e19574:    39 6d             	b[r6 + 19] = r1			  ## ll_slave.c:186:5
 1e19576:    1a 6d             	b[r6 + 17] = r2			  ## ll_slave.c:186:5
 1e19578:    0b 6d             	b[r6 + 16] = r3			  ## ll_slave.c:186:5
 1e1957a:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## ll_slave.c:186:5
 1e1957e:    d0 fd 80 30       	r3 <= insert(r0, p:16, l:16)			  ## ll_slave.c:186:5
 1e19582:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:186:5
 1e19584:    28 6d             	b[r6 + 18] = r0			  ## ll_slave.c:186:5
 1e19586:    09 e0 02 10       	if (r9 != 0) goto 4 <.GJTIE782_0_0_+0x1DC : 1e1958e >			  ## ll_slave.c:186:5
 1e1958a:    8f f3 84 4f       	call 2006792 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1958e:    00 a1             	r0 = sp + 16
 1e19590:    41 70             	r1 = 4			  ## ll_slave.c:211:5
 1e19592:    bf f3 6f 6a       	call -76578 <pseudo_random_genrate : 1e06a74 >			  ## ll_slave.c:211:5
 1e19596:    40 02             	r0 = [sp+16]			  ## ll_slave.c:213:5
 1e19598:    48 6d             	b[r6 + 20] = r0			  ## ll_slave.c:213:5
 1e1959a:    01 d6             	r1 = r0 >> 24			  ## ll_slave.c:213:5
 1e1959c:    79 6d             	b[r6 + 23] = r1			  ## ll_slave.c:213:5
 1e1959e:    01 d4             	r1 = r0 >> 16			  ## ll_slave.c:213:5
 1e195a0:    69 6d             	b[r6 + 22] = r1			  ## ll_slave.c:213:5
 1e195a2:    00 d2             	r0 = r0 >> 8			  ## ll_slave.c:213:5
 1e195a4:    58 6d             	b[r6 + 21] = r0			  ## ll_slave.c:213:5
 1e195a6:    80 a0             	r0 = sp + 8			  ## ll_slave.c:213:5
 1e195a8:    81 70             	r1 = 8			  ## ll_slave.c:216:5
 1e195aa:    bf f3 63 6a       	call -76602 <pseudo_random_genrate : 1e06a74 >			  ## ll_slave.c:216:5
 1e195ae:    30 02             	r0 = [sp+12]			  ## ll_slave.c:218:5
 1e195b0:    21 02             	r1 = [sp+8]			  ## ll_slave.c:218:5
 1e195b2:    c8 6c             	b[r6 + 12] = r0			  ## ll_slave.c:218:5
 1e195b4:    89 6c             	b[r6 + 8] = r1			  ## ll_slave.c:218:5
 1e195b6:    02 d6             	r2 = r0 >> 24			  ## ll_slave.c:218:5
 1e195b8:    fa 6c             	b[r6 + 15] = r2			  ## ll_slave.c:218:5
 1e195ba:    02 d4             	r2 = r0 >> 16			  ## ll_slave.c:218:5
 1e195bc:    ea 6c             	b[r6 + 14] = r2			  ## ll_slave.c:218:5
 1e195be:    00 d2             	r0 = r0 >> 8			  ## ll_slave.c:218:5
 1e195c0:    d8 6c             	b[r6 + 13] = r0			  ## ll_slave.c:218:5
 1e195c2:    08 d6             	r0 = r1 >> 24			  ## ll_slave.c:218:5
 1e195c4:    b8 6c             	b[r6 + 11] = r0			  ## ll_slave.c:218:5
 1e195c6:    08 d4             	r0 = r1 >> 16			  ## ll_slave.c:218:5
 1e195c8:    a8 6c             	b[r6 + 10] = r0			  ## ll_slave.c:218:5
 1e195ca:    08 d2             	r0 = r1 >> 8			  ## ll_slave.c:218:5
 1e195cc:    98 6c             	b[r6 + 9] = r0			  ## ll_slave.c:218:5
 1e195ce:    b0 fc 70 00       	r0 = r11 + 112			  ## ll_slave.c:213:5
 1e195d2:    18 02             	[sp+4] = r0			  ## ll_slave.c:222:5
 1e195d4:    b0 fc 64 00       	r0 = r11 + 100			  ## ll_slave.c:218:5
 1e195d8:    08 02             	[sp] = r0			  ## ll_slave.c:222:5
 1e195da:    50 08             	r0 = r5			  ## ll_slave.c:222:5
 1e195dc:    57 16             	call -850 <ll_send_control_data_callback : 1e1928c >			  ## ll_slave.c:222:5
 1e195de:    02 f7 38 b0       	r2 = h[r11 + 56] (u)			  ## ll_events.c:113:37
 1e195e2:    53 9f             	r3 = r7 + 21			  ## ll_events.c:115:50
 1e195e4:    c1 ff 19 27 e1 01 	r1 = 31532825 <update_target_end+0x24E9 : 1e12719 >			  ## ll_events.c:111:12
 1e195ea:    50 70             	r0 = 5			  ## ll_events.c:111:12
 1e195ec:    0b 02             	[sp] = r3			  ## ll_events.c:111:12
 1e195ee:    a3 08             	r3 = r10			  ## ll_events.c:111:12
 1e195f0:    bf f3 bb f8       	call -3722 <__hci_emit_le_meta_event : 1e1876a >			  ## ll_events.c:111:12
 1e195f4:    ce 30             	if (r0 != 0) goto 412 <.GJTIE782_0_0_+0x3E0 : 1e19792 >			  ## ll_events.c:111:12
 1e195f6:    d1 70             	r1 = 13			  ## ll_slave.c:231:5
 1e195f8:    63 70             	r3 = 6			  ## ll_slave.c:231:5
 1e195fa:    dc 1e             	goto -584 <.GJTIE782_0_0_+0x2 : 1e193b4 >			  ## ll_slave.c:231:5
 1e195fc:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:141:31
 1e195fe:    a1 70             	r1 = 10			  ## ll_slave.c:143:5
 1e19600:    12 70             	r2 = 1			  ## ll_slave.c:143:5
 1e19602:    18 70             	r8 = 1			  ## ll_slave.c:143:5
 1e19604:    bf f3 58 e6       	call -13136 <le_hw_ioctrl : 1e162b8 >			  ## ll_slave.c:143:5
 1e19608:    18 f9 03 60       	b[r6 + 3] = r8			  ## ll_slave.c:144:26
 1e1960c:    61 70             	r1 = 6			  ## ll_slave.c:153:9
 1e1960e:    56 18             	goto 172 <.GJTIE782_0_0_+0x30A : 1e196bc >			  ## ll_slave.c:153:9
 1e19610:    0b f9 02 a0       	r11 = b[r10 + 2] (u)			  ## ll_slave.c:161:5
 1e19614:    01 f9 06 a0       	r1 = b[r10 + 6] (u)			  ## ll_slave.c:161:5
 1e19618:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:161:5
 1e1961a:    08 f9 01 a0       	r8 = b[r10 + 1] (u)			  ## ll_slave.c:161:5
 1e1961e:    06 f9 07 a0       	r6 = b[r10 + 7] (u)			  ## ll_slave.c:161:5
 1e19622:    09 f9 05 a0       	r9 = b[r10 + 5] (u)			  ## ll_slave.c:161:5
 1e19626:    00 f9 04 a0       	r0 = b[r10 + 4] (u)			  ## ll_slave.c:161:5
 1e1962a:    0a f9 03 a0       	r10 = b[r10 + 3] (u)			  ## ll_slave.c:161:5
 1e1962e:    ce 65             	b[r2 + 28] = r6			  ## ll_slave.c:161:5
 1e19630:    19 f9 1a 20       	b[r2 + 26] = r9			  ## ll_slave.c:161:5
 1e19634:    98 65             	b[r2 + 25] = r0			  ## ll_slave.c:161:5
 1e19636:    1a f9 18 20       	b[r2 + 24] = r10			  ## ll_slave.c:161:5
 1e1963a:    18 f9 16 20       	b[r2 + 22] = r8			  ## ll_slave.c:161:5
 1e1963e:    5b 65             	b[r2 + 21] = r3			  ## ll_slave.c:161:5
 1e19640:    c8 fd 40 16       	r1 <= insert(r6, p:8, l:8)			  ## ll_slave.c:161:5
 1e19644:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:161:5
 1e19648:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:161:5
 1e1964a:    b8 65             	b[r2 + 27] = r0			  ## ll_slave.c:161:5
 1e1964c:    c8 fd 40 ba       	r11 <= insert(r10, p:8, l:8)			  ## ll_slave.c:161:5
 1e19650:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## ll_slave.c:161:5
 1e19654:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:161:5
 1e19656:    78 65             	b[r2 + 23] = r0			  ## ll_slave.c:161:5
 1e19658:    23 fc 22 00       	r3 = r2 + 34			  ## ll_slave.c:166:5
 1e1965c:    c2 ff 3f 27 e1 01 	r2 = 31532863 <update_target_end+0x250F : 1e1273f >			  ## ll_slave.c:166:5
 1e19662:    91 70             	r1 = 9			  ## ll_slave.c:166:5
 1e19664:    56 18             	goto 172 <.GJTIE782_0_0_+0x360 : 1e19712 >			  ## ll_slave.c:166:5
 1e19666:    0b f9 02 a0       	r11 = b[r10 + 2] (u)			  ## ll_slave.c:171:5
 1e1966a:    01 f9 06 a0       	r1 = b[r10 + 6] (u)			  ## ll_slave.c:171:5
 1e1966e:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:171:5
 1e19670:    08 f9 01 a0       	r8 = b[r10 + 1] (u)			  ## ll_slave.c:171:5
 1e19674:    06 f9 07 a0       	r6 = b[r10 + 7] (u)			  ## ll_slave.c:171:5
 1e19678:    09 f9 05 a0       	r9 = b[r10 + 5] (u)			  ## ll_slave.c:171:5
 1e1967c:    00 f9 04 a0       	r0 = b[r10 + 4] (u)			  ## ll_slave.c:171:5
 1e19680:    0a f9 03 a0       	r10 = b[r10 + 3] (u)			  ## ll_slave.c:171:5
 1e19684:    ce 65             	b[r2 + 28] = r6			  ## ll_slave.c:171:5
 1e19686:    19 f9 1a 20       	b[r2 + 26] = r9			  ## ll_slave.c:171:5
 1e1968a:    98 65             	b[r2 + 25] = r0			  ## ll_slave.c:171:5
 1e1968c:    1a f9 18 20       	b[r2 + 24] = r10			  ## ll_slave.c:171:5
 1e19690:    18 f9 16 20       	b[r2 + 22] = r8			  ## ll_slave.c:171:5
 1e19694:    5b 65             	b[r2 + 21] = r3			  ## ll_slave.c:171:5
 1e19696:    c8 fd 40 16       	r1 <= insert(r6, p:8, l:8)			  ## ll_slave.c:171:5
 1e1969a:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:171:5
 1e1969e:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:171:5
 1e196a0:    b8 65             	b[r2 + 27] = r0			  ## ll_slave.c:171:5
 1e196a2:    c8 fd 40 ba       	r11 <= insert(r10, p:8, l:8)			  ## ll_slave.c:171:5
 1e196a6:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## ll_slave.c:171:5
 1e196aa:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:171:5
 1e196ac:    78 65             	b[r2 + 23] = r0			  ## ll_slave.c:171:5
 1e196ae:    71 18             	goto 226 <.GJTIE782_0_0_+0x3E0 : 1e19792 >			  ## ll_slave.c:171:5
 1e196b0:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:259:31
 1e196b2:    b1 70             	r1 = 11			  ## ll_slave.c:261:5
 1e196b4:    02 70             	r2 = 0			  ## ll_slave.c:261:5
 1e196b6:    bf f3 ff e5       	call -13314 <le_hw_ioctrl : 1e162b8 >			  ## ll_slave.c:261:5
 1e196ba:    b1 70             	r1 = 11			  ## ll_slave.c:271:9
 1e196bc:    02 70             	r2 = 0
 1e196be:    50 08             	r0 = r5
 1e196c0:    bf f3 83 fb       	call -2298 <ll_send_control_data : 1e18dca >
 1e196c4:    66 18             	goto 204 <.GJTIE782_0_0_+0x3E0 : 1e19792 >
 1e196c6:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:279:31
 1e196c8:    a1 70             	r1 = 10			  ## ll_slave.c:281:5
 1e196ca:    02 70             	r2 = 0			  ## ll_slave.c:281:5
 1e196cc:    08 70             	r8 = 0			  ## ll_slave.c:281:5
 1e196ce:    bf f3 f3 e5       	call -13338 <le_hw_ioctrl : 1e162b8 >			  ## ll_slave.c:281:5
 1e196d2:    18 f9 03 60       	b[r6 + 3] = r8			  ## ll_slave.c:282:26
 1e196d6:    5d 18             	goto 186 <.GJTIE782_0_0_+0x3E0 : 1e19792 >			  ## ll_slave.c:282:26
 1e196d8:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:299:30
 1e196da:    d8 65             	b[r2 + 29] = r0			  ## ll_slave.c:299:28
 1e196dc:    11 70             	r1 = 1			  ## ll_slave.c:300:30
 1e196de:    a0 08             	r0 = r10			  ## ll_slave.c:300:30
 1e196e0:    bf f3 a9 61       	call -81070 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:300:30
 1e196e4:    f8 54             	h[r2 + 30] = r0			  ## ll_slave.c:300:28
 1e196e6:    31 70             	r1 = 3			  ## ll_slave.c:301:33
 1e196e8:    a0 08             	r0 = r10			  ## ll_slave.c:301:33
 1e196ea:    bf f3 a4 61       	call -81080 <btctler_little_endian_read_16 : 1e05a36 >			  ## ll_slave.c:301:33
 1e196ee:    08 55             	h[r2 + 32] = r0			  ## ll_slave.c:301:31
 1e196f0:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## link_layer.c:650:39
 1e196f4:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:652:12
 1e196f6:    50 09             	r0 += r5			  ## link_layer.c:652:12
 1e196f8:    00 f6 98 00       	r0 = [r0 + 152]			  ## link_layer.c:652:12
 1e196fc:    4a 30             	if (r0 != 0) goto 148 <.GJTIE782_0_0_+0x3E0 : 1e19792 >			  ## link_layer.c:652:12
 1e196fe:    03 f9 32 20       	r3 = b[r2 + 50] (u)			  ## ll_slave.c:305:37
 1e19702:    a0 55             	r0 = h[r2 + 52] (u)			  ## ll_slave.c:305:54
 1e19704:    b1 55             	r1 = h[r2 + 54] (u)			  ## ll_slave.c:305:71
 1e19706:    19 02             	[sp+4] = r1			  ## ll_slave.c:304:9
 1e19708:    c2 ff 76 27 e1 01 	r2 = 31532918 <update_target_end+0x2546 : 1e12776 >			  ## ll_slave.c:304:9
 1e1970e:    c1 70             	r1 = 12			  ## ll_slave.c:304:9
 1e19710:    08 02             	[sp] = r0			  ## ll_slave.c:304:9
 1e19712:    50 08             	r0 = r5
 1e19714:    51 1e             	goto -862 <.GJTIE782_0_0_+0x6 : 1e193b8 >
 1e19716:    bf f3 53 d2       	call -23386 <get_bt_osc_offset_flag : 1e13bc0 >			  ## ll_slave.c:456:9
 1e1971a:    06 08             	r6 = r0			  ## ll_slave.c:456:9
 1e1971c:    bf f3 5c d2       	call -23368 <bt_fre_offset_value_init : 1e13bd8 >			  ## ll_slave.c:461:5
 1e19720:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:462:30
 1e19722:    bf f3 06 ea       	call -11252 <ble_pll_comp_reset : 1e16b32 >			  ## ll_slave.c:462:5
 1e19726:    c1 ff 6c 27 e1 01 	r1 = 31532908 <update_target_end+0x253C : 1e1276c >			  ## ll_slave.c:464:5
 1e1972c:    e0 7f             	r0 = 254			  ## ll_slave.c:464:5
 1e1972e:    22 70             	r2 = 2			  ## ll_slave.c:464:5
 1e19730:    13 70             	r3 = 1			  ## ll_slave.c:464:5
 1e19732:    bf f3 c2 e1       	call -15484 <hci_send_event : 1e15aba >			  ## ll_slave.c:464:5
 1e19736:    f0 70             	r0 = 15			  ## ll_slave.c:466:5
 1e19738:    18 02             	[sp+4] = r0			  ## ll_slave.c:466:5
 1e1973a:    03 70             	r3 = 0			  ## ll_slave.c:466:5
 1e1973c:    01 2c             	if (r6 == 0) goto 2 <.GJTIE782_0_0_+0x38E : 1e19740 >
 1e1973e:    f3 7f             	r3 = 255
 1e19740:    11 74             	r1 = 65			  ## ll_slave.c:466:5
 1e19742:    0b 02             	[sp] = r3			  ## ll_slave.c:466:5
 1e19744:    50 08             	r0 = r5			  ## ll_slave.c:466:5
 1e19746:    92 08             	r2 = r9			  ## ll_slave.c:466:5
 1e19748:    37 1e             	goto -914 <.GJTIE782_0_0_+0x6 : 1e193b8 >			  ## ll_slave.c:466:5
 1e1974a:    00 70             	r0 = 0			  ## ll_slave.c:439:5
 1e1974c:    18 02             	[sp+4] = r0			  ## ll_slave.c:439:5
 1e1974e:    10 70             	r0 = 1			  ## ll_slave.c:439:5
 1e19750:    81 74             	r1 = 72			  ## ll_slave.c:439:5
 1e19752:    f3 70             	r3 = 15			  ## ll_slave.c:439:5
 1e19754:    08 02             	[sp] = r0			  ## ll_slave.c:439:5
 1e19756:    50 08             	r0 = r5			  ## ll_slave.c:439:5
 1e19758:    92 08             	r2 = r9			  ## ll_slave.c:439:5
 1e1975a:    bf f3 36 fb       	call -2452 <ll_send_control_data : 1e18dca >			  ## ll_slave.c:439:5
 1e1975e:    c0 ff 0b 00 40 00 	r0 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## ll_slave.c:440:5
 1e19764:    01 70             	r1 = 0			  ## ll_slave.c:440:5
 1e19766:    bf f3 72 e1       	call -15644 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## ll_slave.c:440:5
 1e1976a:    13 18             	goto 38 <.GJTIE782_0_0_+0x3E0 : 1e19792 >			  ## ll_slave.c:440:5
 1e1976c:    50 fc 24 00       	r0 = r5 + 36			  ## ll_slave.c:117:5
 1e19770:    52 70             	r2 = 5			  ## ll_slave.c:117:5
 1e19772:    a1 08             	r1 = r10			  ## ll_slave.c:117:5
 1e19774:    97 f3 b6 6b       	call 3069804 <memcpy : 106ee4 >			  ## ll_slave.c:117:5
 1e19778:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:119:29
 1e1977a:    41 70             	r1 = 4			  ## ll_slave.c:119:5
 1e1977c:    82 08             	r2 = r8			  ## ll_slave.c:119:5
 1e1977e:    bf f3 9b e5       	call -13514 <le_hw_ioctrl : 1e162b8 >			  ## ll_slave.c:119:5
 1e19782:    82 fc ff ff       	r2 = r8 + -1			  ## ll_slave.c:121:61
 1e19786:    c1 ff 5a 88 e1 01 	r1 = 31557722 <__channel_map_upadte : 1e1885a >			  ## ll_slave.c:121:5
 1e1978c:    50 08             	r0 = r5
 1e1978e:    bf f3 75 f9       	call -3350 <__event_oneshot_add : 1e18a7c >
 1e19792:    c0 6e             	r0 = b[r7 + 12] (u)			  ## ll_slave.c:693:29
 1e19794:    10 b7             	r0 |= 16384			  ## ll_slave.c:693:41
 1e19796:    51 08             	r1 = r5			  ## ll_slave.c:693:5
 1e19798:    42 08             	r2 = r4			  ## ll_slave.c:693:5
 1e1979a:    bf f3 c9 fa       	call -2670 <ll_control_step_verify : 1e18d30 >			  ## ll_slave.c:693:5
 1e1979e:    50 08             	r0 = r5			  ## ll_slave.c:696:5
 1e197a0:    41 08             	r1 = r4			  ## ll_slave.c:696:5
 1e197a2:    bf f3 39 fb       	call -2446 <ll_send_control_data_state_machine : 1e18e18 >			  ## ll_slave.c:696:5
 1e197a6:    0a 0a             	sp += 20
 1e197a8:    5f 01             	{pc, r15-r4} = [sp++]			  ## ll_slave.c:722:1


__slave_ll_receive_conn_update_req_done:
 1e197aa:    01 70             	r1 = 0			  ## ll_slave.c:42:0
 1e197ac:    02 70             	r2 = 0			  ## ll_slave.c:43:5
 1e197ae:    ff f3 29 f8       	goto -4014 <le_connection_update_complete_event : 1e18804 >			  ## ll_slave.c:43:5


__slave_receive_terminte_ind_done:
 1e197b2:    01 f9 89 01       	r1 = b[r0 + 393] (u)			  ## ll_slave.c:125:0
 1e197b6:    ff f3 74 f8       	goto -3864 <ll_disconnect_process : 1e188a2 >			  ## ll_slave.c:126:5


__slave_ll_send_enc_rsp_callback:
 1e197ba:    00 40             	r0 = [r0 + 0]			  ## ll_slave.c:197:0
 1e197bc:    11 71             	r1 = 17			  ## ll_slave.c:200:5
 1e197be:    12 70             	r2 = 1			  ## ll_slave.c:200:5
 1e197c0:    ff f3 7a e5       	goto -13580 <le_hw_ioctrl : 1e162b8 >			  ## ll_slave.c:200:5


le_connection_complete_event:
 1e197c4:    79 01             	[--sp] = {rets, r9-r4}			  ## ll_events.c:166:0
 1e197c6:    e0 0b             	sp += -64			  ## ll_events.c:166:0
 1e197c8:    18 08             	r8 = r1			  ## ll_events.c:166:0
 1e197ca:    c1 ff 21 27 e1 01 	r1 = 31532833 <update_target_end+0x24F1 : 1e12721 >			  ## ll_events.c:166:0
 1e197d0:    15 20             	if (r0 == 0) goto 42 <le_connection_complete_event+0x38 : 1e197fc >			  ## ll_events.c:167:9
 1e197d2:    03 f7 f8 00       	r3 = h[r0 + 248] (u)			  ## ll_events.c:172:34
 1e197d6:    09 f9 3d 00       	r9 = b[r0 + 61] (u)			  ## ll_events.c:173:34
 1e197da:    b5 60             	r5 = b[r0 + 11] (u)			  ## ll_events.c:174:34
 1e197dc:    f6 50             	r6 = h[r0 + 30] (u)			  ## ll_events.c:176:34
 1e197de:    07 51             	r7 = h[r0 + 32] (u)			  ## ll_events.c:177:34
 1e197e0:    12 51             	r2 = h[r0 + 34] (u)			  ## ll_events.c:178:34
 1e197e2:    04 f9 3e 00       	r4 = b[r0 + 62] (u)			  ## ll_events.c:179:34
 1e197e6:    6c 02             	[sp+24] = r4			  ## ll_events.c:169:9
 1e197e8:    5a 02             	[sp+20] = r2			  ## ll_events.c:169:9
 1e197ea:    4f 02             	[sp+16] = r7			  ## ll_events.c:169:9
 1e197ec:    3e 02             	[sp+12] = r6			  ## ll_events.c:169:9
 1e197ee:    c0 80             	r0 += 12			  ## ll_events.c:175:34
 1e197f0:    28 02             	[sp+8] = r0			  ## ll_events.c:169:9
 1e197f2:    1d 02             	[sp+4] = r5			  ## ll_events.c:169:9
 1e197f4:    10 70             	r0 = 1			  ## ll_events.c:169:9
 1e197f6:    19 f5 00 00       	[sp] = r9			  ## ll_events.c:169:9
 1e197fa:    0e 18             	goto 28 <le_connection_complete_event+0x54 : 1e19818 >			  ## ll_events.c:169:9
 1e197fc:    02 70             	r2 = 0
 1e197fe:    92 f5 20 00       	h[sp+32] = r2			  ## ll_events.c:182:9
 1e19802:    7a 02             	[sp+28] = r2			  ## ll_events.c:182:9
 1e19804:    6a 02             	[sp+24] = r2			  ## ll_events.c:183:9
 1e19806:    5a 02             	[sp+20] = r2			  ## ll_events.c:183:9
 1e19808:    4a 02             	[sp+16] = r2			  ## ll_events.c:183:9
 1e1980a:    3a 02             	[sp+12] = r2			  ## ll_events.c:183:9
 1e1980c:    c0 a1             	r0 = sp + 28			  ## ll_events.c:183:9
 1e1980e:    28 02             	[sp+8] = r0			  ## ll_events.c:183:9
 1e19810:    1a 02             	[sp+4] = r2			  ## ll_events.c:183:9
 1e19812:    10 70             	r0 = 1			  ## ll_events.c:183:9
 1e19814:    03 70             	r3 = 0			  ## ll_events.c:183:9
 1e19816:    0a 02             	[sp] = r2			  ## ll_events.c:183:9
 1e19818:    82 08             	r2 = r8
 1e1981a:    bf f3 a6 f7       	call -4276 <__hci_emit_le_meta_event : 1e1876a >
 1e1981e:    20 0a             	sp += 64
 1e19820:    59 01             	{pc, r9-r4} = [sp++]			  ## ll_events.c:197:1


__adv_rx_post_handler:
 1e19822:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:539:0
 1e19824:    14 08             	r4 = r1			  ## ll_adv.c:539:0
 1e19826:    41 58             	r1 = h[r4 + 8] (u)			  ## ll_adv.c:540:17
 1e19828:    21 fd 0f 19       	r1 = r1 & 15			  ## ll_adv.c:540:5
 1e1982c:    05 08             	r5 = r0			  ## ll_adv.c:540:5
 1e1982e:    51 e0 86 10       	if (r1 != 5) goto 268 <__adv_rx_post_handler+0x11C : 1e1993e >
 1e19832:    c0 ff b0 0e 00 00 	r0 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:522:36
 1e19838:    00 40             	r0 = [r0 + 0]			  ## ll_adv.c:522:36
 1e1983a:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:522:44
 1e1983c:    06 70             	r6 = 0
 1e1983e:    0e 40             	[r0 + 0] = r6			  ## ll_adv.c:525:18
 1e19840:    bf f3 8a f6       	call -4844 <ll_adv_close : 1e18558 >			  ## ll_adv.c:527:5
 1e19844:    c7 ff e0 2d 00 00 	r7 = 11744 <ll_hdl : 2de0 >
 1e1984a:    00 5f             	r0 = h[r7 + 32] (u)
 1e1984c:    11 70             	r1 = 1
 1e1984e:    f8 fd 60 21       	r2 = r1 << r6			  ## link_layer.c:804:31
 1e19852:    20 f0 06 00       	if ((r0 & r2) == 0) goto 12 <__adv_rx_post_handler+0x40 : 1e19862 >			  ## link_layer.c:804:31
 1e19856:    16 80             	r6 += 1			  ## link_layer.c:803:26
 1e19858:    06 e1 f9 3f       	if (r6 < 16) goto -14 <__adv_rx_post_handler+0x2C : 1e1984e >			  ## link_layer.c:803:26
 1e1985c:    8f f3 1b 4e       	call 2006070 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19860:    02 18             	goto 4 <__adv_rx_post_handler+0x44 : 1e19866 >			  ## cpu.h:148:5
 1e19862:    50 b4             	r0 |= r2			  ## link_layer.c:805:28
 1e19864:    08 5f             	h[r7 + 32] = r0			  ## link_layer.c:805:28
 1e19866:    00 fd 50 69       	r0 = r6 | 80			  ## link_layer.c:811:15
 1e1986a:    58 fc f8 00       	r8 = r5 + 248			  ## link_layer.c:811:15
 1e1986e:    10 f7 00 80       	h[r8 + 0] = r0			  ## link_layer.c:881:18
 1e19872:    c0 ff b4 0e 00 00 	r0 = 3764 <le_data_length.6 : eb4 >			  ## link_layer.c:881:18
 1e19878:    01 60             	r1 = b[r0 + 0] (u)			  ## link_layer.c:881:18
 1e1987a:    b0 7f             	r0 = 251			  ## link_layer.c:881:18
 1e1987c:    b2 7f             	r2 = 251			  ## link_layer.c:881:18
 1e1987e:    01 32             	if (r1 != 0) goto 2 <__adv_rx_post_handler+0x60 : 1e19882 >			  ## link_layer.c:881:18
 1e19880:    02 70             	r2 = 0
 1e19882:    56 fc 6c 01       	r6 = r5 + 364
 1e19886:    0a 5c             	h[r6 + 0] = r2			  ## ll_data_extension.c:146:35
 1e19888:    18 5c             	h[r6 + 2] = r0			  ## ll_data_extension.c:148:35
 1e1988a:    c0 ff b8 0e 00 00 	r0 = 3768 <le_data_length.7 : eb8 >			  ## ll_data_extension.c:148:35
 1e19890:    03 60             	r3 = b[r0 + 0] (u)			  ## ll_data_extension.c:148:35
 1e19892:    00 fb 48 08       	r0 = 2120 <old_battery_level : 848 >			  ## ll_data_extension.c:148:35
 1e19896:    01 08             	r1 = r0			  ## ll_data_extension.c:148:35
 1e19898:    01 36             	if (r3 != 0) goto 2 <__adv_rx_post_handler+0x7A : 1e1989c >			  ## ll_data_extension.c:148:35
 1e1989a:    01 70             	r1 = 0
 1e1989c:    69 5c             	h[r6 + 12] = r1			  ## ll_data_extension.c:150:33
 1e1989e:    78 5c             	h[r6 + 14] = r0			  ## ll_data_extension.c:152:33
 1e198a0:    b0 71             	r0 = 27			  ## ll_data_extension.c:155:41
 1e198a2:    28 5c             	h[r6 + 4] = r0			  ## ll_data_extension.c:155:41
 1e198a4:    38 5c             	h[r6 + 6] = r0			  ## ll_data_extension.c:156:41
 1e198a6:    00 fb 48 01       	r0 = 328 <DRIVER_RAM_TOTAL+0x56 : 148 >			  ## ll_data_extension.c:159:39
 1e198aa:    88 5c             	h[r6 + 16] = r0			  ## ll_data_extension.c:159:39
 1e198ac:    98 5c             	h[r6 + 18] = r0			  ## ll_data_extension.c:160:39
 1e198ae:    b2 e1 01 30       	if (r2 < 27) goto 2 <__adv_rx_post_handler+0x92 : 1e198b4 >			  ## ll_data_extension.c:160:39
 1e198b2:    b2 71             	r2 = 27			  ## ll_data_extension.c:72:46
 1e198b4:    4a 5c             	h[r6 + 8] = r2			  ## ll_data_extension.c:72:44
 1e198b6:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:73:29
 1e198b8:    f1 70             	r1 = 15			  ## ll_data_extension.c:73:5
 1e198ba:    bf f3 fd e4       	call -13830 <le_hw_ioctrl : 1e162b8 >			  ## ll_data_extension.c:73:5
 1e198be:    20 5c             	r0 = h[r6 + 4] (u)			  ## ll_data_extension.c:75:46
 1e198c0:    12 5c             	r2 = h[r6 + 2] (u)			  ## ll_data_extension.c:75:46
 1e198c2:    02 f2 01 30       	if (r2 < r0) goto 2 <__adv_rx_post_handler+0xA6 : 1e198c8 >			  ## ll_data_extension.c:75:46
 1e198c6:    02 08             	r2 = r0			  ## ll_data_extension.c:75:46
 1e198c8:    5a 5c             	h[r6 + 10] = r2			  ## ll_data_extension.c:75:44
 1e198ca:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:76:29
 1e198cc:    01 71             	r1 = 16			  ## ll_data_extension.c:76:5
 1e198ce:    bf f3 f3 e4       	call -13850 <le_hw_ioctrl : 1e162b8 >			  ## ll_data_extension.c:76:5
 1e198d2:    91 5c             	r1 = h[r6 + 18] (u)			  ## ll_data_extension.c:78:44
 1e198d4:    60 5c             	r0 = h[r6 + 12] (u)			  ## ll_data_extension.c:78:44
 1e198d6:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xBA : 1e198dc >			  ## ll_data_extension.c:78:44
 1e198da:    10 08             	r0 = r1			  ## ll_data_extension.c:78:44
 1e198dc:    a8 5c             	h[r6 + 20] = r0			  ## ll_data_extension.c:78:42
 1e198de:    81 5c             	r1 = h[r6 + 16] (u)			  ## ll_data_extension.c:80:44
 1e198e0:    70 5c             	r0 = h[r6 + 14] (u)			  ## ll_data_extension.c:80:44
 1e198e2:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xC6 : 1e198e8 >			  ## ll_data_extension.c:80:44
 1e198e6:    10 08             	r0 = r1			  ## ll_data_extension.c:80:44
 1e198e8:    b8 5c             	h[r6 + 22] = r0			  ## ll_data_extension.c:80:42
 1e198ea:    00 f9 22 70       	r0 = b[r7 + 34] (u)			  ## link_layer.c:885:19
 1e198ee:    10 80             	r0 += 1			  ## link_layer.c:885:19
 1e198f0:    10 f9 22 70       	b[r7 + 34] = r0			  ## link_layer.c:885:19
 1e198f4:    a0 4e             	r0 = [r7 + 40]			  ## list.h:154:28
 1e198f6:    51 fc 34 00       	r1 = r5 + 52			  ## link_layer.c:887:26
 1e198fa:    a9 4e             	[r7 + 40] = r1			  ## list.h:137:16
 1e198fc:    72 fc 24 00       	r2 = r7 + 36			  ## list.h:154:28
 1e19900:    da 4a             	[r5 + 52] = r2			  ## list.h:138:16
 1e19902:    e8 4a             	[r5 + 56] = r0			  ## list.h:139:16
 1e19904:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e19906:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_slave.c:666:17
 1e19908:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_slave.c:666:5
 1e1990c:    30 e0 15 00       	if (r0 == 3) goto 42 <__adv_rx_post_handler+0x118 : 1e1993a >			  ## ll_slave.c:666:5
 1e19910:    10 5b             	r0 = h[r5 + 34] (u)			  ## ll_slave.c:678:40
 1e19912:    00 fe 0a 09       	r0 = r0 * 10			  ## ll_slave.c:678:62
 1e19916:    c1 ff 5e 8a e1 01 	r1 = 31558238 <ll_conn_supervision_timer_handler : 1e18a5e >			  ## link_layer.c:1231:33
 1e1991c:    bf f3 b4 68       	call -77464 <sys_timer_register : 1e06a88 >			  ## link_layer.c:1231:33
 1e19920:    10 f6 58 80       	[r8 + 88] = r0			  ## link_layer.c:1231:31
 1e19924:    04 30             	if (r0 != 0) goto 8 <__adv_rx_post_handler+0x10C : 1e1992e >			  ## link_layer.c:1231:31
 1e19926:    8f f3 b6 4d       	call 2005868 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1992a:    00 f6 58 80       	r0 = [r8 + 88]			  ## cpu.h:148:5
 1e1992e:    51 08             	r1 = r5			  ## link_layer.c:1235:5
 1e19930:    bf f3 ae 68       	call -77476 <sys_timer_set_context : 1e06a90 >			  ## link_layer.c:1235:5
 1e19934:    01 70             	r1 = 0			  ## ll_events.c:208:9
 1e19936:    50 08             	r0 = r5			  ## ll_events.c:208:9
 1e19938:    45 17             	call -374 <le_connection_complete_event : 1e197c4 >			  ## ll_events.c:208:9
 1e1993a:    c0 68             	r0 = b[r4 + 12] (u)			  ## ll_adv.c:534:22
 1e1993c:    c8 6d             	b[r6 + 28] = r0			  ## ll_adv.c:534:16
 1e1993e:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:549:1


ll_adv_timeout_handler:
 1e19940:    34 00             	[--sp] = rets			  ## ll_adv.c:99:0
 1e19942:    05 20             	if (r0 == 0) goto 10 <ll_adv_timeout_handler+0xE : 1e1994e >			  ## ll_adv.c:99:0
 1e19944:    bf f3 08 f6       	call -5104 <ll_adv_close : 1e18558 >			  ## ll_adv.c:109:5
 1e19948:    00 70             	r0 = 0			  ## ll_adv.c:111:5
 1e1994a:    c1 73             	r1 = 60			  ## ll_adv.c:111:5
 1e1994c:    3b 17             	call -394 <le_connection_complete_event : 1e197c4 >			  ## ll_adv.c:111:5
 1e1994e:    30 00             	pc = [sp++]			  ## ll_adv.c:114:1


ll_white_list_match:
 1e19950:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_white_list.c:66:0
 1e19952:    c2 ff bc 0e 00 00 	r2 = 3772 <le_param : ebc >			  ## ll_white_list.c:66:0
 1e19958:    07 f6 98 20       	r7 = [r2 + 152]			  ## ll_white_list.c:66:0
 1e1995c:    15 08             	r5 = r1			  ## ll_white_list.c:66:0
 1e1995e:    06 08             	r6 = r0			  ## ll_white_list.c:66:0
 1e19960:    24 fc 98 00       	r4 = r2 + 152			  ## ll_white_list.c:66:0
 1e19964:    08 70             	r8 = 0			  ## ll_white_list.c:66:0
 1e19966:    47 f2 11 00       	if (r7 == r4) goto 34 <ll_white_list_match+0x3C : 1e1998c >			  ## ll_white_list.c:66:0
 1e1996a:    71 fc f9 ff       	r1 = r7 + -7			  ## ll_white_list.c:76:48
 1e1996e:    62 70             	r2 = 6			  ## ll_white_list.c:76:15
 1e19970:    50 08             	r0 = r5			  ## ll_white_list.c:76:15
 1e19972:    97 f3 bb 6a       	call 3069302 <memcmp : 106eec >			  ## ll_white_list.c:76:15
 1e19976:    05 30             	if (r0 != 0) goto 10 <ll_white_list_match+0x32 : 1e19982 >			  ## ll_white_list.c:76:15
 1e19978:    70 fc f8 ff       	r0 = r7 + -8
 1e1997c:    01 60             	r1 = b[r0 + 0] (u)			  ## ll_white_list.c:77:37
 1e1997e:    61 f2 04 00       	if (r1 == r6) goto 8 <ll_white_list_match+0x3A : 1e1998a >			  ## ll_white_list.c:77:37
 1e19982:    07 4e             	r7 = [r7 + 0]
 1e19984:    47 f2 f1 1f       	if (r7 != r4) goto -30 <ll_white_list_match+0x1A : 1e1996a >
 1e19988:    01 18             	goto 2 <ll_white_list_match+0x3C : 1e1998c >
 1e1998a:    08 08             	r8 = r0
 1e1998c:    80 08             	r0 = r8			  ## ll_white_list.c:85:1
 1e1998e:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_white_list.c:85:1


le_ll_adv_addr_process:
 1e19990:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:333:0
 1e19992:    04 08             	r4 = r0			  ## ll_adv.c:333:0
 1e19994:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:333:0
 1e19996:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_adv.c:333:0
 1e1999a:    30 e0 04 00       	if (r0 == 3) goto 8 <le_ll_adv_addr_process+0x16 : 1e199a6 >			  ## ll_adv.c:333:0
 1e1999e:    50 e0 02 00       	if (r0 == 5) goto 4 <le_ll_adv_addr_process+0x16 : 1e199a6 >			  ## ll_adv.c:333:0
 1e199a2:    8f f3 78 4d       	call 2005744 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e199a6:    c0 ff 14 30 00 00 	r0 = 12308 <adv_param : 3014 >			  ## ll_adv.c:252:19
 1e199ac:    e6 60             	r6 = b[r0 + 14] (u)			  ## ll_adv.c:252:19
 1e199ae:    c5 ff 10 30 00 00 	r5 = 12304 <ll_error_code : 3010 >			  ## ll_adv.c:252:19
 1e199b4:    00 70             	r0 = 0			  ## ll_adv.c:252:19
 1e199b6:    08 6a             	b[r5 + 0] = r0			  ## ll_adv.c:252:19
 1e199b8:    00 f3 0c 60       	if ((r6 & 1) == 0) goto 24 <le_ll_adv_addr_process+0x44 : 1e199d4 >			  ## ll_adv.c:252:19
 1e199bc:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:253:17
 1e199be:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:253:17
 1e199c2:    31 e0 07 10       	if (r1 != 3) goto 14 <le_ll_adv_addr_process+0x44 : 1e199d4 >			  ## ll_adv.c:253:17
 1e199c6:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:267:32
 1e199ca:    41 99             	r1 = r4 + 20			  ## ll_adv.c:268:63
 1e199cc:    c1 17             	call -126 <ll_white_list_match : 1e19950 >			  ## ll_adv.c:267:32
 1e199ce:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x44 : 1e199d4 >
 1e199d0:    10 70             	r0 = 1
 1e199d2:    08 6a             	b[r5 + 0] = r0
 1e199d4:    01 f3 0c 60       	if ((r6 & 2) == 0) goto 24 <le_ll_adv_addr_process+0x60 : 1e199f0 >
 1e199d8:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:279:17
 1e199da:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:279:17
 1e199de:    51 e0 07 10       	if (r1 != 5) goto 14 <le_ll_adv_addr_process+0x60 : 1e199f0 >			  ## ll_adv.c:279:17
 1e199e2:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:293:32
 1e199e6:    41 99             	r1 = r4 + 20			  ## ll_adv.c:294:63
 1e199e8:    b3 17             	call -154 <ll_white_list_match : 1e19950 >			  ## ll_adv.c:293:32
 1e199ea:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x60 : 1e199f0 >
 1e199ec:    10 70             	r0 = 1
 1e199ee:    08 6a             	b[r5 + 0] = r0
 1e199f0:    56 01             	{pc, r6-r4} = [sp++]			  ## ll_adv.c:342:1


__set_ll_adv_peer_addr:
 1e199f2:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_adv.c:231:0
 1e199f4:    c1 ff b0 0e 00 00 	r1 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:231:0
 1e199fa:    06 42             	r6 = [r1 + 0]			  ## ll_adv.c:231:0
 1e199fc:    04 08             	r4 = r0			  ## ll_adv.c:231:0
 1e199fe:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x12 : 1e19a04 >			  ## ll_adv.c:231:0
 1e19a00:    8f f3 49 4d       	call 2005650 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19a04:    c7 ff 14 30 00 00 	r7 = 12308 <adv_param : 3014 >
 1e19a0a:    40 6e             	r0 = b[r7 + 4] (u)			  ## ll_adv.c:234:20
 1e19a0c:    40 e0 02 00       	if (r0 == 4) goto 4 <__set_ll_adv_peer_addr+0x22 : 1e19a14 >			  ## ll_adv.c:234:20
 1e19a10:    10 e0 1e 10       	if (r0 != 1) goto 60 <__set_ll_adv_peer_addr+0x5E : 1e19a50 >
 1e19a14:    60 6e             	r0 = b[r7 + 6] (u)			  ## ll_adv.c:236:46
 1e19a16:    b8 68             	b[r4 + 11] = r0			  ## ll_adv.c:236:34
 1e19a18:    c5 98             	r5 = r4 + 12			  ## ll_adv.c:238:9
 1e19a1a:    71 9e             	r1 = r7 + 7			  ## ll_adv.c:238:9
 1e19a1c:    62 70             	r2 = 6			  ## ll_adv.c:238:9
 1e19a1e:    50 08             	r0 = r5			  ## ll_adv.c:238:9
 1e19a20:    97 f3 60 6a       	call 3069120 <memcpy : 106ee4 >			  ## ll_adv.c:238:9
 1e19a24:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x38 : 1e19a2a >			  ## ll_adv.c:238:9
 1e19a26:    8f f3 36 4d       	call 2005612 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19a2a:    52 6e             	r2 = b[r7 + 5] (u)			  ## ll_adv.c:195:23
 1e19a2c:    30 fd 01 29       	r0 = r2 & 4294967294			  ## ll_adv.c:195:5
 1e19a30:    20 e0 02 10       	if (r0 != 2) goto 4 <__set_ll_adv_peer_addr+0x46 : 1e19a38 >			  ## ll_adv.c:195:5
 1e19a34:    ba 68             	b[r4 + 11] = r2			  ## ll_adv.c:205:34
 1e19a36:    01 18             	goto 2 <__set_ll_adv_peer_addr+0x48 : 1e19a3a >			  ## ll_adv.c:205:34
 1e19a38:    b2 68             	r2 = b[r4 + 11] (u)
 1e19a3a:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:209:33
 1e19a3c:    31 70             	r1 = 3			  ## ll_adv.c:209:5
 1e19a3e:    53 08             	r3 = r5			  ## ll_adv.c:209:5
 1e19a40:    bf f3 3a e4       	call -14220 <le_hw_ioctrl : 1e162b8 >			  ## ll_adv.c:209:5
 1e19a44:    b2 68             	r2 = b[r4 + 11] (u)			  ## ll_adv.c:215:23
 1e19a46:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:214:33
 1e19a48:    91 70             	r1 = 9			  ## ll_adv.c:214:5
 1e19a4a:    53 08             	r3 = r5			  ## ll_adv.c:214:5
 1e19a4c:    bf f3 34 e4       	call -14232 <le_hw_ioctrl : 1e162b8 >			  ## ll_adv.c:214:5
 1e19a50:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_adv.c:243:1


__set_ll_local_addr_common:
 1e19a52:    34 00             	[--sp] = rets			  ## link_layer.c:3282:0
 1e19a54:    12 08             	r2 = r1			  ## link_layer.c:3282:0
 1e19a56:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:3283:21
 1e19a58:    32 e0 0d 80       	if (r2 > 3) goto 26 <.GJTIE801_0_0_+0xE : 1e19a76 >			  ## link_layer.c:3283:21
 1e19a5c:    c1 ff c4 0e 00 00 	r1 = 3780 <le_param+0x8 : ec4 >
 1e19a62:    a2 00             	tbb [r2]


.GJTIS801_0_0_:
 1e19a64:    02     < 2 : 0x2 >
 1e19a65:    04     < 4 : 0x4 >
 1e19a66:    02     < 2 : 0x2 >
 1e19a67:    04     < 4 : 0x4 >
 1e19a68:    10 80             	r0 += 1			  ## link_layer.c:3288:9
 1e19a6a:    02 18             	goto 4 <.GJTIE801_0_0_+0x8 : 1e19a70 >
 1e19a6c:    10 80             	r0 += 1			  ## link_layer.c:3294:9
 1e19a6e:    61 80             	r1 += 6			  ## link_layer.c:3294:9
 1e19a70:    62 70             	r2 = 6
 1e19a72:    97 f3 37 6a       	call 3069038 <memcpy : 106ee4 >
 1e19a76:    30 00             	pc = [sp++]			  ## link_layer.c:3299:1


__set_ll_local_addr:
 1e19a78:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:3302:0
 1e19a7a:    14 08             	r4 = r1			  ## link_layer.c:3302:0
 1e19a7c:    05 08             	r5 = r0			  ## link_layer.c:3302:0
 1e19a7e:    40 08             	r0 = r4			  ## link_layer.c:3303:5
 1e19a80:    21 08             	r1 = r2			  ## link_layer.c:3303:5
 1e19a82:    e7 17             	call -50 <__set_ll_local_addr_common : 1e19a52 >			  ## link_layer.c:3303:5
 1e19a84:    82 f9 01 40       	r2 = b[r4 ++= 1] (u)			  ## link_layer.c:3307:23
 1e19a88:    21 70             	r1 = 2			  ## link_layer.c:3305:5
 1e19a8a:    50 08             	r0 = r5			  ## link_layer.c:3305:5
 1e19a8c:    43 08             	r3 = r4			  ## link_layer.c:3305:5
 1e19a8e:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:3305:5
 1e19a90:    ff f3 12 e4       	goto -14300 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:3305:5


__set_ll_adv_state:
 1e19a94:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:345:0
 1e19a96:    fc 0b             	sp += -8			  ## ll_adv.c:345:0
 1e19a98:    c8 ff 14 30 00 00 	r8 = 12308 <adv_param : 3014 >			  ## ll_adv.c:345:0
 1e19a9e:    01 f9 0d 80       	r1 = b[r8 + 13] (u)			  ## ll_adv.c:351:33
 1e19aa2:    04 08             	r4 = r0			  ## ll_adv.c:351:33
 1e19aa4:    d1 f5 05 00       	b[sp+5] = r1			  ## ll_adv.c:351:21
 1e19aa8:    00 70             	r0 = 0			  ## ll_adv.c:351:21
 1e19aaa:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:352:29
 1e19aae:    12 70             	r2 = 1			  ## ll_adv.c:352:29
 1e19ab0:    06 70             	r6 = 0			  ## ll_adv.c:354:24
 1e19ab2:    03 70             	r3 = 0			  ## ll_adv.c:354:24
 1e19ab4:    f8 fd 30 52       	r5 = r2 << r3			  ## ll_adv.c:353:31
 1e19ab8:    17 9c             	r7 = r6 + 1			  ## ll_adv.c:354:24
 1e19aba:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x2C : 1e19ac0 >			  ## ll_adv.c:354:24
 1e19abe:    76 08             	r6 = r7			  ## ll_adv.c:353:13
 1e19ac0:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x32 : 1e19ac6 >
 1e19ac4:    70 08             	r0 = r7			  ## ll_adv.c:353:13
 1e19ac6:    13 80             	r3 += 1			  ## ll_adv.c:352:42
 1e19ac8:    33 e0 f4 1f       	if (r3 != 3) goto -24 <__set_ll_adv_state+0x20 : 1e19ab4 >			  ## ll_adv.c:352:42
 1e19acc:    03 f9 03 80       	r3 = b[r8 + 3] (u)			  ## ll_adv.c:365:21
 1e19ad0:    01 f9 02 80       	r1 = b[r8 + 2] (u)			  ## ll_adv.c:365:21
 1e19ad4:    02 f9 01 80       	r2 = b[r8 + 1] (u)			  ## ll_adv.c:366:21
 1e19ad8:    07 f9 0e 80       	r7 = b[r8 + 14] (u)			  ## ll_adv.c:368:35
 1e19adc:    05 f9 04 80       	r5 = b[r8 + 4] (u)			  ## ll_adv.c:370:23
 1e19ae0:    06 f9 00 80       	r6 = b[r8 + 0] (u)			  ## ll_adv.c:366:21
 1e19ae4:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:354:24
 1e19ae8:    d7 f5 06 00       	b[sp+6] = r7			  ## ll_adv.c:368:23
 1e19aec:    45 e0 4c 80       	if (r5 > 4) goto 152 <.GJTIE812_0_0_+0x8C : 1e19b88 >			  ## ll_adv.c:368:23
 1e19af0:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## ll_adv.c:365:21
 1e19af4:    a5 00             	tbb [r5]			  ## ll_adv.c:365:21


.GJTIS812_0_0_:
 1e19af6:    03     < 3 : 0x3 >
 1e19af7:    0c     < 12 : 0xC >
 1e19af8:    28     < 40 : 0x28 >
 1e19af9:    31     < 49 : 0x31 >
 1e19afa:    3a     < 58 : 0x3A >
 1e19afb:    00     < 0 : 0x0 >
 1e19afc:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:372:28
 1e19b00:    20 70             	r0 = 2			  ## ll_adv.c:372:28
 1e19b02:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:373:28
 1e19b06:    00 70             	r0 = 0			  ## ll_adv.c:374:28
 1e19b08:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:374:28
 1e19b0c:    3d 18             	goto 122 <.GJTIE812_0_0_+0x8C : 1e19b88 >			  ## ll_adv.c:374:28
 1e19b0e:    60 70             	r0 = 6
 1e19b10:    90 f5 00 00       	h[sp] = r0			  ## ll_adv.c:377:28
 1e19b14:    20 70             	r0 = 2			  ## ll_adv.c:377:28
 1e19b16:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:378:28
 1e19b1a:    10 70             	r0 = 1			  ## ll_adv.c:379:28
 1e19b1c:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:379:28
 1e19b20:    00 70             	r0 = 0			  ## ll_adv.c:379:28
 1e19b22:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:382:28
 1e19b26:    c1 ff 40 99 e1 01 	r1 = 31562048 <ll_adv_timeout_handler : 1e19940 >			  ## ll_adv.c:119:25
 1e19b2c:    00 fb 00 05       	r0 = 1280 <BTCTLER_CONTROLLER_DATA_SIZE+0x44 : 500 >			  ## ll_adv.c:119:25
 1e19b30:    bf f3 aa 67       	call -77996 <sys_timer_register : 1e06a88 >			  ## ll_adv.c:119:25
 1e19b34:    58 48             	[r4 + 20] = r0			  ## ll_adv.c:119:23
 1e19b36:    03 30             	if (r0 != 0) goto 6 <.GJTIE812_0_0_+0x42 : 1e19b3e >			  ## ll_adv.c:119:23
 1e19b38:    8f f3 ad 4c       	call 2005338 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19b3c:    50 48             	r0 = [r4 + 20]			  ## cpu.h:148:5
 1e19b3e:    41 08             	r1 = r4			  ## ll_adv.c:123:5
 1e19b40:    bf f3 a6 67       	call -78004 <sys_timer_set_context : 1e06a90 >			  ## ll_adv.c:123:5
 1e19b44:    1f 18             	goto 62 <.GJTIE812_0_0_+0x88 : 1e19b84 >			  ## ll_adv.c:123:5
 1e19b46:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:393:28
 1e19b4a:    20 70             	r0 = 2			  ## ll_adv.c:393:28
 1e19b4c:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:394:28
 1e19b50:    60 70             	r0 = 6			  ## ll_adv.c:395:28
 1e19b52:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:395:28
 1e19b56:    18 18             	goto 48 <.GJTIE812_0_0_+0x8C : 1e19b88 >			  ## ll_adv.c:395:28
 1e19b58:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:400:28
 1e19b5c:    10 70             	r0 = 1			  ## ll_adv.c:404:28
 1e19b5e:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:404:28
 1e19b62:    20 70             	r0 = 2			  ## ll_adv.c:404:28
 1e19b64:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:406:28
 1e19b68:    0f 18             	goto 30 <.GJTIE812_0_0_+0x8C : 1e19b88 >			  ## ll_adv.c:406:28
 1e19b6a:    c8 fd 40 62       	r6 <= insert(r2, p:8, l:8)			  ## ll_adv.c:366:21
 1e19b6e:    96 f5 00 00       	h[sp] = r6			  ## ll_adv.c:409:28
 1e19b72:    30 70             	r0 = 3			  ## ll_adv.c:410:28
 1e19b74:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:410:28
 1e19b78:    10 70             	r0 = 1			  ## ll_adv.c:411:28
 1e19b7a:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:411:28
 1e19b7e:    00 70             	r0 = 0			  ## ll_adv.c:414:28
 1e19b80:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:414:28
 1e19b84:    40 08             	r0 = r4
 1e19b86:    35 17             	call -406 <__set_ll_adv_peer_addr : 1e199f2 >
 1e19b88:    c0 ff b0 0e 00 00 	r0 = 3760 <adv_hdl : eb0 >
 1e19b8e:    00 40             	r0 = [r0 + 0]
 1e19b90:    02 30             	if (r0 != 0) goto 4 <.GJTIE812_0_0_+0x9A : 1e19b96 >
 1e19b92:    8f f3 80 4c       	call 2005248 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19b96:    02 f9 05 80       	r2 = b[r8 + 5] (u)			  ## ll_adv.c:223:5
 1e19b9a:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:223:35
 1e19b9c:    41 98             	r1 = r4 + 4			  ## ll_adv.c:224:36
 1e19b9e:    6c 17             	call -296 <__set_ll_local_addr : 1e19a78 >			  ## ll_adv.c:223:5
 1e19ba0:    c2 ff 23 30 00 00 	r2 = 12323 <adv_data.3078 : 3023 >			  ## ll_adv.c:223:5
 1e19ba6:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:431:18
 1e19ba8:    04 20             	if (r0 == 0) goto 8 <.GJTIE812_0_0_+0xB6 : 1e19bb2 >			  ## ll_adv.c:431:18
 1e19baa:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:436:37
 1e19bac:    51 71             	r1 = 21			  ## ll_adv.c:436:9
 1e19bae:    bf f3 83 e3       	call -14586 <le_hw_ioctrl : 1e162b8 >			  ## ll_adv.c:436:9
 1e19bb2:    c2 ff 43 30 00 00 	r2 = 12355 <scan_resp_data : 3043 >
 1e19bb8:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:440:24
 1e19bba:    04 20             	if (r0 == 0) goto 8 <.GJTIE812_0_0_+0xC8 : 1e19bc4 >			  ## ll_adv.c:440:24
 1e19bbc:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:445:37
 1e19bbe:    61 71             	r1 = 22			  ## ll_adv.c:445:9
 1e19bc0:    bf f3 7a e3       	call -14604 <le_hw_ioctrl : 1e162b8 >			  ## ll_adv.c:445:9
 1e19bc4:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:450:51
 1e19bc6:    01 a0             	r1 = sp + 0			  ## ll_adv.c:450:51
 1e19bc8:    bf f3 a8 ea       	call -10928 <le_hw_advertising : 1e1711c >			  ## ll_adv.c:450:18
 1e19bcc:    01 08             	r1 = r0			  ## ll_adv.c:450:18
 1e19bce:    30 70             	r0 = 3			  ## ll_adv.c:455:12
 1e19bd0:    01 32             	if (r1 != 0) goto 2 <.GJTIE812_0_0_+0xD8 : 1e19bd4 >			  ## ll_adv.c:455:12
 1e19bd2:    00 70             	r0 = 0
 1e19bd4:    04 0a             	sp += 8
 1e19bd6:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:455:5


ll_thread_resume:
 1e19bd8:    c0 ff e8 2d 00 00 	r0 = 11752 <ll_hdl+0x8 : 2de8 >			  ## link_layer.c:2947:0
 1e19bde:    ff f3 53 66       	goto -78682 <thread_resume : 1e06888 >			  ## link_layer.c:2948:5


adv_rx_probe_handler:
 1e19be2:    7b 01             	[--sp] = {rets, r11-r4}			  ## ll_adv.c:496:0
 1e19be4:    14 08             	r4 = r1			  ## ll_adv.c:496:0
 1e19be6:    45 58             	r5 = h[r4 + 8] (u)			  ## ll_adv.c:501:17
 1e19be8:    0b 08             	r11 = r0			  ## ll_adv.c:501:17
 1e19bea:    20 fd 0f 59       	r0 = r5 & 15			  ## ll_adv.c:501:5
 1e19bee:    c9 ff 10 30 00 00 	r9 = 12304 <ll_error_code : 3010 >			  ## ll_adv.c:501:5
 1e19bf4:    50 e0 08 00       	if (r0 == 5) goto 16 <adv_rx_probe_handler+0x26 : 1e19c08 >			  ## ll_adv.c:501:5
 1e19bf8:    30 e0 90 10       	if (r0 != 3) goto 288 <adv_rx_probe_handler+0x13A : 1e19d1c >
 1e19bfc:    40 08             	r0 = r4			  ## ll_adv.c:461:5
 1e19bfe:    c8 16             	call -624 <le_ll_adv_addr_process : 1e19990 >			  ## ll_adv.c:461:5
 1e19c00:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## ll_adv.c:461:5
 1e19c04:    84 20             	if (r0 == 0) goto 264 <adv_rx_probe_handler+0x12C : 1e19d0e >			  ## ll_adv.c:461:5
 1e19c06:    8a 18             	goto 276 <adv_rx_probe_handler+0x13A : 1e19d1c >			  ## ll_adv.c:461:5
 1e19c08:    08 f6 00 b0       	r8 = [r11 + 0]			  ## ll_adv.c:478:45
 1e19c0c:    00 fb 90 01       	r0 = 400 <BTCTLER_CL_BSS_SIZE+0x4 : 190 >			  ## link_layer.c:835:12
 1e19c10:    bf f3 6d 65       	call -79142 <__bt_malloc : 1e066ee >			  ## link_layer.c:835:12
 1e19c14:    06 08             	r6 = r0			  ## link_layer.c:835:12
 1e19c16:    60 fc 40 00       	r0 = r6 + 64			  ## link_layer.c:841:28
 1e19c1a:    97 f3 ff 68       	call 3068414 <os_mutex_create : 106e1c >			  ## link_layer.c:841:5
 1e19c1e:    18 f6 00 60       	[r6 + 0] = r8			  ## link_layer.c:844:14
 1e19c22:    b1 fc 04 00       	r1 = r11 + 4			  ## ll_adv.c:478:60
 1e19c26:    40 9c             	r0 = r6 + 4			  ## link_layer.c:845:19
 1e19c28:    72 70             	r2 = 7			  ## link_layer.c:845:5
 1e19c2a:    97 f3 5b 69       	call 3068598 <memcpy : 106ee4 >			  ## link_layer.c:845:5
 1e19c2e:    81 fd 38 05       	r0 = uextra(r5, p:7, l:1)			  ## ll_adv.c:478:82
 1e19c32:    b8 6c             	b[r6 + 11] = r0			  ## link_layer.c:847:26
 1e19c34:    41 99             	r1 = r4 + 20			  ## ll_adv.c:478:89
 1e19c36:    c0 9c             	r0 = r6 + 12			  ## link_layer.c:848:23
 1e19c38:    62 70             	r2 = 6			  ## link_layer.c:848:5
 1e19c3a:    6a 70             	r10 = 6			  ## link_layer.c:848:5
 1e19c3c:    97 f3 52 69       	call 3068580 <memcpy : 106ee4 >			  ## link_layer.c:848:5
 1e19c40:    10 70             	r0 = 1			  ## link_layer.c:848:5
 1e19c42:    65 fc 28 00       	r5 = r6 + 40			  ## link_layer.c:848:5
 1e19c46:    58 6b             	b[r5 + 21] = r0			  ## link_layer.c:850:20
 1e19c48:    41 fc 20 00       	r1 = r4 + 32			  ## ll_adv.c:478:108
 1e19c4c:    47 9d             	r7 = r6 + 20			  ## ll_adv.c:478:108
 1e19c4e:    62 71             	r2 = 22			  ## link_layer.c:3654:5
 1e19c50:    70 08             	r0 = r7			  ## link_layer.c:3654:5
 1e19c52:    97 f3 47 69       	call 3068558 <memcpy : 106ee4 >			  ## link_layer.c:3654:5
 1e19c56:    10 6a             	r0 = b[r5 + 1] (u)			  ## link_layer.c:3658:44
 1e19c58:    00 d1             	r0 = r0 >> 4			  ## link_layer.c:3658:26
 1e19c5a:    20 fd 0e 09       	r0 = r0 & 14			  ## link_layer.c:3658:44
 1e19c5e:    c1 ff ac 84 e1 01 	r1 = 31556780 <master_sca : 1e184ac >			  ## link_layer.c:3658:26
 1e19c64:    00 f8 00 01       	r0 = h[r0+r1] (u)			  ## link_layer.c:3658:26
 1e19c68:    f1 5c             	r1 = h[r6 + 30] (u)			  ## link_layer.c:3658:58
 1e19c6a:    02 5d             	r2 = h[r6 + 32] (u)			  ## link_layer.c:3658:77
 1e19c6c:    00 fc f4 01       	r0 = r0 + 500			  ## link_layer.c:3658:49
 1e19c70:    40 0e             	r0 = r0 * r1			  ## link_layer.c:3658:56
 1e19c72:    11 94             	r1 = r2 + 1			  ## link_layer.c:3658:92
 1e19c74:    40 0e             	r0 = r0 * r1			  ## link_layer.c:3658:74
 1e19c76:    01 fb 20 03       	r1 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x18 : 320 >			  ## link_layer.c:3658:105
 1e19c7a:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## link_layer.c:3658:105
 1e19c7e:    40 c0             	r0 = r0 << 1			  ## link_layer.c:3659:21
 1e19c80:    20 80             	r0 += 2			  ## link_layer.c:3659:21
 1e19c82:    58 5d             	h[r6 + 42] = r0			  ## link_layer.c:3659:21
 1e19c84:    61 70             	r1 = 6			  ## link_layer.c:860:5
 1e19c86:    80 08             	r0 = r8			  ## link_layer.c:860:5
 1e19c88:    72 08             	r2 = r7			  ## link_layer.c:860:5
 1e19c8a:    bf f3 15 e3       	call -14806 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:860:5
 1e19c8e:    60 fc 04 01       	r0 = r6 + 260			  ## link_layer.c:860:5
 1e19c92:    01 fc 30 00       	r1 = r0 + 48			  ## link_layer.c:862:27
 1e19c96:    c9 40             	[r0 + 48] = r1			  ## list.h:188:16
 1e19c98:    d9 40             	[r0 + 52] = r1			  ## list.h:189:16
 1e19c9a:    01 fc 38 00       	r1 = r0 + 56			  ## link_layer.c:863:27
 1e19c9e:    e9 40             	[r0 + 56] = r1			  ## list.h:188:16
 1e19ca0:    f9 40             	[r0 + 60] = r1			  ## list.h:189:16
 1e19ca2:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e19ca4:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e19ca6:    01 fc 40 00       	r1 = r0 + 64			  ## link_layer.c:865:27
 1e19caa:    09 41             	[r0 + 64] = r1			  ## list.h:188:16
 1e19cac:    19 41             	[r0 + 68] = r1			  ## list.h:189:16
 1e19cae:    1a f9 14 50       	b[r5 + 20] = r10			  ## link_layer.c:867:20
 1e19cb2:    00 4c             	r0 = [r6 + 0]			  ## link_layer.c:869:39
 1e19cb4:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:869:39
 1e19cb6:    c2 ff bc 84 e1 01 	r2 = 31556796 <conn_handler : 1e184bc >			  ## link_layer.c:869:5
 1e19cbc:    61 08             	r1 = r6			  ## link_layer.c:869:5
 1e19cbe:    bf f3 4c e7       	call -12648 <le_hw_handler_register : 1e16b5a >			  ## link_layer.c:869:5
 1e19cc2:    c1 ff da 88 e1 01 	r1 = 31557850 <ll_conn_fast_supervision_timer_handler : 1e188da >			  ## link_layer.c:874:5
 1e19cc8:    62 70             	r2 = 6			  ## link_layer.c:874:5
 1e19cca:    60 08             	r0 = r6			  ## link_layer.c:874:5
 1e19ccc:    bf f3 eb f6       	call -4650 <__event_oneshot_post_add : 1e18aa6 >			  ## link_layer.c:874:5
 1e19cd0:    40 08             	r0 = r4			  ## ll_adv.c:482:5
 1e19cd2:    5e 16             	call -836 <le_ll_adv_addr_process : 1e19990 >			  ## ll_adv.c:482:5
 1e19cd4:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## ll_adv.c:482:5
 1e19cd8:    1a 20             	if (r0 == 0) goto 52 <adv_rx_probe_handler+0x12C : 1e19d0e >			  ## ll_adv.c:482:5
 1e19cda:    60 08             	r0 = r6			  ## ll_adv.c:486:9
 1e19cdc:    bf f3 70 f4       	call -5920 <ll_close_conn_link : 1e185c0 >			  ## ll_adv.c:486:9
 1e19ce0:    c6 ff b0 0e 00 00 	r6 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:486:9
 1e19ce6:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:671:36
 1e19ce8:    15 40             	r5 = [r0 + 4]			  ## ll_adv.c:671:44
 1e19cea:    bf f3 7d e7       	call -12550 <le_hw_open : 1e16be8 >			  ## ll_adv.c:673:20
 1e19cee:    08 4a             	[r5 + 0] = r0			  ## ll_adv.c:673:18
 1e19cf0:    15 20             	if (r0 == 0) goto 42 <adv_rx_probe_handler+0x13A : 1e19d1c >			  ## ll_adv.c:673:18
 1e19cf2:    00 40             	r0 = [r0 + 0]
 1e19cf4:    c2 ff 14 85 e1 01 	r2 = 31556884 <adv_handler : 1e18514 >			  ## ll_adv.c:680:5
 1e19cfa:    51 08             	r1 = r5			  ## ll_adv.c:680:5
 1e19cfc:    bf f3 2d e7       	call -12710 <le_hw_handler_register : 1e16b5a >			  ## ll_adv.c:680:5
 1e19d00:    50 08             	r0 = r5			  ## ll_adv.c:686:18
 1e19d02:    c8 16             	call -624 <__set_ll_adv_state : 1e19a94 >			  ## ll_adv.c:686:18
 1e19d04:    0b 30             	if (r0 != 0) goto 22 <adv_rx_probe_handler+0x13A : 1e19d1c >
 1e19d06:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:693:5
 1e19d08:    11 70             	r1 = 1			  ## ll_adv.c:693:20
 1e19d0a:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:693:20
 1e19d0c:    07 18             	goto 14 <adv_rx_probe_handler+0x13A : 1e19d1c >			  ## ll_adv.c:693:20
 1e19d0e:    00 f6 00 b0       	r0 = [r11 + 0]
 1e19d12:    e1 70             	r1 = 14
 1e19d14:    03 70             	r3 = 0
 1e19d16:    42 08             	r2 = r4
 1e19d18:    bf f3 ce e2       	call -14948 <le_hw_ioctrl : 1e162b8 >
 1e19d1c:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:513:9
 1e19d1e:    20 fd 30 09       	r0 = r0 & 48			  ## ll_adv.c:513:9
 1e19d22:    00 e1 02 10       	if (r0 != 16) goto 4 <adv_rx_probe_handler+0x148 : 1e19d2a >			  ## ll_adv.c:513:9
 1e19d26:    a0 68             	r0 = b[r4 + 10] (u)			  ## ll_adv.c:513:9
 1e19d28:    01 20             	if (r0 == 0) goto 2 <adv_rx_probe_handler+0x14A : 1e19d2c >			  ## ll_adv.c:513:9
 1e19d2a:    56 17             	call -340 <ll_thread_resume : 1e19bd8 >			  ## ll_adv.c:516:9
 1e19d2c:    5b 01             	{pc, r11-r4} = [sp++]			  ## ll_adv.c:518:1


ll_init:
 1e19d2e:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:3148:0
 1e19d30:    c6 ff e0 2d 00 00 	r6 = 11744 <ll_hdl : 2de0 >			  ## link_layer.c:3148:0
 1e19d36:    c0 ff 10 2e 00 00 	r0 = 11792 <pEvent_buf_static : 2e10 >			  ## link_layer.c:3170:28
 1e19d3c:    08 4c             	[r6 + 0] = r0			  ## link_layer.c:3170:28
 1e19d3e:    61 fc 24 00       	r1 = r6 + 36			  ## list.h:188:16
 1e19d42:    99 4c             	[r6 + 36] = r1			  ## list.h:188:16
 1e19d44:    a9 4c             	[r6 + 40] = r1			  ## list.h:189:16
 1e19d46:    c4 ff de 0e 00 00 	r4 = 3806 <le_param+0x22 : ede >			  ## list.h:189:16
 1e19d4c:    41 fc 76 00       	r1 = r4 + 118			  ## list.h:189:16
 1e19d50:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e19d52:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e19d54:    c2 92             	r2 = r1 + 12			  ## list.h:188:16
 1e19d56:    3a 42             	[r1 + 12] = r2			  ## list.h:188:16
 1e19d58:    4a 42             	[r1 + 16] = r2			  ## list.h:189:16
 1e19d5a:    c1 ff b4 0e 00 00 	r1 = 3764 <le_data_length.6 : eb4 >			  ## list.h:189:16
 1e19d60:    15 70             	r5 = 1
 1e19d62:    0d 62             	b[r1 + 0] = r5
 1e19d64:    c1 ff b8 0e 00 00 	r1 = 3768 <le_data_length.7 : eb8 >
 1e19d6a:    0d 62             	b[r1 + 0] = r5
 1e19d6c:    01 fb 00 02       	r1 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## link_layer.c:3190:24
 1e19d70:    bf f3 9b 66       	call -78538 <lbuf_init_btctrler : 1e06aaa >			  ## link_layer.c:3190:24
 1e19d74:    18 4c             	[r6 + 4] = r0			  ## link_layer.c:3190:22
 1e19d76:    02 30             	if (r0 != 0) goto 4 <ll_init+0x4E : 1e19d7c >			  ## link_layer.c:3190:22
 1e19d78:    8f f3 8d 4b       	call 2004762 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19d7c:    bf f3 c6 f2       	call -6772 <le_hw_init : 1e1830c >			  ## link_layer.c:3193:9
 1e19d80:    80 9c             	r0 = r6 + 8			  ## link_layer.c:3195:9
 1e19d82:    c1 ff 02 27 e1 01 	r1 = 31532802 <update_target_end+0x24D2 : 1e12702 >			  ## link_layer.c:3195:9
 1e19d88:    c2 ff f6 8f e1 01 	r2 = 31559670 <ll_thread_process : 1e18ff6 >			  ## link_layer.c:3195:9
 1e19d8e:    c3 ff f8 0d 00 00 	r3 = 3576 <bt_task_thread : df8 >			  ## link_layer.c:3195:9
 1e19d94:    bf f3 cf 66       	call -78434 <thread_create : 1e06b36 >			  ## link_layer.c:3195:9
 1e19d98:    00 70             	r0 = 0			  ## link_layer.c:3198:9
 1e19d9a:    38 58             	h[r4 + 6] = r0			  ## link_layer.c:3198:9
 1e19d9c:    28 58             	h[r4 + 4] = r0			  ## link_layer.c:3198:9
 1e19d9e:    c1 ff 10 0e 00 00 	r1 = 3600 <hci_param : e10 >			  ## link_layer.c:3198:9
 1e19da4:    82 52             	r2 = h[r1 + 16] (u)			  ## link_layer.c:3199:41
 1e19da6:    81 62             	r1 = b[r1 + 8] (u)			  ## link_layer.c:3200:41
 1e19da8:    18 58             	h[r4 + 2] = r0			  ## link_layer.c:3198:9
 1e19daa:    0d 58             	h[r4 + 0] = r5			  ## link_layer.c:3198:9
 1e19dac:    9a 58             	h[r4 + 18] = r2			  ## link_layer.c:3199:29
 1e19dae:    09 69             	b[r4 + 16] = r1			  ## link_layer.c:3200:29
 1e19db0:    60 70             	r0 = 6			  ## link_layer.c:3136:37
 1e19db2:    e8 69             	b[r4 + 30] = r0			  ## link_layer.c:3136:37
 1e19db4:    b0 71             	r0 = 27			  ## link_layer.c:3138:37
 1e19db6:    08 59             	h[r4 + 32] = r0			  ## link_layer.c:3138:37
 1e19db8:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:3213:1


ll_control_data_step_start:
 1e19dba:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:687:0
 1e19dbc:    02 fc c1 00       	r2 = r0 + 193			  ## link_layer.c:687:0
 1e19dc0:    03 64             	r3 = b[r2 + 0] (u)			  ## link_layer.c:688:39
 1e19dc2:    db c0             	r3 = r3 << 3			  ## link_layer.c:690:8
 1e19dc4:    03 09             	r3 += r0			  ## link_layer.c:690:8
 1e19dc6:    11 f6 98 30       	[r3 + 152] = r1			  ## link_layer.c:690:18
 1e19dca:    01 70             	r1 = 0			  ## link_layer.c:690:18
 1e19dcc:    11 f9 9c 30       	b[r3 + 156] = r1			  ## link_layer.c:691:16
 1e19dd0:    04 64             	r4 = b[r2 + 0] (u)			  ## link_layer.c:693:28
 1e19dd2:    13 98             	r3 = r4 + 1			  ## link_layer.c:693:91
 1e19dd4:    44 e0 01 00       	if (r4 == 4) goto 2 <ll_control_data_step_start+0x20 : 1e19dda >			  ## link_layer.c:693:91
 1e19dd8:    31 08             	r1 = r3			  ## link_layer.c:693:21
 1e19dda:    09 64             	b[r2 + 0] = r1			  ## link_layer.c:693:19
 1e19ddc:    01 70             	r1 = 0			  ## link_layer.c:704:5
 1e19dde:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:704:5
 1e19de0:    ff f3 1a f8       	goto -4044 <ll_send_control_data_state_machine : 1e18e18 >			  ## link_layer.c:704:5


ll_response_timeout_start:
 1e19de4:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1376:0
 1e19de6:    04 08             	r4 = r0			  ## link_layer.c:1376:0
 1e19de8:    45 fc 4c 01       	r5 = r4 + 332			  ## link_layer.c:1376:0
 1e19dec:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1378:15
 1e19dee:    03 20             	if (r0 == 0) goto 6 <ll_response_timeout_start+0x12 : 1e19df6 >			  ## link_layer.c:1378:15
 1e19df0:    40 08             	r0 = r4			  ## link_layer.c:1380:9
 1e19df2:    bf f3 cf f3       	call -6242 <ll_response_timeout_stop : 1e18594 >			  ## link_layer.c:1380:9
 1e19df6:    c0 ff 40 9c 00 00 	r0 = 40000 <BTCTLER_CODE_TOTAL+0x18A8 : 9c40 >			  ## link_layer.c:1382:30
 1e19dfc:    c1 ff 18 8d e1 01 	r1 = 31558936 <ll_response_timeout_handler : 1e18d18 >			  ## link_layer.c:1382:30
 1e19e02:    bf f3 41 66       	call -78718 <sys_timer_register : 1e06a88 >			  ## link_layer.c:1382:30
 1e19e06:    08 4a             	[r5 + 0] = r0			  ## link_layer.c:1382:28
 1e19e08:    03 30             	if (r0 != 0) goto 6 <ll_response_timeout_start+0x2C : 1e19e10 >			  ## link_layer.c:1382:28
 1e19e0a:    8f f3 44 4b       	call 2004616 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19e0e:    00 4a             	r0 = [r5 + 0]			  ## cpu.h:148:5
 1e19e10:    41 08             	r1 = r4			  ## link_layer.c:1386:5
 1e19e12:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:1386:5
 1e19e14:    ff f3 3c 66       	goto -78728 <sys_timer_set_context : 1e06a90 >			  ## link_layer.c:1386:5


ll_push_control_data:
 1e19e18:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:2640:0
 1e19e1a:    32 fd fc 0a       	r2 = r0 & 4294902783			  ## link_layer.c:2644:16
 1e19e1e:    23 fd fc 0a       	r3 = r0 & 64512			  ## link_layer.c:2643:24
 1e19e22:    14 08             	r4 = r1			  ## link_layer.c:2643:24
 1e19e24:    21 08             	r1 = r2			  ## link_layer.c:2643:9
 1e19e26:    20 ff 20 3a 01 00 	if (r3 == 8192) goto 2 <ll_push_control_data+0x16 : 1e19e2e >			  ## link_layer.c:2643:9
 1e19e2c:    01 08             	r1 = r0			  ## link_layer.c:2643:9
 1e19e2e:    20 fd fc 1a       	r0 = r1 & 64512			  ## link_layer.c:2647:24
 1e19e32:    20 ff f8 0a 01 00 	if (r0 == 63488) goto 2 <ll_push_control_data+0x22 : 1e19e3a >
 1e19e38:    12 08             	r2 = r1			  ## link_layer.c:2647:9
 1e19e3a:    15 70             	r5 = 1
 1e19e3c:    c6 ff 6d 27 e1 01 	r6 = 31532909 <update_target_end+0x253D : 1e1276d >
 1e19e42:    0c ff 82 20 20 00 	ifs (r2 > 130) goto 64 <.GJTIE850_0_0_+0x22 : 1e19e88 >			  ## link_layer.c:2651:5
 1e19e48:    20 fc ea ff       	r0 = r2 + -22
 1e19e4c:    50 e0 d4 80       	if (r0 > 5) goto 424 <.GJTIE850_0_0_+0x192 : 1e19ff8 >
 1e19e50:    41 c0             	r1 = r0 << 1
 1e19e52:    c7 ff bc 0e 00 00 	r7 = 3772 <le_param : ebc >
 1e19e58:    b1 00             	tbh [r1]


.GJTIL850_0_0_:
 1e19e5a:    06 00     < 6 : 0x6 >
 1e19e5c:    cf 00     < 207 : 0xCF >
 1e19e5e:    cf 00     < 207 : 0xCF >
 1e19e60:    49 00     < 73 : 0x49 >
 1e19e62:    66 00     < 102 : 0x66 >
 1e19e64:    81 00     < 129 : 0x81 >
 1e19e66:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2022:54
 1e19e68:    04 68             	r4 = b[r4 + 0] (u)			  ## link_layer.c:2022:54
 1e19e6a:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## link_layer.c:2022:54
 1e19e6e:    40 08             	r0 = r4			  ## link_layer.c:2022:28
 1e19e70:    bf f3 5a f3       	call -6476 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2022:28
 1e19e74:    b1 20             	if (r0 == 0) goto 354 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19e76:    14 f7 5c 70       	h[r7 + 92] = r4			  ## link_layer.c:2031:5
 1e19e7a:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:2033:9
 1e19e7e:    11 e0 ad 10       	if (r1 != 1) goto 346 <.GJTIE850_0_0_+0x176 : 1e19fdc >			  ## link_layer.c:2033:9
 1e19e82:    8f f3 08 4b       	call 2004496 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19e86:    b7 18             	goto 366 <.GJTIE850_0_0_+0x190 : 1e19ff6 >
 1e19e88:    0c ff 05 24 10 00 	ifs (r2 > 1029) goto 32 <.GJTIE850_0_0_+0x48 : 1e19eae >
 1e19e8e:    00 ff 83 20 76 00 	if (r2 == 131) goto 236 <.GJTIE850_0_0_+0x11A : 1e19f80 >
 1e19e94:    01 ff 84 20 af 00 	if (r2 != 132) goto 350 <.GJTIE850_0_0_+0x192 : 1e19ff8 >
 1e19e9a:    00 58             	r0 = h[r4 + 0] (u)			  ## link_layer.c:2628:31
 1e19e9c:    bf f3 44 f3       	call -6520 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2628:12
 1e19ea0:    9b 20             	if (r0 == 0) goto 310 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19ea2:    12 58             	r2 = h[r4 + 2] (u)			  ## link_layer.c:2633:55
 1e19ea4:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:2633:29
 1e19ea6:    71 71             	r1 = 23			  ## link_layer.c:2633:5
 1e19ea8:    bf f3 06 e2       	call -15348 <le_hw_ioctrl : 1e162b8 >			  ## link_layer.c:2633:5
 1e19eac:    a4 18             	goto 328 <.GJTIE850_0_0_+0x190 : 1e19ff6 >			  ## link_layer.c:2633:5
 1e19eae:    c7 ff 10 0e 00 00 	r7 = 3600 <hci_param : e10 >
 1e19eb4:    00 ff 06 24 73 00 	if (r2 == 1030) goto 230 <.GJTIE850_0_0_+0x13A : 1e19fa0 >
 1e19eba:    01 ff 1d 24 9c 00 	if (r2 != 1053) goto 312 <.GJTIE850_0_0_+0x192 : 1e19ff8 >
 1e19ec0:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2086:47
 1e19ec2:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2086:47
 1e19ec4:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2086:47
 1e19ec8:    bf f3 2e f3       	call -6564 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2086:28
 1e19ecc:    05 08             	r5 = r0			  ## link_layer.c:2086:28
 1e19ece:    84 2a             	if (r5 == 0) goto 264 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19ed0:    89 17             	call -238 <ll_response_timeout_start : 1e19de4 >			  ## link_layer.c:2095:5
 1e19ed2:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2097:5
 1e19ed4:    01 68             	r1 = b[r4 + 0] (u)			  ## link_layer.c:2097:5
 1e19ed6:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## link_layer.c:2097:5
 1e19eda:    11 f9 9b 70       	b[r7 + 155] = r1			  ## link_layer.c:2097:5
 1e19ede:    08 d2             	r0 = r1 >> 8			  ## link_layer.c:2097:5
 1e19ee0:    10 f9 9c 70       	b[r7 + 156] = r0			  ## link_layer.c:2097:5
 1e19ee4:    c1 ff dc 84 e1 01 	r1 = 31556828 <version_ind_steps : 1e184dc >			  ## link_layer.c:2099:5
 1e19eea:    83 18             	goto 262 <.GJTIE850_0_0_+0x18C : 1e19ff2 >			  ## link_layer.c:2099:5
 1e19eec:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2228:47
 1e19eee:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2228:47
 1e19ef0:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2228:47
 1e19ef4:    bf f3 18 f3       	call -6608 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2228:28
 1e19ef8:    05 08             	r5 = r0			  ## link_layer.c:2228:28
 1e19efa:    6e 2a             	if (r5 == 0) goto 220 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19efc:    00 f9 3d 50       	r0 = b[r5 + 61] (u)
 1e19f00:    10 e0 02 10       	if (r0 != 1) goto 4 <.GJTIE850_0_0_+0xA2 : 1e19f08 >
 1e19f04:    8f f3 c7 4a       	call 2004366 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19f08:    70 fc 5e 00       	r0 = r7 + 94			  ## link_layer.c:2239:5
 1e19f0c:    c2 71             	r2 = 28			  ## link_layer.c:2239:5
 1e19f0e:    41 08             	r1 = r4			  ## link_layer.c:2239:5
 1e19f10:    97 f3 e8 67       	call 3067856 <memcpy : 106ee4 >			  ## link_layer.c:2239:5
 1e19f14:    50 08             	r0 = r5			  ## link_layer.c:2241:5
 1e19f16:    66 17             	call -308 <ll_response_timeout_start : 1e19de4 >			  ## link_layer.c:2241:5
 1e19f18:    00 f9 93 50       	r0 = b[r5 + 147] (u)			  ## link_layer.c:2243:9
 1e19f1c:    63 20             	if (r0 == 0) goto 198 <.GJTIE850_0_0_+0x17E : 1e19fe4 >			  ## link_layer.c:2243:9
 1e19f1e:    c1 ff e2 84 e1 01 	r1 = 31556834 <restart_encryption_steps : 1e184e2 >			  ## link_layer.c:2244:9
 1e19f24:    66 18             	goto 204 <.GJTIE850_0_0_+0x18C : 1e19ff2 >			  ## link_layer.c:2244:9
 1e19f26:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2333:47
 1e19f28:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2333:47
 1e19f2a:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2333:47
 1e19f2e:    bf f3 fb f2       	call -6666 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2333:28
 1e19f32:    05 08             	r5 = r0			  ## link_layer.c:2333:28
 1e19f34:    51 2a             	if (r5 == 0) goto 162 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19f36:    00 f9 3d 50       	r0 = b[r5 + 61] (u)
 1e19f3a:    10 e0 02 00       	if (r0 == 1) goto 4 <.GJTIE850_0_0_+0xDC : 1e19f42 >
 1e19f3e:    8f f3 aa 4a       	call 2004308 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19f42:    70 fc 7a 00       	r0 = r7 + 122			  ## link_layer.c:2346:5
 1e19f46:    22 71             	r2 = 18			  ## link_layer.c:2346:5
 1e19f48:    41 08             	r1 = r4			  ## link_layer.c:2346:5
 1e19f4a:    97 f3 cb 67       	call 3067798 <memcpy : 106ee4 >			  ## link_layer.c:2346:5
 1e19f4e:    00 f9 93 50       	r0 = b[r5 + 147] (u)			  ## link_layer.c:2348:9
 1e19f52:    4c 20             	if (r0 == 0) goto 152 <.GJTIE850_0_0_+0x186 : 1e19fec >			  ## link_layer.c:2348:9
 1e19f54:    c1 ff 02 85 e1 01 	r1 = 31556866 <restart_encryption_req_steps : 1e18502 >			  ## link_layer.c:2349:9
 1e19f5a:    4b 18             	goto 150 <.GJTIE850_0_0_+0x18C : 1e19ff2 >			  ## link_layer.c:2349:9
 1e19f5c:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2371:47
 1e19f5e:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2371:47
 1e19f60:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2371:47
 1e19f64:    bf f3 e0 f2       	call -6720 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2371:28
 1e19f68:    02 08             	r2 = r0			  ## link_layer.c:2371:28
 1e19f6a:    36 24             	if (r2 == 0) goto 108 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19f6c:    00 f9 3d 20       	r0 = b[r2 + 61] (u)
 1e19f70:    10 e0 02 00       	if (r0 == 1) goto 4 <.GJTIE850_0_0_+0x112 : 1e19f78 >
 1e19f74:    8f f3 8f 4a       	call 2004254 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19f78:    d1 70             	r1 = 13			  ## link_layer.c:2382:5
 1e19f7a:    63 70             	r3 = 6			  ## link_layer.c:2382:5
 1e19f7c:    20 08             	r0 = r2			  ## link_layer.c:2382:5
 1e19f7e:    0c 18             	goto 24 <.GJTIE850_0_0_+0x132 : 1e19f98 >			  ## link_layer.c:2382:5
 1e19f80:    02 38             	if (r4 != 0) goto 4 <.GJTIE850_0_0_+0x120 : 1e19f86 >
 1e19f82:    8f f3 88 4a       	call 2004240 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e19f86:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2602:31
 1e19f88:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2602:31
 1e19f8a:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2602:31
 1e19f8e:    bf f3 cb f2       	call -6762 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2602:12
 1e19f92:    22 20             	if (r0 == 0) goto 68 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19f94:    23 68             	r3 = b[r4 + 2] (u)			  ## link_layer.c:2609:61
 1e19f96:    41 74             	r1 = 68			  ## link_layer.c:2609:5
 1e19f98:    62 08             	r2 = r6
 1e19f9a:    bf f3 16 f7       	call -4564 <ll_send_control_data : 1e18dca >
 1e19f9e:    2b 18             	goto 86 <.GJTIE850_0_0_+0x190 : 1e19ff6 >
 1e19fa0:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2435:47
 1e19fa2:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2435:47
 1e19fa4:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2435:47
 1e19fa8:    bf f3 be f2       	call -6788 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:2435:28
 1e19fac:    06 08             	r6 = r0			  ## link_layer.c:2435:28
 1e19fae:    14 2c             	if (r6 == 0) goto 40 <.GJTIE850_0_0_+0x172 : 1e19fd8 >
 1e19fb0:    00 f9 3c 60       	r0 = b[r6 + 60] (u)			  ## link_layer.c:2444:9
 1e19fb4:    70 b0             	r0 &= 4294967294			  ## link_layer.c:2444:9
 1e19fb6:    05 70             	r5 = 0			  ## link_layer.c:2444:9
 1e19fb8:    60 e0 1e 10       	if (r0 != 6) goto 60 <.GJTIE850_0_0_+0x192 : 1e19ff8 >			  ## link_layer.c:2444:9
 1e19fbc:    60 08             	r0 = r6			  ## link_layer.c:2445:9
 1e19fbe:    12 17             	call -476 <ll_response_timeout_start : 1e19de4 >			  ## link_layer.c:2445:9
 1e19fc0:    70 fc 9d 00       	r0 = r7 + 157			  ## link_layer.c:2447:9
 1e19fc4:    32 70             	r2 = 3			  ## link_layer.c:2447:9
 1e19fc6:    41 08             	r1 = r4			  ## link_layer.c:2447:9
 1e19fc8:    97 f3 8c 67       	call 3067672 <memcpy : 106ee4 >			  ## link_layer.c:2447:9
 1e19fcc:    c1 ff d6 84 e1 01 	r1 = 31556822 <disconnect_steps : 1e184d6 >			  ## link_layer.c:2449:9
 1e19fd2:    60 08             	r0 = r6			  ## link_layer.c:2449:9
 1e19fd4:    f2 16             	call -540 <ll_control_data_step_start : 1e19dba >			  ## link_layer.c:2449:9
 1e19fd6:    10 18             	goto 32 <.GJTIE850_0_0_+0x192 : 1e19ff8 >			  ## link_layer.c:2449:9
 1e19fd8:    25 70             	r5 = 2
 1e19fda:    0e 18             	goto 28 <.GJTIE850_0_0_+0x192 : 1e19ff8 >
 1e19fdc:    c1 ff d0 84 e1 01 	r1 = 31556816 <master_features_exchange_steps : 1e184d0 >			  ## link_layer.c:2040:9
 1e19fe2:    08 18             	goto 16 <.GJTIE850_0_0_+0x18E : 1e19ff4 >			  ## link_layer.c:2040:9
 1e19fe4:    c1 ff f6 84 e1 01 	r1 = 31556854 <start_encryption_steps : 1e184f6 >			  ## link_layer.c:2246:9
 1e19fea:    03 18             	goto 6 <.GJTIE850_0_0_+0x18C : 1e19ff2 >			  ## link_layer.c:2246:9
 1e19fec:    c1 ff 0a 85 e1 01 	r1 = 31556874 <start_encryption_req_steps : 1e1850a >			  ## link_layer.c:2351:9
 1e19ff2:    50 08             	r0 = r5
 1e19ff4:    e2 16             	call -572 <ll_control_data_step_start : 1e19dba >
 1e19ff6:    05 70             	r5 = 0
 1e19ff8:    50 08             	r0 = r5			  ## link_layer.c:2722:1
 1e19ffa:    57 01             	{pc, r7-r4} = [sp++]			  ## link_layer.c:2722:1


ll_adv_init:
 1e19ffc:    74 01             	[--sp] = {rets, r4}			  ## ll_adv.c:53:0
 1e19ffe:    c4 ff b0 0e 00 00 	r4 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:53:0
 1e1a004:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:54:9
 1e1a006:    07 30             	if (r0 != 0) goto 14 <ll_adv_init+0x1A : 1e1a016 >			  ## ll_adv.c:54:9
 1e1a008:    80 72             	r0 = 40			  ## ll_adv.c:61:14
 1e1a00a:    bf f3 70 63       	call -80160 <__bt_malloc : 1e066ee >			  ## ll_adv.c:61:14
 1e1a00e:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:61:12
 1e1a010:    02 30             	if (r0 != 0) goto 4 <ll_adv_init+0x1A : 1e1a016 >			  ## ll_adv.c:61:12
 1e1a012:    8f f3 40 4a       	call 2004096 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1a016:    54 01             	{pc, r4} = [sp++]			  ## ll_adv.c:64:1


ll_adv_set_params:
 1e1a018:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:589:0
 1e1a01a:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:589:0
 1e1a020:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:594:9
 1e1a022:    04 08             	r4 = r0			  ## ll_adv.c:594:9
 1e1a024:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_params+0x12 : 1e1a02a >			  ## ll_adv.c:594:9
 1e1a026:    ea 17             	call -44 <ll_adv_init : 1e19ffc >			  ## ll_adv.c:595:9
 1e1a028:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:595:9
 1e1a02a:    00 62             	r0 = b[r1 + 0] (u)			  ## ll_adv.c:601:17
 1e1a02c:    07 30             	if (r0 != 0) goto 14 <ll_adv_set_params+0x24 : 1e1a03c >			  ## ll_adv.c:601:17
 1e1a02e:    c0 ff 14 30 00 00 	r0 = 12308 <adv_param : 3014 >			  ## ll_adv.c:606:5
 1e1a034:    f2 70             	r2 = 15			  ## ll_adv.c:606:5
 1e1a036:    41 08             	r1 = r4			  ## ll_adv.c:606:5
 1e1a038:    97 f3 54 67       	call 3067560 <memcpy : 106ee4 >			  ## ll_adv.c:606:5
 1e1a03c:    55 01             	{pc, r5, r4} = [sp++]


ll_adv_set_adv_data:
 1e1a03e:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:614:0
 1e1a040:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:614:0
 1e1a046:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:619:9
 1e1a048:    04 08             	r4 = r0			  ## ll_adv.c:619:9
 1e1a04a:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_adv_data+0x12 : 1e1a050 >			  ## ll_adv.c:619:9
 1e1a04c:    d7 17             	call -82 <ll_adv_init : 1e19ffc >			  ## ll_adv.c:620:9
 1e1a04e:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:620:9
 1e1a050:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:623:44
 1e1a052:    c5 ff 23 30 00 00 	r5 = 12323 <adv_data.3078 : 3023 >
 1e1a058:    01 70             	r1 = 0			  ## ll_adv.c:625:5
 1e1a05a:    02 72             	r2 = 32			  ## ll_adv.c:625:5
 1e1a05c:    50 08             	r0 = r5			  ## ll_adv.c:625:5
 1e1a05e:    97 f3 47 67       	call 3067534 <memset : 106ef0 >			  ## ll_adv.c:625:5
 1e1a062:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:626:23
 1e1a064:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:626:21
 1e1a068:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:627:44
 1e1a06a:    11 98             	r1 = r4 + 1			  ## ll_adv.c:627:35
 1e1a06c:    50 08             	r0 = r5			  ## ll_adv.c:627:5
 1e1a06e:    97 f3 39 67       	call 3067506 <memcpy : 106ee4 >			  ## ll_adv.c:627:5
 1e1a072:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_adv_data+0x42 : 1e1a080 >			  ## ll_adv.c:627:5
 1e1a074:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:633:31
 1e1a076:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_adv_data+0x42 : 1e1a080 >			  ## ll_adv.c:633:31
 1e1a078:    51 71             	r1 = 21			  ## ll_adv.c:634:9
 1e1a07a:    42 08             	r2 = r4			  ## ll_adv.c:634:9
 1e1a07c:    bf f3 1c e1       	call -15816 <le_hw_ioctrl : 1e162b8 >			  ## ll_adv.c:634:9
 1e1a080:    56 01             	{pc, r6-r4} = [sp++]


ll_adv_set_scan_rsp_data:
 1e1a082:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:640:0
 1e1a084:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:640:0
 1e1a08a:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:645:9
 1e1a08c:    04 08             	r4 = r0			  ## ll_adv.c:645:9
 1e1a08e:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_scan_rsp_data+0x12 : 1e1a094 >			  ## ll_adv.c:645:9
 1e1a090:    b5 17             	call -150 <ll_adv_init : 1e19ffc >			  ## ll_adv.c:646:9
 1e1a092:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:646:9
 1e1a094:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:649:44
 1e1a096:    c5 ff 43 30 00 00 	r5 = 12355 <scan_resp_data : 3043 >
 1e1a09c:    01 70             	r1 = 0			  ## ll_adv.c:651:5
 1e1a09e:    02 72             	r2 = 32			  ## ll_adv.c:651:5
 1e1a0a0:    50 08             	r0 = r5			  ## ll_adv.c:651:5
 1e1a0a2:    97 f3 25 67       	call 3067466 <memset : 106ef0 >			  ## ll_adv.c:651:5
 1e1a0a6:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:652:29
 1e1a0a8:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:652:27
 1e1a0ac:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:653:50
 1e1a0ae:    11 98             	r1 = r4 + 1			  ## ll_adv.c:653:41
 1e1a0b0:    50 08             	r0 = r5			  ## ll_adv.c:653:5
 1e1a0b2:    97 f3 17 67       	call 3067438 <memcpy : 106ee4 >			  ## ll_adv.c:653:5
 1e1a0b6:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_scan_rsp_data+0x42 : 1e1a0c4 >			  ## ll_adv.c:653:5
 1e1a0b8:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:659:31
 1e1a0ba:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_scan_rsp_data+0x42 : 1e1a0c4 >			  ## ll_adv.c:659:31
 1e1a0bc:    61 71             	r1 = 22			  ## ll_adv.c:660:9
 1e1a0be:    42 08             	r2 = r4			  ## ll_adv.c:660:9
 1e1a0c0:    bf f3 fa e0       	call -15884 <le_hw_ioctrl : 1e162b8 >			  ## ll_adv.c:660:9
 1e1a0c4:    56 01             	{pc, r6-r4} = [sp++]


ll_adv_open:
 1e1a0c6:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:784:0
 1e1a0c8:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:784:0
 1e1a0ce:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:790:9
 1e1a0d0:    02 30             	if (r0 != 0) goto 4 <ll_adv_open+0x10 : 1e1a0d6 >			  ## ll_adv.c:790:9
 1e1a0d2:    94 17             	call -216 <ll_adv_init : 1e19ffc >			  ## ll_adv.c:791:9
 1e1a0d4:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:791:9
 1e1a0d6:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:796:44
 1e1a0d8:    01 20             	if (r0 == 0) goto 2 <ll_adv_open+0x16 : 1e1a0dc >
 1e1a0da:    55 01             	{pc, r5, r4} = [sp++]
 1e1a0dc:    80 71             	r0 = 24			  ## ll_adv.c:803:16
 1e1a0de:    bf f3 06 63       	call -80372 <__bt_malloc : 1e066ee >			  ## ll_adv.c:803:16
 1e1a0e2:    04 08             	r4 = r0			  ## ll_adv.c:803:16
 1e1a0e4:    fa 29             	if (r4 == 0) goto -12 <ll_adv_open+0x14 : 1e1a0da >			  ## ll_adv.c:803:16
 1e1a0e6:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:810:5
 1e1a0e8:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:810:22
 1e1a0ea:    bf f3 7d e5       	call -13574 <le_hw_open : 1e16be8 >			  ## ll_adv.c:812:20
 1e1a0ee:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:812:18
 1e1a0f0:    f4 21             	if (r0 == 0) goto -24 <ll_adv_open+0x14 : 1e1a0da >			  ## ll_adv.c:812:18
 1e1a0f2:    00 40             	r0 = [r0 + 0]
 1e1a0f4:    c2 ff 14 85 e1 01 	r2 = 31556884 <adv_handler : 1e18514 >			  ## ll_adv.c:820:5
 1e1a0fa:    41 08             	r1 = r4			  ## ll_adv.c:820:5
 1e1a0fc:    bf f3 2d e5       	call -13734 <le_hw_handler_register : 1e16b5a >			  ## ll_adv.c:820:5
 1e1a100:    40 08             	r0 = r4			  ## ll_adv.c:826:18
 1e1a102:    c8 14             	call -1648 <__set_ll_adv_state : 1e19a94 >			  ## ll_adv.c:826:18
 1e1a104:    ea 31             	if (r0 != 0) goto -44 <ll_adv_open+0x14 : 1e1a0da >
 1e1a106:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:837:5
 1e1a108:    11 70             	r1 = 1			  ## ll_adv.c:837:20
 1e1a10a:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:837:20
 1e1a10c:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_adv.c:837:20


ll_send_acl_packet:
 1e1a10e:    7c 01             	[--sp] = {rets, r12-r4}			  ## link_layer.c:1006:0
 1e1a110:    fe 0b             	sp += -4			  ## link_layer.c:1006:0
 1e1a112:    25 08             	r5 = r2			  ## link_layer.c:1006:0
 1e1a114:    14 08             	r4 = r1			  ## link_layer.c:1006:0
 1e1a116:    bf f3 07 f2       	call -7154 <ll_link_for_handle : 1e18528 >			  ## link_layer.c:1009:12
 1e1a11a:    09 08             	r9 = r0			  ## link_layer.c:1009:12
 1e1a11c:    55 20             	if (r0 == 0) goto 170 <ll_send_acl_packet+0xBA : 1e1a1c8 >
 1e1a11e:    08 fc 40 00       	r8 = r0 + 64			  ## link_layer.c:1017:26
 1e1a122:    01 70             	r1 = 0			  ## link_layer.c:1017:5
 1e1a124:    06 70             	r6 = 0			  ## link_layer.c:1017:5
 1e1a126:    80 08             	r0 = r8			  ## link_layer.c:1017:5
 1e1a128:    97 f3 7c 66       	call 3067128 <os_mutex_pend : 106e24 >			  ## link_layer.c:1017:5
 1e1a12c:    0a f9 01 40       	r10 = b[r4 + 1] (u)			  ## link_layer.c:1021:15
 1e1a130:    c0 70             	r0 = 12			  ## link_layer.c:1038:19
 1e1a132:    bf f3 dc 62       	call -80456 <__bt_malloc : 1e066ee >			  ## link_layer.c:1038:19
 1e1a136:    0c 08             	r12 = r0			  ## link_layer.c:1038:19
 1e1a138:    02 30             	if (r0 != 0) goto 4 <ll_send_acl_packet+0x30 : 1e1a13e >			  ## link_layer.c:1038:19
 1e1a13a:    8f f3 ac 49       	call 2003800 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1a13e:    16 f9 08 c0       	b[r12 + 8] = r6			  ## link_layer.c:1040:38
 1e1a142:    96 fc 74 01       	r6 = r9 + 372			  ## link_layer.c:1040:38
 1e1a146:    07 5c             	r7 = h[r6 + 0] (u)			  ## link_layer.c:1042:47
 1e1a148:    80 5c             	r0 = h[r6 + 16] (u)			  ## link_layer.c:1043:48
 1e1a14a:    9b fc 04 01       	r11 = r9 + 260			  ## link_layer.c:1043:48
 1e1a14e:    07 f2 04 10       	if (r7 != r0) goto 8 <ll_send_acl_packet+0x4C : 1e1a15a >			  ## link_layer.c:1043:48
 1e1a152:    08 18             	goto 16 <ll_send_acl_packet+0x56 : 1e1a164 >			  ## link_layer.c:1043:48
 1e1a154:    10 70             	r0 = 1			  ## link_layer.c:1046:13
 1e1a156:    97 f3 2f 66       	call 3066974 <os_time_dly : 106db8 >			  ## link_layer.c:1046:13
 1e1a15a:    00 f6 00 b0       	r0 = [r11 + 0]
 1e1a15e:    b0 f2 f9 1f       	if (r0 != r11) goto -14 <ll_send_acl_packet+0x46 : 1e1a154 >
 1e1a162:    8f 5c             	h[r6 + 16] = r7			  ## link_layer.c:1048:48
 1e1a164:    44 80             	r4 += 4			  ## link_layer.c:1031:36
 1e1a166:    05 18             	goto 10 <ll_send_acl_packet+0x64 : 1e1a172 >
 1e1a168:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1059:42
 1e1a16c:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1060:59
 1e1a16e:    21 70             	r1 = 2			  ## link_layer.c:1059:13
 1e1a170:    0d 18             	goto 26 <ll_send_acl_packet+0x7E : 1e1a18c >			  ## link_layer.c:1059:13
 1e1a172:    71 08             	r1 = r7			  ## link_layer.c:1053:30
 1e1a174:    75 f2 01 c0       	ifs (r5 > r7) goto 2 <ll_send_acl_packet+0x6C : 1e1a17a >			  ## link_layer.c:1053:30
 1e1a178:    51 08             	r1 = r5			  ## link_layer.c:1053:30
 1e1a17a:    24 f3 03 a0       	if ((r10 & 16) != 0) goto 6 <ll_send_acl_packet+0x76 : 1e1a184 >
 1e1a17e:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1057:52
 1e1a182:    f2 21             	if (r0 == 0) goto -28 <ll_send_acl_packet+0x5A : 1e1a168 >			  ## link_layer.c:1057:52
 1e1a184:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1063:42
 1e1a188:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1064:59
 1e1a18a:    11 70             	r1 = 1			  ## link_layer.c:1063:13
 1e1a18c:    0f 02             	[sp] = r7
 1e1a18e:    42 08             	r2 = r4
 1e1a190:    63 08             	r3 = r6
 1e1a192:    bf f3 3c f1       	call -7560 <le_hw_send_packet : 1e1840e >
 1e1a196:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1069:41
 1e1a19a:    10 80             	r0 += 1			  ## link_layer.c:1069:41
 1e1a19c:    10 f9 08 c0       	b[r12 + 8] = r0			  ## link_layer.c:1069:41
 1e1a1a0:    a5 bb             	r5 = r5 - r6			  ## link_layer.c:1068:38
 1e1a1a2:    64 09             	r4 += r6			  ## link_layer.c:1067:31
 1e1a1a4:    e6 3b             	if (r5 != 0) goto -52 <ll_send_acl_packet+0x64 : 1e1a172 >
 1e1a1a6:    97 f3 f9 65       	call 3066866 <local_irq_disable : 106d9c >			  ## link_layer.c:1074:5
 1e1a1aa:    00 f6 04 b0       	r0 = [r11 + 4]			  ## list.h:154:28
 1e1a1ae:    1c f6 04 b0       	[r11 + 4] = r12			  ## list.h:137:16
 1e1a1b2:    1b f6 00 c0       	[r12 + 0] = r11			  ## list.h:138:16
 1e1a1b6:    10 f6 04 c0       	[r12 + 4] = r0			  ## list.h:139:16
 1e1a1ba:    1c f6 00 00       	[r0 + 0] = r12			  ## list.h:140:16
 1e1a1be:    97 f3 eb 65       	call 3066838 <local_irq_enable : 106d98 >			  ## link_layer.c:1076:5
 1e1a1c2:    80 08             	r0 = r8			  ## link_layer.c:1079:5
 1e1a1c4:    97 f3 30 66       	call 3066976 <os_mutex_post : 106e28 >			  ## link_layer.c:1079:5
 1e1a1c8:    02 0a             	sp += 4
 1e1a1ca:    5c 01             	{pc, r12-r4} = [sp++]			  ## link_layer.c:1080:1


__conn_master_rx_post_handler:
 1e1a1cc:    34 00             	[--sp] = rets			  ## ll_master.c:561:0
 1e1a1ce:    42 52             	r2 = h[r1 + 8] (u)			  ## ll_master.c:564:17
 1e1a1d0:    92 c6             	r2 = r2 << 26			  ## ll_master.c:564:5
 1e1a1d2:    22 fd c0 2c       	r2 = r2 & 3221225472			  ## ll_master.c:564:17
 1e1a1d6:    42 fb c0 2c       	r2 = r2 + 3221225472			  ## ll_master.c:564:5
 1e1a1da:    92 df             	r2 = r2 >>> 30			  ## ll_master.c:564:5
 1e1a1dc:    02 e0 02 b0       	ifs (r2 < 0) goto 4 <__conn_master_rx_post_handler+0x18 : 1e1a1e4 >			  ## ll_master.c:564:5
 1e1a1e0:    bf f3 23 f8       	call -4026 <conn_rx_acl_u_post_handler : 1e1922a >			  ## ll_master.c:570:9
 1e1a1e4:    30 00             	pc = [sp++]			  ## ll_master.c:578:1


ll_update_send_data_handle:
 1e1a1e6:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_slave.c:408:0
 1e1a1e8:    fa 0b             	sp += -12			  ## ll_slave.c:408:0
 1e1a1ea:    c6 ff e0 2d 00 00 	r6 = 11744 <ll_hdl : 2de0 >			  ## ll_slave.c:408:0
 1e1a1f0:    07 f9 22 60       	r7 = b[r6 + 34] (u)			  ## link_layer.c:742:17
 1e1a1f4:    14 08             	r4 = r1			  ## link_layer.c:742:17
 1e1a1f6:    05 08             	r5 = r0
 1e1a1f8:    17 2e             	if (r7 == 0) goto 46 <ll_update_send_data_handle+0x42 : 1e1a228 >
 1e1a1fa:    90 4c             	r0 = [r6 + 36]
 1e1a1fc:    61 fc 24 00       	r1 = r6 + 36
 1e1a200:    10 f2 12 00       	if (r0 == r1) goto 36 <ll_update_send_data_handle+0x42 : 1e1a228 >
 1e1a204:    86 60             	r6 = b[r0 + 8] (u)			  ## link_layer.c:748:19
 1e1a206:    76 e0 04 00       	if (r6 == 7) goto 8 <ll_update_send_data_handle+0x2C : 1e1a212 >			  ## link_layer.c:748:13
 1e1a20a:    00 40             	r0 = [r0 + 0]
 1e1a20c:    10 f2 fa 1f       	if (r0 != r1) goto -12 <ll_update_send_data_handle+0x1E : 1e1a204 >
 1e1a210:    0b 18             	goto 22 <ll_update_send_data_handle+0x42 : 1e1a228 >
 1e1a212:    2b 02             	[sp+8] = r3			  ## ll_slave.c:403:5
 1e1a214:    1a 02             	[sp+4] = r2			  ## ll_slave.c:403:5
 1e1a216:    c0 8c             	r0 += -52			  ## ll_slave.c:403:5
 1e1a218:    c2 ff 7c 27 e1 01 	r2 = 31532924 <update_target_end+0x254C : 1e1277c >			  ## ll_slave.c:403:5
 1e1a21e:    61 74             	r1 = 70			  ## ll_slave.c:403:5
 1e1a220:    0c 02             	[sp] = r4			  ## ll_slave.c:403:5
 1e1a222:    53 08             	r3 = r5			  ## ll_slave.c:403:5
 1e1a224:    bf f3 d1 f5       	call -5214 <ll_send_control_data : 1e18dca >			  ## ll_slave.c:403:5
 1e1a228:    06 0a             	sp += 12
 1e1a22a:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_slave.c:416:1


create_param_default:
 1e1a22c:    0b 00             	ssync
 1e1a22e:    0b 00             	ssync
 1e1a230:    00 00             	nop
 1e1a232:    00 00             	nop
 1e1a234:    00 00             	nop
 1e1a236:    00 00             	nop
 1e1a238:    00 06             	r0 = -32
 1e1a23a:    00 20             	if (r0 == 0) goto 0 <create_param_default+0x10 : 1e1a23c >
 1e1a23c:    00 00             	nop
 1e1a23e:    00 80             	r0 += 0
 1e1a240:    01 01             	{r3-r1} = [sp++]
 1e1a242:    00 01             	{r3-r0} = [sp++]
 1e1a244:    00 00             	nop


le_controller_get_mac:
 1e1a246:    c1 ff c4 0e 00 00 	r1 = 3780 <le_param+0x8 : ec4 >			  ## hci_ll_cmds.c:611:0
 1e1a24c:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e1a24e:    d7 f3 49 66       	goto 3067026 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5


ll_hci_destory:
 1e1a252:    ff f3 37 f2       	goto -7058 <ll_destroy : 1e186c4 >			  ## hci_ll.c:63:0


le_controller_set_mac:
 1e1a256:    01 08             	r1 = r0			  ## hci_ll_cmds.c:602:0
 1e1a258:    c0 ff c4 0e 00 00 	r0 = 3780 <le_param+0x8 : ec4 >			  ## hci_ll_cmds.c:606:5
 1e1a25e:    62 70             	r2 = 6			  ## hci_ll_cmds.c:606:5
 1e1a260:    d7 f3 40 66       	goto 3067008 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:606:5


ll_hci_set_event_mask:
 1e1a264:    c0 ff bc 0e 00 00 	r0 = 3772 <le_param : ebc >			  ## hci_ll.c:72:0
 1e1a26a:    c1 ff 07 f8 bf 3d 	r1 = 1035991047 <uECC_vli_cmp_unsafe+0x1AF880B : 1bff807 >			  ## hci_ll.c:73:5
 1e1a270:    19 40             	[r0 + 4] = r1			  ## hci_ll.c:73:5
 1e1a272:    c1 ff ff ff fb ff 	r1 = 4294705151 <bank_code_load_addr+0x1A13EB : 1fbffff >			  ## hci_ll.c:73:5
 1e1a278:    09 40             	[r0 + 0] = r1			  ## hci_ll.c:73:5
 1e1a27a:    20 00             	rts			  ## hci_ll.c:74:1


ll_hci_get_acl_data_len:
 1e1a27c:    c0 ff bc 0e 00 00 	r0 = 3772 <le_param : ebc >			  ## hci_ll.c:146:0
 1e1a282:    00 f7 42 00       	r0 = h[r0 + 66] (u)			  ## hci_ll.c:147:5
 1e1a286:    20 00             	rts			  ## hci_ll.c:147:5


ll_hci_get_acl_total_num:
 1e1a288:    c0 ff bc 0e 00 00 	r0 = 3772 <le_param : ebc >			  ## hci_ll.c:151:0
 1e1a28e:    00 f9 40 00       	r0 = b[r0 + 64] (u)			  ## hci_ll.c:152:21
 1e1a292:    20 00             	rts			  ## hci_ll.c:152:5


hci_ll_get_device_address:
 1e1a294:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:687:0
 1e1a296:    c2 ff 68 0f 00 00 	r2 = 3944 <config_hci_ll_param.0 : f68 >			  ## hci_ll.c:690:29
 1e1a29c:    02 64             	r2 = b[r2 + 0] (u)			  ## hci_ll.c:690:29
 1e1a29e:    04 08             	r4 = r0			  ## hci_ll.c:690:29
 1e1a2a0:    20 fd 01 29       	r0 = r2 & 1
 1e1a2a4:    90 b0             	r0 |= 2			  ## hci_ll.c:690:51
 1e1a2a6:    c3 ff c4 0e 00 00 	r3 = 3780 <le_param+0x8 : ec4 >			  ## hci_ll.c:690:51
 1e1a2ac:    20 e0 07 10       	if (r0 != 2) goto 14 <hci_ll_get_device_address+0x2A : 1e1a2be >			  ## hci_ll.c:690:51
 1e1a2b0:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e1a2b2:    10 08             	r0 = r1			  ## hci_ll_cmds.c:612:5
 1e1a2b4:    31 08             	r1 = r3			  ## hci_ll_cmds.c:612:5
 1e1a2b6:    97 f3 15 66       	call 3066922 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5
 1e1a2ba:    00 70             	r0 = 0			  ## hci_ll_cmds.c:612:5
 1e1a2bc:    07 18             	goto 14 <hci_ll_get_device_address+0x38 : 1e1a2cc >			  ## hci_ll_cmds.c:612:5
 1e1a2be:    63 80             	r3 += 6			  ## hci_ll_cmds.c:627:5
 1e1a2c0:    62 70             	r2 = 6			  ## hci_ll_cmds.c:627:5
 1e1a2c2:    10 08             	r0 = r1			  ## hci_ll_cmds.c:627:5
 1e1a2c4:    31 08             	r1 = r3			  ## hci_ll_cmds.c:627:5
 1e1a2c6:    97 f3 0d 66       	call 3066906 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:627:5
 1e1a2ca:    10 70             	r0 = 1			  ## hci_ll_cmds.c:627:5
 1e1a2cc:    08 68             	b[r4 + 0] = r0			  ## hci_ll.c:692:20
 1e1a2ce:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:697:1


ll_hci_connection_update:
 1e1a2d0:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_ll.c:301:0
 1e1a2d2:    f4 0b             	sp += -24			  ## hci_ll.c:301:0
 1e1a2d4:    14 08             	r4 = r1			  ## hci_ll.c:301:0
 1e1a2d6:    05 08             	r5 = r0			  ## hci_ll.c:301:0
 1e1a2d8:    c0 02             	r0 = [sp+48]			  ## hci_ll.c:301:0
 1e1a2da:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:301:0
 1e1a2dc:    a6 02             	r6 = [sp+40]			  ## hci_ll.c:301:0
 1e1a2de:    58 02             	[sp+20] = r0			  ## hci_ll.c:303:5
 1e1a2e0:    49 02             	[sp+16] = r1			  ## hci_ll.c:303:5
 1e1a2e2:    3e 02             	[sp+12] = r6			  ## hci_ll.c:303:5
 1e1a2e4:    2b 02             	[sp+8] = r3			  ## hci_ll.c:303:5
 1e1a2e6:    1a 02             	[sp+4] = r2			  ## hci_ll.c:303:5
 1e1a2e8:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:303:5
 1e1a2ee:    81 70             	r1 = 8			  ## hci_ll.c:303:5
 1e1a2f0:    02 fb 13 20       	r2 = 8211 <att_ram_buffer+0x2CF : 2013 >			  ## hci_ll.c:303:5
 1e1a2f4:    0c 02             	[sp] = r4			  ## hci_ll.c:303:5
 1e1a2f6:    53 08             	r3 = r5			  ## hci_ll.c:303:5
 1e1a2f8:    bf f3 a9 db       	call -18606 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:303:5
 1e1a2fc:    0c 0a             	sp += 24			  ## hci_ll.c:303:5
 1e1a2fe:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_ll.c:303:5


ll_hci_private_free_dma_rx:
 1e1a300:    00 8f             	r0 += -16			  ## hci_ll.c:672:0
 1e1a302:    ff f3 9f 3a       	goto -101058 <hw_dma_free : 1e01844 >			  ## hci_ll.c:675:5


ll_hci_adv_enable:
 1e1a306:    03 08             	r3 = r0			  ## hci_ll.c:182:0
 1e1a308:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:183:5
 1e1a30e:    21 70             	r1 = 2			  ## hci_ll.c:183:5
 1e1a310:    02 fb 0a 20       	r2 = 8202 <att_ram_buffer+0x2C6 : 200a >			  ## hci_ll.c:183:5
 1e1a314:    ff f3 9b db       	goto -18634 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:183:5


ll_hci_adv_set_params:
 1e1a318:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:79:0
 1e1a31a:    fa 0b             	sp += -12			  ## hci_ll.c:79:0
 1e1a31c:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:79:0
 1e1a31e:    25 08             	r5 = r2			  ## hci_ll.c:79:0
 1e1a320:    0b 08             	r11 = r0			  ## hci_ll.c:79:0
 1e1a322:    50 6c             	r0 = b[r6 + 5] (u)			  ## hci_ll.c:87:5
 1e1a324:    09 f5 38 00       	r9 = [sp+56]			  ## hci_ll.c:87:5
 1e1a328:    c7 ff 68 0f 00 00 	r7 = 3944 <config_hci_ll_param.0 : f68 >			  ## hci_ll.c:90:63
 1e1a32e:    0c f9 00 70       	r12 = b[r7 + 0] (u)			  ## hci_ll.c:90:63
 1e1a332:    08 f9 00 60       	r8 = b[r6 + 0] (u)			  ## hci_ll.c:97:5
 1e1a336:    0a f9 02 60       	r10 = b[r6 + 2] (u)			  ## hci_ll.c:87:5
 1e1a33a:    12 6c             	r2 = b[r6 + 1] (u)			  ## hci_ll.c:87:5
 1e1a33c:    44 6c             	r4 = b[r6 + 4] (u)			  ## hci_ll.c:87:5
 1e1a33e:    36 6c             	r6 = b[r6 + 3] (u)			  ## hci_ll.c:87:5
 1e1a340:    c8 fd 40 09       	r0 <= insert(r9, p:8, l:8)			  ## hci_ll.c:89:41
 1e1a344:    82 fd 10 7c       	r7 = uextra(r12, p:2, l:2)			  ## hci_ll.c:90:63
 1e1a348:    c2 fd 80 07       	r0 <= insert(r7, p:16, l:2)			  ## hci_ll.c:90:41
 1e1a34c:    28 02             	[sp+8] = r0			  ## hci_ll.c:99:5
 1e1a34e:    c8 fd 40 64       	r6 <= insert(r4, p:8, l:8)			  ## hci_ll.c:87:5
 1e1a352:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:87:5
 1e1a356:    d0 fd 80 26       	r2 <= insert(r6, p:16, l:16)			  ## hci_ll.c:87:5
 1e1a35a:    1a 02             	[sp+4] = r2			  ## hci_ll.c:99:5
 1e1a35c:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## hci_ll.c:97:5
 1e1a360:    c8 fd c0 58       	r5 <= insert(r8, p:24, l:8)			  ## hci_ll.c:97:5
 1e1a364:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:97:5
 1e1a368:    c2 fd 40 50       	r5 <= insert(r0, p:8, l:2)			  ## hci_ll.c:97:5
 1e1a36c:    d0 fd 80 b1       	r11 <= insert(r1, p:16, l:16)			  ## hci_ll.c:97:5
 1e1a370:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:99:5
 1e1a376:    61 70             	r1 = 6			  ## hci_ll.c:99:5
 1e1a378:    02 fb 06 20       	r2 = 8198 <att_ram_buffer+0x2C2 : 2006 >			  ## hci_ll.c:99:5
 1e1a37c:    0d 02             	[sp] = r5			  ## hci_ll.c:99:5
 1e1a37e:    b3 08             	r3 = r11			  ## hci_ll.c:99:5
 1e1a380:    bf f3 65 db       	call -18742 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:99:5
 1e1a384:    06 0a             	sp += 12			  ## hci_ll.c:99:5
 1e1a386:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:101:1


ll_hci_adv_set_data:
 1e1a388:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_ll.c:110:0
 1e1a38a:    e2 0b             	sp += -60			  ## hci_ll.c:110:0
 1e1a38c:    14 08             	r4 = r1			  ## hci_ll.c:110:0
 1e1a38e:    05 08             	r5 = r0			  ## hci_ll.c:110:0
 1e1a390:    c6 a1             	r6 = sp + 28			  ## hci_ll.c:110:0
 1e1a392:    01 70             	r1 = 0			  ## hci_ll.c:111:21
 1e1a394:    02 72             	r2 = 32			  ## hci_ll.c:111:21
 1e1a396:    60 08             	r0 = r6			  ## hci_ll.c:111:21
 1e1a398:    97 f3 aa 65       	call 3066708 <memset : 106ef0 >			  ## hci_ll.c:111:21
 1e1a39c:    d5 f5 1c 00       	b[sp+28] = r5			  ## hci_ll.c:112:18
 1e1a3a0:    00 fd 01 69       	r0 = r6 | 1			  ## hci_ll.c:115:5
 1e1a3a4:    41 08             	r1 = r4			  ## hci_ll.c:115:5
 1e1a3a6:    52 08             	r2 = r5			  ## hci_ll.c:115:5
 1e1a3a8:    97 f3 9c 65       	call 3066680 <memcpy : 106ee4 >			  ## hci_ll.c:115:5
 1e1a3ac:    73 02             	r3 = [sp+28]			  ## hci_ll.c:117:5
 1e1a3ae:    84 02             	r4 = [sp+32]			  ## hci_ll.c:117:5
 1e1a3b0:    90 02             	r0 = [sp+36]			  ## hci_ll.c:117:5
 1e1a3b2:    a1 02             	r1 = [sp+40]			  ## hci_ll.c:117:5
 1e1a3b4:    b2 02             	r2 = [sp+44]			  ## hci_ll.c:117:5
 1e1a3b6:    c5 02             	r5 = [sp+48]			  ## hci_ll.c:117:5
 1e1a3b8:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:117:5
 1e1a3ba:    e7 02             	r7 = [sp+56]			  ## hci_ll.c:117:5
 1e1a3bc:    6f 02             	[sp+24] = r7			  ## hci_ll.c:117:5
 1e1a3be:    5e 02             	[sp+20] = r6			  ## hci_ll.c:117:5
 1e1a3c0:    4d 02             	[sp+16] = r5			  ## hci_ll.c:117:5
 1e1a3c2:    3a 02             	[sp+12] = r2			  ## hci_ll.c:117:5
 1e1a3c4:    29 02             	[sp+8] = r1			  ## hci_ll.c:117:5
 1e1a3c6:    18 02             	[sp+4] = r0			  ## hci_ll.c:117:5
 1e1a3c8:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:117:5
 1e1a3ce:    a1 70             	r1 = 10			  ## hci_ll.c:117:5
 1e1a3d0:    02 fb 08 20       	r2 = 8200 <att_ram_buffer+0x2C4 : 2008 >			  ## hci_ll.c:117:5
 1e1a3d4:    0c 02             	[sp] = r4			  ## hci_ll.c:117:5
 1e1a3d6:    bf f3 3a db       	call -18828 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:117:5
 1e1a3da:    1e 0a             	sp += 60			  ## hci_ll.c:117:5
 1e1a3dc:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_ll.c:119:1


ll_hci_adv_scan_response_set_data:
 1e1a3de:    7f 01             	[--sp] = {rets, r15-r4}			  ## hci_ll.c:123:0
 1e1a3e0:    c0 0b             	sp += -128			  ## hci_ll.c:123:0
 1e1a3e2:    02 08             	r2 = r0			  ## hci_ll.c:123:0
 1e1a3e4:    7a 03             	[sp+92] = r2			  ## hci_ll.c:127:5
 1e1a3e6:    00 a6             	r0 = sp + 96			  ## hci_ll.c:127:5
 1e1a3e8:    97 f3 7c 65       	call 3066616 <memcpy : 106ee4 >			  ## hci_ll.c:127:5
 1e1a3ec:    c0 f5 7e 00       	r0 = b[sp+126] (u)			  ## hci_ll.c:133:5
 1e1a3f0:    d8 02             	[sp+52] = r0			  ## hci_ll.c:133:5
 1e1a3f2:    cb f5 7d 00       	r11 = b[sp+125] (u)			  ## hci_ll.c:133:5
 1e1a3f6:    c0 f5 7c 00       	r0 = b[sp+124] (u)			  ## hci_ll.c:133:5
 1e1a3fa:    c8 02             	[sp+48] = r0			  ## hci_ll.c:133:5
 1e1a3fc:    c3 f5 7b 00       	r3 = b[sp+123] (u)			  ## hci_ll.c:133:5
 1e1a400:    c0 f5 62 00       	r0 = b[sp+98] (u)			  ## hci_ll.c:133:5
 1e1a404:    68 03             	[sp+88] = r0			  ## hci_ll.c:133:5
 1e1a406:    80 f5 60 00       	r0 = h[sp+96] (u)			  ## hci_ll.c:133:5
 1e1a40a:    58 03             	[sp+84] = r0			  ## hci_ll.c:133:5
 1e1a40c:    c0 f5 64 00       	r0 = b[sp+100] (u)			  ## hci_ll.c:133:5
 1e1a410:    48 03             	[sp+80] = r0			  ## hci_ll.c:133:5
 1e1a412:    cd f5 63 00       	r13 = b[sp+99] (u)			  ## hci_ll.c:133:5
 1e1a416:    c0 f5 66 00       	r0 = b[sp+102] (u)			  ## hci_ll.c:133:5
 1e1a41a:    38 03             	[sp+76] = r0			  ## hci_ll.c:133:5
 1e1a41c:    c0 f5 65 00       	r0 = b[sp+101] (u)			  ## hci_ll.c:133:5
 1e1a420:    28 03             	[sp+72] = r0			  ## hci_ll.c:133:5
 1e1a422:    c0 f5 68 00       	r0 = b[sp+104] (u)			  ## hci_ll.c:133:5
 1e1a426:    18 03             	[sp+68] = r0			  ## hci_ll.c:133:5
 1e1a428:    c8 f5 67 00       	r8 = b[sp+103] (u)			  ## hci_ll.c:133:5
 1e1a42c:    c0 f5 6a 00       	r0 = b[sp+106] (u)			  ## hci_ll.c:133:5
 1e1a430:    08 03             	[sp+64] = r0			  ## hci_ll.c:133:5
 1e1a432:    c0 f5 69 00       	r0 = b[sp+105] (u)			  ## hci_ll.c:133:5
 1e1a436:    b8 02             	[sp+44] = r0			  ## hci_ll.c:133:5
 1e1a438:    c0 f5 6c 00       	r0 = b[sp+108] (u)			  ## hci_ll.c:133:5
 1e1a43c:    f8 02             	[sp+60] = r0			  ## hci_ll.c:133:5
 1e1a43e:    c6 f5 6b 00       	r6 = b[sp+107] (u)			  ## hci_ll.c:133:5
 1e1a442:    c0 f5 6e 00       	r0 = b[sp+110] (u)			  ## hci_ll.c:133:5
 1e1a446:    e8 02             	[sp+56] = r0			  ## hci_ll.c:133:5
 1e1a448:    cc f5 6d 00       	r12 = b[sp+109] (u)			  ## hci_ll.c:133:5
 1e1a44c:    c0 f5 70 00       	r0 = b[sp+112] (u)			  ## hci_ll.c:133:5
 1e1a450:    a8 02             	[sp+40] = r0			  ## hci_ll.c:133:5
 1e1a452:    c4 f5 6f 00       	r4 = b[sp+111] (u)			  ## hci_ll.c:133:5
 1e1a456:    c0 f5 72 00       	r0 = b[sp+114] (u)			  ## hci_ll.c:133:5
 1e1a45a:    98 02             	[sp+36] = r0			  ## hci_ll.c:133:5
 1e1a45c:    c9 f5 71 00       	r9 = b[sp+113] (u)			  ## hci_ll.c:133:5
 1e1a460:    c0 f5 74 00       	r0 = b[sp+116] (u)			  ## hci_ll.c:133:5
 1e1a464:    88 02             	[sp+32] = r0			  ## hci_ll.c:133:5
 1e1a466:    c1 f5 73 00       	r1 = b[sp+115] (u)			  ## hci_ll.c:133:5
 1e1a46a:    c0 f5 76 00       	r0 = b[sp+118] (u)			  ## hci_ll.c:133:5
 1e1a46e:    78 02             	[sp+28] = r0			  ## hci_ll.c:133:5
 1e1a470:    c5 f5 75 00       	r5 = b[sp+117] (u)			  ## hci_ll.c:133:5
 1e1a474:    ce f5 78 00       	r14 = b[sp+120] (u)			  ## hci_ll.c:133:5
 1e1a478:    c0 f5 77 00       	r0 = b[sp+119] (u)			  ## hci_ll.c:133:5
 1e1a47c:    ca f5 7a 00       	r10 = b[sp+122] (u)			  ## hci_ll.c:133:5
 1e1a480:    c2 f5 79 00       	r2 = b[sp+121] (u)			  ## hci_ll.c:133:5
 1e1a484:    0f f5 34 00       	r15 = [sp+52]			  ## hci_ll.c:133:5
 1e1a488:    c8 fd 40 bf       	r11 <= insert(r15, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a48c:    c7 02             	r7 = [sp+48]			  ## hci_ll.c:133:5
 1e1a48e:    c8 fd 40 37       	r3 <= insert(r7, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a492:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a496:    6b 02             	[sp+24] = r3			  ## hci_ll.c:135:5
 1e1a498:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a49c:    c8 fd 40 0e       	r0 <= insert(r14, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4a0:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a4a4:    58 02             	[sp+20] = r0			  ## hci_ll.c:135:5
 1e1a4a6:    70 02             	r0 = [sp+28]			  ## hci_ll.c:133:5
 1e1a4a8:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4ac:    80 02             	r0 = [sp+32]			  ## hci_ll.c:133:5
 1e1a4ae:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4b2:    d0 fd 80 15       	r1 <= insert(r5, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a4b6:    49 02             	[sp+16] = r1			  ## hci_ll.c:135:5
 1e1a4b8:    90 02             	r0 = [sp+36]			  ## hci_ll.c:133:5
 1e1a4ba:    c8 fd 40 90       	r9 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4be:    a0 02             	r0 = [sp+40]			  ## hci_ll.c:133:5
 1e1a4c0:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4c4:    d0 fd 80 49       	r4 <= insert(r9, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a4c8:    3c 02             	[sp+12] = r4			  ## hci_ll.c:135:5
 1e1a4ca:    e0 02             	r0 = [sp+56]			  ## hci_ll.c:133:5
 1e1a4cc:    c8 fd 40 c0       	r12 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4d0:    f0 02             	r0 = [sp+60]			  ## hci_ll.c:133:5
 1e1a4d2:    c8 fd 40 60       	r6 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4d6:    d0 fd 80 6c       	r6 <= insert(r12, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a4da:    2e 02             	[sp+8] = r6			  ## hci_ll.c:135:5
 1e1a4dc:    00 03             	r0 = [sp+64]			  ## hci_ll.c:133:5
 1e1a4de:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:133:5
 1e1a4e0:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4e4:    10 03             	r0 = [sp+68]			  ## hci_ll.c:133:5
 1e1a4e6:    c8 fd 40 80       	r8 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4ea:    d0 fd 80 81       	r8 <= insert(r1, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a4ee:    18 f5 04 00       	[sp+4] = r8			  ## hci_ll.c:135:5
 1e1a4f2:    21 03             	r1 = [sp+72]			  ## hci_ll.c:135:5
 1e1a4f4:    30 03             	r0 = [sp+76]			  ## hci_ll.c:133:5
 1e1a4f6:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a4fa:    40 03             	r0 = [sp+80]			  ## hci_ll.c:133:5
 1e1a4fc:    c8 fd 40 d0       	r13 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1a500:    d0 fd 80 d1       	r13 <= insert(r1, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a504:    50 03             	r0 = [sp+84]
 1e1a506:    61 03             	r1 = [sp+88]			  ## hci_ll.c:133:5
 1e1a508:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## hci_ll.c:133:5
 1e1a50c:    73 03             	r3 = [sp+92]			  ## hci_ll.c:133:5
 1e1a50e:    d8 fd 40 30       	r3 <= insert(r0, p:8, l:24)			  ## hci_ll.c:135:5
 1e1a512:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:135:5
 1e1a518:    a1 70             	r1 = 10			  ## hci_ll.c:135:5
 1e1a51a:    02 fb 09 20       	r2 = 8201 <att_ram_buffer+0x2C5 : 2009 >			  ## hci_ll.c:135:5
 1e1a51e:    1d f5 00 00       	[sp] = r13			  ## hci_ll.c:135:5
 1e1a522:    bf f3 94 da       	call -19160 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:135:5
 1e1a526:    40 0a             	sp += 128			  ## hci_ll.c:135:5
 1e1a528:    5f 01             	{pc, r15-r4} = [sp++]			  ## hci_ll.c:137:1


ll_hci_scan_enable:
 1e1a52a:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:188:0
 1e1a52c:    fe 0b             	sp += -4			  ## hci_ll.c:188:0
 1e1a52e:    13 08             	r3 = r1			  ## hci_ll.c:188:0
 1e1a530:    04 08             	r4 = r0			  ## hci_ll.c:188:0
 1e1a532:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:189:5
 1e1a538:    31 70             	r1 = 3			  ## hci_ll.c:189:5
 1e1a53a:    02 fb 0c 20       	r2 = 8204 <att_ram_buffer+0x2C8 : 200c >			  ## hci_ll.c:189:5
 1e1a53e:    0b 02             	[sp] = r3			  ## hci_ll.c:189:5
 1e1a540:    43 08             	r3 = r4			  ## hci_ll.c:189:5
 1e1a542:    bf f3 84 da       	call -19192 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:189:5
 1e1a546:    02 0a             	sp += 4			  ## hci_ll.c:189:5
 1e1a548:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:189:5


ll_hci_disconnect:
 1e1a54a:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:311:0
 1e1a54c:    fe 0b             	sp += -4			  ## hci_ll.c:311:0
 1e1a54e:    03 08             	r3 = r0			  ## hci_ll.c:311:0
 1e1a550:    34 71             	r4 = 19			  ## hci_ll.c:312:5
 1e1a552:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:312:5
 1e1a558:    31 70             	r1 = 3			  ## hci_ll.c:312:5
 1e1a55a:    02 fb 06 04       	r2 = 1030 <BTCTLER_LE_RAM_TOTAL+0x2E : 406 >			  ## hci_ll.c:312:5
 1e1a55e:    0c 02             	[sp] = r4			  ## hci_ll.c:312:5
 1e1a560:    bf f3 75 da       	call -19222 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:312:5
 1e1a564:    02 0a             	sp += 4			  ## hci_ll.c:312:5
 1e1a566:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:312:5


ll_hci_create_conn:
 1e1a568:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:209:0
 1e1a56a:    fc 0b             	sp += -8			  ## hci_ll.c:209:0
 1e1a56c:    14 08             	r4 = r1			  ## hci_ll.c:209:0
 1e1a56e:    05 08             	r5 = r0			  ## hci_ll.c:209:0
 1e1a570:    c1 ff 31 a2 e1 01 	r1 = 31564337 <create_param_default+0x5 : 1e1a231 >			  ## hci_ll.c:211:5
 1e1a576:    06 a0             	r6 = sp + 0			  ## hci_ll.c:211:5
 1e1a578:    72 70             	r2 = 7			  ## hci_ll.c:211:5
 1e1a57a:    60 08             	r0 = r6			  ## hci_ll.c:211:5
 1e1a57c:    97 f3 b2 64       	call 3066212 <memcpy : 106ee4 >			  ## hci_ll.c:211:5
 1e1a580:    09 f9 05 50       	r9 = b[r5 + 5] (u)			  ## hci_ll.c:214:18
 1e1a584:    08 f9 04 50       	r8 = b[r5 + 4] (u)			  ## hci_ll.c:214:18
 1e1a588:    0a f9 01 50       	r10 = b[r5 + 1] (u)			  ## hci_ll.c:214:18
 1e1a58c:    07 6a             	r7 = b[r5 + 0] (u)			  ## hci_ll.c:214:18
 1e1a58e:    0b f9 03 50       	r11 = b[r5 + 3] (u)			  ## hci_ll.c:214:18
 1e1a592:    25 6a             	r5 = b[r5 + 2] (u)			  ## hci_ll.c:214:18
 1e1a594:    c0 ff 68 0f 00 00 	r0 = 3944 <config_hci_ll_param.0 : f68 >			  ## hci_ll.c:212:64
 1e1a59a:    0c f9 00 00       	r12 = b[r0 + 0] (u)			  ## hci_ll.c:212:64
 1e1a59e:    72 70             	r2 = 7			  ## hci_ll.c:215:5
 1e1a5a0:    60 08             	r0 = r6			  ## hci_ll.c:215:5
 1e1a5a2:    41 08             	r1 = r4			  ## hci_ll.c:215:5
 1e1a5a4:    97 f3 9e 64       	call 3066172 <memcpy : 106ee4 >			  ## hci_ll.c:215:5
 1e1a5a8:    c4 ff 60 2d 00 00 	r4 = 11616 <hci_cmd_tmp_buff : 2d60 >			  ## hci_ll.c:215:5
 1e1a5ae:    c0 f4 0b 4d       	[r4 + 0] = 720907			  ## hci_ll.c:219:5
 1e1a5b2:    f2 fd 30 0c       	r0 = r12 >> 6			  ## hci_ll.c:212:64
 1e1a5b6:    48 68             	b[r4 + 4] = r0			  ## hci_ll.c:219:5
 1e1a5b8:    50 98             	r0 = r4 + 5			  ## hci_ll.c:219:5
 1e1a5ba:    72 70             	r2 = 7			  ## hci_ll.c:219:5
 1e1a5bc:    61 08             	r1 = r6			  ## hci_ll.c:219:5
 1e1a5be:    97 f3 91 64       	call 3066146 <memcpy : 106ee4 >			  ## hci_ll.c:219:5
 1e1a5c2:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:213:57
 1e1a5c6:    c8 68             	b[r4 + 12] = r0			  ## hci_ll.c:219:5
 1e1a5c8:    c8 fd 40 5b       	r5 <= insert(r11, p:8, l:8)			  ## hci_ll.c:214:18
 1e1a5cc:    c8 fd 40 7a       	r7 <= insert(r10, p:8, l:8)			  ## hci_ll.c:214:18
 1e1a5d0:    d0 fd 80 75       	r7 <= insert(r5, p:16, l:16)			  ## hci_ll.c:214:18
 1e1a5d4:    38 d4             	r0 = r7 >> 16			  ## hci_ll.c:214:18
 1e1a5d6:    d8 fd 40 89       	r8 <= insert(r9, p:8, l:24)			  ## hci_ll.c:214:18
 1e1a5da:    d0 fd 80 08       	r0 <= insert(r8, p:16, l:16)			  ## hci_ll.c:214:18
 1e1a5de:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:219:5
 1e1a5e0:    49 69             	b[r4 + 20] = r1			  ## hci_ll.c:219:5
 1e1a5e2:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:219:5
 1e1a5e4:    39 69             	b[r4 + 19] = r1			  ## hci_ll.c:219:5
 1e1a5e6:    01 d2             	r1 = r0 >> 8			  ## hci_ll.c:219:5
 1e1a5e8:    29 69             	b[r4 + 18] = r1			  ## hci_ll.c:219:5
 1e1a5ea:    18 69             	b[r4 + 17] = r0			  ## hci_ll.c:219:5
 1e1a5ec:    60 70             	r0 = 6			  ## hci_ll.c:219:5
 1e1a5ee:    d0 fd 80 07       	r0 <= insert(r7, p:16, l:16)			  ## hci_ll.c:214:18
 1e1a5f2:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:219:5
 1e1a5f4:    09 69             	b[r4 + 16] = r1			  ## hci_ll.c:219:5
 1e1a5f6:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:219:5
 1e1a5f8:    f9 68             	b[r4 + 15] = r1			  ## hci_ll.c:219:5
 1e1a5fa:    01 70             	r1 = 0			  ## hci_ll.c:219:5
 1e1a5fc:    e9 68             	b[r4 + 14] = r1			  ## hci_ll.c:219:5
 1e1a5fe:    d8 68             	b[r4 + 13] = r0			  ## hci_ll.c:219:5
 1e1a600:    89 69             	b[r4 + 24] = r1			  ## hci_ll.c:219:5
 1e1a602:    10 70             	r0 = 1			  ## hci_ll.c:219:5
 1e1a604:    78 69             	b[r4 + 23] = r0			  ## hci_ll.c:219:5
 1e1a606:    69 69             	b[r4 + 22] = r1			  ## hci_ll.c:219:5
 1e1a608:    58 69             	b[r4 + 21] = r0			  ## hci_ll.c:219:5
 1e1a60a:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:220:5
 1e1a610:    21 70             	r1 = 2			  ## hci_ll.c:220:5
 1e1a612:    02 fb 0d 20       	r2 = 8205 <att_ram_buffer+0x2C9 : 200d >			  ## hci_ll.c:220:5
 1e1a616:    43 08             	r3 = r4			  ## hci_ll.c:220:5
 1e1a618:    bf f3 19 da       	call -19406 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:220:5
 1e1a61c:    04 0a             	sp += 8			  ## hci_ll.c:220:5
 1e1a61e:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:220:5


ll_hci_create_conn_cancel:
 1e1a620:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:228:0
 1e1a626:    11 70             	r1 = 1			  ## hci_ll.c:229:5
 1e1a628:    02 fb 0e 20       	r2 = 8206 <att_ram_buffer+0x2CA : 200e >			  ## hci_ll.c:229:5
 1e1a62c:    ff f3 0f da       	goto -19426 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:229:5


ll_hci_vendor_send_key_num:
 1e1a630:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:234:0
 1e1a632:    fe 0b             	sp += -4			  ## hci_ll.c:234:0
 1e1a634:    14 08             	r4 = r1			  ## hci_ll.c:234:0
 1e1a636:    03 08             	r3 = r0			  ## hci_ll.c:234:0
 1e1a638:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:235:5
 1e1a63e:    c2 ff 83 f8 00 00 	r2 = 63619 <UPDATA_BREDR_BASE_BEG+0xD23 : f883 >			  ## hci_ll.c:235:5
 1e1a644:    31 70             	r1 = 3			  ## hci_ll.c:235:5
 1e1a646:    0c 02             	[sp] = r4			  ## hci_ll.c:235:5
 1e1a648:    bf f3 01 da       	call -19454 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:235:5
 1e1a64c:    02 0a             	sp += 4			  ## hci_ll.c:235:5
 1e1a64e:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:235:5


ll_vendor_latency_hold_cnt:
 1e1a650:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:240:0
 1e1a652:    fe 0b             	sp += -4			  ## hci_ll.c:240:0
 1e1a654:    14 08             	r4 = r1			  ## hci_ll.c:240:0
 1e1a656:    03 08             	r3 = r0			  ## hci_ll.c:240:0
 1e1a658:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:241:5
 1e1a65e:    c2 ff 84 f8 00 00 	r2 = 63620 <UPDATA_BREDR_BASE_BEG+0xD24 : f884 >			  ## hci_ll.c:241:5
 1e1a664:    31 70             	r1 = 3			  ## hci_ll.c:241:5
 1e1a666:    0c 02             	[sp] = r4			  ## hci_ll.c:241:5
 1e1a668:    bf f3 f1 d9       	call -19486 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## hci_ll.c:241:5
 1e1a66c:    02 0a             	sp += 4			  ## hci_ll.c:241:5
 1e1a66e:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:241:5


ll_hci_cmd_handler:
 1e1a670:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_ll.c:432:0
 1e1a672:    a8 0b             	sp += -176			  ## hci_ll.c:432:0
 1e1a674:    06 08             	r6 = r0			  ## hci_ll.c:432:0
 1e1a676:    04 5c             	r4 = h[r6 + 0] (u)			  ## hci_ll.c:433:18
 1e1a678:    c5 ff 3a 27 e1 01 	r5 = 31532858 <update_target_end+0x250A : 1e1273a >
 1e1a67e:    01 ff 06 44 11 00 	if (r4 != 1030) goto 34 <ll_hci_cmd_handler+0x36 : 1e1a6a6 >			  ## hci_ll.c:437:9
 1e1a684:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:443:42
 1e1a686:    90 f5 ac 00       	h[sp+172] = r0			  ## hci_ll.c:443:40
 1e1a68a:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:444:31
 1e1a68c:    d0 f5 ae 00       	b[sp+174] = r0			  ## hci_ll.c:444:29
 1e1a690:    c1 aa             	r1 = sp + 172			  ## hci_ll.c:444:29
 1e1a692:    40 08             	r0 = r4			  ## hci_ll.c:445:26
 1e1a694:    bf f3 c0 fb       	call -2176 <ll_push_control_data : 1e19e18 >			  ## hci_ll.c:445:26
 1e1a698:    02 08             	r2 = r0			  ## hci_ll.c:445:26
 1e1a69a:    01 fb 06 04       	r1 = 1030 <BTCTLER_LE_RAM_TOTAL+0x2E : 406 >			  ## hci_ll.c:446:17
 1e1a69e:    f0 70             	r0 = 15			  ## hci_ll.c:446:17
 1e1a6a0:    13 70             	r3 = 1			  ## hci_ll.c:446:17
 1e1a6a2:    09 02             	[sp] = r1			  ## hci_ll.c:446:17
 1e1a6a4:    aa 18             	goto 340 <.GJTIE857_0_0_+0x128 : 1e1a7fa >			  ## hci_ll.c:446:17
 1e1a6a6:    30 fd fc 4a       	r0 = r4 & 4294902783
 1e1a6aa:    40 e2 1c c0       	ifs (r0 > 36) goto 56 <.GJTIE857_0_0_+0x14 : 1e1a6e6 >			  ## hci_ll.c:452:5
 1e1a6ae:    a0 8f             	r0 += -6
 1e1a6b0:    50 e1 a6 80       	if (r0 > 21) goto 332 <.GJTIE857_0_0_+0x12E : 1e1a800 >
 1e1a6b4:    c7 ff 3b 27 e1 01 	r7 = 31532859 <update_target_end+0x250B : 1e1273b >
 1e1a6ba:    a0 00             	tbb [r0]


.GJTIS857_0_0_:
 1e1a6bc:    0b     < 11 : 0xB >
 1e1a6bd:    a2     < 162 : 0xA2 >
 1e1a6be:    2d     < 45 : 0x2D >
 1e1a6bf:    37     < 55 : 0x37 >
 1e1a6c0:    41     < 65 : 0x41 >
 1e1a6c1:    a2     < 162 : 0xA2 >
 1e1a6c2:    a2     < 162 : 0xA2 >
 1e1a6c3:    a2     < 162 : 0xA2 >
 1e1a6c4:    a2     < 162 : 0xA2 >
 1e1a6c5:    a2     < 162 : 0xA2 >
 1e1a6c6:    a2     < 162 : 0xA2 >
 1e1a6c7:    a2     < 162 : 0xA2 >
 1e1a6c8:    a2     < 162 : 0xA2 >
 1e1a6c9:    a2     < 162 : 0xA2 >
 1e1a6ca:    a2     < 162 : 0xA2 >
 1e1a6cb:    a2     < 162 : 0xA2 >
 1e1a6cc:    a2     < 162 : 0xA2 >
 1e1a6cd:    46     < 70 : 0x46 >
 1e1a6ce:    62     < 98 : 0x62 >
 1e1a6cf:    70     < 112 : 0x70 >
 1e1a6d0:    72     < 114 : 0x72 >
 1e1a6d1:    7d     < 125 : 0x7D >
 1e1a6d2:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:471:36
 1e1a6d4:    d4 a9             	r4 = sp + 157			  ## hci_ll.c:471:36
 1e1a6d6:    f2 70             	r2 = 15			  ## hci_ll.c:471:13
 1e1a6d8:    40 08             	r0 = r4			  ## hci_ll.c:471:13
 1e1a6da:    97 f3 03 64       	call 3065862 <memcpy : 106ee4 >			  ## hci_ll.c:471:13
 1e1a6de:    40 08             	r0 = r4			  ## hci_ll.c:472:13
 1e1a6e0:    bf f3 9a fc       	call -1740 <ll_adv_set_params : 1e1a018 >			  ## hci_ll.c:472:13
 1e1a6e4:    8d 18             	goto 282 <.GJTIE857_0_0_+0x12E : 1e1a800 >			  ## hci_ll.c:472:13
 1e1a6e6:    0c ff 82 00 07 00 	ifs (r0 > 130) goto 14 <.GJTIE857_0_0_+0x28 : 1e1a6fa >
 1e1a6ec:    50 e2 02 00       	if (r0 == 37) goto 4 <.GJTIE857_0_0_+0x22 : 1e1a6f4 >
 1e1a6f0:    60 e2 86 10       	if (r0 != 38) goto 268 <.GJTIE857_0_0_+0x12E : 1e1a800 >
 1e1a6f4:    f0 70             	r0 = 15
 1e1a6f6:    02 70             	r2 = 0
 1e1a6f8:    7e 18             	goto 252 <.GJTIE857_0_0_+0x124 : 1e1a7f6 >
 1e1a6fa:    00 ff 83 00 6f 00 	if (r0 == 131) goto 222 <.GJTIE857_0_0_+0x10C : 1e1a7de >
 1e1a700:    01 ff 84 00 7d 00 	if (r0 != 132) goto 250 <.GJTIE857_0_0_+0x12E : 1e1a800 >
 1e1a706:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:620:27
 1e1a708:    90 f5 04 00       	h[sp+4] = r0			  ## hci_ll.c:620:25
 1e1a70c:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:621:27
 1e1a70e:    90 f5 06 00       	h[sp+6] = r0			  ## hci_ll.c:621:25
 1e1a712:    41 a0             	r1 = sp + 4			  ## hci_ll.c:621:25
 1e1a714:    6b 18             	goto 214 <.GJTIE857_0_0_+0x11A : 1e1a7ec >			  ## hci_ll.c:621:25
 1e1a716:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:479:35
 1e1a718:    d4 a7             	r4 = sp + 125			  ## hci_ll.c:479:35
 1e1a71a:    02 72             	r2 = 32			  ## hci_ll.c:479:13
 1e1a71c:    40 08             	r0 = r4			  ## hci_ll.c:479:13
 1e1a71e:    97 f3 e1 63       	call 3065794 <memcpy : 106ee4 >			  ## hci_ll.c:479:13
 1e1a722:    40 08             	r0 = r4			  ## hci_ll.c:480:13
 1e1a724:    bf f3 8b fc       	call -1770 <ll_adv_set_adv_data : 1e1a03e >			  ## hci_ll.c:480:13
 1e1a728:    6b 18             	goto 214 <.GJTIE857_0_0_+0x12E : 1e1a800 >			  ## hci_ll.c:480:13
 1e1a72a:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:487:41
 1e1a72c:    d4 a5             	r4 = sp + 93			  ## hci_ll.c:487:41
 1e1a72e:    02 72             	r2 = 32			  ## hci_ll.c:487:13
 1e1a730:    40 08             	r0 = r4			  ## hci_ll.c:487:13
 1e1a732:    97 f3 d7 63       	call 3065774 <memcpy : 106ee4 >			  ## hci_ll.c:487:13
 1e1a736:    40 08             	r0 = r4			  ## hci_ll.c:488:13
 1e1a738:    bf f3 a3 fc       	call -1722 <ll_adv_set_scan_rsp_data : 1e1a082 >			  ## hci_ll.c:488:13
 1e1a73c:    61 18             	goto 194 <.GJTIE857_0_0_+0x12E : 1e1a800 >			  ## hci_ll.c:488:13
 1e1a73e:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:493:13
 1e1a740:    61 20             	if (r0 == 0) goto 194 <.GJTIE857_0_0_+0x132 : 1e1a804 >			  ## hci_ll.c:493:13
 1e1a742:    bf f3 c0 fc       	call -1664 <ll_adv_open : 1e1a0c6 >			  ## hci_ll.c:494:22
 1e1a746:    5c 18             	goto 184 <.GJTIE857_0_0_+0x12E : 1e1a800 >			  ## hci_ll.c:494:22
 1e1a748:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:526:29
 1e1a74a:    d4 a4             	r4 = sp + 77			  ## hci_ll.c:526:29
 1e1a74c:    02 71             	r2 = 16			  ## hci_ll.c:526:13
 1e1a74e:    40 08             	r0 = r4			  ## hci_ll.c:526:13
 1e1a750:    97 f3 c8 63       	call 3065744 <memcpy : 106ee4 >			  ## hci_ll.c:526:13
 1e1a754:    41 9d             	r1 = r6 + 20			  ## hci_ll.c:527:40
 1e1a756:    d5 a3             	r5 = sp + 61			  ## hci_ll.c:527:40
 1e1a758:    02 71             	r2 = 16			  ## hci_ll.c:527:13
 1e1a75a:    50 08             	r0 = r5			  ## hci_ll.c:527:13
 1e1a75c:    97 f3 c2 63       	call 3065732 <memcpy : 106ee4 >			  ## hci_ll.c:527:13
 1e1a760:    d6 a2             	r6 = sp + 45			  ## hci_ll.c:527:13
 1e1a762:    40 08             	r0 = r4			  ## hci_ll.c:528:13
 1e1a764:    51 08             	r1 = r5			  ## hci_ll.c:528:13
 1e1a766:    62 08             	r2 = r6			  ## hci_ll.c:528:13
 1e1a768:    bf f3 d8 60       	call -81488 <aes128_start : 1e0691c >			  ## hci_ll.c:528:13
 1e1a76c:    c1 ff 6f 27 e1 01 	r1 = 31532911 <update_target_end+0x253F : 1e1276f >			  ## hci_ll.c:529:13
 1e1a772:    00 fb 17 20       	r0 = 8215 <att_ram_buffer+0x2D3 : 2017 >			  ## hci_ll.c:529:13
 1e1a776:    02 70             	r2 = 0			  ## hci_ll.c:529:13
 1e1a778:    63 08             	r3 = r6			  ## hci_ll.c:529:13
 1e1a77a:    bf f3 e2 d9       	call -19516 <hci_send_event_cmd_complete : 1e15b42 >			  ## hci_ll.c:529:13
 1e1a77e:    40 18             	goto 128 <.GJTIE857_0_0_+0x12E : 1e1a800 >			  ## hci_ll.c:529:13
 1e1a780:    55 a2             	r5 = sp + 37
 1e1a782:    81 70             	r1 = 8			  ## hci_ll.c:536:13
 1e1a784:    50 08             	r0 = r5			  ## hci_ll.c:536:13
 1e1a786:    bf f3 75 61       	call -81174 <pseudo_random_genrate : 1e06a74 >			  ## hci_ll.c:536:13
 1e1a78a:    c1 ff 3e 27 e1 01 	r1 = 31532862 <update_target_end+0x250E : 1e1273e >			  ## hci_ll.c:537:13
 1e1a790:    02 70             	r2 = 0			  ## hci_ll.c:537:13
 1e1a792:    40 08             	r0 = r4			  ## hci_ll.c:537:13
 1e1a794:    53 08             	r3 = r5			  ## hci_ll.c:537:13
 1e1a796:    bf f3 d4 d9       	call -19544 <hci_send_event_cmd_complete : 1e15b42 >			  ## hci_ll.c:537:13
 1e1a79a:    32 18             	goto 100 <.GJTIE857_0_0_+0x12E : 1e1a800 >			  ## hci_ll.c:537:13
 1e1a79c:    11 4c             	r1 = [r6 + 4]			  ## hci_ll.c:545:63
 1e1a79e:    26 18             	goto 76 <.GJTIE857_0_0_+0x11A : 1e1a7ec >			  ## hci_ll.c:545:63
 1e1a7a0:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:557:42
 1e1a7a2:    90 f5 10 00       	h[sp+16] = r0			  ## hci_ll.c:557:40
 1e1a7a6:    05 a1             	r5 = sp + 16			  ## hci_ll.c:557:40
 1e1a7a8:    00 fd 02 59       	r0 = r5 | 2			  ## hci_ll.c:558:17
 1e1a7ac:    81 9c             	r1 = r6 + 8			  ## hci_ll.c:558:48
 1e1a7ae:    02 71             	r2 = 16			  ## hci_ll.c:558:17
 1e1a7b0:    97 f3 98 63       	call 3065648 <memcpy : 106ee4 >			  ## hci_ll.c:558:17
 1e1a7b4:    04 18             	goto 8 <.GJTIE857_0_0_+0xEC : 1e1a7be >			  ## hci_ll.c:558:17
 1e1a7b6:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:572:42
 1e1a7b8:    90 f5 0c 00       	h[sp+12] = r0			  ## hci_ll.c:572:40
 1e1a7bc:    c5 a0             	r5 = sp + 12			  ## hci_ll.c:572:40
 1e1a7be:    40 08             	r0 = r4
 1e1a7c0:    51 08             	r1 = r5
 1e1a7c2:    bf f3 29 fb       	call -2478 <ll_push_control_data : 1e19e18 >
 1e1a7c6:    02 08             	r2 = r0
 1e1a7c8:    01 70             	r1 = 0
 1e1a7ca:    50 08             	r0 = r5
 1e1a7cc:    bf f3 33 59       	call -85402 <btctler_little_endian_read_16 : 1e05a36 >
 1e1a7d0:    33 fd f0 0a       	r3 = r0 & 4294905855
 1e1a7d4:    40 08             	r0 = r4
 1e1a7d6:    71 08             	r1 = r7
 1e1a7d8:    bf f3 b3 d9       	call -19610 <hci_send_event_cmd_complete : 1e15b42 >
 1e1a7dc:    11 18             	goto 34 <.GJTIE857_0_0_+0x12E : 1e1a800 >
 1e1a7de:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:610:38
 1e1a7e0:    90 f5 08 00       	h[sp+8] = r0			  ## hci_ll.c:610:36
 1e1a7e4:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:611:28
 1e1a7e6:    d0 f5 0a 00       	b[sp+10] = r0			  ## hci_ll.c:611:26
 1e1a7ea:    81 a0             	r1 = sp + 8			  ## hci_ll.c:611:26
 1e1a7ec:    40 08             	r0 = r4
 1e1a7ee:    bf f3 13 fb       	call -2522 <ll_push_control_data : 1e19e18 >
 1e1a7f2:    02 08             	r2 = r0
 1e1a7f4:    f0 70             	r0 = 15
 1e1a7f6:    13 70             	r3 = 1
 1e1a7f8:    0c 02             	[sp] = r4
 1e1a7fa:    51 08             	r1 = r5
 1e1a7fc:    bf f3 5d d9       	call -19782 <hci_send_event : 1e15aba >
 1e1a800:    58 0a             	sp += 176
 1e1a802:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_ll.c:655:1
 1e1a804:    bf f3 a8 ee       	call -8880 <ll_adv_close : 1e18558 >			  ## hci_ll.c:496:22
 1e1a808:    fb 1f             	goto -10 <.GJTIE857_0_0_+0x12E : 1e1a800 >			  ## hci_ll.c:496:22


ll_push_acl_data:
 1e1a80a:    74 01             	[--sp] = {rets, r4}			  ## hci_ll_cmds.c:541:0
 1e1a80c:    02 08             	r2 = r0			  ## hci_ll_cmds.c:541:0
 1e1a80e:    01 70             	r1 = 0			  ## hci_ll_cmds.c:546:14
 1e1a810:    bf f3 11 59       	call -85470 <btctler_little_endian_read_16 : 1e05a36 >			  ## hci_ll_cmds.c:546:14
 1e1a814:    03 08             	r3 = r0			  ## hci_ll_cmds.c:546:14
 1e1a816:    21 70             	r1 = 2			  ## hci_ll_cmds.c:547:12
 1e1a818:    20 08             	r0 = r2			  ## hci_ll_cmds.c:547:12
 1e1a81a:    bf f3 0c 59       	call -85480 <btctler_little_endian_read_16 : 1e05a36 >			  ## hci_ll_cmds.c:547:12
 1e1a81e:    04 08             	r4 = r0			  ## hci_ll_cmds.c:547:12
 1e1a820:    30 fd f0 3a       	r0 = r3 & 4294905855			  ## hci_ll_cmds.c:546:14
 1e1a824:    21 08             	r1 = r2			  ## hci_ll_cmds.c:552:5
 1e1a826:    42 08             	r2 = r4			  ## hci_ll_cmds.c:552:5
 1e1a828:    14 01             	{rets, r4} = [sp++]			  ## hci_ll_cmds.c:552:5
 1e1a82a:    ff f3 70 fc       	goto -1824 <ll_send_acl_packet : 1e1a10e >			  ## hci_ll_cmds.c:552:5


__bt_updata_save_connection_info:
 1e1a82e:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_escape3.c:718:0
 1e1a830:    f6 0b             	sp += -20			  ## lmp_escape3.c:718:0
 1e1a832:    c0 ff 80 0f 00 00 	r0 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:719:35
 1e1a838:    05 40             	r5 = [r0 + 0]			  ## lmp_escape3.c:719:35
 1e1a83a:    16 2a             	if (r5 == 0) goto 44 <__bt_updata_save_connection_info+0x3A : 1e1a868 >
 1e1a83c:    97 f3 ae 62       	call 3065180 <local_irq_disable : 106d9c >			  ## lmp_escape3.c:725:5
 1e1a840:    30 70             	r0 = 3			  ## lmp_escape3.c:728:33
 1e1a842:    d0 f5 02 00       	b[sp+2] = r0			  ## lmp_escape3.c:728:33
 1e1a846:    00 f6 c4 50       	r0 = [r5 + 196]			  ## lmp_escape3.c:729:38
 1e1a84a:    04 a0             	r4 = sp + 0			  ## lmp_escape3.c:729:38
 1e1a84c:    41 08             	r1 = r4			  ## lmp_escape3.c:729:5
 1e1a84e:    80 f3 62 02       	call 1220 <__bt_updata_save_link_info : 1e1ad16 >			  ## lmp_escape3.c:729:5
 1e1a852:    00 f6 c4 50       	r0 = [r5 + 196]			  ## lmp_escape3.c:730:44
 1e1a856:    00 f6 cc 00       	r0 = [r0 + 204]			  ## lmp_escape3.c:730:50
 1e1a85a:    41 08             	r1 = r4			  ## lmp_escape3.c:730:5
 1e1a85c:    80 f3 90 02       	call 1312 <__bt_updata_save_curr_used_frame : 1e1ad80 >			  ## lmp_escape3.c:730:5
 1e1a860:    97 f3 9a 62       	call 3065140 <local_irq_enable : 106d98 >			  ## lmp_escape3.c:733:5
 1e1a864:    00 70             	r0 = 0			  ## lmp_escape3.c:733:5
 1e1a866:    01 18             	goto 2 <__bt_updata_save_connection_info+0x3C : 1e1a86a >			  ## lmp_escape3.c:733:5
 1e1a868:    f0 07             	r0 = -1
 1e1a86a:    0a 0a             	sp += 20
 1e1a86c:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_escape3.c:736:1


bredr_get_rssi_for_address:
 1e1a86e:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp.c:407:0
 1e1a870:    c6 ff 14 31 00 00 	r6 = 12564 <lmp_acl_link : 3114 >			  ## lmp.c:407:0
 1e1a876:    05 70             	r5 = 0			  ## lmp.c:407:0
 1e1a878:    c8 ff 18 25 00 00 	r8 = 9496 <edr_remote_address : 2518 >			  ## lmp.c:407:0
 1e1a87e:    60 08             	r0 = r6			  ## lmp.c:407:0
 1e1a880:    07 fc a8 00       	r7 = r0 + 168			  ## lmp.c:407:0
 1e1a884:    00 5e             	r0 = h[r7 + 0] (u)			  ## lmp.c:414:26
 1e1a886:    0e 20             	if (r0 == 0) goto 28 <bredr_get_rssi_for_address+0x36 : 1e1a8a4 >			  ## lmp.c:414:26
 1e1a888:    74 4e             	r4 = [r7 + 28]			  ## lmp.c:414:42
 1e1a88a:    0c 28             	if (r4 == 0) goto 24 <bredr_get_rssi_for_address+0x36 : 1e1a8a4 >			  ## lmp.c:414:42
 1e1a88c:    40 fc a3 00       	r0 = r4 + 163			  ## lmp.c:415:25
 1e1a890:    62 70             	r2 = 6			  ## lmp.c:415:18
 1e1a892:    81 08             	r1 = r8			  ## lmp.c:415:18
 1e1a894:    97 f3 2a 63       	call 3065428 <memcmp : 106eec >			  ## lmp.c:415:18
 1e1a898:    05 30             	if (r0 != 0) goto 10 <bredr_get_rssi_for_address+0x36 : 1e1a8a4 >			  ## lmp.c:415:18
 1e1a89a:    00 f6 cc 40       	r0 = [r4 + 204]			  ## lmp.c:416:58
 1e1a89e:    80 f3 be 02       	call 1404 <bredr_analog_get_rssi : 1e1ae1e >			  ## lmp.c:416:24
 1e1a8a2:    05 08             	r5 = r0			  ## lmp.c:416:24
 1e1a8a4:    70 fc 38 00       	r0 = r7 + 56			  ## lmp.c:413:5
 1e1a8a8:    61 fc e0 00       	r1 = r6 + 224
 1e1a8ac:    10 f2 e8 3f       	if (r0 < r1) goto -48 <bredr_get_rssi_for_address+0x12 : 1e1a880 >
 1e1a8b0:    50 05             	r0 = r5.b0 (s)			  ## lmp.c:421:1
 1e1a8b2:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp.c:421:1


get_random_number:
 1e1a8b4:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp.c:239:0
 1e1a8b6:    fe 0b             	sp += -4			  ## lmp.c:239:0
 1e1a8b8:    14 08             	r4 = r1			  ## lmp.c:239:0
 1e1a8ba:    05 08             	r5 = r0			  ## lmp.c:239:0
 1e1a8bc:    19 28             	if (r4 == 0) goto 50 <get_random_number+0x3C : 1e1a8f0 >			  ## lmp.c:239:0
 1e1a8be:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## lmp.c:239:0
 1e1a8c4:    00 f6 00 80       	r0 = [r8 + 0]			  ## lmp.c:246:27
 1e1a8c8:    01 05             	r1 = r4.b0 (u)			  ## lmp.c:248:13
 1e1a8ca:    08 02             	[sp] = r0			  ## lmp.c:246:16
 1e1a8cc:    47 08             	r7 = r4			  ## lmp.c:248:13
 1e1a8ce:    41 e0 01 30       	if (r1 < 4) goto 2 <get_random_number+0x20 : 1e1a8d4 >			  ## lmp.c:248:13
 1e1a8d2:    47 70             	r7 = 4			  ## lmp.c:248:13
 1e1a8d4:    c6 05             	r6 = r7.b0 (u)			  ## lmp.c:251:40
 1e1a8d6:    01 a0             	r1 = sp + 0			  ## lmp.c:251:40
 1e1a8d8:    50 08             	r0 = r5			  ## lmp.c:251:9
 1e1a8da:    62 08             	r2 = r6			  ## lmp.c:251:9
 1e1a8dc:    97 f3 02 63       	call 3065348 <memcpy : 106ee4 >			  ## lmp.c:251:9
 1e1a8e0:    a0 70             	r0 = 10			  ## lmp.c:254:9
 1e1a8e2:    8f f3 b6 4c       	call 2005356 <delay : 4252 >			  ## lmp.c:254:9
 1e1a8e6:    e4 b9             	r4 = r4 - r7			  ## lmp.c:253:17
 1e1a8e8:    65 09             	r5 += r6			  ## lmp.c:252:17
 1e1a8ea:    61 ff ff 49 ea ff 	if ((r4 & 255) != 0) goto -44 <get_random_number+0x10 : 1e1a8c4 >
 1e1a8f0:    02 0a             	sp += 4
 1e1a8f2:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp.c:256:1


lmp_private_remote_addr_for_handler:
 1e1a8f4:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:461:0
 1e1a8f6:    c2 ff 14 31 00 00 	r2 = 12564 <lmp_acl_link : 3114 >			  ## lmp.c:461:0
 1e1a8fc:    23 08             	r3 = r2			  ## lmp.c:461:0
 1e1a8fe:    01 f7 a8 30       	r1 = h[r3 + 168] (u)			  ## lmp.c:428:13
 1e1a902:    02 22             	if (r1 == 0) goto 4 <lmp_private_remote_addr_for_handler+0x14 : 1e1a908 >			  ## lmp.c:428:13
 1e1a904:    01 f2 15 00       	if (r1 == r0) goto 42 <lmp_private_remote_addr_for_handler+0x3E : 1e1a932 >
 1e1a908:    33 fc e0 00       	r3 = r3 + 224			  ## lmp.c:427:5
 1e1a90c:    21 fc e0 00       	r1 = r2 + 224
 1e1a910:    13 f2 f5 3f       	if (r3 < r1) goto -22 <lmp_private_remote_addr_for_handler+0xA : 1e1a8fe >
 1e1a914:    22 fc a8 00       	r2 = r2 + 168
 1e1a918:    03 54             	r3 = h[r2 + 0] (u)			  ## lmp.c:468:30
 1e1a91a:    05 26             	if (r3 == 0) goto 10 <lmp_private_remote_addr_for_handler+0x32 : 1e1a926 >			  ## lmp.c:468:30
 1e1a91c:    93 44             	r3 = [r2 + 36]			  ## lmp.c:469:27
 1e1a91e:    03 26             	if (r3 == 0) goto 6 <lmp_private_remote_addr_for_handler+0x32 : 1e1a926 >			  ## lmp.c:469:27
 1e1a920:    04 66             	r4 = b[r3 + 0] (u)			  ## lmp.c:469:40
 1e1a922:    04 f2 05 00       	if (r4 == r0) goto 10 <lmp_private_remote_addr_for_handler+0x3C : 1e1a930 >			  ## lmp.c:469:40
 1e1a926:    82 83             	r2 += 56			  ## lmp.c:467:9
 1e1a928:    12 f2 f4 3f       	if (r2 < r1) goto -24 <lmp_private_remote_addr_for_handler+0x20 : 1e1a914 >
 1e1a92c:    00 70             	r0 = 0
 1e1a92e:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:476:1
 1e1a930:    73 46             	r3 = [r3 + 28]			  ## lmp.c:470:45
 1e1a932:    00 f6 c4 30       	r0 = [r3 + 196]
 1e1a936:    00 fc a3 00       	r0 = r0 + 163
 1e1a93a:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:476:1


lmp_hci_set_connection_encryption:
 1e1a93c:    ff f3 32 d8       	goto -20380 <lmp_hci_cmd_to_conn_for_handle : 1e159a4 >			  ## lmp_hci.c:299:0


lmp_conn_for_handle:
 1e1a940:    c2 ff 14 31 00 00 	r2 = 12564 <lmp_acl_link : 3114 >			  ## lmp.c:424:0
 1e1a946:    01 08             	r1 = r0			  ## lmp.c:424:0
 1e1a948:    20 08             	r0 = r2			  ## lmp.c:424:0
 1e1a94a:    03 f7 a8 00       	r3 = h[r0 + 168] (u)			  ## lmp.c:428:13
 1e1a94e:    02 26             	if (r3 == 0) goto 4 <lmp_conn_for_handle+0x14 : 1e1a954 >			  ## lmp.c:428:13
 1e1a950:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_handle+0x22 : 1e1a962 >
 1e1a954:    00 fc e0 00       	r0 = r0 + 224			  ## lmp.c:427:5
 1e1a958:    23 fc e0 00       	r3 = r2 + 224
 1e1a95c:    30 f2 f5 3f       	if (r0 < r3) goto -22 <lmp_conn_for_handle+0xA : 1e1a94a >
 1e1a960:    00 70             	r0 = 0
 1e1a962:    20 00             	rts			  ## lmp.c:433:1


lmp_format_packet:
 1e1a964:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:565:0
 1e1a966:    fe 0b             	sp += -4			  ## lmp.c:565:0
 1e1a968:    04 08             	r4 = r0			  ## lmp.c:565:0
 1e1a96a:    0a 02             	[sp] = r2			  ## lmp.c:565:0
 1e1a96c:    0d 18             	goto 26 <lmp_format_packet+0x24 : 1e1a988 >			  ## lmp.c:565:0
 1e1a96e:    00 02             	r0 = [sp]			  ## lmp.c:568:39
 1e1a970:    42 90             	r2 = r0 + 4			  ## lmp.c:568:39
 1e1a972:    0a 02             	[sp] = r2			  ## lmp.c:568:39
 1e1a974:    00 40             	r0 = [r0 + 0]			  ## lmp.c:568:39
 1e1a976:    10 b1             	r0 |= 4			  ## lmp.c:568:28
 1e1a978:    08 68             	b[r4 + 0] = r0			  ## lmp.c:568:26
 1e1a97a:    05 18             	goto 10 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:568:26
 1e1a97c:    00 02             	r0 = [sp]			  ## lmp.c:572:30
 1e1a97e:    42 90             	r2 = r0 + 4			  ## lmp.c:572:30
 1e1a980:    0a 02             	[sp] = r2			  ## lmp.c:572:30
 1e1a982:    00 40             	r0 = [r0 + 0]			  ## lmp.c:572:30
 1e1a984:    28 68             	b[r4 + 2] = r0			  ## lmp.c:572:28
 1e1a986:    11 80             	r1 += 1			  ## lmp.c:590:15
 1e1a988:    00 62             	r0 = b[r1 + 0] (u)
 1e1a98a:    c0 e4 1e d0       	ifs (r0 <= 76) goto 60 <.GJTIE508_1_1_+0x28 : 1e1a9ca >
 1e1a98e:    02 fc b3 ff       	r2 = r0 + -77
 1e1a992:    92 e0 35 80       	if (r2 > 9) goto 106 <.GJTIE508_0_0_+0x26 : 1e1aa00 >
 1e1a996:    a2 00             	tbb [r2]


.GJTIS508_1_1_:
 1e1a998:    13     < 19 : 0x13 >
 1e1a999:    38     < 56 : 0x38 >
 1e1a99a:    38     < 56 : 0x38 >
 1e1a99b:    0f     < 15 : 0xF >
 1e1a99c:    38     < 56 : 0x38 >
 1e1a99d:    38     < 56 : 0x38 >
 1e1a99e:    0b     < 11 : 0xB >
 1e1a99f:    38     < 56 : 0x38 >
 1e1a9a0:    38     < 56 : 0x38 >
 1e1a9a1:    05     < 5 : 0x5 >
 1e1a9a2:    00 02             	r0 = [sp]			  ## lmp.c:574:30
 1e1a9a4:    42 90             	r2 = r0 + 4			  ## lmp.c:574:30
 1e1a9a6:    0a 02             	[sp] = r2			  ## lmp.c:574:30
 1e1a9a8:    00 40             	r0 = [r0 + 0]			  ## lmp.c:574:30
 1e1a9aa:    38 68             	b[r4 + 3] = r0			  ## lmp.c:574:28
 1e1a9ac:    ec 1f             	goto -40 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:574:28
 1e1a9ae:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:580:35
 1e1a9b0:    10 b1             	r0 |= 4			  ## lmp.c:580:35
 1e1a9b2:    58 68             	b[r4 + 5] = r0			  ## lmp.c:580:35
 1e1a9b4:    e8 1f             	goto -48 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:580:35
 1e1a9b6:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:576:26
 1e1a9b8:    10 b0             	r0 |= 1			  ## lmp.c:576:26
 1e1a9ba:    58 68             	b[r4 + 5] = r0			  ## lmp.c:576:26
 1e1a9bc:    e4 1f             	goto -56 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:576:26
 1e1a9be:    00 02             	r0 = [sp]			  ## lmp.c:586:34
 1e1a9c0:    42 90             	r2 = r0 + 4			  ## lmp.c:586:34
 1e1a9c2:    0a 02             	[sp] = r2			  ## lmp.c:586:34
 1e1a9c4:    00 40             	r0 = [r0 + 0]			  ## lmp.c:586:34
 1e1a9c6:    48 68             	b[r4 + 4] = r0			  ## lmp.c:586:32
 1e1a9c8:    de 1f             	goto -68 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:586:32
 1e1a9ca:    f0 8b             	r0 += -65
 1e1a9cc:    60 e0 1c 80       	if (r0 > 6) goto 56 <.GJTIE508_0_0_+0x2E : 1e1aa08 >
 1e1a9d0:    a0 00             	tbb [r0]


.GJTIS508_0_0_:
 1e1a9d2:    13     < 19 : 0x13 >
 1e1a9d3:    1b     < 27 : 0x1B >
 1e1a9d4:    1b     < 27 : 0x1B >
 1e1a9d5:    0f     < 15 : 0xF >
 1e1a9d6:    08     < 8 : 0x8 >
 1e1a9d7:    1b     < 27 : 0x1B >
 1e1a9d8:    04     < 4 : 0x4 >
 1e1a9d9:    00     < 0 : 0x0 >
 1e1a9da:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:582:33
 1e1a9dc:    90 b1             	r0 |= 8			  ## lmp.c:582:33
 1e1a9de:    58 68             	b[r4 + 5] = r0			  ## lmp.c:582:33
 1e1a9e0:    d2 1f             	goto -92 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:582:33
 1e1a9e2:    00 02             	r0 = [sp]			  ## lmp.c:570:39
 1e1a9e4:    42 90             	r2 = r0 + 4			  ## lmp.c:570:39
 1e1a9e6:    0a 02             	[sp] = r2			  ## lmp.c:570:39
 1e1a9e8:    00 40             	r0 = [r0 + 0]			  ## lmp.c:570:39
 1e1a9ea:    10 b1             	r0 |= 4			  ## lmp.c:570:28
 1e1a9ec:    18 68             	b[r4 + 1] = r0			  ## lmp.c:570:26
 1e1a9ee:    cb 1f             	goto -106 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:570:26
 1e1a9f0:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:578:26
 1e1a9f2:    90 b0             	r0 |= 2			  ## lmp.c:578:26
 1e1a9f4:    58 68             	b[r4 + 5] = r0			  ## lmp.c:578:26
 1e1a9f6:    c7 1f             	goto -114 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:578:26
 1e1a9f8:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:584:25
 1e1a9fa:    10 b2             	r0 |= 16			  ## lmp.c:584:25
 1e1a9fc:    58 68             	b[r4 + 5] = r0			  ## lmp.c:584:25
 1e1a9fe:    c3 1f             	goto -122 <lmp_format_packet+0x22 : 1e1a986 >			  ## lmp.c:584:25
 1e1aa00:    60 e7 bc 0f       	if (r0 == 118) goto -136 <lmp_format_packet+0x18 : 1e1a97c >
 1e1aa04:    50 e6 b3 0f       	if (r0 == 101) goto -154 <lmp_format_packet+0xA : 1e1a96e >
 1e1aa08:    30 70             	r0 = 3			  ## lmp.c:593:14
 1e1aa0a:    68 68             	b[r4 + 6] = r0			  ## lmp.c:593:14
 1e1aa0c:    78 68             	b[r4 + 7] = r0			  ## lmp.c:594:16
 1e1aa0e:    02 02             	r2 = [sp]			  ## lmp.c:595:44
 1e1aa10:    c0 99             	r0 = r4 + 28			  ## lmp.c:595:26
 1e1aa12:    bf f3 f8 56       	call -86544 <__vsprintf : 1e05806 >			  ## lmp.c:595:15
 1e1aa16:    58 58             	h[r4 + 10] = r0			  ## lmp.c:595:13
 1e1aa18:    02 0a             	sp += 4			  ## lmp.c:595:13
 1e1aa1a:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:596:1


lmp_get_esco_conn_statu:
 1e1aa1c:    c0 ff 14 31 00 00 	r0 = 12564 <lmp_acl_link : 3114 >			  ## lmp_esco.c:1119:0
 1e1aa22:    01 08             	r1 = r0			  ## lmp_esco.c:1119:0
 1e1aa24:    02 f6 cc 10       	r2 = [r1 + 204]			  ## lmp_esco.c:1122:19
 1e1aa28:    08 34             	if (r2 != 0) goto 16 <lmp_get_esco_conn_statu+0x1E : 1e1aa3a >			  ## lmp_esco.c:1122:19
 1e1aa2a:    11 fc e0 00       	r1 = r1 + 224			  ## lmp_esco.c:1121:5
 1e1aa2e:    02 fc e0 00       	r2 = r0 + 224			  ## lmp_esco.c:1121:5
 1e1aa32:    21 f2 f7 3f       	if (r1 < r2) goto -18 <lmp_get_esco_conn_statu+0x8 : 1e1aa24 >			  ## lmp_esco.c:1121:5
 1e1aa36:    00 70             	r0 = 0
 1e1aa38:    20 00             	rts			  ## lmp_esco.c:1127:1
 1e1aa3a:    10 70             	r0 = 1
 1e1aa3c:    20 00             	rts			  ## lmp_esco.c:1127:1


lmp_request:
 1e1aa3e:    62 01             	[--sp] = {r3, r2}			  ## lmp.c:620:0
 1e1aa40:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:620:0
 1e1aa42:    fe 0b             	sp += -4			  ## lmp.c:620:0
 1e1aa44:    16 08             	r6 = r1			  ## lmp.c:620:0
 1e1aa46:    04 08             	r4 = r0			  ## lmp.c:620:0
 1e1aa48:    10 71             	r0 = 17			  ## lmp.c:624:10
 1e1aa4a:    bf f3 af 56       	call -86690 <bredr_tx_bulk_alloc : 1e057ac >			  ## lmp.c:624:10
 1e1aa4e:    05 08             	r5 = r0			  ## lmp.c:624:10
 1e1aa50:    02 3a             	if (r5 != 0) goto 4 <lmp_request+0x18 : 1e1aa56 >
 1e1aa52:    8f f3 20 45       	call 2001472 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1aa56:    42 a1             	r2 = sp + 20
 1e1aa58:    0a 02             	[sp] = r2			  ## lmp.c:627:5
 1e1aa5a:    50 08             	r0 = r5			  ## lmp.c:628:5
 1e1aa5c:    61 08             	r1 = r6			  ## lmp.c:628:5
 1e1aa5e:    82 17             	call -252 <lmp_format_packet : 1e1a964 >			  ## lmp.c:628:5
 1e1aa60:    00 f9 7e 40       	r0 = b[r4 + 126] (u)			  ## lmp.c:632:20
 1e1aa64:    10 e0 03 10       	if (r0 != 1) goto 6 <lmp_request+0x30 : 1e1aa6e >			  ## lmp.c:632:20
 1e1aa68:    c0 6b             	r0 = b[r5 + 28] (u)			  ## lmp.c:633:21
 1e1aa6a:    10 b0             	r0 |= 1			  ## lmp.c:633:21
 1e1aa6c:    c8 6b             	b[r5 + 28] = r0			  ## lmp.c:633:21
 1e1aa6e:    00 f6 c4 40       	r0 = [r4 + 196]			  ## lmp.c:637:38
 1e1aa72:    51 08             	r1 = r5			  ## lmp.c:637:5
 1e1aa74:    80 f3 37 04       	call 2158 <link_conn_tx_bulk_avaiable : 1e1b2e6 >			  ## lmp.c:637:5
 1e1aa78:    02 0a             	sp += 4			  ## lmp.c:637:5
 1e1aa7a:    16 01             	{rets, r6-r4} = [sp++]			  ## lmp.c:637:5
 1e1aa7c:    04 0a             	sp += 8			  ## lmp.c:637:5
 1e1aa7e:    20 00             	rts			  ## lmp.c:637:5


lmp_hci_disconnect:
 1e1aa80:    7a 01             	[--sp] = {rets, r10-r4}			  ## lmp_hci.c:371:0
 1e1aa82:    fc 0b             	sp += -8			  ## lmp_hci.c:371:0
 1e1aa84:    04 08             	r4 = r0			  ## lmp_hci.c:371:0
 1e1aa86:    5c 17             	call -328 <lmp_conn_for_handle : 1e1a940 >			  ## lmp_hci.c:372:35
 1e1aa88:    03 20             	if (r0 == 0) goto 6 <lmp_hci_disconnect+0x10 : 1e1aa90 >			  ## lmp_hci.c:374:9
 1e1aa8a:    bf f3 8b d7       	call -20714 <lmp_hci_cmd_to_conn_for_handle : 1e159a4 >			  ## lmp_hci.c:376:16
 1e1aa8e:    2e 18             	goto 92 <lmp_hci_disconnect+0x6C : 1e1aaec >
 1e1aa90:    2d 28             	if (r4 == 0) goto 90 <lmp_hci_disconnect+0x6C : 1e1aaec >
 1e1aa92:    c5 ff 14 31 00 00 	r5 = 12564 <lmp_acl_link : 3114 >
 1e1aa98:    6a 71             	r10 = 22
 1e1aa9a:    c8 ff 56 28 e1 01 	r8 = 31533142 <update_target_end+0x2626 : 1e12856 >
 1e1aaa0:    c9 ff 81 27 e1 01 	r9 = 31532929 <update_target_end+0x2551 : 1e12781 >
 1e1aaa6:    50 08             	r0 = r5
 1e1aaa8:    06 fc 7c 00       	r6 = r0 + 124
 1e1aaac:    41 4d             	r1 = [r6 + 80]			  ## lmp_esco.c:275:19
 1e1aaae:    18 22             	if (r1 == 0) goto 48 <lmp_hci_disconnect+0x60 : 1e1aae0 >			  ## lmp_esco.c:275:19
 1e1aab0:    02 62             	r2 = b[r1 + 0] (u)			  ## lmp_esco.c:276:17
 1e1aab2:    42 f2 15 10       	if (r2 != r4) goto 42 <lmp_hci_disconnect+0x60 : 1e1aae0 >			  ## lmp_esco.c:276:17
 1e1aab6:    22 62             	r2 = b[r1 + 2] (u)			  ## lmp_esco.c:277:56
 1e1aab8:    87 62             	r7 = b[r1 + 8] (u)			  ## lmp_esco.c:277:56
 1e1aaba:    22 e0 09 10       	if (r2 != 2) goto 18 <lmp_hci_disconnect+0x50 : 1e1aad0 >			  ## lmp_esco.c:277:21
 1e1aabe:    1a f5 04 00       	[sp+4] = r10			  ## lmp_esco.c:278:21
 1e1aac2:    e2 7f             	r2 = 254			  ## lmp_esco.c:278:21
 1e1aac4:    d3 70             	r3 = 13			  ## lmp_esco.c:278:21
 1e1aac6:    0f 02             	[sp] = r7			  ## lmp_esco.c:278:21
 1e1aac8:    81 08             	r1 = r8			  ## lmp_esco.c:278:21
 1e1aaca:    b9 17             	call -142 <lmp_request : 1e1aa3e >			  ## lmp_esco.c:278:21
 1e1aacc:    50 75             	r0 = 85			  ## lmp_esco.c:278:21
 1e1aace:    07 18             	goto 14 <lmp_hci_disconnect+0x5E : 1e1aade >			  ## lmp_esco.c:278:21
 1e1aad0:    82 75             	r2 = 88			  ## lmp_esco.c:282:21
 1e1aad2:    1a f5 00 00       	[sp] = r10			  ## lmp_esco.c:282:21
 1e1aad6:    91 08             	r1 = r9			  ## lmp_esco.c:282:21
 1e1aad8:    73 08             	r3 = r7			  ## lmp_esco.c:282:21
 1e1aada:    b1 17             	call -158 <lmp_request : 1e1aa3e >			  ## lmp_esco.c:282:21
 1e1aadc:    30 75             	r0 = 83			  ## lmp_esco.c:282:21
 1e1aade:    18 6c             	b[r6 + 1] = r0
 1e1aae0:    60 fc 64 00       	r0 = r6 + 100			  ## lmp_esco.c:274:5
 1e1aae4:    51 fc e0 00       	r1 = r5 + 224
 1e1aae8:    10 f2 de 3f       	if (r0 < r1) goto -68 <lmp_hci_disconnect+0x28 : 1e1aaa8 >
 1e1aaec:    04 0a             	sp += 8
 1e1aaee:    5a 01             	{pc, r10-r4} = [sp++]


lmp_hci_io_capability_request_reply:
 1e1aaf0:    ff f3 a3 d7       	goto -20666 <lmp_hci_cmd_to_conn_for_addr : 1e15a3a >			  ## lmp_hci.c:305:0


lmp_private_handler_for_remote_addr:
 1e1aaf4:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:479:0
 1e1aaf6:    16 08             	r6 = r1			  ## lmp.c:479:0
 1e1aaf8:    05 08             	r5 = r0			  ## lmp.c:479:0
 1e1aafa:    8f f3 3c 4d       	call 2005624 <lmp_conn_for_address : 4576 >			  ## lmp.c:481:12
 1e1aafe:    04 70             	r4 = 0
 1e1ab00:    18 20             	if (r0 == 0) goto 48 <lmp_private_handler_for_remote_addr+0x3E : 1e1ab32 >
 1e1ab02:    00 fc a4 00       	r0 = r0 + 164
 1e1ab06:    16 e0 07 10       	if (r6 != 1) goto 14 <lmp_private_handler_for_remote_addr+0x24 : 1e1ab18 >			  ## lmp.c:486:9
 1e1ab0a:    01 40             	r1 = [r0 + 0]			  ## lmp.c:487:26
 1e1ab0c:    21 fd 09 19       	r1 = r1 & 9			  ## lmp.c:487:60
 1e1ab10:    81 e0 0f 00       	if (r1 == 8) goto 30 <lmp_private_handler_for_remote_addr+0x3E : 1e1ab32 >			  ## lmp.c:487:60
 1e1ab14:    24 50             	r4 = h[r0 + 4] (u)			  ## lmp.c:490:29
 1e1ab16:    0d 18             	goto 26 <lmp_private_handler_for_remote_addr+0x3E : 1e1ab32 >			  ## lmp.c:490:29
 1e1ab18:    a6 40             	r6 = [r0 + 40]			  ## lmp.c:493:15
 1e1ab1a:    0b 2c             	if (r6 == 0) goto 22 <lmp_private_handler_for_remote_addr+0x3E : 1e1ab32 >
 1e1ab1c:    70 4c             	r0 = [r6 + 28]			  ## lmp.c:493:53
 1e1ab1e:    00 f6 c4 00       	r0 = [r0 + 196]			  ## lmp.c:493:63
 1e1ab22:    00 fc a3 00       	r0 = r0 + 163			  ## lmp.c:493:36
 1e1ab26:    62 70             	r2 = 6			  ## lmp.c:493:29
 1e1ab28:    51 08             	r1 = r5			  ## lmp.c:493:29
 1e1ab2a:    97 f3 df 61       	call 3064766 <memcmp : 106eec >			  ## lmp.c:493:29
 1e1ab2e:    01 30             	if (r0 != 0) goto 2 <lmp_private_handler_for_remote_addr+0x3E : 1e1ab32 >			  ## lmp.c:493:29
 1e1ab30:    04 6c             	r4 = b[r6 + 0] (u)			  ## lmp.c:494:33
 1e1ab32:    40 08             	r0 = r4			  ## lmp.c:498:1
 1e1ab34:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:498:1


lmp_hci_accept_connection_request:
 1e1ab36:    ff f3 80 d7       	goto -20736 <lmp_hci_cmd_to_conn_for_addr : 1e15a3a >			  ## lmp_hci.c:406:0


lmp_hci_accept_sco_connection_request:
 1e1ab3a:    ff f3 7e d7       	goto -20740 <lmp_hci_cmd_to_conn_for_addr : 1e15a3a >			  ## lmp_hci.c:413:0


lmp_hci_reject_connection_request:
 1e1ab3e:    ff f3 7c d7       	goto -20744 <lmp_hci_cmd_to_conn_for_addr : 1e15a3a >			  ## lmp_hci.c:424:0


lmp_hci_link_key_request_reply:
 1e1ab42:    ff f3 7a d7       	goto -20748 <lmp_hci_cmd_to_conn_for_addr : 1e15a3a >			  ## lmp_hci.c:491:0


lmp_hci_link_key_request_negative_reply:
 1e1ab46:    ff f3 78 d7       	goto -20752 <lmp_hci_cmd_to_conn_for_addr : 1e15a3a >			  ## lmp_hci.c:499:0


lmp_hci_pin_code_request_reply:
 1e1ab4a:    ff f3 76 d7       	goto -20756 <lmp_hci_cmd_to_conn_for_addr : 1e15a3a >			  ## lmp_hci.c:341:0


lmp_private_get_tx_packet_buffer:
 1e1ab4e:    74 01             	[--sp] = {rets, r4}			  ## lmp_hci.c:97:0
 1e1ab50:    04 fc fc ff       	r4 = r0 + -4			  ## lmp_hci.c:100:35
 1e1ab54:    40 08             	r0 = r4			  ## lmp_hci.c:100:10
 1e1ab56:    bf f3 29 56       	call -86958 <bredr_tx_bulk_alloc : 1e057ac >			  ## lmp_hci.c:100:10
 1e1ab5a:    03 20             	if (r0 == 0) goto 6 <lmp_private_get_tx_packet_buffer+0x14 : 1e1ab62 >
 1e1ab5c:    5c 50             	h[r0 + 10] = r4			  ## lmp_hci.c:102:17
 1e1ab5e:    80 81             	r0 += 24			  ## lmp_hci.c:104:16
 1e1ab60:    54 01             	{pc, r4} = [sp++]			  ## lmp_hci.c:108:1
 1e1ab62:    00 70             	r0 = 0
 1e1ab64:    54 01             	{pc, r4} = [sp++]			  ## lmp_hci.c:108:1


lmp_hci_send_packet:
 1e1ab66:    77 01             	[--sp] = {rets, r7-r4}			  ## lmp_hci.c:111:0
 1e1ab68:    16 08             	r6 = r1			  ## lmp_hci.c:111:0
 1e1ab6a:    04 08             	r4 = r0			  ## lmp_hci.c:111:0
 1e1ab6c:    01 70             	r1 = 0			  ## lmp_hci.c:112:18
 1e1ab6e:    bf f3 62 57       	call -86332 <btctler_little_endian_read_16 : 1e05a36 >			  ## lmp_hci.c:112:18
 1e1ab72:    30 fd f0 0a       	r0 = r0 & 4294905855			  ## lmp_hci.c:112:18
 1e1ab76:    e4 16             	call -568 <lmp_conn_for_handle : 1e1a940 >			  ## lmp_hci.c:113:35
 1e1ab78:    05 08             	r5 = r0			  ## lmp_hci.c:113:35
 1e1ab7a:    84 8e             	r4 += -24
 1e1ab7c:    1e 2a             	if (r5 == 0) goto 60 <lmp_hci_send_packet+0x54 : 1e1abba >
 1e1ab7e:    50 58             	r0 = h[r4 + 10] (u)
 1e1ab80:    67 fc fc ff       	r7 = r6 + -4
 1e1ab84:    07 f2 02 d0       	ifs (r7 <= r0) goto 4 <lmp_hci_send_packet+0x26 : 1e1ab8c >
 1e1ab88:    8f f3 85 44       	call 2001162 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1ab8c:    81 9d             	r1 = r6 + 24			  ## link_bulk.c:414:38
 1e1ab8e:    40 08             	r0 = r4			  ## link_bulk.c:414:5
 1e1ab90:    bf f3 5f 93       	call -55618 <lbuf_realloc : 1e0d252 >			  ## link_bulk.c:414:5
 1e1ab94:    00 70             	r0 = 0			  ## lmp_hci.c:132:21
 1e1ab96:    68 58             	h[r4 + 12] = r0			  ## lmp_hci.c:132:21
 1e1ab98:    5f 58             	h[r4 + 10] = r7			  ## lmp_hci.c:133:21
 1e1ab9a:    b0 70             	r0 = 11			  ## lmp_hci.c:134:21
 1e1ab9c:    38 68             	b[r4 + 3] = r0			  ## lmp_hci.c:134:21
 1e1ab9e:    90 69             	r0 = b[r4 + 25] (u)			  ## lmp_hci.c:136:9
 1e1aba0:    21 fd f0 09       	r1 = r0 & 240			  ## lmp_hci.c:136:32
 1e1aba4:    10 70             	r0 = 1			  ## lmp_hci.c:136:32
 1e1aba6:    01 e1 01 00       	if (r1 == 16) goto 2 <lmp_hci_send_packet+0x46 : 1e1abac >			  ## lmp_hci.c:136:32
 1e1abaa:    20 70             	r0 = 2			  ## lmp_hci.c:136:9
 1e1abac:    68 68             	b[r4 + 6] = r0
 1e1abae:    00 f6 c4 50       	r0 = [r5 + 196]			  ## lmp_hci.c:144:38
 1e1abb2:    41 08             	r1 = r4			  ## lmp_hci.c:144:5
 1e1abb4:    17 01             	{rets, r7-r4} = [sp++]			  ## lmp_hci.c:144:5
 1e1abb6:    c0 f3 96 03       	goto 1836 <link_conn_tx_bulk_avaiable : 1e1b2e6 >			  ## lmp_hci.c:144:5
 1e1abba:    40 08             	r0 = r4			  ## lmp_hci.c:117:9
 1e1abbc:    17 01             	{rets, r7-r4} = [sp++]			  ## lmp_hci.c:117:9
 1e1abbe:    ff f3 0b 57       	goto -86506 <bredr_tx_bulk_free : 1e059d8 >			  ## lmp_hci.c:117:9


lmp_hci_create_connection:
 1e1abc2:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp_hci.c:543:0
 1e1abc4:    f6 0b             	sp += -20			  ## lmp_hci.c:543:0
 1e1abc6:    08 f9 01 00       	r8 = b[r0 + 1] (u)			  ## lmp_hci.c:546:5
 1e1abca:    03 60             	r3 = b[r0 + 0] (u)			  ## lmp_hci.c:546:5
 1e1abcc:    35 60             	r5 = b[r0 + 3] (u)			  ## lmp_hci.c:546:5
 1e1abce:    26 60             	r6 = b[r0 + 2] (u)			  ## lmp_hci.c:546:5
 1e1abd0:    57 60             	r7 = b[r0 + 5] (u)			  ## lmp_hci.c:546:5
 1e1abd2:    44 60             	r4 = b[r0 + 4] (u)			  ## lmp_hci.c:546:5
 1e1abd4:    4a 02             	[sp+16] = r2			  ## lmp_hci.c:547:5
 1e1abd6:    00 70             	r0 = 0			  ## lmp_hci.c:547:5
 1e1abd8:    38 02             	[sp+12] = r0			  ## lmp_hci.c:547:5
 1e1abda:    28 02             	[sp+8] = r0			  ## lmp_hci.c:547:5
 1e1abdc:    19 02             	[sp+4] = r1			  ## lmp_hci.c:547:5
 1e1abde:    c8 fd 40 47       	r4 <= insert(r7, p:8, l:8)			  ## lmp_hci.c:546:5
 1e1abe2:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## lmp_hci.c:546:5
 1e1abe6:    c8 fd 40 38       	r3 <= insert(r8, p:8, l:8)			  ## lmp_hci.c:546:5
 1e1abea:    d0 fd 80 36       	r3 <= insert(r6, p:16, l:16)			  ## lmp_hci.c:546:5
 1e1abee:    c0 ff 02 00 40 00 	r0 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## lmp_hci.c:547:5
 1e1abf4:    71 70             	r1 = 7			  ## lmp_hci.c:547:5
 1e1abf6:    02 fb 05 04       	r2 = 1029 <BTCTLER_LE_RAM_TOTAL+0x2D : 405 >			  ## lmp_hci.c:547:5
 1e1abfa:    0c 02             	[sp] = r4			  ## lmp_hci.c:547:5
 1e1abfc:    bf f3 27 d7       	call -20914 <btctrler_hci_cmd_to_task : 1e15a4e >			  ## lmp_hci.c:547:5
 1e1ac00:    0a 0a             	sp += 20
 1e1ac02:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp_hci.c:548:1


lmp_hci_host_num_of_completed_packets:
 1e1ac04:    ff f3 ce d6       	goto -21092 <lmp_hci_cmd_to_conn_for_handle : 1e159a4 >			  ## lmp_hci.c:257:0


lmp_hci_private_free_acl_packet:
 1e1ac08:    74 01             	[--sp] = {rets, r4}			  ## lmp_hci.c:598:0
 1e1ac0a:    04 08             	r4 = r0			  ## lmp_hci.c:598:0
 1e1ac0c:    97 f3 c6 60       	call 3064204 <local_irq_disable : 106d9c >			  ## lmp_hci.c:601:5
 1e1ac10:    00 f7 f2 4f       	r0 = h[r4 + -14] (u)			  ## lmp_hci.c:602:16
 1e1ac14:    90 b1             	r0 |= 8			  ## lmp_hci.c:602:16
 1e1ac16:    10 f7 f2 4f       	h[r4 + -14] = r0			  ## lmp_hci.c:602:16
 1e1ac1a:    14 01             	{rets, r4} = [sp++]			  ## lmp_hci.c:603:5
 1e1ac1c:    d7 f3 bc 60       	goto 3064184 <local_irq_enable : 106d98 >			  ## lmp_hci.c:603:5


lmp_hci_private_try_free_acl_packet:
 1e1ac20:    74 01             	[--sp] = {rets, r4}			  ## lmp_hci.c:578:0
 1e1ac22:    04 08             	r4 = r0			  ## lmp_hci.c:578:0
 1e1ac24:    97 f3 ba 60       	call 3064180 <local_irq_disable : 106d9c >			  ## lmp_hci.c:581:5
 1e1ac28:    00 f7 f2 4f       	r0 = h[r4 + -14] (u)			  ## lmp_hci.c:582:14
 1e1ac2c:    24 f3 03 00       	if ((r0 & 16) != 0) goto 6 <lmp_hci_private_try_free_acl_packet+0x16 : 1e1ac36 >			  ## lmp_hci.c:582:14
 1e1ac30:    90 b1             	r0 |= 8			  ## lmp_hci.c:583:20
 1e1ac32:    10 f7 f2 4f       	h[r4 + -14] = r0			  ## lmp_hci.c:583:20
 1e1ac36:    14 01             	{rets, r4} = [sp++]			  ## lmp_hci.c:585:5
 1e1ac38:    d7 f3 ae 60       	goto 3064156 <local_irq_enable : 106d98 >			  ## lmp_hci.c:585:5


tws_lmp_clear_a2dp_packet:
 1e1ac3c:    20 00             	rts			  ## lmp.c:4523:0


bt_updata_clr_flag:
 1e1ac3e:    c0 ff 84 0f 00 00 	r0 = 3972 <bt_res_updata_flag : f84 >			  ## lmp_escape3.c:58:0
 1e1ac44:    01 40             	r1 = [r0 + 0]			  ## lmp_escape3.c:60:28
 1e1ac46:    f1 b0             	r1 &= 4294967293			  ## lmp_escape3.c:60:28
 1e1ac48:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:60:28
 1e1ac4a:    20 00             	rts			  ## lmp_escape3.c:62:1


bt_updata_control:
 1e1ac4c:    74 01             	[--sp] = {rets, r4}			  ## lmp_escape3.c:515:0
 1e1ac4e:    f8 0b             	sp += -16			  ## lmp_escape3.c:515:0
 1e1ac50:    c4 ff 80 0f 00 00 	r4 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:517:35
 1e1ac56:    04 48             	r4 = [r4 + 0]			  ## lmp_escape3.c:517:35
 1e1ac58:    0b 28             	if (r4 == 0) goto 22 <bt_updata_control+0x24 : 1e1ac70 >
 1e1ac5a:    3b 02             	[sp+12] = r3			  ## lmp_escape3.c:524:5
 1e1ac5c:    2a 02             	[sp+8] = r2			  ## lmp_escape3.c:524:5
 1e1ac5e:    19 02             	[sp+4] = r1			  ## lmp_escape3.c:524:5
 1e1ac60:    c1 ff 7a 27 e1 01 	r1 = 31532922 <update_target_end+0x254A : 1e1277a >			  ## lmp_escape3.c:524:5
 1e1ac66:    c2 7f             	r2 = 252			  ## lmp_escape3.c:524:5
 1e1ac68:    63 76             	r3 = 102			  ## lmp_escape3.c:524:5
 1e1ac6a:    08 02             	[sp] = r0			  ## lmp_escape3.c:524:5
 1e1ac6c:    40 08             	r0 = r4			  ## lmp_escape3.c:524:5
 1e1ac6e:    e7 16             	call -562 <lmp_request : 1e1aa3e >			  ## lmp_escape3.c:524:5
 1e1ac70:    08 0a             	sp += 16
 1e1ac72:    54 01             	{pc, r4} = [sp++]			  ## lmp_escape3.c:525:1


bt_updata_get_flag:
 1e1ac74:    c0 ff 84 0f 00 00 	r0 = 3972 <bt_res_updata_flag : f84 >			  ## lmp_escape3.c:65:0
 1e1ac7a:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:67:16
 1e1ac7c:    20 00             	rts			  ## lmp_escape3.c:70:1


reg_revic_buf_addr:
 1e1ac7e:    c0 ff 88 0f 00 00 	r0 = 3976 <uboot_revic_handle : f88 >			  ## lmp_escape3.c:74:0
 1e1ac84:    c1 ff 2c c4 e1 01 	r1 = 31573036 <bt_updata_handle : 1e1c42c >			  ## lmp_escape3.c:75:24
 1e1ac8a:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:75:24
 1e1ac8c:    20 00             	rts			  ## lmp_escape3.c:76:1


lmp_update_init:
 1e1ac8e:    c0 ff 80 0f 00 00 	r0 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:542:0
 1e1ac94:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:544:39
 1e1ac96:    04 20             	if (r0 == 0) goto 8 <lmp_update_init+0x12 : 1e1aca0 >
 1e1ac98:    00 f6 c4 00       	r0 = [r0 + 196]			  ## lmp_escape3.c:549:15
 1e1ac9c:    11 70             	r1 = 1			  ## lmp_escape3.c:549:39
 1e1ac9e:    49 61             	b[r0 + 20] = r1			  ## lmp_escape3.c:549:39
 1e1aca0:    20 00             	rts


lmp_update_exit:
 1e1aca2:    c0 ff 80 0f 00 00 	r0 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:555:0
 1e1aca8:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:557:39
 1e1acaa:    04 20             	if (r0 == 0) goto 8 <lmp_update_exit+0x12 : 1e1acb4 >
 1e1acac:    00 f6 c4 00       	r0 = [r0 + 196]			  ## lmp_escape3.c:563:15
 1e1acb0:    01 70             	r1 = 0			  ## lmp_escape3.c:563:39
 1e1acb2:    49 61             	b[r0 + 20] = r1			  ## lmp_escape3.c:563:39
 1e1acb4:    20 00             	rts


packet_1M_table:
 1e1acb6:    11 00             	lockclr
 1e1acb8:    11 00             	lockclr
 1e1acba:    03 00             	idle
 1e1acbc:    01 00             	nop
 1e1acbe:    1b 00             	cli
 1e1acc0:    1b 00             	cli
 1e1acc2:    04 00             	bkpt
 1e1acc4:    01 00             	nop
 1e1acc6:    79 00             	sti r9
 1e1acc8:    79 00             	sti r9
 1e1acca:    0a 00             	ssync
 1e1accc:    03 00             	idle
 1e1acce:    b7 00             	tbh [r7]
 1e1acd0:    b7 00             	tbh [r7]
 1e1acd2:    0b 00             	ssync
 1e1acd4:    03 00             	idle
 1e1acd6:    e0 00             	flush [r0]
 1e1acd8:    e0 00             	flush [r0]
 1e1acda:    0e 00              <unkown instruction>
 1e1acdc:    05 00             	bkpt
 1e1acde:    53 01             	{pc, r3} = [sp++]
 1e1ace0:    53 01             	{pc, r3} = [sp++]
 1e1ace2:    0f 00              <unkown instruction>
 1e1ace4:    05 00             	bkpt


packet_1M_table_tws:
 1e1ace6:    1b 00             	cli
 1e1ace8:    1b 00             	cli
 1e1acea:    04 00             	bkpt
 1e1acec:    01 00             	nop
 1e1acee:    b7 00             	tbh [r7]
 1e1acf0:    b7 00             	tbh [r7]
 1e1acf2:    0b 00             	ssync
 1e1acf4:    03 00             	idle
 1e1acf6:    53 01             	{pc, r3} = [sp++]
 1e1acf8:    53 01             	{pc, r3} = [sp++]
 1e1acfa:    0f 00              <unkown instruction>
 1e1acfc:    05 00             	bkpt


packet_2M_table:
 1e1acfe:    6c 00             	cli r12
 1e1ad00:    36 00             	[--sp] = rets
 1e1ad02:    04 00             	bkpt
 1e1ad04:    01 00             	nop
 1e1ad06:    a5 01             	{psr, retx, reti} = [sp++]
 1e1ad08:    6f 01             	[--sp] = {r15-r4}
 1e1ad0a:    0a 00             	ssync
 1e1ad0c:    03 00             	idle
 1e1ad0e:    a7 02             	r7 = [sp+40]
 1e1ad10:    a7 02             	r7 = [sp+40]
 1e1ad12:    0e 00              <unkown instruction>
 1e1ad14:    05 00             	bkpt


__bt_updata_save_link_info:
 1e1ad16:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_link.c:5625:0
 1e1ad18:    14 08             	r4 = r1			  ## bredr_link.c:5625:0
 1e1ad1a:    05 08             	r5 = r0			  ## bredr_link.c:5625:0
 1e1ad1c:    c0 ff 09 28 e1 01 	r0 = 31533065 <update_target_end+0x25D9 : 1e12809 >			  ## bredr_link.c:5626:5
 1e1ad22:    c1 ff 27 28 e1 01 	r1 = 31533095 <update_target_end+0x25F7 : 1e12827 >			  ## bredr_link.c:5626:5
 1e1ad28:    42 08             	r2 = r4			  ## bredr_link.c:5626:5
 1e1ad2a:    bf f3 3c 90       	call -57224 <printf : 1e0cda6 >			  ## bredr_link.c:5626:5
 1e1ad2e:    50 fc 58 00       	r0 = r5 + 88			  ## bredr_link.c:5626:5
 1e1ad32:    21 60             	r1 = b[r0 + 2] (u)			  ## bredr_link.c:5639:40
 1e1ad34:    82 68             	r2 = b[r4 + 8] (u)			  ## bredr_link.c:5639:21
 1e1ad36:    49 d0             	r1 = r1 >> 1			  ## bredr_link.c:5639:21
 1e1ad38:    c1 fd 08 21       	r2 <= insert(r1, p:1, l:1)			  ## bredr_link.c:5639:21
 1e1ad3c:    8a 68             	b[r4 + 8] = r2			  ## bredr_link.c:5639:21
 1e1ad3e:    21 60             	r1 = b[r0 + 2] (u)			  ## bredr_link.c:5640:40
 1e1ad40:    52 d0             	r2 = r2 >> 1			  ## bredr_link.c:5640:21
 1e1ad42:    df fd 08 12       	r1 <= insert(r2, p:1, l:31)			  ## bredr_link.c:5640:21
 1e1ad46:    89 68             	b[r4 + 8] = r1			  ## bredr_link.c:5640:21
 1e1ad48:    22 60             	r2 = b[r0 + 2] (u)			  ## bredr_link.c:5641:40
 1e1ad4a:    92 d0             	r2 = r2 >> 2			  ## bredr_link.c:5641:21
 1e1ad4c:    c1 fd 10 12       	r1 <= insert(r2, p:2, l:1)			  ## bredr_link.c:5641:21
 1e1ad50:    89 68             	b[r4 + 8] = r1			  ## bredr_link.c:5641:21
 1e1ad52:    22 60             	r2 = b[r0 + 2] (u)			  ## bredr_link.c:5642:41
 1e1ad54:    21 fd 87 19       	r1 = r1 & 135			  ## bredr_link.c:5642:22
 1e1ad58:    22 fd 78 29       	r2 = r2 & 120			  ## bredr_link.c:5642:41
 1e1ad5c:    51 b4             	r1 |= r2			  ## bredr_link.c:5642:22
 1e1ad5e:    89 68             	b[r4 + 8] = r1			  ## bredr_link.c:5642:22
 1e1ad60:    31 60             	r1 = b[r0 + 3] (u)			  ## bredr_link.c:5643:46
 1e1ad62:    99 68             	b[r4 + 9] = r1			  ## bredr_link.c:5643:27
 1e1ad64:    41 60             	r1 = b[r0 + 4] (u)			  ## bredr_link.c:5644:46
 1e1ad66:    a9 68             	b[r4 + 10] = r1			  ## bredr_link.c:5644:27
 1e1ad68:    31 50             	r1 = h[r0 + 6] (u)			  ## bredr_link.c:5645:42
 1e1ad6a:    69 58             	h[r4 + 12] = r1			  ## bredr_link.c:5645:23
 1e1ad6c:    52 40             	r2 = [r0 + 20]			  ## bredr_link.c:5646:37
 1e1ad6e:    4a 48             	[r4 + 16] = r2			  ## bredr_link.c:5646:31
 1e1ad70:    21 f7 0c 00       	r1 = h[r0 + 12] (s)			  ## bredr_link.c:5649:36
 1e1ad74:    c0 ff 42 28 e1 01 	r0 = 31533122 <update_target_end+0x2612 : 1e12842 >			  ## bredr_link.c:5649:5
 1e1ad7a:    15 01             	{rets, r5, r4} = [sp++]			  ## bredr_link.c:5649:5
 1e1ad7c:    ff f3 13 90       	goto -57306 <printf : 1e0cda6 >			  ## bredr_link.c:5649:5


__bt_updata_save_curr_used_frame:
 1e1ad80:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_frame.c:2801:0
 1e1ad82:    c5 ff a0 2b 00 00 	r5 = 11168 <btctler_bss_start : 2ba0 >			  ## bredr_frame.c:2801:0
 1e1ad88:    06 70             	r6 = 0			  ## bredr_frame.c:2801:0
 1e1ad8a:    52 08             	r2 = r5			  ## bredr_frame.c:2801:0
 1e1ad8c:    04 70             	r4 = 0			  ## bredr_frame.c:2801:0
 1e1ad8e:    43 f6 04 20       	r3 = [r2 ++= 4]			  ## bredr_frame.c:2816:22
 1e1ad92:    03 f2 05 00       	if (r3 == r0) goto 10 <__bt_updata_save_curr_used_frame+0x20 : 1e1ada0 >			  ## bredr_frame.c:2816:22
 1e1ad96:    14 80             	r4 += 1			  ## bredr_frame.c:2815:39
 1e1ad98:    16 80             	r6 += 1			  ## bredr_frame.c:2815:19
 1e1ad9a:    84 e0 f8 bf       	ifs (r4 < 8) goto -16 <__bt_updata_save_curr_used_frame+0xE : 1e1ad8e >			  ## bredr_frame.c:2815:19
 1e1ad9e:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_frame.c:2824:1
 1e1ada0:    50 fc 40 00       	r0 = r5 + 64			  ## bredr_frame.c:2817:13
 1e1ada4:    42 71             	r2 = 20			  ## bredr_frame.c:2817:13
 1e1ada6:    97 f3 9d 60       	call 3064122 <memcpy : 106ee4 >			  ## bredr_frame.c:2817:13
 1e1adaa:    16 f9 41 50       	b[r5 + 65] = r6			  ## bredr_frame.c:2818:51
 1e1adae:    c0 ff 85 27 e1 01 	r0 = 31532933 <update_target_end+0x2555 : 1e12785 >			  ## bredr_frame.c:2819:13
 1e1adb4:    41 08             	r1 = r4			  ## bredr_frame.c:2819:13
 1e1adb6:    16 01             	{rets, r6-r4} = [sp++]			  ## bredr_frame.c:2819:13
 1e1adb8:    ff f3 f5 8f       	goto -57366 <printf : 1e0cda6 >			  ## bredr_frame.c:2819:13


bredr_bd_close_frame:
 1e1adbc:    20 fb 1c 0b       	r0 = 1835008			  ## bredr_frame.c:2253:0
 1e1adc0:    11 40             	r1 = [r0 + 4]			  ## bredr_frame.c:2254:21
 1e1adc2:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:2254:21
 1e1adc4:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2254:21
 1e1adc6:    00 f4 84 09       	[r0 + 0] |= 132			  ## bredr_frame.c:2255:15
 1e1adca:    01 40             	r1 = [r0 + 0]			  ## bredr_frame.c:2259:12
 1e1adcc:    28 f3 fd 1f       	if ((r1 & 256) != 0) goto -6 <bredr_bd_close_frame+0xE : 1e1adca >			  ## bredr_frame.c:2259:5
 1e1add0:    20 00             	rts			  ## bredr_frame.c:2261:1


bredr_bd_frame_disable:
 1e1add2:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2280:0
 1e1add4:    04 08             	r4 = r0			  ## bredr_frame.c:2280:0
 1e1add6:    97 f3 e1 5f       	call 3063746 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2281:5
 1e1adda:    c0 ff 04 00 1c 00 	r0 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2283:15
 1e1ade0:    00 40             	r0 = [r0 + 0]			  ## bredr_frame.c:2283:15
 1e1ade2:    01 f9 34 42       	r1 = b[r4 + 564] (u)			  ## bredr_frame.c:2285:15
 1e1ade6:    84 fd 60 00       	r0 = uextra(r0, p:12, l:4)			  ## bredr_frame.c:2283:38
 1e1adea:    10 f2 01 10       	if (r0 != r1) goto 2 <bredr_bd_frame_disable+0x1E : 1e1adf0 >
 1e1adee:    e6 17             	call -52 <bredr_bd_close_frame : 1e1adbc >			  ## bredr_frame.c:2286:9
 1e1adf0:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2289:5
 1e1adf2:    d7 f3 d1 5f       	goto 3063714 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2289:5


bredr_bd_frame_enable:
 1e1adf6:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2270:0
 1e1adf8:    04 08             	r4 = r0			  ## bredr_frame.c:2270:0
 1e1adfa:    97 f3 cf 5f       	call 3063710 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2271:5
 1e1adfe:    00 f9 34 42       	r0 = b[r4 + 564] (u)			  ## bredr_frame.c:2272:24
 1e1ae02:    01 f7 36 42       	r1 = h[r4 + 566] (u)			  ## bredr_frame.c:2272:44
 1e1ae06:    00 c3             	r0 = r0 << 12			  ## bredr_frame.c:2272:34
 1e1ae08:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:2272:58
 1e1ae0a:    50 b2             	r0 |= r1			  ## bredr_frame.c:2272:41
 1e1ae0c:    c1 ff 04 00 1c 00 	r1 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2272:41
 1e1ae12:    08 42             	[r1 + 0] = r0			  ## bredr_frame.c:2272:21
 1e1ae14:    00 f4 01 19       	[r1 + 0] |= 1			  ## bredr_frame.c:2265:21
 1e1ae18:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2274:5
 1e1ae1a:    d7 f3 bd 5f       	goto 3063674 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2274:5


bredr_analog_get_rssi:
 1e1ae1e:    00 f6 f8 01       	r0 = [r0 + 504]			  ## bredr_frame.c:2587:0
 1e1ae22:    01 d4             	r1 = r0 >> 16			  ## bredr_frame.c:2589:88
 1e1ae24:    00 d2             	r0 = r0 >> 8			  ## bredr_frame.c:2589:54
 1e1ae26:    00 fd c0 09       	r0 = r0 | 192			  ## bredr_frame.c:2589:34
 1e1ae2a:    10 fd 3f 09       	r0 = r0 ^ 63			  ## bredr_frame.c:2589:34
 1e1ae2e:    60 b0             	r0 = r0 - r1			  ## bredr_frame.c:2589:68
 1e1ae30:    10 04             	r0 = r0.b0 (s)			  ## bredr_frame.c:2591:5
 1e1ae32:    20 00             	rts			  ## bredr_frame.c:2591:5


lp_winsize_init:
 1e1ae34:    c0 ff d0 08 00 00 	r0 = 2256 <lp_winsize : 8d0 >			  ## bredr_link.c:3609:0
 1e1ae3a:    c1 ff 68 30 00 00 	r1 = 12392 <bredr_link_v : 3068 >			  ## bredr_link.c:3610:19
 1e1ae40:    28 42             	[r1 + 8] = r0			  ## bredr_link.c:3610:19
 1e1ae42:    20 00             	rts			  ## bredr_link.c:3611:1


check_update_param_len:
 1e1ae44:    c0 ff 9d 27 e1 01 	r0 = 31532957 <update_target_end+0x256D : 1e1279d >			  ## bredr_frame.c:2925:0
 1e1ae4a:    01 fb 84 03       	r1 = 900 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x7C : 384 >			  ## bredr_frame.c:2926:5
 1e1ae4e:    ff f3 aa 8f       	goto -57516 <printf : 1e0cda6 >			  ## bredr_frame.c:2926:5


__write_reg_packet_type:
 1e1ae52:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:83:0
 1e1ae54:    10 09             	r0 += r1			  ## bredr_frame.c:86:13
 1e1ae56:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:86:13
 1e1ae58:    c2 ff b0 80 00 00 	r2 = 32944 <nvbss_size+0xE30 : 80b0 >			  ## bredr_frame.c:87:11
 1e1ae5e:    51 b5             	r1 &= r2			  ## bredr_frame.c:87:11
 1e1ae60:    11 b7             	r1 |= 16384			  ## bredr_frame.c:89:5
 1e1ae62:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:89:5
 1e1ae64:    20 00             	rts			  ## bredr_frame.c:90:1


bredr_frame_get_empty_txbuf_index:
 1e1ae66:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_frame.c:1086:0
 1e1ae68:    14 08             	r4 = r1			  ## bredr_frame.c:1086:0
 1e1ae6a:    05 08             	r5 = r0			  ## bredr_frame.c:1086:0
 1e1ae6c:    97 f3 96 5f       	call 3063596 <local_irq_disable : 106d9c >			  ## bredr_frame.c:1093:5
 1e1ae70:    00 f9 34 52       	r0 = b[r5 + 564] (u)			  ## bredr_frame.c:1093:5
 1e1ae74:    00 c1             	r0 = r0 << 4			  ## bredr_frame.c:1093:5
 1e1ae76:    20 fb 1c 1b       	r1 = 1835008			  ## bredr_frame.c:1093:5
 1e1ae7a:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1096:19
 1e1ae7c:    32 fd 70 29       	r2 = r2 & 4294967183			  ## bredr_frame.c:1096:19
 1e1ae80:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1096:19
 1e1ae82:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1097:19
 1e1ae84:    52 b0             	r2 |= r0			  ## bredr_frame.c:1097:19
 1e1ae86:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1097:19
 1e1ae88:    00 f4 08 19       	[r1 + 0] |= 8			  ## bredr_frame.c:1098:19
 1e1ae8c:    72 5a             	r2 = h[r5 + 14] (u)			  ## bredr_frame.c:1100:29
 1e1ae8e:    06 f7 54 50       	r6 = h[r5 + 84] (u)			  ## bredr_frame.c:1101:29
 1e1ae92:    07 f7 56 50       	r7 = h[r5 + 86] (u)			  ## bredr_frame.c:1102:29
 1e1ae96:    93 5a             	r3 = h[r5 + 18] (u)			  ## bredr_frame.c:1103:29
 1e1ae98:    a3 5a             	r3 = h[r5 + 20] (u)			  ## bredr_frame.c:1104:29
 1e1ae9a:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:1105:16
 1e1ae9c:    03 f3 ed 3f       	if ((r3 & 8) == 0) goto -38 <bredr_frame_get_empty_txbuf_index+0x14 : 1e1ae7a >			  ## bredr_frame.c:1105:5
 1e1aea0:    25 fd 01 29       	r5 = r2 & 1			  ## bredr_frame.c:1100:35
 1e1aea4:    97 f3 78 5f       	call 3063536 <local_irq_enable : 106d98 >			  ## bredr_frame.c:1107:5
 1e1aea8:    00 70             	r0 = 0
 1e1aeaa:    01 70             	r1 = 0
 1e1aeac:    06 2a             	if (r5 == 0) goto 12 <bredr_frame_get_empty_txbuf_index+0x54 : 1e1aeba >			  ## bredr_frame.c:1112:13
 1e1aeae:    02 70             	r2 = 0
 1e1aeb0:    00 f3 08 70       	if ((r7 & 1) == 0) goto 16 <bredr_frame_get_empty_txbuf_index+0x5E : 1e1aec4 >
 1e1aeb4:    15 fa 00 41       	b[r4+r1] = r5			  ## bredr_frame.c:1114:33
 1e1aeb8:    05 18             	goto 10 <bredr_frame_get_empty_txbuf_index+0x5E : 1e1aec4 >			  ## bredr_frame.c:1114:33
 1e1aeba:    12 70             	r2 = 1
 1e1aebc:    00 f3 02 60       	if ((r6 & 1) == 0) goto 4 <bredr_frame_get_empty_txbuf_index+0x5E : 1e1aec4 >
 1e1aec0:    10 fa 00 41       	b[r4+r1] = r0			  ## bredr_frame.c:1120:33
 1e1aec4:    11 80             	r1 += 1			  ## bredr_frame.c:1111:29
 1e1aec6:    25 08             	r5 = r2
 1e1aec8:    21 e0 f0 1f       	if (r1 != 2) goto -32 <bredr_frame_get_empty_txbuf_index+0x46 : 1e1aeac >
 1e1aecc:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_frame.c:1126:1


link_conn_set_ptt:
 1e1aece:    b1 50             	r1 = h[r0 + 22] (u)			  ## bredr_link.c:3460:0
 1e1aed0:    91 b1             	r1 |= 8			  ## bredr_frame.h:132:24
 1e1aed2:    b9 50             	h[r0 + 22] = r1			  ## bredr_frame.h:132:24
 1e1aed4:    20 00             	rts			  ## bredr_link.c:3462:1


link_conn_set_encrypt:
 1e1aed6:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_link.c:3562:0
 1e1aed8:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:307:22
 1e1aedc:    9b 50             	h[r0 + 18] = r3			  ## bredr_frame.c:307:22
 1e1aede:    a3 50             	r3 = h[r0 + 20] (u)			  ## bredr_frame.c:308:22
 1e1aee0:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:308:22
 1e1aee4:    ab 50             	h[r0 + 20] = r3			  ## bredr_frame.c:308:22
 1e1aee6:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_frame.c:309:22
 1e1aee8:    89 c1             	r1 = r1 << 6			  ## bredr_frame.c:309:33
 1e1aeea:    52 c1             	r2 = r2 << 5			  ## bredr_frame.c:309:49
 1e1aeec:    51 b4             	r1 |= r2			  ## bredr_frame.c:309:39
 1e1aeee:    e0 fd 10 23       	r2 = r3 | r1			  ## bredr_frame.c:309:22
 1e1aef2:    9a 50             	h[r0 + 18] = r2			  ## bredr_frame.c:309:22
 1e1aef4:    a2 50             	r2 = h[r0 + 20] (u)			  ## bredr_frame.c:310:22
 1e1aef6:    51 b4             	r1 |= r2			  ## bredr_frame.c:310:22
 1e1aef8:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:310:22
 1e1aefa:    20 00             	rts			  ## bredr_link.c:3564:1


slot_timer_disable:
 1e1aefc:    34 00             	[--sp] = rets			  ## bredr_slot_timer.c:214:0
 1e1aefe:    02 08             	r2 = r0			  ## bredr_slot_timer.c:214:0
 1e1af00:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:216:5
 1e1af04:    02 e1 02 30       	if (r2 < 16) goto 4 <slot_timer_disable+0x10 : 1e1af0c >
 1e1af08:    8f f3 c5 42       	call 2000266 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1af0c:    c0 ff ac 00 1c 00 	r0 = 1835180 <uECC_vli_cmp_unsafe+0xB90B0 : 1c00ac >
 1e1af12:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:219:22
 1e1af14:    13 70             	r3 = 1			  ## bredr_slot_timer.c:219:26
 1e1af16:    f8 fd 20 23       	r2 = r3 << r2			  ## bredr_slot_timer.c:219:26
 1e1af1a:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:219:22
 1e1af1e:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:219:22
 1e1af20:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:220:23
 1e1af22:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:220:23
 1e1af24:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:220:23
 1e1af26:    30 00             	pc = [sp++]			  ## bredr_slot_timer.c:221:1


slot_timer_put:
 1e1af28:    74 01             	[--sp] = {rets, r4}			  ## bredr_slot_timer.c:198:0
 1e1af2a:    04 08             	r4 = r0			  ## bredr_slot_timer.c:198:0
 1e1af2c:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:200:5
 1e1af30:    04 e1 02 30       	if (r4 < 16) goto 4 <slot_timer_put+0x10 : 1e1af38 >
 1e1af34:    8f f3 af 42       	call 2000222 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1af38:    97 f3 30 5f       	call 3063392 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:203:5
 1e1af3c:    40 08             	r0 = r4			  ## bredr_slot_timer.c:205:5
 1e1af3e:    de 17             	call -68 <slot_timer_disable : 1e1aefc >			  ## bredr_slot_timer.c:205:5
 1e1af40:    c0 ff 68 30 00 00 	r0 = 12392 <bredr_link_v : 3068 >			  ## bredr_slot_timer.c:207:23
 1e1af46:    01 f7 a0 00       	r1 = h[r0 + 160] (u)			  ## bredr_slot_timer.c:206:24
 1e1af4a:    12 70             	r2 = 1			  ## bredr_slot_timer.c:206:28
 1e1af4c:    02 0d             	r2 <<= r4			  ## bredr_slot_timer.c:206:28
 1e1af4e:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:206:24
 1e1af52:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:206:24
 1e1af56:    e1 c0             	r1 = r4 << 3			  ## bredr_slot_timer.c:207:23
 1e1af58:    10 09             	r0 += r1			  ## bredr_slot_timer.c:207:23
 1e1af5a:    c9 f4 00 09       	[r0 + 36] = 0			  ## bredr_slot_timer.c:207:28
 1e1af5e:    14 01             	{rets, r4} = [sp++]			  ## bredr_slot_timer.c:209:5
 1e1af60:    d7 f3 1a 5f       	goto 3063348 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:209:5


bredr_link_enable_afh:
 1e1af64:    7b 01             	[--sp] = {rets, r11-r4}			  ## bredr_link.c:4412:0
 1e1af66:    fa 0b             	sp += -12			  ## bredr_link.c:4412:0
 1e1af68:    04 08             	r4 = r0			  ## bredr_link.c:4412:0
 1e1af6a:    97 f3 17 5f       	call 3063342 <local_irq_disable : 106d9c >			  ## bredr_link.c:4415:5
 1e1af6e:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4416:13
 1e1af70:    00 ff ff 00 03 00 	if (r0 == 255) goto 6 <bredr_link_enable_afh+0x18 : 1e1af7c >			  ## bredr_link.c:4416:13
 1e1af76:    d8 17             	call -80 <slot_timer_put : 1e1af28 >			  ## bredr_link.c:4417:9
 1e1af78:    f0 7f             	r0 = 255			  ## bredr_link.c:4418:23
 1e1af7a:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4418:23
 1e1af7c:    97 f3 0c 5f       	call 3063320 <local_irq_enable : 106d98 >			  ## bredr_link.c:4420:5
 1e1af80:    00 70             	r0 = 0			  ## bredr_link.c:4420:5
 1e1af82:    10 f9 2b 40       	b[r4 + 43] = r0			  ## bredr_link.c:4422:28
 1e1af86:    08 f6 cc 40       	r8 = [r4 + 204]			  ## bredr_link.c:4423:22
 1e1af8a:    90 f5 08 00       	h[sp+8] = r0			  ## bredr_frame.c:2430:5
 1e1af8e:    18 02             	[sp+4] = r0			  ## bredr_frame.c:2430:5
 1e1af90:    08 02             	[sp] = r0			  ## bredr_frame.c:2430:5
 1e1af92:    49 fc 21 00       	r9 = r4 + 33			  ## bredr_link.c:4423:36
 1e1af96:    2a 70             	r10 = 2
 1e1af98:    1b 70             	r11 = 1
 1e1af9a:    03 fa 00 90       	r3 = b[r9+r0] (u)			  ## bredr_frame.c:2434:16
 1e1af9e:    41 d8             	r1 = r0 >>> 1			  ## bredr_frame.c:2435:18
 1e1afa0:    02 a0             	r2 = sp + 0
 1e1afa2:    44 b4             	r4 = r2 + r1
 1e1afa4:    52 98             	r2 = r4 + 5
 1e1afa6:    05 70             	r5 = 0
 1e1afa8:    f0 fe a0 65       	r6 = r5 % r10 (s)			  ## bredr_frame.c:2438:53
 1e1afac:    69 d8             	r1 = r5 >>> 1			  ## bredr_frame.c:2438:42
 1e1afae:    61 09             	r1 += r6			  ## bredr_frame.c:2438:48
 1e1afb0:    f8 fd 50 7b       	r7 = r11 << r5			  ## bredr_frame.c:2438:27
 1e1afb4:    57 b7             	r7 &= r3			  ## bredr_frame.c:2438:25
 1e1afb6:    fa fd 10 17       	r1 = r7 >> r1			  ## bredr_frame.c:2438:35
 1e1afba:    0f c1             	r7 = r1 << 4			  ## bredr_frame.c:2440:29
 1e1afbc:    00 f3 01 00       	if ((r0 & 1) == 0) goto 2 <bredr_link_enable_afh+0x5E : 1e1afc2 >
 1e1afc0:    71 08             	r1 = r7			  ## bredr_frame.c:2439:17
 1e1afc2:    27 08             	r7 = r2			  ## bredr_frame.c:2442:17
 1e1afc4:    01 3c             	if (r6 != 0) goto 2 <bredr_link_enable_afh+0x64 : 1e1afc8 >			  ## bredr_frame.c:2442:17
 1e1afc6:    47 08             	r7 = r4			  ## bredr_frame.c:2442:17
 1e1afc8:    06 6e             	r6 = b[r7 + 0] (u)
 1e1afca:    51 bc             	r1 |= r6
 1e1afcc:    15 80             	r5 += 1			  ## bredr_frame.c:2437:29
 1e1afce:    09 6e             	b[r7 + 0] = r1
 1e1afd0:    85 e0 ea 1f       	if (r5 != 8) goto -44 <bredr_link_enable_afh+0x44 : 1e1afa8 >
 1e1afd4:    10 80             	r0 += 1			  ## bredr_frame.c:2433:26
 1e1afd6:    a0 e0 e0 1f       	if (r0 != 10) goto -64 <bredr_link_enable_afh+0x36 : 1e1af9a >
 1e1afda:    84 fc 4c 01       	r4 = r8 + 332			  ## bredr_frame.c:2495:30
 1e1afde:    01 70             	r1 = 0			  ## bredr_frame.c:2450:5
 1e1afe0:    02 75             	r2 = 80			  ## bredr_frame.c:2450:5
 1e1afe2:    07 70             	r7 = 0			  ## bredr_frame.c:2450:5
 1e1afe4:    40 08             	r0 = r4			  ## bredr_frame.c:2450:5
 1e1afe6:    97 f3 83 5f       	call 3063558 <memset : 106ef0 >			  ## bredr_frame.c:2450:5
 1e1afea:    10 70             	r0 = 1
 1e1afec:    01 70             	r1 = 0
 1e1afee:    72 08             	r2 = r7
 1e1aff0:    03 70             	r3 = 0
 1e1aff2:    05 a0             	r5 = sp + 0
 1e1aff4:    05 fa 00 51       	r5 = b[r5+r1] (u)			  ## bredr_frame.c:2457:17
 1e1aff8:    f8 fd 30 60       	r6 = r0 << r3			  ## bredr_frame.c:2457:24
 1e1affc:    65 f0 02 00       	if ((r5 & r6) == 0) goto 4 <bredr_link_enable_afh+0xA0 : 1e1b004 >			  ## bredr_frame.c:2457:24
 1e1b000:    92 f9 01 40       	b[r4 ++= 1] = r2			  ## bredr_frame.c:2458:30
 1e1b004:    13 80             	r3 += 1			  ## bredr_frame.c:2456:29
 1e1b006:    22 80             	r2 += 2			  ## bredr_frame.c:2460:23
 1e1b008:    83 e0 f3 1f       	if (r3 != 8) goto -26 <bredr_link_enable_afh+0x8E : 1e1aff2 >			  ## bredr_frame.c:2460:23
 1e1b00c:    02 9f             	r2 = r7 + 16			  ## bredr_frame.c:2456:9
 1e1b00e:    17 70             	r7 = 1			  ## bredr_frame.c:2456:9
 1e1b010:    41 e0 01 00       	if (r1 == 4) goto 2 <bredr_link_enable_afh+0xB2 : 1e1b016 >
 1e1b014:    27 08             	r7 = r2			  ## bredr_frame.c:2462:13
 1e1b016:    11 80             	r1 += 1			  ## bredr_frame.c:2455:35
 1e1b018:    a1 e0 e9 1f       	if (r1 != 10) goto -46 <bredr_link_enable_afh+0x8A : 1e1afee >
 1e1b01c:    00 70             	r0 = 0
 1e1b01e:    01 70             	r1 = 0
 1e1b020:    02 fa 00 91       	r2 = b[r9+r1] (u)
 1e1b024:    03 70             	r3 = 0
 1e1b026:    14 70             	r4 = 1
 1e1b028:    f8 fd 30 54       	r5 = r4 << r3			  ## bredr_frame.c:2500:34
 1e1b02c:    52 f1 01 00       	if ((r2 & r5) != 0) goto 2 <bredr_link_enable_afh+0xCE : 1e1b032 >			  ## bredr_frame.c:2500:34
 1e1b030:    04 70             	r4 = 0			  ## bredr_frame.c:2500:17
 1e1b032:    13 80             	r3 += 1			  ## bredr_frame.c:2499:29
 1e1b034:    40 09             	r0 += r4			  ## bredr_frame.c:2500:17
 1e1b036:    83 e0 f6 1f       	if (r3 != 8) goto -20 <bredr_link_enable_afh+0xC2 : 1e1b026 >
 1e1b03a:    11 80             	r1 += 1			  ## bredr_frame.c:2498:35
 1e1b03c:    a1 e0 f0 1f       	if (r1 != 10) goto -32 <bredr_link_enable_afh+0xBC : 1e1b020 >
 1e1b040:    90 b3             	r0 |= 128
 1e1b042:    10 f7 34 80       	h[r8 + 52] = r0			  ## bredr_frame.c:2507:23
 1e1b046:    c0 f5 01 00       	r0 = b[sp+1] (u)			  ## bredr_frame.c:2508:35
 1e1b04a:    c1 f5 00 00       	r1 = b[sp] (u)			  ## bredr_frame.c:2508:25
 1e1b04e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2508:32
 1e1b052:    11 f7 36 80       	h[r8 + 54] = r1			  ## bredr_frame.c:2508:23
 1e1b056:    c0 f5 03 00       	r0 = b[sp+3] (u)			  ## bredr_frame.c:2509:35
 1e1b05a:    c1 f5 02 00       	r1 = b[sp+2] (u)			  ## bredr_frame.c:2509:25
 1e1b05e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2509:32
 1e1b062:    11 f7 38 80       	h[r8 + 56] = r1			  ## bredr_frame.c:2509:23
 1e1b066:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## bredr_frame.c:2510:35
 1e1b06a:    c1 f5 04 00       	r1 = b[sp+4] (u)			  ## bredr_frame.c:2510:25
 1e1b06e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2510:32
 1e1b072:    11 f7 3a 80       	h[r8 + 58] = r1			  ## bredr_frame.c:2510:23
 1e1b076:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## bredr_frame.c:2511:35
 1e1b07a:    c1 f5 06 00       	r1 = b[sp+6] (u)			  ## bredr_frame.c:2511:25
 1e1b07e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2511:32
 1e1b082:    11 f7 3c 80       	h[r8 + 60] = r1			  ## bredr_frame.c:2511:23
 1e1b086:    c0 f5 09 00       	r0 = b[sp+9] (u)			  ## bredr_frame.c:2512:35
 1e1b08a:    c1 f5 08 00       	r1 = b[sp+8] (u)			  ## bredr_frame.c:2512:25
 1e1b08e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2512:32
 1e1b092:    11 f7 3e 80       	h[r8 + 62] = r1			  ## bredr_frame.c:2512:23
 1e1b096:    06 0a             	sp += 12			  ## bredr_frame.c:2512:23
 1e1b098:    5b 01             	{pc, r11-r4} = [sp++]			  ## bredr_link.c:4440:1


READ_SLOT_CLK:
 1e1b09a:    c1 ff b4 00 1c 00 	r1 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## bredr_frame.c:127:0
 1e1b0a0:    00 42             	r0 = [r1 + 0]			  ## bredr_frame.c:131:25
 1e1b0a2:    12 42             	r2 = [r1 + 4]			  ## bredr_frame.c:132:25
 1e1b0a4:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:134:31
 1e1b0a6:    30 f2 fb 1f       	if (r0 != r3) goto -10 <READ_SLOT_CLK+0x6 : 1e1b0a0 >			  ## bredr_frame.c:134:5
 1e1b0aa:    11 c4             	r1 = r2 << 16			  ## bredr_frame.c:135:44
 1e1b0ac:    50 b2             	r0 |= r1			  ## bredr_frame.c:135:27
 1e1b0ae:    40 d0             	r0 = r0 >> 1			  ## bredr_frame.c:135:52
 1e1b0b0:    20 00             	rts			  ## bredr_frame.c:135:5


bredr_get_link_slot_clk:
 1e1b0b2:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:4380:0
 1e1b0b4:    24 08             	r4 = r2			  ## bredr_link.c:4380:0
 1e1b0b6:    15 08             	r5 = r1			  ## bredr_link.c:4380:0
 1e1b0b8:    06 08             	r6 = r0			  ## bredr_link.c:4380:0
 1e1b0ba:    ef 17             	call -34 <READ_SLOT_CLK : 1e1b09a >			  ## bredr_link.c:4384:17
 1e1b0bc:    01 f6 cc 60       	r1 = [r6 + 204]			  ## bredr_link.c:4385:61
 1e1b0c0:    01 f6 3c 12       	r1 = [r1 + 572]			  ## bredr_frame.c:190:19
 1e1b0c4:    49 d8             	r1 = r1 >>> 1			  ## bredr_link.c:4385:68
 1e1b0c6:    02 b2             	r2 = r1 + r0			  ## bredr_link.c:4385:33
 1e1b0c8:    f2 ef 09 d0       	ifs (r2 <= -1) goto 18 <bredr_get_link_slot_clk+0x2C : 1e1b0de >
 1e1b0cc:    41 fb f8 2c       	r1 = r2 + 4160749568			  ## bredr_link.c:4390:33
 1e1b0d0:    c3 ff ff ff ff 07 	r3 = 134217727 <bank_code_load_addr+0x1E13EB : 1ffffff >			  ## bredr_link.c:4389:27
 1e1b0d6:    32 f2 04 c0       	ifs (r2 > r3) goto 8 <bredr_get_link_slot_clk+0x30 : 1e1b0e2 >			  ## bredr_link.c:4389:27
 1e1b0da:    21 08             	r1 = r2			  ## bredr_link.c:4389:16
 1e1b0dc:    02 18             	goto 4 <bredr_get_link_slot_clk+0x30 : 1e1b0e2 >
 1e1b0de:    41 fb 08 2c       	r1 = r2 + 134217728			  ## bredr_link.c:4388:32
 1e1b0e2:    01 2a             	if (r5 == 0) goto 2 <bredr_get_link_slot_clk+0x34 : 1e1b0e6 >
 1e1b0e4:    09 4a             	[r5 + 0] = r1			  ## bredr_link.c:4396:15
 1e1b0e6:    01 28             	if (r4 == 0) goto 2 <bredr_get_link_slot_clk+0x38 : 1e1b0ea >
 1e1b0e8:    08 48             	[r4 + 0] = r0			  ## bredr_link.c:4400:15
 1e1b0ea:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:4402:1


slot_timer_get:
 1e1b0ec:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_slot_timer.c:128:0
 1e1b0ee:    97 f3 55 5e       	call 3062954 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:129:5
 1e1b0f2:    c0 ff 68 30 00 00 	r0 = 12392 <bredr_link_v : 3068 >			  ## bredr_slot_timer.c:129:5
 1e1b0f8:    01 f7 a0 00       	r1 = h[r0 + 160] (u)
 1e1b0fc:    04 70             	r4 = 0
 1e1b0fe:    12 70             	r2 = 1
 1e1b100:    03 70             	r3 = 0
 1e1b102:    f8 fd 30 52       	r5 = r2 << r3			  ## bredr_slot_timer.c:132:36
 1e1b106:    51 f0 0a 00       	if ((r1 & r5) == 0) goto 20 <slot_timer_get+0x32 : 1e1b11e >			  ## bredr_slot_timer.c:132:13
 1e1b10a:    13 80             	r3 += 1			  ## bredr_slot_timer.c:131:30
 1e1b10c:    14 80             	r4 += 1			  ## bredr_slot_timer.c:131:23
 1e1b10e:    03 e1 f8 bf       	ifs (r3 < 16) goto -16 <slot_timer_get+0x16 : 1e1b102 >			  ## bredr_slot_timer.c:131:23
 1e1b112:    97 f3 41 5e       	call 3062914 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:139:5
 1e1b116:    8f f3 be 41       	call 1999740 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1b11a:    f4 7f             	r4 = 255			  ## cpu.h:148:5
 1e1b11c:    05 18             	goto 10 <slot_timer_get+0x3C : 1e1b128 >			  ## cpu.h:148:5
 1e1b11e:    51 ba             	r1 |= r5			  ## bredr_slot_timer.c:133:32
 1e1b120:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:133:32
 1e1b124:    97 f3 38 5e       	call 3062896 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:134:13
 1e1b128:    00 05             	r0 = r4.b0 (u)			  ## bredr_slot_timer.c:148:1
 1e1b12a:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_slot_timer.c:148:1


slot_timer_set_finecnt:
 1e1b12c:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:161:0
 1e1b12e:    14 08             	r4 = r1			  ## bredr_slot_timer.c:161:0
 1e1b130:    05 08             	r5 = r0			  ## bredr_slot_timer.c:161:0
 1e1b132:    05 e1 02 30       	if (r5 < 16) goto 4 <slot_timer_set_finecnt+0xE : 1e1b13a >			  ## bredr_slot_timer.c:161:0
 1e1b136:    8f f3 ae 41       	call 1999708 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1b13a:    40 02             	r0 = [sp+16]
 1e1b13c:    e9 c0             	r1 = r5 << 3			  ## bredr_slot_timer.c:163:23
 1e1b13e:    c6 ff 68 30 00 00 	r6 = 12392 <bredr_link_v : 3068 >			  ## bredr_slot_timer.c:164:23
 1e1b144:    16 09             	r6 += r1			  ## bredr_slot_timer.c:163:23
 1e1b146:    8a 4c             	[r6 + 32] = r2			  ## bredr_slot_timer.c:163:28
 1e1b148:    41 fb f8 3c       	r1 = r3 + 4160749568			  ## bredr_slot_timer.c:64:14
 1e1b14c:    c2 ff ff ff ff 07 	r2 = 134217727 <bank_code_load_addr+0x1E13EB : 1ffffff >			  ## bredr_slot_timer.c:63:14
 1e1b152:    9c 4c             	[r6 + 36] = r4			  ## bredr_slot_timer.c:164:28
 1e1b154:    23 f2 01 c0       	ifs (r3 > r2) goto 2 <slot_timer_set_finecnt+0x2E : 1e1b15a >			  ## bredr_slot_timer.c:164:28
 1e1b158:    31 08             	r1 = r3			  ## bredr_slot_timer.c:63:9
 1e1b15a:    22 70             	r2 = 2
 1e1b15c:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## bredr_slot_timer.c:66:34
 1e1b160:    c2 ff 68 00 1c 00 	r2 = 1835112 <uECC_vli_cmp_unsafe+0xB906C : 1c0068 >			  ## bredr_slot_timer.c:66:5
 1e1b166:    b1 f6 00 25       	[r2+r5<<2] = r1			  ## bredr_slot_timer.c:66:27
 1e1b16a:    20 04             	r0 = r0.l (u)			  ## bredr_slot_timer.c:67:29
 1e1b16c:    21 fc c0 ff       	r1 = r2 + -64			  ## bredr_slot_timer.c:67:5
 1e1b170:    b0 f6 00 15       	[r1+r5<<2] = r0			  ## bredr_slot_timer.c:67:27
 1e1b174:    10 fc 84 00       	r0 = r1 + 132			  ## bredr_slot_timer.c:67:27
 1e1b178:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:69:23
 1e1b17a:    12 70             	r2 = 1			  ## bredr_slot_timer.c:69:26
 1e1b17c:    42 0d             	r2 <<= r5			  ## bredr_slot_timer.c:69:26
 1e1b17e:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:69:23
 1e1b180:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:69:23
 1e1b182:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:70:22
 1e1b184:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:70:22
 1e1b186:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:70:22
 1e1b188:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:166:1


slot_timer_set_ext:
 1e1b18a:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:169:0
 1e1b18c:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:169:0
 1e1b18e:    c4 ff bc 00 1c 00 	r4 = 1835196 <uECC_vli_cmp_unsafe+0xB90C0 : 1c00bc >			  ## bredr_slot_timer.c:170:19
 1e1b194:    05 48             	r5 = [r4 + 0]			  ## bredr_slot_timer.c:170:19
 1e1b196:    54 02             	r4 = [sp+20]
 1e1b198:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <slot_timer_set_ext+0x1E : 1e1b1a8 >
 1e1b19c:    55 fc 71 02       	r5 = r5 + 625			  ## bredr_slot_timer.c:172:28
 1e1b1a0:    06 fb e2 04       	r6 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## bredr_slot_timer.c:172:35
 1e1b1a4:    f0 fe 60 55       	r5 = r5 % r6 (s)			  ## bredr_slot_timer.c:172:35
 1e1b1a8:    06 fb ff 07       	r6 = 2047 <DRIVER_CODE_TOTAL+0x6D : 7ff >			  ## bredr_slot_timer.c:174:5
 1e1b1ac:    55 bd             	r5 &= r6			  ## bredr_slot_timer.c:174:5
 1e1b1ae:    43 09             	r3 += r4			  ## bredr_slot_timer.c:174:55
 1e1b1b0:    0d 02             	[sp] = r5			  ## bredr_slot_timer.c:174:5
 1e1b1b2:    bc 17             	call -136 <slot_timer_set_finecnt : 1e1b12c >			  ## bredr_slot_timer.c:174:5
 1e1b1b4:    02 0a             	sp += 4
 1e1b1b6:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:175:1


slot_timer_set:
 1e1b1b8:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_slot_timer.c:178:0
 1e1b1ba:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:178:0
 1e1b1bc:    34 08             	r4 = r3			  ## bredr_slot_timer.c:178:0
 1e1b1be:    25 08             	r5 = r2			  ## bredr_slot_timer.c:178:0
 1e1b1c0:    16 08             	r6 = r1			  ## bredr_slot_timer.c:178:0
 1e1b1c2:    07 08             	r7 = r0			  ## bredr_slot_timer.c:178:0
 1e1b1c4:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:180:5
 1e1b1c8:    07 e1 02 30       	if (r7 < 16) goto 4 <slot_timer_set+0x18 : 1e1b1d0 >
 1e1b1cc:    8f f3 63 41       	call 1999558 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1b1d0:    64 17             	call -312 <READ_SLOT_CLK : 1e1b09a >			  ## bredr_slot_timer.c:183:48
 1e1b1d2:    08 02             	[sp] = r0			  ## bredr_slot_timer.c:183:5
 1e1b1d4:    70 08             	r0 = r7			  ## bredr_slot_timer.c:183:5
 1e1b1d6:    61 08             	r1 = r6			  ## bredr_slot_timer.c:183:5
 1e1b1d8:    52 08             	r2 = r5			  ## bredr_slot_timer.c:183:5
 1e1b1da:    43 08             	r3 = r4			  ## bredr_slot_timer.c:183:5
 1e1b1dc:    d6 17             	call -84 <slot_timer_set_ext : 1e1b18a >			  ## bredr_slot_timer.c:183:5
 1e1b1de:    02 0a             	sp += 4			  ## bredr_slot_timer.c:183:5
 1e1b1e0:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_slot_timer.c:184:1


bredr_link_set_afh:
 1e1b1e2:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:4491:0
 1e1b1e4:    fe 0b             	sp += -4			  ## bredr_link.c:4491:0
 1e1b1e6:    36 08             	r6 = r3			  ## bredr_link.c:4491:0
 1e1b1e8:    15 08             	r5 = r1			  ## bredr_link.c:4491:0
 1e1b1ea:    04 08             	r4 = r0			  ## bredr_link.c:4491:0
 1e1b1ec:    31 24             	if (r2 == 0) goto 98 <bredr_link_set_afh+0x6E : 1e1b250 >			  ## bredr_link.c:4491:0
 1e1b1ee:    00 f9 2b 40       	r0 = b[r4 + 43] (u)			  ## bredr_link.c:4501:13
 1e1b1f2:    02 20             	if (r0 == 0) goto 4 <bredr_link_set_afh+0x16 : 1e1b1f8 >			  ## bredr_link.c:4501:13
 1e1b1f4:    40 08             	r0 = r4			  ## bredr_link.c:4503:9
 1e1b1f6:    b6 16             	call -660 <bredr_link_enable_afh : 1e1af64 >			  ## bredr_link.c:4503:9
 1e1b1f8:    10 70             	r0 = 1			  ## bredr_link.c:4506:28
 1e1b1fa:    10 f9 2b 40       	b[r4 + 43] = r0			  ## bredr_link.c:4506:28
 1e1b1fe:    40 fc 21 00       	r0 = r4 + 33			  ## bredr_link.c:4508:5
 1e1b202:    a2 70             	r2 = 10			  ## bredr_link.c:4508:5
 1e1b204:    61 08             	r1 = r6			  ## bredr_link.c:4508:5
 1e1b206:    97 f3 6d 5e       	call 3063002 <memcpy : 106ee4 >			  ## bredr_link.c:4508:5
 1e1b20a:    40 08             	r0 = r4			  ## bredr_link.c:4510:17
 1e1b20c:    80 f3 da 00       	call 436 <lmp_sniff_and_afh_offset_ali : 1e1b3c4 >			  ## bredr_link.c:4510:17
 1e1b210:    06 08             	r6 = r0			  ## bredr_link.c:4510:17
 1e1b212:    01 a0             	r1 = sp + 0
 1e1b214:    02 70             	r2 = 0			  ## bredr_link.c:4407:5
 1e1b216:    40 08             	r0 = r4			  ## bredr_link.c:4407:5
 1e1b218:    4c 17             	call -360 <bredr_get_link_slot_clk : 1e1b0b2 >			  ## bredr_link.c:4407:5
 1e1b21a:    40 bd             	r0 = r6 + r5			  ## bredr_link.c:4510:14
 1e1b21c:    01 02             	r1 = [sp]			  ## bredr_link.c:4408:12
 1e1b21e:    c2 ff fe ff ff 07 	r2 = 134217726 <bank_code_load_addr+0x1E13EA : 1fffffe >			  ## bredr_link.c:4517:26
 1e1b224:    02 09             	r2 += r0			  ## bredr_link.c:4517:26
 1e1b226:    30 fd f8 2c       	r0 = r2 & 134217727			  ## bredr_link.c:4517:31
 1e1b22a:    10 f2 16 20       	if (r0 >= r1) goto 44 <bredr_link_set_afh+0x78 : 1e1b25a >
 1e1b22e:    20 b2             	r0 = r1 - r0			  ## bredr_link.c:4522:30
 1e1b230:    c3 ff fe ff ff 0f 	r3 = 268435454 <bank_code_load_addr+0x1E13EA : 1fffffe >			  ## bredr_link.c:4522:42
 1e1b236:    e2 fd 30 50       	r5 = r0 & r3			  ## bredr_link.c:4522:42
 1e1b23a:    c6 ff 01 b0 1e 04 	r6 = 69120001 <uECC_vli_cmp_unsafe+0xE4005 : 1eb001 >			  ## bredr_link.c:4523:13
 1e1b240:    20 70             	r0 = 2			  ## bredr_link.c:4523:13
 1e1b242:    65 f2 0f 30       	if (r5 < r6) goto 30 <bredr_link_set_afh+0x82 : 1e1b264 >			  ## bredr_link.c:4523:13
 1e1b246:    00 fd 08 2c       	r0 = r2 | 134217728			  ## bredr_link.c:4524:33
 1e1b24a:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4524:46
 1e1b24c:    50 b7             	r0 &= r3			  ## bredr_link.c:4524:58
 1e1b24e:    0a 18             	goto 20 <bredr_link_set_afh+0x82 : 1e1b264 >
 1e1b250:    00 f6 cc 40       	r0 = [r4 + 204]			  ## bredr_link.c:4494:57
 1e1b254:    01 70             	r1 = 0			  ## bredr_frame.c:2470:19
 1e1b256:    a9 51             	h[r0 + 52] = r1			  ## bredr_frame.c:2470:19
 1e1b258:    1b 18             	goto 54 <bredr_link_set_afh+0xAE : 1e1b290 >			  ## bredr_frame.c:2470:19
 1e1b25a:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4520:28
 1e1b25c:    c1 ff fe ff ff 0f 	r1 = 268435454 <bank_code_load_addr+0x1E13EA : 1fffffe >			  ## bredr_link.c:4520:42
 1e1b262:    50 b3             	r0 &= r1			  ## bredr_link.c:4520:42
 1e1b264:    25 70             	r5 = 2			  ## bredr_link.c:4529:9
 1e1b266:    20 e0 01 80       	if (r0 > 2) goto 2 <bredr_link_set_afh+0x8A : 1e1b26c >			  ## bredr_link.c:4529:9
 1e1b26a:    20 70             	r0 = 2			  ## bredr_link.c:4529:9
 1e1b26c:    c1 ff 00 b0 1e 04 	r1 = 69120000 <uECC_vli_cmp_unsafe+0xE4004 : 1eb000 >			  ## bredr_link.c:4533:16
 1e1b272:    10 f2 01 80       	if (r0 > r1) goto 2 <bredr_link_set_afh+0x96 : 1e1b278 >
 1e1b276:    05 08             	r5 = r0			  ## bredr_link.c:4533:9
 1e1b278:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4536:13
 1e1b27a:    01 ff ff 00 02 00 	if (r0 != 255) goto 4 <bredr_link_set_afh+0xA2 : 1e1b284 >			  ## bredr_link.c:4536:13
 1e1b280:    35 17             	call -406 <slot_timer_get : 1e1b0ec >			  ## bredr_link.c:4537:25
 1e1b282:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4537:23
 1e1b284:    c1 ff 64 af e1 01 	r1 = 31567716 <bredr_link_enable_afh : 1e1af64 >			  ## bredr_link.c:4539:5
 1e1b28a:    42 08             	r2 = r4			  ## bredr_link.c:4539:5
 1e1b28c:    53 08             	r3 = r5			  ## bredr_link.c:4539:5
 1e1b28e:    94 17             	call -216 <slot_timer_set : 1e1b1b8 >			  ## bredr_link.c:4539:5
 1e1b290:    02 0a             	sp += 4
 1e1b292:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:4550:1


__write_reg_txinfo:
 1e1b294:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_frame.c:112:0
 1e1b296:    44 02             	r4 = [sp+16]			  ## bredr_frame.c:112:0
 1e1b298:    35 02             	r5 = [sp+12]			  ## bredr_frame.c:112:0
 1e1b29a:    0e 22             	if (r1 == 0) goto 28 <__write_reg_txinfo+0x24 : 1e1b2b8 >			  ## bredr_frame.c:112:0
 1e1b29c:    2a 51             	h[r0 + 36] = r2			  ## bredr_frame.c:119:25
 1e1b29e:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:120:37
 1e1b2a0:    39 51             	h[r0 + 38] = r1			  ## bredr_frame.c:120:25
 1e1b2a2:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:121:32
 1e1b2a4:    51 ba             	r1 |= r5			  ## bredr_frame.c:121:38
 1e1b2a6:    11 b1             	r1 |= 4			  ## bredr_frame.c:121:27
 1e1b2a8:    f9 50             	h[r0 + 30] = r1			  ## bredr_frame.c:121:25
 1e1b2aa:    a1 50             	r1 = h[r0 + 20] (u)			  ## bredr_frame.c:122:47
 1e1b2ac:    31 fd 1f 19       	r1 = r1 & 4294967264			  ## bredr_frame.c:122:57
 1e1b2b0:    51 b8             	r1 |= r4			  ## bredr_frame.c:122:37
 1e1b2b2:    11 b2             	r1 |= 16			  ## bredr_frame.c:122:68
 1e1b2b4:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:122:26
 1e1b2b6:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1
 1e1b2b8:    0a 51             	h[r0 + 32] = r2			  ## bredr_frame.c:114:25
 1e1b2ba:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:115:37
 1e1b2bc:    19 51             	h[r0 + 34] = r1			  ## bredr_frame.c:115:25
 1e1b2be:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:116:32
 1e1b2c0:    51 ba             	r1 |= r5			  ## bredr_frame.c:116:38
 1e1b2c2:    11 b1             	r1 |= 4			  ## bredr_frame.c:116:27
 1e1b2c4:    e9 50             	h[r0 + 28] = r1			  ## bredr_frame.c:116:25
 1e1b2c6:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:117:36
 1e1b2c8:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## bredr_frame.c:117:46
 1e1b2cc:    51 b8             	r1 |= r4			  ## bredr_frame.c:117:57
 1e1b2ce:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:117:26
 1e1b2d0:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1


__clean_reg_txempty:
 1e1b2d2:    40 85             	r0 += 84			  ## bredr_frame.c:345:0
 1e1b2d4:    04 22             	if (r1 == 0) goto 8 <__clean_reg_txempty+0xC : 1e1b2de >			  ## bredr_frame.c:345:0
 1e1b2d6:    11 50             	r1 = h[r0 + 2] (u)			  ## bredr_frame.c:349:27
 1e1b2d8:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:349:27
 1e1b2da:    19 50             	h[r0 + 2] = r1			  ## bredr_frame.c:349:27
 1e1b2dc:    20 00             	rts			  ## bredr_frame.c:351:1
 1e1b2de:    01 50             	r1 = h[r0 + 0] (u)			  ## bredr_frame.c:347:27
 1e1b2e0:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:347:27
 1e1b2e2:    09 50             	h[r0 + 0] = r1			  ## bredr_frame.c:347:27
 1e1b2e4:    20 00             	rts			  ## bredr_frame.c:351:1


link_conn_tx_bulk_avaiable:
 1e1b2e6:    79 01             	[--sp] = {rets, r9-r4}			  ## bredr_link.c:2555:0
 1e1b2e8:    15 08             	r5 = r1			  ## bredr_link.c:2555:0
 1e1b2ea:    04 08             	r4 = r0			  ## bredr_link.c:2555:0
 1e1b2ec:    97 f3 56 5d       	call 3062444 <local_irq_disable : 106d9c >			  ## bredr_link.c:2558:5
 1e1b2f0:    c0 ff 68 30 00 00 	r0 = 12392 <bredr_link_v : 3068 >			  ## bredr_link.c:2558:5
 1e1b2f6:    01 40             	r1 = [r0 + 0]			  ## bredr_link.c:2558:5
 1e1b2f8:    01 f2 26 00       	if (r1 == r0) goto 76 <link_conn_tx_bulk_avaiable+0x62 : 1e1b348 >
 1e1b2fc:    41 f2 04 00       	if (r1 == r4) goto 8 <link_conn_tx_bulk_avaiable+0x22 : 1e1b308 >
 1e1b300:    01 42             	r1 = [r1 + 0]
 1e1b302:    01 f2 fb 1f       	if (r1 != r0) goto -10 <link_conn_tx_bulk_avaiable+0x16 : 1e1b2fc >
 1e1b306:    20 18             	goto 64 <link_conn_tx_bulk_avaiable+0x62 : 1e1b348 >
 1e1b308:    49 fc cc 00       	r9 = r4 + 204
 1e1b30c:    08 f6 00 90       	r8 = [r9 + 0]			  ## bredr_link.c:2564:19
 1e1b310:    08 e0 1a 00       	if (r8 == 0) goto 52 <link_conn_tx_bulk_avaiable+0x62 : 1e1b348 >
 1e1b314:    4e 2a             	if (r5 == 0) goto 156 <link_conn_tx_bulk_avaiable+0xCC : 1e1b3b2 >
 1e1b316:    60 6a             	r0 = b[r5 + 6] (u)			  ## bredr_link.c:2566:25
 1e1b318:    30 e0 1d 10       	if (r0 != 3) goto 58 <link_conn_tx_bulk_avaiable+0x70 : 1e1b356 >			  ## bredr_link.c:2566:21
 1e1b31c:    00 f6 30 90       	r0 = [r9 + 48]			  ## bredr_dut.c:549:14
 1e1b320:    3e 20             	if (r0 == 0) goto 124 <link_conn_tx_bulk_avaiable+0xB8 : 1e1b39e >			  ## bredr_dut.c:549:14
 1e1b322:    97 f3 3b 5d       	call 3062390 <local_irq_disable : 106d9c >			  ## bredr_dut.c:554:5
 1e1b326:    00 f6 24 90       	r0 = [r9 + 36]			  ## bredr_dut.c:530:9
 1e1b32a:    1d 20             	if (r0 == 0) goto 58 <link_conn_tx_bulk_avaiable+0x80 : 1e1b366 >			  ## bredr_dut.c:530:9
 1e1b32c:    bf f3 54 53       	call -88408 <bredr_tx_bulk_free : 1e059d8 >			  ## bredr_dut.c:531:9
 1e1b330:    00 f6 28 90       	r0 = [r9 + 40]			  ## bredr_dut.c:532:13
 1e1b334:    01 f6 24 90       	r1 = [r9 + 36]			  ## bredr_dut.c:532:31
 1e1b338:    10 f2 03 10       	if (r0 != r1) goto 6 <link_conn_tx_bulk_avaiable+0x5C : 1e1b342 >			  ## bredr_dut.c:532:31
 1e1b33c:    00 70             	r0 = 0
 1e1b33e:    10 f6 28 90       	[r9 + 40] = r0			  ## bredr_dut.c:533:28
 1e1b342:    c9 f4 00 99       	[r9 + 36] = 0			  ## bredr_dut.c:535:24
 1e1b346:    11 18             	goto 34 <link_conn_tx_bulk_avaiable+0x84 : 1e1b36a >			  ## bredr_dut.c:535:24
 1e1b348:    03 2a             	if (r5 == 0) goto 6 <link_conn_tx_bulk_avaiable+0x6A : 1e1b350 >
 1e1b34a:    50 08             	r0 = r5			  ## bredr_link.c:2591:9
 1e1b34c:    bf f3 44 53       	call -88440 <bredr_tx_bulk_free : 1e059d8 >			  ## bredr_link.c:2591:9
 1e1b350:    19 01             	{rets, r9-r4} = [sp++]			  ## bredr_link.c:2595:5
 1e1b352:    d7 f3 21 5d       	goto 3062338 <local_irq_enable : 106d98 >			  ## bredr_link.c:2595:5
 1e1b356:    00 f6 18 90       	r0 = [r9 + 24]			  ## list.h:154:28
 1e1b35a:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2579:40
 1e1b35c:    11 f6 18 90       	[r9 + 24] = r1			  ## list.h:137:16
 1e1b360:    92 fc 14 00       	r2 = r9 + 20			  ## bredr_link.c:2579:52
 1e1b364:    23 18             	goto 70 <link_conn_tx_bulk_avaiable+0xC6 : 1e1b3ac >
 1e1b366:    00 f6 28 90       	r0 = [r9 + 40]
 1e1b36a:    02 20             	if (r0 == 0) goto 4 <link_conn_tx_bulk_avaiable+0x8A : 1e1b370 >
 1e1b36c:    bf f3 34 53       	call -88472 <bredr_tx_bulk_free : 1e059d8 >			  ## bredr_dut.c:538:9
 1e1b370:    ca f4 00 99       	[r9 + 40] = 0			  ## bredr_dut.c:540:20
 1e1b374:    00 f6 14 90       	r0 = [r9 + 20]			  ## bredr_dut.c:542:5
 1e1b378:    96 fc 14 00       	r6 = r9 + 20			  ## bredr_dut.c:542:5
 1e1b37c:    60 f2 07 00       	if (r0 == r6) goto 14 <link_conn_tx_bulk_avaiable+0xA8 : 1e1b38e >			  ## bredr_dut.c:542:5
 1e1b380:    47 f6 f0 0f       	r7 = [r0 ++= -16]
 1e1b384:    bf f3 28 53       	call -88496 <bredr_tx_bulk_free : 1e059d8 >			  ## bredr_dut.c:543:9
 1e1b388:    70 08             	r0 = r7
 1e1b38a:    67 f2 f9 1f       	if (r7 != r6) goto -14 <link_conn_tx_bulk_avaiable+0x9A : 1e1b380 >
 1e1b38e:    01 70             	r1 = 0			  ## bredr_dut.c:557:5
 1e1b390:    80 08             	r0 = r8			  ## bredr_dut.c:557:5
 1e1b392:    5f 15             	call -1346 <__write_reg_packet_type : 1e1ae52 >			  ## bredr_dut.c:557:5
 1e1b394:    11 70             	r1 = 1			  ## bredr_dut.c:558:5
 1e1b396:    80 08             	r0 = r8			  ## bredr_dut.c:558:5
 1e1b398:    5c 15             	call -1352 <__write_reg_packet_type : 1e1ae52 >			  ## bredr_dut.c:558:5
 1e1b39a:    97 f3 fd 5c       	call 3062266 <local_irq_enable : 106d98 >			  ## bredr_dut.c:559:5
 1e1b39e:    00 f6 10 90       	r0 = [r9 + 16]			  ## list.h:154:28
 1e1b3a2:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2572:40
 1e1b3a4:    11 f6 10 90       	[r9 + 16] = r1			  ## list.h:137:16
 1e1b3a8:    92 fc 0c 00       	r2 = r9 + 12			  ## bredr_link.c:2572:52
 1e1b3ac:    4a 4a             	[r5 + 16] = r2			  ## list.h:138:16
 1e1b3ae:    58 4a             	[r5 + 20] = r0			  ## list.h:139:16
 1e1b3b0:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e1b3b2:    00 f6 30 90       	r0 = [r9 + 48]			  ## bredr_link.c:2582:22
 1e1b3b6:    cc 31             	if (r0 != 0) goto -104 <link_conn_tx_bulk_avaiable+0x6A : 1e1b350 >			  ## bredr_link.c:2582:22
 1e1b3b8:    40 08             	r0 = r4			  ## bredr_link.c:2583:17
 1e1b3ba:    8f f3 01 49       	call 2003458 <connection_tx_handler : 45c0 >			  ## bredr_link.c:2583:17
 1e1b3be:    c8 1f             	goto -112 <link_conn_tx_bulk_avaiable+0x6A : 1e1b350 >			  ## bredr_link.c:2583:17


sys_event_recode:
 1e1b3c0:    00 70             	r0 = 0			  ## tws_event.c:67:0
 1e1b3c2:    20 00             	rts			  ## tws_event.c:117:1


lmp_sniff_and_afh_offset_ali:
 1e1b3c4:    74 01             	[--sp] = {rets, r4}			  ## lmp_sniff.c:1314:0
 1e1b3c6:    8f f3 c5 48       	call 2003338 <lmp_conn_for_link : 4554 >			  ## lmp_sniff.c:1315:35
 1e1b3ca:    04 08             	r4 = r0			  ## lmp_sniff.c:1315:35
 1e1b3cc:    03 70             	r3 = 0
 1e1b3ce:    bf f3 25 fb       	call -2486 <lmp_get_esco_conn_statu : 1e1aa1c >			  ## lmp_sniff.c:1318:18
 1e1b3d2:    0a 28             	if (r4 == 0) goto 20 <lmp_sniff_and_afh_offset_ali+0x24 : 1e1b3e8 >			  ## lmp_sniff.c:1318:18
 1e1b3d4:    09 30             	if (r0 != 0) goto 18 <lmp_sniff_and_afh_offset_ali+0x24 : 1e1b3e8 >
 1e1b3d6:    00 f9 9f 40       	r0 = b[r4 + 159] (u)			  ## lmp_sniff.c:1319:35
 1e1b3da:    20 e0 05 10       	if (r0 != 2) goto 10 <lmp_sniff_and_afh_offset_ali+0x24 : 1e1b3e8 >			  ## lmp_sniff.c:1319:35
 1e1b3de:    00 f6 c8 40       	r0 = [r4 + 200]			  ## lmp_sniff.c:1291:37
 1e1b3e2:    02 20             	if (r0 == 0) goto 4 <lmp_sniff_and_afh_offset_ali+0x24 : 1e1b3e8 >
 1e1b3e4:    80 50             	r0 = h[r0 + 16] (u)			  ## lmp_sniff.c:1298:22
 1e1b3e6:    43 c0             	r3 = r0 << 1			  ## lmp_sniff.c:1298:37
 1e1b3e8:    30 08             	r0 = r3			  ## lmp_sniff.c:1325:5
 1e1b3ea:    54 01             	{pc, r4} = [sp++]			  ## lmp_sniff.c:1325:5


update_code_start:
 1e1b3ec:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_frame.c:2936:0
 1e1b3ee:    c5 ff a0 2b 00 00 	r5 = 11168 <btctler_bss_start : 2ba0 >			  ## bredr_frame.c:2942:37
 1e1b3f4:    06 f9 41 50       	r6 = b[r5 + 65] (u)			  ## bredr_frame.c:2943:37
 1e1b3f8:    a0 f6 00 56       	r0 = [r5+r6<<2]			  ## bredr_frame.c:2943:37
 1e1b3fc:    bf f3 e9 fc       	call -1582 <bredr_bd_frame_disable : 1e1add2 >			  ## bredr_frame.c:2945:5
 1e1b400:    c4 ff 60 eb 00 00 	r4 = 60256 <UPDATA_BREDR_BASE_BEG : eb60 >			  ## bredr_frame.c:2949:5
 1e1b406:    01 70             	r1 = 0			  ## bredr_frame.c:2947:5
 1e1b408:    02 fb 84 03       	r2 = 900 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x7C : 384 >			  ## bredr_frame.c:2947:5
 1e1b40c:    40 08             	r0 = r4			  ## bredr_frame.c:2947:5
 1e1b40e:    97 f3 6f 5d       	call 3062494 <memset : 106ef0 >			  ## bredr_frame.c:2947:5
 1e1b412:    40 fc 20 00       	r0 = r4 + 32			  ## bredr_frame.c:2948:5
 1e1b416:    51 fc 40 00       	r1 = r5 + 64			  ## bredr_frame.c:2942:37
 1e1b41a:    42 71             	r2 = 20			  ## bredr_frame.c:2948:5
 1e1b41c:    97 f3 62 5d       	call 3062468 <memcpy : 106ee4 >			  ## bredr_frame.c:2948:5
 1e1b420:    a1 f6 00 56       	r1 = [r5+r6<<2]			  ## bredr_frame.c:2949:42
 1e1b424:    45 fc 38 00       	r5 = r4 + 56			  ## bredr_frame.c:2949:5
 1e1b428:    02 fb 48 02       	r2 = 584 <BTCTLER_CONTROLLER_BSS_SIZE+0x88 : 248 >			  ## bredr_frame.c:2949:5
 1e1b42c:    50 08             	r0 = r5			  ## bredr_frame.c:2949:5
 1e1b42e:    97 f3 59 5d       	call 3062450 <memcpy : 106ee4 >			  ## bredr_frame.c:2949:5
 1e1b432:    b5 f6 00 46       	[r4+r6<<2] = r5			  ## bredr_frame.c:2950:35
 1e1b436:    c0 ff 44 fc 1c 00 	r0 = 1899588 <uECC_vli_cmp_unsafe+0xC8C48 : 1cfc44 >			  ## bredr_frame.c:2952:21
 1e1b43c:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2952:21
 1e1b43e:    c0 ff c0 00 1c 00 	r0 = 1835200 <uECC_vli_cmp_unsafe+0xB90C4 : 1c00c0 >			  ## bredr_frame.c:2952:21
 1e1b444:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2953:22
 1e1b446:    21 d4             	r1 = r4 >> 16			  ## bredr_frame.c:2954:22
 1e1b448:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2954:22
 1e1b44a:    c0 ff c3 27 e1 01 	r0 = 31532995 <update_target_end+0x2593 : 1e127c3 >			  ## bredr_frame.c:2956:5
 1e1b450:    51 08             	r1 = r5			  ## bredr_frame.c:2956:5
 1e1b452:    bf f3 a8 8c       	call -59056 <printf : 1e0cda6 >			  ## bredr_frame.c:2956:5
 1e1b456:    a0 f6 00 46       	r0 = [r4+r6<<2]			  ## bredr_frame.c:2959:27
 1e1b45a:    bf f3 cc fc       	call -1640 <bredr_bd_frame_enable : 1e1adf6 >			  ## bredr_frame.c:2959:5
 1e1b45e:    c0 ff 04 41 1e 00 	r0 = 1982724 <uECC_vli_cmp_unsafe+0xDD108 : 1e4104 >			  ## bredr_frame.c:2961:24
 1e1b464:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_frame.c:2961:24
 1e1b46a:    09 40             	[r0 + 0] = r1			  ## bredr_frame.c:2961:24
 1e1b46c:    10 70             	r0 = 1			  ## bredr_frame.c:2974:5
 1e1b46e:    16 01             	{rets, r6-r4} = [sp++]			  ## bredr_frame.c:2974:5
 1e1b470:    ff f3 ac 26       	goto -111272 <__BT_UPDATA_JUMP : 1e001cc >			  ## bredr_frame.c:2974:5


lmp_ch_update_op:
 1e1b474:    12 c4             	r2 = r2 << 16
 1e1b476:    e1 01             	[--sp] = {psr, reti}
 1e1b478:    fe c2             	r6 = r7 << 11
 1e1b47a:    e1 01             	[--sp] = {psr, reti}
 1e1b47c:    96 c2             	r6 = r2 << 10
 1e1b47e:    e1 01             	[--sp] = {psr, reti}
 1e1b480:    72 c2             	r2 = r6 << 9
 1e1b482:    e1 01             	[--sp] = {psr, reti}
 1e1b484:    aa c3             	r2 = r5 << 14
 1e1b486:    e1 01             	[--sp] = {psr, reti}
 1e1b488:    4c c3             	r4 = r1 << 13
 1e1b48a:    e1 01             	[--sp] = {psr, reti}
 1e1b48c:    4c c4             	r4 = r1 << 17
 1e1b48e:    e1 01             	[--sp] = {psr, reti}


ble_ll_ch_update_op:
 1e1b490:    4a c5             	r2 = r1 << 21
 1e1b492:    e1 01             	[--sp] = {psr, reti}
 1e1b494:    de c4             	r6 = r3 << 19
 1e1b496:    e1 01             	[--sp] = {psr, reti}
 1e1b498:    74 c4             	r4 = r6 << 17
 1e1b49a:    e1 01             	[--sp] = {psr, reti}
 1e1b49c:    50 c4             	r0 = r2 << 17
 1e1b49e:    e1 01             	[--sp] = {psr, reti}
 1e1b4a0:    16 c5             	r6 = r2 << 20
 1e1b4a2:    e1 01             	[--sp] = {psr, reti}
 1e1b4a4:    02 c5             	r2 = r0 << 20
 1e1b4a6:    e1 01             	[--sp] = {psr, reti}
 1e1b4a8:    44 c5             	r4 = r0 << 21
 1e1b4aa:    e1 01             	[--sp] = {psr, reti}


update_loader_match_tab:
 1e1b4ac:    05 5a             	r5 = h[r5 + 0] (u)
 1e1b4ae:    65 64             	r5 = b[r2 + 6] (u)
 1e1b4b0:    72 5f             	r2 = h[r7 + 46] (u)
 1e1b4b2:    6f 74             	r15 = 70
 1e1b4b4:    61 32             	if (r1 != 0) goto 194 <JL_FLASH2_BIN_FILE_NAME+0x8 : 1e1b578 >
 1e1b4b6:    2e 62             	b[r1 + 2] = r6
 1e1b4b8:    69 6e             	b[r7 + 6] = r1
 1e1b4ba:    00 00             	nop
 1e1b4bc:    00 00             	nop
 1e1b4be:    01 5a             	r1 = h[r5 + 0] (u)
 1e1b4c0:    73 64             	r3 = b[r2 + 7] (u)
 1e1b4c2:    5f 75             	r15 = 85
 1e1b4c4:    70 64             	r0 = b[r2 + 7] (u)
 1e1b4c6:    61 74             	r1 = 70
 1e1b4c8:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init : 1e1b594 >
 1e1b4ca:    2e 62             	b[r1 + 2] = r6
 1e1b4cc:    69 6e             	b[r7 + 6] = r1
 1e1b4ce:    00 00             	nop
 1e1b4d0:    02 5a             	r2 = h[r5 + 0] (u)
 1e1b4d2:    73 64             	r3 = b[r2 + 7] (u)
 1e1b4d4:    5f 75             	r15 = 85
 1e1b4d6:    70 64             	r0 = b[r2 + 7] (u)
 1e1b4d8:    61 74             	r1 = 70
 1e1b4da:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init+0x12 : 1e1b5a6 >
 1e1b4dc:    2e 62             	b[r1 + 2] = r6
 1e1b4de:    69 6e             	b[r7 + 6] = r1
 1e1b4e0:    00 00             	nop
 1e1b4e2:    06 5a             	r6 = h[r5 + 0] (u)
 1e1b4e4:    62 6c             	r2 = b[r6 + 6] (u)
 1e1b4e6:    65 5f             	r5 = h[r7 + 44] (u)
 1e1b4e8:    61 70             	r1 = 6
 1e1b4ea:    70 5f             	r0 = h[r7 + 46] (u)
 1e1b4ec:    6f 74             	r15 = 70
 1e1b4ee:    61 2e             	if (r7 == 0) goto 194 <update_part_tab_init+0x1E : 1e1b5b2 >
 1e1b4f0:    62 69             	r2 = b[r4 + 22] (u)
 1e1b4f2:    6e 00             	cli r14
 1e1b4f4:    07 5a             	r7 = h[r5 + 0] (u)
 1e1b4f6:    73 70             	r3 = 7
 1e1b4f8:    70 5f             	r0 = h[r7 + 46] (u)
 1e1b4fa:    61 70             	r1 = 6
 1e1b4fc:    70 5f             	r0 = h[r7 + 46] (u)
 1e1b4fe:    6f 74             	r15 = 70
 1e1b500:    61 2e             	if (r7 == 0) goto 194 <update_part_tab_init+0x30 : 1e1b5c4 >
 1e1b502:    62 69             	r2 = b[r4 + 22] (u)
 1e1b504:    6e 00             	cli r14
 1e1b506:    00 5a             	r0 = h[r5 + 0] (u)
 1e1b508:    75 73             	r5 = 55
 1e1b50a:    62 5f             	r2 = h[r7 + 44] (u)
 1e1b50c:    75 70             	r5 = 7
 1e1b50e:    64 61             	r4 = b[r0 + 22] (u)
 1e1b510:    74 65             	r4 = b[r2 + 23] (u)
 1e1b512:    32 2e             	if (r7 == 0) goto 100 <JL_FLASH2_BIN_FILE_NAME+0x8 : 1e1b578 >
 1e1b514:    62 69             	r2 = b[r4 + 22] (u)
 1e1b516:    6e 00             	cli r14
 1e1b518:    09 5a             	h[r5 + 0] = r1
 1e1b51a:    62 6c             	r2 = b[r6 + 6] (u)
 1e1b51c:    65 5f             	r5 = h[r7 + 44] (u)
 1e1b51e:    6f 74             	r15 = 70
 1e1b520:    61 2e             	if (r7 == 0) goto 194 <JL_BT_CFG_FILE_NAME+0x8 : 1e1b5e4 >
 1e1b522:    62 69             	r2 = b[r4 + 22] (u)
 1e1b524:    6e 00             	cli r14
 1e1b526:    00 00             	nop
 1e1b528:    00 00             	nop
 1e1b52a:    04 5a             	r4 = h[r5 + 0] (u)
 1e1b52c:    75 61             	r5 = b[r0 + 23] (u)
 1e1b52e:    72 74             	r2 = 71
 1e1b530:    5f 75             	r15 = 85
 1e1b532:    73 65             	r3 = b[r2 + 23] (u)
 1e1b534:    72 2e             	if (r7 == 0) goto 228 <decode_data_by_user_key+0x14 : 1e1b61a >
 1e1b536:    62 69             	r2 = b[r4 + 22] (u)
 1e1b538:    6e 00             	cli r14
 1e1b53a:    00 00             	nop
 1e1b53c:    0b 5a             	h[r5 + 0] = r3
 1e1b53e:    6e 6f             	b[r7 + 22] = r6
 1e1b540:    72 5f             	r2 = h[r7 + 46] (u)
 1e1b542:    6f 74             	r15 = 70
 1e1b544:    61 2e             	if (r7 == 0) goto 194 <decode_data_by_user_key+0x2 : 1e1b608 >
 1e1b546:    62 69             	r2 = b[r4 + 22] (u)
 1e1b548:    6e 00             	cli r14
 1e1b54a:    00 00             	nop
 1e1b54c:    00 00             	nop


JL_RESERVED_VM_FILE_NAME:
 1e1b54e:    56 4d             	r6 = [r6 + 84]
 1e1b550:    00 61             	r0 = b[r0 + 16] (u)


JL_APP_CODE0_FILE_NAME:
 1e1b551:    61 70             	r1 = 6
 1e1b553:    70 5f             	r0 = h[r7 + 46] (u)
 1e1b555:    64 69             	r4 = b[r4 + 22] (u)
 1e1b557:    72 5f             	r2 = h[r7 + 46] (u)
 1e1b559:    68 65             	b[r2 + 22] = r0
 1e1b55b:    61 64             	r1 = b[r2 + 6] (u)
 1e1b55d:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH_BIN_FILE_NAME:
 1e1b55e:    66 6c             	r6 = b[r6 + 6] (u)
 1e1b560:    61 73             	r1 = 54
 1e1b562:    68 2e             	if (r7 == 0) goto 208 <decode_data_by_user_key+0x2E : 1e1b634 >
 1e1b564:    62 69             	r2 = b[r4 + 22] (u)
 1e1b566:    6e 00             	cli r14


JL_OTA_LOADER_FILE_NAME:
 1e1b568:    6f 74             	r15 = 70
 1e1b56a:    61 2e             	if (r7 == 0) goto 194 <decode_data_by_user_key+0x28 : 1e1b62e >
 1e1b56c:    62 69             	r2 = b[r4 + 22] (u)
 1e1b56e:    6e 00             	cli r14


JL_FLASH2_BIN_FILE_NAME:
 1e1b570:    66 6c             	r6 = b[r6 + 6] (u)
 1e1b572:    61 73             	r1 = 54
 1e1b574:    68 32             	if (r1 != 0) goto 208 <update_resource_release+0xC : 1e1b646 >
 1e1b576:    2e 62             	b[r1 + 2] = r6
 1e1b578:    69 6e             	b[r7 + 6] = r1
 1e1b57a:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH3_BIN_FILE_NAME:
 1e1b57b:    66 6c             	r6 = b[r6 + 6] (u)
 1e1b57d:    61 73             	r1 = 54
 1e1b57f:    68 33             	if (r1 != 0) goto -304 <update_code_start+0x65 : 1e1b451 >
 1e1b581:    2e 62             	b[r1 + 2] = r6
 1e1b583:    69 6e             	b[r7 + 6] = r1
 1e1b585:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH4_BIN_FILE_NAME:
 1e1b586:    66 6c             	r6 = b[r6 + 6] (u)
 1e1b588:    61 73             	r1 = 54
 1e1b58a:    68 34             	if (r2 != 0) goto 208 <active_update_task+0x4 : 1e1b65c >
 1e1b58c:    2e 62             	b[r1 + 2] = r6
 1e1b58e:    69 6e             	b[r7 + 6] = r1
 1e1b590:    00 00             	nop
 1e1b592:    00 00             	nop


update_part_tab_init:
 1e1b594:    dc b5             	r12 = ~r2
 1e1b596:    e1 01             	[--sp] = {psr, reti}
 1e1b598:    01 00             	nop
 1e1b59a:    00 00             	nop
 1e1b59c:    00 00             	nop
 1e1b59e:    00 00             	nop
 1e1b5a0:    00 00             	nop
 1e1b5a2:    00 00             	nop
 1e1b5a4:    1a c6             	r2 = r3 << 24
 1e1b5a6:    e1 01             	[--sp] = {psr, reti}
 1e1b5a8:    0c 00             	syscall
 1e1b5aa:    00 00             	nop
 1e1b5ac:    5e b5             	r14 &= r2
 1e1b5ae:    e1 01             	[--sp] = {psr, reti}
 1e1b5b0:    ff ff ff ff 00 00 	pc = 65535
 1e1b5b6:    00 00             	nop
 1e1b5b8:    00 00             	nop
 1e1b5ba:    00 00             	nop
 1e1b5bc:    00 00             	nop
 1e1b5be:    00 00             	nop
 1e1b5c0:    00 00             	nop
 1e1b5c2:    00 00             	nop
 1e1b5c4:    70 b5             	r0 &= 4294966271
 1e1b5c6:    e1 01             	[--sp] = {psr, reti}
 1e1b5c8:    ff ff ff ff 00 00 	pc = 65535
 1e1b5ce:    00 00             	nop
 1e1b5d0:    00 00             	nop
 1e1b5d2:    00 00             	nop
 1e1b5d4:    00 00             	nop
 1e1b5d6:    00 00             	nop
 1e1b5d8:    00 00             	nop
 1e1b5da:    00 00             	nop


JL_BT_CFG_FILE_NAME:
 1e1b5dc:    63 66             	r3 = b[r3 + 6] (u)
 1e1b5de:    67 5f             	r7 = h[r7 + 44] (u)
 1e1b5e0:    74 6f             	r4 = b[r7 + 23] (u)
 1e1b5e2:    6f 6c             	b[r6 + 6] = r7
 1e1b5e4:    2e 62             	b[r1 + 2] = r6
 1e1b5e6:    69 6e             	b[r7 + 6] = r1
 1e1b5e8:    00 00             	nop


update_stop:
 1e1b5ea:    75 01             	[--sp] = {rets, r5, r4}			  ## download_loop.c:450:0
 1e1b5ec:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:450:0
 1e1b5f2:    01 f6 48 51       	r1 = [r5 + 328]			  ## download_loop.c:453:17
 1e1b5f6:    04 08             	r4 = r0			  ## download_loop.c:453:17
 1e1b5f8:    05 22             	if (r1 == 0) goto 10 <update_stop+0x1A : 1e1b604 >			  ## download_loop.c:453:17
 1e1b5fa:    41 42             	r1 = [r1 + 16]			  ## download_loop.c:459:22
 1e1b5fc:    01 22             	if (r1 == 0) goto 2 <update_stop+0x16 : 1e1b600 >			  ## download_loop.c:459:22
 1e1b5fe:    81 00             	call r1			  ## download_loop.c:460:9
 1e1b600:    14 f9 26 50       	b[r5 + 38] = r4			  ## download_loop.c:463:23
 1e1b604:    55 01             	{pc, r5, r4} = [sp++]


decode_data_by_user_key:
 1e1b606:    79 01             	[--sp] = {rets, r9-r4}			  ## encrypt_api.c:97:0
 1e1b608:    34 08             	r4 = r3			  ## encrypt_api.c:97:0
 1e1b60a:    15 08             	r5 = r1			  ## encrypt_api.c:97:0
 1e1b60c:    08 08             	r8 = r0			  ## encrypt_api.c:97:0
 1e1b60e:    14 24             	if (r2 == 0) goto 40 <decode_data_by_user_key+0x32 : 1e1b638 >			  ## encrypt_api.c:97:0
 1e1b610:    09 f5 1c 00       	r9 = [sp+28]			  ## encrypt_api.c:97:0
 1e1b614:    a6 04             	r6 = r2.l (u)			  ## encrypt_api.c:102:18
 1e1b616:    97 08             	r7 = r9			  ## encrypt_api.c:102:17
 1e1b618:    76 f2 01 80       	if (r6 > r7) goto 2 <decode_data_by_user_key+0x18 : 1e1b61e >			  ## encrypt_api.c:102:17
 1e1b61c:    67 08             	r7 = r6			  ## encrypt_api.c:102:17
 1e1b61e:    a0 d0             	r0 = r4 >> 2			  ## encrypt_api.c:103:30
 1e1b620:    e1 fd 80 00       	r0 = r0 ^ r8			  ## encrypt_api.c:103:35
 1e1b624:    20 04             	r0 = r0.l (u)			  ## encrypt_api.c:105:9
 1e1b626:    51 08             	r1 = r5			  ## encrypt_api.c:105:9
 1e1b628:    72 08             	r2 = r7			  ## encrypt_api.c:105:9
 1e1b62a:    bf f3 d4 2d       	call -107608 <doe : 1e011d6 >			  ## encrypt_api.c:105:9
 1e1b62e:    74 09             	r4 += r7			  ## encrypt_api.c:110:18
 1e1b630:    e2 bd             	r2 = r6 - r7			  ## encrypt_api.c:111:14
 1e1b632:    a0 04             	r0 = r2.l (u)			  ## encrypt_api.c:101:5
 1e1b634:    75 09             	r5 += r7			  ## encrypt_api.c:109:14
 1e1b636:    ee 31             	if (r0 != 0) goto -36 <decode_data_by_user_key+0xE : 1e1b614 >			  ## encrypt_api.c:109:14
 1e1b638:    59 01             	{pc, r9-r4} = [sp++]


update_resource_release:
 1e1b63a:    74 01             	[--sp] = {rets, r4}			  ## download_loop.c:1557:0
 1e1b63c:    c4 ff f4 31 00 00 	r4 = 12788 <update_bss_start : 31f4 >			  ## download_loop.c:1557:0
 1e1b642:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1560:9
 1e1b644:    08 20             	if (r0 == 0) goto 16 <update_resource_release+0x1C : 1e1b656 >			  ## download_loop.c:1560:9
 1e1b646:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1561:21
 1e1b648:    04 22             	if (r1 == 0) goto 8 <update_resource_release+0x18 : 1e1b652 >			  ## download_loop.c:1561:21
 1e1b64a:    10 08             	r0 = r1			  ## download_loop.c:1562:13
 1e1b64c:    bf f3 e6 90       	call -56884 <free : 1e0d81c >			  ## download_loop.c:1562:13
 1e1b650:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1562:13
 1e1b652:    bf f3 e3 90       	call -56890 <free : 1e0d81c >			  ## download_loop.c:1564:9
 1e1b656:    54 01             	{pc, r4} = [sp++]


active_update_task:
 1e1b658:    7f 01             	[--sp] = {rets, r15-r4}			  ## update_main.c:86:0
 1e1b65a:    1c 0b             	sp += -456			  ## update_main.c:86:0
 1e1b65c:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >			  ## update_main.c:86:0
 1e1b662:    01 f6 44 d1       	r1 = [r13 + 324]			  ## update_main.c:89:5
 1e1b666:    0b 08             	r11 = r0			  ## update_main.c:89:5
 1e1b668:    10 70             	r0 = 1			  ## update_main.c:89:22
 1e1b66a:    10 f9 64 10       	b[r1 + 100] = r0			  ## update_main.c:89:22
 1e1b66e:    03 f6 60 b0       	r3 = [r11 + 96]			  ## update_main.c:94:15
 1e1b672:    bc fc 50 00       	r12 = r11 + 80			  ## update_main.c:92:39
 1e1b676:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x28 : 1e1b680 >			  ## update_main.c:92:39
 1e1b678:    11 70             	r1 = 1			  ## update_main.c:95:9
 1e1b67a:    02 70             	r2 = 0			  ## update_main.c:95:9
 1e1b67c:    c0 08             	r0 = r12			  ## update_main.c:95:9
 1e1b67e:    83 00             	call r3			  ## update_main.c:95:9
 1e1b680:    00 f6 58 b0       	r0 = [r11 + 88]			  ## update_main.c:58:15
 1e1b684:    0b 20             	if (r0 == 0) goto 22 <active_update_task+0x44 : 1e1b69c >			  ## update_main.c:58:15
 1e1b686:    10 f6 48 d1       	[r13 + 328] = r0			  ## download_loop.c:2489:17
 1e1b68a:    02 40             	r2 = [r0 + 0]			  ## update_main.c:60:29
 1e1b68c:    07 24             	if (r2 == 0) goto 14 <active_update_task+0x44 : 1e1b69c >			  ## update_main.c:60:29
 1e1b68e:    c0 ff ac c5 e1 01 	r0 = 31573420 <update_thread_resume : 1e1c5ac >			  ## update_main.c:61:13
 1e1b694:    c1 ff ba c5 e1 01 	r1 = 31573434 <update_thread_sleep : 1e1c5ba >			  ## update_main.c:61:13
 1e1b69a:    82 00             	call r2			  ## update_main.c:61:13
 1e1b69c:    c0 ff e2 28 e1 01 	r0 = 31533282 <update_target_end+0x26B2 : 1e128e2 >			  ## update_main.c:104:9
 1e1b6a2:    bf f3 61 8c       	call -59198 <puts : 1e0cf68 >			  ## update_main.c:104:9
 1e1b6a6:    05 f6 50 b0       	r5 = [r11 + 80]			  ## update_main.c:105:19
 1e1b6aa:    00 fb 07 5a       	r0 = 23047 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xE83 : 5a07 >			  ## update_main.c:105:24
 1e1b6ae:    05 f2 04 10       	if (r5 != r0) goto 8 <active_update_task+0x62 : 1e1b6ba >			  ## update_main.c:105:24
 1e1b6b2:    05 fb 06 5a       	r5 = 23046 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xE82 : 5a06 >
 1e1b6b6:    15 f6 50 b0       	[r11 + 80] = r5			  ## update_main.c:106:24
 1e1b6ba:    00 70             	r0 = 0
 1e1b6bc:    10 f9 26 d0       	b[r13 + 38] = r0			  ## download_loop.c:1530:23
 1e1b6c0:    00 fb 44 02       	r0 = 580 <BTCTLER_CONTROLLER_BSS_SIZE+0x84 : 244 >			  ## download_loop.c:1532:31
 1e1b6c4:    bf f3 a5 90       	call -57014 <malloc : 1e0d812 >			  ## download_loop.c:1532:31
 1e1b6c8:    04 08             	r4 = r0			  ## download_loop.c:1532:31
 1e1b6ca:    ce ff f4 31 00 00 	r14 = 12788 <update_bss_start : 31f4 >			  ## download_loop.c:1532:31
 1e1b6d0:    14 f6 00 e0       	[r14 + 0] = r4			  ## download_loop.c:1532:12
 1e1b6d4:    3d 28             	if (r4 == 0) goto 122 <active_update_task+0xF8 : 1e1b750 >			  ## download_loop.c:1532:12
 1e1b6d6:    01 70             	r1 = 0			  ## download_loop.c:1540:5
 1e1b6d8:    02 fb 44 02       	r2 = 580 <BTCTLER_CONTROLLER_BSS_SIZE+0x84 : 244 >			  ## download_loop.c:1540:5
 1e1b6dc:    06 70             	r6 = 0			  ## download_loop.c:1540:5
 1e1b6de:    97 f3 07 5c       	call 3061774 <memset : 106ef0 >			  ## download_loop.c:1540:5
 1e1b6e2:    40 fc f8 01       	r0 = r4 + 504			  ## download_loop.c:1541:5
 1e1b6e6:    c1 ff 94 b5 e1 01 	r1 = 31569300 <update_part_tab_init : 1e1b594 >			  ## download_loop.c:1541:5
 1e1b6ec:    82 74             	r2 = 72			  ## download_loop.c:1541:5
 1e1b6ee:    97 f3 f9 5b       	call 3061746 <memcpy : 106ee4 >			  ## download_loop.c:1541:5
 1e1b6f2:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >			  ## download_loop.c:1541:5
 1e1b6f6:    28 58             	h[r4 + 4] = r0			  ## download_loop.c:1543:28
 1e1b6f8:    bf f3 8b 90       	call -57066 <malloc : 1e0d812 >			  ## download_loop.c:1544:32
 1e1b6fc:    08 48             	[r4 + 0] = r0			  ## download_loop.c:1544:24
 1e1b6fe:    28 20             	if (r0 == 0) goto 80 <active_update_task+0xF8 : 1e1b750 >			  ## download_loop.c:1544:24
 1e1b700:    8d 02             	[sp+32] = r5
 1e1b702:    16 f6 4c d1       	[r13 + 332] = r6			  ## flash_fs_api.c:68:20
 1e1b706:    80 a3             	r0 = sp + 56			  ## flash_fs_api.c:68:20
 1e1b708:    09 fd 02 09       	r9 = r0 | 2
 1e1b70c:    c4 ff 00 33 e1 01 	r4 = 31535872 <boot_addr_tab : 1e13300 >
 1e1b712:    0a 72             	r10 = 32
 1e1b714:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1b71a:    47 f6 04 40       	r7 = [r4 ++= 4]			  ## flash_fs_api.c:70:42
 1e1b71e:    85 a3             	r5 = sp + 56			  ## flash_fs_api.c:70:42
 1e1b720:    02 72             	r2 = 32			  ## flash_fs_api.c:70:9
 1e1b722:    50 08             	r0 = r5			  ## flash_fs_api.c:70:9
 1e1b724:    71 08             	r1 = r7			  ## flash_fs_api.c:70:9
 1e1b726:    bf f3 54 2d       	call -107864 <norflash_origin_read : 1e011d2 >			  ## flash_fs_api.c:70:9
 1e1b72a:    02 72             	r2 = 32			  ## flash_fs_api.c:71:9
 1e1b72c:    03 70             	r3 = 0			  ## flash_fs_api.c:71:9
 1e1b72e:    1a f5 00 00       	[sp] = r10			  ## flash_fs_api.c:71:9
 1e1b732:    80 08             	r0 = r8			  ## flash_fs_api.c:71:9
 1e1b734:    51 08             	r1 = r5			  ## flash_fs_api.c:71:9
 1e1b736:    67 17             	call -306 <decode_data_by_user_key : 1e1b606 >			  ## flash_fs_api.c:71:9
 1e1b738:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e1b73a:    90 08             	r0 = r9			  ## flash_fs_api.c:44:20
 1e1b73c:    bf f3 6d 2d       	call -107814 <CRC16 : 1e0121a >			  ## flash_fs_api.c:44:20
 1e1b740:    81 f5 38 00       	r1 = h[sp+56] (u)			  ## flash_fs_api.c:45:15
 1e1b744:    01 f2 27 00       	if (r1 == r0) goto 78 <active_update_task+0x13E : 1e1b796 >			  ## flash_fs_api.c:45:15
 1e1b748:    16 80             	r6 += 1			  ## flash_fs_api.c:69:72
 1e1b74a:    16 e0 e6 9f       	if (r6 <= 1) goto -52 <active_update_task+0xC2 : 1e1b71a >			  ## flash_fs_api.c:69:72
 1e1b74e:    25 18             	goto 74 <active_update_task+0x142 : 1e1b79a >			  ## flash_fs_api.c:69:72
 1e1b750:    20 79             	r0 = 146			  ## download_loop.c:1748:9
 1e1b752:    4b 17             	call -362 <update_stop : 1e1b5ea >			  ## download_loop.c:1748:9
 1e1b754:    f4 07             	r4 = -1
 1e1b756:    71 17             	call -286 <update_resource_release : 1e1b63a >			  ## download_loop.c:1910:5
 1e1b758:    00 f9 26 d0       	r0 = b[r13 + 38] (u)			  ## download_loop.c:488:12
 1e1b75c:    9c 02             	[sp+36] = r4			  ## update_main.c:116:34
 1e1b75e:    d0 f5 28 00       	b[sp+40] = r0			  ## update_main.c:116:34
 1e1b762:    00 f6 58 b0       	r0 = [r11 + 88]			  ## update_main.c:69:15
 1e1b766:    04 20             	if (r0 == 0) goto 8 <active_update_task+0x118 : 1e1b770 >			  ## update_main.c:69:15
 1e1b768:    61 40             	r1 = [r0 + 24]			  ## update_main.c:69:43
 1e1b76a:    02 22             	if (r1 == 0) goto 4 <active_update_task+0x118 : 1e1b770 >			  ## update_main.c:69:43
 1e1b76c:    c0 08             	r0 = r12			  ## update_main.c:70:9
 1e1b76e:    81 00             	call r1			  ## update_main.c:70:9
 1e1b770:    03 f6 60 b0       	r3 = [r11 + 96]			  ## update_main.c:127:15
 1e1b774:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x126 : 1e1b77e >			  ## update_main.c:127:15
 1e1b776:    42 a2             	r2 = sp + 36
 1e1b778:    31 70             	r1 = 3			  ## update_main.c:128:9
 1e1b77a:    c0 08             	r0 = r12			  ## update_main.c:128:9
 1e1b77c:    83 00             	call r3			  ## update_main.c:128:9
 1e1b77e:    01 f6 44 d1       	r1 = [r13 + 324]			  ## update_main.c:131:5
 1e1b782:    00 70             	r0 = 0			  ## update_main.c:131:22
 1e1b784:    c1 85             	r1 += 92			  ## update_main.c:131:22
 1e1b786:    88 62             	b[r1 + 8] = r0			  ## update_main.c:131:22
 1e1b788:    02 62             	r2 = b[r1 + 0] (u)			  ## update_main.c:133:22
 1e1b78a:    03 24             	if (r2 == 0) goto 6 <active_update_task+0x13A : 1e1b792 >			  ## update_main.c:133:22
 1e1b78c:    08 62             	b[r1 + 0] = r0			  ## update_main.c:134:30
 1e1b78e:    bf f3 ff 99       	call -52226 <task_kill : 1e0eb90 >			  ## update_main.c:135:9
 1e1b792:    e4 0a             	sp += 456
 1e1b794:    5f 01             	{pc, r15-r4} = [sp++]			  ## update_main.c:137:1
 1e1b796:    17 f6 4c d1       	[r13 + 332] = r7			  ## flash_fs_api.c:73:28
 1e1b79a:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:433:17
 1e1b79e:    f4 07             	r4 = -1			  ## download_loop.c:433:17
 1e1b7a0:    da 21             	if (r0 == 0) goto -76 <active_update_task+0xFE : 1e1b756 >			  ## download_loop.c:433:17
 1e1b7a2:    10 40             	r0 = [r0 + 4]			  ## download_loop.c:439:23
 1e1b7a4:    80 00             	call r0			  ## download_loop.c:439:10
 1e1b7a6:    d7 21             	if (r0 == 0) goto -82 <active_update_task+0xFE : 1e1b756 >
 1e1b7a8:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:660:13
 1e1b7ac:    01 f6 00 e0       	r1 = [r14 + 0]			  ## download_loop.c:1762:24
 1e1b7b0:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:660:26
 1e1b7b2:    04 42             	r4 = [r1 + 0]			  ## download_loop.c:1762:32
 1e1b7b4:    00 70             	r0 = 0			  ## download_loop.c:660:13
 1e1b7b6:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:660:13
 1e1b7ba:    41 08             	r1 = r4			  ## download_loop.c:660:13
 1e1b7bc:    83 00             	call r3			  ## download_loop.c:660:13
 1e1b7be:    1c f5 1c 00       	[sp+28] = r12			  ## download_loop.c:661:9
 1e1b7c2:    80 f2 03 02       	if (r0 == r8) goto 1030 <active_update_task+0x574 : 1e1bbcc >			  ## download_loop.c:661:9
 1e1b7c6:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:666:13
 1e1b7ca:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:666:26
 1e1b7cc:    41 fc 00 02       	r1 = r4 + 512			  ## download_loop.c:666:46
 1e1b7d0:    00 70             	r0 = 0			  ## download_loop.c:666:13
 1e1b7d2:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:666:13
 1e1b7d6:    83 00             	call r3			  ## download_loop.c:666:13
 1e1b7d8:    80 f2 f8 01       	if (r0 == r8) goto 1008 <active_update_task+0x574 : 1e1bbcc >
 1e1b7dc:    00 74             	r0 = 64
 1e1b7de:    8f 08             	r15 = r8
 1e1b7e0:    02 74             	r2 = 64			  ## download_loop.c:680:5
 1e1b7e2:    03 70             	r3 = 0			  ## download_loop.c:680:5
 1e1b7e4:    08 02             	[sp] = r0			  ## download_loop.c:680:5
 1e1b7e6:    f0 08             	r0 = r15			  ## download_loop.c:680:5
 1e1b7e8:    41 08             	r1 = r4			  ## download_loop.c:680:5
 1e1b7ea:    0d 17             	call -486 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:680:5
 1e1b7ec:    20 98             	r0 = r4 + 2			  ## download_loop.c:686:43
 1e1b7ee:    e1 73             	r1 = 62			  ## download_loop.c:307:12
 1e1b7f0:    bf f3 13 2d       	call -107994 <CRC16 : 1e0121a >			  ## download_loop.c:307:12
 1e1b7f4:    01 58             	r1 = h[r4 + 0] (u)			  ## download_loop.c:687:24
 1e1b7f6:    01 f2 e9 11       	if (r1 != r0) goto 978 <active_update_task+0x574 : 1e1bbcc >			  ## download_loop.c:687:24
 1e1b7fa:    08 f7 08 40       	r8 = h[r4 + 8] (u)			  ## download_loop.c:704:36
 1e1b7fe:    47 fc 40 00       	r7 = r4 + 64			  ## download_loop.c:683:73
 1e1b802:    08 e0 11 00       	if (r8 == 0) goto 34 <active_update_task+0x1D0 : 1e1b828 >
 1e1b806:    00 70             	r0 = 0
 1e1b808:    15 70             	r5 = 1
 1e1b80a:    06 75             	r6 = 80
 1e1b80c:    f9 08             	r9 = r15
 1e1b80e:    71 08             	r1 = r7			  ## download_loop.c:710:33
 1e1b810:    80 fe 60 10       	r1 += r0 * r6			  ## download_loop.c:710:33
 1e1b814:    02 75             	r2 = 80			  ## download_loop.c:709:9
 1e1b816:    03 70             	r3 = 0			  ## download_loop.c:709:9
 1e1b818:    0e 02             	[sp] = r6			  ## download_loop.c:709:9
 1e1b81a:    90 08             	r0 = r9			  ## download_loop.c:709:9
 1e1b81c:    f4 16             	call -536 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:709:9
 1e1b81e:    41 58             	r1 = h[r4 + 8] (u)			  ## download_loop.c:708:21
 1e1b820:    40 05             	r0 = r5.b0 (u)			  ## download_loop.c:708:17
 1e1b822:    15 80             	r5 += 1			  ## download_loop.c:708:5
 1e1b824:    10 f2 f3 3f       	if (r0 < r1) goto -26 <active_update_task+0x1B6 : 1e1b80e >			  ## download_loop.c:708:5
 1e1b828:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:496:5
 1e1b82c:    0c 70             	r12 = 0			  ## download_loop.c:496:5
 1e1b82e:    01 fc 40 02       	r1 = r0 + 576			  ## download_loop.c:496:5
 1e1b832:    49 02             	[sp+16] = r1			  ## download_loop.c:496:5
 1e1b834:    1c f9 00 10       	b[r1 + 0] = r12			  ## download_loop.c:496:35
 1e1b838:    1c f5 64 00       	[sp+100] = r12			  ## download_loop.c:497:29
 1e1b83c:    1c f5 60 00       	[sp+96] = r12			  ## download_loop.c:497:29
 1e1b840:    1c f5 5c 00       	[sp+92] = r12			  ## download_loop.c:497:29
 1e1b844:    1c f5 58 00       	[sp+88] = r12			  ## download_loop.c:497:29
 1e1b848:    60 ff ff 89 c6 00 	if ((r8 & 255) == 0) goto 396 <active_update_task+0x382 : 1e1b9da >
 1e1b84e:    e4 fd 00 48       	r4 = r8.b0 (u)			  ## download_loop.c:741:69
 1e1b852:    0d fc 04 02       	r13 = r0 + 516			  ## download_loop.c:500:5
 1e1b856:    01 fc 58 01       	r1 = r0 + 344			  ## download_loop.c:500:5
 1e1b85a:    19 02             	[sp+4] = r1			  ## download_loop.c:500:5
 1e1b85c:    01 fc 08 01       	r1 = r0 + 264			  ## download_loop.c:500:5
 1e1b860:    29 02             	[sp+8] = r1			  ## download_loop.c:500:5
 1e1b862:    01 fc b8 00       	r1 = r0 + 184			  ## download_loop.c:500:5
 1e1b866:    39 02             	[sp+12] = r1			  ## download_loop.c:500:5
 1e1b868:    81 91             	r1 = r0 + 24			  ## download_loop.c:500:5
 1e1b86a:    59 02             	[sp+20] = r1			  ## download_loop.c:500:5
 1e1b86c:    80 86             	r0 += 104			  ## download_loop.c:500:5
 1e1b86e:    68 02             	[sp+24] = r0			  ## download_loop.c:500:5
 1e1b870:    05 70             	r5 = 0			  ## download_loop.c:500:5
 1e1b872:    0a f6 0c 70       	r10 = [r7 + 12]			  ## download_loop.c:502:127
 1e1b876:    79 fc 40 00       	r9 = r7 + 64			  ## download_loop.c:502:64
 1e1b87a:    06 70             	r6 = 0
 1e1b87c:    0a e0 23 00       	if (r10 == 0) goto 70 <active_update_task+0x26E : 1e1b8c6 >
 1e1b880:    0e f6 08 70       	r14 = [r7 + 8]			  ## download_loop.c:502:102
 1e1b884:    d0 08             	r0 = r13
 1e1b886:    0f fc f4 ff       	r15 = r0 + -12
 1e1b88a:    08 f6 00 f0       	r8 = [r15 + 0]			  ## download_loop.c:320:60
 1e1b88e:    80 08             	r0 = r8			  ## download_loop.c:320:71
 1e1b890:    97 f3 34 5b       	call 3061352 <strlen : 106efc >			  ## download_loop.c:320:71
 1e1b894:    02 08             	r2 = r0			  ## download_loop.c:320:71
 1e1b896:    90 08             	r0 = r9			  ## download_loop.c:320:18
 1e1b898:    81 08             	r1 = r8			  ## download_loop.c:320:18
 1e1b89a:    97 f3 27 5b       	call 3061326 <memcmp : 106eec >			  ## download_loop.c:320:18
 1e1b89e:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x256 : 1e1b8ae >			  ## download_loop.c:320:18
 1e1b8a0:    16 80             	r6 += 1			  ## download_loop.c:319:92
 1e1b8a2:    f0 fc 24 00       	r0 = r15 + 36			  ## download_loop.c:319:19
 1e1b8a6:    26 e0 ee 9f       	if (r6 <= 2) goto -36 <active_update_task+0x22E : 1e1b886 >			  ## download_loop.c:319:19
 1e1b8aa:    06 70             	r6 = 0
 1e1b8ac:    06 18             	goto 12 <active_update_task+0x262 : 1e1b8ba >
 1e1b8ae:    06 f6 04 f0       	r6 = [r15 + 4]			  ## download_loop.c:321:47
 1e1b8b2:    1e f6 08 f0       	[r15 + 8] = r14			  ## download_loop.c:322:51
 1e1b8b6:    1a f6 0c f0       	[r15 + 12] = r10			  ## download_loop.c:323:44
 1e1b8ba:    ce ff f4 31 00 00 	r14 = 12788 <update_bss_start : 31f4 >
 1e1b8c0:    cf ff ff ff 00 00 	r15 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1b8c6:    a2 70             	r2 = 10			  ## download_loop.c:503:18
 1e1b8c8:    90 08             	r0 = r9			  ## download_loop.c:503:18
 1e1b8ca:    c1 ff 5e b5 e1 01 	r1 = 31569246 <JL_FLASH_BIN_FILE_NAME : 1e1b55e >			  ## download_loop.c:503:18
 1e1b8d0:    97 f3 0c 5b       	call 3061272 <memcmp : 106eec >			  ## download_loop.c:503:18
 1e1b8d4:    27 20             	if (r0 == 0) goto 78 <active_update_task+0x2CC : 1e1b924 >			  ## download_loop.c:503:18
 1e1b8d6:    82 70             	r2 = 8			  ## download_loop.c:507:25
 1e1b8d8:    90 08             	r0 = r9			  ## download_loop.c:507:25
 1e1b8da:    c1 ff 68 b5 e1 01 	r1 = 31569256 <JL_OTA_LOADER_FILE_NAME : 1e1b568 >			  ## download_loop.c:507:25
 1e1b8e0:    97 f3 04 5b       	call 3061256 <memcmp : 106eec >			  ## download_loop.c:507:25
 1e1b8e4:    22 20             	if (r0 == 0) goto 68 <active_update_task+0x2D2 : 1e1b92a >			  ## download_loop.c:507:25
 1e1b8e6:    b2 70             	r2 = 11			  ## download_loop.c:513:23
 1e1b8e8:    90 08             	r0 = r9			  ## download_loop.c:513:23
 1e1b8ea:    c1 ff 70 b5 e1 01 	r1 = 31569264 <JL_FLASH2_BIN_FILE_NAME : 1e1b570 >			  ## download_loop.c:513:23
 1e1b8f0:    97 f3 fc 5a       	call 3061240 <memcmp : 106eec >			  ## download_loop.c:513:23
 1e1b8f4:    1d 20             	if (r0 == 0) goto 58 <active_update_task+0x2D8 : 1e1b930 >			  ## download_loop.c:513:23
 1e1b8f6:    b2 70             	r2 = 11			  ## download_loop.c:518:25
 1e1b8f8:    90 08             	r0 = r9			  ## download_loop.c:518:25
 1e1b8fa:    c1 ff 7b b5 e1 01 	r1 = 31569275 <JL_FLASH3_BIN_FILE_NAME : 1e1b57b >			  ## download_loop.c:518:25
 1e1b900:    97 f3 f4 5a       	call 3061224 <memcmp : 106eec >			  ## download_loop.c:518:25
 1e1b904:    18 20             	if (r0 == 0) goto 48 <active_update_task+0x2DE : 1e1b936 >			  ## download_loop.c:518:25
 1e1b906:    b2 70             	r2 = 11			  ## download_loop.c:522:25
 1e1b908:    90 08             	r0 = r9			  ## download_loop.c:522:25
 1e1b90a:    c1 ff 86 b5 e1 01 	r1 = 31569286 <JL_FLASH4_BIN_FILE_NAME : 1e1b586 >			  ## download_loop.c:522:25
 1e1b910:    97 f3 ec 5a       	call 3061208 <memcmp : 106eec >			  ## download_loop.c:522:25
 1e1b914:    13 20             	if (r0 == 0) goto 38 <active_update_task+0x2E4 : 1e1b93c >			  ## download_loop.c:522:25
 1e1b916:    40 02             	r0 = [sp+16]			  ## download_loop.c:528:30
 1e1b918:    00 60             	r0 = b[r0 + 0] (u)			  ## download_loop.c:528:30
 1e1b91a:    15 30             	if (r0 != 0) goto 42 <active_update_task+0x2EE : 1e1b946 >			  ## download_loop.c:528:30
 1e1b91c:    40 02             	r0 = [sp+16]			  ## download_loop.c:529:47
 1e1b91e:    01 70             	r1 = 0			  ## download_loop.c:529:47
 1e1b920:    09 60             	b[r0 + 0] = r1			  ## download_loop.c:529:47
 1e1b922:    11 18             	goto 34 <active_update_task+0x2EE : 1e1b946 >			  ## download_loop.c:529:47
 1e1b924:    02 75             	r2 = 80			  ## download_loop.c:505:13
 1e1b926:    60 02             	r0 = [sp+24]			  ## download_loop.c:505:13
 1e1b928:    0b 18             	goto 22 <active_update_task+0x2E8 : 1e1b940 >			  ## download_loop.c:505:13
 1e1b92a:    02 75             	r2 = 80			  ## download_loop.c:509:13
 1e1b92c:    50 02             	r0 = [sp+20]			  ## download_loop.c:509:13
 1e1b92e:    08 18             	goto 16 <active_update_task+0x2E8 : 1e1b940 >			  ## download_loop.c:509:13
 1e1b930:    02 75             	r2 = 80			  ## download_loop.c:515:13
 1e1b932:    30 02             	r0 = [sp+12]			  ## download_loop.c:515:13
 1e1b934:    05 18             	goto 10 <active_update_task+0x2E8 : 1e1b940 >			  ## download_loop.c:515:13
 1e1b936:    02 75             	r2 = 80			  ## download_loop.c:520:13
 1e1b938:    20 02             	r0 = [sp+8]			  ## download_loop.c:520:13
 1e1b93a:    02 18             	goto 4 <active_update_task+0x2E8 : 1e1b940 >			  ## download_loop.c:520:13
 1e1b93c:    02 75             	r2 = 80			  ## download_loop.c:524:13
 1e1b93e:    10 02             	r0 = [sp+4]			  ## download_loop.c:524:13
 1e1b940:    71 08             	r1 = r7
 1e1b942:    97 f3 cf 5a       	call 3061150 <memcpy : 106ee4 >
 1e1b946:    5c bc             	r12 |= r6			  ## download_loop.c:502:26
 1e1b948:    15 80             	r5 += 1			  ## download_loop.c:500:32
 1e1b94a:    60 05             	r0 = r5.l (u)			  ## download_loop.c:500:32
 1e1b94c:    07 85             	r7 += 80			  ## download_loop.c:539:23
 1e1b94e:    40 f2 90 1f       	if (r0 != r4) goto -224 <active_update_task+0x21A : 1e1b872 >
 1e1b952:    40 02             	r0 = [sp+16]
 1e1b954:    00 60             	r0 = b[r0 + 0] (u)
 1e1b956:    13 20             	if (r0 == 0) goto 38 <active_update_task+0x326 : 1e1b97e >
 1e1b958:    05 06             	r5 = -32
 1e1b95a:    00 4a             	r0 = [r5 + 0]			  ## download_loop.c:543:64
 1e1b95c:    c1 ff f6 28 e1 01 	r1 = 31533302 <update_target_end+0x26C6 : 1e128f6 >			  ## download_loop.c:369:14
 1e1b962:    72 70             	r2 = 7			  ## download_loop.c:369:14
 1e1b964:    97 f3 c2 5a       	call 3061124 <memcmp : 106eec >			  ## download_loop.c:369:14
 1e1b968:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e1b96e:    0b 20             	if (r0 == 0) goto 22 <active_update_task+0x32E : 1e1b986 >
 1e1b970:    12 4a             	r2 = [r5 + 4]			  ## download_loop.c:392:51
 1e1b972:    33 24             	if (r2 == 0) goto 102 <active_update_task+0x382 : 1e1b9da >			  ## download_loop.c:392:51
 1e1b974:    01 f6 48 d1       	r1 = [r13 + 328]			  ## download_loop.c:544:38
 1e1b978:    80 a5             	r0 = sp + 88			  ## download_loop.c:544:38
 1e1b97a:    82 00             	call r2			  ## download_loop.c:393:15
 1e1b97c:    2e 18             	goto 92 <active_update_task+0x382 : 1e1b9da >			  ## download_loop.c:393:15
 1e1b97e:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e1b984:    2a 18             	goto 84 <active_update_task+0x382 : 1e1b9da >
 1e1b986:    00 fb 00 02       	r0 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:336:20
 1e1b98a:    bf f3 42 8f       	call -57724 <malloc : 1e0d812 >			  ## download_loop.c:336:20
 1e1b98e:    04 08             	r4 = r0			  ## download_loop.c:336:20
 1e1b990:    ef 29             	if (r4 == 0) goto -34 <active_update_task+0x318 : 1e1b970 >
 1e1b992:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:339:13
 1e1b996:    10 20             	if (r0 == 0) goto 32 <active_update_task+0x360 : 1e1b9b8 >			  ## download_loop.c:339:13
 1e1b998:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:339:41
 1e1b99a:    0e 26             	if (r3 == 0) goto 28 <active_update_task+0x360 : 1e1b9b8 >			  ## download_loop.c:339:41
 1e1b99c:    20 40             	r0 = [r0 + 8]			  ## download_loop.c:339:64
 1e1b99e:    0c 20             	if (r0 == 0) goto 24 <active_update_task+0x360 : 1e1b9b8 >			  ## download_loop.c:339:64
 1e1b9a0:    00 70             	r0 = 0			  ## download_loop.c:340:13
 1e1b9a2:    01 70             	r1 = 0			  ## download_loop.c:340:13
 1e1b9a4:    02 70             	r2 = 0			  ## download_loop.c:340:13
 1e1b9a6:    83 00             	call r3			  ## download_loop.c:340:13
 1e1b9a8:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:341:13
 1e1b9ac:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:341:26
 1e1b9ae:    00 70             	r0 = 0			  ## download_loop.c:341:13
 1e1b9b0:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:341:13
 1e1b9b4:    41 08             	r1 = r4			  ## download_loop.c:341:13
 1e1b9b6:    83 00             	call r3			  ## download_loop.c:341:13
 1e1b9b8:    40 fc 22 00       	r0 = r4 + 34			  ## download_loop.c:347:45
 1e1b9bc:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e1b9be:    bf f3 2c 2c       	call -108456 <CRC16 : 1e0121a >			  ## download_loop.c:307:12
 1e1b9c2:    90 48             	r0 = [r4 + 36]			  ## download_loop.c:353:43
 1e1b9c4:    68 03             	[sp+88] = r0			  ## download_loop.c:353:20
 1e1b9c6:    a0 48             	r0 = [r4 + 40]			  ## download_loop.c:354:29
 1e1b9c8:    78 03             	[sp+92] = r0			  ## download_loop.c:354:19
 1e1b9ca:    10 59             	r0 = h[r4 + 34] (u)			  ## download_loop.c:355:29
 1e1b9cc:    90 f5 60 00       	h[sp+96] = r0			  ## download_loop.c:355:19
 1e1b9d0:    f0 48             	r0 = [r4 + 60]			  ## download_loop.c:356:34
 1e1b9d2:    98 03             	[sp+100] = r0			  ## download_loop.c:356:24
 1e1b9d4:    40 08             	r0 = r4			  ## download_loop.c:360:9
 1e1b9d6:    bf f3 21 8f       	call -57790 <free : 1e0d81c >			  ## download_loop.c:360:9
 1e1b9da:    05 f6 00 e0       	r5 = [r14 + 0]			  ## download_loop.c:744:38
 1e1b9de:    02 f6 4c d1       	r2 = [r13 + 332]			  ## flash_fs_api.c:88:12
 1e1b9e2:    84 a7             	r4 = sp + 120			  ## flash_fs_api.c:88:12
 1e1b9e4:    01 72             	r1 = 32			  ## flash_fs_api.c:588:5
 1e1b9e6:    40 08             	r0 = r4			  ## flash_fs_api.c:588:5
 1e1b9e8:    bf f3 33 2c       	call -108442 <norflash_read : 1e01252 >			  ## flash_fs_api.c:588:5
 1e1b9ec:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:44:42
 1e1b9f0:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e1b9f2:    bf f3 12 2c       	call -108508 <CRC16 : 1e0121a >			  ## flash_fs_api.c:44:20
 1e1b9f6:    81 f5 78 00       	r1 = h[sp+120] (u)			  ## flash_fs_api.c:45:15
 1e1b9fa:    01 f2 08 10       	if (r1 != r0) goto 16 <active_update_task+0x3B6 : 1e1ba0e >
 1e1b9fe:    c0 f5 85 00       	r0 = b[sp+133] (u)			  ## flash_fs_api.c:596:42
 1e1ba02:    68 6a             	b[r5 + 6] = r0			  ## flash_fs_api.c:596:29
 1e1ba04:    c1 f5 84 00       	r1 = b[sp+132] (u)			  ## flash_fs_api.c:599:40
 1e1ba08:    79 6a             	b[r5 + 7] = r1			  ## flash_fs_api.c:599:27
 1e1ba0a:    10 f9 27 d0       	b[r13 + 39] = r0			  ## flash_fs_api.c:602:26
 1e1ba0e:    04 f6 00 e0       	r4 = [r14 + 0]			  ## download_loop.c:745:40
 1e1ba12:    00 f6 4c d1       	r0 = [r13 + 332]			  ## flash_fs_api.c:88:12
 1e1ba16:    02 fc 60 00       	r2 = r0 + 96			  ## flash_fs_api.c:613:77
 1e1ba1a:    80 a9             	r0 = sp + 152
 1e1ba1c:    01 72             	r1 = 32			  ## flash_fs_api.c:618:5
 1e1ba1e:    05 72             	r5 = 32			  ## flash_fs_api.c:618:5
 1e1ba20:    bf f3 17 2c       	call -108498 <norflash_read : 1e01252 >			  ## flash_fs_api.c:618:5
 1e1ba24:    00 f5 9c 00       	r0 = [sp+156]			  ## flash_fs_api.c:623:42
 1e1ba28:    28 48             	[r4 + 8] = r0			  ## flash_fs_api.c:623:25
 1e1ba2a:    fc ef 5d 00       	if (r12 == -1) goto 186 <active_update_task+0x490 : 1e1bae8 >			  ## download_loop.c:748:9
 1e1ba2e:    04 70             	r4 = 0
 1e1ba30:    15 70             	r5 = 1
 1e1ba32:    06 70             	r6 = 0
 1e1ba34:    f8 fd 60 05       	r0 = r5 << r6			  ## download_loop.c:1472:32
 1e1ba38:    c0 f0 0a 00       	if ((r0 & r12) == 0) goto 20 <active_update_task+0x3F8 : 1e1ba50 >			  ## download_loop.c:1472:32
 1e1ba3c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1473:17
 1e1ba40:    40 09             	r0 += r4			  ## download_loop.c:1473:44
 1e1ba42:    01 f6 08 02       	r1 = [r0 + 520]			  ## download_loop.c:1473:44
 1e1ba46:    04 22             	if (r1 == 0) goto 8 <active_update_task+0x3F8 : 1e1ba50 >			  ## download_loop.c:1473:44
 1e1ba48:    00 fc f8 01       	r0 = r0 + 504			  ## download_loop.c:1474:26
 1e1ba4c:    81 00             	call r1			  ## download_loop.c:1474:26
 1e1ba4e:    c5 30             	if (r0 != 0) goto 394 <active_update_task+0x582 : 1e1bbda >			  ## download_loop.c:1474:26
 1e1ba50:    16 80             	r6 += 1			  ## download_loop.c:1471:26
 1e1ba52:    84 81             	r4 += 24			  ## download_loop.c:1471:19
 1e1ba54:    06 e2 ee 3f       	if (r6 < 32) goto -36 <active_update_task+0x3DC : 1e1ba34 >			  ## download_loop.c:1471:19
 1e1ba58:    0a 70             	r10 = 0
 1e1ba5a:    09 70             	r9 = 0
 1e1ba5c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1817:41
 1e1ba60:    01 f6 48 d1       	r1 = [r13 + 328]			  ## download_loop.c:1817:5
 1e1ba64:    82 40             	r2 = [r0 + 32]			  ## download_loop.c:1817:70
 1e1ba66:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:1817:18
 1e1ba68:    00 70             	r0 = 0			  ## download_loop.c:1817:5
 1e1ba6a:    01 70             	r1 = 0			  ## download_loop.c:1817:5
 1e1ba6c:    05 70             	r5 = 0			  ## download_loop.c:1817:5
 1e1ba6e:    83 00             	call r3			  ## download_loop.c:1817:5
 1e1ba70:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1818:39
 1e1ba74:    02 f6 48 d1       	r2 = [r13 + 328]			  ## download_loop.c:1818:13
 1e1ba78:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1818:47
 1e1ba7a:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:1818:26
 1e1ba7c:    00 70             	r0 = 0			  ## download_loop.c:1818:13
 1e1ba7e:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1818:13
 1e1ba82:    83 00             	call r3			  ## download_loop.c:1818:13
 1e1ba84:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1820:37
 1e1ba88:    08 f6 00 00       	r8 = [r0 + 0]			  ## download_loop.c:1820:45
 1e1ba8c:    c6 ff ae b4 e1 01 	r6 = 31569070 <update_loader_match_tab+0x2 : 1e1b4ae >
 1e1ba92:    80 02             	r0 = [sp+32]
 1e1ba94:    2d 04             	r13 = r0.l (u)
 1e1ba96:    19 f5 18 00       	[sp+24] = r9			  ## download_loop.c:793:5
 1e1ba9a:    00 f7 fe 6f       	r0 = h[r6 + -2] (u)			  ## download_loop.c:794:48
 1e1ba9e:    d0 f2 05 00       	if (r0 == r13) goto 10 <active_update_task+0x454 : 1e1baac >			  ## download_loop.c:794:48
 1e1baa2:    15 80             	r5 += 1			  ## download_loop.c:793:31
 1e1baa4:    26 81             	r6 += 18			  ## download_loop.c:793:19
 1e1baa6:    85 e0 f8 9f       	if (r5 <= 8) goto -16 <active_update_task+0x442 : 1e1ba9a >			  ## download_loop.c:793:19
 1e1baaa:    06 70             	r6 = 0
 1e1baac:    05 70             	r5 = 0
 1e1baae:    c9 ff f8 31 00 00 	r9 = 12792 <curr_loader_file_head : 31f8 >
 1e1bab4:    04 f7 00 80       	r4 = h[r8 + 0] (u)			  ## download_loop.c:816:33
 1e1bab8:    87 fc 02 00       	r7 = r8 + 2			  ## download_loop.c:307:12
 1e1babc:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e1babe:    70 08             	r0 = r7			  ## download_loop.c:307:12
 1e1bac0:    bf f3 ab 2b       	call -108714 <CRC16 : 1e0121a >			  ## download_loop.c:307:12
 1e1bac4:    04 f2 9d 10       	if (r4 != r0) goto 314 <active_update_task+0x5AA : 1e1bc02 >			  ## download_loop.c:307:12
 1e1bac8:    e0 6e             	r0 = b[r7 + 14] (u)			  ## download_loop.c:816:126
 1e1baca:    9b 20             	if (r0 == 0) goto 310 <active_update_task+0x5AA : 1e1bc02 >			  ## download_loop.c:816:126
 1e1bacc:    0c f9 0a 70       	r12 = b[r7 + 10] (u)			  ## download_loop.c:823:53
 1e1bad0:    e7 80             	r7 += 14			  ## download_loop.c:826:18
 1e1bad2:    02 71             	r2 = 16			  ## download_loop.c:826:18
 1e1bad4:    70 08             	r0 = r7			  ## download_loop.c:826:18
 1e1bad6:    61 08             	r1 = r6			  ## download_loop.c:826:18
 1e1bad8:    97 f3 08 5a       	call 3060752 <memcmp : 106eec >			  ## download_loop.c:826:18
 1e1badc:    8a 20             	if (r0 == 0) goto 276 <active_update_task+0x59A : 1e1bbf2 >			  ## download_loop.c:826:18
 1e1bade:    15 80             	r5 += 1			  ## download_loop.c:815:41
 1e1bae0:    08 9f             	r8 = r7 + 16			  ## download_loop.c:815:5
 1e1bae2:    95 e0 e7 3f       	if (r5 < 9) goto -50 <active_update_task+0x45C : 1e1bab4 >			  ## download_loop.c:815:5
 1e1bae6:    8a 18             	goto 276 <active_update_task+0x5A4 : 1e1bbfc >			  ## download_loop.c:815:5
 1e1bae8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:749:57
 1e1baec:    71 60             	r1 = b[r0 + 7] (u)			  ## download_loop.c:749:95
 1e1baee:    69 02             	[sp+24] = r1			  ## download_loop.c:749:65
 1e1baf0:    61 60             	r1 = b[r0 + 6] (u)			  ## download_loop.c:749:65
 1e1baf2:    59 02             	[sp+20] = r1			  ## download_loop.c:557:18
 1e1baf4:    08 fc 68 00       	r8 = r0 + 104			  ## download_loop.c:557:18
 1e1baf8:    18 f5 68 00       	[sp+104] = r8			  ## download_loop.c:556:45
 1e1bafc:    01 fc b8 00       	r1 = r0 + 184			  ## download_loop.c:558:18
 1e1bb00:    b9 03             	[sp+108] = r1			  ## download_loop.c:556:45
 1e1bb02:    01 fc 08 01       	r1 = r0 + 264			  ## download_loop.c:561:18
 1e1bb06:    c9 03             	[sp+112] = r1			  ## download_loop.c:556:45
 1e1bb08:    01 fc 58 01       	r1 = r0 + 344			  ## download_loop.c:562:18
 1e1bb0c:    d9 03             	[sp+116] = r1			  ## download_loop.c:556:45
 1e1bb0e:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:572:35
 1e1bb10:    01 f9 4e d1       	r1 = b[r13 + 334] (u)			  ## flash_fs_api.c:88:12
 1e1bb14:    49 02             	[sp+16] = r1			  ## download_loop.c:572:46
 1e1bb16:    09 fc 00 02       	r9 = r0 + 512			  ## download_loop.c:572:46
 1e1bb1a:    0d 70             	r13 = 0
 1e1bb1c:    cc ff 51 b5 e1 01 	r12 = 31569233 <JL_APP_CODE0_FILE_NAME : 1e1b551 >
 1e1bb22:    3b 18             	goto 118 <active_update_task+0x542 : 1e1bb9a >
 1e1bb24:    0a 70             	r10 = 0
 1e1bb26:    96 08             	r6 = r9
 1e1bb28:    04 70             	r4 = 0
 1e1bb2a:    03 18             	goto 6 <active_update_task+0x4DA : 1e1bb32 >
 1e1bb2c:    6a 08             	r10 = r6
 1e1bb2e:    06 82             	r6 += 32			  ## download_loop.c:594:9
 1e1bb30:    14 70             	r4 = 1			  ## download_loop.c:594:9
 1e1bb32:    02 72             	r2 = 32			  ## download_loop.c:596:13
 1e1bb34:    03 70             	r3 = 0			  ## download_loop.c:596:13
 1e1bb36:    0d 02             	[sp] = r5			  ## download_loop.c:596:13
 1e1bb38:    f0 08             	r0 = r15			  ## download_loop.c:596:13
 1e1bb3a:    61 08             	r1 = r6			  ## download_loop.c:596:13
 1e1bb3c:    64 15             	call -1336 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:596:13
 1e1bb3e:    60 ff ff 49 f4 ff 	if ((r4 & 255) == 0) goto -24 <active_update_task+0x4D4 : 1e1bb2c >			  ## download_loop.c:596:13
 1e1bb44:    07 9d             	r7 = r6 + 16			  ## download_loop.c:599:29
 1e1bb46:    d2 70             	r2 = 13			  ## download_loop.c:599:29
 1e1bb48:    70 08             	r0 = r7			  ## download_loop.c:599:29
 1e1bb4a:    c1 08             	r1 = r12			  ## download_loop.c:599:29
 1e1bb4c:    97 f3 ce 59       	call 3060636 <memcmp : 106eec >			  ## download_loop.c:599:29
 1e1bb50:    06 20             	if (r0 == 0) goto 12 <active_update_task+0x506 : 1e1bb5e >			  ## download_loop.c:599:29
 1e1bb52:    14 80             	r4 += 1			  ## download_loop.c:594:63
 1e1bb54:    00 05             	r0 = r4.b0 (u)			  ## download_loop.c:594:63
 1e1bb56:    06 9f             	r6 = r7 + 16			  ## download_loop.c:594:9
 1e1bb58:    00 e1 eb 3f       	if (r0 < 16) goto -42 <active_update_task+0x4DA : 1e1bb32 >			  ## download_loop.c:594:9
 1e1bb5c:    06 70             	r6 = 0
 1e1bb5e:    a0 08             	r0 = r10			  ## download_loop.c:606:18
 1e1bb60:    bf f3 a1 2b       	call -108734 <jl_file_head_valid_check : 1e012a6 >			  ## download_loop.c:606:18
 1e1bb64:    30 30             	if (r0 != 0) goto 96 <active_update_task+0x56E : 1e1bbc6 >			  ## download_loop.c:606:18
 1e1bb66:    60 08             	r0 = r6			  ## download_loop.c:612:18
 1e1bb68:    bf f3 9d 2b       	call -108742 <jl_file_head_valid_check : 1e012a6 >			  ## download_loop.c:612:18
 1e1bb6c:    2c 30             	if (r0 != 0) goto 88 <active_update_task+0x56E : 1e1bbc6 >			  ## download_loop.c:612:18
 1e1bb6e:    00 f9 0c a0       	r0 = b[r10 + 12] (u)			  ## download_loop.c:618:56
 1e1bb72:    61 02             	r1 = [sp+24]			  ## download_loop.c:618:13
 1e1bb74:    10 f2 0b 10       	if (r0 != r1) goto 22 <active_update_task+0x536 : 1e1bb8e >			  ## download_loop.c:618:13
 1e1bb78:    00 f9 0d a0       	r0 = b[r10 + 13] (u)			  ## download_loop.c:623:57
 1e1bb7c:    51 02             	r1 = [sp+20]			  ## download_loop.c:623:13
 1e1bb7e:    10 f2 06 10       	if (r0 != r1) goto 12 <active_update_task+0x536 : 1e1bb8e >			  ## download_loop.c:623:13
 1e1bb82:    10 5c             	r0 = h[r6 + 2] (u)			  ## download_loop.c:627:57
 1e1bb84:    10 80             	r0 += 1			  ## download_loop.c:627:76
 1e1bb86:    00 04             	r0 = r0.b0 (u)			  ## download_loop.c:628:37
 1e1bb88:    41 02             	r1 = [sp+16]			  ## download_loop.c:628:13
 1e1bb8a:    01 f2 30 02       	if (r1 == r0) goto 1120 <active_update_task+0x996 : 1e1bfee >			  ## download_loop.c:628:13
 1e1bb8e:    1d 80             	r13 += 1			  ## download_loop.c:580:31
 1e1bb90:    3d e0 19 80       	if (r13 > 3) goto 50 <active_update_task+0x56E : 1e1bbc6 >			  ## download_loop.c:580:31
 1e1bb94:    80 a6             	r0 = sp + 104
 1e1bb96:    a8 f6 00 0d       	r8 = [r0+r13<<2]
 1e1bb9a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >
 1e1bba0:    04 08             	r4 = r0
 1e1bba2:    00 f6 48 41       	r0 = [r4 + 328]			  ## download_loop.c:582:9
 1e1bba6:    02 f6 08 80       	r2 = [r8 + 8]			  ## download_loop.c:582:68
 1e1bbaa:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:582:22
 1e1bbac:    00 70             	r0 = 0			  ## download_loop.c:582:9
 1e1bbae:    01 70             	r1 = 0			  ## download_loop.c:582:9
 1e1bbb0:    83 00             	call r3			  ## download_loop.c:582:9
 1e1bbb2:    00 f6 48 41       	r0 = [r4 + 328]			  ## download_loop.c:583:17
 1e1bbb6:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:583:30
 1e1bbb8:    00 70             	r0 = 0			  ## download_loop.c:583:17
 1e1bbba:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:583:17
 1e1bbbe:    91 08             	r1 = r9			  ## download_loop.c:583:17
 1e1bbc0:    83 00             	call r3			  ## download_loop.c:583:17
 1e1bbc2:    f0 f2 af 1f       	if (r0 != r15) goto -162 <active_update_task+0x4CC : 1e1bb24 >			  ## download_loop.c:583:17
 1e1bbc6:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e1bbcc:    60 78             	r0 = 134			  ## download_loop.c:1763:9
 1e1bbce:    0d 15             	call -1510 <update_stop : 1e1b5ea >			  ## download_loop.c:1763:9
 1e1bbd0:    34 15             	call -1432 <update_resource_release : 1e1b63a >			  ## download_loop.c:1910:5
 1e1bbd2:    f4 07             	r4 = -1			  ## download_loop.c:1910:5
 1e1bbd4:    0c f5 1c 00       	r12 = [sp+28]			  ## download_loop.c:1910:5
 1e1bbd8:    bf 1d             	goto -1154 <active_update_task+0x100 : 1e1b758 >			  ## download_loop.c:1910:5
 1e1bbda:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1477:32
 1e1bbde:    40 09             	r0 += r4			  ## download_loop.c:1477:59
 1e1bbe0:    00 f9 0c 02       	r0 = b[r0 + 524] (u)			  ## download_loop.c:1477:59
 1e1bbe4:    0a 70             	r10 = 0			  ## download_loop.c:1477:59
 1e1bbe6:    09 70             	r9 = 0			  ## download_loop.c:1477:59
 1e1bbe8:    c0 e0 38 1f       	if (r0 != 12) goto -400 <active_update_task+0x404 : 1e1ba5c >			  ## download_loop.c:1477:59
 1e1bbec:    10 70             	r0 = 1			  ## download_loop.c:1806:13
 1e1bbee:    fd 14             	call -1542 <update_stop : 1e1b5ea >			  ## download_loop.c:1806:13
 1e1bbf0:    0d 18             	goto 26 <active_update_task+0x5B4 : 1e1bc0c >			  ## download_loop.c:1806:13
 1e1bbf2:    02 72             	r2 = 32			  ## download_loop.c:828:13
 1e1bbf4:    90 08             	r0 = r9			  ## download_loop.c:828:13
 1e1bbf6:    81 08             	r1 = r8			  ## download_loop.c:828:13
 1e1bbf8:    97 f3 74 59       	call 3060456 <memcpy : 106ee4 >			  ## download_loop.c:828:13
 1e1bbfc:    40 05             	r0 = r5.b0 (u)
 1e1bbfe:    90 e0 08 10       	if (r0 != 9) goto 16 <active_update_task+0x5BA : 1e1bc12 >
 1e1bc02:    60 78             	r0 = 134
 1e1bc04:    f2 14             	call -1564 <update_stop : 1e1b5ea >
 1e1bc06:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e1bc0c:    0c f5 1c 00       	r12 = [sp+28]
 1e1bc10:    a1 1d             	goto -1214 <active_update_task+0xFC : 1e1b754 >
 1e1bc12:    07 f6 08 90       	r7 = [r9 + 8]			  ## download_loop.c:1835:82
 1e1bc16:    00 70             	r0 = 0
 1e1bc18:    10 f5 64 01       	[sp+356] = r0			  ## flash_fs_api.c:389:20
 1e1bc1c:    10 f5 60 01       	[sp+352] = r0			  ## flash_fs_api.c:389:20
 1e1bc20:    10 f5 5c 01       	[sp+348] = r0			  ## flash_fs_api.c:389:20
 1e1bc24:    10 f5 58 01       	[sp+344] = r0			  ## flash_fs_api.c:389:20
 1e1bc28:    c0 ff 02 56 04 40 	r0 = 1074025986 <text_size+0x2890E : 45602 >			  ## flash_fs_api.c:390:5
 1e1bc2e:    e1 fb 58 01       	r1 = sp + 344			  ## flash_fs_api.c:390:5
 1e1bc32:    bf f3 47 2b       	call -108914 <norflash_ioctl : 1e012c4 >			  ## flash_fs_api.c:390:5
 1e1bc36:    06 f5 64 01       	r6 = [sp+356]			  ## flash_fs_api.c:397:62
 1e1bc3a:    04 f5 5c 01       	r4 = [sp+348]			  ## flash_fs_api.c:397:49
 1e1bc3e:    e1 fb b8 01       	r1 = sp + 440
 1e1bc42:    70 76             	r0 = 103			  ## flash_fs_api.c:271:5
 1e1bc44:    bf f3 3e 2b       	call -108932 <norflash_ioctl : 1e012c4 >			  ## flash_fs_api.c:271:5
 1e1bc48:    00 f5 b8 01       	r0 = [sp+440]			  ## flash_fs_api.c:273:12
 1e1bc4c:    38 02             	[sp+12] = r0			  ## flash_fs_api.c:291:29
 1e1bc4e:    a8 08             	r8 = r10
 1e1bc50:    80 08             	r0 = r8			  ## flash_fs_api.c:291:29
 1e1bc52:    bf f3 ce 2b       	call -108644 <__jl_fs_sector_align : 1e013f2 >			  ## flash_fs_api.c:291:29
 1e1bc56:    58 02             	[sp+20] = r0			  ## flash_fs_api.c:291:29
 1e1bc58:    40 08             	r0 = r4			  ## flash_fs_api.c:292:31
 1e1bc5a:    bf f3 ca 2b       	call -108652 <__jl_fs_sector_align : 1e013f2 >			  ## flash_fs_api.c:292:31
 1e1bc5e:    48 02             	[sp+16] = r0			  ## flash_fs_api.c:292:31
 1e1bc60:    70 fc 20 01       	r0 = r7 + 288			  ## flash_fs_api.c:293:33
 1e1bc64:    bf f3 c5 2b       	call -108662 <__jl_fs_sector_align : 1e013f2 >			  ## flash_fs_api.c:293:33
 1e1bc68:    03 08             	r3 = r0			  ## flash_fs_api.c:293:33
 1e1bc6a:    c0 ff 0f 29 e1 01 	r0 = 31533327 <update_target_end+0x26DF : 1e1290f >			  ## flash_fs_api.c:294:5
 1e1bc70:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:294:5
 1e1bc74:    2f 02             	[sp+8] = r7			  ## flash_fs_api.c:294:5
 1e1bc76:    71 08             	r1 = r7			  ## flash_fs_api.c:294:5
 1e1bc78:    3a 08             	r10 = r3			  ## flash_fs_api.c:294:5
 1e1bc7a:    bf f3 94 88       	call -61144 <printf : 1e0cda6 >			  ## flash_fs_api.c:294:5
 1e1bc7e:    09 f5 18 00       	r9 = [sp+24]
 1e1bc82:    83 08             	r3 = r8
 1e1bc84:    80 fb 90 83       	r8 = r3 + r9			  ## flash_fs_api.c:305:45
 1e1bc88:    02 bd             	r2 = r6 + r4			  ## flash_fs_api.c:303:47
 1e1bc8a:    50 02             	r0 = [sp+20]			  ## flash_fs_api.c:291:29
 1e1bc8c:    90 09             	r0 += r9			  ## flash_fs_api.c:291:29
 1e1bc8e:    41 fb 01 fb       	r1 = r15 + 65536			  ## flash_fs_api.c:291:29
 1e1bc92:    10 09             	r0 += r1			  ## flash_fs_api.c:291:29
 1e1bc94:    c7 ff 00 00 fe ff 	r7 = 4294836224 <bank_code_load_addr+0x1C13EC : 1fe0000 >			  ## flash_fs_api.c:291:29
 1e1bc9a:    50 bf             	r0 &= r7			  ## flash_fs_api.c:291:29
 1e1bc9c:    45 02             	r5 = [sp+16]			  ## flash_fs_api.c:292:31
 1e1bc9e:    56 09             	r6 += r5			  ## flash_fs_api.c:292:31
 1e1bca0:    61 09             	r1 += r6			  ## flash_fs_api.c:292:31
 1e1bca2:    51 bf             	r1 &= r7			  ## flash_fs_api.c:292:31
 1e1bca4:    10 f2 01 30       	if (r0 < r1) goto 2 <active_update_task+0x652 : 1e1bcaa >
 1e1bca8:    82 08             	r2 = r8			  ## flash_fs_api.c:301:9
 1e1bcaa:    a7 08             	r7 = r10
 1e1bcac:    e2 b5             	r2 = r2 - r7
 1e1bcae:    36 08             	r6 = r3
 1e1bcb0:    64 f2 01 30       	if (r4 < r6) goto 2 <active_update_task+0x65E : 1e1bcb6 >
 1e1bcb4:    46 08             	r6 = r4			  ## flash_fs_api.c:298:31
 1e1bcb6:    63 fb 02 7b       	r3 = 131072 - r7			  ## flash_fs_api.c:311:53
 1e1bcba:    0a b6             	r10 = r3 + r0			  ## flash_fs_api.c:311:71
 1e1bcbc:    62 f2 01 30       	if (r2 < r6) goto 2 <active_update_task+0x66A : 1e1bcc2 >
 1e1bcc0:    2a 08             	r10 = r2			  ## flash_fs_api.c:309:9
 1e1bcc2:    33 02             	r3 = [sp+12]
 1e1bcc4:    30 f2 01 30       	if (r0 < r3) goto 2 <active_update_task+0x672 : 1e1bcca >
 1e1bcc8:    2a 08             	r10 = r2			  ## flash_fs_api.c:309:9
 1e1bcca:    31 f2 01 30       	if (r1 < r3) goto 2 <active_update_task+0x678 : 1e1bcd0 >
 1e1bcce:    2a 08             	r10 = r2			  ## flash_fs_api.c:309:9
 1e1bcd0:    30 f2 02 90       	if (r0 <= r3) goto 4 <active_update_task+0x680 : 1e1bcd8 >
 1e1bcd4:    10 78             	r0 = 129			  ## download_loop.c:1844:13
 1e1bcd6:    96 1f             	goto -212 <active_update_task+0x5AC : 1e1bc04 >			  ## download_loop.c:1844:13
 1e1bcd8:    6a f2 02 20       	if (r10 >= r6) goto 4 <active_update_task+0x688 : 1e1bce0 >
 1e1bcdc:    20 78             	r0 = 130			  ## download_loop.c:1841:13
 1e1bcde:    92 1f             	goto -220 <active_update_task+0x5AC : 1e1bc04 >			  ## download_loop.c:1841:13
 1e1bce0:    04 f5 5c 01       	r4 = [sp+348]			  ## flash_fs_api.c:452:25
 1e1bce4:    40 08             	r0 = r4			  ## flash_fs_api.c:454:21
 1e1bce6:    bf f3 43 2c       	call -108410 <flash_erase_by_first_unit : 1e01570 >			  ## flash_fs_api.c:454:21
 1e1bcea:    40 09             	r0 += r4			  ## flash_fs_api.c:463:44
 1e1bcec:    a4 08             	r4 = r10			  ## flash_fs_api.c:464:22
 1e1bcee:    04 f2 01 80       	if (r4 > r0) goto 2 <active_update_task+0x69C : 1e1bcf4 >
 1e1bcf2:    04 08             	r4 = r0			  ## flash_fs_api.c:464:22
 1e1bcf4:    40 08             	r0 = r4			  ## flash_fs_api.c:466:21
 1e1bcf6:    bf f3 3b 2c       	call -108426 <flash_erase_by_first_unit : 1e01570 >			  ## flash_fs_api.c:466:21
 1e1bcfa:    80 fb 70 9a       	r9 = r10 + r7			  ## flash_fs_api.c:468:56
 1e1bcfe:    96 fc 00 f0       	r6 = r9 + -4096			  ## flash_fs_api.c:468:74
 1e1bd02:    05 08             	r5 = r0			  ## flash_fs_api.c:466:21
 1e1bd04:    01 fb 00 10       	r1 = 4096 <sys_clock_limit+0x50 : 1000 >			  ## flash_fs_api.c:468:9
 1e1bd08:    60 08             	r0 = r6			  ## flash_fs_api.c:468:9
 1e1bd0a:    bf f3 aa 2b       	call -108716 <flash_erase_by_blcok_n_sector : 1e01462 >			  ## flash_fs_api.c:468:9
 1e1bd0e:    40 b9             	r0 = r4 + r5			  ## flash_fs_api.c:467:42
 1e1bd10:    91 08             	r1 = r9			  ## flash_fs_api.c:470:27
 1e1bd12:    85 02             	r5 = [sp+32]			  ## flash_fs_api.c:470:27
 1e1bd14:    60 f2 01 80       	if (r0 > r6) goto 2 <active_update_task+0x6C2 : 1e1bd1a >
 1e1bd18:    01 08             	r1 = r0			  ## flash_fs_api.c:470:27
 1e1bd1a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1957:5
 1e1bd1e:    39 40             	[r0 + 12] = r1			  ## download_loop.c:1957:29
 1e1bd20:    71 fc 00 f0       	r1 = r7 + -4096			  ## flash_fs_api.c:469:81
 1e1bd24:    1a f6 10 00       	[r0 + 16] = r10			  ## download_loop.c:1958:31
 1e1bd28:    28 ff 10 7a 01 00 	if (r7 > 4096) goto 2 <active_update_task+0x6D8 : 1e1bd30 >			  ## download_loop.c:1958:31
 1e1bd2e:    01 70             	r1 = 0			  ## flash_fs_api.c:469:25
 1e1bd30:    59 40             	[r0 + 20] = r1			  ## download_loop.c:1959:30
 1e1bd32:    9f f5 3a 01       	h[sp+314] = r15			  ## flash_fs_api.c:483:21
 1e1bd36:    1a f5 3c 01       	[sp+316] = r10			  ## flash_fs_api.c:484:21
 1e1bd3a:    20 02             	r0 = [sp+8]			  ## flash_fs_api.c:485:33
 1e1bd3c:    00 82             	r0 += 32			  ## flash_fs_api.c:485:33
 1e1bd3e:    10 f5 40 01       	[sp+320] = r0			  ## flash_fs_api.c:485:20
 1e1bd42:    dc f5 44 01       	b[sp+324] = r12			  ## flash_fs_api.c:486:22
 1e1bd46:    f0 7f             	r0 = 255			  ## flash_fs_api.c:486:22
 1e1bd48:    d0 f5 45 01       	b[sp+325] = r0			  ## flash_fs_api.c:487:16
 1e1bd4c:    9f f5 46 01       	h[sp+326] = r15			  ## flash_fs_api.c:488:19
 1e1bd50:    e4 fb 38 01       	r4 = sp + 312			  ## flash_fs_api.c:488:19
 1e1bd54:    00 99             	r0 = r4 + 16			  ## flash_fs_api.c:490:5
 1e1bd56:    c1 ff 44 29 e1 01 	r1 = 31533380 <update_target_end+0x2714 : 1e12944 >			  ## flash_fs_api.c:490:5
 1e1bd5c:    02 71             	r2 = 16			  ## flash_fs_api.c:490:5
 1e1bd5e:    97 f3 c1 58       	call 3060098 <memcpy : 106ee4 >			  ## flash_fs_api.c:490:5
 1e1bd62:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:483:10
 1e1bd66:    e1 71             	r1 = 30			  ## flash_fs_api.c:491:19
 1e1bd68:    bf f3 57 2a       	call -109394 <CRC16 : 1e0121a >			  ## flash_fs_api.c:491:19
 1e1bd6c:    90 f5 38 01       	h[sp+312] = r0			  ## flash_fs_api.c:491:17
 1e1bd70:    02 72             	r2 = 32			  ## flash_fs_api.c:493:10
 1e1bd72:    40 08             	r0 = r4			  ## flash_fs_api.c:493:10
 1e1bd74:    a1 08             	r1 = r10			  ## flash_fs_api.c:493:10
 1e1bd76:    bf f3 46 2c       	call -108404 <sfc_write : 1e01606 >			  ## flash_fs_api.c:493:10
 1e1bd7a:    01 70             	r1 = 0			  ## flash_fs_api.c:497:5
 1e1bd7c:    02 72             	r2 = 32			  ## flash_fs_api.c:497:5
 1e1bd7e:    40 08             	r0 = r4			  ## flash_fs_api.c:497:5
 1e1bd80:    97 f3 b6 58       	call 3060076 <memset : 106ef0 >			  ## flash_fs_api.c:497:5
 1e1bd84:    02 72             	r2 = 32			  ## flash_fs_api.c:498:5
 1e1bd86:    40 08             	r0 = r4			  ## flash_fs_api.c:498:5
 1e1bd88:    a1 08             	r1 = r10			  ## flash_fs_api.c:498:5
 1e1bd8a:    bf f3 43 2c       	call -108410 <sfc_read : 1e01614 >			  ## flash_fs_api.c:498:5
 1e1bd8e:    98 fc 00 ff       	r8 = r9 + -256			  ## flash_fs_api.c:506:61
 1e1bd92:    c0 ff 4f 29 e1 01 	r0 = 31533391 <update_target_end+0x271F : 1e1294f >			  ## flash_fs_api.c:507:9
 1e1bd98:    81 08             	r1 = r8			  ## flash_fs_api.c:507:9
 1e1bd9a:    72 08             	r2 = r7			  ## flash_fs_api.c:507:9
 1e1bd9c:    bf f3 03 88       	call -61434 <printf : 1e0cda6 >			  ## flash_fs_api.c:507:9
 1e1bda0:    e4 fb 68 01       	r4 = sp + 360			  ## flash_fs_api.c:507:9
 1e1bda4:    f1 7f             	r1 = 255			  ## flash_fs_api.c:511:5
 1e1bda6:    02 75             	r2 = 80			  ## flash_fs_api.c:511:5
 1e1bda8:    40 08             	r0 = r4			  ## flash_fs_api.c:511:5
 1e1bdaa:    97 f3 a1 58       	call 3060034 <memset : 106ef0 >			  ## flash_fs_api.c:511:5
 1e1bdae:    1a f5 b0 01       	[sp+432] = r10			  ## flash_fs_api.c:512:30
 1e1bdb2:    56 08             	r6 = r5			  ## flash_fs_api.c:512:30
 1e1bdb4:    95 f5 6a 01       	h[sp+362] = r5			  ## flash_fs_api.c:513:31
 1e1bdb8:    c0 ff 79 29 e1 01 	r0 = 31533433 <update_target_end+0x2749 : 1e12979 >			  ## flash_fs_api.c:514:5
 1e1bdbe:    a1 08             	r1 = r10			  ## flash_fs_api.c:514:5
 1e1bdc0:    d2 08             	r2 = r13			  ## flash_fs_api.c:514:5
 1e1bdc2:    bf f3 f0 87       	call -61472 <printf : 1e0cda6 >			  ## flash_fs_api.c:514:5
 1e1bdc6:    01 75             	r1 = 80			  ## flash_fs_api.c:515:32
 1e1bdc8:    40 08             	r0 = r4			  ## flash_fs_api.c:515:32
 1e1bdca:    82 08             	r2 = r8			  ## flash_fs_api.c:515:32
 1e1bdcc:    bf f3 e4 2b       	call -108600 <norflash_write : 1e01598 >			  ## flash_fs_api.c:515:32
 1e1bdd0:    00 e5 05 00       	if (r0 == 80) goto 10 <active_update_task+0x786 : 1e1bdde >			  ## flash_fs_api.c:515:32
 1e1bdd4:    c0 ff e0 32 e1 01 	r0 = 31535840 <gpio_out_regs+0x228 : 1e132e0 >			  ## flash_fs_api.c:516:9
 1e1bdda:    bf f3 c5 88       	call -61046 <puts : 1e0cf68 >			  ## flash_fs_api.c:516:9
 1e1bdde:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1853:35
 1e1bde2:    c1 ff f8 31 00 00 	r1 = 12792 <curr_loader_file_head : 31f8 >			  ## download_loop.c:1853:96
 1e1bde8:    15 42             	r5 = [r1 + 4]			  ## download_loop.c:1853:96
 1e1bdea:    01 f9 40 02       	r1 = b[r0 + 576] (u)			  ## download_loop.c:1855:17
 1e1bdee:    09 f6 20 00       	r9 = [r0 + 32]			  ## download_loop.c:1853:64
 1e1bdf2:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1853:64
 1e1bdf8:    10 22             	if (r1 == 0) goto 32 <active_update_task+0x7C2 : 1e1be1a >			  ## download_loop.c:1853:64
 1e1bdfa:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:418:9
 1e1bdfe:    21 70             	r1 = 2			  ## download_loop.c:414:19
 1e1be00:    d1 f5 bd 01       	b[sp+445] = r1			  ## download_loop.c:414:19
 1e1be04:    0a 20             	if (r0 == 0) goto 20 <active_update_task+0x7C2 : 1e1be1a >			  ## download_loop.c:414:19
 1e1be06:    01 fb 05 5a       	r1 = 23045 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xE81 : 5a05 >			  ## download_loop.c:418:73
 1e1be0a:    16 f2 06 10       	if (r6 != r1) goto 12 <active_update_task+0x7C2 : 1e1be1a >			  ## download_loop.c:418:73
 1e1be0e:    52 40             	r2 = [r0 + 20]			  ## download_loop.c:418:37
 1e1be10:    04 24             	if (r2 == 0) goto 8 <active_update_task+0x7C2 : 1e1be1a >			  ## download_loop.c:418:37
 1e1be12:    e0 fb bd 01       	r0 = sp + 445
 1e1be16:    01 70             	r1 = 0			  ## download_loop.c:419:9
 1e1be18:    82 00             	call r2			  ## download_loop.c:419:9
 1e1be1a:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:478:9
 1e1be1e:    c4 ff f8 31 00 00 	r4 = 12792 <curr_loader_file_head : 31f8 >			  ## download_loop.c:478:9
 1e1be24:    26 48             	r6 = [r4 + 8]			  ## download_loop.c:1865:60
 1e1be26:    06 20             	if (r0 == 0) goto 12 <active_update_task+0x7DC : 1e1be34 >
 1e1be28:    52 40             	r2 = [r0 + 20]			  ## download_loop.c:478:37
 1e1be2a:    04 24             	if (r2 == 0) goto 8 <active_update_task+0x7DC : 1e1be34 >			  ## download_loop.c:478:37
 1e1be2c:    00 70             	r0 = 0			  ## download_loop.c:479:9
 1e1be2e:    61 08             	r1 = r6			  ## download_loop.c:479:9
 1e1be30:    82 00             	call r2			  ## download_loop.c:479:9
 1e1be32:    26 48             	r6 = [r4 + 8]			  ## download_loop.c:479:9
 1e1be34:    00 fb 00 02       	r0 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1127:20
 1e1be38:    bf f3 eb 8c       	call -58922 <malloc : 1e0d812 >			  ## download_loop.c:1127:20
 1e1be3c:    0c 08             	r12 = r0			  ## download_loop.c:1127:20
 1e1be3e:    00 e0 c7 0e       	if (r0 == 0) goto -626 <active_update_task+0x578 : 1e1bbd0 >
 1e1be42:    18 f5 14 00       	[sp+20] = r8
 1e1be46:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:1085:5
 1e1be4a:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1085:18
 1e1be4c:    1a f5 18 00       	[sp+24] = r10			  ## download_loop.c:1085:18
 1e1be50:    ad fc 20 00       	r13 = r10 + 32			  ## flash_fs_api.c:502:41
 1e1be54:    80 fb 90 25       	r2 = r5 + r9			  ## download_loop.c:1853:72
 1e1be58:    00 70             	r0 = 0			  ## download_loop.c:1085:5
 1e1be5a:    01 70             	r1 = 0			  ## download_loop.c:1085:5
 1e1be5c:    09 70             	r9 = 0			  ## download_loop.c:1085:5
 1e1be5e:    83 00             	call r3			  ## download_loop.c:1085:5
 1e1be60:    42 2c             	if (r6 == 0) goto 132 <active_update_task+0x88E : 1e1bee6 >
 1e1be62:    0a fb 00 f0       	r10 = -4096 <bank_code_load_addr+0x1E03EC : 1fff000 >
 1e1be66:    d4 08             	r4 = r13
 1e1be68:    67 08             	r7 = r6			  ## download_loop.c:1088:17
 1e1be6a:    03 ff 00 62 02 00 	if (r6 < 512) goto 4 <active_update_task+0x81C : 1e1be74 >			  ## download_loop.c:1088:17
 1e1be70:    07 fb 00 02       	r7 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1088:17
 1e1be74:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1090:15
 1e1be7a:    00 f6 48 01       	r0 = [r0 + 328]			  ## download_loop.c:1090:15
 1e1be7e:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1090:28
 1e1be80:    e2 05             	r2 = r7.l (u)			  ## download_loop.c:1090:15
 1e1be82:    00 70             	r0 = 0			  ## download_loop.c:1090:15
 1e1be84:    c1 08             	r1 = r12			  ## download_loop.c:1090:15
 1e1be86:    83 00             	call r3			  ## download_loop.c:1090:15
 1e1be88:    f0 f2 2d 00       	if (r0 == r15) goto 90 <active_update_task+0x88E : 1e1bee6 >			  ## download_loop.c:1090:15
 1e1be8c:    01 f6 00 e0       	r1 = [r14 + 0]			  ## download_loop.c:947:9
 1e1be90:    30 42             	r0 = [r1 + 12]			  ## download_loop.c:947:17
 1e1be92:    1f 20             	if (r0 == 0) goto 62 <active_update_task+0x87A : 1e1bed2 >			  ## download_loop.c:947:17
 1e1be94:    02 bf             	r2 = r7 + r4			  ## download_loop.c:949:42
 1e1be96:    20 f2 1c 20       	if (r0 >= r2) goto 56 <active_update_task+0x87A : 1e1bed2 >
 1e1be9a:    42 42             	r2 = [r1 + 16]			  ## download_loop.c:948:41
 1e1be9c:    51 42             	r1 = [r1 + 20]			  ## download_loop.c:948:69
 1e1be9e:    12 09             	r2 += r1			  ## download_loop.c:948:59
 1e1bea0:    01 fc ff 0f       	r1 = r0 + 4095			  ## download_loop.c:951:32
 1e1bea4:    e2 fd a0 11       	r1 = r1 & r10			  ## download_loop.c:951:32
 1e1bea8:    73 fc ff 0f       	r3 = r7 + 4095			  ## download_loop.c:955:29
 1e1beac:    23 fd 10 3a       	r3 = r3 & 4096			  ## download_loop.c:955:29
 1e1beb0:    25 b6             	r5 = r3 - r0			  ## download_loop.c:951:75
 1e1beb2:    51 09             	r1 += r5			  ## download_loop.c:961:31
 1e1beb4:    28 b4             	r8 = r2 - r0			  ## download_loop.c:958:51
 1e1beb6:    03 09             	r3 += r0			  ## download_loop.c:957:41
 1e1beb8:    23 f2 01 80       	if (r3 > r2) goto 2 <active_update_task+0x866 : 1e1bebe >			  ## download_loop.c:957:41
 1e1bebc:    18 08             	r8 = r1			  ## download_loop.c:957:17
 1e1bebe:    08 e0 08 00       	if (r8 == 0) goto 16 <active_update_task+0x87A : 1e1bed2 >
 1e1bec2:    81 08             	r1 = r8			  ## download_loop.c:966:17
 1e1bec4:    bf f3 cd 2a       	call -109158 <flash_erase_by_blcok_n_sector : 1e01462 >			  ## download_loop.c:966:17
 1e1bec8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:967:17
 1e1becc:    31 40             	r1 = [r0 + 12]			  ## download_loop.c:967:41
 1e1bece:    81 09             	r1 += r8			  ## download_loop.c:967:41
 1e1bed0:    39 40             	[r0 + 12] = r1			  ## download_loop.c:967:41
 1e1bed2:    c0 08             	r0 = r12			  ## download_loop.c:1109:19
 1e1bed4:    41 08             	r1 = r4			  ## download_loop.c:1109:19
 1e1bed6:    72 08             	r2 = r7			  ## download_loop.c:1109:19
 1e1bed8:    bf f3 95 2b       	call -108758 <sfc_write : 1e01606 >			  ## download_loop.c:1109:19
 1e1bedc:    07 f2 03 10       	if (r7 != r0) goto 6 <active_update_task+0x88E : 1e1bee6 >			  ## download_loop.c:1109:19
 1e1bee0:    e6 bd             	r6 = r6 - r7			  ## download_loop.c:1118:20
 1e1bee2:    74 09             	r4 += r7			  ## download_loop.c:1117:20
 1e1bee4:    c1 3d             	if (r6 != 0) goto -126 <active_update_task+0x810 : 1e1be68 >
 1e1bee6:    c0 08             	r0 = r12			  ## download_loop.c:1154:9
 1e1bee8:    bf f3 98 8c       	call -59088 <free : 1e0d81c >			  ## download_loop.c:1154:9
 1e1beec:    c0 ff f8 31 00 00 	r0 = 12792 <curr_loader_file_head : 31f8 >			  ## download_loop.c:1154:9
 1e1bef2:    0a f7 02 00       	r10 = h[r0 + 2] (u)			  ## download_loop.c:1883:102
 1e1bef6:    27 40             	r7 = [r0 + 8]			  ## download_loop.c:1883:75
 1e1bef8:    00 fb 00 02       	r0 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:878:20
 1e1befc:    bf f3 89 8c       	call -59118 <malloc : 1e0d812 >			  ## download_loop.c:878:20
 1e1bf00:    0c 08             	r12 = r0			  ## download_loop.c:878:20
 1e1bf02:    4f 20             	if (r0 == 0) goto 158 <active_update_task+0x94A : 1e1bfa2 >
 1e1bf04:    4b 2e             	if (r7 == 0) goto 150 <active_update_task+0x944 : 1e1bf9c >
 1e1bf06:    05 70             	r5 = 0
 1e1bf08:    c6 ff 00 35 1e 00 	r6 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >
 1e1bf0e:    c8 ff fe 28 e1 01 	r8 = 31533310 <update_target_end+0x26CE : 1e128fe >
 1e1bf14:    bf f3 8a 2a       	call -109292 <clr_wdt : 1e0142c >			  ## download_loop.c:887:9
 1e1bf18:    74 08             	r4 = r7			  ## download_loop.c:888:17
 1e1bf1a:    03 ff 00 72 02 00 	if (r7 < 512) goto 4 <active_update_task+0x8CC : 1e1bf24 >			  ## download_loop.c:888:17
 1e1bf20:    04 fb 00 02       	r4 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:888:17
 1e1bf24:    c0 08             	r0 = r12			  ## download_loop.c:893:13
 1e1bf26:    d1 08             	r1 = r13			  ## download_loop.c:893:13
 1e1bf28:    42 08             	r2 = r4			  ## download_loop.c:893:13
 1e1bf2a:    bf f3 73 2b       	call -108826 <sfc_read : 1e01614 >			  ## download_loop.c:893:13
 1e1bf2e:    97 f3 35 57       	call 3059306 <local_irq_disable : 106d9c >			  ## download_loop.c:848:5
 1e1bf32:    08 00             	csync			  ## download_loop.c:848:5
 1e1bf34:    e6 fd 00 09       	r0 = r9.l (u)			  ## download_loop.c:849:19
 1e1bf38:    21 05             	r1 = r4.l (u)			  ## download_loop.c:850:5
 1e1bf3a:    18 4c             	[r6 + 4] = r0			  ## download_loop.c:849:17
 1e1bf3c:    09 22             	if (r1 == 0) goto 18 <active_update_task+0x8F8 : 1e1bf50 >			  ## download_loop.c:849:17
 1e1bf3e:    60 fb 00 49       	r0 = 0 - r4			  ## download_loop.c:850:15
 1e1bf42:    c1 08             	r1 = r12			  ## download_loop.c:850:15
 1e1bf44:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## download_loop.c:851:24
 1e1bf48:    10 80             	r0 += 1			  ## download_loop.c:850:5
 1e1bf4a:    23 04             	r3 = r0.l (u)			  ## download_loop.c:850:5
 1e1bf4c:    0a 4c             	[r6 + 0] = r2			  ## download_loop.c:851:22
 1e1bf4e:    fa 37             	if (r3 != 0) goto -12 <active_update_task+0x8EC : 1e1bf44 >
 1e1bf50:    08 00             	csync			  ## download_loop.c:853:5
 1e1bf52:    09 f6 04 60       	r9 = [r6 + 4]			  ## download_loop.c:855:19
 1e1bf56:    45 09             	r5 += r4			  ## download_loop.c:900:17
 1e1bf58:    27 bf             	r7 = r7 - r4			  ## download_loop.c:899:13
 1e1bf5a:    97 f3 1d 57       	call 3059258 <local_irq_enable : 106d98 >			  ## download_loop.c:856:5
 1e1bf5e:    23 ff 08 5b 1a 00 	if (r5 < 524288) goto 52 <active_update_task+0x940 : 1e1bf98 >			  ## download_loop.c:856:5
 1e1bf64:    01 fb 00 01       	r1 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## download_loop.c:865:5
 1e1bf68:    a2 70             	r2 = 10			  ## download_loop.c:865:5
 1e1bf6a:    80 08             	r0 = r8			  ## download_loop.c:865:5
 1e1bf6c:    bf f3 1b 87       	call -61898 <printf : 1e0cda6 >			  ## download_loop.c:865:5
 1e1bf70:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:865:5
 1e1bf76:    0e 08             	r14 = r0			  ## download_loop.c:865:5
 1e1bf78:    00 f6 48 01       	r0 = [r0 + 328]			  ## download_loop.c:866:5
 1e1bf7c:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:866:18
 1e1bf7e:    00 70             	r0 = 0			  ## download_loop.c:866:5
 1e1bf80:    01 70             	r1 = 0			  ## download_loop.c:866:5
 1e1bf82:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## download_loop.c:866:5
 1e1bf86:    83 00             	call r3			  ## download_loop.c:866:5
 1e1bf88:    00 f6 48 e1       	r0 = [r14 + 328]			  ## download_loop.c:867:12
 1e1bf8c:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:867:25
 1e1bf8e:    e1 fb be 01       	r1 = sp + 446			  ## download_loop.c:867:25
 1e1bf92:    00 70             	r0 = 0			  ## download_loop.c:867:12
 1e1bf94:    a2 70             	r2 = 10			  ## download_loop.c:867:12
 1e1bf96:    83 00             	call r3			  ## download_loop.c:867:12
 1e1bf98:    4d 09             	r13 += r4			  ## download_loop.c:898:14
 1e1bf9a:    bc 3f             	if (r7 != 0) goto -136 <active_update_task+0x8BC : 1e1bf14 >
 1e1bf9c:    c0 08             	r0 = r12			  ## download_loop.c:908:9
 1e1bf9e:    bf f3 3d 8c       	call -59270 <free : 1e0d81c >			  ## download_loop.c:908:9
 1e1bfa2:    e6 fd 00 09       	r0 = r9.l (u)			  ## download_loop.c:921:18
 1e1bfa6:    a0 f2 67 10       	if (r0 != r10) goto 206 <active_update_task+0xA20 : 1e1c078 >			  ## download_loop.c:921:18
 1e1bfaa:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e1bfb0:    00 f6 44 d1       	r0 = [r13 + 324]			  ## update_main.c:80:9
 1e1bfb4:    61 02             	r1 = [sp+24]			  ## download_loop.c:1893:32
 1e1bfb6:    b9 02             	[sp+44] = r1			  ## download_loop.c:1893:32
 1e1bfb8:    51 02             	r1 = [sp+20]			  ## download_loop.c:1893:32
 1e1bfba:    c9 02             	[sp+48] = r1			  ## download_loop.c:1893:32
 1e1bfbc:    c1 ff cc c5 e1 01 	r1 = 31573452 <loader_info_record_write : 1e1c5cc >			  ## download_loop.c:1893:32
 1e1bfc2:    d9 02             	[sp+52] = r1			  ## download_loop.c:1893:32
 1e1bfc4:    0c f5 1c 00       	r12 = [sp+28]
 1e1bfc8:    06 20             	if (r0 == 0) goto 12 <active_update_task+0x97E : 1e1bfd6 >
 1e1bfca:    83 41             	r3 = [r0 + 96]			  ## update_main.c:80:27
 1e1bfcc:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x97E : 1e1bfd6 >			  ## update_main.c:80:27
 1e1bfce:    00 85             	r0 += 80			  ## update_main.c:81:43
 1e1bfd0:    c2 a2             	r2 = sp + 44			  ## update_main.c:81:43
 1e1bfd2:    21 70             	r1 = 2			  ## update_main.c:81:9
 1e1bfd4:    83 00             	call r3			  ## update_main.c:81:9
 1e1bfd6:    80 02             	r0 = [sp+32]			  ## download_loop.c:1904:38
 1e1bfd8:    10 b0             	r0 |= 1			  ## download_loop.c:1904:38
 1e1bfda:    01 fb 07 5a       	r1 = 23047 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xE83 : 5a07 >			  ## download_loop.c:1904:38
 1e1bfde:    10 f2 03 10       	if (r0 != r1) goto 6 <active_update_task+0x990 : 1e1bfe8 >			  ## download_loop.c:1904:38
 1e1bfe2:    00 70             	r0 = 0			  ## download_loop.c:1905:13
 1e1bfe4:    bf f3 01 fb       	call -2558 <update_stop : 1e1b5ea >			  ## download_loop.c:1905:13
 1e1bfe8:    04 70             	r4 = 0
 1e1bfea:    ff f3 b4 fb       	goto -2200 <active_update_task+0xFE : 1e1b756 >
 1e1bfee:    04 f6 00 e0       	r4 = [r14 + 0]			  ## download_loop.c:638:23
 1e1bff2:    40 fc a8 01       	r0 = r4 + 424			  ## download_loop.c:638:9
 1e1bff6:    02 75             	r2 = 80			  ## download_loop.c:638:9
 1e1bff8:    81 08             	r1 = r8			  ## download_loop.c:638:9
 1e1bffa:    97 f3 73 57       	call 3059430 <memcpy : 106ee4 >			  ## download_loop.c:638:9
 1e1bffe:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:638:9
 1e1c004:    00 f6 48 d1       	r0 = [r13 + 328]			  ## download_loop.c:1772:9
 1e1c008:    02 f6 b0 41       	r2 = [r4 + 432]			  ## download_loop.c:1772:72
 1e1c00c:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1772:22
 1e1c00e:    00 70             	r0 = 0			  ## download_loop.c:1772:9
 1e1c010:    01 70             	r1 = 0			  ## download_loop.c:1772:9
 1e1c012:    05 70             	r5 = 0			  ## download_loop.c:1772:9
 1e1c014:    83 00             	call r3			  ## download_loop.c:1772:9
 1e1c016:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1773:43
 1e1c01a:    02 f6 48 d1       	r2 = [r13 + 328]			  ## download_loop.c:1773:17
 1e1c01e:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1773:51
 1e1c020:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:1773:30
 1e1c022:    00 70             	r0 = 0			  ## download_loop.c:1773:17
 1e1c024:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1773:17
 1e1c028:    83 00             	call r3			  ## download_loop.c:1773:17
 1e1c02a:    f0 f2 ef 0d       	if (r0 == r15) goto -1058 <active_update_task+0x5B4 : 1e1bc0c >			  ## download_loop.c:1773:17
 1e1c02e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1781:42
 1e1c032:    04 40             	r4 = [r0 + 0]			  ## download_loop.c:1781:50
 1e1c034:    ca ff 00 08 00 00 	r10 = 2048 <report_mmu_tlb_size : 800 >			  ## download_loop.c:1781:50
 1e1c03a:    08 f7 1c a0       	r8 = h[r10 + 28] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e1c03e:    80 ad             	r0 = sp + 216			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e1c040:    06 91             	r6 = r0 + 16
 1e1c042:    0d 72             	r13 = 32
 1e1c044:    f9 08             	r9 = r15
 1e1c046:    41 b9             	r1 = r4 + r5			  ## download_loop.c:1358:9
 1e1c048:    87 ad             	r7 = sp + 216			  ## download_loop.c:1358:9
 1e1c04a:    02 72             	r2 = 32			  ## download_loop.c:1358:9
 1e1c04c:    70 08             	r0 = r7			  ## download_loop.c:1358:9
 1e1c04e:    97 f3 49 57       	call 3059346 <memcpy : 106ee4 >			  ## download_loop.c:1358:9
 1e1c052:    02 72             	r2 = 32			  ## download_loop.c:1359:9
 1e1c054:    03 70             	r3 = 0			  ## download_loop.c:1359:9
 1e1c056:    1d f5 00 00       	[sp] = r13			  ## download_loop.c:1359:9
 1e1c05a:    90 08             	r0 = r9			  ## download_loop.c:1359:9
 1e1c05c:    71 08             	r1 = r7			  ## download_loop.c:1359:9
 1e1c05e:    bf f3 d2 fa       	call -2652 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:1359:9
 1e1c062:    d2 70             	r2 = 13			  ## download_loop.c:1360:18
 1e1c064:    60 08             	r0 = r6			  ## download_loop.c:1360:18
 1e1c066:    c1 08             	r1 = r12			  ## download_loop.c:1360:18
 1e1c068:    97 f3 40 57       	call 3059328 <memcmp : 106eec >			  ## download_loop.c:1360:18
 1e1c06c:    07 20             	if (r0 == 0) goto 14 <active_update_task+0xA24 : 1e1c07c >			  ## download_loop.c:1360:18
 1e1c06e:    05 82             	r5 += 32			  ## download_loop.c:1357:48
 1e1c070:    09 ff ff 51 e8 ff 	if (r5 <= 511) goto -48 <active_update_task+0x9EE : 1e1c046 >
 1e1c076:    56 18             	goto 172 <active_update_task+0xACC : 1e1c124 >
 1e1c078:    30 78             	r0 = 131			  ## download_loop.c:1885:9
 1e1c07a:    c4 1d             	goto -1144 <active_update_task+0x5AC : 1e1bc04 >			  ## download_loop.c:1885:9
 1e1c07c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1374:28
 1e1c080:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1374:28
 1e1c086:    17 08             	r7 = r1			  ## download_loop.c:1374:28
 1e1c088:    01 f6 48 71       	r1 = [r7 + 328]			  ## download_loop.c:1375:5
 1e1c08c:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1375:101
 1e1c090:    03 f5 dc 00       	r3 = [sp+220]			  ## download_loop.c:1361:13
 1e1c094:    04 40             	r4 = [r0 + 0]			  ## download_loop.c:1374:36
 1e1c096:    35 42             	r5 = [r1 + 12]			  ## download_loop.c:1375:18
 1e1c098:    32 09             	r2 += r3			  ## download_loop.c:1375:72
 1e1c09a:    00 70             	r0 = 0			  ## download_loop.c:1375:5
 1e1c09c:    01 70             	r1 = 0			  ## download_loop.c:1375:5
 1e1c09e:    06 70             	r6 = 0			  ## download_loop.c:1375:5
 1e1c0a0:    85 00             	call r5			  ## download_loop.c:1375:5
 1e1c0a2:    00 f6 48 71       	r0 = [r7 + 328]			  ## download_loop.c:1376:5
 1e1c0a6:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1376:18
 1e1c0a8:    49 fc 00 02       	r9 = r4 + 512			  ## download_loop.c:1374:47
 1e1c0ac:    00 70             	r0 = 0			  ## download_loop.c:1376:5
 1e1c0ae:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1376:5
 1e1c0b2:    91 08             	r1 = r9			  ## download_loop.c:1376:5
 1e1c0b4:    83 00             	call r3			  ## download_loop.c:1376:5
 1e1c0b6:    84 ab             	r4 = sp + 184			  ## download_loop.c:1376:5
 1e1c0b8:    02 72             	r2 = 32			  ## download_loop.c:1378:5
 1e1c0ba:    05 72             	r5 = 32			  ## download_loop.c:1378:5
 1e1c0bc:    40 08             	r0 = r4			  ## download_loop.c:1378:5
 1e1c0be:    91 08             	r1 = r9			  ## download_loop.c:1378:5
 1e1c0c0:    97 f3 10 57       	call 3059232 <memcpy : 106ee4 >			  ## download_loop.c:1378:5
 1e1c0c4:    02 72             	r2 = 32			  ## download_loop.c:1379:5
 1e1c0c6:    03 70             	r3 = 0			  ## download_loop.c:1379:5
 1e1c0c8:    0d 02             	[sp] = r5			  ## download_loop.c:1379:5
 1e1c0ca:    80 08             	r0 = r8			  ## download_loop.c:1379:5
 1e1c0cc:    41 08             	r1 = r4			  ## download_loop.c:1379:5
 1e1c0ce:    bf f3 9a fa       	call -2764 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:1379:5
 1e1c0d2:    00 fd 02 49       	r0 = r4 | 2			  ## download_loop.c:1381:58
 1e1c0d6:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e1c0d8:    bf f3 9f 28       	call -110274 <CRC16 : 1e0121a >			  ## download_loop.c:307:12
 1e1c0dc:    81 f5 b8 00       	r1 = h[sp+184] (u)			  ## download_loop.c:1382:31
 1e1c0e0:    01 f2 20 10       	if (r1 != r0) goto 64 <active_update_task+0xACC : 1e1c124 >
 1e1c0e4:    0c f7 1c a0       	r12 = h[r10 + 28] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e1c0e8:    80 af             	r0 = sp + 248			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e1c0ea:    07 91             	r7 = r0 + 16
 1e1c0ec:    c8 ff 4e b5 e1 01 	r8 = 31569230 <JL_RESERVED_VM_FILE_NAME : 1e1b54e >
 1e1c0f2:    80 fb 60 19       	r1 = r9 + r6			  ## download_loop.c:1323:9
 1e1c0f6:    84 af             	r4 = sp + 248			  ## download_loop.c:1323:9
 1e1c0f8:    02 72             	r2 = 32			  ## download_loop.c:1323:9
 1e1c0fa:    40 08             	r0 = r4			  ## download_loop.c:1323:9
 1e1c0fc:    97 f3 f2 56       	call 3059172 <memcpy : 106ee4 >			  ## download_loop.c:1323:9
 1e1c100:    02 72             	r2 = 32			  ## download_loop.c:1324:9
 1e1c102:    0d 02             	[sp] = r5			  ## download_loop.c:1324:9
 1e1c104:    c0 08             	r0 = r12			  ## download_loop.c:1324:9
 1e1c106:    41 08             	r1 = r4			  ## download_loop.c:1324:9
 1e1c108:    63 08             	r3 = r6			  ## download_loop.c:1324:9
 1e1c10a:    bf f3 7c fa       	call -2824 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:1324:9
 1e1c10e:    32 70             	r2 = 3			  ## download_loop.c:1326:18
 1e1c110:    70 08             	r0 = r7			  ## download_loop.c:1326:18
 1e1c112:    81 08             	r1 = r8			  ## download_loop.c:1326:18
 1e1c114:    97 f3 ea 56       	call 3059156 <memcmp : 106eec >			  ## download_loop.c:1326:18
 1e1c118:    07 20             	if (r0 == 0) goto 14 <active_update_task+0xAD0 : 1e1c128 >			  ## download_loop.c:1326:13
 1e1c11a:    06 82             	r6 += 32			  ## download_loop.c:1322:48
 1e1c11c:    03 ff 00 62 e8 ff 	if (r6 < 512) goto -48 <active_update_task+0xA9A : 1e1c0f2 >
 1e1c122:    6f 1d             	goto -1314 <active_update_task+0x5AA : 1e1bc02 >
 1e1c124:    10 70             	r0 = 1			  ## download_loop.c:1783:13
 1e1c126:    6e 1d             	goto -1316 <active_update_task+0x5AC : 1e1bc04 >			  ## download_loop.c:1783:13
 1e1c128:    e0 08             	r0 = r14			  ## download_loop.c:1250:63
 1e1c12a:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1250:63
 1e1c12c:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1250:71
 1e1c12e:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1256:34
 1e1c132:    14 fc 00 02       	r4 = r1 + 512			  ## download_loop.c:1256:34
 1e1c136:    5d 24             	if (r2 == 0) goto 186 <active_update_task+0xB9A : 1e1c1f2 >			  ## download_loop.c:1256:34
 1e1c138:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1256:71
 1e1c13c:    5a 20             	if (r0 == 0) goto 180 <active_update_task+0xB9A : 1e1c1f2 >			  ## download_loop.c:1256:71
 1e1c13e:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >
 1e1c144:    07 08             	r7 = r0
 1e1c146:    00 f6 48 71       	r0 = [r7 + 328]			  ## download_loop.c:1261:5
 1e1c14a:    09 f5 00 01       	r9 = [sp+256]			  ## download_loop.c:1329:31
 1e1c14e:    0a f5 fc 00       	r10 = [sp+252]			  ## download_loop.c:1328:35
 1e1c152:    06 f6 4c 71       	r6 = [r7 + 332]			  ## flash_fs_api.c:88:12
 1e1c156:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1261:18
 1e1c158:    00 70             	r0 = 0			  ## download_loop.c:1261:5
 1e1c15a:    01 70             	r1 = 0			  ## download_loop.c:1261:5
 1e1c15c:    05 70             	r5 = 0			  ## download_loop.c:1261:5
 1e1c15e:    83 00             	call r3			  ## download_loop.c:1261:5
 1e1c160:    00 f6 48 71       	r0 = [r7 + 328]			  ## download_loop.c:1262:5
 1e1c164:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1262:18
 1e1c166:    00 70             	r0 = 0			  ## download_loop.c:1262:5
 1e1c168:    02 72             	r2 = 32			  ## download_loop.c:1262:5
 1e1c16a:    08 72             	r8 = 32			  ## download_loop.c:1262:5
 1e1c16c:    41 08             	r1 = r4			  ## download_loop.c:1262:5
 1e1c16e:    83 00             	call r3			  ## download_loop.c:1262:5
 1e1c170:    e7 fb 18 01       	r7 = sp + 280			  ## download_loop.c:1262:5
 1e1c174:    01 72             	r1 = 32			  ## download_loop.c:1265:5
 1e1c176:    70 08             	r0 = r7			  ## download_loop.c:1265:5
 1e1c178:    62 08             	r2 = r6			  ## download_loop.c:1265:5
 1e1c17a:    bf f3 6a 28       	call -110380 <norflash_read : 1e01252 >			  ## download_loop.c:1265:5
 1e1c17e:    f0 08             	r0 = r15			  ## download_loop.c:1266:5
 1e1c180:    02 72             	r2 = 32			  ## download_loop.c:1266:5
 1e1c182:    03 70             	r3 = 0			  ## download_loop.c:1266:5
 1e1c184:    18 f5 00 00       	[sp] = r8			  ## download_loop.c:1266:5
 1e1c188:    71 08             	r1 = r7			  ## download_loop.c:1266:5
 1e1c18a:    bf f3 3c fa       	call -2952 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:1266:5
 1e1c18e:    40 98             	r0 = r4 + 4			  ## download_loop.c:1268:54
 1e1c190:    41 70             	r1 = 4
 1e1c192:    02 fa 00 05       	r2 = b[r0+r5] (u)			  ## download_loop.c:1220:13
 1e1c196:    01 ff ff 20 07 00 	if (r2 != 255) goto 14 <active_update_task+0xB52 : 1e1c1aa >			  ## download_loop.c:1220:13
 1e1c19c:    15 80             	r5 += 1			  ## download_loop.c:1219:27
 1e1c19e:    f1 8f             	r1 += -1			  ## download_loop.c:1219:19
 1e1c1a0:    45 e0 f7 3f       	if (r5 < 4) goto -18 <active_update_task+0xB3A : 1e1c192 >			  ## download_loop.c:1219:19
 1e1c1a4:    60 ff ff 19 0e 00 	if ((r1 & 255) == 0) goto 28 <active_update_task+0xB6E : 1e1c1c6 >
 1e1c1aa:    31 60             	r1 = b[r0 + 3] (u)			  ## download_loop.c:1275:13
 1e1c1ac:    22 60             	r2 = b[r0 + 2] (u)			  ## download_loop.c:1275:13
 1e1c1ae:    10 60             	r0 = b[r0 + 1] (u)			  ## download_loop.c:1275:13
 1e1c1b0:    43 68             	r3 = b[r4 + 4] (u)			  ## download_loop.c:1275:13
 1e1c1b2:    05 f5 1c 01       	r5 = [sp+284]			  ## download_loop.c:1275:13
 1e1c1b6:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## download_loop.c:1275:13
 1e1c1ba:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## download_loop.c:1275:13
 1e1c1be:    d0 fd 80 32       	r3 <= insert(r2, p:16, l:16)			  ## download_loop.c:1275:13
 1e1c1c2:    35 f2 16 10       	if (r5 != r3) goto 44 <active_update_task+0xB9A : 1e1c1f2 >			  ## download_loop.c:1275:13
 1e1c1c6:    01 99             	r1 = r4 + 16			  ## download_loop.c:1283:54
 1e1c1c8:    02 70             	r2 = 0
 1e1c1ca:    00 71             	r0 = 16
 1e1c1cc:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## download_loop.c:1220:13
 1e1c1d0:    01 ff ff 30 07 00 	if (r3 != 255) goto 14 <active_update_task+0xB8C : 1e1c1e4 >			  ## download_loop.c:1220:13
 1e1c1d6:    12 80             	r2 += 1			  ## download_loop.c:1219:27
 1e1c1d8:    f0 8f             	r0 += -1			  ## download_loop.c:1219:19
 1e1c1da:    02 e1 f7 3f       	if (r2 < 16) goto -18 <active_update_task+0xB74 : 1e1c1cc >			  ## download_loop.c:1219:19
 1e1c1de:    60 ff ff 09 09 00 	if ((r0 & 255) == 0) goto 18 <active_update_task+0xB9E : 1e1c1f6 >
 1e1c1e4:    e0 fb 18 01       	r0 = sp + 280
 1e1c1e8:    00 81             	r0 += 16			  ## download_loop.c:1286:9
 1e1c1ea:    02 71             	r2 = 16			  ## download_loop.c:1289:13
 1e1c1ec:    97 f3 7e 56       	call 3058940 <memcmp : 106eec >			  ## download_loop.c:1289:13
 1e1c1f0:    02 20             	if (r0 == 0) goto 4 <active_update_task+0xB9E : 1e1c1f6 >
 1e1c1f2:    a0 78             	r0 = 138			  ## download_loop.c:1799:13
 1e1c1f4:    07 1d             	goto -1522 <active_update_task+0x5AC : 1e1bc04 >			  ## download_loop.c:1799:13
 1e1c1f6:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e1c1fc:    2f 1c             	goto -1954 <active_update_task+0x404 : 1e1ba5c >


app_active_update_task_init:
 1e1c1fe:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:311:0
 1e1c200:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## update_main.c:312:9
 1e1c206:    04 f6 44 11       	r4 = [r1 + 324]			  ## update_main.c:312:9
 1e1c20a:    02 f9 64 40       	r2 = b[r4 + 100] (u)			  ## update_main.c:312:17
 1e1c20e:    01 08             	r1 = r0			  ## update_main.c:312:17
 1e1c210:    01 24             	if (r2 == 0) goto 2 <app_active_update_task_init+0x16 : 1e1c214 >			  ## update_main.c:312:17
 1e1c212:    54 01             	{pc, r4} = [sp++]
 1e1c214:    40 fc 50 00       	r0 = r4 + 80			  ## update_main.c:317:27
 1e1c218:    02 71             	r2 = 16			  ## update_main.c:317:5
 1e1c21a:    97 f3 63 56       	call 3058886 <memcpy : 106ee4 >			  ## update_main.c:317:5
 1e1c21e:    00 f9 5c 40       	r0 = b[r4 + 92] (u)			  ## update_main.c:146:22
 1e1c222:    0e 20             	if (r0 == 0) goto 28 <app_active_update_task_init+0x42 : 1e1c240 >			  ## update_main.c:146:9
 1e1c224:    01 70             	r1 = 0			  ## update_main.c:147:9
 1e1c226:    40 08             	r0 = r4			  ## update_main.c:147:9
 1e1c228:    97 f3 ea 55       	call 3058644 <os_sem_create : 106e00 >			  ## update_main.c:147:9
 1e1c22c:    c0 ff 58 b6 e1 01 	r0 = 31569496 <active_update_task : 1e1b658 >			  ## update_main.c:149:9
 1e1c232:    c2 ff 92 0f e1 01 	r2 = 31526802 <update_target_end+0xD62 : 1e10f92 >			  ## update_main.c:149:9
 1e1c238:    41 08             	r1 = r4			  ## update_main.c:149:9
 1e1c23a:    14 01             	{rets, r4} = [sp++]			  ## update_main.c:149:9
 1e1c23c:    ff f3 85 94       	goto -55030 <task_create : 1e0eb4a >			  ## update_main.c:149:9
 1e1c240:    40 08             	r0 = r4			  ## update_main.c:151:9
 1e1c242:    bf f3 09 fa       	call -3054 <active_update_task : 1e1b658 >			  ## update_main.c:151:9
 1e1c246:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:151:9


update_module_init:
 1e1c248:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:324:0
 1e1c24a:    80 76             	r0 = 104			  ## update_main.c:325:14
 1e1c24c:    bf f3 e1 8a       	call -59966 <malloc : 1e0d812 >			  ## update_main.c:325:14
 1e1c250:    04 08             	r4 = r0			  ## update_main.c:325:14
 1e1c252:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update_main.c:325:12
 1e1c258:    14 f6 44 01       	[r0 + 324] = r4			  ## update_main.c:325:12
 1e1c25c:    09 28             	if (r4 == 0) goto 18 <update_module_init+0x28 : 1e1c270 >			  ## update_main.c:325:12
 1e1c25e:    01 70             	r1 = 0			  ## update_main.c:327:9
 1e1c260:    82 76             	r2 = 104			  ## update_main.c:327:9
 1e1c262:    40 08             	r0 = r4			  ## update_main.c:327:9
 1e1c264:    97 f3 44 56       	call 3058824 <memset : 106ef0 >			  ## update_main.c:327:9
 1e1c268:    c0 ff c8 19 e0 01 	r0 = 31463880 <update_common_state_cbk : 1e019c8 >			  ## update_main.c:328:34
 1e1c26e:    88 49             	[r4 + 96] = r0			  ## update_main.c:328:34
 1e1c270:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:333:1


bt_f_seek:
 1e1c272:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:57:0
 1e1c278:    07 22             	if (r1 == 0) goto 14 <bt_f_seek+0x16 : 1e1c288 >			  ## lmp_ch_update.c:57:0
 1e1c27a:    11 e0 0a 10       	if (r1 != 1) goto 20 <bt_f_seek+0x20 : 1e1c292 >			  ## lmp_ch_update.c:57:0
 1e1c27e:    01 f6 14 01       	r1 = [r0 + 276]			  ## lmp_ch_update.c:62:24
 1e1c282:    12 09             	r2 += r1			  ## lmp_ch_update.c:62:24
 1e1c284:    21 70             	r1 = 2
 1e1c286:    01 18             	goto 2 <bt_f_seek+0x18 : 1e1c28a >
 1e1c288:    11 70             	r1 = 1
 1e1c28a:    12 f6 14 01       	[r0 + 276] = r2
 1e1c28e:    11 f9 24 00       	b[r0 + 36] = r1
 1e1c292:    00 70             	r0 = 0			  ## lmp_ch_update.c:67:5
 1e1c294:    20 00             	rts			  ## lmp_ch_update.c:67:5


bt_f_read:
 1e1c296:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:71:0
 1e1c298:    24 08             	r4 = r2			  ## lmp_ch_update.c:71:0
 1e1c29a:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:71:0
 1e1c2a0:    00 70             	r0 = 0			  ## lmp_ch_update.c:71:0
 1e1c2a2:    10 f7 48 50       	h[r5 + 72] = r0			  ## lmp_ch_update.c:72:19
 1e1c2a6:    11 f6 18 51       	[r5 + 280] = r1			  ## lmp_ch_update.c:73:17
 1e1c2aa:    bf f3 c8 f4       	call -5744 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:74:5
 1e1c2ae:    03 f6 14 51       	r3 = [r5 + 276]			  ## lmp_ch_update.c:77:63
 1e1c2b2:    02 f9 24 50       	r2 = b[r5 + 36] (u)			  ## lmp_ch_update.c:77:5
 1e1c2b6:    40 70             	r0 = 4			  ## lmp_ch_update.c:77:5
 1e1c2b8:    41 08             	r1 = r4			  ## lmp_ch_update.c:77:5
 1e1c2ba:    bf f3 c7 f4       	call -5746 <bt_updata_control : 1e1ac4c >			  ## lmp_ch_update.c:77:5
 1e1c2be:    bf f3 d9 f4       	call -5710 <bt_updata_get_flag : 1e1ac74 >
 1e1c2c2:    21 f3 0c 00       	if ((r0 & 2) != 0) goto 24 <bt_f_read+0x48 : 1e1c2de >
 1e1c2c6:    01 f6 1c 51       	r1 = [r5 + 284]			  ## lmp_ch_update.c:79:13
 1e1c2ca:    f9 23             	if (r1 == 0) goto -14 <bt_f_read+0x28 : 1e1c2be >			  ## lmp_ch_update.c:79:13
 1e1c2cc:    00 70             	r0 = 0			  ## lmp_ch_update.c:80:13
 1e1c2ce:    81 00             	call r1			  ## lmp_ch_update.c:80:13
 1e1c2d0:    bf f3 d0 f4       	call -5728 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:81:46
 1e1c2d4:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_read+0x28 : 1e1c2be >			  ## lmp_ch_update.c:81:46
 1e1c2d8:    bf f3 b1 f4       	call -5790 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:82:17
 1e1c2dc:    0b 18             	goto 22 <bt_f_read+0x5E : 1e1c2f4 >			  ## lmp_ch_update.c:82:17
 1e1c2de:    bf f3 ae f4       	call -5796 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:88:5
 1e1c2e2:    00 f7 48 50       	r0 = h[r5 + 72] (u)			  ## lmp_ch_update.c:89:9
 1e1c2e6:    06 20             	if (r0 == 0) goto 12 <bt_f_read+0x5E : 1e1c2f4 >			  ## lmp_ch_update.c:89:9
 1e1c2e8:    00 f6 14 51       	r0 = [r5 + 276]			  ## lmp_ch_update.c:92:20
 1e1c2ec:    40 09             	r0 += r4			  ## lmp_ch_update.c:92:20
 1e1c2ee:    10 f6 14 51       	[r5 + 276] = r0			  ## lmp_ch_update.c:92:20
 1e1c2f2:    03 18             	goto 6 <bt_f_read+0x64 : 1e1c2fa >			  ## lmp_ch_update.c:92:20
 1e1c2f4:    c4 ff ff ff 00 00 	r4 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1c2fa:    40 08             	r0 = r4			  ## lmp_ch_update.c:95:1
 1e1c2fc:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:95:1


bt_f_open:
 1e1c2fe:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:100:0
 1e1c300:    bf f3 9d f4       	call -5830 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:105:5
 1e1c304:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:105:5
 1e1c30a:    00 70             	r0 = 0			  ## lmp_ch_update.c:105:5
 1e1c30c:    10 f6 14 51       	[r5 + 276] = r0			  ## lmp_ch_update.c:107:20
 1e1c310:    14 70             	r4 = 1			  ## lmp_ch_update.c:107:20
 1e1c312:    14 f9 24 50       	b[r5 + 36] = r4			  ## lmp_ch_update.c:108:18
 1e1c316:    10 70             	r0 = 1			  ## lmp_ch_update.c:109:5
 1e1c318:    01 70             	r1 = 0			  ## lmp_ch_update.c:109:5
 1e1c31a:    02 70             	r2 = 0			  ## lmp_ch_update.c:109:5
 1e1c31c:    03 70             	r3 = 0			  ## lmp_ch_update.c:109:5
 1e1c31e:    bf f3 95 f4       	call -5846 <bt_updata_control : 1e1ac4c >			  ## lmp_ch_update.c:109:5
 1e1c322:    bf f3 a7 f4       	call -5810 <bt_updata_get_flag : 1e1ac74 >
 1e1c326:    21 f3 0d 00       	if ((r0 & 2) != 0) goto 26 <bt_f_open+0x46 : 1e1c344 >
 1e1c32a:    01 f6 1c 51       	r1 = [r5 + 284]			  ## lmp_ch_update.c:124:13
 1e1c32e:    f9 23             	if (r1 == 0) goto -14 <bt_f_open+0x24 : 1e1c322 >			  ## lmp_ch_update.c:124:13
 1e1c330:    00 70             	r0 = 0			  ## lmp_ch_update.c:125:13
 1e1c332:    81 00             	call r1			  ## lmp_ch_update.c:125:13
 1e1c334:    bf f3 9e f4       	call -5828 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:126:46
 1e1c338:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_open+0x24 : 1e1c322 >			  ## lmp_ch_update.c:126:46
 1e1c33c:    bf f3 7f f4       	call -5890 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:127:17
 1e1c340:    04 70             	r4 = 0			  ## lmp_ch_update.c:127:17
 1e1c342:    02 18             	goto 4 <bt_f_open+0x4A : 1e1c348 >			  ## lmp_ch_update.c:127:17
 1e1c344:    bf f3 7b f4       	call -5898 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:133:5
 1e1c348:    40 08             	r0 = r4			  ## lmp_ch_update.c:135:1
 1e1c34a:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:135:1


bt_f_send_update_len:
 1e1c34c:    74 01             	[--sp] = {rets, r4}			  ## lmp_ch_update.c:138:0
 1e1c34e:    13 08             	r3 = r1			  ## lmp_ch_update.c:138:0
 1e1c350:    02 08             	r2 = r0			  ## lmp_ch_update.c:138:0
 1e1c352:    bf f3 74 f4       	call -5912 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:145:5
 1e1c356:    27 24             	if (r2 == 0) goto 78 <bt_f_send_update_len+0x5A : 1e1c3a6 >			  ## lmp_ch_update.c:145:5
 1e1c358:    00 64             	r0 = b[r2 + 0] (u)			  ## lmp_ch_update.c:150:31
 1e1c35a:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_f_send_update_len+0x1C : 1e1c368 >			  ## lmp_ch_update.c:150:13
 1e1c35e:    09 30             	if (r0 != 0) goto 18 <bt_f_send_update_len+0x26 : 1e1c372 >
 1e1c360:    20 70             	r0 = 2			  ## lmp_ch_update.c:151:13
 1e1c362:    01 70             	r1 = 0			  ## lmp_ch_update.c:151:13
 1e1c364:    02 71             	r2 = 16			  ## lmp_ch_update.c:151:13
 1e1c366:    03 18             	goto 6 <bt_f_send_update_len+0x22 : 1e1c36e >
 1e1c368:    20 70             	r0 = 2			  ## lmp_ch_update.c:153:13
 1e1c36a:    01 70             	r1 = 0			  ## lmp_ch_update.c:153:13
 1e1c36c:    12 71             	r2 = 17			  ## lmp_ch_update.c:153:13
 1e1c36e:    bf f3 6d f4       	call -5926 <bt_updata_control : 1e1ac4c >
 1e1c372:    bf f3 7f f4       	call -5890 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:160:41
 1e1c376:    21 f3 10 00       	if ((r0 & 2) != 0) goto 32 <bt_f_send_update_len+0x4E : 1e1c39a >			  ## lmp_ch_update.c:160:41
 1e1c37a:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e1c380:    01 f6 1c 41       	r1 = [r4 + 284]			  ## lmp_ch_update.c:161:13
 1e1c384:    06 22             	if (r1 == 0) goto 12 <bt_f_send_update_len+0x46 : 1e1c392 >			  ## lmp_ch_update.c:161:13
 1e1c386:    00 70             	r0 = 0			  ## lmp_ch_update.c:162:13
 1e1c388:    81 00             	call r1			  ## lmp_ch_update.c:162:13
 1e1c38a:    bf f3 73 f4       	call -5914 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:163:46
 1e1c38e:    01 f3 08 00       	if ((r0 & 2) == 0) goto 16 <bt_f_send_update_len+0x56 : 1e1c3a2 >			  ## lmp_ch_update.c:163:46
 1e1c392:    bf f3 6f f4       	call -5922 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:160:41
 1e1c396:    01 f3 f3 0f       	if ((r0 & 2) == 0) goto -26 <bt_f_send_update_len+0x34 : 1e1c380 >			  ## lmp_ch_update.c:160:41
 1e1c39a:    bf f3 50 f4       	call -5984 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:169:5
 1e1c39e:    10 70             	r0 = 1			  ## lmp_ch_update.c:169:5
 1e1c3a0:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1
 1e1c3a2:    bf f3 4c f4       	call -5992 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:164:17
 1e1c3a6:    00 70             	r0 = 0
 1e1c3a8:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1


bt_f_stop:
 1e1c3aa:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:174:0
 1e1c3ac:    04 08             	r4 = r0			  ## lmp_ch_update.c:174:0
 1e1c3ae:    bf f3 46 f4       	call -6004 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:179:5
 1e1c3b2:    14 e0 03 00       	if (r4 == 1) goto 6 <bt_f_stop+0x12 : 1e1c3bc >			  ## lmp_ch_update.c:180:9
 1e1c3b6:    20 38             	if (r4 != 0) goto 64 <bt_f_stop+0x4E : 1e1c3f8 >
 1e1c3b8:    00 70             	r0 = 0			  ## lmp_ch_update.c:181:9
 1e1c3ba:    01 18             	goto 2 <bt_f_stop+0x14 : 1e1c3be >			  ## lmp_ch_update.c:181:9
 1e1c3bc:    50 70             	r0 = 5			  ## lmp_ch_update.c:183:9
 1e1c3be:    01 70             	r1 = 0
 1e1c3c0:    02 70             	r2 = 0
 1e1c3c2:    03 70             	r3 = 0
 1e1c3c4:    bf f3 42 f4       	call -6012 <bt_updata_control : 1e1ac4c >
 1e1c3c8:    bf f3 54 f4       	call -5976 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:189:41
 1e1c3cc:    21 f3 10 00       	if ((r0 & 2) != 0) goto 32 <bt_f_stop+0x46 : 1e1c3f0 >			  ## lmp_ch_update.c:189:41
 1e1c3d0:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e1c3d6:    01 f6 1c 41       	r1 = [r4 + 284]			  ## lmp_ch_update.c:197:13
 1e1c3da:    06 22             	if (r1 == 0) goto 12 <bt_f_stop+0x3E : 1e1c3e8 >			  ## lmp_ch_update.c:197:13
 1e1c3dc:    00 70             	r0 = 0			  ## lmp_ch_update.c:198:13
 1e1c3de:    81 00             	call r1			  ## lmp_ch_update.c:198:13
 1e1c3e0:    bf f3 48 f4       	call -6000 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:199:46
 1e1c3e4:    01 f3 10 00       	if ((r0 & 2) == 0) goto 32 <bt_f_stop+0x5E : 1e1c408 >			  ## lmp_ch_update.c:199:46
 1e1c3e8:    bf f3 44 f4       	call -6008 <bt_updata_get_flag : 1e1ac74 >			  ## lmp_ch_update.c:189:41
 1e1c3ec:    01 f3 f3 0f       	if ((r0 & 2) == 0) goto -26 <bt_f_stop+0x2C : 1e1c3d6 >			  ## lmp_ch_update.c:189:41
 1e1c3f0:    bf f3 25 f4       	call -6070 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:206:5
 1e1c3f4:    15 70             	r5 = 1			  ## lmp_ch_update.c:206:5
 1e1c3f6:    0b 18             	goto 22 <bt_f_stop+0x64 : 1e1c40e >			  ## lmp_ch_update.c:206:5
 1e1c3f8:    00 70             	r0 = 0			  ## lmp_ch_update.c:185:9
 1e1c3fa:    02 70             	r2 = 0			  ## lmp_ch_update.c:185:9
 1e1c3fc:    03 70             	r3 = 0			  ## lmp_ch_update.c:185:9
 1e1c3fe:    05 70             	r5 = 0			  ## lmp_ch_update.c:185:9
 1e1c400:    41 08             	r1 = r4			  ## lmp_ch_update.c:185:9
 1e1c402:    bf f3 23 f4       	call -6074 <bt_updata_control : 1e1ac4c >			  ## lmp_ch_update.c:185:9
 1e1c406:    03 18             	goto 6 <bt_f_stop+0x64 : 1e1c40e >			  ## lmp_ch_update.c:185:9
 1e1c408:    bf f3 19 f4       	call -6094 <bt_updata_clr_flag : 1e1ac3e >			  ## lmp_ch_update.c:200:17
 1e1c40c:    05 70             	r5 = 0			  ## lmp_ch_update.c:200:17
 1e1c40e:    50 08             	r0 = r5			  ## lmp_ch_update.c:208:1
 1e1c410:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:208:1


lmp_ch_update_init:
 1e1c412:    34 00             	[--sp] = rets			  ## lmp_ch_update.c:231:0
 1e1c414:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:227:29
 1e1c41a:    10 f6 20 21       	[r2 + 288] = r0			  ## lmp_ch_update.c:226:30
 1e1c41e:    11 f6 1c 21       	[r2 + 284] = r1			  ## lmp_ch_update.c:227:29
 1e1c422:    bf f3 2c f4       	call -6056 <reg_revic_buf_addr : 1e1ac7e >			  ## lmp_ch_update.c:234:5
 1e1c426:    88 01             	{rets} = [sp++]			  ## lmp_ch_update.c:236:5
 1e1c428:    ff f3 31 f4       	goto -6046 <lmp_update_init : 1e1ac8e >			  ## lmp_ch_update.c:236:5


bt_updata_handle:
 1e1c42c:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:216:0
 1e1c42e:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:216:0
 1e1c434:    02 f6 18 51       	r2 = [r5 + 280]			  ## lmp_ch_update.c:218:9
 1e1c438:    14 08             	r4 = r1			  ## lmp_ch_update.c:218:9
 1e1c43a:    01 08             	r1 = r0
 1e1c43c:    06 24             	if (r2 == 0) goto 12 <bt_updata_handle+0x1E : 1e1c44a >
 1e1c43e:    20 08             	r0 = r2			  ## lmp_ch_update.c:219:9
 1e1c440:    42 08             	r2 = r4			  ## lmp_ch_update.c:219:9
 1e1c442:    97 f3 4f 55       	call 3058334 <memcpy : 106ee4 >			  ## lmp_ch_update.c:219:9
 1e1c446:    14 f7 48 50       	h[r5 + 72] = r4			  ## lmp_ch_update.c:220:23
 1e1c44a:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:222:1


lmp_ch_update_exit:
 1e1c44c:    ff f3 29 f4       	goto -6062 <lmp_update_exit : 1e1aca2 >			  ## lmp_ch_update.c:240:0


ble_f_seek:
 1e1c450:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:78:0
 1e1c456:    07 22             	if (r1 == 0) goto 14 <ble_f_seek+0x16 : 1e1c466 >			  ## ble_ll_ch_update.c:78:0
 1e1c458:    11 e0 0a 10       	if (r1 != 1) goto 20 <ble_f_seek+0x20 : 1e1c470 >			  ## ble_ll_ch_update.c:78:0
 1e1c45c:    01 f6 24 01       	r1 = [r0 + 292]			  ## ble_ll_ch_update.c:83:24
 1e1c460:    12 09             	r2 += r1			  ## ble_ll_ch_update.c:83:24
 1e1c462:    21 70             	r1 = 2
 1e1c464:    01 18             	goto 2 <ble_f_seek+0x18 : 1e1c468 >
 1e1c466:    11 70             	r1 = 1
 1e1c468:    12 f6 24 01       	[r0 + 292] = r2
 1e1c46c:    11 f9 25 00       	b[r0 + 37] = r1
 1e1c470:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:88:5
 1e1c472:    20 00             	rts			  ## ble_ll_ch_update.c:88:5


ble_f_read:
 1e1c474:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:92:0
 1e1c476:    24 08             	r4 = r2			  ## ble_ll_ch_update.c:92:0
 1e1c478:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:92:0
 1e1c47e:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:92:0
 1e1c480:    65 fc 24 01       	r5 = r6 + 292			  ## ble_ll_ch_update.c:92:0
 1e1c484:    48 6a             	b[r5 + 4] = r0			  ## ble_ll_ch_update.c:92:0
 1e1c486:    2c 4a             	[r5 + 8] = r4			  ## ble_ll_ch_update.c:96:25
 1e1c488:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:96:25
 1e1c48a:    38 4a             	[r5 + 12] = r0			  ## ble_ll_ch_update.c:97:22
 1e1c48c:    49 4a             	[r5 + 16] = r1			  ## ble_ll_ch_update.c:98:22
 1e1c48e:    03 4a             	r3 = [r5 + 0]			  ## ble_ll_ch_update.c:100:64
 1e1c490:    02 f9 25 60       	r2 = b[r6 + 37] (u)			  ## ble_ll_ch_update.c:44:5
 1e1c494:    40 70             	r0 = 4			  ## ble_ll_ch_update.c:44:5
 1e1c496:    41 08             	r1 = r4			  ## ble_ll_ch_update.c:44:5
 1e1c498:    bf f3 a5 ee       	call -8886 <ll_update_send_data_handle : 1e1a1e6 >			  ## ble_ll_ch_update.c:44:5
 1e1c49c:    40 6a             	r0 = b[r5 + 4] (u)
 1e1c49e:    c5 ff ff ff 00 00 	r5 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1c4a4:    00 f3 0f 00       	if ((r0 & 1) == 0) goto 30 <ble_f_read+0x52 : 1e1c4c6 >			  ## ble_ll_ch_update.c:102:5
 1e1c4a8:    01 f6 38 61       	r1 = [r6 + 312]			  ## ble_ll_ch_update.c:103:13
 1e1c4ac:    16 22             	if (r1 == 0) goto 44 <ble_f_read+0x66 : 1e1c4da >			  ## ble_ll_ch_update.c:103:13
 1e1c4ae:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:104:13
 1e1c4b0:    81 00             	call r1			  ## ble_ll_ch_update.c:104:13
 1e1c4b2:    00 f6 30 61       	r0 = [r6 + 304]			  ## ble_ll_ch_update.c:107:63
 1e1c4b6:    04 f2 10 10       	if (r4 != r0) goto 32 <ble_f_read+0x66 : 1e1c4da >			  ## ble_ll_ch_update.c:107:63
 1e1c4ba:    00 f9 28 61       	r0 = b[r6 + 296] (u)
 1e1c4be:    11 fd 01 09       	r1 = r0 ^ 1			  ## ble_ll_ch_update.c:107:44
 1e1c4c2:    f0 33             	if (r1 != 0) goto -32 <ble_f_read+0x30 : 1e1c4a4 >			  ## ble_ll_ch_update.c:107:44
 1e1c4c4:    0a 18             	goto 20 <ble_f_read+0x66 : 1e1c4da >			  ## ble_ll_ch_update.c:107:44
 1e1c4c6:    00 f6 30 61       	r0 = [r6 + 304]			  ## ble_ll_ch_update.c:113:17
 1e1c4ca:    40 f2 06 10       	if (r0 != r4) goto 12 <ble_f_read+0x66 : 1e1c4da >			  ## ble_ll_ch_update.c:113:17
 1e1c4ce:    00 f6 24 61       	r0 = [r6 + 292]			  ## ble_ll_ch_update.c:114:24
 1e1c4d2:    40 09             	r0 += r4			  ## ble_ll_ch_update.c:114:24
 1e1c4d4:    10 f6 24 61       	[r6 + 292] = r0			  ## ble_ll_ch_update.c:114:24
 1e1c4d8:    45 08             	r5 = r4			  ## ble_ll_ch_update.c:114:24
 1e1c4da:    50 08             	r0 = r5			  ## ble_ll_ch_update.c:120:1
 1e1c4dc:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:120:1


ble_f_open:
 1e1c4de:    34 00             	[--sp] = rets			  ## ble_ll_ch_update.c:123:0
 1e1c4e0:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:131:18
 1e1c4e6:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:131:18
 1e1c4e8:    11 f6 24 01       	[r0 + 292] = r1			  ## ble_ll_ch_update.c:130:20
 1e1c4ec:    11 70             	r1 = 1			  ## ble_ll_ch_update.c:130:20
 1e1c4ee:    11 f9 25 00       	b[r0 + 37] = r1			  ## ble_ll_ch_update.c:131:18
 1e1c4f2:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:44:5
 1e1c4f4:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c4f6:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c4f8:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c4fa:    bf f3 74 ee       	call -8984 <ll_update_send_data_handle : 1e1a1e6 >			  ## ble_ll_ch_update.c:44:5
 1e1c4fe:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:134:5
 1e1c500:    30 00             	pc = [sp++]			  ## ble_ll_ch_update.c:134:5


ble_f_send_update_len:
 1e1c502:    34 00             	[--sp] = rets			  ## ble_ll_ch_update.c:138:0
 1e1c504:    13 08             	r3 = r1			  ## ble_ll_ch_update.c:138:0
 1e1c506:    05 20             	if (r0 == 0) goto 10 <ble_f_send_update_len+0x10 : 1e1c512 >			  ## ble_ll_ch_update.c:138:0
 1e1c508:    20 70             	r0 = 2			  ## ble_ll_ch_update.c:44:5
 1e1c50a:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c50c:    02 71             	r2 = 16			  ## ble_ll_ch_update.c:44:5
 1e1c50e:    bf f3 6a ee       	call -9004 <ll_update_send_data_handle : 1e1a1e6 >			  ## ble_ll_ch_update.c:44:5
 1e1c512:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:149:5
 1e1c514:    30 00             	pc = [sp++]			  ## ble_ll_ch_update.c:149:5


ble_f_stop:
 1e1c516:    74 01             	[--sp] = {rets, r4}			  ## ble_ll_ch_update.c:153:0
 1e1c518:    01 08             	r1 = r0			  ## ble_ll_ch_update.c:153:0
 1e1c51a:    11 e0 03 00       	if (r1 == 1) goto 6 <ble_f_stop+0xE : 1e1c524 >			  ## ble_ll_ch_update.c:156:9
 1e1c51e:    0a 32             	if (r1 != 0) goto 20 <ble_f_stop+0x1E : 1e1c534 >
 1e1c520:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c522:    01 18             	goto 2 <ble_f_stop+0x10 : 1e1c526 >			  ## ble_ll_ch_update.c:44:5
 1e1c524:    50 70             	r0 = 5			  ## ble_ll_ch_update.c:44:5
 1e1c526:    01 70             	r1 = 0
 1e1c528:    02 70             	r2 = 0
 1e1c52a:    03 70             	r3 = 0
 1e1c52c:    bf f3 5b ee       	call -9034 <ll_update_send_data_handle : 1e1a1e6 >
 1e1c530:    14 70             	r4 = 1
 1e1c532:    06 18             	goto 12 <ble_f_stop+0x2A : 1e1c540 >
 1e1c534:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c536:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c538:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c53a:    04 70             	r4 = 0			  ## ble_ll_ch_update.c:44:5
 1e1c53c:    bf f3 53 ee       	call -9050 <ll_update_send_data_handle : 1e1a1e6 >			  ## ble_ll_ch_update.c:44:5
 1e1c540:    40 08             	r0 = r4			  ## ble_ll_ch_update.c:166:1
 1e1c542:    54 01             	{pc, r4} = [sp++]			  ## ble_ll_ch_update.c:166:1


ble_test_update_exit:
 1e1c544:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:235:0
 1e1c546:    ff f3 ab df       	goto -16554 <ble_rx_update_handle_register : 1e184a0 >			  ## ble_ll_ch_update.c:243:5


ble_test_update_init:
 1e1c54a:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:209:0
 1e1c550:    10 f6 3c 21       	[r2 + 316] = r0			  ## ble_ll_ch_update.c:195:30
 1e1c554:    11 f6 38 21       	[r2 + 312] = r1			  ## ble_ll_ch_update.c:196:29
 1e1c558:    c0 ff 62 c5 e1 01 	r0 = 31573346 <ble_updata_handle : 1e1c562 >			  ## ble_ll_ch_update.c:215:5
 1e1c55e:    ff f3 9f df       	goto -16578 <ble_rx_update_handle_register : 1e184a0 >			  ## ble_ll_ch_update.c:215:5


ble_updata_handle:
 1e1c562:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:175:0
 1e1c564:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:175:0
 1e1c56a:    00 f6 34 41       	r0 = [r4 + 308]			  ## ble_ll_ch_update.c:176:17
 1e1c56e:    1d 20             	if (r0 == 0) goto 58 <ble_updata_handle+0x48 : 1e1c5aa >
 1e1c570:    03 f9 28 41       	r3 = b[r4 + 296] (u)
 1e1c574:    1a 26             	if (r3 == 0) goto 52 <ble_updata_handle+0x48 : 1e1c5aa >
 1e1c576:    03 f6 30 41       	r3 = [r4 + 304]			  ## ble_ll_ch_update.c:177:44
 1e1c57a:    05 f6 2c 41       	r5 = [r4 + 300]			  ## ble_ll_ch_update.c:177:21
 1e1c57e:    86 b6             	r6 = r3 + r2			  ## ble_ll_ch_update.c:177:53
 1e1c580:    65 f2 02 20       	if (r5 >= r6) goto 4 <ble_updata_handle+0x26 : 1e1c588 >			  ## ble_ll_ch_update.c:177:53
 1e1c584:    36 08             	r6 = r3			  ## ble_ll_ch_update.c:182:44
 1e1c586:    05 18             	goto 10 <ble_updata_handle+0x30 : 1e1c592 >			  ## ble_ll_ch_update.c:182:44
 1e1c588:    30 09             	r0 += r3			  ## ble_ll_ch_update.c:178:37
 1e1c58a:    97 f3 ab 54       	call 3058006 <memcpy : 106ee4 >			  ## ble_ll_ch_update.c:178:13
 1e1c58e:    16 f6 30 41       	[r4 + 304] = r6			  ## ble_ll_ch_update.c:179:30
 1e1c592:    65 f2 0a 10       	if (r5 != r6) goto 20 <ble_updata_handle+0x48 : 1e1c5aa >
 1e1c596:    40 fc 28 01       	r0 = r4 + 296
 1e1c59a:    06 f4 02 09       	[r0 + 24] |= 2			  ## ble_ll_ch_update.c:50:24
 1e1c59e:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:50:24
 1e1c5a0:    09 60             	b[r0 + 0] = r1			  ## ble_ll_ch_update.c:50:24
 1e1c5a2:    51 40             	r1 = [r0 + 20]			  ## ble_ll_ch_update.c:185:17
 1e1c5a4:    02 22             	if (r1 == 0) goto 4 <ble_updata_handle+0x48 : 1e1c5aa >			  ## ble_ll_ch_update.c:185:17
 1e1c5a6:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:186:17
 1e1c5a8:    81 00             	call r1			  ## ble_ll_ch_update.c:186:17
 1e1c5aa:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:191:1


update_thread_resume:
 1e1c5ac:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update_main.c:51:0
 1e1c5b2:    00 f6 44 01       	r0 = [r0 + 324]			  ## update_main.c:53:18
 1e1c5b6:    d7 f3 29 54       	goto 3057746 <os_sem_post : 106e0c >			  ## update_main.c:53:5


update_thread_sleep:
 1e1c5ba:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update_main.c:45:0
 1e1c5c0:    00 f6 44 01       	r0 = [r0 + 324]			  ## update_main.c:47:25
 1e1c5c4:    01 fb f4 01       	r1 = 500 <BTCTLER_CONTROLLER_BSS_SIZE+0x34 : 1f4 >			  ## update_main.c:47:12
 1e1c5c8:    d7 f3 1e 54       	goto 3057724 <os_sem_pend : 106e08 >			  ## update_main.c:47:12


loader_info_record_write:
 1e1c5cc:    78 01             	[--sp] = {rets, r8-r4}			  ## download_loop.c:1165:0
 1e1c5ce:    24 08             	r4 = r2			  ## download_loop.c:1165:0
 1e1c5d0:    15 08             	r5 = r1			  ## download_loop.c:1165:0
 1e1c5d2:    07 08             	r7 = r0			  ## download_loop.c:1165:0
 1e1c5d4:    50 08             	r0 = r5			  ## download_loop.c:1174:16
 1e1c5d6:    41 08             	r1 = r4			  ## download_loop.c:1174:16
 1e1c5d8:    72 08             	r2 = r7			  ## download_loop.c:1174:16
 1e1c5da:    bf f3 dd 27       	call -110662 <norflash_write : 1e01598 >			  ## download_loop.c:1174:16
 1e1c5de:    d6 7f             	r6 = 253			  ## download_loop.c:1174:16
 1e1c5e0:    04 f2 19 10       	if (r4 != r0) goto 50 <loader_info_record_write+0x4A : 1e1c616 >
 1e1c5e4:    40 08             	r0 = r4			  ## download_loop.c:1180:20
 1e1c5e6:    bf f3 14 89       	call -60888 <malloc : 1e0d812 >			  ## download_loop.c:1180:20
 1e1c5ea:    08 08             	r8 = r0			  ## download_loop.c:1180:20
 1e1c5ec:    13 20             	if (r0 == 0) goto 38 <loader_info_record_write+0x48 : 1e1c614 >
 1e1c5ee:    41 08             	r1 = r4			  ## download_loop.c:1183:20
 1e1c5f0:    72 08             	r2 = r7			  ## download_loop.c:1183:20
 1e1c5f2:    bf f3 2e 26       	call -111524 <norflash_read : 1e01252 >			  ## download_loop.c:1183:20
 1e1c5f6:    c6 7f             	r6 = 252			  ## download_loop.c:1183:20
 1e1c5f8:    04 f2 08 10       	if (r4 != r0) goto 16 <loader_info_record_write+0x40 : 1e1c60c >			  ## download_loop.c:1183:20
 1e1c5fc:    50 08             	r0 = r5			  ## download_loop.c:1185:22
 1e1c5fe:    81 08             	r1 = r8			  ## download_loop.c:1185:22
 1e1c600:    42 08             	r2 = r4			  ## download_loop.c:1185:22
 1e1c602:    97 f3 73 54       	call 3057894 <memcmp : 106eec >			  ## download_loop.c:1185:22
 1e1c606:    f6 07             	r6 = -1			  ## download_loop.c:1185:17
 1e1c608:    01 30             	if (r0 != 0) goto 2 <loader_info_record_write+0x40 : 1e1c60c >			  ## download_loop.c:1185:17
 1e1c60a:    06 70             	r6 = 0			  ## download_loop.c:1185:17
 1e1c60c:    80 08             	r0 = r8			  ## download_loop.c:1196:9
 1e1c60e:    bf f3 05 89       	call -60918 <free : 1e0d81c >			  ## download_loop.c:1196:9
 1e1c612:    01 18             	goto 2 <loader_info_record_write+0x4A : 1e1c616 >			  ## download_loop.c:1196:9
 1e1c614:    e6 7f             	r6 = 254
 1e1c616:    80 05             	r0 = r6.b0 (u)			  ## download_loop.c:1202:5
 1e1c618:    58 01             	{pc, r8-r4} = [sp++]			  ## download_loop.c:1202:5


part_update_encrypt_key_check:
 1e1c61a:    77 01             	[--sp] = {rets, r7-r4}			  ## download_loop.c:1490:0
 1e1c61c:    fe 0b             	sp += -4			  ## download_loop.c:1490:0
 1e1c61e:    04 08             	r4 = r0			  ## download_loop.c:1490:0
 1e1c620:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e1c626:    c1 ff f4 31 00 00 	r1 = 12788 <update_bss_start : 31f4 >			  ## download_loop.c:1496:50
 1e1c62c:    01 42             	r1 = [r1 + 0]			  ## download_loop.c:1496:50
 1e1c62e:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1498:5
 1e1c634:    03 f6 48 61       	r3 = [r6 + 328]			  ## download_loop.c:1498:5
 1e1c638:    e5 50             	r5 = h[r0 + 28] (u)			  ## download_loop.c:1501:5
 1e1c63a:    07 42             	r7 = [r1 + 0]			  ## download_loop.c:1496:58
 1e1c63c:    22 48             	r2 = [r4 + 8]			  ## download_loop.c:1498:61
 1e1c63e:    33 46             	r3 = [r3 + 12]			  ## download_loop.c:1498:18
 1e1c640:    00 70             	r0 = 0			  ## download_loop.c:1498:5
 1e1c642:    01 70             	r1 = 0			  ## download_loop.c:1498:5
 1e1c644:    83 00             	call r3			  ## download_loop.c:1498:5
 1e1c646:    00 f6 48 61       	r0 = [r6 + 328]			  ## download_loop.c:1499:5
 1e1c64a:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1499:18
 1e1c64c:    76 fc 00 02       	r6 = r7 + 512			  ## download_loop.c:1499:18
 1e1c650:    00 70             	r0 = 0			  ## download_loop.c:1499:5
 1e1c652:    02 72             	r2 = 32			  ## download_loop.c:1499:5
 1e1c654:    07 72             	r7 = 32			  ## download_loop.c:1499:5
 1e1c656:    61 08             	r1 = r6			  ## download_loop.c:1499:5
 1e1c658:    83 00             	call r3			  ## download_loop.c:1499:5
 1e1c65a:    23 48             	r3 = [r4 + 8]			  ## download_loop.c:1501:107
 1e1c65c:    02 72             	r2 = 32			  ## download_loop.c:1501:5
 1e1c65e:    0f 02             	[sp] = r7			  ## download_loop.c:1501:5
 1e1c660:    50 08             	r0 = r5			  ## download_loop.c:1501:5
 1e1c662:    61 08             	r1 = r6			  ## download_loop.c:1501:5
 1e1c664:    bf f3 cf f7       	call -4194 <decode_data_by_user_key : 1e1b606 >			  ## download_loop.c:1501:5
 1e1c668:    20 9c             	r0 = r6 + 2			  ## download_loop.c:1503:49
 1e1c66a:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e1c66c:    bf f3 d5 25       	call -111702 <CRC16 : 1e0121a >			  ## download_loop.c:307:12
 1e1c670:    02 5c             	r2 = h[r6 + 0] (u)			  ## download_loop.c:1504:34
 1e1c672:    01 08             	r1 = r0			  ## download_loop.c:307:12
 1e1c674:    f0 07             	r0 = -1			  ## download_loop.c:1504:9
 1e1c676:    21 f2 01 10       	if (r1 != r2) goto 2 <part_update_encrypt_key_check+0x62 : 1e1c67c >			  ## download_loop.c:1504:9
 1e1c67a:    00 70             	r0 = 0			  ## download_loop.c:1504:9
 1e1c67c:    02 0a             	sp += 4
 1e1c67e:    57 01             	{pc, r7-r4} = [sp++]			  ## download_loop.c:1512:5


update_code_end:
 1e1c680:    7f 01             	[--sp] = {rets, r15-r4}			  ## clock.c:629:0
 1e1c682:    f2 0b             	sp += -28			  ## clock.c:629:0
 1e1c684:    05 70             	r5 = 0			  ## clock.c:629:0
 1e1c686:    1d 02             	[sp+4] = r5			  ## clock.c:638:9
 1e1c688:    c3 ff 80 84 1e 00 	r3 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:642:39
 1e1c68e:    c3 0e             	r3 = r0 * r3			  ## clock.c:642:39
 1e1c690:    94 70             	r4 = 9			  ## clock.c:642:39
 1e1c692:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:642:39
 1e1c696:    2c 02             	[sp+8] = r4			  ## clock.c:642:37
 1e1c698:    74 70             	r4 = 7			  ## clock.c:643:39
 1e1c69a:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:643:39
 1e1c69e:    3c 02             	[sp+12] = r4			  ## clock.c:643:37
 1e1c6a0:    c4 ff 80 1a 06 00 	r4 = 400000 <text_size+0x44D8C : 61a80 >			  ## clock.c:644:39
 1e1c6a6:    04 0f             	r4 = r0 * r4			  ## clock.c:644:39
 1e1c6a8:    4c 02             	[sp+16] = r4			  ## clock.c:644:37
 1e1c6aa:    34 70             	r4 = 3			  ## clock.c:645:39
 1e1c6ac:    c0 fe 40 33       	r3 = r3 / r4 (u)			  ## clock.c:645:39
 1e1c6b0:    5b 02             	[sp+20] = r3			  ## clock.c:645:37
 1e1c6b2:    c3 ff 40 42 0f 00 	r3 = 1000000 <text_size+0xD754C : f4240 >			  ## clock.c:642:39
 1e1c6b8:    c3 0e             	r3 = r0 * r3			  ## clock.c:642:39
 1e1c6ba:    6b 02             	[sp+24] = r3			  ## clock.c:646:37
 1e1c6bc:    c3 ff a0 30 e1 01 	r3 = 31535264 <bluetooth_base_uuid+0x2E : 1e130a0 >			  ## clock.c:646:37
 1e1c6c2:    cf ff a4 30 e1 01 	r15 = 31535268 <bluetooth_base_uuid+0x32 : 1e130a4 >			  ## clock.c:646:37
 1e1c6c8:    cc ff 5c 32 00 00 	r12 = 12892 <hdl.30 : 325c >			  ## clock.c:646:37
 1e1c6ce:    cd ff 60 32 00 00 	r13 = 12896 <hdl.31 : 3260 >			  ## clock.c:646:37
 1e1c6d4:    cb ff 62 32 00 00 	r11 = 12898 <hdl.32 : 3262 >			  ## clock.c:646:37
 1e1c6da:    12 24             	if (r2 == 0) goto 36 <update_code_end+0x80 : 1e1c700 >			  ## clock.c:646:37
 1e1c6dc:    00 f9 00 d0       	r0 = b[r13 + 0] (u)			  ## clock.c:690:52
 1e1c6e0:    01 f9 00 c0       	r1 = b[r12 + 0] (u)			  ## clock.c:690:22
 1e1c6e4:    02 f9 00 b0       	r2 = b[r11 + 0] (u)			  ## clock.c:690:79
 1e1c6e8:    00 fa 00 03       	r0 = b[r0+r3] (u)			  ## clock.c:690:52
 1e1c6ec:    43 a0             	r3 = sp + 4			  ## clock.c:690:52
 1e1c6ee:    a1 f6 00 31       	r1 = [r3+r1<<2]			  ## clock.c:690:22
 1e1c6f2:    02 fa 00 2f       	r2 = b[r2+r15] (u)			  ## clock.c:690:79
 1e1c6f6:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## clock.c:690:50
 1e1c6fa:    c0 fe 20 20       	r2 = r0 / r2 (u)			  ## clock.c:690:77
 1e1c6fe:    43 18             	goto 134 <update_code_end+0x106 : 1e1c786 >
 1e1c700:    c4 ff 58 32 00 00 	r4 = 12888 <hdl.29 : 3258 >
 1e1c706:    ca ff 20 32 00 00 	r10 = 12832 <hdl.5 : 3220 >
 1e1c70c:    0e 70             	r14 = 0
 1e1c70e:    03 18             	goto 6 <update_code_end+0x96 : 1e1c716 >
 1e1c710:    42 a0             	r2 = sp + 4
 1e1c712:    a5 f6 00 2e       	r5 = [r2+r14<<2]
 1e1c716:    07 70             	r7 = 0
 1e1c718:    0d 02             	[sp] = r5
 1e1c71a:    02 fa 00 73       	r2 = b[r7+r3] (u)
 1e1c71e:    c0 fe 20 35       	r3 = r5 / r2 (u)
 1e1c722:    06 70             	r6 = 0
 1e1c724:    05 70             	r5 = 0
 1e1c726:    02 fa 00 5f       	r2 = b[r5+r15] (u)			  ## clock.c:656:65
 1e1c72a:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## clock.c:656:63
 1e1c72e:    68 b4             	r8 = r2 - r1			  ## clock.c:658:43
 1e1c730:    08 e0 10 b0       	ifs (r8 < 0) goto 32 <update_code_end+0xD4 : 1e1c754 >
 1e1c734:    08 e0 1d 00       	if (r8 == 0) goto 58 <update_code_end+0xF2 : 1e1c772 >			  ## clock.c:665:25
 1e1c738:    09 f6 00 40       	r9 = [r4 + 0]			  ## clock.c:677:33
 1e1c73c:    89 f2 0a 90       	if (r9 <= r8) goto 20 <update_code_end+0xD4 : 1e1c754 >			  ## clock.c:677:33
 1e1c740:    18 f6 00 40       	[r4 + 0] = r8			  ## clock.c:678:42
 1e1c744:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:679:40
 1e1c748:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:680:40
 1e1c74c:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:681:40
 1e1c750:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:683:48
 1e1c754:    15 80             	r5 += 1			  ## clock.c:655:56
 1e1c756:    16 80             	r6 += 1			  ## clock.c:655:31
 1e1c758:    45 e0 e5 3f       	if (r5 < 4) goto -54 <update_code_end+0xA6 : 1e1c726 >			  ## clock.c:655:31
 1e1c75c:    17 80             	r7 += 1			  ## clock.c:654:52
 1e1c75e:    05 02             	r5 = [sp]			  ## clock.c:654:52
 1e1c760:    c3 ff a0 30 e1 01 	r3 = 31535264 <bluetooth_base_uuid+0x2E : 1e130a0 >			  ## clock.c:654:52
 1e1c766:    47 e0 d8 3f       	if (r7 < 4) goto -80 <update_code_end+0x9A : 1e1c71a >			  ## clock.c:654:52
 1e1c76a:    1e 80             	r14 += 1			  ## clock.c:653:51
 1e1c76c:    5e e0 d0 9f       	if (r14 <= 5) goto -96 <update_code_end+0x90 : 1e1c710 >			  ## clock.c:653:51
 1e1c770:    0a 18             	goto 20 <update_code_end+0x106 : 1e1c786 >			  ## clock.c:653:51
 1e1c772:    c0 f4 00 49       	[r4 + 0] = 0			  ## clock.c:667:42
 1e1c776:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:668:40
 1e1c77a:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:669:40
 1e1c77e:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:670:40
 1e1c782:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:671:48
 1e1c786:    20 08             	r0 = r2			  ## clock.c:696:1
 1e1c788:    0e 0a             	sp += 28			  ## clock.c:696:1
 1e1c78a:    5f 01             	{pc, r15-r4} = [sp++]			  ## clock.c:696:1


__hw_hsb_upper_bound:
 1e1c78c:    34 00             	[--sp] = rets			  ## clock.c:799:0
 1e1c78e:    c1 ff 58 32 00 00 	r1 = 12888 <hdl.29 : 3258 >			  ## clock.c:800:22
 1e1c794:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:800:22
 1e1c798:    01 08             	r1 = r0			  ## clock.c:800:22
 1e1c79a:    00 7c             	r0 = 192			  ## clock.c:811:5
 1e1c79c:    02 70             	r2 = 0			  ## clock.c:811:5
 1e1c79e:    70 17             	call -288 <update_code_end : 1e1c680 >			  ## clock.c:811:5
 1e1c7a0:    c0 ff 20 32 00 00 	r0 = 12832 <hdl.5 : 3220 >			  ## clock.c:814:45
 1e1c7a6:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:814:12
 1e1c7a8:    01 70             	r1 = 0			  ## clock.c:814:12
 1e1c7aa:    12 70             	r2 = 1			  ## clock.c:814:12
 1e1c7ac:    88 01             	{rets} = [sp++]			  ## clock.c:814:12
 1e1c7ae:    68 1f             	goto -304 <update_code_end : 1e1c680 >			  ## clock.c:814:12


voltage_by_freq_pre:
 1e1c7b0:    c2 ff b4 0f 00 00 	r2 = 4020 <sys_clock_limit+0x4 : fb4 >			  ## clock.c:1098:0
 1e1c7b6:    01 70             	r1 = 0			  ## clock.c:1098:0
 1e1c7b8:    43 f6 14 20       	r3 = [r2 ++= 20]			  ## clock.c:1109:26
 1e1c7bc:    03 f2 03 20       	if (r3 >= r0) goto 6 <voltage_by_freq_pre+0x16 : 1e1c7c6 >			  ## clock.c:1109:26
 1e1c7c0:    11 80             	r1 += 1			  ## clock.c:1108:33
 1e1c7c2:    61 e0 f9 bf       	ifs (r1 < 6) goto -14 <voltage_by_freq_pre+0x8 : 1e1c7b8 >
 1e1c7c6:    50 70             	r0 = 5			  ## clock.c:1114:21
 1e1c7c8:    61 e0 01 00       	if (r1 == 6) goto 2 <voltage_by_freq_pre+0x1E : 1e1c7ce >
 1e1c7cc:    10 08             	r0 = r1			  ## clock.c:1114:21
 1e1c7ce:    c1 ff 48 32 00 00 	r1 = 12872 <hdl.23 : 3248 >			  ## clock.c:1114:19
 1e1c7d4:    08 62             	b[r1 + 0] = r0			  ## clock.c:1114:19
 1e1c7d6:    20 00             	rts			  ## clock.c:1115:1


pll_clock_by_all_limit:
 1e1c7d8:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1061:0
 1e1c7da:    c1 ff 48 32 00 00 	r1 = 12872 <hdl.23 : 3248 >			  ## clock.c:1062:49
 1e1c7e0:    02 62             	r2 = b[r1 + 0] (u)			  ## clock.c:1062:25
 1e1c7e2:    01 fe 14 29       	r1 = r2 * 20			  ## clock.c:1062:25
 1e1c7e6:    c3 ff b0 0f 00 00 	r3 = 4016 <sys_clock_limit : fb0 >			  ## clock.c:1062:25
 1e1c7ec:    81 f6 00 13       	r1 = [r1+r3]			  ## clock.c:1062:25
 1e1c7f0:    04 08             	r4 = r0
 1e1c7f2:    f5 07             	r5 = -1
 1e1c7f4:    41 f2 14 30       	if (r1 < r4) goto 40 <pll_clock_by_all_limit+0x48 : 1e1c820 >
 1e1c7f8:    40 71             	r0 = 20			  ## clock.c:1064:25
 1e1c7fa:    80 fe 00 32       	r3 += r2 * r0			  ## clock.c:1064:25
 1e1c7fe:    10 46             	r0 = [r3 + 4]			  ## clock.c:1064:25
 1e1c800:    40 f2 0e 30       	if (r0 < r4) goto 28 <pll_clock_by_all_limit+0x48 : 1e1c820 >
 1e1c804:    c0 fe 40 01       	r0 = r1 / r4 (u)			  ## clock.c:1077:35
 1e1c808:    06 04             	r6 = r0.b0 (u)			  ## clock.c:1079:9
 1e1c80a:    26 e0 08 30       	if (r6 < 2) goto 16 <pll_clock_by_all_limit+0x46 : 1e1c81e >
 1e1c80e:    35 0f             	r5 = r6 * r4			  ## clock.c:1082:36
 1e1c810:    50 08             	r0 = r5			  ## clock.c:1085:32
 1e1c812:    bc 17             	call -136 <__hw_hsb_upper_bound : 1e1c78c >			  ## clock.c:1085:32
 1e1c814:    05 f2 04 00       	if (r5 == r0) goto 8 <pll_clock_by_all_limit+0x48 : 1e1c820 >
 1e1c818:    f6 8f             	r6 += -1			  ## clock.c:1080:37
 1e1c81a:    26 e0 f8 af       	ifs (r6 >= 2) goto -16 <pll_clock_by_all_limit+0x36 : 1e1c80e >
 1e1c81e:    45 08             	r5 = r4
 1e1c820:    50 08             	r0 = r5			  ## clock.c:1095:1
 1e1c822:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1095:1


__hw_pll_run_pre:
 1e1c824:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:818:0
 1e1c826:    d4 0b             	sp += -88			  ## clock.c:818:0
 1e1c828:    c1 ff 58 32 00 00 	r1 = 12888 <hdl.29 : 3258 >			  ## clock.c:821:22
 1e1c82e:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:821:22
 1e1c832:    01 08             	r1 = r0			  ## clock.c:821:22
 1e1c834:    00 7c             	r0 = 192			  ## clock.c:831:5
 1e1c836:    02 70             	r2 = 0			  ## clock.c:831:5
 1e1c838:    06 70             	r6 = 0			  ## clock.c:831:5
 1e1c83a:    22 17             	call -444 <update_code_end : 1e1c680 >			  ## clock.c:831:5
 1e1c83c:    c0 ff 5c 32 00 00 	r0 = 12892 <hdl.30 : 325c >			  ## clock.c:833:37
 1e1c842:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:833:37
 1e1c844:    c1 ff 3c 32 00 00 	r1 = 12860 <hdl.0.372 : 323c >			  ## clock.c:833:27
 1e1c84a:    c2 ff 60 32 00 00 	r2 = 12896 <hdl.31 : 3260 >			  ## clock.c:835:35
 1e1c850:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:835:35
 1e1c852:    08 62             	b[r1 + 0] = r0			  ## clock.c:833:27
 1e1c854:    c0 ff 62 32 00 00 	r0 = 12898 <hdl.32 : 3262 >			  ## clock.c:835:56
 1e1c85a:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:835:56
 1e1c85c:    91 c0             	r1 = r2 << 2			  ## clock.c:835:42
 1e1c85e:    c2 ff 20 32 00 00 	r2 = 12832 <hdl.5 : 3220 >			  ## clock.c:837:34
 1e1c864:    04 64             	r4 = b[r2 + 0] (u)			  ## clock.c:837:34
 1e1c866:    10 09             	r0 += r1			  ## clock.c:835:46
 1e1c868:    c1 ff 40 32 00 00 	r1 = 12864 <hdl.1.373 : 3240 >			  ## clock.c:835:25
 1e1c86e:    08 62             	b[r1 + 0] = r0			  ## clock.c:835:25
 1e1c870:    05 a0             	r5 = sp + 0			  ## clock.c:835:25
 1e1c872:    01 70             	r1 = 0			  ## clock.c:601:9
 1e1c874:    42 74             	r2 = 68			  ## clock.c:601:9
 1e1c876:    50 08             	r0 = r5			  ## clock.c:601:9
 1e1c878:    97 f3 3a 53       	call 3057268 <memset : 106ef0 >			  ## clock.c:601:9
 1e1c87c:    c0 ff 80 84 1e 00 	r0 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:604:36
 1e1c882:    20 0e             	r0 = r4 * r0			  ## clock.c:604:36
 1e1c884:    91 70             	r1 = 9			  ## clock.c:604:36
 1e1c886:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:604:36
 1e1c88a:    19 02             	[sp+4] = r1			  ## clock.c:604:34
 1e1c88c:    71 70             	r1 = 7			  ## clock.c:605:36
 1e1c88e:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:605:36
 1e1c892:    29 02             	[sp+8] = r1			  ## clock.c:605:34
 1e1c894:    c1 ff 80 1a 06 00 	r1 = 400000 <text_size+0x44D8C : 61a80 >			  ## clock.c:606:36
 1e1c89a:    61 0e             	r1 = r4 * r1			  ## clock.c:606:36
 1e1c89c:    39 02             	[sp+12] = r1			  ## clock.c:606:34
 1e1c89e:    31 70             	r1 = 3			  ## clock.c:607:36
 1e1c8a0:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:607:36
 1e1c8a4:    49 02             	[sp+16] = r1			  ## clock.c:607:34
 1e1c8a6:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xD754C : f4240 >			  ## clock.c:604:36
 1e1c8ac:    61 0e             	r1 = r4 * r1			  ## clock.c:604:36
 1e1c8ae:    59 02             	[sp+20] = r1			  ## clock.c:608:34
 1e1c8b0:    21 71             	r1 = 18			  ## clock.c:610:71
 1e1c8b2:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:610:71
 1e1c8b6:    19 03             	[sp+68] = r1			  ## clock.c:610:34
 1e1c8b8:    e1 70             	r1 = 14			  ## clock.c:611:71
 1e1c8ba:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:611:71
 1e1c8be:    29 03             	[sp+72] = r1			  ## clock.c:611:34
 1e1c8c0:    c1 ff 40 0d 03 00 	r1 = 200000 <text_size+0x1404C : 30d40 >			  ## clock.c:612:71
 1e1c8c6:    61 0e             	r1 = r4 * r1			  ## clock.c:612:71
 1e1c8c8:    39 03             	[sp+76] = r1			  ## clock.c:612:34
 1e1c8ca:    61 70             	r1 = 6			  ## clock.c:613:71
 1e1c8cc:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:613:71
 1e1c8d0:    48 03             	[sp+80] = r0			  ## clock.c:613:34
 1e1c8d2:    c0 ff 20 a1 07 00 	r0 = 500000 <text_size+0x5D42C : 7a120 >			  ## clock.c:614:71
 1e1c8d8:    20 0e             	r0 = r4 * r0			  ## clock.c:614:71
 1e1c8da:    58 03             	[sp+84] = r0			  ## clock.c:614:34
 1e1c8dc:    c0 ff 00 d8 b8 05 	r0 = 96000000 <uECC_vli_cmp_unsafe+0x1A86804 : 1b8d800 >			  ## clock.c:614:34
 1e1c8e2:    01 70             	r1 = 0			  ## clock.c:614:34
 1e1c8e4:    42 f6 04 50       	r2 = [r5 ++= 4]			  ## clock.c:617:32
 1e1c8e8:    02 f2 05 00       	if (r2 == r0) goto 10 <__hw_pll_run_pre+0xD2 : 1e1c8f6 >			  ## clock.c:617:32
 1e1c8ec:    11 80             	r1 += 1			  ## clock.c:616:50
 1e1c8ee:    16 80             	r6 += 1			  ## clock.c:616:23
 1e1c8f0:    71 e1 f8 3f       	if (r1 < 23) goto -16 <__hw_pll_run_pre+0xC0 : 1e1c8e4 >			  ## clock.c:616:23
 1e1c8f4:    f6 7f             	r6 = 255
 1e1c8f6:    c0 ff 64 32 00 00 	r0 = 12900 <hdl.3 : 3264 >
 1e1c8fc:    0e 60             	b[r0 + 0] = r6
 1e1c8fe:    01 70             	r1 = 0			  ## clock.c:841:12
 1e1c900:    12 70             	r2 = 1			  ## clock.c:841:12
 1e1c902:    40 08             	r0 = r4			  ## clock.c:841:12
 1e1c904:    bd 16             	call -646 <update_code_end : 1e1c680 >			  ## clock.c:841:12
 1e1c906:    2c 0a             	sp += 88			  ## clock.c:841:12
 1e1c908:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:841:5


__hw_clk_limit:
 1e1c90a:    74 01             	[--sp] = {rets, r4}			  ## clock.c:392:0
 1e1c90c:    03 70             	r3 = 0			  ## clock.c:392:0
 1e1c90e:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:396:19
 1e1c910:    14 80             	r4 += 1			  ## clock.c:397:13
 1e1c912:    c0 fe 40 40       	r4 = r0 / r4 (u)			  ## clock.c:397:13
 1e1c916:    14 f2 04 90       	if (r4 <= r1) goto 8 <__hw_clk_limit+0x18 : 1e1c922 >			  ## clock.c:397:13
 1e1c91a:    13 80             	r3 += 1			  ## clock.c:396:38
 1e1c91c:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:396:38
 1e1c91e:    24 f2 f6 9f       	if (r4 <= r2) goto -20 <__hw_clk_limit+0x4 : 1e1c90e >			  ## clock.c:396:38
 1e1c922:    c0 04             	r0 = r3.b0 (u)			  ## clock.c:402:5
 1e1c924:    54 01             	{pc, r4} = [sp++]			  ## clock.c:402:5


clock_all_limit_pre:
 1e1c926:    77 01             	[--sp] = {rets, r7-r4}			  ## clock.c:446:0
 1e1c928:    15 08             	r5 = r1			  ## clock.c:446:0
 1e1c92a:    04 08             	r4 = r0			  ## clock.c:446:0
 1e1c92c:    02 3a             	if (r5 != 0) goto 4 <clock_all_limit_pre+0xC : 1e1c932 >			  ## clock.c:446:0
 1e1c92e:    8f f3 b2 35       	call 1993572 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
 1e1c932:    c0 ff 48 32 00 00 	r0 = 12872 <hdl.23 : 3248 >			  ## clock.c:407:62
 1e1c938:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:407:38
 1e1c93a:    41 71             	r1 = 20			  ## clock.c:407:38
 1e1c93c:    c6 ff b0 0f 00 00 	r6 = 4016 <sys_clock_limit : fb0 >			  ## clock.c:433:38
 1e1c942:    80 fe 10 60       	r6 += r0 * r1			  ## clock.c:407:38
 1e1c946:    01 4c             	r1 = [r6 + 0]			  ## clock.c:407:38
 1e1c948:    72 70             	r2 = 7			  ## clock.c:407:12
 1e1c94a:    40 08             	r0 = r4			  ## clock.c:407:12
 1e1c94c:    de 17             	call -68 <__hw_clk_limit : 1e1c90a >			  ## clock.c:407:12
 1e1c94e:    10 80             	r0 += 1			  ## clock.c:453:23
 1e1c950:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:453:23
 1e1c954:    c0 ff 40 42 0f 00 	r0 = 1000000 <text_size+0xD754C : f4240 >			  ## clock.c:438:35
 1e1c95a:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:438:35
 1e1c95e:    00 fe 1e 09       	r0 = r0 * 30			  ## clock.c:438:22
 1e1c962:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## clock.c:438:47
 1e1c966:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:438:47
 1e1c96a:    c2 ff 30 32 00 00 	r2 = 12848 <hdl.19 : 3230 >			  ## clock.c:455:24
 1e1c970:    31 4c             	r1 = [r6 + 12]			  ## clock.c:433:38
 1e1c972:    08 64             	b[r2 + 0] = r0			  ## clock.c:455:24
 1e1c974:    c0 ff 4c 32 00 00 	r0 = 12876 <hdl.13 : 324c >			  ## clock.c:453:21
 1e1c97a:    0c 40             	[r0 + 0] = r4			  ## clock.c:453:21
 1e1c97c:    f2 7f             	r2 = 255			  ## clock.c:433:12
 1e1c97e:    40 08             	r0 = r4			  ## clock.c:433:12
 1e1c980:    c4 17             	call -120 <__hw_clk_limit : 1e1c90a >			  ## clock.c:433:12
 1e1c982:    c1 ff 2c 32 00 00 	r1 = 12844 <hdl.18 : 322c >			  ## clock.c:458:21
 1e1c988:    08 62             	b[r1 + 0] = r0			  ## clock.c:458:21
 1e1c98a:    c0 fe 50 14       	r1 = r4 / r5 (u)			  ## clock.c:472:27
 1e1c98e:    10 fc ff 00       	r0 = r1 + 255			  ## clock.c:474:13
 1e1c992:    05 70             	r5 = 0			  ## clock.c:473:9
 1e1c994:    60 ff ff 19 01 00 	if ((r1 & 255) == 0) goto 2 <clock_all_limit_pre+0x76 : 1e1c99c >
 1e1c99a:    05 08             	r5 = r0			  ## clock.c:473:9
 1e1c99c:    11 4c             	r1 = [r6 + 4]			  ## clock.c:412:38
 1e1c99e:    47 05             	r7 = r5.b0 (u)			  ## clock.c:473:9
 1e1c9a0:    40 08             	r0 = r4			  ## clock.c:412:12
 1e1c9a2:    b3 17             	call -154 <__hw_clk_limit : 1e1c90a >			  ## clock.c:412:12
 1e1c9a4:    07 f2 01 80       	if (r7 > r0) goto 2 <clock_all_limit_pre+0x84 : 1e1c9aa >			  ## clock.c:412:12
 1e1c9a8:    05 08             	r5 = r0			  ## clock.c:476:11
 1e1c9aa:    40 05             	r0 = r5.b0 (u)
 1e1c9ac:    c1 ff 34 32 00 00 	r1 = 12852 <hdl.14 : 3234 >			  ## clock.c:477:21
 1e1c9b2:    08 52             	h[r1 + 0] = r0			  ## clock.c:477:21
 1e1c9b4:    10 80             	r0 += 1			  ## clock.c:478:23
 1e1c9b6:    21 4c             	r1 = [r6 + 8]			  ## clock.c:417:38
 1e1c9b8:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:478:23
 1e1c9bc:    c0 ff 50 32 00 00 	r0 = 12880 <hdl.15 : 3250 >			  ## clock.c:478:21
 1e1c9c2:    0c 40             	[r0 + 0] = r4			  ## clock.c:478:21
 1e1c9c4:    72 70             	r2 = 7			  ## clock.c:417:12
 1e1c9c6:    40 08             	r0 = r4			  ## clock.c:417:12
 1e1c9c8:    a0 17             	call -192 <__hw_clk_limit : 1e1c90a >			  ## clock.c:417:12
 1e1c9ca:    c1 ff 38 32 00 00 	r1 = 12856 <hdl.16 : 3238 >			  ## clock.c:482:21
 1e1c9d0:    08 62             	b[r1 + 0] = r0			  ## clock.c:482:21
 1e1c9d2:    10 80             	r0 += 1			  ## clock.c:483:23
 1e1c9d4:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:483:23
 1e1c9d8:    c1 ff 54 32 00 00 	r1 = 12884 <hdl.17 : 3254 >			  ## clock.c:483:21
 1e1c9de:    08 42             	[r1 + 0] = r0			  ## clock.c:483:21
 1e1c9e0:    57 01             	{pc, r7-r4} = [sp++]			  ## clock.c:489:1


voltage_by_freq_post:
 1e1c9e2:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1271:0
 1e1c9e4:    c0 ff 44 32 00 00 	r0 = 12868 <hdl.24 : 3244 >			  ## clock.c:1271:0
 1e1c9ea:    02 60             	r2 = b[r0 + 0] (u)			  ## clock.c:1271:0
 1e1c9ec:    c0 ff 96 18 1a 00 	r0 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## clock.c:1271:0
 1e1c9f2:    51 60             	r1 = b[r0 + 5] (u)			  ## clock.c:1271:0
 1e1c9f4:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## clock.c:1271:0
 1e1c9f8:    21 24             	if (r2 == 0) goto 66 <voltage_by_freq_post+0x5A : 1e1ca3c >			  ## clock.c:1272:9
 1e1c9fa:    c2 ff 48 32 00 00 	r2 = 12872 <hdl.23 : 3248 >			  ## clock.c:1273:9
 1e1ca00:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1273:9
 1e1ca02:    03 fe 03 39       	r3 = r3 * 3			  ## clock.c:1273:9
 1e1ca06:    c4 ff 8c 0f 00 00 	r4 = 3980 <update_data_start : f8c >			  ## clock.c:1274:9
 1e1ca0c:    03 fa 00 34       	r3 = b[r3+r4] (u)			  ## clock.c:1273:9
 1e1ca10:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1273:9
 1e1ca14:    51 b6             	r1 |= r3			  ## clock.c:1273:9
 1e1ca16:    59 60             	b[r0 + 5] = r1			  ## clock.c:1273:9
 1e1ca18:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1274:9
 1e1ca1a:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1274:9
 1e1ca1c:    35 70             	r5 = 3			  ## clock.c:1274:9
 1e1ca1e:    46 08             	r6 = r4			  ## clock.c:1274:9
 1e1ca20:    80 fe 50 63       	r6 += r3 * r5			  ## clock.c:1274:9
 1e1ca24:    13 6c             	r3 = b[r6 + 1] (u)			  ## clock.c:1274:9
 1e1ca26:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1274:9
 1e1ca2a:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1274:9
 1e1ca2e:    51 b6             	r1 |= r3			  ## clock.c:1274:9
 1e1ca30:    69 60             	b[r0 + 6] = r1			  ## clock.c:1274:9
 1e1ca32:    01 64             	r1 = b[r2 + 0] (u)			  ## clock.c:1275:9
 1e1ca34:    80 fe 50 41       	r4 += r1 * r5			  ## clock.c:1275:9
 1e1ca38:    21 98             	r1 = r4 + 2			  ## clock.c:1275:9
 1e1ca3a:    08 18             	goto 16 <voltage_by_freq_post+0x6A : 1e1ca4c >			  ## clock.c:1275:9
 1e1ca3c:    59 60             	b[r0 + 5] = r1			  ## clock.c:1277:9
 1e1ca3e:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1278:9
 1e1ca40:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1278:9
 1e1ca44:    69 60             	b[r0 + 6] = r1			  ## clock.c:1278:9
 1e1ca46:    c1 ff 9e 0f 00 00 	r1 = 3998 <sysvdd_vdc13_table : f9e >			  ## clock.c:1278:9
 1e1ca4c:    02 60             	r2 = b[r0 + 0] (u)
 1e1ca4e:    01 62             	r1 = b[r1 + 0] (u)
 1e1ca50:    22 fd f8 29       	r2 = r2 & 248
 1e1ca54:    21 fd 07 19       	r1 = r1 & 7
 1e1ca58:    51 b4             	r1 |= r2
 1e1ca5a:    09 60             	b[r0 + 0] = r1
 1e1ca5c:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1281:1


__hw_pll_all_oe:
 1e1ca5e:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:730:0
 1e1ca60:    c0 ff 0c 47 1e 00 	r0 = 1984268 <uECC_vli_cmp_unsafe+0xDD710 : 1e470c >			  ## clock.c:730:0
 1e1ca66:    00 f4 02 0a       	[r0 + 0] |= 512			  ## clock.c:731:5
 1e1ca6a:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:732:5
 1e1ca6e:    05 fc 00 b9       	r5 = r0 + -18176
 1e1ca72:    11 4a             	r1 = [r5 + 4]			  ## clock.c:740:13
 1e1ca74:    21 fd 07 19       	r1 = r1 & 7			  ## clock.c:740:13
 1e1ca78:    12 fc ff ff       	r2 = r1 + -1			  ## clock.c:740:5
 1e1ca7c:    01 70             	r1 = 0			  ## clock.c:740:5
 1e1ca7e:    32 e0 04 80       	if (r2 > 3) goto 8 <.GJTIE216_0_0_+0x2 : 1e1ca8a >			  ## clock.c:740:5
 1e1ca82:    a2 00             	tbb [r2]


.GJTIS216_0_0_:
 1e1ca84:    02     < 2 : 0x2 >
 1e1ca85:    05     < 5 : 0x5 >
 1e1ca86:    09     < 9 : 0x9 >
 1e1ca87:    0c     < 12 : 0xC >
 1e1ca88:    11 70             	r1 = 1
 1e1ca8a:    04 70             	r4 = 0
 1e1ca8c:    08 18             	goto 16 <.GJTIE216_0_0_+0x16 : 1e1ca9e >
 1e1ca8e:    12 70             	r2 = 1
 1e1ca90:    04 70             	r4 = 0
 1e1ca92:    03 70             	r3 = 0
 1e1ca94:    06 18             	goto 12 <.GJTIE216_0_0_+0x1A : 1e1caa2 >
 1e1ca96:    13 70             	r3 = 1
 1e1ca98:    04 70             	r4 = 0
 1e1ca9a:    02 18             	goto 4 <.GJTIE216_0_0_+0x18 : 1e1caa0 >
 1e1ca9c:    14 70             	r4 = 1
 1e1ca9e:    03 70             	r3 = 0
 1e1caa0:    02 70             	r2 = 0
 1e1caa2:    05 4a             	r5 = [r5 + 0]			  ## clock.c:760:13
 1e1caa4:    85 fd 20 55       	r5 = uextra(r5, p:4, l:5)			  ## clock.c:760:13
 1e1caa8:    f5 8f             	r5 += -1			  ## clock.c:760:5
 1e1caaa:    35 e1 12 80       	if (r5 > 19) goto 36 <.GJTIE216_1_1_+0xE : 1e1cad2 >			  ## clock.c:760:5
 1e1caae:    a5 00             	tbb [r5]


.GJTIS216_1_1_:
 1e1cab0:    0a     < 10 : 0xA >
 1e1cab1:    0c     < 12 : 0xC >
 1e1cab2:    0e     < 14 : 0xE >
 1e1cab3:    10     < 16 : 0x10 >
 1e1cab4:    11     < 17 : 0x11 >
 1e1cab5:    11     < 17 : 0x11 >
 1e1cab6:    11     < 17 : 0x11 >
 1e1cab7:    11     < 17 : 0x11 >
 1e1cab8:    11     < 17 : 0x11 >
 1e1cab9:    11     < 17 : 0x11 >
 1e1caba:    11     < 17 : 0x11 >
 1e1cabb:    11     < 17 : 0x11 >
 1e1cabc:    11     < 17 : 0x11 >
 1e1cabd:    11     < 17 : 0x11 >
 1e1cabe:    11     < 17 : 0x11 >
 1e1cabf:    11     < 17 : 0x11 >
 1e1cac0:    0a     < 10 : 0xA >
 1e1cac1:    0c     < 12 : 0xC >
 1e1cac2:    0e     < 14 : 0xE >
 1e1cac3:    10     < 16 : 0x10 >
 1e1cac4:    11 70             	r1 = 1
 1e1cac6:    05 18             	goto 10 <.GJTIE216_1_1_+0xE : 1e1cad2 >
 1e1cac8:    12 70             	r2 = 1
 1e1caca:    03 18             	goto 6 <.GJTIE216_1_1_+0xE : 1e1cad2 >
 1e1cacc:    13 70             	r3 = 1
 1e1cace:    01 18             	goto 2 <.GJTIE216_1_1_+0xE : 1e1cad2 >
 1e1cad0:    14 70             	r4 = 1
 1e1cad2:    05 40             	r5 = [r0 + 0]			  ## clock.c:785:5
 1e1cad4:    f5 b0             	r5 &= 4294967293			  ## clock.c:785:5
 1e1cad6:    c1 fd 08 54       	r5 <= insert(r4, p:1, l:1)			  ## clock.c:785:5
 1e1cada:    0d 40             	[r0 + 0] = r5			  ## clock.c:785:5
 1e1cadc:    04 40             	r4 = [r0 + 0]			  ## clock.c:786:5
 1e1cade:    74 b1             	r4 &= 4294967291			  ## clock.c:786:5
 1e1cae0:    c1 fd 10 43       	r4 <= insert(r3, p:2, l:1)			  ## clock.c:786:5
 1e1cae4:    0c 40             	[r0 + 0] = r4			  ## clock.c:786:5
 1e1cae6:    03 40             	r3 = [r0 + 0]			  ## clock.c:787:5
 1e1cae8:    f3 b1             	r3 &= 4294967287			  ## clock.c:787:5
 1e1caea:    c1 fd 18 32       	r3 <= insert(r2, p:3, l:1)			  ## clock.c:787:5
 1e1caee:    0b 40             	[r0 + 0] = r3			  ## clock.c:787:5
 1e1caf0:    02 40             	r2 = [r0 + 0]			  ## clock.c:788:5
 1e1caf2:    72 b2             	r2 &= 4294967279			  ## clock.c:788:5
 1e1caf4:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## clock.c:788:5
 1e1caf8:    0a 40             	[r0 + 0] = r2			  ## clock.c:788:5
 1e1cafa:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:789:1


clock_all_limit_post:
 1e1cafc:    34 00             	[--sp] = rets			  ## clock.c:587:0
 1e1cafe:    c0 ff 30 32 00 00 	r0 = 12848 <hdl.19 : 3230 >			  ## clock.c:591:51
 1e1cb04:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:591:9
 1e1cb06:    c0 ff 2c 32 00 00 	r0 = 12844 <hdl.18 : 322c >			  ## clock.c:591:34
 1e1cb0c:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:591:9
 1e1cb0e:    8f f3 9c 38       	call 1995064 <__hw_spi_clk_div : 3c4a >			  ## clock.c:591:9
 1e1cb12:    c0 ff 08 00 1e 00 	r0 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## clock.c:591:9
 1e1cb18:    01 40             	r1 = [r0 + 0]			  ## clock.c:592:9
 1e1cb1a:    c2 ff 34 32 00 00 	r2 = 12852 <hdl.14 : 3234 >			  ## clock.c:592:9
 1e1cb20:    02 54             	r2 = h[r2 + 0] (u)			  ## clock.c:592:9
 1e1cb22:    c8 fd 00 12       	r1 <= insert(r2, p:0, l:8)			  ## clock.c:592:9
 1e1cb26:    09 40             	[r0 + 0] = r1			  ## clock.c:592:9
 1e1cb28:    01 40             	r1 = [r0 + 0]			  ## clock.c:593:9
 1e1cb2a:    c2 ff 38 32 00 00 	r2 = 12856 <hdl.16 : 3238 >			  ## clock.c:593:9
 1e1cb30:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:593:9
 1e1cb32:    31 fd 07 1a       	r1 = r1 & 4294965503			  ## clock.c:593:9
 1e1cb36:    22 fd 07 29       	r2 = r2 & 7			  ## clock.c:593:9
 1e1cb3a:    c3 fd 40 12       	r1 <= insert(r2, p:8, l:3)			  ## clock.c:593:9
 1e1cb3e:    09 40             	[r0 + 0] = r1			  ## clock.c:593:9
 1e1cb40:    30 00             	pc = [sp++]			  ## clock.c:596:1


clk_set:
 1e1cb42:    78 01             	[--sp] = {rets, r8-r4}			  ## clock.c:2273:0
 1e1cb44:    c1 ff 09 23 e1 01 	r1 = 31531785 <update_target_end+0x20D9 : 1e12309 >			  ## clock.c:2285:10
 1e1cb4a:    97 f3 d3 51       	call 3056550 <strcmp : 106ef4 >			  ## clock.c:2285:10
 1e1cb4e:    66 30             	if (r0 != 0) goto 204 <clk_set+0xDA : 1e1cc1c >			  ## clock.c:2285:10
 1e1cb50:    c8 ff 68 32 00 00 	r8 = 12904 <clk_set.last_clk : 3268 >
 1e1cb56:    00 f9 00 80       	r0 = b[r8 + 0] (u)
 1e1cb5a:    60 30             	if (r0 != 0) goto 192 <clk_set+0xDA : 1e1cc1c >
 1e1cb5c:    c6 ff 28 33 e1 01 	r6 = 31535912 <storage_device_end : 1e13328 >
 1e1cb62:    c7 ff 08 33 e1 01 	r7 = 31535880 <clock_uart : 1e13308 >
 1e1cb68:    67 f2 06 20       	if (r7 >= r6) goto 12 <clk_set+0x36 : 1e1cb78 >
 1e1cb6c:    74 08             	r4 = r7
 1e1cb6e:    40 f6 08 40       	r0 = [r4 ++= 8]			  ## clock.c:1519:12
 1e1cb72:    80 00             	call r0			  ## clock.c:1519:9
 1e1cb74:    64 f2 fb 3f       	if (r4 < r6) goto -10 <clk_set+0x2C : 1e1cb6e >
 1e1cb78:    c5 ff 28 32 00 00 	r5 = 12840 <hdl.2.371 : 3228 >
 1e1cb7e:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1522:17
 1e1cb80:    43 20             	if (r0 == 0) goto 134 <clk_set+0xC6 : 1e1cc08 >			  ## clock.c:1522:17
 1e1cb82:    c0 ff 00 6c dc 02 	r0 = 48000000 <uECC_vli_cmp_unsafe+0xCBFC04 : dc6c00 >			  ## clock.c:1364:17
 1e1cb88:    01 16             	call -1022 <__hw_hsb_upper_bound : 1e1c78c >			  ## clock.c:1364:17
 1e1cb8a:    04 08             	r4 = r0			  ## clock.c:1364:17
 1e1cb8c:    f4 ef 3c 00       	if (r4 == -1) goto 120 <clk_set+0xC6 : 1e1cc08 >
 1e1cb90:    0f 16             	call -994 <voltage_by_freq_pre : 1e1c7b0 >			  ## clock.c:1370:5
 1e1cb92:    40 08             	r0 = r4			  ## clock.c:1374:27
 1e1cb94:    21 16             	call -958 <pll_clock_by_all_limit : 1e1c7d8 >			  ## clock.c:1374:27
 1e1cb96:    08 4a             	[r5 + 0] = r0			  ## clock.c:1374:25
 1e1cb98:    f0 ef 36 00       	if (r0 == -1) goto 108 <clk_set+0xC6 : 1e1cc08 >			  ## clock.c:1374:25
 1e1cb9c:    43 16             	call -890 <__hw_pll_run_pre : 1e1c824 >			  ## clock.c:1382:27
 1e1cb9e:    08 4a             	[r5 + 0] = r0			  ## clock.c:1382:25
 1e1cba0:    f0 ef 32 00       	if (r0 == -1) goto 100 <clk_set+0xC6 : 1e1cc08 >			  ## clock.c:1382:25
 1e1cba4:    41 08             	r1 = r4			  ## clock.c:1388:5
 1e1cba6:    bf 16             	call -642 <clock_all_limit_pre : 1e1c926 >			  ## clock.c:1388:5
 1e1cba8:    97 f3 f8 50       	call 3056112 <local_irq_disable : 106d9c >			  ## clock.c:1390:5
 1e1cbac:    08 00             	csync			  ## clock.c:1390:5
 1e1cbae:    c4 ff 0c 00 1e 00 	r4 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## clock.c:1390:5
 1e1cbb4:    00 48             	r0 = [r4 + 0]			  ## clock.c:1392:5
 1e1cbb6:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1392:5
 1e1cbba:    08 48             	[r4 + 0] = r0			  ## clock.c:1392:5
 1e1cbbc:    10 48             	r0 = [r4 + 4]			  ## clock.c:1400:5
 1e1cbbe:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1400:5
 1e1cbc2:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1400:5
 1e1cbc6:    18 48             	[r4 + 4] = r0			  ## clock.c:1400:5
 1e1cbc8:    08 00             	csync			  ## clock.c:1400:5
 1e1cbca:    0b 17             	call -490 <voltage_by_freq_post : 1e1c9e2 >			  ## clock.c:1402:5
 1e1cbcc:    00 4a             	r0 = [r5 + 0]			  ## clock.c:959:17
 1e1cbce:    f0 ef 11 00       	if (r0 == -1) goto 34 <clk_set+0xB2 : 1e1cbf4 >			  ## clock.c:959:17
 1e1cbd2:    10 48             	r0 = [r4 + 4]			  ## clock.c:963:5
 1e1cbd4:    c1 ff 3c 32 00 00 	r1 = 12860 <hdl.0.372 : 323c >			  ## clock.c:963:5
 1e1cbda:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:963:5
 1e1cbdc:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:963:5
 1e1cbe0:    18 48             	[r4 + 4] = r0			  ## clock.c:963:5
 1e1cbe2:    10 48             	r0 = [r4 + 4]			  ## clock.c:964:5
 1e1cbe4:    c1 ff 40 32 00 00 	r1 = 12864 <hdl.1.373 : 3240 >			  ## clock.c:964:5
 1e1cbea:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:964:5
 1e1cbec:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:964:5
 1e1cbf0:    18 48             	[r4 + 4] = r0			  ## clock.c:964:5
 1e1cbf2:    35 17             	call -406 <__hw_pll_all_oe : 1e1ca5e >			  ## clock.c:966:5
 1e1cbf4:    83 17             	call -250 <clock_all_limit_post : 1e1cafc >			  ## clock.c:1406:5
 1e1cbf6:    10 48             	r0 = [r4 + 4]			  ## clock.c:1408:5
 1e1cbf8:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1408:5
 1e1cbfc:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1408:5
 1e1cc00:    18 48             	[r4 + 4] = r0			  ## clock.c:1408:5
 1e1cc02:    08 00             	csync			  ## clock.c:1408:5
 1e1cc04:    97 f3 c8 50       	call 3056016 <local_irq_enable : 106d98 >			  ## clock.c:1410:5
 1e1cc08:    67 f2 05 20       	if (r7 >= r6) goto 10 <clk_set+0xD4 : 1e1cc16 >
 1e1cc0c:    10 4e             	r0 = [r7 + 4]			  ## clock.c:1527:12
 1e1cc0e:    80 00             	call r0			  ## clock.c:1527:9
 1e1cc10:    87 80             	r7 += 8			  ## clock.c:1526:5
 1e1cc12:    67 f2 fb 3f       	if (r7 < r6) goto -10 <clk_set+0xCA : 1e1cc0c >
 1e1cc16:    10 70             	r0 = 1
 1e1cc18:    10 f9 00 80       	b[r8 + 0] = r0
 1e1cc1c:    58 01             	{pc, r8-r4} = [sp++]


clk_voltage_init:
 1e1cc1e:    c0 ff 44 32 00 00 	r0 = 12868 <hdl.24 : 3244 >			  ## clock.c:2422:0
 1e1cc24:    11 70             	r1 = 1			  ## clock.c:2422:0
 1e1cc26:    09 60             	b[r0 + 0] = r1			  ## clock.c:2422:0
 1e1cc28:    20 00             	rts			  ## clock.c:2430:1


clk_early_init:
 1e1cc2a:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:2359:0
 1e1cc2c:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## clock.c:1567:22
 1e1cc32:    00 40             	r0 = [r0 + 0]			  ## clock.c:1567:22
 1e1cc34:    00 d2             	r0 = r0 >> 8			  ## clock.c:1567:36
 1e1cc36:    71 90             	r1 = r0 + 7			  ## clock.c:1570:5
 1e1cc38:    83 fd 08 01       	r0 = uextra(r1, p:1, l:3)			  ## clock.c:1570:5
 1e1cc3c:    d9 fd 18 01       	r0 <= insert(r1, p:3, l:25)			  ## clock.c:1570:5
 1e1cc40:    a4 fd 00 10       	r1 = sextra(r0, p:0, l:4)			  ## clock.c:1570:5
 1e1cc44:    01 e0 14 b0       	ifs (r1 < 0) goto 40 <clk_early_init+0x46 : 1e1cc70 >			  ## clock.c:1570:5
 1e1cc48:    20 fd 0f 09       	r0 = r0 & 15
 1e1cc4c:    11 70             	r1 = 1
 1e1cc4e:    f8 fd 00 01       	r0 = r1 << r0
 1e1cc52:    60 ff e1 09 0c 00 	if ((r0 & 225) == 0) goto 24 <clk_early_init+0x46 : 1e1cc70 >
 1e1cc58:    00 70             	r0 = 0
 1e1cc5a:    c1 ff b0 0f 00 00 	r1 = 4016 <sys_clock_limit : fb0 >
 1e1cc60:    c2 ff 80 f0 fa 02 	r2 = 50000000 <uECC_vli_cmp_unsafe+0xEA8084 : faf080 >
 1e1cc66:    43 b0             	r3 = r0 + r1			  ## clock.c:1603:47
 1e1cc68:    40 81             	r0 += 20			  ## clock.c:1602:26
 1e1cc6a:    3a 46             	[r3 + 12] = r2			  ## clock.c:1603:47
 1e1cc6c:    80 e7 fb 1f       	if (r0 != 120) goto -10 <clk_early_init+0x3C : 1e1cc66 >			  ## clock.c:1603:47
 1e1cc70:    c0 ff 1c 32 00 00 	r0 = 12828 <hdl.27 : 321c >			  ## clock.c:1614:30
 1e1cc76:    c0 f4 00 09       	[r0 + 0] = 0			  ## clock.c:1614:30
 1e1cc7a:    c5 ff 0c 00 1e 00 	r5 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >
 1e1cc80:    00 4a             	r0 = [r5 + 0]			  ## clock.c:982:9
 1e1cc82:    30 fd 0e 09       	r0 = r0 & 4294967281			  ## clock.c:982:9
 1e1cc86:    08 4a             	[r5 + 0] = r0			  ## clock.c:982:9
 1e1cc88:    c0 ff 24 32 00 00 	r0 = 12836 <hdl.11 : 3224 >			  ## clock.c:982:9
 1e1cc8e:    11 70             	r1 = 1			  ## clock.c:982:9
 1e1cc90:    09 60             	b[r0 + 0] = r1			  ## clock.c:982:9
 1e1cc92:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## clock.c:1287:16
 1e1cc98:    79 15             	call -1294 <__hw_hsb_upper_bound : 1e1c78c >			  ## clock.c:1287:16
 1e1cc9a:    04 08             	r4 = r0			  ## clock.c:1287:16
 1e1cc9c:    c6 ff 28 32 00 00 	r6 = 12840 <hdl.2.371 : 3228 >
 1e1cca2:    f4 ef 0c 00       	if (r4 == -1) goto 24 <clk_early_init+0x94 : 1e1ccbe >
 1e1cca6:    84 15             	call -1272 <voltage_by_freq_pre : 1e1c7b0 >			  ## clock.c:1293:5
 1e1cca8:    40 08             	r0 = r4			  ## clock.c:1297:27
 1e1ccaa:    96 15             	call -1236 <pll_clock_by_all_limit : 1e1c7d8 >			  ## clock.c:1297:27
 1e1ccac:    08 4c             	[r6 + 0] = r0			  ## clock.c:1297:25
 1e1ccae:    f0 ef 06 00       	if (r0 == -1) goto 12 <clk_early_init+0x94 : 1e1ccbe >			  ## clock.c:1297:25
 1e1ccb2:    b8 15             	call -1168 <__hw_pll_run_pre : 1e1c824 >			  ## clock.c:1305:27
 1e1ccb4:    08 4c             	[r6 + 0] = r0			  ## clock.c:1305:25
 1e1ccb6:    f0 ef 02 00       	if (r0 == -1) goto 4 <clk_early_init+0x94 : 1e1ccbe >			  ## clock.c:1305:25
 1e1ccba:    41 08             	r1 = r4			  ## clock.c:1311:5
 1e1ccbc:    34 16             	call -920 <clock_all_limit_pre : 1e1c926 >			  ## clock.c:1311:5
 1e1ccbe:    97 f3 6d 50       	call 3055834 <local_irq_disable : 106d9c >			  ## clock.c:1473:5
 1e1ccc2:    08 00             	csync			  ## clock.c:1473:5
 1e1ccc4:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1475:5
 1e1ccc6:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1475:5
 1e1ccca:    08 4a             	[r5 + 0] = r0			  ## clock.c:1475:5
 1e1cccc:    00 f4 01 59       	[r5 + 0] |= 1			  ## clock.c:340:5
 1e1ccd0:    40 76             	r0 = 100			  ## clock.c:341:5
 1e1ccd2:    8f f3 be 3a       	call 1996156 <delay : 4252 >			  ## clock.c:341:5
 1e1ccd6:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1480:5
 1e1ccd8:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1480:5
 1e1ccdc:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1480:5
 1e1cce0:    18 4a             	[r5 + 4] = r0			  ## clock.c:1480:5
 1e1cce2:    08 00             	csync			  ## clock.c:1480:5
 1e1cce4:    7e 16             	call -772 <voltage_by_freq_post : 1e1c9e2 >			  ## clock.c:1482:5
 1e1cce6:    54 fc f4 46       	r4 = r5 + 18164			  ## clock.c:1482:5
 1e1ccea:    40 48             	r0 = [r4 + 16]			  ## clock.c:1330:9
 1e1ccec:    30 fd 60 09       	r0 = r0 & 4294967199			  ## clock.c:1330:9
 1e1ccf0:    48 48             	[r4 + 16] = r0			  ## clock.c:1330:9
 1e1ccf2:    00 48             	r0 = [r4 + 0]			  ## clock.c:852:5
 1e1ccf4:    30 fd 18 09       	r0 = r0 & 4294967271			  ## clock.c:852:5
 1e1ccf8:    90 b1             	r0 |= 8			  ## clock.c:852:5
 1e1ccfa:    08 48             	[r4 + 0] = r0			  ## clock.c:852:5
 1e1ccfc:    00 48             	r0 = [r4 + 0]			  ## clock.c:853:5
 1e1ccfe:    30 fd e0 09       	r0 = r0 & 4294967071			  ## clock.c:853:5
 1e1cd02:    90 b3             	r0 |= 128			  ## clock.c:853:5
 1e1cd04:    08 48             	[r4 + 0] = r0			  ## clock.c:853:5
 1e1cd06:    00 48             	r0 = [r4 + 0]			  ## clock.c:854:5
 1e1cd08:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:854:5
 1e1cd0c:    00 fd 05 0a       	r0 = r0 | 1280			  ## clock.c:854:5
 1e1cd10:    08 48             	[r4 + 0] = r0			  ## clock.c:854:5
 1e1cd12:    00 48             	r0 = [r4 + 0]			  ## clock.c:856:5
 1e1cd14:    70 ba             	r0 &= 4293918719			  ## clock.c:856:5
 1e1cd16:    08 48             	[r4 + 0] = r0			  ## clock.c:856:5
 1e1cd18:    00 48             	r0 = [r4 + 0]			  ## clock.c:857:5
 1e1cd1a:    30 fd 60 02       	r0 = r0 & 4294852607			  ## clock.c:857:5
 1e1cd1e:    10 b8             	r0 |= 65536			  ## clock.c:857:5
 1e1cd20:    08 48             	[r4 + 0] = r0			  ## clock.c:857:5
 1e1cd22:    00 48             	r0 = [r4 + 0]			  ## clock.c:858:5
 1e1cd24:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## clock.c:858:5
 1e1cd28:    90 b9             	r0 |= 524288			  ## clock.c:858:5
 1e1cd2a:    08 48             	[r4 + 0] = r0			  ## clock.c:858:5
 1e1cd2c:    00 48             	r0 = [r4 + 0]			  ## clock.c:859:5
 1e1cd2e:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## clock.c:859:5
 1e1cd32:    00 fd 18 0a       	r0 = r0 | 6144			  ## clock.c:859:5
 1e1cd36:    08 48             	[r4 + 0] = r0			  ## clock.c:859:5
 1e1cd38:    00 48             	r0 = [r4 + 0]			  ## clock.c:371:5
 1e1cd3a:    70 b0             	r0 &= 4294967294			  ## clock.c:371:5
 1e1cd3c:    08 48             	[r4 + 0] = r0			  ## clock.c:371:5
 1e1cd3e:    00 48             	r0 = [r4 + 0]			  ## clock.c:372:5
 1e1cd40:    f0 b0             	r0 &= 4294967293			  ## clock.c:372:5
 1e1cd42:    08 48             	[r4 + 0] = r0			  ## clock.c:372:5
 1e1cd44:    10 48             	r0 = [r4 + 4]			  ## clock.c:372:5
 1e1cd46:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:372:5
 1e1cd4a:    90 b5             	r0 |= 2048			  ## clock.c:372:5
 1e1cd4c:    18 48             	[r4 + 4] = r0			  ## clock.c:372:5
 1e1cd4e:    10 48             	r0 = [r4 + 4]			  ## clock.c:873:5
 1e1cd50:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## clock.c:873:5
 1e1cd54:    18 48             	[r4 + 4] = r0			  ## clock.c:873:5
 1e1cd56:    20 48             	r0 = [r4 + 8]			  ## clock.c:874:5
 1e1cd58:    c1 ff 20 32 00 00 	r1 = 12832 <hdl.5 : 3220 >			  ## clock.c:874:5
 1e1cd5e:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:874:5
 1e1cd60:    c2 70             	r2 = 12			  ## clock.c:874:5
 1e1cd62:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## clock.c:874:5
 1e1cd66:    11 fc fe 0f       	r1 = r1 + 4094			  ## clock.c:874:5
 1e1cd6a:    cc fd 00 01       	r0 <= insert(r1, p:0, l:12)			  ## clock.c:874:5
 1e1cd6e:    28 48             	[r4 + 8] = r0			  ## clock.c:874:5
 1e1cd70:    00 4c             	r0 = [r6 + 0]			  ## clock.c:701:17
 1e1cd72:    f0 ef 23 00       	if (r0 == -1) goto 70 <clk_early_init+0x192 : 1e1cdbc >			  ## clock.c:701:17
 1e1cd76:    10 4a             	r0 = [r5 + 4]			  ## clock.c:705:5
 1e1cd78:    c1 ff 3c 32 00 00 	r1 = 12860 <hdl.0.372 : 323c >			  ## clock.c:705:5
 1e1cd7e:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:705:5
 1e1cd80:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:705:5
 1e1cd84:    18 4a             	[r5 + 4] = r0			  ## clock.c:705:5
 1e1cd86:    10 4a             	r0 = [r5 + 4]			  ## clock.c:706:5
 1e1cd88:    c1 ff 40 32 00 00 	r1 = 12864 <hdl.1.373 : 3240 >			  ## clock.c:706:5
 1e1cd8e:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:706:5
 1e1cd90:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:706:5
 1e1cd94:    18 4a             	[r5 + 4] = r0			  ## clock.c:706:5
 1e1cd96:    00 4a             	r0 = [r5 + 0]			  ## clock.c:720:5
 1e1cd98:    70 b5             	r0 &= 4294966271			  ## clock.c:720:5
 1e1cd9a:    08 4a             	[r5 + 0] = r0			  ## clock.c:720:5
 1e1cd9c:    00 4a             	r0 = [r5 + 0]			  ## clock.c:722:5
 1e1cd9e:    f0 b4             	r0 &= 4294966783			  ## clock.c:722:5
 1e1cda0:    08 4a             	[r5 + 0] = r0			  ## clock.c:722:5
 1e1cda2:    00 4a             	r0 = [r5 + 0]			  ## clock.c:723:5
 1e1cda4:    c1 ff 64 32 00 00 	r1 = 12900 <hdl.3 : 3264 >			  ## clock.c:723:5
 1e1cdaa:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:723:5
 1e1cdac:    02 fb 0f fe       	r2 = -497 <bank_code_load_addr+0x1E11FB : 1fffe0f >			  ## clock.c:723:5
 1e1cdb0:    50 b5             	r0 &= r2			  ## clock.c:723:5
 1e1cdb2:    21 fd 1f 19       	r1 = r1 & 31			  ## clock.c:723:5
 1e1cdb6:    c5 fd 20 01       	r0 <= insert(r1, p:4, l:5)			  ## clock.c:723:5
 1e1cdba:    08 4a             	[r5 + 0] = r0			  ## clock.c:723:5
 1e1cdbc:    50 16             	call -864 <__hw_pll_all_oe : 1e1ca5e >			  ## clock.c:881:5
 1e1cdbe:    00 f4 01 49       	[r4 + 0] |= 1			  ## clock.c:362:5
 1e1cdc2:    10 70             	r0 = 1			  ## clock.c:363:5
 1e1cdc4:    8f f3 45 3a       	call 1995914 <delay : 4252 >			  ## clock.c:363:5
 1e1cdc8:    00 f4 02 49       	[r4 + 0] |= 2			  ## clock.c:364:5
 1e1cdcc:    40 71             	r0 = 20			  ## clock.c:365:5
 1e1cdce:    8f f3 40 3a       	call 1995904 <delay : 4252 >			  ## clock.c:365:5
 1e1cdd2:    94 16             	call -728 <clock_all_limit_post : 1e1cafc >			  ## clock.c:1356:5
 1e1cdd4:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1358:5
 1e1cdd6:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1358:5
 1e1cdda:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1358:5
 1e1cdde:    18 4a             	[r5 + 4] = r0			  ## clock.c:1358:5
 1e1cde0:    08 00             	csync			  ## clock.c:1358:5
 1e1cde2:    97 f3 d9 4f       	call 3055538 <local_irq_enable : 106d98 >			  ## clock.c:1507:5
 1e1cde6:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1652:5
 1e1cde8:    30 fd 03 0a       	r0 = r0 & 4294966527			  ## clock.c:1652:5
 1e1cdec:    28 4a             	[r5 + 8] = r0			  ## clock.c:1652:5
 1e1cdee:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1654:5
 1e1cdf0:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:1654:5
 1e1cdf4:    28 4a             	[r5 + 8] = r0			  ## clock.c:1654:5
 1e1cdf6:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1657:5
 1e1cdf8:    f0 b5             	r0 &= 4294965247			  ## clock.c:1657:5
 1e1cdfa:    18 4a             	[r5 + 4] = r0			  ## clock.c:1657:5
 1e1cdfc:    c0 ff 17 18 1a 00 	r0 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## clock.c:1657:5
 1e1ce02:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:2367:5
 1e1ce04:    71 b0             	r1 &= 4294967294			  ## clock.c:2367:5
 1e1ce06:    09 60             	b[r0 + 0] = r1			  ## clock.c:2367:5
 1e1ce08:    40 fc 14 0d       	r0 = r4 + 3348			  ## clock.c:2369:20
 1e1ce0c:    00 f4 0f 09       	[r0 + 0] |= 15			  ## clock.c:2369:20
 1e1ce10:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:2369:20


driver_code_end:
 1e1ce12:    00 00             	nop

Disassembly of section .mmu_tlb:
report_mmu_tlb_begin:
       0:    00 00 00 00     "\0\0\0\0"
       4:    00 00 00 00     "\0\0\0\0"
       8:    00 00 00 00     "\0\0\0\0"
       c:    00 00 00 00     "\0\0\0\0"
      10:    00 00 00 00     "\0\0\0\0"
      14:    00 00 00 00     "\0\0\0\0"
      18:    00 00 00 00     "\0\0\0\0"
      1c:    00 00 00 00     "\0\0\0\0"
      20:    00 00 00 00     "\0\0\0\0"
      24:    00 00 00 00     "\0\0\0\0"
      28:    00 00 00 00     "\0\0\0\0"
      2c:    00 00 00 00     "\0\0\0\0"
      30:    00 00 00 00     "\0\0\0\0"
      34:    00 00 00 00     "\0\0\0\0"
      38:    00 00 00 00     "\0\0\0\0"
      3c:    00 00 00 00     "\0\0\0\0"
      40:    00 00 00 00     "\0\0\0\0"
      44:    00 00 00 00     "\0\0\0\0"
      48:    00 00 00 00     "\0\0\0\0"
      4c:    00 00 00 00     "\0\0\0\0"
      50:    00 00 00 00     "\0\0\0\0"
      54:    00 00 00 00     "\0\0\0\0"
      58:    00 00 00 00     "\0\0\0\0"
      5c:    00 00 00 00     "\0\0\0\0"
      60:    00 00 00 00     "\0\0\0\0"
      64:    00 00 00 00     "\0\0\0\0"
      68:    00 00 00 00     "\0\0\0\0"
      6c:    00 00 00 00     "\0\0\0\0"
      70:    00 00 00 00     "\0\0\0\0"
      74:    00 00 00 00     "\0\0\0\0"
      78:    00 00 00 00     "\0\0\0\0"
      7c:    00 00 00 00     "\0\0\0\0"
      80:    00 00 00 00     "\0\0\0\0"
      84:    00 00 00 00     "\0\0\0\0"
      88:    00 00 00 00     "\0\0\0\0"
      8c:    00 00 00 00     "\0\0\0\0"
      90:    00 00 00 00     "\0\0\0\0"
      94:    00 00 00 00     "\0\0\0\0"
      98:    00 00 00 00     "\0\0\0\0"
      9c:    00 00 00 00     "\0\0\0\0"
      a0:    00 00 00 00     "\0\0\0\0"
      a4:    00 00 00 00     "\0\0\0\0"
      a8:    00 00 00 00     "\0\0\0\0"
      ac:    00 00 00 00     "\0\0\0\0"
      b0:    00 00 00 00     "\0\0\0\0"
      b4:    00 00 00 00     "\0\0\0\0"
      b8:    00 00 00 00     "\0\0\0\0"
      bc:    00 00 00 00     "\0\0\0\0"
      c0:    00 00 00 00     "\0\0\0\0"
      c4:    00 00 00 00     "\0\0\0\0"
      c8:    00 00 00 00     "\0\0\0\0"
      cc:    00 00 00 00     "\0\0\0\0"
      d0:    00 00 00 00     "\0\0\0\0"
      d4:    00 00 00 00     "\0\0\0\0"
      d8:    00 00 00 00     "\0\0\0\0"
      dc:    00 00 00 00     "\0\0\0\0"
      e0:    00 00 00 00     "\0\0\0\0"
      e4:    00 00 00 00     "\0\0\0\0"
      e8:    00 00 00 00     "\0\0\0\0"
      ec:    00 00 00 00     "\0\0\0\0"
      f0:    00 00 00 00     "\0\0\0\0"
      f4:    00 00 00 00     "\0\0\0\0"
      f8:    00 00 00 00     "\0\0\0\0"
      fc:    00 00 00 00     "\0\0\0\0"
     100:    00 00 00 00     "\0\0\0\0"
     104:    00 00 00 00     "\0\0\0\0"
     108:    00 00 00 00     "\0\0\0\0"
     10c:    00 00 00 00     "\0\0\0\0"
     110:    00 00 00 00     "\0\0\0\0"
     114:    00 00 00 00     "\0\0\0\0"
     118:    00 00 00 00     "\0\0\0\0"
     11c:    00 00 00 00     "\0\0\0\0"
     120:    00 00 00 00     "\0\0\0\0"
     124:    00 00 00 00     "\0\0\0\0"
     128:    00 00 00 00     "\0\0\0\0"
     12c:    00 00 00 00     "\0\0\0\0"
     130:    00 00 00 00     "\0\0\0\0"
     134:    00 00 00 00     "\0\0\0\0"
     138:    00 00 00 00     "\0\0\0\0"
     13c:    00 00 00 00     "\0\0\0\0"
     140:    00 00 00 00     "\0\0\0\0"
     144:    00 00 00 00     "\0\0\0\0"
     148:    00 00 00 00     "\0\0\0\0"
     14c:    00 00 00 00     "\0\0\0\0"
     150:    00 00 00 00     "\0\0\0\0"
     154:    00 00 00 00     "\0\0\0\0"
     158:    00 00 00 00     "\0\0\0\0"
     15c:    00 00 00 00     "\0\0\0\0"
     160:    00 00 00 00     "\0\0\0\0"
     164:    00 00 00 00     "\0\0\0\0"
     168:    00 00 00 00     "\0\0\0\0"
     16c:    00 00 00 00     "\0\0\0\0"
     170:    00 00 00 00     "\0\0\0\0"
     174:    00 00 00 00     "\0\0\0\0"
     178:    00 00 00 00     "\0\0\0\0"
     17c:    00 00 00 00     "\0\0\0\0"
     180:    00 00 00 00     "\0\0\0\0"
     184:    00 00 00 00     "\0\0\0\0"
     188:    00 00 00 00     "\0\0\0\0"
     18c:    00 00 00 00     "\0\0\0\0"
     190:    00 00 00 00     "\0\0\0\0"
     194:    00 00 00 00     "\0\0\0\0"
     198:    00 00 00 00     "\0\0\0\0"
     19c:    00 00 00 00     "\0\0\0\0"
     1a0:    00 00 00 00     "\0\0\0\0"
     1a4:    00 00 00 00     "\0\0\0\0"
     1a8:    00 00 00 00     "\0\0\0\0"
     1ac:    00 00 00 00     "\0\0\0\0"
     1b0:    00 00 00 00     "\0\0\0\0"
     1b4:    00 00 00 00     "\0\0\0\0"
     1b8:    00 00 00 00     "\0\0\0\0"
     1bc:    00 00 00 00     "\0\0\0\0"
     1c0:    00 00 00 00     "\0\0\0\0"
     1c4:    00 00 00 00     "\0\0\0\0"
     1c8:    00 00 00 00     "\0\0\0\0"
     1cc:    00 00 00 00     "\0\0\0\0"
     1d0:    00 00 00 00     "\0\0\0\0"
     1d4:    00 00 00 00     "\0\0\0\0"
     1d8:    00 00 00 00     "\0\0\0\0"
     1dc:    00 00 00 00     "\0\0\0\0"
     1e0:    00 00 00 00     "\0\0\0\0"
     1e4:    00 00 00 00     "\0\0\0\0"
     1e8:    00 00 00 00     "\0\0\0\0"
     1ec:    00 00 00 00     "\0\0\0\0"
     1f0:    00 00 00 00     "\0\0\0\0"
     1f4:    00 00 00 00     "\0\0\0\0"
     1f8:    00 00 00 00     "\0\0\0\0"
     1fc:    00 00 00 00     "\0\0\0\0"
     200:    00 00 00 00     "\0\0\0\0"
     204:    00 00 00 00     "\0\0\0\0"
     208:    00 00 00 00     "\0\0\0\0"
     20c:    00 00 00 00     "\0\0\0\0"
     210:    00 00 00 00     "\0\0\0\0"
     214:    00 00 00 00     "\0\0\0\0"
     218:    00 00 00 00     "\0\0\0\0"
     21c:    00 00 00 00     "\0\0\0\0"
     220:    00 00 00 00     "\0\0\0\0"
     224:    00 00 00 00     "\0\0\0\0"
     228:    00 00 00 00     "\0\0\0\0"
     22c:    00 00 00 00     "\0\0\0\0"
     230:    00 00 00 00     "\0\0\0\0"
     234:    00 00 00 00     "\0\0\0\0"
     238:    00 00 00 00     "\0\0\0\0"
     23c:    00 00 00 00     "\0\0\0\0"
     240:    00 00 00 00     "\0\0\0\0"
     244:    00 00 00 00     "\0\0\0\0"
     248:    00 00 00 00     "\0\0\0\0"
     24c:    00 00 00 00     "\0\0\0\0"
     250:    00 00 00 00     "\0\0\0\0"
     254:    00 00 00 00     "\0\0\0\0"
     258:    00 00 00 00     "\0\0\0\0"
     25c:    00 00 00 00     "\0\0\0\0"
     260:    00 00 00 00     "\0\0\0\0"
     264:    00 00 00 00     "\0\0\0\0"
     268:    00 00 00 00     "\0\0\0\0"
     26c:    00 00 00 00     "\0\0\0\0"
     270:    00 00 00 00     "\0\0\0\0"
     274:    00 00 00 00     "\0\0\0\0"
     278:    00 00 00 00     "\0\0\0\0"
     27c:    00 00 00 00     "\0\0\0\0"
     280:    00 00 00 00     "\0\0\0\0"
     284:    00 00 00 00     "\0\0\0\0"
     288:    00 00 00 00     "\0\0\0\0"
     28c:    00 00 00 00     "\0\0\0\0"
     290:    00 00 00 00     "\0\0\0\0"
     294:    00 00 00 00     "\0\0\0\0"
     298:    00 00 00 00     "\0\0\0\0"
     29c:    00 00 00 00     "\0\0\0\0"
     2a0:    00 00 00 00     "\0\0\0\0"
     2a4:    00 00 00 00     "\0\0\0\0"
     2a8:    00 00 00 00     "\0\0\0\0"
     2ac:    00 00 00 00     "\0\0\0\0"
     2b0:    00 00 00 00     "\0\0\0\0"
     2b4:    00 00 00 00     "\0\0\0\0"
     2b8:    00 00 00 00     "\0\0\0\0"
     2bc:    00 00 00 00     "\0\0\0\0"
     2c0:    00 00 00 00     "\0\0\0\0"
     2c4:    00 00 00 00     "\0\0\0\0"
     2c8:    00 00 00 00     "\0\0\0\0"
     2cc:    00 00 00 00     "\0\0\0\0"
     2d0:    00 00 00 00     "\0\0\0\0"
     2d4:    00 00 00 00     "\0\0\0\0"
     2d8:    00 00 00 00     "\0\0\0\0"
     2dc:    00 00 00 00     "\0\0\0\0"
     2e0:    00 00 00 00     "\0\0\0\0"
     2e4:    00 00 00 00     "\0\0\0\0"
     2e8:    00 00 00 00     "\0\0\0\0"
     2ec:    00 00 00 00     "\0\0\0\0"
     2f0:    00 00 00 00     "\0\0\0\0"
     2f4:    00 00 00 00     "\0\0\0\0"
     2f8:    00 00 00 00     "\0\0\0\0"
     2fc:    00 00 00 00     "\0\0\0\0"
     300:    00 00 00 00     "\0\0\0\0"
     304:    00 00 00 00     "\0\0\0\0"
     308:    00 00 00 00     "\0\0\0\0"
     30c:    00 00 00 00     "\0\0\0\0"
     310:    00 00 00 00     "\0\0\0\0"
     314:    00 00 00 00     "\0\0\0\0"
     318:    00 00 00 00     "\0\0\0\0"
     31c:    00 00 00 00     "\0\0\0\0"
     320:    00 00 00 00     "\0\0\0\0"
     324:    00 00 00 00     "\0\0\0\0"
     328:    00 00 00 00     "\0\0\0\0"
     32c:    00 00 00 00     "\0\0\0\0"
     330:    00 00 00 00     "\0\0\0\0"
     334:    00 00 00 00     "\0\0\0\0"
     338:    00 00 00 00     "\0\0\0\0"
     33c:    00 00 00 00     "\0\0\0\0"
     340:    00 00 00 00     "\0\0\0\0"
     344:    00 00 00 00     "\0\0\0\0"
     348:    00 00 00 00     "\0\0\0\0"
     34c:    00 00 00 00     "\0\0\0\0"
     350:    00 00 00 00     "\0\0\0\0"
     354:    00 00 00 00     "\0\0\0\0"
     358:    00 00 00 00     "\0\0\0\0"
     35c:    00 00 00 00     "\0\0\0\0"
     360:    00 00 00 00     "\0\0\0\0"
     364:    00 00 00 00     "\0\0\0\0"
     368:    00 00 00 00     "\0\0\0\0"
     36c:    00 00 00 00     "\0\0\0\0"
     370:    00 00 00 00     "\0\0\0\0"
     374:    00 00 00 00     "\0\0\0\0"
     378:    00 00 00 00     "\0\0\0\0"
     37c:    00 00 00 00     "\0\0\0\0"
     380:    00 00 00 00     "\0\0\0\0"
     384:    00 00 00 00     "\0\0\0\0"
     388:    00 00 00 00     "\0\0\0\0"
     38c:    00 00 00 00     "\0\0\0\0"
     390:    00 00 00 00     "\0\0\0\0"
     394:    00 00 00 00     "\0\0\0\0"
     398:    00 00 00 00     "\0\0\0\0"
     39c:    00 00 00 00     "\0\0\0\0"
     3a0:    00 00 00 00     "\0\0\0\0"
     3a4:    00 00 00 00     "\0\0\0\0"
     3a8:    00 00 00 00     "\0\0\0\0"
     3ac:    00 00 00 00     "\0\0\0\0"
     3b0:    00 00 00 00     "\0\0\0\0"
     3b4:    00 00 00 00     "\0\0\0\0"
     3b8:    00 00 00 00     "\0\0\0\0"
     3bc:    00 00 00 00     "\0\0\0\0"
     3c0:    00 00 00 00     "\0\0\0\0"
     3c4:    00 00 00 00     "\0\0\0\0"
     3c8:    00 00 00 00     "\0\0\0\0"
     3cc:    00 00 00 00     "\0\0\0\0"
     3d0:    00 00 00 00     "\0\0\0\0"
     3d4:    00 00 00 00     "\0\0\0\0"
     3d8:    00 00 00 00     "\0\0\0\0"
     3dc:    00 00 00 00     "\0\0\0\0"
     3e0:    00 00 00 00     "\0\0\0\0"
     3e4:    00 00 00 00     "\0\0\0\0"
     3e8:    00 00 00 00     "\0\0\0\0"
     3ec:    00 00 00 00     "\0\0\0\0"
     3f0:    00 00 00 00     "\0\0\0\0"
     3f4:    00 00 00 00     "\0\0\0\0"
     3f8:    00 00 00 00     "\0\0\0\0"
     3fc:    00 00 00 00     "\0\0\0\0"
     400:    00 00 00 00     "\0\0\0\0"
     404:    00 00 00 00     "\0\0\0\0"
     408:    00 00 00 00     "\0\0\0\0"
     40c:    00 00 00 00     "\0\0\0\0"
     410:    00 00 00 00     "\0\0\0\0"
     414:    00 00 00 00     "\0\0\0\0"
     418:    00 00 00 00     "\0\0\0\0"
     41c:    00 00 00 00     "\0\0\0\0"
     420:    00 00 00 00     "\0\0\0\0"
     424:    00 00 00 00     "\0\0\0\0"
     428:    00 00 00 00     "\0\0\0\0"
     42c:    00 00 00 00     "\0\0\0\0"
     430:    00 00 00 00     "\0\0\0\0"
     434:    00 00 00 00     "\0\0\0\0"
     438:    00 00 00 00     "\0\0\0\0"
     43c:    00 00 00 00     "\0\0\0\0"
     440:    00 00 00 00     "\0\0\0\0"
     444:    00 00 00 00     "\0\0\0\0"
     448:    00 00 00 00     "\0\0\0\0"
     44c:    00 00 00 00     "\0\0\0\0"
     450:    00 00 00 00     "\0\0\0\0"
     454:    00 00 00 00     "\0\0\0\0"
     458:    00 00 00 00     "\0\0\0\0"
     45c:    00 00 00 00     "\0\0\0\0"
     460:    00 00 00 00     "\0\0\0\0"
     464:    00 00 00 00     "\0\0\0\0"
     468:    00 00 00 00     "\0\0\0\0"
     46c:    00 00 00 00     "\0\0\0\0"
     470:    00 00 00 00     "\0\0\0\0"
     474:    00 00 00 00     "\0\0\0\0"
     478:    00 00 00 00     "\0\0\0\0"
     47c:    00 00 00 00     "\0\0\0\0"
     480:    00 00 00 00     "\0\0\0\0"
     484:    00 00 00 00     "\0\0\0\0"
     488:    00 00 00 00     "\0\0\0\0"
     48c:    00 00 00 00     "\0\0\0\0"
     490:    00 00 00 00     "\0\0\0\0"
     494:    00 00 00 00     "\0\0\0\0"
     498:    00 00 00 00     "\0\0\0\0"
     49c:    00 00 00 00     "\0\0\0\0"
     4a0:    00 00 00 00     "\0\0\0\0"
     4a4:    00 00 00 00     "\0\0\0\0"
     4a8:    00 00 00 00     "\0\0\0\0"
     4ac:    00 00 00 00     "\0\0\0\0"
     4b0:    00 00 00 00     "\0\0\0\0"
     4b4:    00 00 00 00     "\0\0\0\0"
     4b8:    00 00 00 00     "\0\0\0\0"
     4bc:    00 00 00 00     "\0\0\0\0"
     4c0:    00 00 00 00     "\0\0\0\0"
     4c4:    00 00 00 00     "\0\0\0\0"
     4c8:    00 00 00 00     "\0\0\0\0"
     4cc:    00 00 00 00     "\0\0\0\0"
     4d0:    00 00 00 00     "\0\0\0\0"
     4d4:    00 00 00 00     "\0\0\0\0"
     4d8:    00 00 00 00     "\0\0\0\0"
     4dc:    00 00 00 00     "\0\0\0\0"
     4e0:    00 00 00 00     "\0\0\0\0"
     4e4:    00 00 00 00     "\0\0\0\0"
     4e8:    00 00 00 00     "\0\0\0\0"
     4ec:    00 00 00 00     "\0\0\0\0"
     4f0:    00 00 00 00     "\0\0\0\0"
     4f4:    00 00 00 00     "\0\0\0\0"
     4f8:    00 00 00 00     "\0\0\0\0"
     4fc:    00 00 00 00     "\0\0\0\0"
     500:    00 00 00 00     "\0\0\0\0"
     504:    00 00 00 00     "\0\0\0\0"
     508:    00 00 00 00     "\0\0\0\0"
     50c:    00 00 00 00     "\0\0\0\0"
     510:    00 00 00 00     "\0\0\0\0"
     514:    00 00 00 00     "\0\0\0\0"
     518:    00 00 00 00     "\0\0\0\0"
     51c:    00 00 00 00     "\0\0\0\0"
     520:    00 00 00 00     "\0\0\0\0"
     524:    00 00 00 00     "\0\0\0\0"
     528:    00 00 00 00     "\0\0\0\0"
     52c:    00 00 00 00     "\0\0\0\0"
     530:    00 00 00 00     "\0\0\0\0"
     534:    00 00 00 00     "\0\0\0\0"
     538:    00 00 00 00     "\0\0\0\0"
     53c:    00 00 00 00     "\0\0\0\0"
     540:    00 00 00 00     "\0\0\0\0"
     544:    00 00 00 00     "\0\0\0\0"
     548:    00 00 00 00     "\0\0\0\0"
     54c:    00 00 00 00     "\0\0\0\0"
     550:    00 00 00 00     "\0\0\0\0"
     554:    00 00 00 00     "\0\0\0\0"
     558:    00 00 00 00     "\0\0\0\0"
     55c:    00 00 00 00     "\0\0\0\0"
     560:    00 00 00 00     "\0\0\0\0"
     564:    00 00 00 00     "\0\0\0\0"
     568:    00 00 00 00     "\0\0\0\0"
     56c:    00 00 00 00     "\0\0\0\0"
     570:    00 00 00 00     "\0\0\0\0"
     574:    00 00 00 00     "\0\0\0\0"
     578:    00 00 00 00     "\0\0\0\0"
     57c:    00 00 00 00     "\0\0\0\0"
     580:    00 00 00 00     "\0\0\0\0"
     584:    00 00 00 00     "\0\0\0\0"
     588:    00 00 00 00     "\0\0\0\0"
     58c:    00 00 00 00     "\0\0\0\0"
     590:    00 00 00 00     "\0\0\0\0"
     594:    00 00 00 00     "\0\0\0\0"
     598:    00 00 00 00     "\0\0\0\0"
     59c:    00 00 00 00     "\0\0\0\0"
     5a0:    00 00 00 00     "\0\0\0\0"
     5a4:    00 00 00 00     "\0\0\0\0"
     5a8:    00 00 00 00     "\0\0\0\0"
     5ac:    00 00 00 00     "\0\0\0\0"
     5b0:    00 00 00 00     "\0\0\0\0"
     5b4:    00 00 00 00     "\0\0\0\0"
     5b8:    00 00 00 00     "\0\0\0\0"
     5bc:    00 00 00 00     "\0\0\0\0"
     5c0:    00 00 00 00     "\0\0\0\0"
     5c4:    00 00 00 00     "\0\0\0\0"
     5c8:    00 00 00 00     "\0\0\0\0"
     5cc:    00 00 00 00     "\0\0\0\0"
     5d0:    00 00 00 00     "\0\0\0\0"
     5d4:    00 00 00 00     "\0\0\0\0"
     5d8:    00 00 00 00     "\0\0\0\0"
     5dc:    00 00 00 00     "\0\0\0\0"
     5e0:    00 00 00 00     "\0\0\0\0"
     5e4:    00 00 00 00     "\0\0\0\0"
     5e8:    00 00 00 00     "\0\0\0\0"
     5ec:    00 00 00 00     "\0\0\0\0"
     5f0:    00 00 00 00     "\0\0\0\0"
     5f4:    00 00 00 00     "\0\0\0\0"
     5f8:    00 00 00 00     "\0\0\0\0"
     5fc:    00 00 00 00     "\0\0\0\0"
     600:    00 00 00 00     "\0\0\0\0"
     604:    00 00 00 00     "\0\0\0\0"
     608:    00 00 00 00     "\0\0\0\0"
     60c:    00 00 00 00     "\0\0\0\0"
     610:    00 00 00 00     "\0\0\0\0"
     614:    00 00 00 00     "\0\0\0\0"
     618:    00 00 00 00     "\0\0\0\0"
     61c:    00 00 00 00     "\0\0\0\0"
     620:    00 00 00 00     "\0\0\0\0"
     624:    00 00 00 00     "\0\0\0\0"
     628:    00 00 00 00     "\0\0\0\0"
     62c:    00 00 00 00     "\0\0\0\0"
     630:    00 00 00 00     "\0\0\0\0"
     634:    00 00 00 00     "\0\0\0\0"
     638:    00 00 00 00     "\0\0\0\0"
     63c:    00 00 00 00     "\0\0\0\0"
     640:    00 00 00 00     "\0\0\0\0"
     644:    00 00 00 00     "\0\0\0\0"
     648:    00 00 00 00     "\0\0\0\0"
     64c:    00 00 00 00     "\0\0\0\0"
     650:    00 00 00 00     "\0\0\0\0"
     654:    00 00 00 00     "\0\0\0\0"
     658:    00 00 00 00     "\0\0\0\0"
     65c:    00 00 00 00     "\0\0\0\0"
     660:    00 00 00 00     "\0\0\0\0"
     664:    00 00 00 00     "\0\0\0\0"
     668:    00 00 00 00     "\0\0\0\0"
     66c:    00 00 00 00     "\0\0\0\0"
     670:    00 00 00 00     "\0\0\0\0"
     674:    00 00 00 00     "\0\0\0\0"
     678:    00 00 00 00     "\0\0\0\0"
     67c:    00 00 00 00     "\0\0\0\0"
     680:    00 00 00 00     "\0\0\0\0"
     684:    00 00 00 00     "\0\0\0\0"
     688:    00 00 00 00     "\0\0\0\0"
     68c:    00 00 00 00     "\0\0\0\0"
     690:    00 00 00 00     "\0\0\0\0"
     694:    00 00 00 00     "\0\0\0\0"
     698:    00 00 00 00     "\0\0\0\0"
     69c:    00 00 00 00     "\0\0\0\0"
     6a0:    00 00 00 00     "\0\0\0\0"
     6a4:    00 00 00 00     "\0\0\0\0"
     6a8:    00 00 00 00     "\0\0\0\0"
     6ac:    00 00 00 00     "\0\0\0\0"
     6b0:    00 00 00 00     "\0\0\0\0"
     6b4:    00 00 00 00     "\0\0\0\0"
     6b8:    00 00 00 00     "\0\0\0\0"
     6bc:    00 00 00 00     "\0\0\0\0"
     6c0:    00 00 00 00     "\0\0\0\0"
     6c4:    00 00 00 00     "\0\0\0\0"
     6c8:    00 00 00 00     "\0\0\0\0"
     6cc:    00 00 00 00     "\0\0\0\0"
     6d0:    00 00 00 00     "\0\0\0\0"
     6d4:    00 00 00 00     "\0\0\0\0"
     6d8:    00 00 00 00     "\0\0\0\0"
     6dc:    00 00 00 00     "\0\0\0\0"
     6e0:    00 00 00 00     "\0\0\0\0"
     6e4:    00 00 00 00     "\0\0\0\0"
     6e8:    00 00 00 00     "\0\0\0\0"
     6ec:    00 00 00 00     "\0\0\0\0"
     6f0:    00 00 00 00     "\0\0\0\0"
     6f4:    00 00 00 00     "\0\0\0\0"
     6f8:    00 00 00 00     "\0\0\0\0"
     6fc:    00 00 00 00     "\0\0\0\0"
     700:    00 00 00 00     "\0\0\0\0"
     704:    00 00 00 00     "\0\0\0\0"
     708:    00 00 00 00     "\0\0\0\0"
     70c:    00 00 00 00     "\0\0\0\0"
     710:    00 00 00 00     "\0\0\0\0"
     714:    00 00 00 00     "\0\0\0\0"
     718:    00 00 00 00     "\0\0\0\0"
     71c:    00 00 00 00     "\0\0\0\0"
     720:    00 00 00 00     "\0\0\0\0"
     724:    00 00 00 00     "\0\0\0\0"
     728:    00 00 00 00     "\0\0\0\0"
     72c:    00 00 00 00     "\0\0\0\0"
     730:    00 00 00 00     "\0\0\0\0"
     734:    00 00 00 00     "\0\0\0\0"
     738:    00 00 00 00     "\0\0\0\0"
     73c:    00 00 00 00     "\0\0\0\0"
     740:    00 00 00 00     "\0\0\0\0"
     744:    00 00 00 00     "\0\0\0\0"
     748:    00 00 00 00     "\0\0\0\0"
     74c:    00 00 00 00     "\0\0\0\0"
     750:    00 00 00 00     "\0\0\0\0"
     754:    00 00 00 00     "\0\0\0\0"
     758:    00 00 00 00     "\0\0\0\0"
     75c:    00 00 00 00     "\0\0\0\0"
     760:    00 00 00 00     "\0\0\0\0"
     764:    00 00 00 00     "\0\0\0\0"
     768:    00 00 00 00     "\0\0\0\0"
     76c:    00 00 00 00     "\0\0\0\0"
     770:    00 00 00 00     "\0\0\0\0"
     774:    00 00 00 00     "\0\0\0\0"
     778:    00 00 00 00     "\0\0\0\0"
     77c:    00 00 00 00     "\0\0\0\0"
     780:    00 00 00 00     "\0\0\0\0"
     784:    00 00 00 00     "\0\0\0\0"
     788:    00 00 00 00     "\0\0\0\0"
     78c:    00 00 00 00     "\0\0\0\0"
     790:    00 00 00 00     "\0\0\0\0"
     794:    00 00 00 00     "\0\0\0\0"
     798:    00 00 00 00     "\0\0\0\0"
     79c:    00 00 00 00     "\0\0\0\0"
     7a0:    00 00 00 00     "\0\0\0\0"
     7a4:    00 00 00 00     "\0\0\0\0"
     7a8:    00 00 00 00     "\0\0\0\0"
     7ac:    00 00 00 00     "\0\0\0\0"
     7b0:    00 00 00 00     "\0\0\0\0"
     7b4:    00 00 00 00     "\0\0\0\0"
     7b8:    00 00 00 00     "\0\0\0\0"
     7bc:    00 00 00 00     "\0\0\0\0"
     7c0:    00 00 00 00     "\0\0\0\0"
     7c4:    00 00 00 00     "\0\0\0\0"
     7c8:    00 00 00 00     "\0\0\0\0"
     7cc:    00 00 00 00     "\0\0\0\0"
     7d0:    00 00 00 00     "\0\0\0\0"
     7d4:    00 00 00 00     "\0\0\0\0"
     7d8:    00 00 00 00     "\0\0\0\0"
     7dc:    00 00 00 00     "\0\0\0\0"
     7e0:    00 00 00 00     "\0\0\0\0"
     7e4:    00 00 00 00     "\0\0\0\0"
     7e8:    00 00 00 00     "\0\0\0\0"
     7ec:    00 00 00 00     "\0\0\0\0"
     7f0:    00 00 00 00     "\0\0\0\0"
     7f4:    00 00 00 00     "\0\0\0\0"
     7f8:    00 00 00 00     "\0\0\0\0"
     7fc:    00 00 00 00     "\0\0\0\0"
Disassembly of section .boot_info:
report_boot_info_begin:
     800:    00 00 00 00     "\0\0\0\0"
     804:    00 00 00 00     "\0\0\0\0"
     808:    00 00 00 00     "\0\0\0\0"
     80c:    00 00 00 00     "\0\0\0\0"
     810:    00 00 00 00     "\0\0\0\0"
     814:    00 00 00 00     "\0\0\0\0"
     818:    00 00 00 00     "\0\0\0\0"
     81c:    00 00 00 00     "\0\0\0\0"
     820:    00 00 00 00     "\0\0\0\0"
     824:    00 00 00 00     "\0\0\0\0"
     828:    00 00 00 00     "\0\0\0\0"
     82c:    00 00 00 00     "\0\0\0\0"
     830:    00 00 00 00     "\0\0\0\0"
     834:    00 00 00 00     "\0\0\0\0"
     838:    00 00 00 00     "\0\0\0\0"
     83c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .data:
set_charge_mA.charge_mA_old:
     840:    ff 00 00 00     "\x0f\0\0\0"

update_charge_ui.var:
     844:    01 00 00 00     "\x01\0\0\0"

old_battery_level:
     848:    09 00           "\t\0"

charge_data:
     84a:    01 00 06 03     "\x01\0\x06\x03"
     84e:    0a 01 03 01     "\n\x01\x03\x01"
     852:    64 00 32 00     "d\02\0"
     856:    dc 00 00 00     "\x0c\0\0\0"

can_enter_lp:
     85a:    01              "\x01"

port0:
     85b:    01 01 00 04     "\x01\x01\0\x04"
     85f:    32              "2"

port2:
     860:    01 01 00 04     "\x01\x01\0\x04"
     864:    17              "\x07"

port3:
     865:    01 01 00 04     "\x01\x01\0\x04"
     869:    15              "\x05"

charge_port:
     86a:    00 00 00 07     "\0\0\0\x07"
     86e:    35              "5"

vbat_port:
     86f:    00 02 01 07     "\0\x02\x01\x07"
     873:    37              "7"

ldoin_port:
     874:    00 02 01 07     "\0\x02\x01\x07"
     878:    38 00 00 00     "8\0\0\0"

head:
     87c:    7c 08 00 00     "|\b\0\0"
     880:    7c 08 00 00     "|\b\0\0"

handl:
     884:    00 00 00 01     "\0\0\0\x01"
     888:    00 00 01 00     "\0\0\x01\0"
     88c:    40 9c 00 00     "@\x0c\0\0"
     890:    00 00 00 00     "\0\0\0\0"
     894:    00 00 00 00     "\0\0\0\0"
     898:    00 00 00 00     "\0\0\0\0"
     89c:    00 00 00 00     "\0\0\0\0"
     8a0:    00 00 00 00     "\0\0\0\0"
     8a4:    00 00 00 00     "\0\0\0\0"

head.1196:
     8a8:    a8 08 00 00     "\x08\b\0\0"
     8ac:    a8 08 00 00     "\x08\b\0\0"

jiffies:
     8b0:    0a 00 00 00     "\n\0\0\0"

timer_head:
     8b4:    b4 08 00 00     "\x04\b\0\0"
     8b8:    b4 08 00 00     "\x04\b\0\0"

puk:
     8bc:    98 36 6c f3     "\x086l\x03"

CURRENT_TTMER_DOWN_SECONDS:
     8c0:    3c 00 00 00     "<\0\0\0"

TARGET_TTMER_DOWN_SECONDS:
     8c4:    3c 00 00 00     "<\0\0\0"

CURRENT_NUM_DOWN_TOTAL:
     8c8:    e8 03 00 00     "\x08\x03\0\0"

TARGET_NUM_DOWN_TOTAL:
     8cc:    e8 03 00 00     "\x08\x03\0\0"

lp_winsize:
     8d0:    e0 01 a0 00     "\x00\x01\x00\0"
     8d4:    64 00 8c 00     "d\0\x0c\0"
     8d8:    00 00 00 00     "\0\0\0\0"

adkey_scan_para:
     8dc:    0a 00 00 00     "\n\0\0\0"
     8e0:    ff 00 00 02     "\x0f\0\0\x02"
     8e4:    4b 5a 00 00     "KZ\0\0"
     8e8:    00 14 00 01     "\0\x04\0\x01"
     8ec:    90 09 e0 01     "\x00\t\x00\x01"

gap_device_name:
     8f0:    6a 6c 5f 62     "jl_b"
     8f4:    6c 65 5f 74     "le_t"
     8f8:    65 73 74 00     "est\0"
     8fc:    00 00 00 00     "\0\0\0\0"
     900:    00 00 00 00     "\0\0\0\0"
     904:    00 00 00 00     "\0\0\0\0"
     908:    00 00 00 00     "\0\0\0\0"
     90c:    00              "\0"

bt_cfg:
     90d:    4a 4c 5f 61     "JL_a"
     911:    70 70 5f 64     "pp_d"
     915:    65 62 75 67     "ebug"
     919:    00 00 00 00     "\0\0\0\0"
     91d:    00 00 00 00     "\0\0\0\0"
     921:    00 00 00 00     "\0\0\0\0"
     925:    00 00 00 00     "\0\0\0\0"
     929:    00 00 00 00     "\0\0\0\0"
     92d:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     931:    ff ff 0a 19     "\x0f\x0f\n\x09"
     935:    07 88 66 ff     "\x07\x08f\x0f"
     939:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     93d:    ff 00 00        "\x0f\0\0"

data_magic:
     940:    00 00 00 00     "\0\0\0\0"
     944:    00 00 00 00     "\0\0\0\0"
     948:    00 00 00 00     "\0\0\0\0"
     94c:    00 00 00 00     "\0\0\0\0"
     950:    00 00 00 00     "\0\0\0\0"
     954:    00 00 00 00     "\0\0\0\0"
     958:    00 00 00 00     "\0\0\0\0"
     95c:    00 00 00 00     "\0\0\0\0"
     960:    00 00 00 00     "\0\0\0\0"
     964:    00 00 00 00     "\0\0\0\0"
     968:    00 00 00 00     "\0\0\0\0"
     96c:    00 00 00 00     "\0\0\0\0"
     970:    00 00 00 00     "\0\0\0\0"
     974:    00 00 00 00     "\0\0\0\0"
     978:    00 00 00 00     "\0\0\0\0"
     97c:    00 00 00 00     "\0\0\0\0"

is_btstack_lowpower_active:
     980:    00 00 00 00     "\0\0\0\0"

stack_run_loop_head:
     984:    00 00 00 00     "\0\0\0\0"

le_att_mtu_size:
     988:    00 00 00 00     "\0\0\0\0"

gap_request_connection_parameter_update.le_con_param_update_identifier:
     98c:    01              "\x01"

temp_link_key_flag:
     98d:    00 00 00        "\0\0\0"

stack_configs_app:
     990:    04 04 24 00     "\x04\x04$\0"
     994:    40 1f 40 1f     "@\x0f@\x0f"
     998:    00 00 00 00     "\0\0\0\0"
     99c:    00 00 3c 35     "\0\0<5"
     9a0:    00 11 08 04     "\0\x01\b\x04"
     9a4:    23 01 46 1e     "#\x01F\x0e"
     9a8:    0a 00 00 00     "\n\0\0\0"
     9ac:    00 00 00 00     "\0\0\0\0"

disable_sco_timer:
     9b0:    00 00           "\0\0"

BTSTACK_LE_HOST_MESH_DATA_START:
     9b2:    00 00           "\0\0"

system_data_start:
     9b4:    05 00 00 00     "\x05\0\0\0"
     9b8:    02 00 00 00     "\x02\0\0\0"
     9bc:    00 00 00 00     "\0\0\0\0"
     9c0:    4a 0f e1 01     "J\x0f\x01\x01"
     9c4:    00 00 00 00     "\0\0\0\0"
     9c8:    00 00 00 00     "\0\0\0\0"
     9cc:    00 00 00 00     "\0\0\0\0"
     9d0:    0c 2b e1 01     "\x0c+\x01\x01"

app_spple:
     9d4:    05 00 00 00     "\x05\0\0\0"
     9d8:    01 00 00 00     "\x01\0\0\0"
     9dc:    00 00 00 00     "\0\0\0\0"
     9e0:    06 11 e1 01     "\x06\x01\x01\x01"
     9e4:    00 00 00 00     "\0\0\0\0"
     9e8:    00 00 00 00     "\0\0\0\0"
     9ec:    00 00 00 00     "\0\0\0\0"
     9f0:    8c 2b e1 01     "\x0c+\x01\x01"

system_data_end:
     9f4:    00 00 ff ff     "\0\0\x0f\x0f"
     9f8:    00 00 00 00     "\0\0\0\0"
     9fc:    00 00 00 00     "\0\0\0\0"
     a00:    00 00 00 00     "\0\0\0\0"
     a04:    00 00 00 00     "\0\0\0\0"
     a08:    00 00 00 00     "\0\0\0\0"
     a0c:    00 00 00 00     "\0\0\0\0"
     a10:    00 00 00 00     "\0\0\0\0"
     a14:    00 00 00 00     "\0\0\0\0"
     a18:    00 00 00 00     "\0\0\0\0"
     a1c:    00 00 00 00     "\0\0\0\0"
     a20:    00 00 00 00     "\0\0\0\0"
     a24:    00 00 00 00     "\0\0\0\0"
     a28:    00 00 00 00     "\0\0\0\0"
     a2c:    00 00 00 00     "\0\0\0\0"
     a30:    00 00 00 00     "\0\0\0\0"
     a34:    00 00 00 00     "\0\0\0\0"
     a38:    00 00 00 00     "\0\0\0\0"
     a3c:    00 00 00 00     "\0\0\0\0"
     a40:    00 00 00 00     "\0\0\0\0"
     a44:    00 00 00 00     "\0\0\0\0"
     a48:    00 00 00 00     "\0\0\0\0"
     a4c:    00 00 00 00     "\0\0\0\0"
     a50:    00 00 00 00     "\0\0\0\0"
     a54:    00 00 00 00     "\0\0\0\0"
     a58:    00 00 00 00     "\0\0\0\0"
     a5c:    00 00 00 00     "\0\0\0\0"
     a60:    00 00 00 00     "\0\0\0\0"
     a64:    00 00 00 00     "\0\0\0\0"
     a68:    00 00 00 00     "\0\0\0\0"
     a6c:    00 00 00 00     "\0\0\0\0"
     a70:    00 00 00 00     "\0\0\0\0"
     a74:    00 00 00 00     "\0\0\0\0"
     a78:    00 00 00 00     "\0\0\0\0"
     a7c:    00 00 00 00     "\0\0\0\0"
     a80:    00 00 00 00     "\0\0\0\0"
     a84:    00 00 00 00     "\0\0\0\0"
     a88:    00 00 00 00     "\0\0\0\0"
     a8c:    00 00 00 00     "\0\0\0\0"
     a90:    00 00 00 00     "\0\0\0\0"
     a94:    00 00 00 00     "\0\0\0\0"
     a98:    00 00 00 00     "\0\0\0\0"
     a9c:    00 00 00 00     "\0\0\0\0"
     aa0:    00 00 00 00     "\0\0\0\0"
     aa4:    00 00 00 00     "\0\0\0\0"
     aa8:    00 00 00 00     "\0\0\0\0"
     aac:    00 00 00 00     "\0\0\0\0"
     ab0:    00 00 00 00     "\0\0\0\0"
     ab4:    00 00 00 00     "\0\0\0\0"
     ab8:    00 00 00 00     "\0\0\0\0"
     abc:    00 00 00 00     "\0\0\0\0"
     ac0:    00 00 00 00     "\0\0\0\0"
     ac4:    00 00 00 00     "\0\0\0\0"
     ac8:    00 00 00 00     "\0\0\0\0"
     acc:    00 00 00 00     "\0\0\0\0"
     ad0:    00 00 00 00     "\0\0\0\0"
     ad4:    00 00 00 00     "\0\0\0\0"
     ad8:    00 00 00 00     "\0\0\0\0"
     adc:    00 00 00 00     "\0\0\0\0"
     ae0:    00 00 00 00     "\0\0\0\0"
     ae4:    00 00 00 00     "\0\0\0\0"
     ae8:    00 00 00 00     "\0\0\0\0"
     aec:    00 00 00 00     "\0\0\0\0"
     af0:    00 00 00 00     "\0\0\0\0"
     af4:    00 00 00 00     "\0\0\0\0"
     af8:    00 00 00 00     "\0\0\0\0"
     afc:    00 00 00 00     "\0\0\0\0"
     b00:    00 00 00 00     "\0\0\0\0"
     b04:    00 00 00 00     "\0\0\0\0"
     b08:    00 00 00 00     "\0\0\0\0"
     b0c:    00 00 00 00     "\0\0\0\0"
     b10:    00 00 00 00     "\0\0\0\0"
     b14:    00 00 00 00     "\0\0\0\0"
     b18:    00 00 00 00     "\0\0\0\0"
     b1c:    00 00 00 00     "\0\0\0\0"
     b20:    00 00 00 00     "\0\0\0\0"
     b24:    00 00 00 00     "\0\0\0\0"
     b28:    00 00 00 00     "\0\0\0\0"
     b2c:    00 00 00 00     "\0\0\0\0"
     b30:    00 00 00 00     "\0\0\0\0"
     b34:    00 00 00 00     "\0\0\0\0"
     b38:    00 00 00 00     "\0\0\0\0"
     b3c:    00 00 00 00     "\0\0\0\0"
     b40:    00 00 00 00     "\0\0\0\0"
     b44:    00 00 00 00     "\0\0\0\0"
     b48:    00 00 00 00     "\0\0\0\0"
     b4c:    00 00 00 00     "\0\0\0\0"
     b50:    00 00 00 00     "\0\0\0\0"
     b54:    00 00 00 00     "\0\0\0\0"
     b58:    00 00 00 00     "\0\0\0\0"
     b5c:    00 00 00 00     "\0\0\0\0"
     b60:    00 00 00 00     "\0\0\0\0"
     b64:    00 00 00 00     "\0\0\0\0"
     b68:    00 00 00 00     "\0\0\0\0"
     b6c:    00 00 00 00     "\0\0\0\0"
     b70:    00 00 00 00     "\0\0\0\0"
     b74:    00 00 00 00     "\0\0\0\0"
     b78:    00 00 00 00     "\0\0\0\0"
     b7c:    00 00 00 00     "\0\0\0\0"
     b80:    00 00 00 00     "\0\0\0\0"
     b84:    00 00 00 00     "\0\0\0\0"
     b88:    00 00 00 00     "\0\0\0\0"
     b8c:    00 00 00 00     "\0\0\0\0"
     b90:    00 00 00 00     "\0\0\0\0"
     b94:    00 00 00 00     "\0\0\0\0"
     b98:    00 00 00 00     "\0\0\0\0"
     b9c:    00 00 00 00     "\0\0\0\0"
     ba0:    00 00 00 00     "\0\0\0\0"
     ba4:    00 00 00 00     "\0\0\0\0"
     ba8:    00 00 00 00     "\0\0\0\0"
     bac:    00 00 00 00     "\0\0\0\0"
     bb0:    00 00 00 00     "\0\0\0\0"
     bb4:    00 00 00 00     "\0\0\0\0"
     bb8:    00 00 00 00     "\0\0\0\0"
     bbc:    00 00 00 00     "\0\0\0\0"
     bc0:    00 00 00 00     "\0\0\0\0"
     bc4:    00 00 00 00     "\0\0\0\0"
     bc8:    00 00 00 00     "\0\0\0\0"
     bcc:    00 00 00 00     "\0\0\0\0"
     bd0:    00 00 00 00     "\0\0\0\0"
     bd4:    00 00 00 00     "\0\0\0\0"
     bd8:    00 00 00 00     "\0\0\0\0"
     bdc:    00 00 00 00     "\0\0\0\0"
     be0:    00 00 00 00     "\0\0\0\0"
     be4:    00 00 00 00     "\0\0\0\0"
     be8:    00 00 00 00     "\0\0\0\0"
     bec:    00 00 00 00     "\0\0\0\0"
     bf0:    00 00 00 00     "\0\0\0\0"
     bf4:    00 00 00 00     "\0\0\0\0"
     bf8:    00 00 00 00     "\0\0\0\0"
     bfc:    00 00 00 00     "\0\0\0\0"
     c00:    00 00 00 00     "\0\0\0\0"
     c04:    00 00 00 00     "\0\0\0\0"
     c08:    00 00 00 00     "\0\0\0\0"
     c0c:    00 00 00 00     "\0\0\0\0"
     c10:    00 00 00 00     "\0\0\0\0"
     c14:    00 00 00 00     "\0\0\0\0"
     c18:    00 00 00 00     "\0\0\0\0"
     c1c:    00 00 00 00     "\0\0\0\0"
     c20:    00 00 00 00     "\0\0\0\0"
     c24:    00 00 00 00     "\0\0\0\0"
     c28:    00 00 00 00     "\0\0\0\0"
     c2c:    00 00 00 00     "\0\0\0\0"
     c30:    00 00 00 00     "\0\0\0\0"
     c34:    00 00 00 00     "\0\0\0\0"
     c38:    00 00 00 00     "\0\0\0\0"
     c3c:    00 00 00 00     "\0\0\0\0"
     c40:    00 00 00 00     "\0\0\0\0"
     c44:    00 00 00 00     "\0\0\0\0"
     c48:    00 00 00 00     "\0\0\0\0"
     c4c:    00 00 00 00     "\0\0\0\0"
     c50:    00 00 00 00     "\0\0\0\0"
     c54:    00 00 00 00     "\0\0\0\0"
     c58:    00 00 00 00     "\0\0\0\0"
     c5c:    00 00 00 00     "\0\0\0\0"
     c60:    00 00 00 00     "\0\0\0\0"
     c64:    00 00 00 00     "\0\0\0\0"
     c68:    00 00 00 00     "\0\0\0\0"
     c6c:    00 00 00 00     "\0\0\0\0"
     c70:    00 00 00 00     "\0\0\0\0"
     c74:    00 00 00 00     "\0\0\0\0"
     c78:    00 00 00 00     "\0\0\0\0"
     c7c:    00 00 00 00     "\0\0\0\0"
     c80:    00 00 00 00     "\0\0\0\0"
     c84:    00 00 00 00     "\0\0\0\0"
     c88:    00 00 00 00     "\0\0\0\0"
     c8c:    00 00 00 00     "\0\0\0\0"
     c90:    00 00 00 00     "\0\0\0\0"
     c94:    00 00 00 00     "\0\0\0\0"
     c98:    00 00 00 00     "\0\0\0\0"
     c9c:    00 00 00 00     "\0\0\0\0"
     ca0:    00 00 00 00     "\0\0\0\0"
     ca4:    00 00 00 00     "\0\0\0\0"
     ca8:    00 00 00 00     "\0\0\0\0"
     cac:    00 00 00 00     "\0\0\0\0"
     cb0:    00 00 00 00     "\0\0\0\0"
     cb4:    00 00 00 00     "\0\0\0\0"
     cb8:    00 00 00 00     "\0\0\0\0"
     cbc:    00 00 00 00     "\0\0\0\0"
     cc0:    00 00 00 00     "\0\0\0\0"
     cc4:    00 00 00 00     "\0\0\0\0"
     cc8:    00 00 00 00     "\0\0\0\0"
     ccc:    00 00 00 00     "\0\0\0\0"
     cd0:    00 00 00 00     "\0\0\0\0"
     cd4:    00 00 00 00     "\0\0\0\0"
     cd8:    00 00 00 00     "\0\0\0\0"
     cdc:    00 00 00 00     "\0\0\0\0"
     ce0:    00 00 00 00     "\0\0\0\0"
     ce4:    00 00 00 00     "\0\0\0\0"
     ce8:    00 00 00 00     "\0\0\0\0"
     cec:    00 00 00 00     "\0\0\0\0"
     cf0:    00 00 00 00     "\0\0\0\0"
     cf4:    00 00 00 00     "\0\0\0\0"
     cf8:    00 00 00 00     "\0\0\0\0"
     cfc:    00 00 00 00     "\0\0\0\0"
     d00:    00 00 00 00     "\0\0\0\0"
     d04:    00 00 00 00     "\0\0\0\0"
     d08:    00 00 00 00     "\0\0\0\0"
     d0c:    00 00 00 00     "\0\0\0\0"
     d10:    00 00 00 00     "\0\0\0\0"
     d14:    00 00 00 00     "\0\0\0\0"
     d18:    00 00 00 00     "\0\0\0\0"
     d1c:    00 00 00 00     "\0\0\0\0"
     d20:    00 00 00 00     "\0\0\0\0"
     d24:    00 00 00 00     "\0\0\0\0"
     d28:    00 00 00 00     "\0\0\0\0"
     d2c:    00 00 00 00     "\0\0\0\0"
     d30:    00 00 00 00     "\0\0\0\0"
     d34:    00 00 00 00     "\0\0\0\0"
     d38:    00 00 00 00     "\0\0\0\0"
     d3c:    00 00 00 00     "\0\0\0\0"
     d40:    00 00 00 00     "\0\0\0\0"
     d44:    00 00 00 00     "\0\0\0\0"
     d48:    00 00 00 00     "\0\0\0\0"
     d4c:    00 00 00 00     "\0\0\0\0"
     d50:    00 00 00 00     "\0\0\0\0"
     d54:    00 00 00 00     "\0\0\0\0"
     d58:    00 00 00 00     "\0\0\0\0"
     d5c:    00 00 00 00     "\0\0\0\0"
     d60:    00 00 00 00     "\0\0\0\0"
     d64:    00 00 00 00     "\0\0\0\0"
     d68:    00 00 00 00     "\0\0\0\0"
     d6c:    00 00 00 00     "\0\0\0\0"
     d70:    00 00 00 00     "\0\0\0\0"
     d74:    00 00 00 00     "\0\0\0\0"
     d78:    00 00 00 00     "\0\0\0\0"
     d7c:    00 00 00 00     "\0\0\0\0"
     d80:    00 00 00 00     "\0\0\0\0"
     d84:    00 00 00 00     "\0\0\0\0"
     d88:    00 00 00 00     "\0\0\0\0"
     d8c:    00 00 00 00     "\0\0\0\0"
     d90:    00 00 00 00     "\0\0\0\0"
     d94:    00 00 00 00     "\0\0\0\0"
     d98:    00 00 00 00     "\0\0\0\0"
     d9c:    00 00 00 00     "\0\0\0\0"
     da0:    00 00 00 00     "\0\0\0\0"
     da4:    00 00 00 00     "\0\0\0\0"
     da8:    00 00 00 00     "\0\0\0\0"
     dac:    00 00 00 00     "\0\0\0\0"
     db0:    00 00 00 00     "\0\0\0\0"
     db4:    00 00 00 00     "\0\0\0\0"
     db8:    00 00 00 00     "\0\0\0\0"
     dbc:    00 00 00 00     "\0\0\0\0"
     dc0:    00 00 00 00     "\0\0\0\0"
     dc4:    00 00 00 00     "\0\0\0\0"
     dc8:    00 00 00 00     "\0\0\0\0"
     dcc:    00 00 00 00     "\0\0\0\0"
     dd0:    00 00 00 00     "\0\0\0\0"
     dd4:    00 00 00 00     "\0\0\0\0"
     dd8:    00 00 00 00     "\0\0\0\0"
     ddc:    00 00 00 00     "\0\0\0\0"
     de0:    00 00 00 00     "\0\0\0\0"
     de4:    00 00 00 00     "\0\0\0\0"
     de8:    00 00 00 00     "\0\0\0\0"
     dec:    00 00 00 00     "\0\0\0\0"
     df0:    00 00 00 00     "\0\0\0\0"

bt_testbox_update_msg_handle:
     df4:    00 00 00 00     "\0\0\0\0"

bt_task_thread:
     df8:    00 00 00 00     "\0\0\0\0"
     dfc:    00 00 00 00     "\0\0\0\0"
     e00:    04 5c e1 01     "\x04\\x01\x01"
     e04:    08 5c e1 01     "\b\\x01\x01"
     e08:    0c 5c e1 01     "\x0c\\x01\x01"
     e0c:    10 5c e1 01     "\x00\\x01\x01"

hci_param:
     e10:    00 00 00 00     "\0\0\0\0"
     e14:    00 00 00 00     "\0\0\0\0"
     e18:    0a 00 20 31     "\n\0 1"
     e1c:    0a 00 bb 22     "\n\0\x0b""
     e20:    d6 05 ff ff     "\x06\x05\x0f\x0f"
     e24:    ff 03 80 ff     "\x0f\x03\x00\x0f"
     e28:    ff ff 3f ff     "\x0f\x0f?\x0f"
     e2c:    ff 1f f2 0f     "\x0f\x0f\x02\x0f"
     e30:    e8 fe 3f f7     "\x08\x0e?\x07"
     e34:    8d ff 1c 00     "\x0d\x0f\x0c\0"
     e38:    00 00 7d f7     "\0\0}\x07"
     e3c:    ff ff 7f 00     "\x0f\x0f\x0f\0"
     e40:    00 00 00 00     "\0\0\0\0"
     e44:    00 00 00 00     "\0\0\0\0"
     e48:    00 00 00 00     "\0\0\0\0"
     e4c:    00 00 00 00     "\0\0\0\0"
     e50:    00 00 00 00     "\0\0\0\0"
     e54:    00 00 00 00     "\0\0\0\0"
     e58:    00 00 00 00     "\0\0\0\0"
     e5c:    00 00 00 00     "\0\0\0\0"
     e60:    00 00 00 00     "\0\0\0\0"
     e64:    00 00 00 00     "\0\0\0\0"
     e68:    00 00 00 00     "\0\0\0\0"
     e6c:    00 00 00 00     "\0\0\0\0"
     e70:    00 00 00 00     "\0\0\0\0"
     e74:    00 00 00 00     "\0\0\0\0"
     e78:    00 00 00 00     "\0\0\0\0"
     e7c:    00 00 00 00     "\0\0\0\0"
     e80:    00 00 00 57     "\0\0\0W"
     e84:    74 78 a2 5a     "tx\x02Z"
     e88:    ab bf fe 8d     "\x0b\x0f\x0e\x0d"
     e8c:    fa c8 2d 79     "\x0a\x08-y"
     e90:    83 00 00 00     "\x03\0\0\0"
     e94:    00 00 00 00     "\0\0\0\0"
     e98:    00 00 00 00     "\0\0\0\0"
     e9c:    00 00 00 00     "\0\0\0\0"
     ea0:    00 00 45 00     "\0\0E\0"
     ea4:    00 00 00 00     "\0\0\0\0"
     ea8:    00 00 00 00     "\0\0\0\0"
     eac:    00 00 00 00     "\0\0\0\0"

adv_hdl:
     eb0:    00 00 00 00     "\0\0\0\0"

le_data_length.6:
     eb4:    00 00 00 00     "\0\0\0\0"

le_data_length.7:
     eb8:    00 00 00 00     "\0\0\0\0"

le_param:
     ebc:    00 00 00 00     "\0\0\0\0"
     ec0:    00 00 00 00     "\0\0\0\0"
     ec4:    01 02 03 04     "\x01\x02\x03\x04"
     ec8:    05 06 00 00     "\x05\x06\0\0"
     ecc:    00 00 00 00     "\0\0\0\0"
     ed0:    00 00 00 00     "\0\0\0\0"
     ed4:    00 00 00 00     "\0\0\0\0"
     ed8:    00 00 00 00     "\0\0\0\0"
     edc:    00 00 00 00     "\0\0\0\0"
     ee0:    00 00 00 00     "\0\0\0\0"
     ee4:    00 00 06 0f     "\0\0\x06\x0f"
     ee8:    00 09 61 00     "\0\ta\0"
     eec:    00 00 08 00     "\0\0\b\0"
     ef0:    78 00 72 07     "x\0r\x07"
     ef4:    ff ff ff 1f     "\x0f\x0f\x0f\x0f"
     ef8:    00 00 00 00     "\0\0\0\0"
     efc:    00 00 00 00     "\0\0\0\0"
     f00:    00 00 00 00     "\0\0\0\0"
     f04:    01 00 00 00     "\x01\0\0\0"
     f08:    00 00 00 00     "\0\0\0\0"
     f0c:    00 00 00 00     "\0\0\0\0"
     f10:    00 00 00 00     "\0\0\0\0"
     f14:    00 00 00 00     "\0\0\0\0"
     f18:    00 00 00 00     "\0\0\0\0"
     f1c:    00 00 00 00     "\0\0\0\0"
     f20:    00 00 00 00     "\0\0\0\0"
     f24:    00 00 00 00     "\0\0\0\0"
     f28:    00 00 00 00     "\0\0\0\0"
     f2c:    00 00 00 00     "\0\0\0\0"
     f30:    00 00 00 00     "\0\0\0\0"
     f34:    00 00 00 00     "\0\0\0\0"
     f38:    00 00 00 00     "\0\0\0\0"
     f3c:    00 00 00 00     "\0\0\0\0"
     f40:    00 00 00 00     "\0\0\0\0"
     f44:    00 00 00 00     "\0\0\0\0"
     f48:    00 00 00 00     "\0\0\0\0"
     f4c:    00 00 00 00     "\0\0\0\0"
     f50:    00 00 00 19     "\0\0\0\x09"
     f54:    00 00 00 00     "\0\0\0\0"
     f58:    00 00 00 00     "\0\0\0\0"
     f5c:    00 01 00 00     "\0\x01\0\0"
     f60:    00 00 00 00     "\0\0\0\0"
     f64:    00 00 00 00     "\0\0\0\0"

config_hci_ll_param.0:
     f68:    00 00 00 00     "\0\0\0\0"

g_ble_fp:
     f6c:    00 00 00 00     "\0\0\0\0"

rx_update_handle:
     f70:    00 00 00 00     "\0\0\0\0"

ble_slot_schedule.credits:
     f74:    00 00 00 00     "\0\0\0\0"

ble_window_autozoom.widen:
     f78:    00 00 00 00     "\0\0\0\0"

ble_finetimecnt_poweroff_sfr:
     f7c:    00 00 00 00     "\0\0\0\0"

update_conn:
     f80:    00 00 00 00     "\0\0\0\0"

bt_res_updata_flag:
     f84:    00 00 00 00     "\0\0\0\0"

uboot_revic_handle:
     f88:    00 00 00 00     "\0\0\0\0"

update_data_start:
     f8c:    05 08 06 05     "\x05\b\x06\x05"
     f90:    08 06 06 08     "\b\x06\x06\b"
     f94:    06 07 08 06     "\x06\x07\b\x06"
     f98:    0b 0c 07 0f     "\x0b\x0c\x07\x0f"
     f9c:    0f 07           "\x0f\x07"

sysvdd_vdc13_table:
     f9e:    06 06 06 06     "\x06\x06\x06\x06"
     fa2:    06 06 06 06     "\x06\x06\x06\x06"
     fa6:    06 06 06 07     "\x06\x06\x06\x07"
     faa:    07 07 07 07     "\x07\x07\x07\x07"
     fae:    00 00           "\0\0"

sys_clock_limit:
     fb0:    00 6c dc 02     "\0l\x0c\x02"
     fb4:    00 36 6e 01     "\06n\x01"
     fb8:    00 1b b7 00     "\0\x0b\x07\0"
     fbc:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fc0:    00 36 6e 01     "\06n\x01"
     fc4:    00 90 d0 03     "\0\x00\x00\x03"
     fc8:    00 48 e8 01     "\0H\x08\x01"
     fcc:    80 a8 12 01     "\x00\x08\x02\x01"
     fd0:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fd4:    00 36 6e 01     "\06n\x01"
     fd8:    00 6c dc 02     "\0l\x0c\x02"
     fdc:    00 6c dc 02     "\0l\x0c\x02"
     fe0:    00 36 6e 01     "\06n\x01"
     fe4:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fe8:    00 36 6e 01     "\06n\x01"
     fec:    00 90 d0 03     "\0\x00\x00\x03"
     ff0:    00 90 d0 03     "\0\x00\x00\x03"
     ff4:    00 48 e8 01     "\0H\x08\x01"
     ff8:    80 f0 fa 02     "\x00\x00\x0a\x02"
     ffc:    00 36 6e 01     "\06n\x01"
    1000:    00 d8 b8 05     "\0\x08\x08\x05"
    1004:    00 d8 b8 05     "\0\x08\x08\x05"
    1008:    00 6c dc 02     "\0l\x0c\x02"
    100c:    80 f0 fa 02     "\x00\x00\x0a\x02"
    1010:    00 36 6e 01     "\06n\x01"
    1014:    00 20 a1 07     "\0 \x01\x07"
    1018:    00 20 a1 07     "\0 \x01\x07"
    101c:    00 b4 c4 04     "\0\x04\x04\x04"
    1020:    80 f0 fa 02     "\x00\x00\x0a\x02"
    1024:    00 36 6e 01     "\06n\x01"

driver_data_end:
    1028:    00 00 00 00     "\0\0\0\0"
    102c:    00 00 00 00     "\0\0\0\0"
    1030:    00 00 00 00     "\0\0\0\0"
    1034:    00 00 00 00     "\0\0\0\0"
    1038:    00 00 00 00     "\0\0\0\0"
    103c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .irq_stack:
stack_magic:
    1040:    00 00 00 00     "\0\0\0\0"
    1044:    00 00 00 00     "\0\0\0\0"
    1048:    00 00 00 00     "\0\0\0\0"
    104c:    00 00 00 00     "\0\0\0\0"

_cpu0_sstack_begin:
    1050:    00 00 00 00     "\0\0\0\0"
    1054:    00 00 00 00     "\0\0\0\0"
    1058:    00 00 00 00     "\0\0\0\0"
    105c:    00 00 00 00     "\0\0\0\0"
    1060:    00 00 00 00     "\0\0\0\0"
    1064:    00 00 00 00     "\0\0\0\0"
    1068:    00 00 00 00     "\0\0\0\0"
    106c:    00 00 00 00     "\0\0\0\0"
    1070:    00 00 00 00     "\0\0\0\0"
    1074:    00 00 00 00     "\0\0\0\0"
    1078:    00 00 00 00     "\0\0\0\0"
    107c:    00 00 00 00     "\0\0\0\0"
    1080:    00 00 00 00     "\0\0\0\0"
    1084:    00 00 00 00     "\0\0\0\0"
    1088:    00 00 00 00     "\0\0\0\0"
    108c:    00 00 00 00     "\0\0\0\0"
    1090:    00 00 00 00     "\0\0\0\0"
    1094:    00 00 00 00     "\0\0\0\0"
    1098:    00 00 00 00     "\0\0\0\0"
    109c:    00 00 00 00     "\0\0\0\0"
    10a0:    00 00 00 00     "\0\0\0\0"
    10a4:    00 00 00 00     "\0\0\0\0"
    10a8:    00 00 00 00     "\0\0\0\0"
    10ac:    00 00 00 00     "\0\0\0\0"
    10b0:    00 00 00 00     "\0\0\0\0"
    10b4:    00 00 00 00     "\0\0\0\0"
    10b8:    00 00 00 00     "\0\0\0\0"
    10bc:    00 00 00 00     "\0\0\0\0"
    10c0:    00 00 00 00     "\0\0\0\0"
    10c4:    00 00 00 00     "\0\0\0\0"
    10c8:    00 00 00 00     "\0\0\0\0"
    10cc:    00 00 00 00     "\0\0\0\0"
    10d0:    00 00 00 00     "\0\0\0\0"
    10d4:    00 00 00 00     "\0\0\0\0"
    10d8:    00 00 00 00     "\0\0\0\0"
    10dc:    00 00 00 00     "\0\0\0\0"
    10e0:    00 00 00 00     "\0\0\0\0"
    10e4:    00 00 00 00     "\0\0\0\0"
    10e8:    00 00 00 00     "\0\0\0\0"
    10ec:    00 00 00 00     "\0\0\0\0"
    10f0:    00 00 00 00     "\0\0\0\0"
    10f4:    00 00 00 00     "\0\0\0\0"
    10f8:    00 00 00 00     "\0\0\0\0"
    10fc:    00 00 00 00     "\0\0\0\0"
    1100:    00 00 00 00     "\0\0\0\0"
    1104:    00 00 00 00     "\0\0\0\0"
    1108:    00 00 00 00     "\0\0\0\0"
    110c:    00 00 00 00     "\0\0\0\0"
    1110:    00 00 00 00     "\0\0\0\0"
    1114:    00 00 00 00     "\0\0\0\0"
    1118:    00 00 00 00     "\0\0\0\0"
    111c:    00 00 00 00     "\0\0\0\0"
    1120:    00 00 00 00     "\0\0\0\0"
    1124:    00 00 00 00     "\0\0\0\0"
    1128:    00 00 00 00     "\0\0\0\0"
    112c:    00 00 00 00     "\0\0\0\0"
    1130:    00 00 00 00     "\0\0\0\0"
    1134:    00 00 00 00     "\0\0\0\0"
    1138:    00 00 00 00     "\0\0\0\0"
    113c:    00 00 00 00     "\0\0\0\0"
    1140:    00 00 00 00     "\0\0\0\0"
    1144:    00 00 00 00     "\0\0\0\0"
    1148:    00 00 00 00     "\0\0\0\0"
    114c:    00 00 00 00     "\0\0\0\0"
    1150:    00 00 00 00     "\0\0\0\0"
    1154:    00 00 00 00     "\0\0\0\0"
    1158:    00 00 00 00     "\0\0\0\0"
    115c:    00 00 00 00     "\0\0\0\0"
    1160:    00 00 00 00     "\0\0\0\0"
    1164:    00 00 00 00     "\0\0\0\0"
    1168:    00 00 00 00     "\0\0\0\0"
    116c:    00 00 00 00     "\0\0\0\0"
    1170:    00 00 00 00     "\0\0\0\0"
    1174:    00 00 00 00     "\0\0\0\0"
    1178:    00 00 00 00     "\0\0\0\0"
    117c:    00 00 00 00     "\0\0\0\0"
    1180:    00 00 00 00     "\0\0\0\0"
    1184:    00 00 00 00     "\0\0\0\0"
    1188:    00 00 00 00     "\0\0\0\0"
    118c:    00 00 00 00     "\0\0\0\0"
    1190:    00 00 00 00     "\0\0\0\0"
    1194:    00 00 00 00     "\0\0\0\0"
    1198:    00 00 00 00     "\0\0\0\0"
    119c:    00 00 00 00     "\0\0\0\0"
    11a0:    00 00 00 00     "\0\0\0\0"
    11a4:    00 00 00 00     "\0\0\0\0"
    11a8:    00 00 00 00     "\0\0\0\0"
    11ac:    00 00 00 00     "\0\0\0\0"
    11b0:    00 00 00 00     "\0\0\0\0"
    11b4:    00 00 00 00     "\0\0\0\0"
    11b8:    00 00 00 00     "\0\0\0\0"
    11bc:    00 00 00 00     "\0\0\0\0"
    11c0:    00 00 00 00     "\0\0\0\0"
    11c4:    00 00 00 00     "\0\0\0\0"
    11c8:    00 00 00 00     "\0\0\0\0"
    11cc:    00 00 00 00     "\0\0\0\0"
    11d0:    00 00 00 00     "\0\0\0\0"
    11d4:    00 00 00 00     "\0\0\0\0"
    11d8:    00 00 00 00     "\0\0\0\0"
    11dc:    00 00 00 00     "\0\0\0\0"
    11e0:    00 00 00 00     "\0\0\0\0"
    11e4:    00 00 00 00     "\0\0\0\0"
    11e8:    00 00 00 00     "\0\0\0\0"
    11ec:    00 00 00 00     "\0\0\0\0"
    11f0:    00 00 00 00     "\0\0\0\0"
    11f4:    00 00 00 00     "\0\0\0\0"
    11f8:    00 00 00 00     "\0\0\0\0"
    11fc:    00 00 00 00     "\0\0\0\0"
    1200:    00 00 00 00     "\0\0\0\0"
    1204:    00 00 00 00     "\0\0\0\0"
    1208:    00 00 00 00     "\0\0\0\0"
    120c:    00 00 00 00     "\0\0\0\0"
    1210:    00 00 00 00     "\0\0\0\0"
    1214:    00 00 00 00     "\0\0\0\0"
    1218:    00 00 00 00     "\0\0\0\0"
    121c:    00 00 00 00     "\0\0\0\0"
    1220:    00 00 00 00     "\0\0\0\0"
    1224:    00 00 00 00     "\0\0\0\0"
    1228:    00 00 00 00     "\0\0\0\0"
    122c:    00 00 00 00     "\0\0\0\0"
    1230:    00 00 00 00     "\0\0\0\0"
    1234:    00 00 00 00     "\0\0\0\0"
    1238:    00 00 00 00     "\0\0\0\0"
    123c:    00 00 00 00     "\0\0\0\0"
    1240:    00 00 00 00     "\0\0\0\0"
    1244:    00 00 00 00     "\0\0\0\0"
    1248:    00 00 00 00     "\0\0\0\0"
    124c:    00 00 00 00     "\0\0\0\0"
    1250:    00 00 00 00     "\0\0\0\0"
    1254:    00 00 00 00     "\0\0\0\0"
    1258:    00 00 00 00     "\0\0\0\0"
    125c:    00 00 00 00     "\0\0\0\0"
    1260:    00 00 00 00     "\0\0\0\0"
    1264:    00 00 00 00     "\0\0\0\0"
    1268:    00 00 00 00     "\0\0\0\0"
    126c:    00 00 00 00     "\0\0\0\0"
    1270:    00 00 00 00     "\0\0\0\0"
    1274:    00 00 00 00     "\0\0\0\0"
    1278:    00 00 00 00     "\0\0\0\0"
    127c:    00 00 00 00     "\0\0\0\0"
    1280:    00 00 00 00     "\0\0\0\0"
    1284:    00 00 00 00     "\0\0\0\0"
    1288:    00 00 00 00     "\0\0\0\0"
    128c:    00 00 00 00     "\0\0\0\0"
    1290:    00 00 00 00     "\0\0\0\0"
    1294:    00 00 00 00     "\0\0\0\0"
    1298:    00 00 00 00     "\0\0\0\0"
    129c:    00 00 00 00     "\0\0\0\0"
    12a0:    00 00 00 00     "\0\0\0\0"
    12a4:    00 00 00 00     "\0\0\0\0"
    12a8:    00 00 00 00     "\0\0\0\0"
    12ac:    00 00 00 00     "\0\0\0\0"
    12b0:    00 00 00 00     "\0\0\0\0"
    12b4:    00 00 00 00     "\0\0\0\0"
    12b8:    00 00 00 00     "\0\0\0\0"
    12bc:    00 00 00 00     "\0\0\0\0"
    12c0:    00 00 00 00     "\0\0\0\0"
    12c4:    00 00 00 00     "\0\0\0\0"
    12c8:    00 00 00 00     "\0\0\0\0"
    12cc:    00 00 00 00     "\0\0\0\0"
    12d0:    00 00 00 00     "\0\0\0\0"
    12d4:    00 00 00 00     "\0\0\0\0"
    12d8:    00 00 00 00     "\0\0\0\0"
    12dc:    00 00 00 00     "\0\0\0\0"
    12e0:    00 00 00 00     "\0\0\0\0"
    12e4:    00 00 00 00     "\0\0\0\0"
    12e8:    00 00 00 00     "\0\0\0\0"
    12ec:    00 00 00 00     "\0\0\0\0"
    12f0:    00 00 00 00     "\0\0\0\0"
    12f4:    00 00 00 00     "\0\0\0\0"
    12f8:    00 00 00 00     "\0\0\0\0"
    12fc:    00 00 00 00     "\0\0\0\0"
    1300:    00 00 00 00     "\0\0\0\0"
    1304:    00 00 00 00     "\0\0\0\0"
    1308:    00 00 00 00     "\0\0\0\0"
    130c:    00 00 00 00     "\0\0\0\0"
    1310:    00 00 00 00     "\0\0\0\0"
    1314:    00 00 00 00     "\0\0\0\0"
    1318:    00 00 00 00     "\0\0\0\0"
    131c:    00 00 00 00     "\0\0\0\0"
    1320:    00 00 00 00     "\0\0\0\0"
    1324:    00 00 00 00     "\0\0\0\0"
    1328:    00 00 00 00     "\0\0\0\0"
    132c:    00 00 00 00     "\0\0\0\0"
    1330:    00 00 00 00     "\0\0\0\0"
    1334:    00 00 00 00     "\0\0\0\0"
    1338:    00 00 00 00     "\0\0\0\0"
    133c:    00 00 00 00     "\0\0\0\0"
    1340:    00 00 00 00     "\0\0\0\0"
    1344:    00 00 00 00     "\0\0\0\0"
    1348:    00 00 00 00     "\0\0\0\0"
    134c:    00 00 00 00     "\0\0\0\0"
    1350:    00 00 00 00     "\0\0\0\0"
    1354:    00 00 00 00     "\0\0\0\0"
    1358:    00 00 00 00     "\0\0\0\0"
    135c:    00 00 00 00     "\0\0\0\0"
    1360:    00 00 00 00     "\0\0\0\0"
    1364:    00 00 00 00     "\0\0\0\0"
    1368:    00 00 00 00     "\0\0\0\0"
    136c:    00 00 00 00     "\0\0\0\0"
    1370:    00 00 00 00     "\0\0\0\0"
    1374:    00 00 00 00     "\0\0\0\0"
    1378:    00 00 00 00     "\0\0\0\0"
    137c:    00 00 00 00     "\0\0\0\0"
    1380:    00 00 00 00     "\0\0\0\0"
    1384:    00 00 00 00     "\0\0\0\0"
    1388:    00 00 00 00     "\0\0\0\0"
    138c:    00 00 00 00     "\0\0\0\0"
    1390:    00 00 00 00     "\0\0\0\0"
    1394:    00 00 00 00     "\0\0\0\0"
    1398:    00 00 00 00     "\0\0\0\0"
    139c:    00 00 00 00     "\0\0\0\0"
    13a0:    00 00 00 00     "\0\0\0\0"
    13a4:    00 00 00 00     "\0\0\0\0"
    13a8:    00 00 00 00     "\0\0\0\0"
    13ac:    00 00 00 00     "\0\0\0\0"
    13b0:    00 00 00 00     "\0\0\0\0"
    13b4:    00 00 00 00     "\0\0\0\0"
    13b8:    00 00 00 00     "\0\0\0\0"
    13bc:    00 00 00 00     "\0\0\0\0"
    13c0:    00 00 00 00     "\0\0\0\0"
    13c4:    00 00 00 00     "\0\0\0\0"
    13c8:    00 00 00 00     "\0\0\0\0"
    13cc:    00 00 00 00     "\0\0\0\0"
    13d0:    00 00 00 00     "\0\0\0\0"
    13d4:    00 00 00 00     "\0\0\0\0"
    13d8:    00 00 00 00     "\0\0\0\0"
    13dc:    00 00 00 00     "\0\0\0\0"
    13e0:    00 00 00 00     "\0\0\0\0"
    13e4:    00 00 00 00     "\0\0\0\0"
    13e8:    00 00 00 00     "\0\0\0\0"
    13ec:    00 00 00 00     "\0\0\0\0"
    13f0:    00 00 00 00     "\0\0\0\0"
    13f4:    00 00 00 00     "\0\0\0\0"
    13f8:    00 00 00 00     "\0\0\0\0"
    13fc:    00 00 00 00     "\0\0\0\0"
    1400:    00 00 00 00     "\0\0\0\0"
    1404:    00 00 00 00     "\0\0\0\0"
    1408:    00 00 00 00     "\0\0\0\0"
    140c:    00 00 00 00     "\0\0\0\0"
    1410:    00 00 00 00     "\0\0\0\0"
    1414:    00 00 00 00     "\0\0\0\0"
    1418:    00 00 00 00     "\0\0\0\0"
    141c:    00 00 00 00     "\0\0\0\0"
    1420:    00 00 00 00     "\0\0\0\0"
    1424:    00 00 00 00     "\0\0\0\0"
    1428:    00 00 00 00     "\0\0\0\0"
    142c:    00 00 00 00     "\0\0\0\0"
    1430:    00 00 00 00     "\0\0\0\0"
    1434:    00 00 00 00     "\0\0\0\0"
    1438:    00 00 00 00     "\0\0\0\0"
    143c:    00 00 00 00     "\0\0\0\0"
    1440:    00 00 00 00     "\0\0\0\0"
    1444:    00 00 00 00     "\0\0\0\0"
    1448:    00 00 00 00     "\0\0\0\0"
    144c:    00 00 00 00     "\0\0\0\0"
    1450:    00 00 00 00     "\0\0\0\0"
    1454:    00 00 00 00     "\0\0\0\0"
    1458:    00 00 00 00     "\0\0\0\0"
    145c:    00 00 00 00     "\0\0\0\0"
    1460:    00 00 00 00     "\0\0\0\0"
    1464:    00 00 00 00     "\0\0\0\0"
    1468:    00 00 00 00     "\0\0\0\0"
    146c:    00 00 00 00     "\0\0\0\0"
    1470:    00 00 00 00     "\0\0\0\0"
    1474:    00 00 00 00     "\0\0\0\0"
    1478:    00 00 00 00     "\0\0\0\0"
    147c:    00 00 00 00     "\0\0\0\0"
    1480:    00 00 00 00     "\0\0\0\0"
    1484:    00 00 00 00     "\0\0\0\0"
    1488:    00 00 00 00     "\0\0\0\0"
    148c:    00 00 00 00     "\0\0\0\0"
    1490:    00 00 00 00     "\0\0\0\0"
    1494:    00 00 00 00     "\0\0\0\0"
    1498:    00 00 00 00     "\0\0\0\0"
    149c:    00 00 00 00     "\0\0\0\0"
    14a0:    00 00 00 00     "\0\0\0\0"
    14a4:    00 00 00 00     "\0\0\0\0"
    14a8:    00 00 00 00     "\0\0\0\0"
    14ac:    00 00 00 00     "\0\0\0\0"
    14b0:    00 00 00 00     "\0\0\0\0"
    14b4:    00 00 00 00     "\0\0\0\0"
    14b8:    00 00 00 00     "\0\0\0\0"
    14bc:    00 00 00 00     "\0\0\0\0"
    14c0:    00 00 00 00     "\0\0\0\0"
    14c4:    00 00 00 00     "\0\0\0\0"
    14c8:    00 00 00 00     "\0\0\0\0"
    14cc:    00 00 00 00     "\0\0\0\0"
    14d0:    00 00 00 00     "\0\0\0\0"
    14d4:    00 00 00 00     "\0\0\0\0"
    14d8:    00 00 00 00     "\0\0\0\0"
    14dc:    00 00 00 00     "\0\0\0\0"
    14e0:    00 00 00 00     "\0\0\0\0"
    14e4:    00 00 00 00     "\0\0\0\0"
    14e8:    00 00 00 00     "\0\0\0\0"
    14ec:    00 00 00 00     "\0\0\0\0"
    14f0:    00 00 00 00     "\0\0\0\0"
    14f4:    00 00 00 00     "\0\0\0\0"
    14f8:    00 00 00 00     "\0\0\0\0"
    14fc:    00 00 00 00     "\0\0\0\0"
    1500:    00 00 00 00     "\0\0\0\0"
    1504:    00 00 00 00     "\0\0\0\0"
    1508:    00 00 00 00     "\0\0\0\0"
    150c:    00 00 00 00     "\0\0\0\0"
    1510:    00 00 00 00     "\0\0\0\0"
    1514:    00 00 00 00     "\0\0\0\0"
    1518:    00 00 00 00     "\0\0\0\0"
    151c:    00 00 00 00     "\0\0\0\0"
    1520:    00 00 00 00     "\0\0\0\0"
    1524:    00 00 00 00     "\0\0\0\0"
    1528:    00 00 00 00     "\0\0\0\0"
    152c:    00 00 00 00     "\0\0\0\0"
    1530:    00 00 00 00     "\0\0\0\0"
    1534:    00 00 00 00     "\0\0\0\0"
    1538:    00 00 00 00     "\0\0\0\0"
    153c:    00 00 00 00     "\0\0\0\0"
    1540:    00 00 00 00     "\0\0\0\0"
    1544:    00 00 00 00     "\0\0\0\0"
    1548:    00 00 00 00     "\0\0\0\0"
    154c:    00 00 00 00     "\0\0\0\0"
    1550:    00 00 00 00     "\0\0\0\0"
    1554:    00 00 00 00     "\0\0\0\0"
    1558:    00 00 00 00     "\0\0\0\0"
    155c:    00 00 00 00     "\0\0\0\0"
    1560:    00 00 00 00     "\0\0\0\0"
    1564:    00 00 00 00     "\0\0\0\0"
    1568:    00 00 00 00     "\0\0\0\0"
    156c:    00 00 00 00     "\0\0\0\0"
    1570:    00 00 00 00     "\0\0\0\0"
    1574:    00 00 00 00     "\0\0\0\0"
    1578:    00 00 00 00     "\0\0\0\0"
    157c:    00 00 00 00     "\0\0\0\0"
    1580:    00 00 00 00     "\0\0\0\0"
    1584:    00 00 00 00     "\0\0\0\0"
    1588:    00 00 00 00     "\0\0\0\0"
    158c:    00 00 00 00     "\0\0\0\0"
    1590:    00 00 00 00     "\0\0\0\0"
    1594:    00 00 00 00     "\0\0\0\0"
    1598:    00 00 00 00     "\0\0\0\0"
    159c:    00 00 00 00     "\0\0\0\0"
    15a0:    00 00 00 00     "\0\0\0\0"
    15a4:    00 00 00 00     "\0\0\0\0"
    15a8:    00 00 00 00     "\0\0\0\0"
    15ac:    00 00 00 00     "\0\0\0\0"
    15b0:    00 00 00 00     "\0\0\0\0"
    15b4:    00 00 00 00     "\0\0\0\0"
    15b8:    00 00 00 00     "\0\0\0\0"
    15bc:    00 00 00 00     "\0\0\0\0"
    15c0:    00 00 00 00     "\0\0\0\0"
    15c4:    00 00 00 00     "\0\0\0\0"
    15c8:    00 00 00 00     "\0\0\0\0"
    15cc:    00 00 00 00     "\0\0\0\0"
    15d0:    00 00 00 00     "\0\0\0\0"
    15d4:    00 00 00 00     "\0\0\0\0"
    15d8:    00 00 00 00     "\0\0\0\0"
    15dc:    00 00 00 00     "\0\0\0\0"
    15e0:    00 00 00 00     "\0\0\0\0"
    15e4:    00 00 00 00     "\0\0\0\0"
    15e8:    00 00 00 00     "\0\0\0\0"
    15ec:    00 00 00 00     "\0\0\0\0"
    15f0:    00 00 00 00     "\0\0\0\0"
    15f4:    00 00 00 00     "\0\0\0\0"
    15f8:    00 00 00 00     "\0\0\0\0"
    15fc:    00 00 00 00     "\0\0\0\0"
    1600:    00 00 00 00     "\0\0\0\0"
    1604:    00 00 00 00     "\0\0\0\0"
    1608:    00 00 00 00     "\0\0\0\0"
    160c:    00 00 00 00     "\0\0\0\0"
    1610:    00 00 00 00     "\0\0\0\0"
    1614:    00 00 00 00     "\0\0\0\0"
    1618:    00 00 00 00     "\0\0\0\0"
    161c:    00 00 00 00     "\0\0\0\0"
    1620:    00 00 00 00     "\0\0\0\0"
    1624:    00 00 00 00     "\0\0\0\0"
    1628:    00 00 00 00     "\0\0\0\0"
    162c:    00 00 00 00     "\0\0\0\0"
    1630:    00 00 00 00     "\0\0\0\0"
    1634:    00 00 00 00     "\0\0\0\0"
    1638:    00 00 00 00     "\0\0\0\0"
    163c:    00 00 00 00     "\0\0\0\0"
    1640:    00 00 00 00     "\0\0\0\0"
    1644:    00 00 00 00     "\0\0\0\0"
    1648:    00 00 00 00     "\0\0\0\0"
    164c:    00 00 00 00     "\0\0\0\0"
    1650:    00 00 00 00     "\0\0\0\0"
    1654:    00 00 00 00     "\0\0\0\0"
    1658:    00 00 00 00     "\0\0\0\0"
    165c:    00 00 00 00     "\0\0\0\0"
    1660:    00 00 00 00     "\0\0\0\0"
    1664:    00 00 00 00     "\0\0\0\0"
    1668:    00 00 00 00     "\0\0\0\0"
    166c:    00 00 00 00     "\0\0\0\0"
    1670:    00 00 00 00     "\0\0\0\0"
    1674:    00 00 00 00     "\0\0\0\0"
    1678:    00 00 00 00     "\0\0\0\0"
    167c:    00 00 00 00     "\0\0\0\0"
    1680:    00 00 00 00     "\0\0\0\0"
    1684:    00 00 00 00     "\0\0\0\0"
    1688:    00 00 00 00     "\0\0\0\0"
    168c:    00 00 00 00     "\0\0\0\0"
    1690:    00 00 00 00     "\0\0\0\0"
    1694:    00 00 00 00     "\0\0\0\0"
    1698:    00 00 00 00     "\0\0\0\0"
    169c:    00 00 00 00     "\0\0\0\0"
    16a0:    00 00 00 00     "\0\0\0\0"
    16a4:    00 00 00 00     "\0\0\0\0"
    16a8:    00 00 00 00     "\0\0\0\0"
    16ac:    00 00 00 00     "\0\0\0\0"
    16b0:    00 00 00 00     "\0\0\0\0"
    16b4:    00 00 00 00     "\0\0\0\0"
    16b8:    00 00 00 00     "\0\0\0\0"
    16bc:    00 00 00 00     "\0\0\0\0"
    16c0:    00 00 00 00     "\0\0\0\0"
    16c4:    00 00 00 00     "\0\0\0\0"
    16c8:    00 00 00 00     "\0\0\0\0"
    16cc:    00 00 00 00     "\0\0\0\0"
    16d0:    00 00 00 00     "\0\0\0\0"
    16d4:    00 00 00 00     "\0\0\0\0"
    16d8:    00 00 00 00     "\0\0\0\0"
    16dc:    00 00 00 00     "\0\0\0\0"
    16e0:    00 00 00 00     "\0\0\0\0"
    16e4:    00 00 00 00     "\0\0\0\0"
    16e8:    00 00 00 00     "\0\0\0\0"
    16ec:    00 00 00 00     "\0\0\0\0"
    16f0:    00 00 00 00     "\0\0\0\0"
    16f4:    00 00 00 00     "\0\0\0\0"
    16f8:    00 00 00 00     "\0\0\0\0"
    16fc:    00 00 00 00     "\0\0\0\0"
    1700:    00 00 00 00     "\0\0\0\0"
    1704:    00 00 00 00     "\0\0\0\0"
    1708:    00 00 00 00     "\0\0\0\0"
    170c:    00 00 00 00     "\0\0\0\0"
    1710:    00 00 00 00     "\0\0\0\0"
    1714:    00 00 00 00     "\0\0\0\0"
    1718:    00 00 00 00     "\0\0\0\0"
    171c:    00 00 00 00     "\0\0\0\0"
    1720:    00 00 00 00     "\0\0\0\0"
    1724:    00 00 00 00     "\0\0\0\0"
    1728:    00 00 00 00     "\0\0\0\0"
    172c:    00 00 00 00     "\0\0\0\0"
    1730:    00 00 00 00     "\0\0\0\0"
    1734:    00 00 00 00     "\0\0\0\0"
    1738:    00 00 00 00     "\0\0\0\0"
    173c:    00 00 00 00     "\0\0\0\0"
    1740:    00 00 00 00     "\0\0\0\0"
    1744:    00 00 00 00     "\0\0\0\0"
    1748:    00 00 00 00     "\0\0\0\0"
    174c:    00 00 00 00     "\0\0\0\0"
    1750:    00 00 00 00     "\0\0\0\0"
    1754:    00 00 00 00     "\0\0\0\0"
    1758:    00 00 00 00     "\0\0\0\0"
    175c:    00 00 00 00     "\0\0\0\0"
    1760:    00 00 00 00     "\0\0\0\0"
    1764:    00 00 00 00     "\0\0\0\0"
    1768:    00 00 00 00     "\0\0\0\0"
    176c:    00 00 00 00     "\0\0\0\0"
    1770:    00 00 00 00     "\0\0\0\0"
    1774:    00 00 00 00     "\0\0\0\0"
    1778:    00 00 00 00     "\0\0\0\0"
    177c:    00 00 00 00     "\0\0\0\0"
    1780:    00 00 00 00     "\0\0\0\0"
    1784:    00 00 00 00     "\0\0\0\0"
    1788:    00 00 00 00     "\0\0\0\0"
    178c:    00 00 00 00     "\0\0\0\0"
    1790:    00 00 00 00     "\0\0\0\0"
    1794:    00 00 00 00     "\0\0\0\0"
    1798:    00 00 00 00     "\0\0\0\0"
    179c:    00 00 00 00     "\0\0\0\0"
    17a0:    00 00 00 00     "\0\0\0\0"
    17a4:    00 00 00 00     "\0\0\0\0"
    17a8:    00 00 00 00     "\0\0\0\0"
    17ac:    00 00 00 00     "\0\0\0\0"
    17b0:    00 00 00 00     "\0\0\0\0"
    17b4:    00 00 00 00     "\0\0\0\0"
    17b8:    00 00 00 00     "\0\0\0\0"
    17bc:    00 00 00 00     "\0\0\0\0"
    17c0:    00 00 00 00     "\0\0\0\0"
    17c4:    00 00 00 00     "\0\0\0\0"
    17c8:    00 00 00 00     "\0\0\0\0"
    17cc:    00 00 00 00     "\0\0\0\0"
    17d0:    00 00 00 00     "\0\0\0\0"
    17d4:    00 00 00 00     "\0\0\0\0"
    17d8:    00 00 00 00     "\0\0\0\0"
    17dc:    00 00 00 00     "\0\0\0\0"
    17e0:    00 00 00 00     "\0\0\0\0"
    17e4:    00 00 00 00     "\0\0\0\0"
    17e8:    00 00 00 00     "\0\0\0\0"
    17ec:    00 00 00 00     "\0\0\0\0"
    17f0:    00 00 00 00     "\0\0\0\0"
    17f4:    00 00 00 00     "\0\0\0\0"
    17f8:    00 00 00 00     "\0\0\0\0"
    17fc:    00 00 00 00     "\0\0\0\0"
    1800:    00 00 00 00     "\0\0\0\0"
    1804:    00 00 00 00     "\0\0\0\0"
    1808:    00 00 00 00     "\0\0\0\0"
    180c:    00 00 00 00     "\0\0\0\0"
    1810:    00 00 00 00     "\0\0\0\0"
    1814:    00 00 00 00     "\0\0\0\0"
    1818:    00 00 00 00     "\0\0\0\0"
    181c:    00 00 00 00     "\0\0\0\0"
    1820:    00 00 00 00     "\0\0\0\0"
    1824:    00 00 00 00     "\0\0\0\0"
    1828:    00 00 00 00     "\0\0\0\0"
    182c:    00 00 00 00     "\0\0\0\0"
    1830:    00 00 00 00     "\0\0\0\0"
    1834:    00 00 00 00     "\0\0\0\0"
    1838:    00 00 00 00     "\0\0\0\0"
    183c:    00 00 00 00     "\0\0\0\0"
    1840:    00 00 00 00     "\0\0\0\0"
    1844:    00 00 00 00     "\0\0\0\0"
    1848:    00 00 00 00     "\0\0\0\0"
    184c:    00 00 00 00     "\0\0\0\0"

stack_magic0:
    1850:    00 00 00 00     "\0\0\0\0"
    1854:    00 00 00 00     "\0\0\0\0"
    1858:    00 00 00 00     "\0\0\0\0"
    185c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .bss:
report_bss_begin:

hci_event_callback_registration:

le_stack_pool:

l2cap_stack:

le_l2cap_event_packet_handler:

hci_event_callback_registration.1472:

l2cap_fixed_channels:

__user_info:

att_s_hdl:

profile_l2cap_hdl:

btstack_stack:

profile_le_pool_hdl:

btstack_global_info:

att_global_info:

gatt_client_global_info:

system_bss_start:

is_key_active:

ble_work_state:

att_ram_buffer:

led8888_scan_t:

is_idle_active:

__errno.err:

buzzer_ctrl.init:

mutex:

charge_mode:

lrc.4:

lrc.2:

mutex.1036:

start_app.app_msg_type:

highCurrentTCB:

sys_low_power:

event:

cur_time.4:

cur_time.5:

cur_time.6:

timer_pool:

bin_cfg:

btif_cfg:

prev_half_msec:

link:

acl_tx_bulk_sem:

hdl.0:

cur_ch:

charge_flag:

connection_update_cnt:

gap_device_name_len:

ota_status:

DISPLAY_DATA_BUFFER.0:

led8888_scan.cnt:

DISPLAY_DATA_BUFFER.4:

DISPLAY_DATA_BUFFER.1:

DISPLAY_DATA_BUFFER.2:

DISPLAY_DATA_BUFFER.3:

cur_battery_level:

vbat_check.unit_cnt:

vbat_check.low_off_cnt:

vbat_check.low_warn_cnt:

vbat_check.charge_ccvol_v_cnt:

vbat_check.low_power_cnt:

vbat_check.low_voice_cnt:

vbat_check.power_normal_cnt:

cur_bat_st:

vbat_check.charge_online_flag:

skip_mode:

app_key_event_handler.goto_poweroff_flag:

p2m_ie:

flash_ie_bak:

flash_ie_bakh:

flash_pu_bak:

flash_pd_bak:

flash_out_bak:

flash_dir_bak:

wkup_src:

awkup_p_pnd:

awkup_n_pnd:

sys_low_power_request:

prev_putbyte:

sfc_is_busy:

bt_seek_type:

bt_seek_type.6031:

g_update_err_code:

lc_sector_align_mode:

_adc_res:

ldo5v_detect.ldo5v_on_cnt:

ldo5v_detect.ldo5v_off_cnt:

ldo5v_detect.ldo5v_keep_cnt:

charge_full_detect.charge_full_cnt:

con_handle:

charge_ui_timer_id:

bat_val:

battery_full_value:

countdown_stop_vibrate_id:

countdown_timer_id:

countdown_timer_display_id:

countdown_start_vibrate_id:

g_auto_shutdown_timer:

Hall_timer_id:

global_id:

g_bt_read_len:

adc_scan.adc_sample_flag:

__this:

adv_ctrl_en:

CURRENT_DATE_YEAR:

CURRENT_OCLOKE:

ble_update_ready_jump_flag:

lowpower_timer:

vbat_slow_timer:

vbat_fast_timer:

vbat_check.low_voice_first_flag:

is_app_active:

CURRENT_SKIP_NUM:

skip_num_start:

valid_circle:

uart_sfr.0:

uart_sfr.1:

debug:

tmr_sfr.0:

tmr_sfr.1:

tmr_sfr.2:

timer1_isr.cnt1:

hdl.5.506:

usr_jiffies:

delay_cnt:

hdl.4:

hdl.0.510:

hdl.6:

sys_div_bak:

reset_source_value:

port_edge_wakeup_callback:

aport_edge_wakeup_callback:

power_wakeup_param:

lrc.0:

lrc.6:

lrc.3:

lrc.5:

memory_init.init:

last_otcb:

last_tcb:

compensation:

tick_cnt:

pxEnd:

xMinimumEverFreeBytesRemaining:

xFreeBytesRemaining:

lb_send:

log_bufs:

jiffies_base:

log_output_busy:

hdl.0.5091:

hdl.2.5092:

bt_file_offset:

bt_read_buf:

lmp_ch_update_sleep_hdl:

lmp_ch_update_resume_hdl:

bt_file_offset.6030:

ble_update_ctrl.0:

ble_update_ctrl.2:

ble_update_ctrl.1:

ble_update_ctrl.3:

ble_ch_update_sleep_hdl:

ble_ch_update_resume_hdl:

bt_res_update_flag:

p_update_param:

p_update_op:

lc_boot_offset:

vm_poweroff_sfc_info.0:

vm_poweroff_sfc_info.1:

edr_remote_address:

bt_mac_addr_for_testbox:

xStart:

succ_report:

nor_sdfile_hdl:

burn_code:

usr_timer_head:

vbat_value_array:

vbg_value_array:

charge_var:

norflash_dev:

_sdfile_handl:

adv_data:

scan_rsp_data:

app_var:

flash_info:

log_mutex:

sys_timer_sem:

sfc_norflash_mutex:

pmu_voltage:

lrc.7:

adc_queue:

stack_mem:

vm_obj:

btctler_bss_start:

tws_bulk_pool_end:

lnav_flag:

ldo_trim_res:

rf_pwr_off_info_p:

ble_pwr_off_store:

h4_transport:

__h4_send_packet:

hdl.4803:

hci_cmd_tmp_buff:

ll_hdl:

pEvent_buf_static:

ll_error_code:

adv_param:

adv_data.3078:

scan_resp_data:

bb_hdl:

bredr_link_v:

lmp_acl_link:

update_bss_start:

curr_loader_file_head:

update_bss_end:

hdl.27:

hdl.5:

hdl.11:

hdl.2.371:

hdl.18:

hdl.19:

hdl.14:

hdl.16:

hdl.0.372:

hdl.1.373:

hdl.24:

hdl.23:

hdl.13:

hdl.15:

hdl.17:

hdl.29:

hdl.30:

hdl.31:

hdl.32:

hdl.3:

clk_set.last_clk:

clock_poweroff_sfc_info.0:

driver_bss_end:

CurrentTCB:
Disassembly of section .data_code:
report_data_code_begin:
    3280:    75 01             	[--sp] = {rets, r5, r4}			  ## task.c:32:0
    3282:    88 f3 8b 1d       	call 1063702 <local_irq_disable : 106d9c >			  ## task.c:35:5
    3286:    88 f3 95 1d       	call 1063722 <os_current_task_rom : 106db4 >			  ## task.c:37:23
    328a:    04 08             	r4 = r0			  ## task.c:37:23
    328c:    c5 ff 14 2b e1 01 	r5 = 31533844 <task_info_table : 1e12b14 >
    3292:    c0 ff 30 25 e1 01 	r0 = 31532336 <update_target_end+0x2300 : 1e12530 >
    3298:    41 08             	r1 = r4			  ## task.c:40:14
    329a:    88 f3 2b 1e       	call 1064022 <strcmp : 106ef4 >			  ## task.c:40:14
    329e:    06 20             	if (r0 == 0) goto 12 <report_data_code_begin+0x2C : 32ac >			  ## task.c:40:14
    32a0:    30 4a             	r0 = [r5 + 12]			  ## task.c:39:34
    32a2:    c5 80             	r5 += 12			  ## task.c:39:49
    32a4:    f9 31             	if (r0 != 0) goto -14 <report_data_code_begin+0x18 : 3298 >			  ## task.c:39:49
    32a6:    88 f3 77 1d       	call 1063662 <local_irq_enable : 106d98 >			  ## task.c:46:5
    32aa:    03 18             	goto 6 <report_data_code_begin+0x32 : 32b2 >			  ## task.c:46:5
    32ac:    88 f3 74 1d       	call 1063656 <local_irq_enable : 106d98 >			  ## task.c:41:13
    32b0:    04 4a             	r4 = [r5 + 0]			  ## task.c:42:23
    32b2:    40 08             	r0 = r4			  ## task.c:49:1
    32b4:    55 01             	{pc, r5, r4} = [sp++]			  ## task.c:49:1


jiffies_half_msec:
    32b6:    77 01             	[--sp] = {rets, r7-r4}			  ## common.c:10:0
    32b8:    c1 ff b0 08 00 00 	r1 = 2224 <jiffies : 8b0 >			  ## common.c:10:0
    32be:    00 42             	r0 = [r1 + 0]			  ## common.c:11:24
    32c0:    c2 ff f0 e0 1b 00 	r2 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## common.c:11:24
    32c6:    03 44             	r3 = [r2 + 0]			  ## common.c:12:23
    32c8:    12 44             	r2 = [r2 + 4]			  ## common.c:12:39
    32ca:    03 fe 14 39       	r3 = r3 * 20			  ## common.c:12:32
    32ce:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## common.c:12:37
    32d2:    34 fd f8 0c       	r4 = r0 & 134217727			  ## common.c:11:32
    32d6:    c3 ff 24 23 00 00 	r3 = 8996 <prev_half_msec : 2324 >			  ## common.c:11:32
    32dc:    00 46             	r0 = [r3 + 0]			  ## common.c:14:17
    32de:    46 71             	r6 = 20			  ## common.c:11:50
    32e0:    25 08             	r5 = r2			  ## common.c:14:11
    32e2:    80 fe 60 54       	r5 += r4 * r6			  ## common.c:14:11
    32e6:    16 70             	r6 = 1			  ## common.c:14:11
    32e8:    17 70             	r7 = 1			  ## common.c:15:13
    32ea:    05 f2 01 b0       	ifs (r5 < r0) goto 2 <jiffies_half_msec+0x3A : 32f0 >			  ## common.c:15:13
    32ee:    07 70             	r7 = 0			  ## common.c:15:13
    32f0:    05 f2 01 30       	if (r5 < r0) goto 2 <jiffies_half_msec+0x40 : 32f6 >
    32f4:    06 70             	r6 = 0			  ## common.c:14:15
    32f6:    56 bf             	r6 &= r7			  ## common.c:14:9
    32f8:    04 fe 14 49       	r4 = r4 * 20			  ## common.c:11:50
    32fc:    16 e0 08 10       	if (r6 != 1) goto 16 <jiffies_half_msec+0x5A : 3310 >
    3300:    45 81             	r5 += 20			  ## common.c:16:18
    3302:    05 f2 04 a0       	ifs (r5 >= r0) goto 8 <jiffies_half_msec+0x58 : 330e >			  ## common.c:16:18
    3306:    02 42             	r2 = [r1 + 0]			  ## common.c:19:24
    3308:    12 80             	r2 += 1			  ## common.c:19:24
    330a:    0a 42             	[r1 + 0] = r2			  ## common.c:19:24
    330c:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1
    330e:    44 81             	r4 += 20			  ## common.c:17:19
    3310:    80 b8             	r0 = r4 + r2			  ## common.c:24:24
    3312:    08 46             	[r3 + 0] = r0			  ## common.c:24:20
    3314:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1


jiffies_msec:
    3316:    34 00             	[--sp] = rets			  ## common.c:31:0
    3318:    ce 17             	call -100 <jiffies_half_msec : 32b6 >			  ## common.c:32:12
    331a:    40 d0             	r0 = r0 >> 1			  ## common.c:32:32
    331c:    30 00             	pc = [sp++]			  ## common.c:32:5


pcTaskName:
    331e:    80 80             	r0 += 8			  ## port_overwrite.c:108:0
    3320:    20 00             	rts			  ## port_overwrite.c:109:5


vCreateTaskStack:
    3322:    77 01             	[--sp] = {rets, r7-r4}			  ## port_overwrite.c:127:0
    3324:    12 08             	r2 = r1			  ## port_overwrite.c:127:0
    3326:    03 08             	r3 = r0			  ## port_overwrite.c:127:0
    3328:    32 f2 42 00       	if (r2 == r3) goto 132 <vCreateTaskStack+0x8E : 33b0 >			  ## port_overwrite.c:127:0
    332c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:135:14
    3332:    13 f6 e0 00       	[r0 + 224] = r3			  ## port_overwrite.c:134:15
    3336:    12 f6 e4 00       	[r0 + 228] = r2			  ## port_overwrite.c:135:14
    333a:    00 47             	r0 = [r3 + 64]			  ## port_overwrite.c:103:21
    333c:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:103:21
    333e:    05 fc 80 00       	r5 = r0 + 128			  ## port_overwrite.c:136:49
    3342:    51 f2 03 20       	if (r1 >= r5) goto 6 <vCreateTaskStack+0x2A : 334c >
    3346:    b0 f3 42 53       	call -2054524 <cpu_reset.1067 : 1e0d9ce >			  ## port_overwrite.c:139:5
    334a:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:139:5
    334c:    03 45             	r3 = [r2 + 64]			  ## port_overwrite.c:103:21
    334e:    00 44             	r0 = [r2 + 0]
    3350:    34 fc 80 00       	r4 = r3 + 128			  ## port_overwrite.c:142:49
    3354:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## port_overwrite.c:140:29
    3358:    40 f2 03 20       	if (r0 >= r4) goto 6 <vCreateTaskStack+0x40 : 3362 >
    335c:    b0 f3 37 53       	call -2054546 <cpu_reset.1067 : 1e0d9ce >			  ## port_overwrite.c:144:5
    3360:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:144:5
    3362:    01 4a             	r1 = [r5 + 0]			  ## port_overwrite.c:149:9
    3364:    67 b7             	r7 = r3 - r5			  ## port_overwrite.c:140:87
    3366:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## port_overwrite.c:145:29
    336a:    26 b1             	r6 = r0 - r4			  ## port_overwrite.c:145:87
    336c:    20 ff 5a 1f 02 00 	if (r1 == 1515870810) goto 4 <vCreateTaskStack+0x54 : 3376 >
    3372:    b0 f3 2c 53       	call -2054568 <cpu_reset.1067 : 1e0d9ce >			  ## port_overwrite.c:150:9
    3376:    a1 bf             	r1 = r7 - r6			  ## port_overwrite.c:165:26
    3378:    11 e0 07 b0       	ifs (r1 < 1) goto 14 <vCreateTaskStack+0x68 : 338a >			  ## port_overwrite.c:167:9
    337c:    80 bb             	r0 = r5 + r6			  ## port_overwrite.c:170:34
    337e:    88 f3 ab 1d       	call 1063766 <vfree_v2 : 106ed8 >			  ## port_overwrite.c:170:9
    3382:    40 08             	r0 = r4			  ## port_overwrite.c:173:9
    3384:    51 08             	r1 = r5			  ## port_overwrite.c:173:9
    3386:    62 08             	r2 = r6			  ## port_overwrite.c:173:9
    3388:    0a 18             	goto 20 <vCreateTaskStack+0x7C : 339e >			  ## port_overwrite.c:173:9
    338a:    f1 ef 05 c0       	ifs (r1 > -1) goto 10 <vCreateTaskStack+0x76 : 3398 >
    338e:    c0 b9             	r0 = r4 + r7			  ## port_overwrite.c:178:36
    3390:    61 fb 00 19       	r1 = 0 - r1			  ## port_overwrite.c:178:52
    3394:    88 f3 9e 1d       	call 1063740 <vmalloc_v2 : 106ed4 >			  ## port_overwrite.c:178:9
    3398:    40 08             	r0 = r4
    339a:    51 08             	r1 = r5
    339c:    72 08             	r2 = r7
    339e:    88 f3 9d 1d       	call 1063738 <vcopy_ : 106edc >
    33a2:    56 e0 05 30       	if (r6 < 5) goto 10 <vCreateTaskStack+0x8E : 33b0 >
    33a6:    a0 75             	r0 = 90			  ## port_overwrite.c:193:9
    33a8:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:193:9
    33aa:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:193:9
    33ac:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:193:9
    33ae:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:193:9
    33b0:    57 01             	{pc, r7-r4} = [sp++]			  ## port_overwrite.c:197:1


pvPortSwitch:
    33b2:    c0 ff 50 21 00 00 	r0 = 8528 <highCurrentTCB : 2150 >			  ## port_overwrite.c:213:0
    33b8:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:218:32
    33ba:    c1 ff 70 32 00 00 	r1 = 12912 <CurrentTCB : 3270 >			  ## port_overwrite.c:217:32
    33c0:    02 42             	r2 = [r1 + 0]			  ## port_overwrite.c:217:32
    33c2:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:218:23
    33c4:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:217:23
    33c6:    ad 1f             	goto -166 <vCreateTaskStack : 3322 >			  ## port_overwrite.c:220:5


uxTaskStack:
    33c8:    00 41             	r0 = [r0 + 64]			  ## port_overwrite.c:102:0
    33ca:    20 00             	rts			  ## port_overwrite.c:103:5


vAppSoftwareInterruptISR:
    33cc:    18 00             	cli			  ## port_overwrite.c:498:0
    33ce:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_overwrite.c:499:5
    33d2:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:499:5
    33d8:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:499:5
    33da:    f1 b1             	r1 &= 4294967287			  ## port_overwrite.c:499:5
    33dc:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:499:5
    33de:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_overwrite.c:499:5
    33e2:    3c 00             	sp = usp			  ## port_overwrite.c:499:5
    33e4:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## port_overwrite.c:499:5
    33e8:    e9 01             	[--sp] = {psr, rets, reti}			  ## port_overwrite.c:499:5
    33ea:    c1 ff 70 32 00 00 	r1 = 12912 <CurrentTCB : 3270 >			  ## port_overwrite.c:499:5
    33f0:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:499:5
    33f2:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:499:5
    33f4:    28 fb 00 0e       	r0 = sp			  ## port_overwrite.c:499:5
    33f8:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:499:5
    33fa:    3d 00             	sp = ssp			  ## port_overwrite.c:499:5
    33fc:    da 17             	call -76 <pvPortSwitch : 33b2 >			  ## port_overwrite.c:499:5
    33fe:    88 f3 4b 1d       	call 1063574 <OS_ClrPending : 106e98 >			  ## port_overwrite.c:499:5
    3402:    c0 ff 50 21 00 00 	r0 = 8528 <highCurrentTCB : 2150 >			  ## port_overwrite.c:499:5
    3408:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:499:5
    340a:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:499:5
    340c:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:499:5
    340e:    29 fb 00 0e       	sp = r0			  ## port_overwrite.c:499:5
    3412:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_overwrite.c:499:5
    3414:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_overwrite.c:499:5
    3418:    3e 00             	usp = sp			  ## port_overwrite.c:499:5
    341a:    3d 00             	sp = ssp			  ## port_overwrite.c:499:5
    341c:    78 f3 01 00       	[--sp] = {r0}			  ## port_overwrite.c:499:5
    3420:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:499:5
    3426:    00 f4 08 09       	[r0 + 0] |= 8			  ## port_overwrite.c:499:5
    342a:    70 f3 01 00       	{r0} = [sp++]			  ## port_overwrite.c:499:5
    342e:    1c 00             	sti			  ## port_overwrite.c:499:5
    3430:    22 00             	rti			  ## port_overwrite.c:499:5
    3432:    20 00             	rts			  ## port_overwrite.c:543:1


vAppPortStartFirstTask:
    3434:    18 00             	cli			  ## port_asm_mmu.S:12:0
    3436:    c0 ff 70 32 00 00 	r0 = 12912 <CurrentTCB : 3270 >			  ## port_asm_mmu.S:13:0
    343c:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:14:0
    343e:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:15:0
    3440:    b0 f3 ec 52       	call -2054696 <vFillingTaskStack : 1e0da1c >			  ## port_asm_mmu.S:16:0
    3444:    c0 ff 70 32 00 00 	r0 = 12912 <CurrentTCB : 3270 >			  ## port_asm_mmu.S:17:0
    344a:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:18:0
    344c:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:19:0
    344e:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:20:0
    3450:    29 fb 00 0e       	sp = r0			  ## port_asm_mmu.S:21:0
    3454:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_asm_mmu.S:22:0
    3456:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_asm_mmu.S:23:0
    345a:    1c 00             	sti			  ## port_asm_mmu.S:24:0
    345c:    22 00             	rti			  ## port_asm_mmu.S:25:0


begin_of_data:
    345e:    e0 01             	[--sp] = {psr}			  ## port_asm_mmu.S:39:0
    3460:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_asm_mmu.S:40:0
    3464:    c0 ff b0 08 00 00 	r0 = 2224 <jiffies : 8b0 >			  ## port_asm_mmu.S:41:0
    346a:    01 40             	r1 = [r0 + 0]			  ## port_asm_mmu.S:42:0
    346c:    11 80             	r1 += 1			  ## port_asm_mmu.S:43:0
    346e:    09 40             	[r0 + 0] = r1			  ## port_asm_mmu.S:44:0
    3470:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_asm_mmu.S:45:0
    3474:    a0 01             	{psr} = [sp++]			  ## port_asm_mmu.S:46:0
    3476:    c8 f3 11 1d       	goto 1063458 <vTickISR : 106e9c >			  ## port_asm_mmu.S:47:0
    347a:    00 00             	nop
    347c:    00 00             	nop
    347e:    00 00             	nop


delay_nus:
    3480:    c1 ff 80 48 00 00 	r1 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:170:0
    3486:    01 f9 45 10       	r1 = b[r1 + 69] (u)			  ## power_hw.c:172:16
    348a:    08 0e             	r0 = r1 * r0			  ## power_hw.c:172:14
    348c:    03 20             	if (r0 == 0) goto 6 <delay_nus+0x14 : 3494 >
    348e:    f0 8f             	r0 += -1			  ## power_hw.c:163:13
    3490:    00 00             	nop			  ## power_hw.c:164:9
    3492:    fd 31             	if (r0 != 0) goto -6 <delay_nus+0xE : 348e >			  ## power_hw.c:164:9
    3494:    20 00             	rts			  ## power_hw.c:173:1


p33_soft_reset:
    3496:    c0 ff a0 18 1a 00 	r0 = 1710240 <uECC_vli_cmp_unsafe+0x9A8A4 : 1a18a0 >			  ## power_hw.c:1609:0
    349c:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1610:5
    349e:    11 b2             	r1 |= 16			  ## power_hw.c:1610:5
    34a0:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1610:5
    34a2:    20 00             	rts			  ## power_hw.c:1611:1


enter_spi_code:
    34a4:    34 00             	[--sp] = rets			  ## vm_sfc.c:258:0
    34a6:    88 f3 79 1c       	call 1063154 <local_irq_disable : 106d9c >			  ## vm_sfc.c:260:5
    34aa:    08 00             	csync			  ## vm_sfc.c:260:5
    34ac:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    34b2:    11 70             	r1 = 1			  ## vm_sfc.c:222:17
    34b4:    11 f9 23 00       	b[r0 + 35] = r1			  ## vm_sfc.c:222:17
    34b8:    10 70             	r0 = 1			  ## vm_sfc.c:264:5
    34ba:    88 f3 33 1d       	call 1063526 <sfc_suspend : 106f24 >			  ## vm_sfc.c:264:5
    34be:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:266:29
    34c4:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:266:29
    34c6:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    34cc:    c0 f4 43 09       	[r0 + 0] = 67			  ## vm_sfc.c:287:22
    34d0:    c1 f4 47 09       	[r0 + 4] = 71			  ## vm_sfc.c:288:22
    34d4:    c2 f4 4b 09       	[r0 + 8] = 75			  ## vm_sfc.c:289:22
    34d8:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:289:22
    34dc:    c0 f4 16 09       	[r0 + 0] = 22			  ## vm_sfc.c:290:26
    34e0:    c1 f4 17 09       	[r0 + 4] = 23			  ## vm_sfc.c:291:26
    34e4:    30 00             	pc = [sp++]			  ## vm_sfc.c:301:1


spi_writebyte:
    34e6:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:73:0
    34ec:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:74:18
    34f0:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:75:18
    34f2:    72 b6             	r2 &= 4294963199			  ## vm_sfc.c:75:18
    34f4:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:75:18
    34f6:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:76:18
    34f8:    08 00             	csync			  ## vm_sfc.c:65:5
    34fa:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:66:23
    34fc:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:66:12
    34fe:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte+0x14 : 34fa >			  ## vm_sfc.c:66:5
    3502:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:67:18
    3506:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:78:18
    3508:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:78:18
    350a:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:78:18
    350c:    20 00             	rts			  ## vm_sfc.c:79:1


norflash_send_addr:
    350e:    34 00             	[--sp] = rets			  ## vm_sfc.c:350:0
    3510:    03 08             	r3 = r0			  ## vm_sfc.c:350:0
    3512:    88 fd 80 03       	r0 = uextra(r3, p:16, l:8)			  ## vm_sfc.c:351:5
    3516:    e7 17             	call -50 <spi_writebyte : 34e6 >			  ## vm_sfc.c:351:5
    3518:    88 fd 40 03       	r0 = uextra(r3, p:8, l:8)			  ## vm_sfc.c:352:5
    351c:    e4 17             	call -56 <spi_writebyte : 34e6 >			  ## vm_sfc.c:352:5
    351e:    c0 04             	r0 = r3.b0 (u)			  ## vm_sfc.c:353:5
    3520:    88 01             	{rets} = [sp++]			  ## vm_sfc.c:353:5
    3522:    e1 1f             	goto -62 <spi_writebyte : 34e6 >			  ## vm_sfc.c:353:5


spi_readbyte_dma:
    3524:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:105:0
    352a:    c2 f4 ff 09       	[r0 + 8] = 255			  ## vm_sfc.c:108:18
    352e:    08 00             	csync			  ## vm_sfc.c:65:5
    3530:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:66:23
    3532:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:66:12
    3534:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_readbyte_dma+0xC : 3530 >			  ## vm_sfc.c:66:5
    3538:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:67:18
    353c:    20 40             	r0 = [r0 + 8]			  ## vm_sfc.c:110:25
    353e:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:112:5
    3540:    20 00             	rts			  ## vm_sfc.c:112:5


spi_read_dma:
    3542:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:156:0
    3544:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:157:29
    354a:    02 44             	r2 = [r2 + 0]			  ## vm_sfc.c:157:29
    354c:    c4 ff 00 1c 1e 00 	r4 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:157:29
    3552:    00 f4 10 4a       	[r4 + 0] |= 4096			  ## vm_sfc.c:164:18
    3556:    84 fd 40 52       	r5 = uextra(r2, p:8, l:4)			  ## vm_sfc.c:166:5
    355a:    12 08             	r2 = r1
    355c:    03 08             	r3 = r0
    355e:    95 e0 12 80       	if (r5 > 9) goto 36 <spi_read_dma+0x44 : 3586 >
    3562:    10 70             	r0 = 1
    3564:    f8 fd 50 10       	r1 = r0 << r5
    3568:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    356c:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >
    3570:    51 f1 06 00       	if ((r1 & r5) != 0) goto 12 <spi_read_dma+0x3E : 3580 >
    3574:    00 fb a8 02       	r0 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    3578:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <spi_read_dma+0x44 : 3586 >
    357c:    00 fb 00 08       	r0 = 2048 <report_mmu_tlb_size : 800 >
    3580:    01 48             	r1 = [r4 + 0]
    3582:    50 b2             	r0 |= r1
    3584:    08 48             	[r4 + 0] = r0
    3586:    06 24             	if (r2 == 0) goto 12 <spi_read_dma+0x52 : 3594 >
    3588:    cd 17             	call -102 <spi_readbyte_dma : 3524 >			  ## vm_sfc.c:185:16
    358a:    f2 8f             	r2 += -1			  ## vm_sfc.c:184:15
    358c:    a1 04             	r1 = r2.l (u)			  ## vm_sfc.c:184:5
    358e:    90 f9 01 30       	b[r3 ++= 1] = r0			  ## vm_sfc.c:185:14
    3592:    fa 33             	if (r1 != 0) goto -12 <spi_read_dma+0x46 : 3588 >
    3594:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:189:18
    3596:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:189:18
    359a:    00 70             	r0 = 0			  ## vm_sfc.c:190:5
    359c:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:189:18
    359e:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:190:5


spi_readbyte:
    35a0:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:90:0
    35a6:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:93:18
    35aa:    00 f4 10 1a       	[r1 + 0] |= 4096			  ## vm_sfc.c:94:18
    35ae:    c2 f4 ff 19       	[r1 + 8] = 255			  ## vm_sfc.c:95:18
    35b2:    08 00             	csync			  ## vm_sfc.c:65:5
    35b4:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:66:23
    35b6:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:66:12
    35b8:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_readbyte+0x14 : 35b4 >			  ## vm_sfc.c:66:5
    35bc:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:67:18
    35c0:    20 42             	r0 = [r1 + 8]			  ## vm_sfc.c:97:25
    35c2:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:98:18
    35c4:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:98:18
    35c6:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:100:5
    35c8:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:98:18
    35ca:    20 00             	rts			  ## vm_sfc.c:100:5


spi_write_dma:
    35cc:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:117:0
    35ce:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:118:29
    35d4:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:118:29
    35d6:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:118:29
    35dc:    04 44             	r4 = [r2 + 0]			  ## vm_sfc.c:125:18
    35de:    74 b6             	r4 &= 4294963199			  ## vm_sfc.c:125:18
    35e0:    84 fd 40 33       	r3 = uextra(r3, p:8, l:4)			  ## vm_sfc.c:127:5
    35e4:    0c 44             	[r2 + 0] = r4			  ## vm_sfc.c:125:18
    35e6:    93 e0 15 80       	if (r3 > 9) goto 42 <spi_write_dma+0x48 : 3614 >			  ## vm_sfc.c:125:18
    35ea:    14 70             	r4 = 1
    35ec:    c4 0c             	r4 <<= r3
    35ee:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    35f2:    03 fb 00 04       	r3 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >
    35f6:    54 f1 0a 00       	if ((r4 & r5) != 0) goto 20 <spi_write_dma+0x42 : 360e >
    35fa:    03 fb a8 02       	r3 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    35fe:    34 f0 09 00       	if ((r4 & r3) == 0) goto 18 <spi_write_dma+0x48 : 3614 >
    3602:    03 fb 00 08       	r3 = 2048 <report_mmu_tlb_size : 800 >
    3606:    03 18             	goto 6 <spi_write_dma+0x42 : 360e >
    3608:    f1 8f             	r1 += -1			  ## vm_sfc.c:145:15
    360a:    03 fb 00 40       	r3 = 16384 <low_power_system_down+0x108 : 4000 >
    360e:    04 44             	r4 = [r2 + 0]
    3610:    53 b8             	r3 |= r4
    3612:    0b 44             	[r2 + 0] = r3
    3614:    63 04             	r3 = r1.l (u)			  ## vm_sfc.c:145:5
    3616:    09 26             	if (r3 == 0) goto 18 <spi_write_dma+0x5E : 362a >			  ## vm_sfc.c:145:5
    3618:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## vm_sfc.c:84:20
    361c:    2b 44             	[r2 + 8] = r3			  ## vm_sfc.c:84:18
    361e:    08 00             	csync			  ## vm_sfc.c:65:5
    3620:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:66:23
    3622:    f3 04             	r3 = r3.l (s)			  ## vm_sfc.c:66:12
    3624:    f3 ef fc cf       	ifs (r3 > -1) goto -8 <spi_write_dma+0x54 : 3620 >			  ## vm_sfc.c:66:5
    3628:    ef 1f             	goto -34 <spi_write_dma+0x3C : 3608 >			  ## vm_sfc.c:66:5
    362a:    00 44             	r0 = [r2 + 0]			  ## vm_sfc.c:149:18
    362c:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:149:18
    3630:    00 70             	r0 = 0			  ## vm_sfc.c:151:5
    3632:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:149:18
    3634:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:151:5


__norflash_read:
    3636:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:408:0
    3638:    de 0b             	sp += -68			  ## vm_sfc.c:408:0
    363a:    c4 ff 00 02 1f 00 	r4 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:409:29
    3640:    07 48             	r7 = [r4 + 0]			  ## vm_sfc.c:409:29
    3642:    a4 fd 40 57       	r5 = sextra(r7, p:8, l:4)			  ## vm_sfc.c:417:5
    3646:    24 08             	r4 = r2			  ## vm_sfc.c:417:5
    3648:    16 08             	r6 = r1
    364a:    09 08             	r9 = r0
    364c:    05 e0 25 b0       	ifs (r5 < 0) goto 74 <.GJTIE114_0_0_+0x2C : 369a >
    3650:    84 fd 40 07       	r0 = uextra(r7, p:8, l:4)
    3654:    41 c0             	r1 = r0 << 1
    3656:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    365c:    b1 00             	tbh [r1]


.GJTIL114_0_0_:
    365e:    08 00     < 8 : 0x8 >
    3660:    20 00     < 32 : 0x20 >
    3662:    37 00     < 55 : 0x37 >
    3664:    50 00     < 80 : 0x50 >
    3666:    69 00     < 105 : 0x69 >
    3668:    8b 00     < 139 : 0x8B >
    366a:    b1 00     < 177 : 0xB1 >
    366c:    d4 00     < 212 : 0xD4 >
    366e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3670:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3672:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3674:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3676:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3678:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    367a:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    367c:    1d 02             	[sp+4] = r5
    367e:    30 70             	r0 = 3			  ## vm_sfc.c:420:9
    3680:    32 17             	call -412 <spi_writebyte : 34e6 >			  ## vm_sfc.c:420:9
    3682:    60 08             	r0 = r6			  ## vm_sfc.c:421:9
    3684:    44 17             	call -376 <norflash_send_addr : 350e >			  ## vm_sfc.c:421:9
    3686:    90 08             	r0 = r9			  ## vm_sfc.c:422:9
    3688:    41 08             	r1 = r4			  ## vm_sfc.c:422:9
    368a:    5b 17             	call -330 <spi_read_dma : 3542 >			  ## vm_sfc.c:422:9
    368c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    368e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3690:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3692:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3696:    3d 02             	[sp+12] = r5
    3698:    de 18             	goto 444 <.GJTIE114_0_0_+0x1E8 : 3856 >
    369a:    f4 07             	r4 = -1
    369c:    dc 18             	goto 440 <.GJTIE114_0_0_+0x1E8 : 3856 >
    369e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    36a0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    36a2:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    36a4:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    36a6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    36a8:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    36aa:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    36ac:    4d 02             	[sp+16] = r5
    36ae:    b0 70             	r0 = 11			  ## vm_sfc.c:428:9
    36b0:    1a 17             	call -460 <spi_writebyte : 34e6 >			  ## vm_sfc.c:428:9
    36b2:    60 08             	r0 = r6			  ## vm_sfc.c:429:9
    36b4:    2c 17             	call -424 <norflash_send_addr : 350e >			  ## vm_sfc.c:429:9
    36b6:    74 17             	call -280 <spi_readbyte : 35a0 >			  ## vm_sfc.c:430:9
    36b8:    90 08             	r0 = r9			  ## vm_sfc.c:431:9
    36ba:    41 08             	r1 = r4			  ## vm_sfc.c:431:9
    36bc:    42 17             	call -380 <spi_read_dma : 3542 >			  ## vm_sfc.c:431:9
    36be:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    36c0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    36c2:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    36c4:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    36c8:    5d 02             	[sp+20] = r5
    36ca:    c5 18             	goto 394 <.GJTIE114_0_0_+0x1E8 : 3856 >
    36cc:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    36ce:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    36d0:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    36d2:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    36d4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    36d6:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    36d8:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    36da:    cd 02             	[sp+48] = r5
    36dc:    b0 73             	r0 = 59			  ## vm_sfc.c:464:9
    36de:    03 17             	call -506 <spi_writebyte : 34e6 >			  ## vm_sfc.c:464:9
    36e0:    60 08             	r0 = r6			  ## vm_sfc.c:465:9
    36e2:    15 17             	call -470 <norflash_send_addr : 350e >			  ## vm_sfc.c:465:9
    36e4:    00 a0             	r0 = sp + 0
    36e6:    21 70             	r1 = 2			  ## vm_sfc.c:466:9
    36e8:    2c 17             	call -424 <spi_read_dma : 3542 >			  ## vm_sfc.c:466:9
    36ea:    90 08             	r0 = r9			  ## vm_sfc.c:467:9
    36ec:    41 08             	r1 = r4			  ## vm_sfc.c:467:9
    36ee:    29 17             	call -430 <spi_read_dma : 3542 >			  ## vm_sfc.c:467:9
    36f0:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    36f2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    36f4:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    36f6:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    36fa:    fd 02             	[sp+60] = r5
    36fc:    ac 18             	goto 344 <.GJTIE114_0_0_+0x1E8 : 3856 >
    36fe:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3700:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3702:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3704:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3706:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3708:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    370a:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    370c:    0d 03             	[sp+64] = r5
    370e:    b0 76             	r0 = 107			  ## vm_sfc.c:474:9
    3710:    ea 16             	call -556 <spi_writebyte : 34e6 >			  ## vm_sfc.c:474:9
    3712:    60 08             	r0 = r6			  ## vm_sfc.c:475:9
    3714:    fc 16             	call -520 <norflash_send_addr : 350e >			  ## vm_sfc.c:475:9
    3716:    00 a0             	r0 = sp + 0
    3718:    41 70             	r1 = 4			  ## vm_sfc.c:476:9
    371a:    13 17             	call -474 <spi_read_dma : 3542 >			  ## vm_sfc.c:476:9
    371c:    90 08             	r0 = r9			  ## vm_sfc.c:477:9
    371e:    41 08             	r1 = r4			  ## vm_sfc.c:477:9
    3720:    10 17             	call -480 <spi_read_dma : 3542 >			  ## vm_sfc.c:477:9
    3722:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3724:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3726:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3728:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    372c:    ed 02             	[sp+56] = r5
    372e:    93 18             	goto 294 <.GJTIE114_0_0_+0x1E8 : 3856 >
    3730:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:436:38
    3732:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:436:26
    3736:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:437:38
    3738:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:437:26
    373c:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:438:26
    3740:    00 70             	r0 = 0			  ## vm_sfc.c:439:26
    3742:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:439:26
    3746:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3748:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    374a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    374c:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    374e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3750:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3752:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    3754:    6d 02             	[sp+24] = r5
    3756:    b0 7b             	r0 = 187			  ## vm_sfc.c:441:9
    3758:    c6 16             	call -628 <spi_writebyte : 34e6 >			  ## vm_sfc.c:441:9
    375a:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:441:9
    375c:    41 70             	r1 = 4			  ## vm_sfc.c:442:9
    375e:    36 17             	call -404 <spi_write_dma : 35cc >			  ## vm_sfc.c:442:9
    3760:    90 08             	r0 = r9			  ## vm_sfc.c:443:9
    3762:    41 08             	r1 = r4			  ## vm_sfc.c:443:9
    3764:    ee 16             	call -548 <spi_read_dma : 3542 >			  ## vm_sfc.c:443:9
    3766:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3768:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    376a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    376c:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3770:    9d 02             	[sp+36] = r5
    3772:    71 18             	goto 226 <.GJTIE114_0_0_+0x1E8 : 3856 >
    3774:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:482:38
    3776:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:482:26
    377a:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:483:38
    377c:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:483:26
    3780:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:484:26
    3784:    00 70             	r0 = 0			  ## vm_sfc.c:485:26
    3786:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:485:26
    378a:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    378c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    378e:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3790:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3792:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3794:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3796:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    3798:    dd 02             	[sp+52] = r5
    379a:    b0 7e             	r0 = 235			  ## vm_sfc.c:488:9
    379c:    a4 16             	call -696 <spi_writebyte : 34e6 >			  ## vm_sfc.c:488:9
    379e:    06 a0             	r6 = sp + 0			  ## vm_sfc.c:488:9
    37a0:    41 70             	r1 = 4			  ## vm_sfc.c:489:9
    37a2:    60 08             	r0 = r6			  ## vm_sfc.c:489:9
    37a4:    13 17             	call -474 <spi_write_dma : 35cc >			  ## vm_sfc.c:489:9
    37a6:    21 70             	r1 = 2			  ## vm_sfc.c:490:9
    37a8:    60 08             	r0 = r6			  ## vm_sfc.c:490:9
    37aa:    cb 16             	call -618 <spi_read_dma : 3542 >			  ## vm_sfc.c:490:9
    37ac:    90 08             	r0 = r9			  ## vm_sfc.c:491:9
    37ae:    41 08             	r1 = r4			  ## vm_sfc.c:491:9
    37b0:    c8 16             	call -624 <spi_read_dma : 3542 >			  ## vm_sfc.c:491:9
    37b2:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    37b4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    37b6:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    37b8:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    37bc:    8d 02             	[sp+32] = r5
    37be:    4b 18             	goto 150 <.GJTIE114_0_0_+0x1E8 : 3856 >
    37c0:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:448:38
    37c2:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:448:26
    37c6:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:449:38
    37c8:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:449:26
    37cc:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:450:26
    37d0:    00 7a             	r0 = 160			  ## vm_sfc.c:451:26
    37d2:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:451:26
    37d6:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    37d8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    37da:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    37dc:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    37de:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    37e0:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    37e2:    a6 70             	r6 = 10			  ## vm_sfc.c:58:53
    37e4:    ae 02             	[sp+40] = r6
    37e6:    02 26             	if (r3 == 0) goto 4 <.GJTIE114_0_0_+0x17E : 37ec >
    37e8:    b0 7b             	r0 = 187			  ## vm_sfc.c:454:13
    37ea:    7d 16             	call -774 <spi_writebyte : 34e6 >			  ## vm_sfc.c:454:13
    37ec:    00 a0             	r0 = sp + 0
    37ee:    41 70             	r1 = 4			  ## vm_sfc.c:456:9
    37f0:    ed 16             	call -550 <spi_write_dma : 35cc >			  ## vm_sfc.c:456:9
    37f2:    90 08             	r0 = r9			  ## vm_sfc.c:457:9
    37f4:    41 08             	r1 = r4			  ## vm_sfc.c:457:9
    37f6:    a5 16             	call -694 <spi_read_dma : 3542 >			  ## vm_sfc.c:457:9
    37f8:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    37fa:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    37fc:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    37fe:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3802:    be 02             	[sp+44] = r6
    3804:    28 18             	goto 80 <.GJTIE114_0_0_+0x1E8 : 3856 >
    3806:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:496:38
    3808:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:496:26
    380c:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:497:38
    380e:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:497:26
    3812:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:498:26
    3816:    00 7a             	r0 = 160			  ## vm_sfc.c:499:26
    3818:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:499:26
    381c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    381e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3820:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3822:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3824:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3826:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3828:    a8 70             	r8 = 10			  ## vm_sfc.c:58:53
    382a:    18 f5 1c 00       	[sp+28] = r8
    382e:    02 26             	if (r3 == 0) goto 4 <.GJTIE114_0_0_+0x1C6 : 3834 >
    3830:    b0 7e             	r0 = 235			  ## vm_sfc.c:502:13
    3832:    59 16             	call -846 <spi_writebyte : 34e6 >			  ## vm_sfc.c:502:13
    3834:    06 a0             	r6 = sp + 0
    3836:    41 70             	r1 = 4			  ## vm_sfc.c:504:9
    3838:    60 08             	r0 = r6			  ## vm_sfc.c:504:9
    383a:    c8 16             	call -624 <spi_write_dma : 35cc >			  ## vm_sfc.c:504:9
    383c:    21 70             	r1 = 2			  ## vm_sfc.c:505:9
    383e:    60 08             	r0 = r6			  ## vm_sfc.c:505:9
    3840:    80 16             	call -768 <spi_read_dma : 3542 >			  ## vm_sfc.c:505:9
    3842:    90 08             	r0 = r9			  ## vm_sfc.c:506:9
    3844:    41 08             	r1 = r4			  ## vm_sfc.c:506:9
    3846:    7d 16             	call -774 <spi_read_dma : 3542 >			  ## vm_sfc.c:506:9
    3848:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    384a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    384c:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    384e:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3852:    18 f5 08 00       	[sp+8] = r8
    3856:    40 08             	r0 = r4			  ## vm_sfc.c:514:1
    3858:    22 0a             	sp += 68			  ## vm_sfc.c:514:1
    385a:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:514:1


_norflash_read:
    385c:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:546:0
    385e:    24 08             	r4 = r2			  ## vm_sfc.c:546:0
    3860:    15 08             	r5 = r1			  ## vm_sfc.c:546:0
    3862:    06 08             	r6 = r0			  ## vm_sfc.c:546:0
    3864:    1f 16             	call -962 <enter_spi_code : 34a4 >			  ## vm_sfc.c:548:5
    3866:    22 05             	r2 = r4.l (u)			  ## vm_sfc.c:550:5
    3868:    03 70             	r3 = 0			  ## vm_sfc.c:550:5
    386a:    07 70             	r7 = 0			  ## vm_sfc.c:550:5
    386c:    60 08             	r0 = r6			  ## vm_sfc.c:550:5
    386e:    51 08             	r1 = r5			  ## vm_sfc.c:550:5
    3870:    e2 16             	call -572 <__norflash_read : 3636 >			  ## vm_sfc.c:550:5
    3872:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3874:    88 f3 58 1b       	call 1062576 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3878:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    387e:    17 f9 23 00       	b[r0 + 35] = r7			  ## vm_sfc.c:222:17
    3882:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    3888:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    388a:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3890:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:322:22
    3892:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:323:22
    3894:    2f 40             	[r0 + 8] = r7			  ## vm_sfc.c:324:22
    3896:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    389a:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:325:26
    389c:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:326:26
    389e:    88 f3 7b 1a       	call 1062134 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    38a2:    40 08             	r0 = r4			  ## vm_sfc.c:553:5
    38a4:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:553:5


flash_addr2cpu_addr:
    38a6:    c1 ff c0 25 00 00 	r1 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:198:0
    38ac:    02 f6 b0 10       	r2 = [r1 + 176]			  ## vm_sfc.c:200:30
    38b0:    01 f6 b4 10       	r1 = [r1 + 180]			  ## vm_sfc.c:202:27
    38b4:    a0 b0             	r0 = r0 - r2			  ## vm_sfc.c:200:12
    38b6:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    38b8:    20 00             	rts			  ## vm_sfc.c:202:5


exit_continue_mode:
    38ba:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:519:0
    38bc:    f8 0b             	sp += -16			  ## vm_sfc.c:519:0
    38be:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:520:29
    38c4:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:520:29
    38c6:    84 fd 40 10       	r1 = uextra(r0, p:8, l:4)			  ## vm_sfc.c:523:9
    38ca:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:523:9
    38d0:    61 e0 14 00       	if (r1 == 6) goto 40 <exit_continue_mode+0x42 : 38fc >			  ## vm_sfc.c:523:9
    38d4:    00 70             	r0 = 0
    38d6:    71 e0 24 10       	if (r1 != 7) goto 72 <exit_continue_mode+0x68 : 3922 >
    38da:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    38dc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    38de:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    38e0:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    38e2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    38e4:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    38e6:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    38e8:    0c 02             	[sp] = r4
    38ea:    f0 7f             	r0 = 255			  ## vm_sfc.c:525:9
    38ec:    fc 15             	call -1032 <spi_writebyte : 34e6 >			  ## vm_sfc.c:525:9
    38ee:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    38f0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    38f2:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    38f4:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    38f8:    2c 02             	[sp+8] = r4
    38fa:    12 18             	goto 36 <exit_continue_mode+0x66 : 3920 >
    38fc:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    38fe:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3900:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    3902:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    3904:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3906:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    3908:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    390a:    3c 02             	[sp+12] = r4
    390c:    f0 7f             	r0 = 255			  ## vm_sfc.c:530:9
    390e:    eb 15             	call -1066 <spi_writebyte : 34e6 >			  ## vm_sfc.c:530:9
    3910:    f0 7f             	r0 = 255			  ## vm_sfc.c:531:9
    3912:    e9 15             	call -1070 <spi_writebyte : 34e6 >			  ## vm_sfc.c:531:9
    3914:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    3916:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3918:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    391a:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    391e:    1c 02             	[sp+4] = r4
    3920:    10 70             	r0 = 1
    3922:    08 0a             	sp += 16
    3924:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:535:5


read_flash_id:
    3926:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:784:0
    3928:    f6 0b             	sp += -20			  ## vm_sfc.c:784:0
    392a:    bc 15             	call -1160 <enter_spi_code : 34a4 >			  ## vm_sfc.c:785:5
    392c:    c6 17             	call -116 <exit_continue_mode : 38ba >			  ## vm_sfc.c:786:21
    392e:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:786:21
    3934:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:57:19
    3936:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    3938:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:57:19
    393a:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:57:19
    393c:    03 08             	r3 = r0			  ## vm_sfc.c:786:21
    393e:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:58:53
    3942:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:58:53
    3944:    a0 70             	r0 = 10			  ## vm_sfc.c:58:53
    3946:    08 02             	[sp] = r0
    3948:    f0 79             	r0 = 159			  ## vm_sfc.c:790:5
    394a:    cd 15             	call -1126 <spi_writebyte : 34e6 >			  ## vm_sfc.c:790:5
    394c:    c4 ff c0 25 00 00 	r4 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:790:5
    3952:    06 70             	r6 = 0			  ## vm_sfc.c:790:5
    3954:    16 f6 9c 40       	[r4 + 156] = r6			  ## vm_sfc.c:791:25
    3958:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:793:34
    395a:    22 16             	call -956 <spi_readbyte : 35a0 >			  ## vm_sfc.c:793:36
    395c:    10 f9 80 70       	b[r7 + 128] = r0			  ## vm_sfc.c:793:34
    3960:    01 f6 9c 40       	r1 = [r4 + 156]			  ## vm_sfc.c:794:29
    3964:    50 b2             	r0 |= r1			  ## vm_sfc.c:794:29
    3966:    00 c2             	r0 = r0 << 8			  ## vm_sfc.c:795:29
    3968:    16 80             	r6 += 1			  ## vm_sfc.c:792:25
    396a:    10 f6 9c 40       	[r4 + 156] = r0			  ## vm_sfc.c:795:29
    396e:    36 e0 f3 1f       	if (r6 != 3) goto -26 <read_flash_id+0x32 : 3958 >			  ## vm_sfc.c:792:5
    3972:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    3974:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3976:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    3978:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:57:19
    397c:    a0 70             	r0 = 10			  ## vm_sfc.c:57:19
    397e:    18 02             	[sp+4] = r0
    3980:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:57:19
    3982:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    3984:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:57:19
    3986:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:57:19
    3988:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:58:53
    398a:    09 4a             	[r5 + 0] = r1			  ## vm_sfc.c:58:53
    398c:    28 02             	[sp+8] = r0
    398e:    b0 74             	r0 = 75			  ## vm_sfc.c:803:5
    3990:    aa 15             	call -1196 <spi_writebyte : 34e6 >			  ## vm_sfc.c:803:5
    3992:    00 70             	r0 = 0			  ## vm_sfc.c:804:5
    3994:    06 70             	r6 = 0			  ## vm_sfc.c:804:5
    3996:    a7 15             	call -1202 <spi_writebyte : 34e6 >			  ## vm_sfc.c:804:5
    3998:    00 70             	r0 = 0			  ## vm_sfc.c:805:5
    399a:    a5 15             	call -1206 <spi_writebyte : 34e6 >			  ## vm_sfc.c:805:5
    399c:    00 70             	r0 = 0			  ## vm_sfc.c:806:5
    399e:    a3 15             	call -1210 <spi_writebyte : 34e6 >			  ## vm_sfc.c:806:5
    39a0:    00 70             	r0 = 0			  ## vm_sfc.c:807:5
    39a2:    a1 15             	call -1214 <spi_writebyte : 34e6 >			  ## vm_sfc.c:807:5
    39a4:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:809:34
    39a6:    fc 15             	call -1032 <spi_readbyte : 35a0 >			  ## vm_sfc.c:809:36
    39a8:    16 80             	r6 += 1			  ## vm_sfc.c:808:19
    39aa:    10 f9 83 70       	b[r7 + 131] = r0			  ## vm_sfc.c:809:34
    39ae:    06 e1 f9 1f       	if (r6 != 16) goto -14 <read_flash_id+0x7E : 39a4 >			  ## vm_sfc.c:808:5
    39b2:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    39b4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    39b6:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    39b8:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:57:19
    39bc:    a0 70             	r0 = 10			  ## vm_sfc.c:57:19
    39be:    48 02             	[sp+16] = r0
    39c0:    05 26             	if (r3 == 0) goto 10 <read_flash_id+0xA6 : 39cc >
    39c2:    c0 a0             	r0 = sp + 12
    39c4:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    39c6:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    39c8:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    39ca:    35 16             	call -918 <__norflash_read : 3636 >			  ## vm_sfc.c:541:5
    39cc:    00 f6 9c 40       	r0 = [r4 + 156]			  ## vm_sfc.c:816:25
    39d0:    00 d2             	r0 = r0 >> 8			  ## vm_sfc.c:816:25
    39d2:    10 f6 9c 40       	[r4 + 156] = r0			  ## vm_sfc.c:816:25
    39d6:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    39d8:    88 f3 a6 1a       	call 1062220 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    39dc:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    39e2:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    39e4:    11 f9 23 00       	b[r0 + 35] = r1			  ## vm_sfc.c:222:17
    39e8:    40 fb af 5a       	r0 = r5 + 44800			  ## vm_sfc.c:310:29
    39ec:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    39ee:    50 fc 50 03       	r0 = r5 + 848
    39f2:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    39f4:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    39f6:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    39f8:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    39fc:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    39fe:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    3a00:    88 f3 ca 19       	call 1061780 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    3a04:    0a 0a             	sp += 20			  ## vm_sfc.c:335:5
    3a06:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:818:1


norflash_write_enable:
    3a08:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:340:0
    3a0a:    fc 0b             	sp += -8			  ## vm_sfc.c:340:0
    3a0c:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:340:0
    3a12:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    3a14:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3a16:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    3a18:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    3a1a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3a1c:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    3a1e:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    3a20:    0c 02             	[sp] = r4
    3a22:    60 70             	r0 = 6			  ## vm_sfc.c:343:5
    3a24:    60 15             	call -1344 <spi_writebyte : 34e6 >			  ## vm_sfc.c:343:5
    3a26:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    3a28:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3a2a:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    3a2c:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    3a30:    1c 02             	[sp+4] = r4
    3a32:    04 0a             	sp += 8
    3a34:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:346:1


norflash_wait_ok:
    3a36:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:384:0
    3a38:    fc 0b             	sp += -8			  ## vm_sfc.c:384:0
    3a3a:    c3 ff 20 a1 07 00 	r3 = 500000 <text_size+0x5D42C : 7a120 >			  ## vm_sfc.c:384:0
    3a40:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:384:0
    3a46:    a5 70             	r5 = 10			  ## vm_sfc.c:384:0
    3a48:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:57:19
    3a4a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3a4c:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:57:19
    3a4e:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:57:19
    3a50:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3a52:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:58:53
    3a54:    0d 02             	[sp] = r5
    3a56:    50 70             	r0 = 5			  ## vm_sfc.c:390:9
    3a58:    46 15             	call -1396 <spi_writebyte : 34e6 >			  ## vm_sfc.c:390:9
    3a5a:    a2 15             	call -1212 <spi_readbyte : 35a0 >			  ## vm_sfc.c:391:19
    3a5c:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:57:19
    3a5e:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    3a60:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:57:19
    3a62:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:57:19
    3a66:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:394:13
    3a6a:    23 b6             	r3 = r3 - r0			  ## vm_sfc.c:394:13
    3a6c:    1d 02             	[sp+4] = r5
    3a6e:    01 26             	if (r3 == 0) goto 2 <norflash_wait_ok+0x3C : 3a72 >
    3a70:    eb 31             	if (r0 != 0) goto -42 <norflash_wait_ok+0x12 : 3a48 >
    3a72:    04 0a             	sp += 8
    3a74:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:404:1


norflash_erase:
    3a76:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm_sfc.c:712:0
    3a78:    fa 0b             	sp += -12			  ## vm_sfc.c:712:0
    3a7a:    f5 07             	r5 = -1			  ## vm_sfc.c:712:0
    3a7c:    00 ff c8 00 0a 00 	if (r0 == 200) goto 20 <norflash_erase+0x20 : 3a96 >			  ## vm_sfc.c:712:0
    3a82:    00 ff cc 00 0b 00 	if (r0 == 204) goto 22 <norflash_erase+0x28 : 3a9e >			  ## vm_sfc.c:712:0
    3a88:    01 ff c9 00 5c 00 	if (r0 != 201) goto 184 <norflash_erase+0xD0 : 3b46 >			  ## vm_sfc.c:712:0
    3a8e:    88 7d             	r8 = 216			  ## vm_sfc.c:712:0
    3a90:    20 fb 01 4b       	r4 = 65536			  ## vm_sfc.c:712:0
    3a94:    07 18             	goto 14 <norflash_erase+0x2E : 3aa4 >			  ## vm_sfc.c:712:0
    3a96:    08 72             	r8 = 32			  ## vm_sfc.c:712:0
    3a98:    04 fb 00 10       	r4 = 4096 <sys_clock_limit+0x50 : 1000 >			  ## vm_sfc.c:712:0
    3a9c:    03 18             	goto 6 <norflash_erase+0x2E : 3aa4 >			  ## vm_sfc.c:712:0
    3a9e:    18 78             	r8 = 129			  ## vm_sfc.c:712:0
    3aa0:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:712:0
    3aa4:    c6 ff c0 25 00 00 	r6 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:712:0
    3aaa:    00 f6 98 60       	r0 = [r6 + 152]			  ## vm_sfc.c:732:35
    3aae:    62 fb 00 49       	r2 = 0 - r4			  ## vm_sfc.c:729:13
    3ab2:    e2 fd 10 72       	r7 = r2 & r1			  ## vm_sfc.c:729:10
    3ab6:    50 b5             	r0 &= r2			  ## vm_sfc.c:732:50
    3ab8:    07 f2 45 00       	if (r7 == r0) goto 138 <norflash_erase+0xD0 : 3b46 >
    3abc:    f3 14             	call -1562 <enter_spi_code : 34a4 >			  ## vm_sfc.c:750:5
    3abe:    fd 16             	call -518 <exit_continue_mode : 38ba >			  ## vm_sfc.c:751:21
    3ac0:    09 08             	r9 = r0			  ## vm_sfc.c:751:21
    3ac2:    a2 17             	call -188 <norflash_write_enable : 3a08 >			  ## vm_sfc.c:753:5
    3ac4:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3aca:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    3acc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3ace:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    3ad0:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:57:19
    3ad2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3ad4:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:58:53
    3ad6:    aa 70             	r10 = 10			  ## vm_sfc.c:58:53
    3ad8:    1a f5 00 00       	[sp] = r10
    3adc:    80 08             	r0 = r8			  ## vm_sfc.c:756:5
    3ade:    03 15             	call -1530 <spi_writebyte : 34e6 >			  ## vm_sfc.c:756:5
    3ae0:    70 08             	r0 = r7			  ## vm_sfc.c:757:5
    3ae2:    15 15             	call -1494 <norflash_send_addr : 350e >			  ## vm_sfc.c:757:5
    3ae4:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    3ae6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3ae8:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    3aea:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:57:19
    3aee:    1a f5 04 00       	[sp+4] = r10
    3af2:    00 f6 b0 60       	r0 = [r6 + 176]			  ## vm_sfc.c:200:30
    3af6:    01 f6 b4 60       	r1 = [r6 + 180]			  ## vm_sfc.c:202:27
    3afa:    20 be             	r0 = r7 - r0			  ## vm_sfc.c:200:12
    3afc:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    3afe:    41 08             	r1 = r4			  ## vm_sfc.c:762:5
    3b00:    88 f3 14 1a       	call 1061928 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:762:5
    3b04:    98 17             	call -208 <norflash_wait_ok : 3a36 >			  ## vm_sfc.c:763:5
    3b06:    09 e0 05 00       	if (r9 == 0) goto 10 <norflash_erase+0x9E : 3b14 >			  ## vm_sfc.c:763:5
    3b0a:    80 a0             	r0 = sp + 8
    3b0c:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    3b0e:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    3b10:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    3b12:    91 15             	call -1246 <__norflash_read : 3636 >			  ## vm_sfc.c:541:5
    3b14:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3b16:    88 f3 07 1a       	call 1061902 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3b1a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    3b20:    05 70             	r5 = 0			  ## vm_sfc.c:222:17
    3b22:    15 f9 23 00       	b[r0 + 35] = r5			  ## vm_sfc.c:222:17
    3b26:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    3b2c:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3b2e:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3b34:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:322:22
    3b36:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:323:22
    3b38:    2d 40             	[r0 + 8] = r5			  ## vm_sfc.c:324:22
    3b3a:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3b3e:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:325:26
    3b40:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:326:26
    3b42:    88 f3 29 19       	call 1061458 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    3b46:    50 08             	r0 = r5			  ## vm_sfc.c:772:1
    3b48:    06 0a             	sp += 12			  ## vm_sfc.c:772:1
    3b4a:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm_sfc.c:772:1


flushinv_dcache_api:
    3b4c:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:776:0
    3b4e:    14 08             	r4 = r1			  ## vm_sfc.c:776:0
    3b50:    05 08             	r5 = r0			  ## vm_sfc.c:776:0
    3b52:    a8 14             	call -1712 <enter_spi_code : 34a4 >			  ## vm_sfc.c:777:5
    3b54:    c0 ff c0 25 00 00 	r0 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:202:27
    3b5a:    01 f6 b0 00       	r1 = [r0 + 176]			  ## vm_sfc.c:200:30
    3b5e:    00 f6 b4 00       	r0 = [r0 + 180]			  ## vm_sfc.c:202:27
    3b62:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:200:12
    3b64:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    3b66:    41 08             	r1 = r4			  ## vm_sfc.c:778:5
    3b68:    88 f3 e0 19       	call 1061824 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:778:5
    3b6c:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3b6e:    88 f3 db 19       	call 1061814 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3b72:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    3b78:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    3b7a:    11 f9 23 00       	b[r0 + 35] = r1			  ## vm_sfc.c:222:17
    3b7e:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    3b84:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3b86:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3b8c:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    3b8e:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    3b90:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    3b92:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3b96:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    3b98:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    3b9a:    15 01             	{rets, r5, r4} = [sp++]			  ## vm_sfc.c:335:5
    3b9c:    c8 f3 fc 18       	goto 1061368 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5


_norflash_write:
    3ba0:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:638:0
    3ba2:    fa 0b             	sp += -12			  ## vm_sfc.c:638:0
    3ba4:    24 08             	r4 = r2			  ## vm_sfc.c:638:0
    3ba6:    15 08             	r5 = r1			  ## vm_sfc.c:638:0
    3ba8:    07 08             	r7 = r0			  ## vm_sfc.c:638:0
    3baa:    4c 28             	if (r4 == 0) goto 152 <_norflash_write+0xA4 : 3c44 >			  ## vm_sfc.c:638:0
    3bac:    7b 14             	call -1802 <enter_spi_code : 34a4 >			  ## vm_sfc.c:644:5
    3bae:    85 16             	call -758 <exit_continue_mode : 38ba >			  ## vm_sfc.c:645:21
    3bb0:    08 08             	r8 = r0			  ## vm_sfc.c:645:21
    3bb2:    2a 17             	call -428 <norflash_write_enable : 3a08 >			  ## vm_sfc.c:647:5
    3bb4:    c6 ff 00 53 1e 00 	r6 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3bba:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:57:19
    3bbc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3bbe:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:57:19
    3bc0:    00 4c             	r0 = [r6 + 0]			  ## vm_sfc.c:57:19
    3bc2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3bc4:    08 4c             	[r6 + 0] = r0			  ## vm_sfc.c:58:53
    3bc6:    a0 70             	r0 = 10			  ## vm_sfc.c:58:53
    3bc8:    08 02             	[sp] = r0
    3bca:    20 70             	r0 = 2			  ## vm_sfc.c:651:5
    3bcc:    8c 14             	call -1768 <spi_writebyte : 34e6 >			  ## vm_sfc.c:651:5
    3bce:    50 08             	r0 = r5			  ## vm_sfc.c:653:5
    3bd0:    9e 14             	call -1732 <norflash_send_addr : 350e >			  ## vm_sfc.c:653:5
    3bd2:    03 70             	r3 = 0			  ## vm_sfc.c:653:5
    3bd4:    00 fa 00 73       	r0 = b[r7+r3] (u)			  ## vm_sfc.c:657:9
    3bd8:    86 14             	call -1780 <spi_writebyte : 34e6 >			  ## vm_sfc.c:657:9
    3bda:    13 80             	r3 += 1			  ## vm_sfc.c:656:5
    3bdc:    34 f2 fa 1f       	if (r4 != r3) goto -12 <_norflash_write+0x34 : 3bd4 >			  ## vm_sfc.c:656:5
    3be0:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:57:19
    3be2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3be4:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:57:19
    3be6:    00 f4 08 69       	[r6 + 0] |= 8			  ## vm_sfc.c:57:19
    3bea:    a0 70             	r0 = 10			  ## vm_sfc.c:57:19
    3bec:    18 02             	[sp+4] = r0
    3bee:    c0 ff c0 25 00 00 	r0 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:202:27
    3bf4:    01 f6 b0 00       	r1 = [r0 + 176]			  ## vm_sfc.c:200:30
    3bf8:    00 f6 b4 00       	r0 = [r0 + 180]			  ## vm_sfc.c:202:27
    3bfc:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:200:12
    3bfe:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    3c00:    41 08             	r1 = r4			  ## vm_sfc.c:662:5
    3c02:    88 f3 93 19       	call 1061670 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:662:5
    3c06:    17 17             	call -466 <norflash_wait_ok : 3a36 >			  ## vm_sfc.c:663:5
    3c08:    08 e0 05 00       	if (r8 == 0) goto 10 <_norflash_write+0x76 : 3c16 >			  ## vm_sfc.c:663:5
    3c0c:    80 a0             	r0 = sp + 8
    3c0e:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    3c10:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    3c12:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    3c14:    10 15             	call -1504 <__norflash_read : 3636 >			  ## vm_sfc.c:541:5
    3c16:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3c18:    88 f3 86 19       	call 1061644 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3c1c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    3c22:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    3c24:    11 f9 23 00       	b[r0 + 35] = r1			  ## vm_sfc.c:222:17
    3c28:    40 fb af 6a       	r0 = r6 + 44800			  ## vm_sfc.c:310:29
    3c2c:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3c2e:    60 fc 50 03       	r0 = r6 + 848
    3c32:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    3c34:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    3c36:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    3c38:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3c3c:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    3c3e:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    3c40:    88 f3 aa 18       	call 1061204 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    3c44:    00 70             	r0 = 0			  ## vm_sfc.c:671:1
    3c46:    06 0a             	sp += 12			  ## vm_sfc.c:671:1
    3c48:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:671:1


__hw_spi_clk_div:
    3c4a:    75 01             	[--sp] = {rets, r5, r4}			  ## clock.c:211:0
    3c4c:    15 08             	r5 = r1			  ## clock.c:211:0
    3c4e:    04 08             	r4 = r0			  ## clock.c:211:0
    3c50:    88 f3 a4 18       	call 1061192 <local_irq_disable : 106d9c >			  ## clock.c:212:5
    3c54:    08 00             	csync			  ## clock.c:212:5
    3c56:    08 00             	csync			  ## clock.c:213:5
    3c58:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >
    3c5e:    01 40             	r1 = [r0 + 0]			  ## clock.c:213:5
    3c60:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x14 : 3c5e >			  ## clock.c:213:5
    3c64:    08 00             	csync			  ## clock.c:214:5
    3c66:    40 fb df 0a       	r0 = r0 + 57088			  ## clock.c:214:5
    3c6a:    01 40             	r1 = [r0 + 0]			  ## clock.c:214:5
    3c6c:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x20 : 3c6a >			  ## clock.c:214:5
    3c70:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3c76:    01 40             	r1 = [r0 + 0]			  ## clock.c:215:20
    3c78:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <__hw_spi_clk_div+0x2C : 3c76 >			  ## clock.c:215:5
    3c7c:    01 40             	r1 = [r0 + 0]			  ## clock.c:216:17
    3c7e:    71 b0             	r1 &= 4294967294			  ## clock.c:216:17
    3c80:    09 40             	[r0 + 0] = r1			  ## clock.c:216:17
    3c82:    1c 40             	[r0 + 4] = r4			  ## clock.c:217:18
    3c84:    01 40             	r1 = [r0 + 0]			  ## clock.c:218:5
    3c86:    22 fd 0f 59       	r2 = r5 & 15			  ## clock.c:218:5
    3c8a:    31 fd f0 1b       	r1 = r1 & 4279238655			  ## clock.c:218:5
    3c8e:    c4 fd a0 12       	r1 <= insert(r2, p:20, l:4)			  ## clock.c:218:5
    3c92:    09 40             	[r0 + 0] = r1			  ## clock.c:218:5
    3c94:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:219:17
    3c98:    c0 ff 6c 32 00 00 	r0 = 12908 <clock_poweroff_sfc_info.0 : 326c >			  ## clock.c:220:38
    3c9e:    0c 50             	h[r0 + 0] = r4			  ## clock.c:220:38
    3ca0:    15 01             	{rets, r5, r4} = [sp++]			  ## clock.c:221:5
    3ca2:    c8 f3 79 18       	goto 1061106 <local_irq_enable : 106d98 >			  ## clock.c:221:5


delay_p11_tmr1_lrc:
    3ca6:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## power_hw.c:198:0
    3cac:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:199:21
    3cb0:    c1 ff ac 0f 1a 00 	r1 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:202:20
    3cb6:    01 62             	r1 = b[r1 + 0] (u)			  ## power_hw.c:202:20
    3cb8:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## power_hw.c:202:18
    3cbc:    21 70             	r1 = 2			  ## power_hw.c:202:18
    3cbe:    22 e0 01 80       	if (r2 > 2) goto 2 <delay_p11_tmr1_lrc+0x1E : 3cc4 >			  ## power_hw.c:202:18
    3cc2:    22 70             	r2 = 2			  ## power_hw.c:204:9
    3cc4:    13 d2             	r3 = r2 >> 8			  ## power_hw.c:208:21
    3cc6:    c0 ff e1 1f 1a 00 	r0 = 1712097 <uECC_vli_cmp_unsafe+0x9AFE5 : 1a1fe1 >			  ## power_hw.c:208:21
    3ccc:    4b 60             	b[r0 + 4] = r3			  ## power_hw.c:208:19
    3cce:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:209:19
    3cd0:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:211:19
    3cd2:    81 75             	r1 = 88			  ## power_hw.c:212:19
    3cd4:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:212:19
    3cd6:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:213:19
    3cd8:    11 b0             	r1 |= 1			  ## power_hw.c:213:19
    3cda:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:213:19
    3cdc:    21 60             	r1 = b[r0 + 2] (u)			  ## power_hw.c:214:19
    3cde:    11 b2             	r1 |= 16			  ## power_hw.c:214:19
    3ce0:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:214:19
    3ce2:    20 fb 1e 1b       	r1 = 1966080			  ## power_hw.c:216:23
    3ce6:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:216:23
    3cea:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## power_hw.c:218:14
    3cee:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <delay_p11_tmr1_lrc+0x44 : 3cea >			  ## power_hw.c:218:5
    3cf2:    01 75             	r1 = 80			  ## power_hw.c:219:19
    3cf4:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:219:19
    3cf6:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:220:19
    3cf8:    20 00             	rts			  ## power_hw.c:221:1


close_flash:
    3cfa:    74 01             	[--sp] = {rets, r4}			  ## pmu_analog.c:891:0
    3cfc:    08 00             	csync			  ## pmu_analog.c:892:5
    3cfe:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## pmu_analog.c:892:5
    3d04:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:892:5
    3d06:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0xA : 3d04 >			  ## pmu_analog.c:892:5
    3d0a:    08 00             	csync			  ## pmu_analog.c:893:5
    3d0c:    40 fb df 0a       	r0 = r0 + 57088			  ## pmu_analog.c:893:5
    3d10:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:893:5
    3d12:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0x16 : 3d10 >			  ## pmu_analog.c:893:5
    3d16:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3d1c:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:895:20
    3d1e:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <close_flash+0x22 : 3d1c >			  ## pmu_analog.c:895:5
    3d22:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:897:17
    3d24:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:897:17
    3d26:    09 40             	[r0 + 0] = r1			  ## pmu_analog.c:897:17
    3d28:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## pmu_analog.c:897:17
    3d2e:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:236:37
    3d30:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:236:37
    3d32:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:236:37
    3d34:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:237:37
    3d36:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:237:37
    3d38:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:237:37
    3d3a:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:238:37
    3d3c:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:238:37
    3d3e:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:238:37
    3d40:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:239:37
    3d42:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:239:37
    3d44:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:239:37
    3d46:    02 f4 01 49       	[r4 + 8] |= 1			  ## pmu_analog.c:240:37
    3d4a:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:243:37
    3d4c:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:243:37
    3d4e:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:243:37
    3d50:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:244:37
    3d52:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:244:37
    3d54:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:244:37
    3d56:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:245:37
    3d58:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:245:37
    3d5a:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:245:37
    3d5c:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:246:37
    3d5e:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:246:37
    3d60:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:246:37
    3d62:    02 f4 02 49       	[r4 + 8] |= 2			  ## pmu_analog.c:247:37
    3d66:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:250:37
    3d68:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:250:37
    3d6a:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:250:37
    3d6c:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:251:37
    3d6e:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:251:37
    3d70:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:251:37
    3d72:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:252:37
    3d74:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:252:37
    3d76:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:252:37
    3d78:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:253:37
    3d7a:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:253:37
    3d7c:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:253:37
    3d7e:    02 f4 04 49       	[r4 + 8] |= 4			  ## pmu_analog.c:254:37
    3d82:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:267:37
    3d84:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:267:37
    3d86:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:267:37
    3d88:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:268:37
    3d8a:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:268:37
    3d8c:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:268:37
    3d8e:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:269:37
    3d90:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:269:37
    3d92:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:269:37
    3d94:    04 f4 08 49       	[r4 + 16] |= 8			  ## pmu_analog.c:270:37
    3d98:    02 f4 08 49       	[r4 + 8] |= 8			  ## pmu_analog.c:271:37
    3d9c:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:177:35
    3d9e:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:177:35
    3da0:    08 48             	[r4 + 0] = r0			  ## pmu_analog.c:177:35
    3da2:    20 48             	r0 = [r4 + 8]			  ## pmu_analog.c:178:35
    3da4:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:178:35
    3da6:    28 48             	[r4 + 8] = r0			  ## pmu_analog.c:178:35
    3da8:    40 76             	r0 = 100			  ## pmu_analog.c:179:5
    3daa:    7d 17             	call -262 <delay_p11_tmr1_lrc : 3ca6 >			  ## pmu_analog.c:179:5
    3dac:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:181:34
    3dae:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:181:34
    3db0:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:181:34
    3db2:    02 f4 10 49       	[r4 + 8] |= 16			  ## pmu_analog.c:183:35
    3db6:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:184:34
    3db8:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:184:34
    3dba:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:184:34
    3dbc:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:185:34
    3dbe:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:185:34
    3dc0:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:185:34
    3dc2:    54 01             	{pc, r4} = [sp++]			  ## pmu_analog.c:902:1


power_set_soft_poweroff_advance:
    3dc4:    c0 ff ac 0f 1a 00 	r0 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:1312:0
    3dca:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1316:53
    3dcc:    c2 ff a0 86 01 00 	r2 = 100000 <_IRQ_MEM_ADDR+0x87A0 : 186a0 >			  ## power_hw.c:1316:51
    3dd2:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## power_hw.c:1316:51
    3dd6:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## power_hw.c:1316:22
    3ddc:    61 b4             	r1 = r2 - r1			  ## power_hw.c:1316:22
    3dde:    0a d2             	r2 = r1 >> 8			  ## power_hw.c:1317:25
    3de0:    2a 60             	b[r0 + 2] = r2			  ## power_hw.c:1317:19
    3de2:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:1318:19
    3de4:    af f3 1c f2       	call -2104264 <power_set_soft_poweroff_prepare : 1e02220 >			  ## power_hw.c:1323:5
    3de8:    88 17             	call -240 <close_flash : 3cfa >			  ## power_hw.c:1325:5
    3dea:    10 70             	r0 = 1			  ## power_hw.c:1325:5
    3dec:    c1 ff d0 18 1a 00 	r1 = 1710288 <uECC_vli_cmp_unsafe+0x9A8D4 : 1a18d0 >			  ## power_hw.c:1325:5
    3df2:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## power_hw.c:1325:5
    3df8:    03 70             	r3 = 0			  ## power_hw.c:1325:5
    3dfa:    84 70             	r4 = 8			  ## power_hw.c:1325:5
    3dfc:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:1330:22
    3dfe:    18 62             	b[r1 + 1] = r0			  ## power_hw.c:1331:22
    3e00:    28 62             	b[r1 + 2] = r0			  ## power_hw.c:1332:22
    3e02:    38 62             	b[r1 + 3] = r0			  ## power_hw.c:1333:22
    3e04:    48 62             	b[r1 + 4] = r0			  ## power_hw.c:1334:22
    3e06:    7b 65             	b[r2 + 23] = r3			  ## power_hw.c:1336:9
    3e08:    14 f9 21 17       	b[r1 + 1825] = r4			  ## power_hw.c:1336:9
    3e0c:    14 f9 2a 17       	b[r1 + 1834] = r4			  ## power_hw.c:1336:9
    3e10:    02 00             	idle			  ## power_hw.c:1338:9
    3e12:    f4 1f             	goto -24 <power_set_soft_poweroff_advance+0x38 : 3dfc >			  ## power_hw.c:1327:5


power_set_soft_poweroff_legacy:
    3e14:    04 08             	r4 = r0			  ## power_hw.c:1244:0
    3e16:    20 70             	r0 = 2			  ## power_hw.c:1245:5
    3e18:    af f3 8d e3       	call -2111718 <power_set_mode : 1e00536 >			  ## power_hw.c:1245:5
    3e1c:    af f3 00 f2       	call -2104320 <power_set_soft_poweroff_prepare : 1e02220 >			  ## power_hw.c:1248:5
    3e20:    6c 17             	call -296 <close_flash : 3cfa >			  ## power_hw.c:1252:5
    3e22:    02 70             	r2 = 0			  ## power_hw.c:1255:17
    3e24:    c0 ff 11 18 1a 00 	r0 = 1710097 <uECC_vli_cmp_unsafe+0x9A815 : 1a1811 >			  ## power_hw.c:1255:17
    3e2a:    5a 60             	b[r0 + 5] = r2			  ## power_hw.c:1255:17
    3e2c:    09 fc 81 00       	r9 = r0 + 129			  ## power_hw.c:1255:17
    3e30:    03 f9 00 90       	r3 = b[r9 + 0] (u)			  ## power_hw.c:1258:5
    3e34:    f3 b1             	r3 &= 4294967287			  ## power_hw.c:1258:5
    3e36:    13 f9 00 90       	b[r9 + 0] = r3			  ## power_hw.c:1258:5
    3e3a:    03 60             	r3 = b[r0 + 0] (u)			  ## power_hw.c:1259:5
    3e3c:    73 b0             	r3 &= 4294967294			  ## power_hw.c:1259:5
    3e3e:    0b 60             	b[r0 + 0] = r3			  ## power_hw.c:1259:5
    3e40:    2a 60             	b[r0 + 2] = r2			  ## power_hw.c:1262:17
    3e42:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:1263:17
    3e44:    02 fc 31 00       	r2 = r0 + 49			  ## power_hw.c:1263:17
    3e48:    14 e0 07 10       	if (r4 != 1) goto 14 <power_set_soft_poweroff_legacy+0x46 : 3e5a >			  ## power_hw.c:1263:17
    3e4c:    03 f9 0b 90       	r3 = b[r9 + 11] (u)			  ## power_hw.c:1267:9
    3e50:    13 b3             	r3 |= 64			  ## power_hw.c:1267:9
    3e52:    13 f9 0b 90       	b[r9 + 11] = r3			  ## power_hw.c:1267:9
    3e56:    43 70             	r3 = 4			  ## power_hw.c:1268:20
    3e58:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1268:20
    3e5a:    13 70             	r3 = 1
    3e5c:    04 fc bf 00       	r4 = r0 + 191
    3e60:    88 7a             	r8 = 168
    3e62:    f6 7f             	r6 = 255
    3e64:    0a fc 56 00       	r10 = r0 + 86
    3e68:    15 70             	r5 = 1
    3e6a:    13 f9 12 90       	b[r9 + 18] = r3			  ## power_hw.c:1276:21
    3e6e:    0b 68             	b[r4 + 0] = r3			  ## power_hw.c:1277:22
    3e70:    1b 68             	b[r4 + 1] = r3			  ## power_hw.c:1278:22
    3e72:    2b 68             	b[r4 + 2] = r3			  ## power_hw.c:1279:22
    3e74:    3b 68             	b[r4 + 3] = r3			  ## power_hw.c:1280:22
    3e76:    4b 68             	b[r4 + 4] = r3			  ## power_hw.c:1281:22
    3e78:    61 60             	r1 = b[r0 + 6] (u)			  ## power_hw.c:1283:21
    3e7a:    71 b1             	r1 &= 4294967291			  ## power_hw.c:1283:21
    3e7c:    69 60             	b[r0 + 6] = r1			  ## power_hw.c:1283:21
    3e7e:    18 f9 00 20       	b[r2 + 0] = r8			  ## power_hw.c:1286:20
    3e82:    6e 65             	b[r2 + 22] = r6			  ## power_hw.c:1289:23
    3e84:    7e 65             	b[r2 + 23] = r6			  ## power_hw.c:1290:23
    3e86:    16 f9 00 a0       	b[r10 + 0] = r6			  ## power_hw.c:1291:25
    3e8a:    16 f9 01 a0       	b[r10 + 1] = r6			  ## power_hw.c:1292:25
    3e8e:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1293:21
    3e90:    11 b3             	r1 |= 64			  ## power_hw.c:1293:21
    3e92:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1293:21
    3e94:    71 64             	r1 = b[r2 + 7] (u)			  ## power_hw.c:1294:21
    3e96:    11 b3             	r1 |= 64			  ## power_hw.c:1294:21
    3e98:    47 05             	r7 = r5.b0 (u)			  ## power_hw.c:1300:32
    3e9a:    79 64             	b[r2 + 7] = r1			  ## power_hw.c:1294:21
    3e9c:    57 e6 05 30       	if (r7 < 101) goto 10 <power_set_soft_poweroff_legacy+0x96 : 3eaa >			  ## power_hw.c:1294:21
    3ea0:    01 f9 0e 90       	r1 = b[r9 + 14] (u)			  ## power_hw.c:1301:13
    3ea4:    11 b2             	r1 |= 16			  ## power_hw.c:1301:13
    3ea6:    11 f9 0e 90       	b[r9 + 14] = r1			  ## power_hw.c:1301:13
    3eaa:    15 80             	r5 += 1			  ## power_hw.c:1249:8
    3eac:    de 1f             	goto -68 <power_set_soft_poweroff_legacy+0x56 : 3e6a >			  ## power_hw.c:1249:8


clock_enter_deepsleep:
    3eae:    20 00             	rts			  ## clock.c:2483:0


clock_exit_deepsleep:
    3eb0:    c0 ff 6c 32 00 00 	r0 = 12908 <clock_poweroff_sfc_info.0 : 326c >			  ## clock.c:2487:0
    3eb6:    00 50             	r0 = h[r0 + 0] (u)			  ## clock.c:2488:20
    3eb8:    c1 ff 04 02 1f 00 	r1 = 2032132 <uECC_vli_cmp_unsafe+0xE9208 : 1f0204 >			  ## clock.c:2488:18
    3ebe:    08 42             	[r1 + 0] = r0			  ## clock.c:2488:18
    3ec0:    20 00             	rts			  ## clock.c:2489:1


tmr_exit_deepsleep:
    3ec2:    c0 ff 50 24 00 00 	r0 = 9296 <tmr_sfr.0 : 2450 >			  ## timer.c:264:0
    3ec8:    01 40             	r1 = [r0 + 0]			  ## timer.c:265:22
    3eca:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:265:22
    3ed0:    19 44             	[r2 + 4] = r1			  ## timer.c:265:20
    3ed2:    11 40             	r1 = [r0 + 4]			  ## timer.c:266:22
    3ed4:    29 44             	[r2 + 8] = r1			  ## timer.c:266:20
    3ed6:    20 40             	r0 = [r0 + 8]			  ## timer.c:267:22
    3ed8:    08 44             	[r2 + 0] = r0			  ## timer.c:267:20
    3eda:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## timer.c:268:20
    3ede:    c2 ff 40 38 e0 01 	r2 = 31471680 <timer1_isr : 1e03840 >			  ## timer.c:269:5
    3ee4:    50 70             	r0 = 5			  ## timer.c:269:5
    3ee6:    11 70             	r1 = 1			  ## timer.c:269:5
    3ee8:    f0 f3 4f 4d       	goto -2057570 <request_irq : 1e0d98a >			  ## timer.c:269:5


__get_lrc_hz:
    3eec:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:56:0
    3ef2:    00 f6 d0 00       	r0 = [r0 + 208]			  ## lrc_hw.c:59:20
    3ef6:    20 00             	rts			  ## lrc_hw.c:59:5


low_power_system_down:
    3ef8:    7f 01             	[--sp] = {rets, r15-r4}			  ## power_hw.c:910:0
    3efa:    cb ff 20 19 1e 00 	r11 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## power_hw.c:910:0
    3f00:    02 f6 00 b0       	r2 = [r11 + 0]			  ## power_hw.c:913:20
    3f04:    08 00             	csync			  ## pmu_analog.c:300:5
    3f06:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## pmu_analog.c:300:5
    3f0c:    c1 ff 00 05 1b 00 	r1 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## pmu_analog.c:300:5
    3f12:    40 fb df 1a       	r0 = r1 + 57088			  ## pmu_analog.c:300:5
    3f16:    bd fc e0 39       	r13 = r11 + 14816			  ## pmu_analog.c:300:5
    3f1a:    4e fb af da       	r14 = r13 + 44800			  ## pmu_analog.c:300:5
    3f1e:    20 f3 51 20       	if ((r2 & 1) != 0) goto 162 <low_power_system_down+0xCC : 3fc4 >			  ## pmu_analog.c:300:5
    3f22:    02 42             	r2 = [r1 + 0]			  ## pmu_analog.c:300:5
    3f24:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <low_power_system_down+0x2A : 3f22 >			  ## pmu_analog.c:300:5
    3f28:    08 00             	csync			  ## pmu_analog.c:301:5
    3f2a:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:301:5
    3f2c:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0x32 : 3f2a >			  ## pmu_analog.c:301:5
    3f30:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:303:20
    3f34:    00 e0 fc bf       	ifs (r0 < 0) goto -8 <low_power_system_down+0x38 : 3f30 >			  ## pmu_analog.c:303:5
    3f38:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:305:17
    3f3c:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:305:17
    3f3e:    10 f6 00 e0       	[r14 + 0] = r0			  ## pmu_analog.c:305:17
    3f42:    08 00             	csync			  ## pmu_analog.c:307:5
    3f44:    00 f6 0c d0       	r0 = [r13 + 12]			  ## pmu_analog.c:310:31
    3f48:    88 69             	b[r4 + 24] = r0			  ## pmu_analog.c:310:19
    3f4a:    00 f6 20 d0       	r0 = [r13 + 32]			  ## pmu_analog.c:311:31
    3f4e:    98 69             	b[r4 + 25] = r0			  ## pmu_analog.c:311:19
    3f50:    00 f6 10 d0       	r0 = [r13 + 16]			  ## pmu_analog.c:312:31
    3f54:    a8 69             	b[r4 + 26] = r0			  ## pmu_analog.c:312:19
    3f56:    00 f6 14 d0       	r0 = [r13 + 20]			  ## pmu_analog.c:313:31
    3f5a:    b8 69             	b[r4 + 27] = r0			  ## pmu_analog.c:313:19
    3f5c:    00 f6 00 d0       	r0 = [r13 + 0]			  ## pmu_analog.c:314:31
    3f60:    c8 69             	b[r4 + 28] = r0			  ## pmu_analog.c:314:19
    3f62:    00 f6 08 d0       	r0 = [r13 + 8]			  ## pmu_analog.c:315:31
    3f66:    d8 69             	b[r4 + 29] = r0			  ## pmu_analog.c:315:19
    3f68:    00 f6 10 d0       	r0 = [r13 + 16]			  ## pmu_analog.c:317:5
    3f6c:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:317:5
    3f70:    10 f6 10 d0       	[r13 + 16] = r0			  ## pmu_analog.c:317:5
    3f74:    00 f6 14 d0       	r0 = [r13 + 20]			  ## pmu_analog.c:318:5
    3f78:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:318:5
    3f7c:    10 f6 14 d0       	[r13 + 20] = r0			  ## pmu_analog.c:318:5
    3f80:    00 f6 00 d0       	r0 = [r13 + 0]			  ## pmu_analog.c:319:5
    3f84:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:319:5
    3f88:    90 b1             	r0 |= 8			  ## pmu_analog.c:319:5
    3f8a:    10 f6 00 d0       	[r13 + 0] = r0			  ## pmu_analog.c:319:5
    3f8e:    00 f6 08 d0       	r0 = [r13 + 8]			  ## pmu_analog.c:320:5
    3f92:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:320:5
    3f96:    00 fd 07 09       	r0 = r0 | 7			  ## pmu_analog.c:320:5
    3f9a:    10 f6 08 d0       	[r13 + 8] = r0			  ## pmu_analog.c:320:5
    3f9e:    00 f6 00 d0       	r0 = [r13 + 0]			  ## pmu_analog.c:321:5
    3fa2:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:321:5
    3fa6:    10 f6 00 d0       	[r13 + 0] = r0			  ## pmu_analog.c:321:5
    3faa:    00 f6 0c d0       	r0 = [r13 + 12]			  ## pmu_analog.c:322:5
    3fae:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:322:5
    3fb2:    10 f6 0c d0       	[r13 + 12] = r0			  ## pmu_analog.c:322:5
    3fb6:    00 f6 20 d0       	r0 = [r13 + 32]			  ## pmu_analog.c:323:5
    3fba:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:323:5
    3fbe:    10 f6 20 d0       	[r13 + 32] = r0			  ## pmu_analog.c:323:5
    3fc2:    0b 18             	goto 22 <low_power_system_down+0xE2 : 3fda >			  ## pmu_analog.c:323:5
    3fc4:    02 42             	r2 = [r1 + 0]			  ## power_hw.c:916:9
    3fc6:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <low_power_system_down+0xCC : 3fc4 >			  ## power_hw.c:916:9
    3fca:    08 00             	csync			  ## power_hw.c:917:9
    3fcc:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:917:9
    3fce:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0xD4 : 3fcc >			  ## power_hw.c:917:9
    3fd2:    00 f6 00 e0       	r0 = [r14 + 0]			  ## power_hw.c:918:24
    3fd6:    00 e0 fc bf       	ifs (r0 < 0) goto -8 <low_power_system_down+0xDA : 3fd2 >			  ## power_hw.c:918:24
    3fda:    c0 ff d2 1f 1a 00 	r0 = 1712082 <uECC_vli_cmp_unsafe+0x9AFD6 : 1a1fd2 >
    3fe0:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:921:27
    3fe2:    00 60             	r0 = b[r0 + 0] (u)			  ## power_hw.c:921:49
    3fe4:    21 fd 20 19       	r1 = r1 & 32			  ## power_hw.c:921:27
    3fe8:    20 fd 80 09       	r0 = r0 & 128			  ## power_hw.c:921:49
    3fec:    50 b2             	r0 |= r1			  ## power_hw.c:921:47
    3fee:    ca ff 80 48 00 00 	r10 = 18560 <tws_sync_channel_end : 4880 >			  ## power_hw.c:921:47
    3ff4:    10 f9 31 a0       	b[r10 + 49] = r0			  ## power_hw.c:921:25
    3ff8:    20 fb 1e 5b       	r5 = 1966080			  ## power_hw.c:921:25
    3ffc:    00 f4 08 59       	[r5 + 0] |= 8			  ## power_hw.c:924:23
    4000:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:824:17
    4004:    cf ff 76 0f 1a 00 	r15 = 1707894 <uECC_vli_cmp_unsafe+0x99F7A : 1a0f76 >			  ## power_hw.c:824:17
    400a:    f8 fc 55 00       	r8 = r15 + 85			  ## power_hw.c:824:17
    400e:    86 fc 26 10       	r6 = r8 + 4134			  ## power_hw.c:824:17
    4012:    10 e0 1b 10       	if (r0 != 1) goto 54 <low_power_system_down+0x154 : 404c >			  ## power_hw.c:824:9
    4016:    00 6c             	r0 = b[r6 + 0] (u)			  ## power_hw.c:825:18
    4018:    78 69             	b[r4 + 23] = r0			  ## power_hw.c:825:16
    401a:    10 70             	r0 = 1			  ## power_hw.c:826:24
    401c:    08 6c             	b[r6 + 0] = r0			  ## power_hw.c:826:24
    401e:    88 f3 bd 16       	call 1060218 <local_irq_disable : 106d9c >			  ## power_hw.c:829:9
    4022:    20 70             	r0 = 2			  ## power_hw.c:829:9
    4024:    10 f9 00 80       	b[r8 + 0] = r0			  ## power_hw.c:829:9
    4028:    00 72             	r0 = 32			  ## power_hw.c:829:9
    402a:    98 6c             	b[r6 + 9] = r0			  ## power_hw.c:829:9
    402c:    00 f4 04 59       	[r5 + 0] |= 4			  ## power_hw.c:829:9
    4030:    08 00             	csync			  ## power_hw.c:829:9
    4032:    30 6c             	r0 = b[r6 + 3] (u)			  ## power_hw.c:829:9
    4034:    06 f3 fc 0f       	if ((r0 & 64) == 0) goto -8 <low_power_system_down+0x138 : 4030 >			  ## power_hw.c:829:9
    4038:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:829:9
    403c:    20 e0 f8 1f       	if (r0 != 2) goto -16 <low_power_system_down+0x138 : 4030 >			  ## power_hw.c:829:9
    4040:    49 08             	r9 = r4
    4042:    00 74             	r0 = 64			  ## power_hw.c:829:9
    4044:    28 6c             	b[r6 + 2] = r0			  ## power_hw.c:829:9
    4046:    88 f3 a7 16       	call 1060174 <local_irq_enable : 106d98 >			  ## power_hw.c:829:9
    404a:    09 18             	goto 18 <low_power_system_down+0x166 : 405e >			  ## power_hw.c:829:9
    404c:    70 6c             	r0 = b[r6 + 7] (u)			  ## power_hw.c:835:9
    404e:    10 b1             	r0 |= 4			  ## power_hw.c:835:9
    4050:    78 6c             	b[r6 + 7] = r0			  ## power_hw.c:835:9
    4052:    00 6c             	r0 = b[r6 + 0] (u)			  ## power_hw.c:838:9
    4054:    49 08             	r9 = r4			  ## power_hw.c:838:9
    4056:    78 69             	b[r4 + 23] = r0			  ## power_hw.c:838:9
    4058:    10 70             	r0 = 1			  ## power_hw.c:838:9
    405a:    08 6c             	b[r6 + 0] = r0			  ## power_hw.c:838:9
    405c:    98 6c             	b[r6 + 9] = r0			  ## power_hw.c:838:9
    405e:    08 00             	csync			  ## power_hw.c:843:5
    4060:    00 f4 04 59       	[r5 + 0] |= 4			  ## power_hw.c:845:23
    4064:    08 00             	csync			  ## power_hw.c:846:5
    4066:    f0 7f             	r0 = 255			  ## power_hw.c:846:5
    4068:    61 fc 8f ff       	r1 = r6 + -113			  ## power_hw.c:846:5
    406c:    e2 7e             	r2 = 238			  ## power_hw.c:846:5
    406e:    b3 7a             	r3 = 171			  ## power_hw.c:846:5
    4070:    e7 70             	r7 = 14			  ## power_hw.c:846:5
    4072:    54 75             	r4 = 85			  ## power_hw.c:846:5
    4074:    55 fc 04 3e       	r5 = r5 + 15876			  ## power_hw.c:846:5
    4078:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:936:20
    407a:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:937:20
    407c:    0b 62             	b[r1 + 0] = r3			  ## power_hw.c:938:20
    407e:    0f 62             	b[r1 + 0] = r7			  ## power_hw.c:939:20
    4080:    0c 62             	b[r1 + 0] = r4			  ## power_hw.c:940:20
    4082:    0c f6 00 50       	r12 = [r5 + 0]			  ## power_hw.c:941:15
    4086:    00 f3 f7 cf       	if ((r12 & 1) == 0) goto -18 <low_power_system_down+0x180 : 4078 >			  ## power_hw.c:941:5
    408a:    30 6c             	r0 = b[r6 + 3] (u)			  ## power_hw.c:952:5
    408c:    00 f3 fd 0f       	if ((r0 & 1) == 0) goto -6 <low_power_system_down+0x192 : 408a >			  ## power_hw.c:952:5
    4090:    17 70             	r7 = 1
    4092:    2f 6c             	b[r6 + 2] = r7			  ## power_hw.c:952:5
    4094:    80 70             	r0 = 8			  ## power_hw.c:952:5
    4096:    08 6c             	b[r6 + 0] = r0			  ## power_hw.c:952:5
    4098:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:955:17
    409c:    95 08             	r5 = r9			  ## power_hw.c:955:17
    409e:    20 fb 1e 9b       	r9 = 1966080			  ## power_hw.c:955:17
    40a2:    10 e0 14 10       	if (r0 != 1) goto 40 <low_power_system_down+0x1D6 : 40ce >			  ## power_hw.c:955:17
    40a6:    88 f3 79 16       	call 1060082 <local_irq_disable : 106d9c >			  ## power_hw.c:957:9
    40aa:    17 f9 00 80       	b[r8 + 0] = r7			  ## power_hw.c:957:9
    40ae:    00 72             	r0 = 32			  ## power_hw.c:957:9
    40b0:    98 6c             	b[r6 + 9] = r0			  ## power_hw.c:957:9
    40b2:    00 f4 04 99       	[r9 + 0] |= 4			  ## power_hw.c:957:9
    40b6:    08 00             	csync			  ## power_hw.c:957:9
    40b8:    30 6c             	r0 = b[r6 + 3] (u)			  ## power_hw.c:957:9
    40ba:    06 f3 fc 0f       	if ((r0 & 64) == 0) goto -8 <low_power_system_down+0x1BE : 40b6 >			  ## power_hw.c:957:9
    40be:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:957:9
    40c2:    10 e0 f8 1f       	if (r0 != 1) goto -16 <low_power_system_down+0x1BE : 40b6 >			  ## power_hw.c:957:9
    40c6:    00 74             	r0 = 64			  ## power_hw.c:957:9
    40c8:    28 6c             	b[r6 + 2] = r0			  ## power_hw.c:957:9
    40ca:    88 f3 65 16       	call 1060042 <local_irq_enable : 106d98 >			  ## power_hw.c:957:9
    40ce:    00 f6 00 b0       	r0 = [r11 + 0]			  ## power_hw.c:961:20
    40d2:    20 f3 2b 00       	if ((r0 & 1) != 0) goto 86 <low_power_system_down+0x234 : 412c >			  ## power_hw.c:961:20
    40d6:    00 f6 1c d0       	r0 = [r13 + 28]			  ## pmu_analog.c:277:20
    40da:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:277:20
    40dc:    10 f6 1c d0       	[r13 + 28] = r0			  ## pmu_analog.c:277:20
    40e0:    00 f6 18 d0       	r0 = [r13 + 24]			  ## pmu_analog.c:278:20
    40e4:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:278:20
    40e6:    10 f6 18 d0       	[r13 + 24] = r0			  ## pmu_analog.c:278:20
    40ea:    c0 6b             	r0 = b[r5 + 28] (u)			  ## pmu_analog.c:280:22
    40ec:    10 f6 00 d0       	[r13 + 0] = r0			  ## pmu_analog.c:280:20
    40f0:    d0 6b             	r0 = b[r5 + 29] (u)			  ## pmu_analog.c:281:22
    40f2:    10 f6 08 d0       	[r13 + 8] = r0			  ## pmu_analog.c:281:20
    40f6:    a0 6b             	r0 = b[r5 + 26] (u)			  ## pmu_analog.c:282:22
    40f8:    10 f6 10 d0       	[r13 + 16] = r0			  ## pmu_analog.c:282:20
    40fc:    b0 6b             	r0 = b[r5 + 27] (u)			  ## pmu_analog.c:283:22
    40fe:    10 f6 14 d0       	[r13 + 20] = r0			  ## pmu_analog.c:283:20
    4102:    80 6b             	r0 = b[r5 + 24] (u)			  ## pmu_analog.c:284:22
    4104:    10 f6 0c d0       	[r13 + 12] = r0			  ## pmu_analog.c:284:20
    4108:    90 6b             	r0 = b[r5 + 25] (u)			  ## pmu_analog.c:285:22
    410a:    10 f6 20 d0       	[r13 + 32] = r0			  ## pmu_analog.c:285:20
    410e:    60 07             	r0 = -10
    4110:    10 80             	r0 += 1			  ## power_hw.c:163:5
    4112:    00 00             	nop			  ## power_hw.c:164:9
    4114:    fd 31             	if (r0 != 0) goto -6 <low_power_system_down+0x218 : 4110 >			  ## power_hw.c:163:5
    4116:    06 f4 10 d9       	[r13 + 24] |= 16			  ## pmu_analog.c:288:20
    411a:    60 07             	r0 = -10
    411c:    10 80             	r0 += 1			  ## power_hw.c:163:5
    411e:    00 00             	nop			  ## power_hw.c:164:9
    4120:    fd 31             	if (r0 != 0) goto -6 <low_power_system_down+0x224 : 411c >			  ## power_hw.c:163:5
    4122:    07 f4 10 d9       	[r13 + 28] |= 16			  ## pmu_analog.c:290:20
    4126:    00 f4 01 e9       	[r14 + 0] |= 1			  ## pmu_analog.c:344:17
    412a:    08 00             	csync			  ## pmu_analog.c:346:5
    412c:    60 fc a4 f8       	r0 = r6 + -1884
    4130:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:968:5
    4132:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:968:5
    4136:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:968:5
    4138:    00 f6 00 b0       	r0 = [r11 + 0]			  ## pmu_analog.c:778:19
    413c:    20 f3 5d 00       	if ((r0 & 1) != 0) goto 186 <low_power_system_down+0x302 : 41fa >			  ## pmu_analog.c:778:19
    4140:    00 f4 01 b9       	[r11 + 0] |= 1			  ## pmu_analog.c:779:27
    4144:    04 f6 48 a1       	r4 = [r10 + 328]			  ## pmu_analog.c:781:57
    4148:    08 f6 00 b0       	r8 = [r11 + 0]			  ## xosc_fsck.c:362:28
    414c:    00 f6 00 b0       	r0 = [r11 + 0]			  ## xosc_fsck.c:363:5
    4150:    01 fb c0 07       	r1 = 1984 <DRIVER_CODE_TOTAL+0x2E : 7c0 >			  ## xosc_fsck.c:363:5
    4154:    50 b2             	r0 |= r1			  ## xosc_fsck.c:363:5
    4156:    10 f6 00 b0       	[r11 + 0] = r0			  ## xosc_fsck.c:363:5
    415a:    06 f6 04 b0       	r6 = [r11 + 4]			  ## xosc_fsck.c:370:28
    415e:    01 f4 10 bb       	[r11 + 4] |= 1048576			  ## xosc_fsck.c:371:5
    4162:    00 f6 00 b0       	r0 = [r11 + 0]			  ## xosc_fsck.c:373:22
    4166:    00 f6 00 b0       	r0 = [r11 + 0]			  ## xosc_fsck.c:375:5
    416a:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## xosc_fsck.c:375:5
    416e:    90 b1             	r0 |= 8			  ## xosc_fsck.c:375:5
    4170:    10 f6 00 b0       	[r11 + 0] = r0			  ## xosc_fsck.c:375:5
    4174:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:377:15
    4178:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:378:15
    417c:    01 f4 08 ba       	[r11 + 4] |= 2048			  ## xosc_fsck.c:380:5
    4180:    01 f4 08 b9       	[r11 + 4] |= 8			  ## xosc_fsck.c:382:5
    4184:    27 fd 07 09       	r7 = r0 & 7			  ## xosc_fsck.c:385:9
    4188:    77 e0 03 00       	if (r7 == 7) goto 6 <low_power_system_down+0x29A : 4192 >			  ## xosc_fsck.c:385:9
    418c:    03 3e             	if (r7 != 0) goto 6 <low_power_system_down+0x29C : 4194 >
    418e:    17 70             	r7 = 1
    4190:    01 18             	goto 2 <low_power_system_down+0x29C : 4194 >
    4192:    67 70             	r7 = 6
    4194:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:397:5
    4198:    71 9e             	r1 = r7 + 7			  ## xosc_fsck.c:397:5
    419a:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:397:5
    419c:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:397:5
    41a0:    11 f6 04 b0       	[r11 + 4] = r1			  ## xosc_fsck.c:397:5
    41a4:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:398:5
    41a8:    7e 15             	call -1284 <delay_p11_tmr1_lrc : 3ca6 >			  ## xosc_fsck.c:398:5
    41aa:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:399:5
    41ae:    30 fd 07 09       	r0 = r0 & 4294967288			  ## xosc_fsck.c:399:5
    41b2:    50 be             	r0 |= r7			  ## xosc_fsck.c:399:5
    41b4:    10 f6 04 b0       	[r11 + 4] = r0			  ## xosc_fsck.c:399:5
    41b8:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:400:5
    41bc:    74 15             	call -1304 <delay_p11_tmr1_lrc : 3ca6 >			  ## xosc_fsck.c:400:5
    41be:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:401:5
    41c2:    11 9e             	r1 = r7 + 1			  ## xosc_fsck.c:401:5
    41c4:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:401:5
    41c6:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:401:5
    41ca:    11 f6 04 b0       	[r11 + 4] = r1			  ## xosc_fsck.c:401:5
    41ce:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:402:5
    41d2:    69 15             	call -1326 <delay_p11_tmr1_lrc : 3ca6 >			  ## xosc_fsck.c:402:5
    41d4:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:406:5
    41d8:    f0 b5             	r0 &= 4294965247			  ## xosc_fsck.c:406:5
    41da:    10 f6 04 b0       	[r11 + 4] = r0			  ## xosc_fsck.c:406:5
    41de:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:408:5
    41e2:    f0 b1             	r0 &= 4294967287			  ## xosc_fsck.c:408:5
    41e4:    10 f6 04 b0       	[r11 + 4] = r0			  ## xosc_fsck.c:408:5
    41e8:    80 7c             	r0 = 200			  ## xosc_fsck.c:409:5
    41ea:    5d 15             	call -1350 <delay_p11_tmr1_lrc : 3ca6 >			  ## xosc_fsck.c:409:5
    41ec:    16 f6 04 b0       	[r11 + 4] = r6			  ## xosc_fsck.c:414:22
    41f0:    02 28             	if (r4 == 0) goto 4 <low_power_system_down+0x2FE : 41f6 >			  ## xosc_fsck.c:414:22
    41f2:    20 05             	r0 = r4.l (u)			  ## xosc_fsck.c:432:9
    41f4:    58 15             	call -1360 <delay_p11_tmr1_lrc : 3ca6 >			  ## xosc_fsck.c:432:9
    41f6:    18 f6 00 b0       	[r11 + 0] = r8			  ## xosc_fsck.c:436:22
    41fa:    94 fc 00 47       	r4 = r9 + 18176
    41fe:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:784:20
    4200:    20 f3 0a 00       	if ((r0 & 1) != 0) goto 20 <low_power_system_down+0x320 : 4218 >			  ## pmu_analog.c:784:20
    4204:    00 f4 02 bc       	[r11 + 0] |= 33554432			  ## pmu_analog.c:785:26
    4208:    00 f4 01 49       	[r4 + 0] |= 1			  ## pmu_analog.c:786:28
    420c:    a0 70             	r0 = 10			  ## pmu_analog.c:788:9
    420e:    4b 15             	call -1386 <delay_p11_tmr1_lrc : 3ca6 >			  ## pmu_analog.c:788:9
    4210:    00 f4 02 49       	[r4 + 0] |= 2			  ## pmu_analog.c:789:28
    4214:    80 7c             	r0 = 200			  ## pmu_analog.c:791:9
    4216:    47 15             	call -1394 <delay_p11_tmr1_lrc : 3ca6 >			  ## pmu_analog.c:791:9
    4218:    00 f6 b8 50       	r0 = [r5 + 184]			  ## pmu_analog.c:797:25
    421c:    10 f6 08 90       	[r9 + 8] = r0			  ## pmu_analog.c:797:23
    4220:    00 f6 10 90       	r0 = [r9 + 16]			  ## pmu_analog.c:798:5
    4224:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## pmu_analog.c:798:5
    4228:    00 fd 06 0a       	r0 = r0 | 1536			  ## pmu_analog.c:798:5
    422c:    10 f6 10 90       	[r9 + 16] = r0			  ## pmu_analog.c:798:5
    4230:    08 00             	csync			  ## pmu_analog.c:799:5
    4232:    c4 ff 00 30 e1 01 	r4 = 31535104 <flash_powerup_ok_flash : 1e13000 >			  ## pmu_analog.c:799:5
    4238:    c5 ff 20 45 00 00 	r5 = 17696 <flash_powerup_ok_ram : 4520 >			  ## pmu_analog.c:799:5
    423e:    01 72             	r1 = 32			  ## power_hw.c:975:9
    4240:    40 08             	r0 = r4			  ## power_hw.c:975:9
    4242:    88 f3 73 16       	call 1060070 <sfc_drop_cache : 106f2c >			  ## power_hw.c:975:9
    4246:    40 08             	r0 = r4			  ## power_hw.c:976:14
    4248:    51 08             	r1 = r5			  ## power_hw.c:976:14
    424a:    88 f3 53 16       	call 1060006 <strcmp : 106ef4 >			  ## power_hw.c:976:14
    424e:    f7 31             	if (r0 != 0) goto -18 <low_power_system_down+0x346 : 423e >			  ## power_hw.c:976:5
    4250:    5f 01             	{pc, r15-r4} = [sp++]			  ## power_hw.c:980:1


delay:
    4252:    03 20             	if (r0 == 0) goto 6 <delay+0x8 : 425a >			  ## uart.c:22:0
    4254:    f0 8f             	r0 += -1			  ## uart.c:23:15
    4256:    00 00             	nop			  ## uart.c:24:9
    4258:    fd 31             	if (r0 != 0) goto -6 <delay+0x2 : 4254 >			  ## uart.c:24:9
    425a:    20 00             	rts			  ## uart.c:26:1


cpu_addr2flash_addr:
    425c:    c1 ff c0 25 00 00 	r1 = 9664 <_sdfile_handl : 25c0 >			  ## vm_sfc.c:207:0
    4262:    02 f6 b0 10       	r2 = [r1 + 176]			  ## vm_sfc.c:210:27
    4266:    01 f6 b4 10       	r1 = [r1 + 180]			  ## vm_sfc.c:210:68
    426a:    20 09             	r0 += r2			  ## vm_sfc.c:210:51
    426c:    60 b0             	r0 = r0 - r1			  ## vm_sfc.c:210:41
    426e:    20 00             	rts			  ## vm_sfc.c:210:5


enter_continue_mode:
    4270:    34 00             	[--sp] = rets			  ## vm_sfc.c:539:0
    4272:    fe 0b             	sp += -4			  ## vm_sfc.c:539:0
    4274:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:539:0
    4276:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    4278:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    427a:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    427c:    bf f3 db f9       	call -3146 <__norflash_read : 3636 >			  ## vm_sfc.c:541:5
    4280:    02 0a             	sp += 4			  ## vm_sfc.c:541:5
    4282:    30 00             	pc = [sp++]			  ## vm_sfc.c:542:1


exit_spi_code:
    4284:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:305:0
    4286:    04 08             	r4 = r0			  ## vm_sfc.c:305:0
    4288:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    428a:    88 f3 4d 16       	call 1059994 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    428e:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    4294:    14 f9 23 00       	b[r0 + 35] = r4			  ## vm_sfc.c:222:17
    4298:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    429e:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    42a0:    00 70             	r0 = 0			  ## vm_sfc.c:310:29
    42a2:    c1 ff 50 56 1e 00 	r1 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    42a8:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:322:22
    42aa:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:323:22
    42ac:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:324:22
    42ae:    11 fc f4 00       	r1 = r1 + 244			  ## vm_sfc.c:324:22
    42b2:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:325:26
    42b4:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:326:26
    42b6:    14 01             	{rets, r4} = [sp++]			  ## vm_sfc.c:335:5
    42b8:    c8 f3 6e 15       	goto 1059548 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5


load_spi_code2cache:
    42bc:    20 00             	rts			  ## vm_sfc.c:235:0


norflash_entry_sleep:
    42be:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:827:0
    42c0:    fa 0b             	sp += -12			  ## vm_sfc.c:827:0
    42c2:    bf f3 ef f8       	call -3618 <enter_spi_code : 34a4 >			  ## vm_sfc.c:828:5
    42c6:    bf f3 f8 fa       	call -2576 <exit_continue_mode : 38ba >			  ## vm_sfc.c:829:21
    42ca:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:829:21
    42d0:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:57:19
    42d2:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    42d4:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:57:19
    42d6:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:57:19
    42d8:    03 08             	r3 = r0			  ## vm_sfc.c:829:21
    42da:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:58:53
    42de:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:58:53
    42e0:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    42e2:    0d 02             	[sp] = r5
    42e4:    90 7b             	r0 = 185			  ## vm_sfc.c:832:5
    42e6:    bf f3 fe f8       	call -3588 <spi_writebyte : 34e6 >			  ## vm_sfc.c:832:5
    42ea:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:57:19
    42ec:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    42ee:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:57:19
    42f0:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:57:19
    42f4:    1d 02             	[sp+4] = r5
    42f6:    06 26             	if (r3 == 0) goto 12 <norflash_entry_sleep+0x46 : 4304 >
    42f8:    80 a0             	r0 = sp + 8
    42fa:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    42fc:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    42fe:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    4300:    bf f3 99 f9       	call -3278 <__norflash_read : 3636 >			  ## vm_sfc.c:541:5
    4304:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    4306:    88 f3 0f 16       	call 1059870 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    430a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    4310:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    4312:    11 f9 23 00       	b[r0 + 35] = r1			  ## vm_sfc.c:222:17
    4316:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:310:29
    431a:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    431c:    40 fc 50 03       	r0 = r4 + 848
    4320:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    4322:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    4324:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    4326:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    432a:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    432c:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    432e:    88 f3 33 15       	call 1059430 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    4332:    06 0a             	sp += 12			  ## vm_sfc.c:335:5
    4334:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:839:1


norflash_exit_sleep:
    4336:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:842:0
    4338:    fa 0b             	sp += -12			  ## vm_sfc.c:842:0
    433a:    bf f3 b3 f8       	call -3738 <enter_spi_code : 34a4 >			  ## vm_sfc.c:843:5
    433e:    bf f3 bc fa       	call -2696 <exit_continue_mode : 38ba >			  ## vm_sfc.c:844:21
    4342:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:844:21
    4348:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:57:19
    434a:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    434c:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:57:19
    434e:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:57:19
    4350:    03 08             	r3 = r0			  ## vm_sfc.c:844:21
    4352:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:58:53
    4356:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:58:53
    4358:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    435a:    0d 02             	[sp] = r5
    435c:    b0 7a             	r0 = 171			  ## vm_sfc.c:846:5
    435e:    bf f3 c2 f8       	call -3708 <spi_writebyte : 34e6 >			  ## vm_sfc.c:846:5
    4362:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:57:19
    4364:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    4366:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:57:19
    4368:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:57:19
    436c:    1d 02             	[sp+4] = r5
    436e:    06 26             	if (r3 == 0) goto 12 <norflash_exit_sleep+0x46 : 437c >
    4370:    80 a0             	r0 = sp + 8
    4372:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    4374:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    4376:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    4378:    bf f3 5d f9       	call -3398 <__norflash_read : 3636 >			  ## vm_sfc.c:541:5
    437c:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    437e:    88 f3 d3 15       	call 1059750 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    4382:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    4388:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    438a:    11 f9 23 00       	b[r0 + 35] = r1			  ## vm_sfc.c:222:17
    438e:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:310:29
    4392:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    4394:    40 fc 50 03       	r0 = r4 + 848
    4398:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    439a:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    439c:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    439e:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    43a2:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    43a4:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    43a6:    88 f3 f7 14       	call 1059310 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    43aa:    06 0a             	sp += 12			  ## vm_sfc.c:335:5
    43ac:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:852:1


norflash_is_busy:
    43ae:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:358:0
    43b0:    fc 0b             	sp += -8			  ## vm_sfc.c:358:0
    43b2:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:358:0
    43b8:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    43ba:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    43bc:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    43be:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    43c0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    43c2:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    43c4:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    43c6:    0c 02             	[sp] = r4
    43c8:    50 70             	r0 = 5			  ## vm_sfc.c:360:5
    43ca:    bf f3 8c f8       	call -3816 <spi_writebyte : 34e6 >			  ## vm_sfc.c:360:5
    43ce:    bf f3 e7 f8       	call -3634 <spi_readbyte : 35a0 >			  ## vm_sfc.c:361:14
    43d2:    21 46             	r1 = [r3 + 8]			  ## vm_sfc.c:57:19
    43d4:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    43d6:    29 46             	[r3 + 8] = r1			  ## vm_sfc.c:57:19
    43d8:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    43dc:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:363:15
    43e0:    1c 02             	[sp+4] = r4			  ## vm_sfc.c:363:15
    43e2:    04 0a             	sp += 8			  ## vm_sfc.c:363:15
    43e4:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:363:5


norflash_resume:
    43e6:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:376:0
    43e8:    fc 0b             	sp += -8			  ## vm_sfc.c:376:0
    43ea:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:376:0
    43f0:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    43f2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    43f4:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    43f6:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    43f8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    43fa:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    43fc:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    43fe:    0c 02             	[sp] = r4
    4400:    a0 77             	r0 = 122			  ## vm_sfc.c:378:5
    4402:    bf f3 70 f8       	call -3872 <spi_writebyte : 34e6 >			  ## vm_sfc.c:378:5
    4406:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    4408:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    440a:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    440c:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    4410:    1c 02             	[sp+4] = r4
    4412:    04 0a             	sp += 8
    4414:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:380:1


norflash_suspend:
    4416:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:368:0
    4418:    fc 0b             	sp += -8			  ## vm_sfc.c:368:0
    441a:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:368:0
    4420:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    4422:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    4424:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    4426:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    4428:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    442a:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    442c:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    442e:    0c 02             	[sp] = r4
    4430:    50 77             	r0 = 117			  ## vm_sfc.c:370:5
    4432:    bf f3 58 f8       	call -3920 <spi_writebyte : 34e6 >			  ## vm_sfc.c:370:5
    4436:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    4438:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    443a:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    443c:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    4440:    1c 02             	[sp+4] = r4
    4442:    04 0a             	sp += 8
    4444:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:372:1


sfc_nop_delay:
    4446:    fe 0b             	sp += -4			  ## vm_sfc.c:48:0
    4448:    08 02             	[sp] = r0			  ## vm_sfc.c:48:0
    444a:    02 0a             	sp += 4			  ## vm_sfc.c:48:0
    444c:    20 00             	rts			  ## vm_sfc.c:52:1


spi_cs:
    444e:    fe 0b             	sp += -4			  ## vm_sfc.c:56:0
    4450:    c1 ff 00 53 1e 00 	r1 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:56:0
    4456:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:57:19
    4458:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:57:19
    445a:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:57:19
    445c:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:57:19
    445e:    03 fd 08 29       	r3 = r2 | 8			  ## vm_sfc.c:58:25
    4462:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:58:53
    4464:    01 20             	if (r0 == 0) goto 2 <spi_cs+0x1A : 4468 >			  ## vm_sfc.c:58:53
    4466:    32 08             	r2 = r3			  ## vm_sfc.c:58:5
    4468:    0a 42             	[r1 + 0] = r2
    446a:    a0 70             	r0 = 10
    446c:    08 02             	[sp] = r0
    446e:    02 0a             	sp += 4
    4470:    20 00             	rts			  ## vm_sfc.c:60:1


spi_wait_ok:
    4472:    08 00             	csync			  ## vm_sfc.c:64:0
    4474:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:65:5
    447a:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:66:23
    447c:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:66:12
    447e:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_wait_ok+0x8 : 447a >			  ## vm_sfc.c:66:5
    4482:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:67:18
    4486:    20 00             	rts			  ## vm_sfc.c:69:1


spi_writebyte_dma:
    4488:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:83:0
    448e:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:84:18
    4490:    08 00             	csync			  ## vm_sfc.c:65:5
    4492:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:66:23
    4494:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:66:12
    4496:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte_dma+0xA : 4492 >			  ## vm_sfc.c:66:5
    449a:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:67:18
    449e:    20 00             	rts			  ## vm_sfc.c:86:1


vm_enter_deepsleep:
    44a0:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:955:0
    44a6:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:956:46
    44a8:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:957:35
    44ae:    11 f6 50 21       	[r2 + 336] = r1			  ## vm_sfc.c:956:35
    44b2:    00 f6 00 01       	r0 = [r0 + 256]			  ## vm_sfc.c:957:46
    44b6:    10 f6 54 21       	[r2 + 340] = r0			  ## vm_sfc.c:957:35
    44ba:    20 00             	rts			  ## vm_sfc.c:958:1


vm_exit_deepsleep:
    44bc:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:962:0
    44c2:    01 f6 50 01       	r1 = [r0 + 336]			  ## vm_sfc.c:963:41
    44c6:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:963:41
    44cc:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:963:18
    44ce:    00 f6 54 01       	r0 = [r0 + 340]			  ## vm_sfc.c:964:41
    44d2:    21 fc 00 01       	r1 = r2 + 256			  ## vm_sfc.c:964:41
    44d6:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:964:18
    44d8:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## vm_sfc.c:965:18
    44dc:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:966:18
    44e0:    c0 ff 64 26 00 00 	r0 = 9828 <flash_info+0x24 : 2664 >			  ## vm_sfc.c:966:18
    44e6:    31 40             	r1 = [r0 + 12]			  ## vm_sfc.c:200:30
    44e8:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:967:60
    44ea:    40 40             	r0 = [r0 + 16]			  ## vm_sfc.c:202:27
    44ec:    61 b4             	r1 = r2 - r1			  ## vm_sfc.c:200:12
    44ee:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    44f0:    c1 ff 1c 02 1f 00 	r1 = 2032156 <uECC_vli_cmp_unsafe+0xE9220 : 1f021c >			  ## vm_sfc.c:202:36
    44f6:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:967:24
    44f8:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1E13EB : 1ffffff >			  ## vm_sfc.c:968:24
    44fe:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:968:24
    4500:    20 00             	rts			  ## vm_sfc.c:970:1
    4502:    00 00             	nop
    4504:    00 00             	nop
    4506:    00 00             	nop
    4508:    00 00             	nop
    450a:    00 00             	nop
    450c:    00 00             	nop
    450e:    00 00             	nop
    4510:    00 00             	nop
    4512:    00 00             	nop
    4514:    00 00             	nop
    4516:    00 00             	nop
    4518:    00 00             	nop
    451a:    00 00             	nop
    451c:    00 00             	nop
    451e:    00 00             	nop


flash_powerup_ok_ram:
    4520:    66 6c             	r6 = b[r6 + 6] (u)
    4522:    61 73             	r1 = 54
    4524:    68 5f             	h[r7 + 44] = r0
    4526:    70 6f             	r0 = b[r7 + 23] (u)
    4528:    77 65             	r7 = b[r2 + 23] (u)
    452a:    72 75             	r2 = 87
    452c:    70 5f             	r0 = h[r7 + 46] (u)
    452e:    6f 6b             	b[r5 + 22] = r7
    4530:    00 00             	nop
    4532:    00 00             	nop
    4534:    00 00             	nop
    4536:    00 00             	nop
    4538:    00 00             	nop
    453a:    00 00             	nop
    453c:    00 00             	nop
    453e:    00 00             	nop


exception_irq_handler:
    4540:    7e f3 2f 38       	[--sp] = {ssp, usp, icfg, psr, rets, retx, rete, reti}			  ## startup.S:157:0
    4544:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## startup.S:158:0
    4548:    28 fb 00 0e       	r0 = sp			  ## startup.S:160:0
    454c:    af f3 cb f9       	call -2100330 <exception_analyze : 1e038e6 >			  ## startup.S:161:0
    4550:    ff 1f             	goto -2 <exception_irq_handler+0x10 : 4550 >			  ## startup.S:164:0
    4552:    00 00             	nop


lmp_conn_for_link:
    4554:    c2 ff 14 31 00 00 	r2 = 12564 <lmp_acl_link : 3114 >			  ## lmp.c:449:0
    455a:    01 08             	r1 = r0			  ## lmp.c:449:0
    455c:    20 08             	r0 = r2			  ## lmp.c:449:0
    455e:    03 f6 c4 00       	r3 = [r0 + 196]			  ## lmp.c:453:19
    4562:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_link+0x20 : 4574 >			  ## lmp.c:453:19
    4566:    00 fc e0 00       	r0 = r0 + 224			  ## lmp.c:452:5
    456a:    23 fc e0 00       	r3 = r2 + 224
    456e:    30 f2 f6 3f       	if (r0 < r3) goto -20 <lmp_conn_for_link+0xA : 455e >
    4572:    00 70             	r0 = 0
    4574:    20 00             	rts			  ## lmp.c:458:1


lmp_conn_for_address:
    4576:    77 01             	[--sp] = {rets, r7-r4}			  ## lmp.c:386:0
    4578:    05 08             	r5 = r0			  ## lmp.c:386:0
    457a:    88 f3 0f 14       	call 1058846 <local_irq_disable : 106d9c >			  ## lmp.c:389:5
    457e:    c6 ff 14 31 00 00 	r6 = 12564 <lmp_acl_link : 3114 >
    4584:    64 08             	r4 = r6
    4586:    47 fc a8 00       	r7 = r4 + 168
    458a:    00 5e             	r0 = h[r7 + 0] (u)			  ## lmp.c:391:26
    458c:    0a 20             	if (r0 == 0) goto 20 <lmp_conn_for_address+0x2C : 45a2 >			  ## lmp.c:391:26
    458e:    70 4e             	r0 = [r7 + 28]			  ## lmp.c:391:42
    4590:    08 20             	if (r0 == 0) goto 16 <lmp_conn_for_address+0x2C : 45a2 >			  ## lmp.c:391:42
    4592:    11 2a             	if (r5 == 0) goto 34 <lmp_conn_for_address+0x40 : 45b6 >
    4594:    00 fc a3 00       	r0 = r0 + 163			  ## lmp.c:396:25
    4598:    62 70             	r2 = 6			  ## lmp.c:396:18
    459a:    51 08             	r1 = r5			  ## lmp.c:396:18
    459c:    88 f3 a6 14       	call 1059148 <memcmp : 106eec >			  ## lmp.c:396:18
    45a0:    0a 20             	if (r0 == 0) goto 20 <lmp_conn_for_address+0x40 : 45b6 >			  ## lmp.c:396:18
    45a2:    74 fc 38 00       	r4 = r7 + 56			  ## lmp.c:390:5
    45a6:    60 fc e0 00       	r0 = r6 + 224
    45aa:    04 f2 ec 3f       	if (r4 < r0) goto -40 <lmp_conn_for_address+0x10 : 4586 >
    45ae:    88 f3 f3 13       	call 1058790 <local_irq_enable : 106d98 >			  ## lmp.c:402:5
    45b2:    04 70             	r4 = 0			  ## lmp.c:402:5
    45b4:    02 18             	goto 4 <lmp_conn_for_address+0x44 : 45ba >
    45b6:    88 f3 ef 13       	call 1058782 <local_irq_enable : 106d98 >
    45ba:    40 08             	r0 = r4			  ## lmp.c:404:1
    45bc:    57 01             	{pc, r7-r4} = [sp++]			  ## lmp.c:404:1
    45be:    00 00             	nop


connection_tx_handler:
    45c0:    7f 01             	[--sp] = {rets, r15-r4}			  ## bredr_link.c:2415:0
    45c2:    f2 0b             	sp += -28			  ## bredr_link.c:2415:0
    45c4:    04 08             	r4 = r0			  ## bredr_link.c:2415:0
    45c6:    47 fc a0 00       	r7 = r4 + 160			  ## bredr_link.c:2415:0
    45ca:    b0 4e             	r0 = [r7 + 44]			  ## bredr_link.c:2419:36
    45cc:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_link.c:2421:8
    45d2:    91 f5 1a 00       	h[sp+26] = r1			  ## bredr_link.c:2421:8
    45d6:    4e 99             	r14 = r4 + 20			  ## bredr_link.c:2421:8
    45d8:    01 f9 18 e0       	r1 = b[r14 + 24] (u)			  ## bredr_link.c:2423:13
    45dc:    20 f3 4a 11       	if ((r1 & 1) != 0) goto 660 <connection_tx_handler+0x2B4 : 4874 >			  ## bredr_link.c:2423:13
    45e0:    11 b0             	r1 |= 1			  ## bredr_link.c:2426:23
    45e2:    11 f9 18 e0       	b[r14 + 24] = r1			  ## bredr_link.c:2426:23
    45e6:    a1 a1             	r1 = sp + 26			  ## bredr_link.c:2426:23
    45e8:    b0 f3 3d b4       	call -2004870 <bredr_frame_get_empty_txbuf_index : 1e1ae66 >			  ## bredr_link.c:2428:5
    45ec:    e0 fc 0d 00       	r0 = r14 + 13
    45f0:    28 02             	[sp+8] = r0
    45f2:    70 fc 40 00       	r0 = r7 + 64
    45f6:    38 02             	[sp+12] = r0
    45f8:    7f fc 38 00       	r15 = r7 + 56
    45fc:    79 fc 50 00       	r9 = r7 + 80
    4600:    0a 70             	r10 = 0
    4602:    0c 70             	r12 = 0
    4604:    5c 02             	[sp+20] = r4
    4606:    1e f5 10 00       	[sp+16] = r14
    460a:    a0 a1             	r0 = sp + 26
    460c:    05 fa 00 0a       	r5 = b[r0+r10] (u)			  ## bredr_link.c:2465:17
    4610:    00 ff ff 50 27 01 	if (r5 == 255) goto 590 <connection_tx_handler+0x2A4 : 4864 >
    4616:    a8 c0             	r0 = r5 << 2			  ## bredr_link.c:2469:19
    4618:    80 fb 00 b9       	r11 = r9 + r0			  ## bredr_link.c:2469:19
    461c:    06 f6 00 b0       	r6 = [r11 + 0]			  ## bredr_link.c:2469:19
    4620:    62 2c             	if (r6 == 0) goto 196 <connection_tx_handler+0x126 : 46e6 >
    4622:    10 70             	r0 = 1			  ## bredr_link.c:2470:47
    4624:    01 2a             	if (r5 == 0) goto 2 <connection_tx_handler+0x68 : 4628 >			  ## bredr_link.c:2470:47
    4626:    00 70             	r0 = 0			  ## bredr_link.c:2470:47
    4628:    a0 f6 00 90       	r0 = [r9+r0<<2]			  ## bredr_link.c:2470:35
    462c:    06 f2 5b 00       	if (r6 == r0) goto 182 <connection_tx_handler+0x126 : 46e6 >			  ## bredr_link.c:2470:35
    4630:    50 5c             	r0 = h[r6 + 10] (u)			  ## bredr_link.c:2475:54
    4632:    61 5c             	r1 = h[r6 + 12] (u)			  ## bredr_link.c:2475:35
    4634:    01 f2 57 10       	if (r1 != r0) goto 174 <connection_tx_handler+0x126 : 46e6 >			  ## bredr_link.c:2475:35
    4638:    00 70             	r0 = 0			  ## bredr_link.c:2477:32
    463a:    10 f6 00 b0       	[r11 + 0] = r0			  ## bredr_link.c:2477:32
    463e:    60 6c             	r0 = b[r6 + 6] (u)			  ## bredr_link.c:2479:26
    4640:    30 e0 0c 10       	if (r0 != 3) goto 24 <connection_tx_handler+0x9C : 465c >			  ## bredr_link.c:2479:26
    4644:    c0 6d             	r0 = b[r6 + 28] (u)			  ## bredr_link.c:2480:30
    4646:    e0 ef 09 30       	if (r0 < 254) goto 18 <connection_tx_handler+0x9C : 465c >			  ## bredr_link.c:2480:30
    464a:    d0 6d             	r0 = b[r6 + 29] (u)			  ## bredr_link.c:2482:25
    464c:    10 e0 06 10       	if (r0 != 1) goto 12 <connection_tx_handler+0x9C : 465c >			  ## bredr_link.c:2482:25
    4650:    f0 6d             	r0 = b[r6 + 31] (u)			  ## bredr_link.c:2483:29
    4652:    b0 e0 03 10       	if (r0 != 11) goto 6 <connection_tx_handler+0x9C : 465c >			  ## bredr_link.c:2483:29
    4656:    b0 4e             	r0 = [r7 + 44]
    4658:    b0 f3 39 b4       	call -2004878 <link_conn_set_ptt : 1e1aece >			  ## bredr_link.c:2484:29
    465c:    51 6c             	r1 = b[r6 + 5] (u)			  ## bredr_link.c:2490:26
    465e:    40 fc 40 00       	r0 = r4 + 64			  ## bredr_link.c:2490:26
    4662:    00 f3 04 10       	if ((r1 & 1) == 0) goto 8 <connection_tx_handler+0xAE : 466e >			  ## bredr_link.c:2490:26
    4666:    a1 61             	r1 = b[r0 + 26] (u)			  ## bredr_link.c:2491:44
    4668:    71 b1             	r1 &= 4294967291			  ## bredr_link.c:2491:44
    466a:    a9 61             	b[r0 + 26] = r1			  ## bredr_link.c:2491:44
    466c:    51 6c             	r1 = b[r6 + 5] (u)			  ## bredr_link.c:2491:44
    466e:    02 f3 09 10       	if ((r1 & 4) == 0) goto 18 <connection_tx_handler+0xC4 : 4684 >
    4672:    11 60             	r1 = b[r0 + 1] (u)			  ## bredr_link.c:2495:33
    4674:    11 b1             	r1 |= 4			  ## bredr_link.c:2495:33
    4676:    19 60             	b[r0 + 1] = r1			  ## bredr_link.c:2495:33
    4678:    c0 ff d5 27 e1 01 	r0 = 31533013 <update_target_end+0x25A5 : 1e127d5 >			  ## bredr_link.c:2496:17
    467e:    b0 f3 73 44       	call -2062106 <puts : 1e0cf68 >			  ## bredr_link.c:2496:17
    4682:    51 6c             	r1 = b[r6 + 5] (u)			  ## bredr_link.c:2496:17
    4684:    03 f3 05 10       	if ((r1 & 8) == 0) goto 10 <connection_tx_handler+0xD2 : 4692 >
    4688:    c0 ff e4 27 e1 01 	r0 = 31533028 <update_target_end+0x25B4 : 1e127e4 >			  ## bredr_link.c:2500:17
    468e:    b0 f3 6b 44       	call -2062122 <puts : 1e0cf68 >			  ## bredr_link.c:2500:17
    4692:    12 6c             	r2 = b[r6 + 1] (u)			  ## bredr_link.c:2503:26
    4694:    02 f3 0c 20       	if ((r2 & 4) == 0) goto 24 <connection_tx_handler+0xF0 : 46b0 >			  ## bredr_link.c:2503:26
    4698:    b0 4e             	r0 = [r7 + 44]
    469a:    81 fd 08 12       	r1 = uextra(r2, p:1, l:1)			  ## bredr_link.c:2504:43
    469e:    22 fd 01 29       	r2 = r2 & 1			  ## bredr_link.c:2504:17
    46a2:    b0 f3 18 b4       	call -2004944 <link_conn_set_encrypt : 1e1aed6 >			  ## bredr_link.c:2504:17
    46a6:    c0 ff f5 27 e1 01 	r0 = 31533045 <update_target_end+0x25C5 : 1e127f5 >			  ## bredr_link.c:2506:17
    46ac:    b0 f3 5c 44       	call -2062152 <puts : 1e0cf68 >			  ## bredr_link.c:2506:17
    46b0:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2509:26
    46b2:    04 f3 08 00       	if ((r0 & 16) == 0) goto 16 <connection_tx_handler+0x106 : 46c6 >			  ## bredr_link.c:2509:26
    46b6:    02 f9 00 41       	r2 = b[r4 + 256] (u)			  ## bredr_link.c:2510:17
    46ba:    01 f6 e0 42       	r1 = [r4 + 736]			  ## bredr_link.c:2510:48
    46be:    40 08             	r0 = r4			  ## bredr_link.c:2510:17
    46c0:    23 02             	r3 = [sp+8]			  ## bredr_link.c:2510:17
    46c2:    b0 f3 8e b5       	call -2004196 <bredr_link_set_afh : 1e1b1e2 >			  ## bredr_link.c:2510:17
    46c6:    40 6c             	r0 = b[r6 + 4] (u)			  ## bredr_link.c:2513:26
    46c8:    01 20             	if (r0 == 0) goto 2 <connection_tx_handler+0x10C : 46cc >			  ## bredr_link.c:2513:26
    46ca:    18 6e             	b[r7 + 1] = r0			  ## bredr_link.c:2514:35
    46cc:    32 6c             	r2 = b[r6 + 3] (u)			  ## bredr_link.c:2517:26
    46ce:    08 24             	if (r2 == 0) goto 16 <connection_tx_handler+0x120 : 46e0 >			  ## bredr_link.c:2517:26
    46d0:    00 f9 18 e0       	r0 = b[r14 + 24] (u)			  ## bredr_link.c:2518:26
    46d4:    22 f3 04 00       	if ((r0 & 4) != 0) goto 8 <connection_tx_handler+0x120 : 46e0 >			  ## bredr_link.c:2518:26
    46d8:    11 70             	r1 = 1			  ## bredr_link.c:2519:21
    46da:    40 08             	r0 = r4			  ## bredr_link.c:2519:21
    46dc:    b0 f3 64 89       	call -2026808 <bredr_link_event : 1e159a8 >			  ## bredr_link.c:2519:21
    46e0:    60 08             	r0 = r6			  ## bredr_link.c:2526:13
    46e2:    b0 f3 79 09       	call -2092302 <bredr_tx_bulk_free : 1e059d8 >			  ## bredr_link.c:2526:13
    46e6:    08 70             	r8 = 0
    46e8:    0c e0 02 10       	if (r12 != 0) goto 4 <connection_tx_handler+0x130 : 46f0 >
    46ec:    0a e0 b7 10       	if (r10 != 0) goto 366 <connection_tx_handler+0x29E : 485e >
    46f0:    f0 08             	r0 = r15			  ## bredr_link.c:2530:18
    46f2:    b0 f3 97 09       	call -2092242 <bredr_tx_bulk_pop : 1e05a24 >			  ## bredr_link.c:2530:18
    46f6:    a1 20             	if (r0 == 0) goto 322 <connection_tx_handler+0x27A : 483a >
    46f8:    08 08             	r8 = r0
    46fa:    00 60             	r0 = b[r0 + 0] (u)			  ## bredr_link.c:2336:13
    46fc:    0d f6 2c 70       	r13 = [r7 + 44]			  ## bredr_link.c:2334:36
    4700:    02 f3 0c 00       	if ((r0 & 4) == 0) goto 24 <connection_tx_handler+0x15C : 471c >
    4704:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## bredr_link.c:2337:35
    4708:    22 fd 01 09       	r2 = r0 & 1			  ## bredr_link.c:2337:9
    470c:    d0 08             	r0 = r13			  ## bredr_link.c:2337:9
    470e:    b0 f3 e2 b3       	call -2005052 <link_conn_set_encrypt : 1e1aed6 >			  ## bredr_link.c:2337:9
    4712:    c0 ff ff 27 e1 01 	r0 = 31533055 <update_target_end+0x25CF : 1e127ff >			  ## bredr_link.c:2338:9
    4718:    b0 f3 26 44       	call -2062260 <puts : 1e0cf68 >			  ## bredr_link.c:2338:9
    471c:    02 f9 02 80       	r2 = b[r8 + 2] (u)			  ## bredr_link.c:2341:13
    4720:    04 24             	if (r2 == 0) goto 8 <connection_tx_handler+0x16A : 472a >			  ## bredr_link.c:2341:13
    4722:    11 70             	r1 = 1			  ## bredr_link.c:2349:13
    4724:    40 08             	r0 = r4			  ## bredr_link.c:2349:13
    4726:    b0 f3 3f 89       	call -2026882 <bredr_link_event : 1e159a8 >			  ## bredr_link.c:2349:13
    472a:    00 f9 06 80       	r0 = b[r8 + 6] (u)
    472e:    01 fc ff ff       	r1 = r0 + -1			  ## bredr_link.c:2353:9
    4732:    21 e0 5a 20       	if (r1 >= 2) goto 180 <connection_tx_handler+0x22A : 47ea >			  ## bredr_link.c:2353:9
    4736:    f6 08             	r6 = r15
    4738:    0c f7 0c 80       	r12 = h[r8 + 12] (u)			  ## bredr_link.c:2364:25
    473c:    04 f7 0a 80       	r4 = h[r8 + 10] (u)			  ## bredr_link.c:2364:15
    4740:    0f f7 16 d0       	r15 = h[r13 + 22] (u)			  ## bredr_frame.h:140:22
    4744:    e0 08             	r0 = r14			  ## bredr_frame.h:140:22
    4746:    7e 08             	r14 = r7			  ## bredr_frame.h:140:22
    4748:    12 6e             	r2 = b[r7 + 1] (u)			  ## bredr_frame.h:140:22
    474a:    83 61             	r3 = b[r0 + 24] (u)			  ## bredr_link.c:2366:62
    474c:    02 34             	if (r2 != 0) goto 4 <connection_tx_handler+0x192 : 4752 >			  ## bredr_link.c:2366:62
    474e:    bf f3 a2 f6       	call -4796 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
    4752:    37 70             	r7 = 3
    4754:    c1 ff fe ac e1 01 	r1 = 31567102 <packet_2M_table : 1e1acfe >
    475a:    23 f3 0c f0       	if ((r15 & 8) != 0) goto 24 <connection_tx_handler+0x1B6 : 4776 >
    475e:    20 fd 04 39       	r0 = r3 & 4			  ## bredr_link.c:2366:62
    4762:    c1 ff b6 ac e1 01 	r1 = 31567030 <packet_1M_table : 1e1acb6 >			  ## bredr_link.c:2366:62
    4768:    03 20             	if (r0 == 0) goto 6 <connection_tx_handler+0x1B0 : 4770 >			  ## bredr_link.c:2366:62
    476a:    c1 ff e6 ac e1 01 	r1 = 31567078 <packet_1M_table_tws : 1e1ace6 >
    4770:    67 70             	r7 = 6
    4772:    01 20             	if (r0 == 0) goto 2 <connection_tx_handler+0x1B6 : 4776 >
    4774:    37 70             	r7 = 3
    4776:    90 fb c0 04       	r0 = r4 - r12			  ## bredr_link.c:2364:23
    477a:    03 70             	r3 = 0
    477c:    14 08             	r4 = r1
    477e:    6f 08             	r15 = r6
    4780:    36 58             	r6 = h[r4 + 6] (u)			  ## bredr_link.c:2283:13
    4782:    26 f2 07 80       	if (r6 > r2) goto 14 <connection_tx_handler+0x1D4 : 4794 >			  ## bredr_link.c:2283:13
    4786:    06 58             	r6 = h[r4 + 0] (u)			  ## bredr_link.c:2287:20
    4788:    06 f2 08 a0       	ifs (r6 >= r0) goto 16 <connection_tx_handler+0x1DC : 479c >			  ## bredr_link.c:2287:20
    478c:    13 80             	r3 += 1			  ## bredr_link.c:2282:31
    478e:    84 80             	r4 += 8			  ## bredr_link.c:2282:19
    4790:    73 f2 f6 3f       	if (r3 < r7) goto -20 <connection_tx_handler+0x1C0 : 4780 >			  ## bredr_link.c:2282:19
    4794:    da c0             	r2 = r3 << 3			  ## bredr_link.c:2292:24
    4796:    21 09             	r1 += r2			  ## bredr_link.c:2292:12
    4798:    14 fc f8 ff       	r4 = r1 + -8			  ## bredr_link.c:2292:12
    479c:    13 58             	r3 = h[r4 + 2] (u)			  ## bredr_link.c:2367:19
    479e:    02 f9 06 80       	r2 = b[r8 + 6] (u)			  ## bredr_link.c:2371:17
    47a2:    01 f7 0c 80       	r1 = h[r8 + 12] (u)			  ## bredr_link.c:2377:53
    47a6:    24 58             	r4 = h[r4 + 4] (u)			  ## bredr_link.c:2378:31
    47a8:    1c 02             	[sp+4] = r4			  ## bredr_link.c:2377:9
    47aa:    24 70             	r4 = 2			  ## bredr_link.c:2377:9
    47ac:    e7 08             	r7 = r14			  ## bredr_link.c:2377:9
    47ae:    01 22             	if (r1 == 0) goto 2 <connection_tx_handler+0x1F2 : 47b2 >			  ## bredr_link.c:2377:9
    47b0:    14 70             	r4 = 1			  ## bredr_link.c:2371:13
    47b2:    0e f5 10 00       	r14 = [sp+16]
    47b6:    22 e0 01 00       	if (r2 == 2) goto 2 <connection_tx_handler+0x1FC : 47bc >
    47ba:    14 70             	r4 = 1			  ## bredr_link.c:2371:13
    47bc:    0c 02             	[sp] = r4			  ## bredr_link.c:2377:9
    47be:    30 f2 01 c0       	ifs (r0 > r3) goto 2 <connection_tx_handler+0x204 : 47c4 >			  ## bredr_link.c:2377:9
    47c2:    03 08             	r3 = r0			  ## bredr_link.c:2367:13
    47c4:    80 fb 10 08       	r0 = r8 + r1			  ## bredr_link.c:2377:51
    47c8:    c2 91             	r2 = r0 + 28			  ## bredr_link.c:2377:51
    47ca:    d0 08             	r0 = r13			  ## bredr_link.c:2377:9
    47cc:    51 08             	r1 = r5			  ## bredr_link.c:2377:9
    47ce:    b0 f3 61 b5       	call -2004286 <__write_reg_txinfo : 1e1b294 >			  ## bredr_link.c:2377:9
    47d2:    00 f7 0c 80       	r0 = h[r8 + 12] (u)			  ## bredr_link.c:2380:20
    47d6:    30 09             	r0 += r3			  ## bredr_link.c:2380:20
    47d8:    10 f7 0c 80       	h[r8 + 12] = r0			  ## bredr_link.c:2380:20
    47dc:    01 f7 0a 80       	r1 = h[r8 + 10] (u)			  ## bredr_link.c:2381:31
    47e0:    20 04             	r0 = r0.l (u)			  ## bredr_link.c:2380:20
    47e2:    54 02             	r4 = [sp+20]			  ## bredr_link.c:2380:20
    47e4:    01 f2 1c 00       	if (r1 == r0) goto 56 <connection_tx_handler+0x260 : 4820 >
    47e8:    32 18             	goto 100 <connection_tx_handler+0x28E : 484e >
    47ea:    30 e0 2e 10       	if (r0 != 3) goto 92 <connection_tx_handler+0x28A : 484a >
    47ee:    01 f9 18 e0       	r1 = b[r14 + 24] (u)			  ## bredr_link.c:2354:17
    47f2:    30 70             	r0 = 3			  ## bredr_link.c:2354:17
    47f4:    02 f3 04 10       	if ((r1 & 4) == 0) goto 8 <connection_tx_handler+0x240 : 4800 >			  ## bredr_link.c:2354:17
    47f8:    bf f3 4d f6       	call -4966 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
    47fc:    00 f9 06 80       	r0 = b[r8 + 6] (u)			  ## cpu.h:148:5
    4800:    03 f7 0a 80       	r3 = h[r8 + 10] (u)			  ## bredr_link.c:2357:52
    4804:    01 f9 07 80       	r1 = b[r8 + 7] (u)			  ## bredr_link.c:2358:31
    4808:    19 02             	[sp+4] = r1			  ## bredr_link.c:2357:9
    480a:    82 fc 1c 00       	r2 = r8 + 28			  ## bredr_link.c:2357:42
    480e:    08 02             	[sp] = r0			  ## bredr_link.c:2357:9
    4810:    d0 08             	r0 = r13			  ## bredr_link.c:2357:9
    4812:    51 08             	r1 = r5			  ## bredr_link.c:2357:9
    4814:    b0 f3 3e b5       	call -2004356 <__write_reg_txinfo : 1e1b294 >			  ## bredr_link.c:2357:9
    4818:    00 f7 0a 80       	r0 = h[r8 + 10] (u)			  ## bredr_link.c:2359:26
    481c:    10 f7 0c 80       	h[r8 + 12] = r0			  ## bredr_link.c:2359:20
    4820:    00 f6 10 80       	r0 = [r8 + 16]
    4824:    01 f6 14 80       	r1 = [r8 + 20]
    4828:    19 40             	[r0 + 4] = r1
    482a:    08 42             	[r1 + 0] = r0
    482c:    80 fc 10 00       	r0 = r8 + 16
    4830:    10 f6 10 80       	[r8 + 16] = r0
    4834:    10 f6 14 80       	[r8 + 20] = r0
    4838:    0a 18             	goto 20 <connection_tx_handler+0x28E : 484e >
    483a:    00 f9 03 e0       	r0 = b[r14 + 3] (u)			  ## bredr_link.c:2536:32
    483e:    0f 20             	if (r0 == 0) goto 30 <connection_tx_handler+0x29E : 485e >
    4840:    30 02             	r0 = [sp+12]			  ## bredr_link.c:2533:26
    4842:    b0 f3 ef 08       	call -2092578 <bredr_tx_bulk_pop : 1e05a24 >			  ## bredr_link.c:2533:26
    4846:    58 31             	if (r0 != 0) goto -336 <connection_tx_handler+0x138 : 46f8 >
    4848:    0a 18             	goto 20 <connection_tx_handler+0x29E : 485e >
    484a:    bf f3 24 f6       	call -5048 <p33_soft_reset : 3496 >			  ## cpu.h:148:5
    484e:    88 f3 a5 12       	call 1058122 <local_irq_disable : 106d9c >			  ## bredr_link.c:2391:5
    4852:    d0 08             	r0 = r13			  ## bredr_link.c:2395:5
    4854:    51 08             	r1 = r5			  ## bredr_link.c:2395:5
    4856:    b0 f3 3c b5       	call -2004360 <__clean_reg_txempty : 1e1b2d2 >			  ## bredr_link.c:2395:5
    485a:    88 f3 9d 12       	call 1058106 <local_irq_enable : 106d98 >			  ## bredr_link.c:2396:5
    485e:    18 f6 00 b0       	[r11 + 0] = r8			  ## bredr_link.c:2548:28
    4862:    8c 08             	r12 = r8			  ## bredr_link.c:2548:28
    4864:    1a 80             	r10 += 1			  ## bredr_link.c:2464:25
    4866:    2a e0 d0 1e       	if (r10 != 2) goto -608 <connection_tx_handler+0x4A : 460a >
    486a:    00 f9 18 e0       	r0 = b[r14 + 24] (u)
    486e:    70 b0             	r0 &= 4294967294
    4870:    10 f9 18 e0       	b[r14 + 24] = r0
    4874:    0e 0a             	sp += 28
    4876:    5f 01             	{pc, r15-r4} = [sp++]			  ## bredr_link.c:2552:1


tws_sync_call_end:
    4878:    44 32             	if (r1 != 0) goto 136 <tws_sync_channel_end+0x82 : 4902 >
    487a:    41 43             	r1 = [r1 + 80]
    487c:    3c ac             	r12 = sp + 195
    487e:    e1 01             	[--sp] = {psr, reti}

Disassembly of section .nv_bss:
nvbss_begin:
    4880:    00 00 00 00     "\0\0\0\0"
    4884:    00 00 00 00     "\0\0\0\0"
    4888:    00 00 00 00     "\0\0\0\0"
    488c:    00 00 00 00     "\0\0\0\0"
    4890:    00 00 00 00     "\0\0\0\0"
    4894:    00 00 00 00     "\0\0\0\0"
    4898:    00 00 00 00     "\0\0\0\0"
    489c:    00 00 00 00     "\0\0\0\0"
    48a0:    00 00 00 00     "\0\0\0\0"
    48a4:    00 00 00 00     "\0\0\0\0"
    48a8:    00 00 00 00     "\0\0\0\0"
    48ac:    00 00 00 00     "\0\0\0\0"
    48b0:    00 00 00 00     "\0\0\0\0"
    48b4:    00 00 00 00     "\0\0\0\0"
    48b8:    00 00 00 00     "\0\0\0\0"
    48bc:    00 00 00 00     "\0\0\0\0"
    48c0:    00 00 00 00     "\0\0\0\0"
    48c4:    00 00 00 00     "\0\0\0\0"
    48c8:    00 00 00 00     "\0\0\0\0"
    48cc:    00 00 00 00     "\0\0\0\0"
    48d0:    00 00 00 00     "\0\0\0\0"
    48d4:    00 00 00 00     "\0\0\0\0"
    48d8:    00 00 00 00     "\0\0\0\0"
    48dc:    00 00 00 00     "\0\0\0\0"
    48e0:    00 00 00 00     "\0\0\0\0"
    48e4:    00 00 00 00     "\0\0\0\0"
    48e8:    00 00 00 00     "\0\0\0\0"
    48ec:    00 00 00 00     "\0\0\0\0"
    48f0:    00 00 00 00     "\0\0\0\0"
    48f4:    00 00 00 00     "\0\0\0\0"
    48f8:    00 00 00 00     "\0\0\0\0"
    48fc:    00 00 00 00     "\0\0\0\0"
    4900:    00 00 00 00     "\0\0\0\0"
    4904:    00 00 00 00     "\0\0\0\0"
    4908:    00 00 00 00     "\0\0\0\0"
    490c:    00 00 00 00     "\0\0\0\0"
    4910:    00 00 00 00     "\0\0\0\0"
    4914:    00 00 00 00     "\0\0\0\0"
    4918:    00 00 00 00     "\0\0\0\0"
    491c:    00 00 00 00     "\0\0\0\0"
    4920:    00 00 00 00     "\0\0\0\0"
    4924:    00 00 00 00     "\0\0\0\0"
    4928:    00 00 00 00     "\0\0\0\0"
    492c:    00 00 00 00     "\0\0\0\0"
    4930:    00 00 00 00     "\0\0\0\0"
    4934:    00 00 00 00     "\0\0\0\0"
    4938:    00 00 00 00     "\0\0\0\0"
    493c:    00 00 00 00     "\0\0\0\0"
    4940:    00 00 00 00     "\0\0\0\0"
    4944:    00 00 00 00     "\0\0\0\0"
    4948:    00 00 00 00     "\0\0\0\0"
    494c:    00 00 00 00     "\0\0\0\0"
    4950:    00 00 00 00     "\0\0\0\0"
    4954:    00 00 00 00     "\0\0\0\0"
    4958:    00 00 00 00     "\0\0\0\0"
    495c:    00 00 00 00     "\0\0\0\0"
    4960:    00 00 00 00     "\0\0\0\0"
    4964:    00 00 00 00     "\0\0\0\0"
    4968:    00 00 00 00     "\0\0\0\0"
    496c:    00 00 00 00     "\0\0\0\0"
    4970:    00 00 00 00     "\0\0\0\0"
    4974:    00 00 00 00     "\0\0\0\0"
    4978:    00 00 00 00     "\0\0\0\0"
    497c:    00 00 00 00     "\0\0\0\0"
    4980:    00 00 00 00     "\0\0\0\0"
    4984:    00 00 00 00     "\0\0\0\0"
    4988:    00 00 00 00     "\0\0\0\0"
    498c:    00 00 00 00     "\0\0\0\0"
    4990:    00 00 00 00     "\0\0\0\0"
    4994:    00 00 00 00     "\0\0\0\0"
    4998:    00 00 00 00     "\0\0\0\0"
    499c:    00 00 00 00     "\0\0\0\0"
    49a0:    00 00 00 00     "\0\0\0\0"
    49a4:    00 00 00 00     "\0\0\0\0"
    49a8:    00 00 00 00     "\0\0\0\0"
    49ac:    00 00 00 00     "\0\0\0\0"
    49b0:    00 00 00 00     "\0\0\0\0"
    49b4:    00 00 00 00     "\0\0\0\0"
    49b8:    00 00 00 00     "\0\0\0\0"
    49bc:    00 00 00 00     "\0\0\0\0"
    49c0:    00 00 00 00     "\0\0\0\0"
    49c4:    00 00 00 00     "\0\0\0\0"
    49c8:    00 00 00 00     "\0\0\0\0"
    49cc:    00 00 00 00     "\0\0\0\0"
    49d0:    00 00 00 00     "\0\0\0\0"
    49d4:    00 00 00 00     "\0\0\0\0"
    49d8:    00 00 00 00     "\0\0\0\0"
    49dc:    00 00 00 00     "\0\0\0\0"
    49e0:    00 00 00 00     "\0\0\0\0"
Disassembly of section .ram0_empty0:
.ram0_empty0:
Disassembly of section .debug_str:
.debug_str:
Disassembly of section .debug_loc:
.debug_loc:
Disassembly of section .debug_abbrev:
.debug_abbrev:
Disassembly of section .debug_info:
.debug_info:
Disassembly of section .debug_ranges:
.debug_ranges:
Disassembly of section .debug_macinfo:
.debug_macinfo:
Disassembly of section .debug_pubnames:
.debug_pubnames:
Disassembly of section .debug_pubtypes:
.debug_pubtypes:
Disassembly of section .debug_frame:
.debug_frame:
Disassembly of section .debug_line:
.debug_line:
Disassembly of section .debug_aranges:
.debug_aranges:
Disassembly of section .shstrtab:
.shstrtab:
Disassembly of section .symtab:
.symtab:
Disassembly of section .strtab:
.strtab:
